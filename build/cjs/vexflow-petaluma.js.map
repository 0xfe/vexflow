{"version":3,"file":"vexflow-petaluma.js","mappings":";;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAa,IAAID,IAEjBD,EAAU,IAAIC,IARhB,CASsB,oBAAXK,OAAyBA,OAA+B,oBAAfC,WAA6BA,WAAaC,MAAO,WACrG,Y,aCTA,IAAIC,EAAsB,CCA1BA,EAAwB,CAACP,EAASQ,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAEV,EAASS,IAC5EE,OAAOC,eAAeZ,EAASS,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,OCJ3EF,EAAoBQ,EAAI,WACvB,GAA0B,iBAAfV,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIU,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,iBAAXb,OAAqB,OAAOA,QALjB,GCAxBG,EAAoBG,EAAI,CAACQ,EAAKC,IAAUR,OAAOS,UAAUC,eAAeC,KAAKJ,EAAKC,G,iCCI3E,MAAMI,UAAqBC,MAC9BC,YAAYC,EAAMC,EAAU,IACxBC,MAAM,kBAAoBF,EAAO,KAAOC,GACxCrB,KAAKoB,KAAOA,GAKb,SAASG,IACZ,MAA0B,oBAAfxB,WACAA,WAES,oBAATyB,KACAA,KAEW,oBAAX1B,OACAA,YAEW,IAAX,EAAAW,EACA,EAAAA,EAEJC,SAAS,cAATA,GAMJ,SAASe,EAAQC,EAAGN,EAAO,YAAaC,EAAU,IACrD,QAAUM,IAAND,EACA,MAAM,IAAIT,EAAaG,EAAMC,GAEjC,OAAOK,EAIJ,SAASE,EAAIC,KAAUC,GAC1B,IAAKA,EACD,OACJ,MAAMC,EAAOC,MAAMlB,UAAUmB,MAAMjB,KAAKc,GAAMI,KAAK,KACnDX,IAAeY,QAAQP,IAAIC,EAAQ,KAAOE,GAIvC,SAASK,KAAQN,GACpB,MAAMC,EAAOD,EAAKI,KAAK,KACjBG,EAAM,IAAInB,MAChBK,IAAeY,QAAQP,IAAI,YAAaG,EAAMM,EAAIC,OAO/C,SAASC,EAAQC,EAAGC,GACvB,IAAIC,EAAWD,GAAKD,EAAIC,GAAK,EALjC,IAAgBf,EAAGiB,EASf,OAHID,EAAW,EAAI,IACfA,IAPQhB,EAOqB,GAAXgB,IAPPC,EAOsB,IANrBA,EAAI,EAAIC,SAAS,GAAGlB,EAAIiB,EAAK,IAAMA,EAAIA,EAAIC,SAAS,GAAGlB,EAAIiB,EAAK,IAAMA,GAM5C,IAEnCD,EAMJ,SAASG,EAAOC,GACnB,MAAO,MAAMA,IAKV,SAASC,EAAeP,GAK3B,OAJAA,GAAS,EAAIQ,KAAKC,IACV,IACJT,GAAK,EAAIQ,KAAKC,IAEXT,ECxEJ,MAAMU,EAET/B,YAAYgC,EAAWC,GACnBpD,KAAKmD,UAAY,EACjBnD,KAAKoD,YAAc,EACnBpD,KAAKqD,IAAIF,EAAWC,GAEbE,sBACP,MAAO,WAMXC,WAAWf,EAAGC,GACV,GAAiB,iBAAND,GAAkBgB,OAAOC,MAAMjB,IAAmB,iBAANC,GAAkBe,OAAOC,MAAMhB,GAClF,MAAM,IAAIxB,EAAa,cAAe,oBAAoBuB,MAAMC,KAEpE,IAAIiB,EACJ,KAAa,IAANjB,GACHiB,EAAIjB,EACJA,EAAID,EAAIC,EACRD,EAAIkB,EAER,OAAOlB,EAGXe,WAAWf,EAAGC,GACV,OAAQD,EAAIC,EAAKS,EAASS,IAAInB,EAAGC,GAGrCc,YAAYzB,GACR,OAAoB,IAAhBA,EAAK8B,OACE,EAEc,IAAhB9B,EAAK8B,OACH9B,EAAK,GAES,IAAhBA,EAAK8B,OACHV,EAASW,IAAI/B,EAAK,GAAIA,EAAK,IAK3BoB,EAASW,IAAI/B,EAAKgC,QAASZ,EAASa,KAAKjC,IAIxDuB,IAAIF,EAAY,EAAGC,EAAc,GAG7B,OAFApD,KAAKmD,UAAYA,EACjBnD,KAAKoD,YAAcA,EACZpD,KAGXgE,QACI,OAAOhE,KAAKmD,UAAYnD,KAAKoD,YAGjCa,WACI,IAAIC,EAAIlE,KAAKmD,UACTgB,EAAInE,KAAKoD,YACb,MAAMgB,EAAMlB,EAASS,IAAIO,EAAGC,GAO5B,OANAD,GAAKE,EACLD,GAAKC,EACDD,EAAI,IACJA,GAAKA,EACLD,GAAKA,GAEFlE,KAAKqD,IAAIa,EAAGC,GAGvBE,IAAIC,EAAS,EAAGC,EAAS,GACrB,MAAOC,EAAgBC,GAAoBC,EAA2BJ,EAAQC,GACxEI,EAAMzB,EAASW,IAAI7D,KAAKoD,YAAaqB,GACrCjC,EAAImC,EAAM3E,KAAKoD,YACfX,EAAIkC,EAAMF,EACVP,EAAIlE,KAAKmD,UAAYX,EAAIgC,EAAiB/B,EAChD,OAAOzC,KAAKqD,IAAIa,EAAGS,GAGvBC,SAASN,EAAS,EAAGC,EAAS,GAC1B,MAAOC,EAAgBC,GAAoBC,EAA2BJ,EAAQC,GACxEI,EAAMzB,EAASW,IAAI7D,KAAKoD,YAAaqB,GACrCjC,EAAImC,EAAM3E,KAAKoD,YACfX,EAAIkC,EAAMF,EACVP,EAAIlE,KAAKmD,UAAYX,EAAIgC,EAAiB/B,EAChD,OAAOzC,KAAKqD,IAAIa,EAAGS,GAGvBE,SAASP,EAAS,EAAGC,EAAS,GAC1B,MAAOC,EAAgBC,GAAoBC,EAA2BJ,EAAQC,GAC9E,OAAOvE,KAAKqD,IAAIrD,KAAKmD,UAAYqB,EAAgBxE,KAAKoD,YAAcqB,GAGxEK,OAAOR,EAAS,EAAGC,EAAS,GACxB,MAAOC,EAAgBC,GAAoBC,EAA2BJ,EAAQC,GAC9E,OAAOvE,KAAKqD,IAAIrD,KAAKmD,UAAYsB,EAAkBzE,KAAKoD,YAAcoB,GAG1EO,OAAOC,GACH,MAAMxC,EAAIU,EAAS+B,kBAAkBC,KAAKF,GAASf,WAC7CxB,EAAIS,EAASiC,kBAAkBD,KAAKlF,MAAMiE,WAChD,OAAOzB,EAAEW,YAAcV,EAAEU,WAAaX,EAAEY,cAAgBX,EAAEW,YAG9DgC,YAAYJ,GACR,MAAMxC,EAAIU,EAASiC,kBAAkBD,KAAKlF,MAE1C,OADAwC,EAAEoC,SAASI,GACJxC,EAAEW,UAAY,EAGzBkC,kBAAkBL,GACd,MAAMxC,EAAIU,EAASiC,kBAAkBD,KAAKlF,MAE1C,OADAwC,EAAEoC,SAASI,GACJxC,EAAEW,WAAa,EAG1BmC,SAASN,GACL,OAAQhF,KAAKqF,kBAAkBL,GAGnCO,eAAeP,GACX,OAAQhF,KAAKoF,YAAYJ,GAG7BQ,QACI,OAAO,IAAItC,EAASlD,KAAKmD,UAAWnD,KAAKoD,aAG7C8B,KAAKO,GACD,MAAqB,iBAAVA,EACAzF,KAAKqD,IAAIoC,EAAO,GAGhBzF,KAAKqD,IAAIoC,EAAMtC,UAAWsC,EAAMrC,aAI/CsC,WACI,OAAO1C,KAAK2C,MAAM3F,KAAKmD,UAAYnD,KAAKoD,aAG5CwC,YACI,OAAO5F,KAAKmD,UAAYnD,KAAKoD,YAGjCyC,UAGI,OAFA7F,KAAKoD,YAAcJ,KAAK8C,IAAI9F,KAAKoD,aACjCpD,KAAKmD,UAAYH,KAAK8C,IAAI9F,KAAKmD,WACxBnD,KAGX+F,WACI,MAAO,GAAG/F,KAAKmD,aAAanD,KAAKoD,cAGrC4C,qBACI,OAAO9C,EAAS+C,oBAAoBf,KAAKlF,MAAMiE,WAAW8B,WAG9DG,gBACI,IAAIC,EAAI,GACR,MAAMC,EAAIpG,KAAK0F,WACTW,EAAInD,EAAS+C,oBAAoBf,KAAKlF,MAgB5C,OAfIoG,EAAI,GACJC,EAAER,UAEI,IAANO,GACAD,GAAKC,EACe,IAAhBC,EAAElD,YACFgD,GAAK,IAAIE,EAAEL,yBAIfG,EADqB,IAAhBE,EAAElD,UACH,IAGAkD,EAAEL,qBAEHG,EAGXG,MAAMC,GACF,MAAMC,EAAID,EAAIE,MAAM,KACd9D,EAAIC,SAAS4D,EAAE,GAAI,IACnBrC,EAAIqC,EAAE,GAAK5D,SAAS4D,EAAE,GAAI,IAAM,EACtC,OAAOxG,KAAKqD,IAAIV,EAAGwB,IAQ3B,SAASO,EAA2B/B,EAAGwB,EAAI,GACvC,MAAiB,iBAANxB,EAEA,CAACA,EAAGwB,GAIJ,CAACxB,EAAEQ,UAAWR,EAAES,aAX/BF,EAAS+B,kBAAoB,IAAI/B,EACjCA,EAASiC,kBAAoB,IAAIjC,EACjCA,EAAS+C,oBAAsB,IAAI/C,ECrM5B,MAAMwD,EACTvF,YAAYO,EAAGiF,EAAGC,EAAGC,GACjB7G,KAAK0B,EAAIA,EACT1B,KAAK2G,EAAIA,EACT3G,KAAK4G,EAAIA,EACT5G,KAAK6G,EAAIA,EAKbtD,YAAYuD,GACR,OAAO,IAAIJ,EAAYI,EAAKpF,EAAGoF,EAAKH,EAAGG,EAAKF,EAAGE,EAAKD,GAGxDE,OACI,OAAO/G,KAAK0B,EAGhBsF,OACI,OAAOhH,KAAK2G,EAGhBM,OACI,OAAOjH,KAAK4G,EAGhBM,OACI,OAAOlH,KAAK6G,EAGhBM,KAAKzF,GAED,OADA1B,KAAK0B,EAAIA,EACF1B,KAGXoH,KAAKT,GAED,OADA3G,KAAK2G,EAAIA,EACF3G,KAGXqH,KAAKT,GAED,OADA5G,KAAK4G,EAAIA,EACF5G,KAGXsH,KAAKT,GAED,OADA7G,KAAK6G,EAAIA,EACF7G,KAGXuH,KAAK7F,EAAGiF,GAGJ,OAFA3G,KAAK0B,GAAKA,EACV1B,KAAK2G,GAAKA,EACH3G,KAGXwF,QACI,OAAOkB,EAAYxB,KAAKlF,MAM5BwH,UAAUC,GACN,MAAMX,EAAOW,EACPC,EAAQ1H,KAAK0B,EAAIoF,EAAKpF,EAAI1B,KAAK0B,EAAIoF,EAAKpF,EACxCiG,EAAQ3H,KAAK2G,EAAIG,EAAKH,EAAI3G,KAAK2G,EAAIG,EAAKH,EACxCiB,EAAQ5E,KAAK6E,IAAI7H,KAAK0B,EAAI1B,KAAK4G,EAAGE,EAAKpF,EAAIoF,EAAKF,GAAKc,EACrDI,EAAQ9E,KAAK6E,IAAI7H,KAAK2G,EAAI3G,KAAK6G,EAAGC,EAAKH,EAAIG,EAAKD,GAAKc,EAK3D,OAJA3H,KAAK0B,EAAIgG,EACT1H,KAAK2G,EAAIgB,EACT3H,KAAK4G,EAAIgB,EACT5H,KAAK6G,EAAIiB,EACF9H,MChER,MAAM+H,EACT5G,cACInB,KAAKgI,GAAKxE,OAAOyE,IACjBjI,KAAKkI,GAAK1E,OAAOyE,IACjBjI,KAAKmI,GAAK3E,OAAOyE,IACjBjI,KAAKoI,GAAK5E,OAAOyE,IAGrBI,QACI,OAAOrI,KAAKgI,GAGhBM,QACI,OAAOtI,KAAKkI,GAGhBK,QACI,OAAOvI,KAAKmI,GAAKnI,KAAKgI,GAG1BQ,SACI,OAAOxI,KAAKoI,GAAKpI,KAAKkI,GAG1BO,SAAS/G,EAAGiF,IACJlD,MAAMzD,KAAKgI,KAAOtG,EAAI1B,KAAKgI,MAC3BhI,KAAKgI,GAAKtG,IACV+B,MAAMzD,KAAKmI,KAAOzG,EAAI1B,KAAKmI,MAC3BnI,KAAKmI,GAAKzG,IACV+B,MAAMzD,KAAKkI,KAAOvB,EAAI3G,KAAKkI,MAC3BlI,KAAKkI,GAAKvB,IACVlD,MAAMzD,KAAKoI,KAAOzB,EAAI3G,KAAKoI,MAC3BpI,KAAKoI,GAAKzB,GAGlB+B,KAAKhH,GACD1B,KAAKyI,SAAS/G,EAAG1B,KAAKkI,IAG1BS,KAAKhC,GACD3G,KAAKyI,SAASzI,KAAKgI,GAAIrB,GAG3BiC,kBAAkBC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GACvClJ,KAAKyI,SAASI,EAAKC,GACnB9I,KAAKyI,SAASQ,EAAKC,GACnB,MAAMC,EAAOJ,EAAMF,EAEnB,IAAIO,EAAQD,GADCF,EAAMF,GAEnB,GAAa,GAATK,EAAY,CACZ,MAAM1F,EAAIyF,EAAOC,EACjB,GAAI1F,EAAI,GAAKA,EAAI,EAAG,CAChB,MAAM2F,EAAK,EAAI3F,EACf1D,KAAK0I,KAAKW,EAAKA,EAAKR,EAAM,EAAIQ,EAAK3F,EAAIqF,EAAMrF,EAAIA,EAAIuF,IAG7D,MAAMK,EAAON,EAAMF,EAGnB,GADAM,EAAQE,GADKJ,EAAMF,GAEN,GAATI,EAAY,CACZ,MAAM1F,EAAI4F,EAAOF,EACjB,GAAI1F,EAAI,GAAKA,EAAI,EAAG,CAChB,MAAM2F,EAAK,EAAI3F,EACf1D,KAAK2I,KAAKU,EAAKA,EAAKP,EAAM,EAAIO,EAAK3F,EAAIsF,EAAMtF,EAAIA,EAAIwF,KAKjEK,eAAeV,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKM,EAAKC,GAE9C,MAAMC,EAAK,CAACb,EAAKC,GACXa,EAAK,CAACZ,EAAKC,GACXY,EAAK,CAACX,EAAKC,GACXW,EAAK,CAACL,EAAKC,GACjB,IAAIjD,EACJxG,KAAKyI,SAASiB,EAAG,GAAIA,EAAG,IACxB1J,KAAKyI,SAASoB,EAAG,GAAIA,EAAG,IACxB,MAAMxD,EAAI,CAAC3C,EAAG8C,IAAMxD,KAAK8G,IAAI,EAAIpG,EAAG,GAAKgG,EAAGlD,GACxC,EAAIxD,KAAK8G,IAAI,EAAIpG,EAAG,GAAKA,EAAIiG,EAAGnD,GAChC,GAAK,EAAI9C,GAAKV,KAAK8G,IAAIpG,EAAG,GAAKkG,EAAGpD,GAClCxD,KAAK8G,IAAIpG,EAAG,GAAKmG,EAAGrD,GACxB,IAAKA,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACrB,MAAM/D,EAAI,EAAIiH,EAAGlD,GAAK,GAAKmD,EAAGnD,GAAK,EAAIoD,EAAGpD,GACpChE,GAAK,EAAIkH,EAAGlD,GAAK,EAAImD,EAAGnD,GAAK,EAAIoD,EAAGpD,GAAK,EAAIqD,EAAGrD,GAChDuD,EAAI,EAAIJ,EAAGnD,GAAK,EAAIkD,EAAGlD,GAC7B,GAAU,IAANhE,EAAS,CACT,GAAU,IAANC,EACA,SACJ,MAAMiB,GAAKqG,EAAItH,EACX,EAAIiB,GAAKA,EAAI,IACH,IAAN8C,GACAxG,KAAK0I,KAAKrC,EAAE3C,EAAG8C,IACT,IAANA,GACAxG,KAAK2I,KAAKtC,EAAE3C,EAAG8C,KAEvB,SAEJ,MAAMwD,EAAOhH,KAAK8G,IAAIrH,EAAG,GAAK,EAAIsH,EAAIvH,EACtC,GAAIwH,EAAO,EACP,SACJ,MAAMC,IAAOxH,EAAIO,KAAKkH,KAAKF,KAAU,EAAIxH,GACrC,EAAIyH,GAAMA,EAAK,IACL,IAANzD,GACAxG,KAAK0I,KAAKrC,EAAE4D,EAAIzD,IACV,IAANA,GACAxG,KAAK2I,KAAKtC,EAAE4D,EAAIzD,KAExB,MAAM2D,IAAO1H,EAAIO,KAAKkH,KAAKF,KAAU,EAAIxH,GACrC,EAAI2H,GAAMA,EAAK,IACL,IAAN3D,GACAxG,KAAK0I,KAAKrC,EAAE8D,EAAI3D,IACV,IAANA,GACAxG,KAAK2I,KAAKtC,EAAE8D,EAAI3D,OC3HpC,IAUW4D,EAKAC,EAfPC,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9G,GAAS,IAAM+G,EAAKL,EAAUM,KAAKhH,IAAW,MAAOrD,GAAKkK,EAAOlK,IACpF,SAASsK,EAASjH,GAAS,IAAM+G,EAAKL,EAAiB,MAAE1G,IAAW,MAAOrD,GAAKkK,EAAOlK,IACvF,SAASoK,EAAKG,GAJlB,IAAelH,EAIakH,EAAOC,KAAOP,EAAQM,EAAOlH,QAJ1CA,EAIyDkH,EAAOlH,MAJhDA,aAAiByG,EAAIzG,EAAQ,IAAIyG,GAAE,SAAUG,GAAWA,EAAQ5G,OAIToH,KAAKN,EAAWG,GAClGF,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,YAetE,IAAIM,GAVJ,SAAWlB,GACPA,EAAmB,OAAI,SACvBA,EAAiB,KAAI,OAFzB,CAGGA,IAAeA,EAAa,KAE/B,SAAWC,GACPA,EAAkB,OAAI,SACtBA,EAAkB,OAAI,SAF1B,CAGGA,IAAcA,EAAY,KAG7B,MAAMkB,EAAQ,GACP,MAAMC,EAKTrK,YAAYsK,GACRzL,KAAK0L,KAAOD,EAQhBlI,+BAA+BoI,EAAWH,EAAKI,MAC3C,IAAIC,EACJ,GAAwB,iBAAbF,EAEP,OAAOA,EAAWH,EAAKM,cAAcC,GAEpC,CACD,MAAM/H,EAAQgI,WAAWL,GACzB,GAAIlI,MAAMO,GACN,OAAO,EAEX,MAAMiI,EAAON,EAASO,QAAQ,WAAY,IAAIC,cAE9C,OAAOnI,GADsD,QAAnC6H,EAAKL,EAAKM,cAAcG,UAA0B,IAAPJ,EAAgBA,EAAK,IAUlGtI,+BAA+BoI,EAAWH,EAAKI,MAC3C,IAAIC,EACJ,GAAwB,iBAAbF,EAEP,OAAOA,EAEN,CACD,MAAM3H,EAAQgI,WAAWL,GACzB,GAAIlI,MAAMO,GACN,OAAO,EAEX,MAAMiI,EAAON,EAASO,QAAQ,WAAY,IAAIC,cAE9C,OAAOnI,IADuD,QAAnC6H,EAAKL,EAAKM,cAAcG,UAA0B,IAAPJ,EAAgBA,EAAK,GAAKL,EAAKM,cAAcC,KAW3HxI,gBAAgB8C,EAAG+F,EAAMC,EAAQC,GAG7B,GAAiB,iBAANjG,QAA2B1E,IAATyK,QAAiCzK,IAAX0K,QAAkC1K,IAAV2K,EACvE,OAAOd,EAAKe,cAAclG,GAE9B,IAAImG,EA+BJ,MA9BiB,iBAANnG,GAEPmG,EAASnG,EAAEmG,OACXJ,EAAO/F,EAAE+F,KACTC,EAAShG,EAAEgG,OACXC,EAAQjG,EAAEiG,OAIVE,EAASnG,EAEbmG,EAASA,MAAAA,EAAuCA,EAAShB,EAAKiB,WAC9DL,EAAOA,MAAAA,EAAmCA,EAAOZ,EAAKI,KAAO,KAC7DS,EAASA,MAAAA,EAAuCA,EAASjC,EAAWsC,OACpEJ,EAAQA,MAAAA,EAAqCA,EAAQjC,EAAUqC,OAChD,KAAXL,IACAA,EAASjC,EAAWsC,QAEV,KAAVJ,IACAA,EAAQjC,EAAUqC,QAGF,iBAATN,IACPA,EAAO,GAAGA,OAGQ,iBAAXC,IACPA,EAASA,EAAOtG,YAGb,CAAEyG,OAAAA,EAAQJ,KAAAA,EAAMC,OAAAA,EAAQC,MAAAA,GAKnC/I,qBAAqBoJ,GAIZrB,IACDA,EAAasB,SAASC,cAAc,SAExCvB,EAAWgB,MAAMQ,KAAOH,EACxB,MAAM,WAAEI,EAAU,SAAEpB,EAAQ,WAAEqB,EAAU,UAAEC,GAAc3B,EAAWgB,MACnE,MAAO,CAAEE,OAAQO,EAAYX,KAAMT,EAAUU,OAAQW,EAAYV,MAAOW,GAK5E1J,mBAAmB2J,GACf,IAAIrB,EACJ,IAAKqB,EACD,MAAO,GAEX,IAAIZ,EACJ,MAAMa,EAAKD,EAASZ,MAOpB,IAAID,EALAC,EADAa,IAAO9C,EAAUqC,QAAiB,KAAPS,QAAoBxL,IAAPwL,EAChC,GAGAA,EAAGC,OAAS,IAGxB,MAAMC,EAAKH,EAASb,OAUpB,IAAID,EARAC,EADAgB,IAAOjD,EAAWsC,QAAiB,KAAPW,QAAoB1L,IAAP0L,EAChC,GAEU,iBAAPA,EACHA,EAAK,IAGLA,EAAGD,OAAS,IAGzB,MAAME,EAAKJ,EAASd,KAEhBA,OADOzK,IAAP2L,EACO9B,EAAKI,KAAO,MAEA,iBAAP0B,EACLA,EAAK,MAILA,EAAGF,OAAS,IAGvB,MAAO,GAAGd,IAAQD,IAASD,IADe,QAA1BP,EAAKqB,EAASV,cAA2B,IAAPX,EAAgBA,EAAKL,EAAKiB,aAUhFlJ,iBAAiBoI,EAAU4B,GACvB,GAAwB,iBAAb5B,EACP,OAAQA,EAAW4B,EAKnB,MAAO,GAFOvB,WAAWL,GAEP4B,IADL5B,EAASO,QAAQ,WAAY,MAQlD3I,cAAc8I,GACV,GAAKA,EAGA,IAAsB,iBAAXA,EACZ,OAAOA,GAAU,IAEhB,CAED,MAAMmB,EAAe5K,SAASyJ,EAAQ,IACtC,OAAI5I,MAAM+J,GAC0B,SAAzBnB,EAAOF,cAGPqB,GAAgB,KAZ3B,OAAO,EAoBfjK,gBAAgB+I,GACZ,QAAKA,GAIMA,EAAMH,gBAAkB9B,EAAUoD,OAYjDlK,mBAAmBkI,EAAUiC,EAASC,GAAe,GACjD,OAAOrD,EAAUtK,UAAM,OAAQ,GAAQ,YACnC,MAKM4N,EAAW,IAAIC,SAASpC,GALbkC,EAAe,OAAOD,wBAAgC,IACtD,OAAOA,qBASxB,aAJME,EAASE,OAGflB,SAASmB,MAAM1J,IAAIuJ,GACZA,KAcfrK,sBACI,OAAO+G,EAAUtK,UAAM,OAAQ,GAAQ,YACnC,MAAMgO,EAAOxC,EAAKyC,cACZC,EAAQ1C,EAAK2C,eACnB,IAAK,MAAM1C,KAAYyC,EAAO,CAC1B,MAAME,EAAWF,EAAMzC,GACvBD,EAAK6C,YAAY5C,EAAUuC,EAAOI,OAI9C7K,wBAYAA,YAAYkI,EAAU6C,EAAMC,GACxB,IAAIzB,EAAOvB,EAAME,GAWjB,OAVKqB,IACDA,EAAO,IAAItB,EAAKC,GAChBF,EAAME,GAAYqB,GAElBwB,GACAxB,EAAK0B,QAAQF,GAEbC,GACAzB,EAAK2B,WAAWF,GAEbzB,EAEX4B,UACI,OAAO1O,KAAK0L,KAEhBiD,UACI,OAAOlN,EAAQzB,KAAKsO,KAAM,YAAa,qBAE3CM,aACI,OAAOnN,EAAQzB,KAAKuO,QAAS,YAAa,mBAE9CC,QAAQF,GACJtO,KAAKsO,KAAOA,EAEhBG,WAAWF,GACPvO,KAAKuO,QAAUA,EAEnBM,UACI,YAAqBlN,IAAd3B,KAAKsO,KAEhBQ,gBACI,OAAO9O,KAAK2O,UAAUI,WAE1BC,YACI,OAAOhP,KAAK2O,UAAUM,OAS1BC,aAAa/O,EAAKgP,GACd,MAAMC,EAAWjP,EAAIsG,MAAM,KAE3B,IAAI4I,EAAUrP,KAAK4O,aACnB,IAAK,IAAIpI,EAAI,EAAGA,EAAI4I,EAASxL,OAAQ4C,IAAK,CACtC,MACMxC,EAAQqL,EADED,EAAS5I,IAEzB,QAAc7E,IAAVqC,EAEA,OAAOmL,EAGXE,EAAUrL,EAGd,OAAOqL,EAGXtJ,WACI,MAAO,IAAM/F,KAAK0L,KAAO,UAMjCF,EAAKiB,WAAa,oBAElBjB,EAAK8D,MAAQ,yBAEb9D,EAAKI,KAAO,GAGZJ,EAAKM,cAAgB,CACjBC,GAAI,EAAI,EACRwD,GAAI,EACJC,GAAI,GACJ,IAAK,IACLC,GAAI,GACJC,GAAI,GAAK,KACTC,GAAI,GAAK,MAObnE,EAAKyC,cAAgB,yCAMrBzC,EAAK2C,eAAiB,CAClB,cAAe,0CACfyB,eAAgB,wCC1WpB,MAAMC,EACF1O,cACInB,KAAK8P,GAAK,GACV9P,KAAK+P,KAAO,GACZ/P,KAAKgQ,MAAQ,IAGd,MAAMC,EACT9O,cACInB,KAAKkQ,MAAQ,IAAIL,EAErBtM,4BACI,OAAO0M,EAASE,gBAIpB5M,6BAA6B6M,GACzBH,EAASE,gBAAkBC,EAE/B7M,gCACI0M,EAASE,qBAAkBxO,EAE/B0O,QAEI,OADArQ,KAAKkQ,MAAQ,IAAIL,EACV7P,KAEXsQ,cAAc5E,EAAM1H,EAAO8L,EAAIS,GAC3B,MAAML,EAAQlQ,KAAKkQ,MACdA,EAAMxE,GAAM1H,KACbkM,EAAMxE,GAAM1H,GAAS,IAEzBkM,EAAMxE,GAAM1H,GAAO8L,GAAMS,EAI7BC,aAAY,GAAEV,EAAE,KAAEpE,EAAI,MAAE1H,EAAK,SAAEyM,IAC3B,MAAMF,EAAOvQ,KAAK0Q,eAAeZ,QAChBnO,IAAb8O,GAA0BzQ,KAAKkQ,MAAMxE,GAAM+E,WACpCzQ,KAAKkQ,MAAMxE,GAAM+E,GAAUX,GAElC9L,GAASuM,GACTvQ,KAAKsQ,cAAc5E,EAAM1H,EAAOuM,EAAKI,aAAa,MAAOJ,GAUjEK,SAASL,EAAMT,GAEX,KADAA,EAAKA,GAAMS,EAAKI,aAAa,OAEzB,MAAM,IAAI1P,EAAa,wDAO3B,OAJAsP,EAAKM,aAAa,KAAMf,GACxB9P,KAAKsQ,cAAc,KAAMR,EAAIA,EAAIS,GACjCvQ,KAAKwQ,YAAY,CAAEV,GAAAA,EAAIpE,KAAM,OAAQ1H,MAAOuM,EAAKI,aAAa,QAASF,cAAU9O,IACjF4O,EAAKO,WAAW9Q,MACTA,KAEX0Q,eAAeZ,GACX,IAAIjE,EAAIkF,EACR,OAAmF,QAA3EA,EAA8B,QAAxBlF,EAAK7L,KAAKkQ,MAAMJ,UAAuB,IAAPjE,OAAgB,EAASA,EAAGiE,UAAwB,IAAPiB,OAAgB,EAASA,EAAGjB,GAE3HkB,uBAAuBC,EAAWjN,GAC9B,MAAMkN,EAAalR,KAAKkQ,MAAMe,GAC9B,GAAIC,EAAY,CACZ,MAAMC,EAAiBD,EAAWlN,GAClC,GAAImN,EAAgB,CAEhB,OADa9Q,OAAO+Q,KAAKD,GACbE,KAAKC,GAAMH,EAAeG,MAG9C,MAAO,GAEXC,kBAAkBxB,GACd,OAAO/P,KAAKgR,uBAAuB,OAAQjB,GAE/CyB,mBAAmBC,GACf,OAAOzR,KAAKgR,uBAAuB,QAASS,GAIhDC,SAASC,GAKL,MAJqB,CAAC,KAAM,OAAQ,SACnBC,SAASD,EAAKjG,OAC3B1L,KAAKwQ,YAAYmB,GAEd3R,MCvGR,MAAM6R,EACT1Q,cACI,IAAI0K,EACJ7L,KAAK8R,MAAQ,CACThC,GAAI+B,EAAQE,QACZC,QAAIrQ,EACJoO,KAAM/P,KAAKiS,cACXC,QAAS,IAEblS,KAAKmS,UAAW,EAEyB,QAAxCtG,EAAKoE,EAASmC,4BAAyC,IAAPvG,GAAyBA,EAAG+E,SAAS5Q,MAE/EsD,sBACP,MAAO,UAEXC,eACI,MAAO,OAAOsO,EAAQQ,KAG1BJ,cACI,OAAOjS,KAAKmB,YAAYmC,SAwB5BgP,SAAShG,GAEL,OADAtM,KAAKsM,MAAQA,EACNtM,KAGXuS,WACI,OAAOvS,KAAKsM,MAGhBkG,WAAWC,EAAUzS,KAAKyS,QAASnG,EAAQtM,KAAKuS,YAC5C,OAAKjG,GAEAmG,GAELA,EAAQC,OACJpG,EAAMqG,aACNF,EAAQG,eAAetG,EAAMqG,aAC7BrG,EAAMuG,YACNJ,EAAQK,cAAcxG,EAAMuG,YAC5BvG,EAAMyG,WACNN,EAAQO,aAAa1G,EAAMyG,WAC3BzG,EAAM2G,aACNR,EAAQS,eAAe5G,EAAM2G,aAC7B3G,EAAM6G,WACNV,EAAQW,aAAa9G,EAAM6G,WACxBnT,MAdIA,KAiBfqT,aAAaZ,EAAUzS,KAAKyS,QAASnG,EAAQtM,KAAKuS,YAC9C,OAAKjG,GAEAmG,GAELA,EAAQa,UACDtT,MAJIA,KAUfuT,gBACIvT,KAAKwT,eACLxT,KAAKwS,aACLxS,KAAKyT,OACLzT,KAAKqT,eAGTK,SAASjC,GACL,OAAyC,IAAlCzR,KAAK8R,MAAMI,QAAQT,GAG9BkC,SAASlC,GACL,IAAI5F,EAQJ,OAPA7L,KAAK8R,MAAMI,QAAQT,IAAa,EACP,QAAxB5F,EAAK7L,KAAKoQ,gBAA6B,IAAPvE,GAAyBA,EAAG6F,SAAS,CAClE5B,GAAI9P,KAAK8R,MAAMhC,GACfpE,KAAM,QACN1H,MAAOyN,EACPhB,cAAU9O,IAEP3B,KAGX4T,YAAYnC,GACR,IAAI5F,EAQJ,cAPO7L,KAAK8R,MAAMI,QAAQT,GACD,QAAxB5F,EAAK7L,KAAKoQ,gBAA6B,IAAPvE,GAAyBA,EAAG6F,SAAS,CAClE5B,GAAI9P,KAAK8R,MAAMhC,GACfpE,KAAM,QACN1H,WAAOrC,EACP8O,SAAUgB,IAEPzR,KAGX8Q,WAAWV,GAEP,OADApQ,KAAKoQ,SAAWA,EACTpQ,KAGX6T,aACI,OAAO7T,KAAKmS,SAGhB2B,YAAY3B,GAAW,GAEnB,OADAnS,KAAKmS,SAAWA,EACTnS,KAGX+T,gBACI,OAAO/T,KAAK8R,MAIhBnB,aAAajF,GACT,OAAO1L,KAAK8R,MAAMpG,GAItBmF,aAAanF,EAAM1H,GACf,IAAI6H,EACJ,MAAMmI,EAAQhU,KAAK8R,MAAMhC,GACnBW,EAAWzQ,KAAK8R,MAAMpG,GAI5B,OAHA1L,KAAK8R,MAAMpG,GAAQ1H,EAEM,QAAxB6H,EAAK7L,KAAKoQ,gBAA6B,IAAPvE,GAAyBA,EAAG6F,SAAS,CAAE5B,GAAIkE,EAAOtI,KAAAA,EAAM1H,MAAAA,EAAOyM,SAAAA,IACzFzQ,KAGXiU,iBACI,OAAOjU,KAAKyH,YAGhByM,aACI,OAAOlU,KAAKyS,QAGhB0B,WAAW1B,GAEP,OADAzS,KAAKyS,QAAUA,EACRzS,KAGXwT,eACI,OAAO/R,EAAQzB,KAAKyS,QAAS,YAAa,8CAO1C3F,SAAKzG,GACLrG,KAAKoU,QAAQ/N,GAGbyG,WACA,OAAOtB,EAAK6I,YAAYrU,KAAKsU,UAajCF,QAAQtH,EAAMV,EAAMC,EAAQC,GAExB,MAAMiI,EAAkBvU,KAAKmB,YAAYqT,UACnCC,EAA+B,iBAAT3H,EACtB4H,EAA+B,iBAAT5H,EACtB6H,OAA2BhT,IAATmL,EAClB8H,OAAuCjT,IAATyK,QAAiCzK,IAAX0K,QAAkC1K,IAAV2K,EAuBlF,OApBItM,KAAKsU,SAFLG,EAEgBpU,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAIN,GAAkBzH,GAE7D4H,GAAgBE,EAELpJ,EAAKe,cAAcO,GAE9B6H,GAAmBC,EAKRvU,OAAOwU,OAAO,GAAIN,GAOlB/I,EAAKsJ,SAAShI,MAAAA,EAAmCA,EAAOyH,EAAgB/H,OAAQJ,MAAAA,EAAmCA,EAAOmI,EAAgBnI,KAAMC,MAAAA,EAAuCA,EAASkI,EAAgBlI,OAAQC,MAAAA,EAAqCA,EAAQiI,EAAgBjI,OAElStM,KAEX+U,UAII,OAHK/U,KAAKsU,UACNtU,KAAKgV,YAEFxJ,EAAK6I,YAAYrU,KAAKsU,UAMjCU,YACIhV,KAAKoU,UAGLlH,eAMA,OALKlN,KAAKsU,UACNtU,KAAKgV,YAIF3U,OAAOwU,OAAO,GAAI7U,KAAKsU,UAE9BpH,aAASA,GACTlN,KAAKoU,QAAQlH,GAGjB+H,YAAY7I,GACR,MAAMc,EAAWlN,KAAKkN,SAEtB,OADAlN,KAAKoU,QAAQlH,EAASV,OAAQJ,EAAMc,EAASb,OAAQa,EAASZ,OACvDtM,KAMXkV,cACI,OAAOlV,KAAK2L,SAMZA,aAASS,GACTpM,KAAKiV,YAAY7I,GAKjBT,eACA,IAAIS,EAAOpM,KAAKkN,SAASd,KAIzB,MAHoB,iBAATA,IACPA,EAAO,GAAGA,OAEPA,EAKP+I,uBACA,OAAO3J,EAAK4J,wBAAwBpV,KAAK2L,UAKzC0J,uBACA,OAAO7J,EAAK8J,wBAAwBtV,KAAK2L,UAKzCsB,gBACA,OAAOjN,KAAKkN,SAASZ,MAErBW,cAAUX,GACV,MAAMY,EAAWlN,KAAKkN,SACtBlN,KAAKoU,QAAQlH,EAASV,OAAQU,EAASd,KAAMc,EAASb,OAAQC,GAM9DU,iBACA,OAAOhN,KAAKkN,SAASb,OAAS,GAE9BW,eAAWX,GACX,MAAMa,EAAWlN,KAAKkN,SACtBlN,KAAKoU,QAAQlH,EAASV,OAAQU,EAASd,KAAMC,EAAQa,EAASZ,QAGtEuF,EAAQQ,GAAK,IAKbR,EAAQ2C,UAAY,CAChBhI,OAAQhB,EAAKiB,WACbL,KAAMZ,EAAKI,KACXS,OAAQjC,EAAWsC,OACnBJ,MAAOjC,EAAUqC,QCxUrB,MAAM6I,EAAa,MAKbC,EAAY,CACd,MAAOD,MACP,EAAGA,MACH,EAAGA,KACH,EAAGA,KACH,EAAGA,KACH,GAAIA,KACJ,GAAIA,IACJ,GAAIA,IACJ,IAAKA,IACL,IAAKA,IAEHE,EAAkB,CACpB7O,EAAG,IACHC,EAAG,IACHT,EAAG,IAIH3D,EAAG,OAEDiT,EAAgB,CAClBC,EAAG,CAAEC,IAAK,GACVC,GAAI,CAAED,IAAK,GACXE,EAAG,CAAEC,IAAK,IAAKH,IAAK,GACpBI,GAAI,CAAED,IAAK,IAAKH,IAAK,GACrBK,GAAI,CAAEF,IAAK,IAAKH,IAAK,GACrBM,GAAI,CAAEH,IAAK,IAAKH,IAAK,GACrBO,GAAI,CAAEJ,IAAK,IAAKH,IAAK,GACrBQ,GAAI,CAAEL,IAAK,IAAKH,IAAK,GACrBS,GAAI,CAAEN,IAAK,IAAKH,IAAK,GACrBU,GAAI,CAAEP,IAAK,IAAKH,IAAK,GACrBW,GAAI,CAAER,IAAK,IAAKH,IAAK,GACrBY,IAAK,CAAET,IAAK,IAAKH,IAAK,GACtBa,GAAI,CAAEV,IAAK,IAAKH,IAAK,GACrBc,IAAK,CAAEX,IAAK,IAAKH,IAAK,GACtBe,GAAI,CAAEZ,IAAK,IAAKH,IAAK,GACrBgB,IAAK,CAAEb,IAAK,IAAKH,IAAK,GACtBiB,EAAG,CAAEd,IAAK,IAAKH,IAAK,GACpBkB,GAAI,CAAEf,IAAK,IAAKH,IAAK,GACrBmB,EAAG,CAAEhB,IAAK,IAAKH,IAAK,GACpBoB,GAAI,CAAEjB,IAAK,IAAKH,IAAK,GACrBqB,EAAG,CAAElB,IAAK,IAAKH,IAAK,GACpB,MAAO,CAAEG,IAAK,IAAKH,IAAK,GACxBsB,EAAG,CAAEnB,IAAK,IAAKH,IAAK,GACpB,MAAO,CAAEG,IAAK,IAAKH,IAAK,GACxBuB,EAAG,CAAEpB,IAAK,IAAKH,IAAK,GACpB,MAAO,CAAEG,IAAK,IAAKH,IAAK,GACxB,KAAM,CAAEG,IAAK,IAAKH,IAAK,GACvB,MAAO,CAAEG,IAAK,IAAKH,IAAK,GACxB,KAAM,CAAEG,IAAK,IAAKH,IAAK,GACvB,MAAO,CAAEG,IAAK,IAAKH,IAAK,IAEtBwB,EAAQ,CACVC,OAAQ,CAAEC,WAAY,GACtBC,KAAM,CAAED,WAAY,GACpBE,MAAO,CAAEF,WAAY,GACrBG,KAAM,CAAEH,WAAY,GACpBI,QAAS,CAAEJ,WAAY,GACvBK,WAAY,CAAEL,WAAY,GAC1B,gBAAiB,CAAEA,WAAY,GAC/B,aAAc,CAAEA,WAAY,GAC5B,aAAc,CAAEA,WAAY,GAC5BM,QAAS,CAAEN,WAAY,GACvBO,OAAQ,CAAEP,YAAa,IAErBQ,EAAY,CACdnC,EAAG,CAAEzF,MAAO,EAAG6H,QAAS,GACxBC,GAAI,CAAE9H,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KACxC,KAAM,CAAE/H,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KAC1C,MAAO,CAAE/H,MAAO,EAAG6H,QAAS,EAAGE,WAAY,MAC3CC,GAAI,CAAEhI,MAAO,EAAG6H,QAAS,GAAIE,WAAY,KACzCE,IAAK,CAAEjI,MAAO,EAAG6H,QAAS,GAAIE,WAAY,MAC1ClB,EAAG,CAAE7G,MAAO,EAAG6H,QAAS,GACxBK,GAAI,CAAElI,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KACxC,KAAM,CAAE/H,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KAC1C,MAAO,CAAE/H,MAAO,EAAG6H,QAAS,EAAGE,WAAY,MAC3CI,GAAI,CAAEnI,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KACxCK,IAAK,CAAEpI,MAAO,EAAG6H,QAAS,EAAGE,WAAY,MACzCf,EAAG,CAAEhH,MAAO,EAAG6H,QAAS,GACxBQ,GAAI,CAAErI,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KACxC,KAAM,CAAE/H,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KAC1C,MAAO,CAAE/H,MAAO,EAAG6H,QAAS,EAAGE,WAAY,MAC3CO,GAAI,CAAEtI,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KACxCQ,IAAK,CAAEvI,MAAO,EAAG6H,QAAS,EAAGE,WAAY,MACzCnC,EAAG,CAAE5F,MAAO,EAAG6H,QAAS,GACxBW,GAAI,CAAExI,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KACxC,KAAM,CAAE/H,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KAC1C,MAAO,CAAE/H,MAAO,EAAG6H,QAAS,EAAGE,WAAY,MAC3CU,GAAI,CAAEzI,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KACxCW,IAAK,CAAE1I,MAAO,EAAG6H,QAAS,EAAGE,WAAY,MACzCpB,EAAG,CAAE3G,MAAO,EAAG6H,QAAS,GACxBc,GAAI,CAAE3I,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KACxC,KAAM,CAAE/H,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KAC1C,MAAO,CAAE/H,MAAO,EAAG6H,QAAS,EAAGE,WAAY,MAC3Ca,GAAI,CAAE5I,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KACxCc,IAAK,CAAE7I,MAAO,EAAG6H,QAAS,EAAGE,WAAY,MACzChB,EAAG,CAAE/G,MAAO,EAAG6H,QAAS,GACxBiB,GAAI,CAAE9I,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KACxC,KAAM,CAAE/H,MAAO,EAAG6H,QAAS,GAAIE,WAAY,KAC3C,MAAO,CAAE/H,MAAO,EAAG6H,QAAS,GAAIE,WAAY,MAC5CgB,GAAI,CAAE/I,MAAO,EAAG6H,QAAS,EAAGE,WAAY,KACxCiB,IAAK,CAAEhJ,MAAO,EAAG6H,QAAS,EAAGE,WAAY,MACzCd,EAAG,CAAEjH,MAAO,EAAG6H,QAAS,IACxBoB,GAAI,CAAEjJ,MAAO,EAAG6H,QAAS,GAAIE,WAAY,KACzC,KAAM,CAAE/H,MAAO,EAAG6H,QAAS,GAAIE,WAAY,KAC3C,MAAO,CAAE/H,MAAO,EAAG6H,QAAS,GAAIE,WAAY,MAC5CmB,GAAI,CAAElJ,MAAO,EAAG6H,QAAS,GAAIE,WAAY,KACzCoB,IAAK,CAAEnJ,MAAO,EAAG6H,QAAS,EAAGE,WAAY,MACzCqB,EAAG,CAAEpJ,MAAO,EAAGqJ,MAAM,GACrBC,EAAG,CACCtJ,MAAO,EACP+H,WAAY,GACZwB,OAAQ,EACRrY,KAAM,iBACNsY,YAAa,MAWfC,EAAkB,CAEpBC,GAAI,CAAExY,KAAM,wBACZyY,GAAI,CAAEzY,KAAM,uBACZ0Y,GAAI,CAAE1Y,KAAM,wBACZ2Y,GAAI,CAAE3Y,KAAM,wBAEZ4Y,GAAI,CAAE5Y,KAAM,2BACZ6Y,GAAI,CAAE7Y,KAAM,0BACZ8Y,GAAI,CAAE9Y,KAAM,2BACZ+Y,GAAI,CAAE/Y,KAAM,2BAEZgZ,GAAI,CAAEhZ,KAAM,kBACZiZ,GAAI,CAAEjZ,KAAM,iBACZkZ,GAAI,CAAElZ,KAAM,kBACZmZ,GAAI,CAAEnZ,KAAM,mBAEZoZ,GAAI,CAAEpZ,KAAM,uBACZqZ,GAAI,CAAErZ,KAAM,uBAEZsZ,GAAI,CAAEtZ,KAAM,wBACZuZ,GAAI,CAAEvZ,KAAM,yBAEVwZ,EAAc,CAChB,IAAK,CAAExZ,KAAM,kBAAmByZ,6BAA8B,GAC9D,KAAM,CAAEzZ,KAAM,wBAAyByZ,6BAA8B,GACrEpY,EAAG,CAAErB,KAAM,iBAAkByZ,6BAA8B,GAC3DC,GAAI,CAAE1Z,KAAM,uBAAwByZ,6BAA8B,GAClElY,EAAG,CAAEvB,KAAM,oBAAqByZ,6BAA8B,GAC9D,IAAK,CAAEzZ,KAAM,uBAAwByZ,6BAA8B,GACnE,IAAK,CAAEzZ,KAAM,wBAAyByZ,6BAA8B,GACpEE,GAAI,CAAE3Z,KAAM,4CAA6CyZ,6BAA8B,GACvF1W,EAAG,CAAE/C,KAAM,iCAAkCyZ,4BAA6B,GAC1E,KAAM,CAAEzZ,KAAM,wCAAyCyZ,6BAA8B,GACrF,IAAK,CAAEzZ,KAAM,kCAAmCyZ,6BAA8B,GAC9E,KAAM,CAAEzZ,KAAM,+BAAgCyZ,6BAA8B,GAC5EG,GAAI,CAAE5Z,KAAM,uBAAwByZ,6BAA8B,GAClEI,IAAK,CAAE7Z,KAAM,8BAA+ByZ,6BAA8B,GAC1Eza,EAAG,CAAEgB,KAAM,iBAAkByZ,6BAA8B,GAC3DvJ,EAAG,CAAElQ,KAAM,kBAAmByZ,6BAA8B,GAC5DK,IAAK,CAAE9Z,KAAM,2BAA4ByZ,6BAA8B,GACvE,MAAO,CAAEzZ,KAAM,2BAA4ByZ,6BAA8B,GACzEM,KAAM,CAAE/Z,KAAM,2BAA4ByZ,6BAA8B,GACxEO,KAAM,CAAEha,KAAM,2BAA4ByZ,6BAA8B,GACxEQ,wBAAyB,CAAEja,KAAM,0BAA2ByZ,6BAA8B,GAC1FS,0BAA2B,CAAEla,KAAM,4BAA6ByZ,6BAA8B,GAC9FU,oBAAqB,CAAEna,KAAM,sBAAuByZ,6BAA8B,GAClFW,sBAAuB,CAAEpa,KAAM,wBAAyByZ,6BAA8B,GACtFY,oBAAqB,CAAEra,KAAM,sBAAuByZ,6BAA8B,GAClFa,sBAAuB,CAAEta,KAAM,wBAAyByZ,6BAA8B,GACtFc,2BAA4B,CAAEva,KAAM,6BAA8ByZ,6BAA8B,GAChGe,6BAA8B,CAAExa,KAAM,+BAAgCyZ,6BAA8B,GACpGgB,4BAA6B,CAAEza,KAAM,8BAA+ByZ,6BAA8B,GAClGiB,8BAA+B,CAAE1a,KAAM,gCAAiCyZ,6BAA8B,GACtGkB,4BAA6B,CAAE3a,KAAM,8BAA+ByZ,6BAA8B,GAClGmB,8BAA+B,CAAE5a,KAAM,gCAAiCyZ,6BAA8B,GACtGoB,2BAA4B,CAAE7a,KAAM,6BAA8ByZ,6BAA8B,GAChGqB,6BAA8B,CAAE9a,KAAM,+BAAgCyZ,6BAA8B,GACpGsB,2BAA4B,CAAE/a,KAAM,6BAA8ByZ,6BAA8B,GAChGuB,6BAA8B,CAAEhb,KAAM,+BAAgCyZ,6BAA8B,GACpGwB,wBAAyB,CAAEjb,KAAM,0BAA2ByZ,6BAA8B,GAC1FyB,qBAAsB,CAAElb,KAAM,uBAAwByZ,6BAA8B,GACpF0B,uBAAwB,CAAEnb,KAAM,yBAA0ByZ,6BAA8B,GACxF2B,oBAAqB,CAAEpb,KAAM,sBAAuByZ,6BAA8B,GAClF4B,uBAAwB,CAAErb,KAAM,yBAA0ByZ,6BAA8B,GACxF6B,oBAAqB,CAAEtb,KAAM,sBAAuByZ,6BAA8B,GAClF8B,yBAA0B,CAAEvb,KAAM,2BAA4ByZ,6BAA8B,GAC5F+B,sBAAuB,CAAExb,KAAM,wBAAyByZ,6BAA8B,GACtFgC,iBAAkB,CAAEzb,KAAM,mBAAoByZ,6BAA8B,GAC5EiC,gBAAiB,CAAE1b,KAAM,kBAAmByZ,6BAA8B,GAC1EkC,uBAAwB,CAAE3b,KAAM,yBAA0ByZ,6BAA8B,GACxFmC,wBAAyB,CAAE5b,KAAM,0BAA2ByZ,6BAA8B,GAC1FoC,qBAAsB,CAAE7b,KAAM,uBAAwByZ,6BAA8B,GACpFqC,sBAAuB,CAAE9b,KAAM,wBAAyByZ,6BAA8B,GACtFsC,qBAAsB,CAAE/b,KAAM,uBAAwByZ,6BAA8B,GACpFuC,sBAAuB,CAAEhc,KAAM,wBAAyByZ,6BAA8B,GACtFwC,sBAAuB,CAAEjc,KAAM,wBAAyByZ,6BAA8B,GACtFyC,uBAAwB,CAAElc,KAAM,yBAA0ByZ,6BAA8B,GACxF0C,sBAAuB,CAAEnc,KAAM,wBAAyByZ,6BAA8B,GACtF2C,uBAAwB,CAAEpc,KAAM,yBAA0ByZ,6BAA8B,GACxF4C,sBAAuB,CAAErc,KAAM,wBAAyByZ,6BAA8B,GACtF6C,uBAAwB,CAAEtc,KAAM,yBAA0ByZ,6BAA8B,GACxF8C,sBAAuB,CAAEvc,KAAM,wBAAyByZ,6BAA8B,GACtF+C,uBAAwB,CAAExc,KAAM,yBAA0ByZ,6BAA8B,GACxFgD,sBAAuB,CAAEzc,KAAM,wBAAyByZ,6BAA8B,GACtFiD,uBAAwB,CAAE1c,KAAM,yBAA0ByZ,6BAA8B,GACxFkD,8BAA+B,CAAE3c,KAAM,gCAAiCyZ,6BAA8B,GACtGmD,2BAA4B,CAAE5c,KAAM,6BAA8ByZ,6BAA8B,GAChGoD,6BAA8B,CAAE7c,KAAM,+BAAgCyZ,6BAA8B,GACpGqD,0BAA2B,CAAE9c,KAAM,4BAA6ByZ,6BAA8B,GAC9FsD,6BAA8B,CAAE/c,KAAM,+BAAgCyZ,6BAA8B,GACpGuD,0BAA2B,CAAEhd,KAAM,4BAA6ByZ,6BAA8B,GAC9FwD,+BAAgC,CAAEjd,KAAM,iCAAkCyZ,6BAA8B,GACxGyD,4BAA6B,CAAEld,KAAM,8BAA+ByZ,6BAA8B,GAClG0D,uBAAwB,CAAEnd,KAAM,yBAA0ByZ,6BAA8B,GACxF2D,sBAAuB,CAAEpd,KAAM,wBAAyByZ,6BAA8B,GACtF4D,yBAA0B,CAAErd,KAAM,2BAA4ByZ,6BAA8B,GAC5F6D,2BAA4B,CAAEtd,KAAM,6BAA8ByZ,6BAA8B,GAChG8D,qBAAsB,CAAEvd,KAAM,uBAAwByZ,6BAA8B,GACpF+D,uBAAwB,CAAExd,KAAM,yBAA0ByZ,6BAA8B,GACxFgE,qBAAsB,CAAEzd,KAAM,uBAAwByZ,6BAA8B,GACpFiE,uBAAwB,CAAE1d,KAAM,yBAA0ByZ,6BAA8B,GACxFkE,uBAAwB,CAAE3d,KAAM,yBAA0ByZ,6BAA8B,GACxFmE,yBAA0B,CAAE5d,KAAM,2BAA4ByZ,6BAA8B,GAC5FoE,6BAA8B,CAAE7d,KAAM,+BAAgCyZ,6BAA8B,GACpGqE,+BAAgC,CAAE9d,KAAM,iCAAkCyZ,6BAA8B,GACxGsE,0BAA2B,CAAE/d,KAAM,4BAA6ByZ,6BAA8B,GAC9FuE,uBAAwB,CAAEhe,KAAM,yBAA0ByZ,6BAA8B,GACxFwE,0BAA2B,CAAEje,KAAM,4BAA6ByZ,6BAA8B,GAC9FyE,uBAAwB,CAAEle,KAAM,yBAA0ByZ,6BAA8B,GACxF0E,wBAAyB,CAAEne,KAAM,0BAA2ByZ,6BAA8B,GAC1F2E,qBAAsB,CAAEpe,KAAM,uBAAwByZ,6BAA8B,GACpF4E,wBAAyB,CAAEre,KAAM,0BAA2ByZ,6BAA8B,GAC1F6E,qBAAsB,CAAEte,KAAM,uBAAwByZ,6BAA8B,GACpF8E,0BAA2B,CAAEve,KAAM,4BAA6ByZ,6BAA8B,GAC9F+E,uBAAwB,CAAExe,KAAM,yBAA0ByZ,6BAA8B,GACxFgF,wBAAyB,CAAEze,KAAM,0BAA2ByZ,6BAA8B,GAC1FiF,yBAA0B,CAAE1e,KAAM,2BAA4ByZ,6BAA8B,GAC5FkF,sBAAuB,CAAE3e,KAAM,wBAAyByZ,6BAA8B,GACtFmF,uBAAwB,CAAE5e,KAAM,yBAA0ByZ,6BAA8B,GACxFoF,sBAAuB,CAAE7e,KAAM,wBAAyByZ,6BAA8B,GACtFqF,uBAAwB,CAAE9e,KAAM,yBAA0ByZ,6BAA8B,GACxFsF,wBAAyB,CAAE/e,KAAM,0BAA2ByZ,6BAA8B,GAC1FuF,yBAA0B,CAAEhf,KAAM,2BAA4ByZ,6BAA8B,GAC5FwF,wBAAyB,CAAEjf,KAAM,0BAA2ByZ,6BAA8B,GAC1FyF,yBAA0B,CAAElf,KAAM,2BAA4ByZ,6BAA8B,GAC5F0F,gCAAiC,CAAEnf,KAAM,kCAAmCyZ,6BAA8B,GAC1G2F,6BAA8B,CAAEpf,KAAM,+BAAgCyZ,6BAA8B,GACpG4F,gCAAiC,CAAErf,KAAM,kCAAmCyZ,6BAA8B,GAC1G6F,6BAA8B,CAAEtf,KAAM,+BAAgCyZ,6BAA8B,GACpG8F,8BAA+B,CAAEvf,KAAM,gCAAiCyZ,6BAA8B,GACtG+F,2BAA4B,CAAExf,KAAM,6BAA8ByZ,6BAA8B,GAChGgG,8BAA+B,CAAEzf,KAAM,gCAAiCyZ,6BAA8B,GACtGiG,2BAA4B,CAAE1f,KAAM,6BAA8ByZ,6BAA8B,GAChGkG,gCAAiC,CAAE3f,KAAM,kCAAmCyZ,6BAA8B,GAC1GmG,6BAA8B,CAAE5f,KAAM,+BAAgCyZ,6BAA8B,GACpGoG,qBAAsB,CAAE7f,KAAM,uBAAwByZ,6BAA8B,GACpFqG,uBAAwB,CAAE9f,KAAM,yBAA0ByZ,6BAA8B,GACxFsG,uBAAwB,CAAE/f,KAAM,yBAA0ByZ,6BAA8B,GACxFuG,yBAA0B,CAAEhgB,KAAM,2BAA4ByZ,6BAA8B,GAC5FwG,6BAA8B,CAAEjgB,KAAM,+BAAgCyZ,6BAA8B,GACpGyG,+BAAgC,CAAElgB,KAAM,iCAAkCyZ,6BAA8B,GACxG0G,0BAA2B,CAAEngB,KAAM,4BAA6ByZ,6BAA8B,GAC9F2G,uBAAwB,CAAEpgB,KAAM,yBAA0ByZ,6BAA8B,GACxF4G,0BAA2B,CAAErgB,KAAM,4BAA6ByZ,6BAA8B,GAC9F6G,uBAAwB,CAAEtgB,KAAM,yBAA0ByZ,6BAA8B,GACxF8G,wBAAyB,CAAEvgB,KAAM,0BAA2ByZ,6BAA8B,GAC1F+G,qBAAsB,CAAExgB,KAAM,uBAAwByZ,6BAA8B,GACpFgH,sBAAuB,CAAEzgB,KAAM,wBAAyByZ,6BAA8B,GACtFiH,uBAAwB,CAAE1gB,KAAM,yBAA0ByZ,6BAA8B,GACxFkH,wBAAyB,CAAE3gB,KAAM,0BAA2ByZ,6BAA8B,GAC1FmH,yBAA0B,CAAE5gB,KAAM,2BAA4ByZ,6BAA8B,GAC5FoH,wBAAyB,CAAE7gB,KAAM,0BAA2ByZ,6BAA8B,GAC1FqH,yBAA0B,CAAE9gB,KAAM,2BAA4ByZ,6BAA8B,GAC5FsH,gCAAiC,CAAE/gB,KAAM,kCAAmCyZ,6BAA8B,GAC1GuH,6BAA8B,CAAEhhB,KAAM,+BAAgCyZ,6BAA8B,GACpGwH,gCAAiC,CAAEjhB,KAAM,kCAAmCyZ,6BAA8B,GAC1GyH,6BAA8B,CAAElhB,KAAM,+BAAgCyZ,6BAA8B,GACpG0H,8BAA+B,CAAEnhB,KAAM,gCAAiCyZ,6BAA8B,GACtG2H,2BAA4B,CAAEphB,KAAM,6BAA8ByZ,6BAA8B,GAChG4H,uBAAwB,CAAErhB,KAAM,yBAA0ByZ,6BAA8B,GACxF6H,yBAA0B,CAAEthB,KAAM,2BAA4ByZ,6BAA8B,GAC5F8H,uBAAwB,CAAEvhB,KAAM,yBAA0ByZ,6BAA8B,GACxF+H,yBAA0B,CAAExhB,KAAM,2BAA4ByZ,6BAA8B,GAC5FgI,sBAAuB,CAAEzhB,KAAM,wBAAyByZ,6BAA8B,GACtFiI,wBAAyB,CAAE1hB,KAAM,0BAA2ByZ,6BAA8B,GAC1FkI,wBAAyB,CAAE3hB,KAAM,0BAA2ByZ,6BAA8B,GAC1FmI,0BAA2B,CAAE5hB,KAAM,4BAA6ByZ,6BAA8B,GAC9FoI,qBAAsB,CAAE7hB,KAAM,uBAAwByZ,6BAA8B,GACpFqI,uBAAwB,CAAE9hB,KAAM,yBAA0ByZ,6BAA8B,GACxFsI,uBAAwB,CAAE/hB,KAAM,yBAA0ByZ,6BAA8B,GACxFuI,yBAA0B,CAAEhiB,KAAM,2BAA4ByZ,6BAA8B,GAC5FwI,2BAA4B,CAAEjiB,KAAM,6BAA8ByZ,6BAA8B,GAChGyI,6BAA8B,CAAEliB,KAAM,+BAAgCyZ,6BAA8B,GACpG0I,2BAA4B,CAAEniB,KAAM,6BAA8ByZ,6BAA8B,GAChG2I,6BAA8B,CAAEpiB,KAAM,+BAAgCyZ,6BAA8B,GACpG4I,8BAA+B,CAAEriB,KAAM,gCAAiCyZ,6BAA8B,GACtG6I,gCAAiC,CAAEtiB,KAAM,kCAAmCyZ,6BAA8B,GAC1G8I,+BAAgC,CAAEviB,KAAM,iCAAkCyZ,6BAA8B,GACxG+I,iCAAkC,CAAExiB,KAAM,mCAAoCyZ,6BAA8B,GAC5GgJ,4BAA6B,CAAEziB,KAAM,8BAA+ByZ,6BAA8B,GAClGiJ,8BAA+B,CAAE1iB,KAAM,gCAAiCyZ,6BAA8B,GACtGkJ,8BAA+B,CAAE3iB,KAAM,gCAAiCyZ,6BAA8B,GACtGmJ,gCAAiC,CAAE5iB,KAAM,kCAAmCyZ,6BAA8B,GAC1GoJ,2BAA4B,CAAE7iB,KAAM,6BAA8ByZ,6BAA8B,GAChGqJ,6BAA8B,CAAE9iB,KAAM,+BAAgCyZ,6BAA8B,GACpGsJ,8BAA+B,CAAE/iB,KAAM,gCAAiCyZ,6BAA8B,GACtGuJ,gCAAiC,CAAEhjB,KAAM,kCAAmCyZ,6BAA8B,GAC1GwJ,6BAA8B,CAAEjjB,KAAM,+BAAgCyZ,6BAA8B,GACpGyJ,+BAAgC,CAAEljB,KAAM,iCAAkCyZ,6BAA8B,GACxG0J,wBAAyB,CAAEnjB,KAAM,0BAA2ByZ,6BAA8B,GAC1F2J,qBAAsB,CAAEpjB,KAAM,uBAAwByZ,6BAA8B,GACpF4J,wBAAyB,CAAErjB,KAAM,0BAA2ByZ,6BAA8B,GAC1F6J,qBAAsB,CAAEtjB,KAAM,uBAAwByZ,6BAA8B,GACpF8J,0BAA2B,CAAEvjB,KAAM,4BAA6ByZ,6BAA8B,GAC9F+J,uBAAwB,CAAExjB,KAAM,yBAA0ByZ,6BAA8B,GACxFgK,wBAAyB,CAAEzjB,KAAM,0BAA2ByZ,6BAA8B,GAC1FiK,qBAAsB,CAAE1jB,KAAM,uBAAwByZ,6BAA8B,GACpFkK,2BAA4B,CAAE3jB,KAAM,6BAA8ByZ,6BAA8B,GAChGmK,wBAAyB,CAAE5jB,KAAM,0BAA2ByZ,6BAA8B,GAC1FoK,yBAA0B,CAAE7jB,KAAM,2BAA4ByZ,6BAA8B,GAC5FqK,sBAAuB,CAAE9jB,KAAM,wBAAyByZ,6BAA8B,GACtFsK,wBAAyB,CAAE/jB,KAAM,0BAA2ByZ,6BAA8B,GAC1FuK,qBAAsB,CAAEhkB,KAAM,uBAAwByZ,6BAA8B,GACpFwK,wBAAyB,CAAEjkB,KAAM,0BAA2ByZ,6BAA8B,GAC1FyK,qBAAsB,CAAElkB,KAAM,uBAAwByZ,6BAA8B,GACpF0K,sBAAuB,CAAEnkB,KAAM,wBAAyByZ,6BAA8B,GACtF2K,uBAAwB,CAAEpkB,KAAM,yBAA0ByZ,6BAA8B,GACxF4K,sBAAuB,CAAErkB,KAAM,wBAAyByZ,6BAA8B,GACtF6K,uBAAwB,CAAEtkB,KAAM,yBAA0ByZ,6BAA8B,GACxF8K,uBAAwB,CAAEvkB,KAAM,yBAA0ByZ,6BAA8B,GACxF+K,wBAAyB,CAAExkB,KAAM,0BAA2ByZ,6BAA8B,GAC1FgL,yBAA0B,CAAEzkB,KAAM,2BAA4ByZ,6BAA8B,GAC5FiL,0BAA2B,CAAE1kB,KAAM,4BAA6ByZ,6BAA8B,GAC9FkL,sBAAuB,CAAE3kB,KAAM,wBAAyByZ,6BAA8B,GACtFmL,uBAAwB,CAAE5kB,KAAM,yBAA0ByZ,6BAA8B,GACxFoL,wBAAyB,CAAE7kB,KAAM,0BAA2ByZ,6BAA8B,GAC1FqL,yBAA0B,CAAE9kB,KAAM,2BAA4ByZ,6BAA8B,GAC5FsL,sBAAuB,CAAE/kB,KAAM,wBAAyByZ,6BAA8B,GACtFuL,uBAAwB,CAAEhlB,KAAM,yBAA0ByZ,6BAA8B,GACxFwL,sBAAuB,CAAEjlB,KAAM,wBAAyByZ,6BAA8B,GACtFyL,uBAAwB,CAAEllB,KAAM,yBAA0ByZ,6BAA8B,GACxF0L,wBAAyB,CAAEnlB,KAAM,0BAA2ByZ,6BAA8B,GAC1F2L,yBAA0B,CAAEplB,KAAM,2BAA4ByZ,6BAA8B,GAC5F4L,yBAA0B,CAAErlB,KAAM,2BAA4ByZ,6BAA8B,GAC5F6L,0BAA2B,CAAEtlB,KAAM,4BAA6ByZ,6BAA8B,GAC9F8L,sBAAuB,CAAEvlB,KAAM,wBAAyByZ,6BAA8B,GACtF+L,uBAAwB,CAAExlB,KAAM,yBAA0ByZ,6BAA8B,GACxFgM,wBAAyB,CAAEzlB,KAAM,0BAA2ByZ,6BAA8B,GAC1FiM,yBAA0B,CAAE1lB,KAAM,2BAA4ByZ,6BAA8B,GAC5FkM,sBAAuB,CAAE3lB,KAAM,wBAAyByZ,6BAA8B,GACtFmM,uBAAwB,CAAE5lB,KAAM,yBAA0ByZ,6BAA8B,GACxFoM,yBAA0B,CAAE7lB,KAAM,2BAA4ByZ,6BAA8B,GAC5FqM,0BAA2B,CAAE9lB,KAAM,4BAA6ByZ,6BAA8B,GAC9FsM,wBAAyB,CAAE/lB,KAAM,0BAA2ByZ,6BAA8B,GAC1FuM,yBAA0B,CAAEhmB,KAAM,2BAA4ByZ,6BAA8B,GAC5FwM,8BAA+B,CAAEjmB,KAAM,gCAAiCyZ,6BAA8B,GACtGyM,2BAA4B,CAAElmB,KAAM,6BAA8ByZ,6BAA8B,GAChG0M,8BAA+B,CAAEnmB,KAAM,gCAAiCyZ,6BAA8B,GACtG2M,2BAA4B,CAAEpmB,KAAM,6BAA8ByZ,6BAA8B,GAChG4M,gCAAiC,CAAErmB,KAAM,kCAAmCyZ,6BAA8B,GAC1G6M,6BAA8B,CAAEtmB,KAAM,+BAAgCyZ,6BAA8B,GACpG8M,8BAA+B,CAAEvmB,KAAM,gCAAiCyZ,6BAA8B,GACtG+M,2BAA4B,CAAExmB,KAAM,6BAA8ByZ,6BAA8B,GAChGgN,iCAAkC,CAAEzmB,KAAM,mCAAoCyZ,6BAA8B,GAC5GiN,8BAA+B,CAAE1mB,KAAM,gCAAiCyZ,6BAA8B,GACtGkN,+BAAgC,CAAE3mB,KAAM,iCAAkCyZ,6BAA8B,GACxGmN,4BAA6B,CAAE5mB,KAAM,8BAA+ByZ,6BAA8B,GAClGoN,8BAA+B,CAAE7mB,KAAM,gCAAiCyZ,6BAA8B,GACtGqN,2BAA4B,CAAE9mB,KAAM,6BAA8ByZ,6BAA8B,GAChGsN,8BAA+B,CAAE/mB,KAAM,gCAAiCyZ,6BAA8B,GACtGuN,2BAA4B,CAAEhnB,KAAM,6BAA8ByZ,6BAA8B,GAChGwN,mBAAoB,CAAEjnB,KAAM,qBAAsByZ,6BAA8B,GAChFyN,qBAAsB,CAAElnB,KAAM,uBAAwByZ,6BAA8B,GACpF0N,iBAAkB,CAAEnnB,KAAM,mBAAoByZ,6BAA8B,GAC5E2N,iBAAkB,CAAEpnB,KAAM,mBAAoByZ,6BAA8B,GAC5E4N,mBAAoB,CAAErnB,KAAM,qBAAsByZ,6BAA8B,GAChF6N,qBAAsB,CAAEtnB,KAAM,uBAAwByZ,6BAA8B,GACpF8N,oBAAqB,CAAEvnB,KAAM,sBAAuByZ,6BAA8B,GAClF+N,sBAAuB,CAAExnB,KAAM,wBAAyByZ,6BAA8B,GACtFgO,mBAAoB,CAAEznB,KAAM,qBAAsByZ,6BAA8B,GAChFiO,qBAAsB,CAAE1nB,KAAM,uBAAwByZ,6BAA8B,GACpFkO,oBAAqB,CAAE3nB,KAAM,sBAAuByZ,6BAA8B,GAClFmO,sBAAuB,CAAE5nB,KAAM,wBAAyByZ,6BAA8B,GACtFoO,oBAAqB,CAAE7nB,KAAM,sBAAuByZ,6BAA8B,GAClFqO,sBAAuB,CAAE9nB,KAAM,wBAAyByZ,6BAA8B,GACtFsO,oBAAqB,CAAE/nB,KAAM,sBAAuByZ,6BAA8B,GAClFuO,sBAAuB,CAAEhoB,KAAM,wBAAyByZ,6BAA8B,GACtFwO,oBAAqB,CAAEjoB,KAAM,sBAAuByZ,6BAA8B,GAClFyO,sBAAuB,CAAEloB,KAAM,wBAAyByZ,6BAA8B,GACtF0O,oBAAqB,CAAEnoB,KAAM,sBAAuByZ,6BAA8B,GAClF2O,sBAAuB,CAAEpoB,KAAM,wBAAyByZ,6BAA8B,GACtF4O,oBAAqB,CAAEroB,KAAM,sBAAuByZ,6BAA8B,GAClF6O,sBAAuB,CAAEtoB,KAAM,wBAAyByZ,6BAA8B,GACtF8O,oBAAqB,CAAEvoB,KAAM,sBAAuByZ,6BAA8B,GAClF+O,sBAAuB,CAAExoB,KAAM,wBAAyByZ,6BAA8B,GACtFgP,oBAAqB,CAAEzoB,KAAM,sBAAuByZ,6BAA8B,GAClFiP,sBAAuB,CAAE1oB,KAAM,wBAAyByZ,6BAA8B,GACtFkP,4BAA6B,CAAE3oB,KAAM,8BAA+ByZ,6BAA8B,GAClGmP,8BAA+B,CAAE5oB,KAAM,gCAAiCyZ,6BAA8B,GACtGoP,6BAA8B,CAAE7oB,KAAM,+BAAgCyZ,6BAA8B,GACpGqP,oCAAqC,CACjC9oB,KAAM,sCACNyZ,6BAA8B,GAElCsP,qBAAsB,CAAE/oB,KAAM,uBAAwByZ,6BAA8B,GACpFuP,sBAAuB,CAAEhpB,KAAM,wBAAyByZ,6BAA8B,IAkCpFwP,EAAgB,CAClB,KAAM,CAAEjpB,KAAM,kBAAmBkpB,eAAe,GAChDC,GAAI,CACAC,UAAW,0BACXC,UAAW,0BACXH,eAAe,GAEnB,KAAM,CACFE,UAAW,mBACXC,UAAW,mBACXH,eAAe,GAEnB,KAAM,CACFE,UAAW,mBACXC,UAAW,mBACXH,eAAe,GAEnB,KAAM,CACFE,UAAW,oBACXC,UAAW,oBACXH,eAAe,GAEnB,KAAM,CAAElpB,KAAM,2BAA4BkpB,eAAe,GACzDI,GAAI,CACAF,UAAW,4BACXC,UAAW,4BACXH,eAAe,GAEnBK,GAAI,CAAEvpB,KAAM,kBAAmBkpB,eAAe,GAC9C,KAAM,CAAEE,UAAW,eAAgBC,UAAW,eAAgBH,eAAe,GAC7E,MAAO,CAAElpB,KAAM,eAAgBkpB,eAAe,GAC9C,MAAO,CAAElpB,KAAM,eAAgBkpB,eAAe,GAC9C,KAAM,CAAElpB,KAAM,eAAgBkpB,eAAe,GAC7CM,GAAI,CAAExpB,KAAM,iBAAkBkpB,eAAe,GAC7C,KAAM,CAAElpB,KAAM,kBAAmBkpB,eAAe,IAE9CO,EAAY,CACdC,QAAS,CAAE1pB,KAAM,sBACjB2pB,iBAAkB,CAAE3pB,KAAM,mBAC1B4pB,KAAM,CAAE5pB,KAAM,gBACd6pB,cAAe,CAAE7pB,KAAM,qBACvB8pB,GAAI,CAAE9pB,KAAM,iBACZ+pB,QAAS,CAAE/pB,KAAM,uCACjBgqB,UAAW,CAAEhqB,KAAM,2CACnBiqB,QAAS,CAAEjqB,KAAM,sCACjBkqB,UAAW,CAAElqB,KAAM,mCACnBmqB,UAAW,CAAEnqB,KAAM,iCACnBoqB,YAAa,CAAEpqB,KAAM,+CACrBqqB,UAAW,CAAErqB,KAAM,8BACnBsqB,WAAY,CAAEtqB,KAAM,uBACpBuqB,MAAO,CAAEvqB,KAAM,cACfwqB,KAAM,CAAExqB,KAAM,mBACdyqB,KAAM,CAAEzqB,KAAM,qBACd0qB,SAAU,CAAE1qB,KAAM,mBAClB2qB,SAAU,CAAE3qB,KAAM,wBAClB4qB,KAAM,CAAE5qB,KAAM,aACd6qB,cAAe,CAAE7qB,KAAM,mBACvB8qB,YAAa,CAAE9qB,KAAM,iBACrB+qB,KAAM,CAAE/qB,KAAM,aACdgrB,SAAU,CAAEhrB,KAAM,iBAClBirB,MAAO,CAAEjrB,KAAM,eAEZ,MAAMkrB,EAIT/oB,0BACI,GAAuC,IAAnC+oB,EAAOC,iBAAiB3oB,OACxB,MAAM,IAAI3C,EAAa,UAAW,yFAGlC,OAAOqrB,EAAOC,iBAAiB,GAGvChpB,sBAAsBipB,GAClB,IAAKA,KAAUA,KAAQpV,GACnB,MAAM,IAAInW,EAAa,cAAe,iBAAmBurB,GAC7D,OAAOpV,EAAMoV,GASjBjpB,qBAAqBkpB,EAAgBD,EAAO,SAAUE,GAClD,IAAIC,EAAU,CAAEC,aAAc,GACR,iBAAXF,IACPC,EAAUtsB,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI8X,GAAUD,IAExD,MAAMG,EAASJ,EAAehmB,MAAM,KACpC,GAAIomB,EAAOjpB,OAAS,EAChB,MAAM,IAAI3C,EAAa,eAAgB,iEAAiEwrB,KAE5G,MAAMtsB,EAAM0sB,EAAO,GAAGC,cAChB9oB,EAAQ8T,EAAU3X,GACxB,IAAK6D,EACD,MAAM,IAAI/C,EAAa,eAAgB,qBAAuBd,GAC9D6D,EAAMyV,SACNoT,EAAO,GAAK7oB,EAAMyV,OAAO1T,YAC7B,IAAI0T,EAAS7W,SAASiqB,EAAO,GAAI,IAEjCpT,IAAW,EAAIkT,EAAQC,aAEvB,IAAI7qB,GADuB,EAAT0X,EAAa,GACPzV,EAAMkM,OAAS,EACvCnO,GAAQuqB,EAAOS,eAAeP,GAAMlV,WACpC,IAAI0V,EAAS,EACTjrB,GAAQ,GAAa,EAAPA,EAAY,GAAM,IAChCirB,EAAS,GACTjrB,GAAQ,GAAa,EAAPA,EAAY,GAAM,IAChCirB,GAAU,GAEd,MAAMC,OAAqC,IAAlBjpB,EAAM+T,QAAmC,GAAT0B,EAAczV,EAAM+T,aAAUpW,EAEjFP,EAAO4C,EAAM5C,KACbsY,EAAc1V,EAAM0V,YAC1B,IAAIwT,EAAsB,GAC1B,GAAIL,EAAOjpB,OAAS,GAAKipB,EAAO,GAAI,CAChC,MAAMM,EAAYN,EAAO,GAAGC,cAC5BI,EAAsBvT,EAAgBwT,IAAc,GAExD,OAAO9sB,OAAOwU,OAAO,CAAE1U,IAAAA,EACnBsZ,OAAAA,EACA1X,KAAAA,EACAkrB,UAAAA,EAAWhV,WAAYjU,EAAMiU,WAAY7W,KAAAA,EACzC4rB,OAAAA,EACAtT,YAAAA,EAAa0T,WAAW,GAASF,GAEzC3pB,qBAAqB8pB,GACjB,QAAuB,IAAZA,GAA2BA,EAAU,GAAKA,EAAU,GAC3D,MAAM,IAAIpsB,EAAa,eAAgB,6DAA6DosB,KAExG,MAcMC,EAdQ,CACV,EAAG,IACH,EAAG,KACH,EAAG,IACH,EAAG,KACH,EAAG,IACH,EAAG,IACH,EAAG,KACH,EAAG,IACH,EAAG,KACH,EAAG,IACH,GAAI,KACJ,GAAI,KAEgBD,GACxB,IAAKC,EACD,MAAM,IAAIrsB,EAAa,eAAgB,mCAAmCosB,KAE9E,OAAOC,EAEX/pB,kBAAkBgqB,EAAMC,EAAQ,GAC5B,IAAIC,EACAllB,EAAQ,EACRmlB,EAAU,EACd,GAA2B,MAAvBH,EAAKT,cAAuB,CAC5B,MAAMa,EAAe,IAAIC,EAAM,wBAAyBtB,EAAOuB,sBAAsBjf,aAErF,GADA6e,EAAQ,wBACkB9rB,MAAtBgsB,EAAaplB,OAA6C5G,MAAvBgsB,EAAanlB,OAChD,MAAM,IAAIvH,EAAa,iBAAkB,6BAC7CsH,EAAQolB,EAAaplB,MACrBmlB,GAAWC,EAAanlB,OAAS,OAGjCD,EAAQ+jB,EAAOwB,UAAUP,GAE7B,MAAO,CACHzqB,KAAMyqB,EACNnsB,KAAMqsB,EACNM,SAAU,IAAMxlB,EAAQilB,EACxBE,QAAAA,GAKRnqB,iBAAiBT,GACb,OAAO,EAAIA,EAAKiD,WAAWnC,OAE/BL,yBAAyByqB,GACrB,OAAO3D,EAAc2D,GAEzBzqB,uBAAuBwS,GACnB,OAAO6E,EAAY7E,GAEvBxS,qBAAqBwS,GACjB,OAAO8U,EAAU9U,GAErBxS,oBAAoB0qB,GAChB,MAAMC,EAAUxY,EAAcuY,GAC9B,IAAKC,EACD,MAAM,IAAIjtB,EAAa,kBAAmB,4BAA4BgtB,MAE1E,IAAKC,EAAQnY,IACT,MAAO,GAEX,MAIMoY,EAJiB,CACnB1rB,EAAG,CAAC,EAAG,GAAK,IAAK,EAAG,EAAG,IAAK,KAC5B,IAAK,CAAC,EAAG,KAAM,GAAK,EAAG,IAAK,GAAK,IAERyrB,EAAQnY,KAC/BqY,EAAW,GACjB,IAAK,IAAI5nB,EAAI,EAAGA,EAAI0nB,EAAQtY,MAAOpP,EAAG,CAClC,MAAMzE,EAAOosB,EAAM3nB,GACnB4nB,EAASC,KAAK,CAAEte,KAAMme,EAAQnY,IAAKhU,KAAAA,IAEvC,OAAOqsB,EAEX7qB,0BACI,OAAOmS,EAEXnS,uBAAuB0qB,GACnB,OAAOA,KAAQvY,EAQnBnS,wBAAwB+qB,GACpB,MAAMC,EAAiB9Y,EAAgB6Y,GAIvC,QAHuB3sB,IAAnB4sB,IACAD,EAAWC,QAEa5sB,IAAxB6T,EAAU8Y,GACV,MAAM,IAAIrtB,EAAa,eAAgB,uCAAuCqtB,KAElF,OAAOA,EAGX/qB,0BAA0B+qB,GACtB,OAAO,IAAIprB,GAAWoD,MAAMgmB,EAAOkC,iBAAiBF,IAGxD/qB,wBAAwB+qB,GACpB,OAAOhC,EAAOmC,mBAAmBH,GAAUtqB,QAG/CT,uBAAuB+qB,GACnBA,EAAWhC,EAAOkC,iBAAiBF,GACnC,MAAMI,EAAQlZ,EAAU8Y,GACxB,QAAc3sB,IAAV+sB,EACA,MAAM,IAAIztB,EAAa,mBAE3B,OAAOytB,EAKXnrB,qBAAqB+qB,EAAUve,EAAO,KAClCue,EAAWhC,EAAOkC,iBAAiBF,GAEnC,MAAMltB,EAAOutB,EAAcL,GAC3B,QAAa3sB,IAATP,EACA,OAGJ,IAAIwtB,EAAsBxtB,EAAK2O,KAAKA,GAEpC,QAA4BpO,IAAxBitB,EAAmC,CAEnC,MAAMC,EAA4BlV,EAAgB5J,EAAK+c,eAEvD,QAAkCnrB,IAA9BktB,EACA,OAGJD,EAAsBvuB,OAAOwU,OAAO,CAAEia,UAAWD,EAA0BztB,MAAQytB,GAEvF,MAAMC,EAAYF,EAAoBE,UAOtC,OAAOzuB,OAAOwU,OAAOxU,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAIzT,EAAK2tB,QAAS,CAAEhB,SAJpD,CAACP,EAAQlB,EAAO0C,sBACtBpB,EAAMG,SAASe,EAAWtB,KAGuDoB,IAGpGtC,EAAO2C,WAAa,IACpB3C,EAAO4C,YAAc,GACrB5C,EAAO6C,qBAAuB,EAC9B7C,EAAO/W,WAAaA,EAIpB+W,EAAOC,iBAAmB,GAC1BD,EAAO0C,oBAAsB,GAC7B1C,EAAOuB,qBAAuB,GAC9BvB,EAAO8C,qBAAuB,GAC9B9C,EAAO+C,oBAAsB,GAQ7B/C,EAAOgD,wBAA0B,EACjChD,EAAOiD,cAAgB3U,EACvB0R,EAAOkD,uBA7UmB,CACtB,EAAG,CACChtB,EAAG,CAAC,GACJC,EAAG,CAAC,IAER,EAAG,CACCD,EAAG,CAAC,EAAG,IAEX,EAAG,CACCA,EAAG,CAAC,EAAG,EAAG,GACVC,EAAG,CAAC,EAAG,EAAG,GACVgtB,iBAAkB,CAAC,EAAG,EAAG,IAE7B,EAAG,CACCjtB,EAAG,CAAC,EAAG,EAAG,EAAG,GACbC,EAAG,CAAC,EAAG,EAAG,EAAG,GACbitB,sBAAuB,CAAC,EAAG,EAAG,EAAG,IAErC,EAAG,CACCltB,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAChBC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAChBktB,sBAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,GACpCC,2BAA4B,CAAC,EAAG,EAAG,EAAG,EAAG,IAE7C,EAAG,CACCptB,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACnBC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACnBotB,qBAAsB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACtCC,0BAA2B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAkTnDxD,EAAOyD,QAAU,CAEbC,MAAOC,OAAOC,aAAa,MAE3BC,KAAMF,OAAOC,aAAa,MAE1BE,QAASH,OAAOC,aAAa,MAE7BG,SAAUJ,OAAOC,aAAa,MAE9B,eAAgBD,OAAOC,aAAa,KAEpCI,QAASL,OAAOC,aAAa,KAE7BK,OAAQN,OAAOC,aAAa,OAGhC5D,EAAOkE,WAxoBgB,CACnB7tB,EAAG,CAAE+I,KAAM,QACX+kB,EAAG,CAAE/kB,KAAM,QACX7E,EAAG,CAAE6E,KAAM,YACXglB,EAAG,CAAEhlB,KAAM,SACXvF,EAAG,CAAEuF,KAAM,SACXjL,EAAG,CAAEiL,KAAM,UAooBf4gB,EAAOqE,QAAU,CACbC,UAAW,EACXC,WAAY,EACZ9hB,WAAYwG,GAOhB,MAAMoZ,EAAgB,CAClB,MAAO,CACHI,OAAQ,CACJ+B,MAAM,EACNC,YAAa,EACbC,MAAM,EACNC,WAAY,EACZC,WAAY,EACZC,WAAY,GAEhBphB,KAAM,CACFpN,EAAG,CAECmsB,UAAW,uBAKfjoB,EAAG,CAECioB,UAAW,4BAKf4B,EAAG,CAEC5B,UAAW,wBACXiC,YAAa,GAKjBN,EAAG,CAEC3B,UAAW,kBACXvV,MAAM,EACN6X,SAAU,MACVH,WAAY,IAKhB9qB,EAAG,CAGC4nB,SAAU,IAAMzB,EAAO8C,qBACvBgC,SAAU,OAEd3wB,EAAG,CAECquB,UAAW,yBAIvB,EAAG,CACCC,OAAQ,CACJ+B,MAAM,EACNC,YAAa,EACbC,MAAM,EACNC,WAAY,EACZC,WAAY,EACZC,WAAY,GAEhBphB,KAAM,CACFpN,EAAG,CAECmsB,UAAW,iBAKfjoB,EAAG,CAECioB,UAAW,wBAKf4B,EAAG,CAEC5B,UAAW,iBACXiC,aAAc,GAKlBN,EAAG,CAEC3B,UAAW,YACXvV,MAAM,EACN6X,SAAU,MACVH,WAAY,IAKhB9qB,EAAG,CAGC4nB,SAAU,IAAMzB,EAAO8C,qBACvBgC,SAAU,OAEd3wB,EAAG,CAECquB,UAAW,mBAIvB,EAAG,CACCC,OAAQ,CACJ+B,MAAM,EACNC,YAAa,EACbC,MAAM,EACNC,WAAY,EACZC,WAAY,EACZC,WAAY,GAEhBphB,KAAM,CACFpN,EAAG,CAECmsB,UAAW,gBAKfjoB,EAAG,CAECioB,UAAW,uBAKf4B,EAAG,CAEC5B,UAAW,gBACXiC,aAAc,GAKlBN,EAAG,CAEC3B,UAAW,WACXgC,MAAM,EACNvX,MAAM,EACN6X,SAAU,MACVH,YAAa,IAKjB9qB,EAAG,CAGC4nB,SAAU,IAAMzB,EAAO8C,qBACvBgC,SAAU,OAEd3wB,EAAG,CAECquB,UAAW,kBAIvB,EAAG,CACCC,OAAQ,CACJ+B,MAAM,EACNC,YAAa,EACbC,MAAM,EACNC,WAAY,EACZC,WAAY,EACZC,WAAY,GAEhBphB,KAAM,CACFpN,EAAG,CAECmsB,UAAW,iBAKfjoB,EAAG,CAECioB,UAAW,wBAKf4B,EAAG,CAEC5B,UAAW,kBAKf2B,EAAG,CAEC3B,UAAW,cACXgC,MAAM,EACNvX,MAAM,EACN6X,SAAU,MACVH,YAAa,GACbC,WAAY,IACZC,WAAY,KAKhBhrB,EAAG,CAGC4nB,SAAU,IAAMzB,EAAO8C,qBACvBgC,SAAU,OAEd3wB,EAAG,CAECquB,UAAW,mBAIvB,EAAG,CACCC,OAAQ,CACJ+B,MAAM,EACNC,YAAa,EACbC,MAAM,EACNK,WAAY,EACZC,oBAAqB,EACrBC,iBAAkB,YAClBC,mBAAoB,cACpBP,WAAY,EACZC,WAAY,EACZC,WAAY,GAEhBphB,KAAM,CACFpN,EAAG,CAECmsB,UAAW,iBAKfjoB,EAAG,CAECioB,UAAW,wBAKf4B,EAAG,CAEC5B,UAAW,kBAKf2B,EAAG,CAEC3B,UAAW,UACXgC,MAAM,EACNE,MAAM,EACNzX,MAAM,EACN6X,SAAU,MACVH,YAAa,GACbC,WAAY,EACZC,WAAY,GAKhBhrB,EAAG,CAGC4nB,SAAU,IAAMzB,EAAO8C,qBACvBgC,SAAU,OAEd3wB,EAAG,CAECquB,UAAW,mBAIvB,GAAI,CACAC,OAAQ,CACJsC,WAAY,EACZC,oBAAqB,EACrBR,MAAM,EACNC,YAAa,EACbC,MAAM,EACNO,iBAAkB,aAClBC,mBAAoB,eACpBP,WAAY,EACZC,WAAY,EACZC,WAAY,GAEhBphB,KAAM,CACFpN,EAAG,CAECmsB,UAAW,iBAKfjoB,EAAG,CAECioB,UAAW,wBAKf4B,EAAG,CAEC5B,UAAW,kBAKf2B,EAAG,CAEC3B,UAAW,WACXgC,MAAM,EACNE,MAAM,EACNzX,MAAM,EACN6X,SAAU,MACVH,YAAa,GACbC,WAAY,EACZC,WAAY,GAKhBhrB,EAAG,CAGC4nB,SAAU,IAAMzB,EAAO8C,qBACvBgC,SAAU,OAEd3wB,EAAG,CAECquB,UAAW,mBAIvB,GAAI,CACAC,OAAQ,CACJsC,WAAY,EACZC,oBAAqB,IACrBR,MAAM,EACNC,YAAa,EACbC,MAAM,EACNO,iBAAkB,aAClBC,mBAAoB,eACpBP,WAAY,EACZC,WAAY,EACZC,WAAY,GAEhBphB,KAAM,CACFpN,EAAG,CAECmsB,UAAW,iBAKfjoB,EAAG,CAECioB,UAAW,wBAKf4B,EAAG,CAEC5B,UAAW,kBAKf2B,EAAG,CAEC3B,UAAW,WACXgC,MAAM,EACNE,MAAM,EACNzX,MAAM,EACN6X,SAAU,MACVH,YAAa,IACbC,WAAY,EACZC,WAAY,GAKhBhrB,EAAG,CAGC4nB,SAAU,IAAMzB,EAAO8C,qBACvBgC,SAAU,OAEd3wB,EAAG,CAECquB,UAAW,mBAIvB,GAAI,CACAC,OAAQ,CACJsC,WAAY,EACZC,oBAAqB,GACrBR,MAAM,EACNC,YAAa,EACbC,MAAM,EACNO,iBAAkB,aAClBC,mBAAoB,eACpBP,WAAY,EACZC,WAAY,EACZC,WAAY,GAEhBphB,KAAM,CACFpN,EAAG,CAECmsB,UAAW,iBAKfjoB,EAAG,CAECioB,UAAW,wBAKf4B,EAAG,CAEC5B,UAAW,kBAKf2B,EAAG,CAEC3B,UAAW,WACXgC,MAAM,EACNE,MAAM,EACNzX,MAAM,EACN6X,SAAU,MACVH,YAAa,IACbC,WAAY,EACZC,WAAY,GAKhBhrB,EAAG,CAGC4nB,SAAU,IAAMzB,EAAO8C,qBACvBgC,SAAU,OAEd3wB,EAAG,CAECquB,UAAW,mBAIvB,IAAK,CACDC,OAAQ,CACJsC,WAAY,EACZC,oBAAqB,KACrBR,MAAM,EACNC,YAAa,EACbC,MAAM,EACNO,iBAAkB,cAClBC,mBAAoB,gBACpBP,WAAY,EACZC,WAAY,EACZC,WAAY,GAEhBphB,KAAM,CACFpN,EAAG,CAECmsB,UAAW,iBAKfjoB,EAAG,CAECioB,UAAW,wBAKf4B,EAAG,CAEC5B,UAAW,kBAKf2B,EAAG,CAEC3B,UAAW,YACXgC,MAAM,EACNE,MAAM,EACNzX,MAAM,EACN6X,SAAU,MACVH,YAAa,IACbC,WAAY,EACZC,WAAY,GAKhBhrB,EAAG,CAGC4nB,SAAU,IAAMzB,EAAO8C,qBACvBgC,SAAU,OAEd3wB,EAAG,CAECquB,UAAW,oBCrxCpB,IAAI2C,ECHAC,GDIX,SAAWD,GACPA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAoB,OAAI,GAAK,SAJ7C,CAKGA,IAAgBA,EAAc,KACjC,MAAME,EACFxwB,YAAYywB,EAAWxwB,EAAMywB,GACzB7xB,KAAK8xB,OAAS,EACd9xB,KAAKuO,QAAUqf,EAAMmE,YAAYH,EAAWxwB,EAAMywB,GAClD7xB,KAAKgyB,KAAOpE,EAAMqE,sBAAsBjyB,KAAKuO,QAAQ2jB,QAASlyB,KAAKuO,QAAQif,MAAOxtB,KAAKuO,QAAQ4jB,QAASnyB,KAAKuO,QAAQ6jB,SACjHP,IACA7xB,KAAK8xB,MAAQlE,EAAMyE,iBAAiBryB,KAAKuO,QAAQzB,KAAM+kB,EAAUzwB,EAAM,SAAU,KAwB7F,MAAMkxB,EACFnxB,YAAY+wB,EAASK,EAASC,EAAShF,GACnCxtB,KAAKkyB,QAAUA,EACflyB,KAAKuyB,QAAUA,EACfvyB,KAAKwyB,QAAUA,EACfxyB,KAAKwtB,MAAQA,EACbxtB,KAAKwG,EAAI,EAGb2E,OACI,OAAOnL,KAAKwG,GAAKxG,KAAKkyB,QAAQtuB,OAElCoH,OACI,OAAOhL,KAAKkyB,QAAQlyB,KAAKwG,KAE7BisB,QACI,OAAOzyB,KAAKuyB,QAAUvyB,KAAKkyB,QAAQlyB,KAAKwG,KAAOxG,KAAKwtB,MAExDkF,QACI,OAAO1yB,KAAKwyB,QAAUxyB,KAAKkyB,QAAQlyB,KAAKwG,KAAOxG,KAAKwtB,MAExDjqB,aAAagD,GACT,MAAM2E,EAAS,GACTynB,EAAQpsB,EAAIE,MAAM,KACxB,IAAID,EAAI,EACR,KAAOA,EAAImsB,EAAM/uB,QACb,OAAQ+uB,EAAMnsB,MACV,IAAK,IACD0E,EAAOmjB,KAAKoD,EAAYmB,KAAMhwB,SAAS+vB,EAAMnsB,MAAO5D,SAAS+vB,EAAMnsB,OACnE,MACJ,IAAK,IACD0E,EAAOmjB,KAAKoD,EAAYoB,KAAMjwB,SAAS+vB,EAAMnsB,MAAO5D,SAAS+vB,EAAMnsB,OACnE,MACJ,IAAK,IACD0E,EAAOmjB,KAAKoD,EAAYqB,UAAWlwB,SAAS+vB,EAAMnsB,MAAO5D,SAAS+vB,EAAMnsB,MAAO5D,SAAS+vB,EAAMnsB,MAAO5D,SAAS+vB,EAAMnsB,OACpH,MACJ,IAAK,IACD0E,EAAOmjB,KAAKoD,EAAYsB,OAAQnwB,SAAS+vB,EAAMnsB,MAAO5D,SAAS+vB,EAAMnsB,MAAO5D,SAAS+vB,EAAMnsB,MAAO5D,SAAS+vB,EAAMnsB,MAAO5D,SAAS+vB,EAAMnsB,MAAO5D,SAAS+vB,EAAMnsB,OAIzK,OAAO0E,GAGR,MAAM0iB,UAAc/b,EAMvB1Q,YAAYC,EAAM0wB,EAAOnF,GACrBrrB,QAGAtB,KAAKgyB,KAAO,IAAItrB,EAAY,EAAG,EAAG,EAAG,GACrC1G,KAAKgzB,UAAY,GACjBhzB,KAAKizB,UAAY,GACjBjzB,KAAK2sB,QAAU,GACf3sB,KAAKwtB,MAAQ,EACbxtB,KAAKoB,KAAOA,EACZpB,KAAK8xB,MAAQA,EACb9xB,KAAKkzB,YAAc,CAAExxB,EAAG,EAAGiF,EAAG,GAC9B3G,KAAKmyB,QAAU,EACfnyB,KAAKoyB,QAAU,EACXzF,EACA3sB,KAAKmzB,WAAWxG,GAGhB3sB,KAAKozB,QAKF9vB,sBACP,MAAO,QAYXC,wBAAwBuJ,EAAM+kB,EAAUzwB,EAAMjB,EAAKgP,GAC/C,IAAInL,EAAQ8I,EAAKoC,aAAa,UAAU2iB,KAAYzwB,KAAQjB,SAAOwB,GAKnE,YAJcA,IAAVqC,IAEAA,EAAQ8I,EAAKoC,aAAa,UAAU2iB,KAAY1xB,IAAOgP,IAEpDnL,EAEXT,mBAAmBquB,EAAWxwB,GAE1B,IAAIqsB,EACA3gB,EAFJrL,EAAQmwB,EAAW,eAAgB,+BAGnC,IAAK,IAAIprB,EAAI,EAAGA,EAAIorB,EAAUhuB,OAAQ4C,IAGlC,GAFAsG,EAAO8kB,EAAUprB,GACjBinB,EAAQ3gB,EAAKkC,YAAY5N,GACrBqsB,EACA,MAAO,CAAEA,MAAAA,EAAO3gB,KAAAA,GAExB,MAAM,IAAI7L,EAAa,WAAY,SAASG,6BAEhDmC,mBAAmBquB,EAAWxwB,EAAMywB,GAChC,MAAM,MAAEpE,EAAK,KAAE3gB,GAAS8gB,EAAMyF,YAAYzB,EAAWxwB,GACrD,IAAKqsB,EAAMrtB,EACP,MAAM,IAAIa,EAAa,WAAY,SAASG,6BAChD,IAAI+wB,EAAU,EACVC,EAAU,EACV5E,EAAQ,EACRqE,GAAY/kB,IACZqlB,EAAUvE,EAAMyE,iBAAiBvlB,EAAM+kB,EAAUzwB,EAAM,SAAU,GACjEgxB,EAAUxE,EAAMyE,iBAAiBvlB,EAAM+kB,EAAUzwB,EAAM,SAAU,GACjEosB,EAAQI,EAAMyE,iBAAiBvlB,EAAM+kB,EAAUzwB,EAAM,QAAS,IAElE,MAAMkyB,EAAQ7F,EAAM6F,MACdC,EAAQ9F,EAAM8F,MACdC,EAAK/F,EAAM+F,GAIjB,OAHK/F,EAAMgG,iBACPhG,EAAMgG,eAAiBnB,EAAahsB,MAAMmnB,EAAMrtB,IAE7C,CACHkzB,MAAAA,EACAC,MAAAA,EACApB,QAAAA,EACAC,QAAAA,EACA5E,MAAAA,EACAgG,GAAAA,EACAtB,QAASzE,EAAMgG,eACf3mB,KAAAA,EACAvE,MAAOgrB,EAAQD,EACf9qB,OAAQgrB,GAchBjwB,mBAAmBmwB,EAAKC,EAAOC,EAAO9B,EAAO1wB,EAAMurB,GAC/C,IAAI9gB,EACJ,MAAMyC,EAAOsf,EAAMiG,MAAMC,OAAO1yB,EAAMurB,MAAAA,OAAyC,EAASA,EAAQkF,UAC1FtjB,EAAUD,EAAKC,SACF,GAAfD,EAAKwjB,QACLA,EAAQxjB,EAAKwjB,OAEjB,MAAMiC,EAAyF,QAA1EloB,EAAK8gB,MAAAA,OAAyC,EAASA,EAAQa,aAA0B,IAAP3hB,EAAgBA,EAAK,EACtH2hB,EAAkB,GAARsE,GAAgD,IAA/BvjB,EAAQzB,KAAKgC,iBAA4BP,EAAQif,MAAQuG,EAE1F,OADAnG,EAAMoG,cAAcN,EAAKnlB,EAAQ2jB,QAAS1E,EAAOmG,EAAQplB,EAAQ4jB,QAAU4B,EAAaH,EAAQrlB,EAAQ6jB,QAAU2B,GAC3GxlB,EAEXhL,qBAAqBmwB,EAAKxB,EAAS1E,EAAOmG,EAAOC,GAC7C,MAAMK,EAAK,IAAI3B,EAAaJ,EAASyB,EAAOC,EAAOpG,GAEnD,IAAI9rB,EAAGiF,EACP,IAFA+sB,EAAIQ,aAEID,EAAG9oB,QACP,OAAQ8oB,EAAGjpB,QACP,KAAKymB,EAAYmB,KACbc,EAAIS,OAAOF,EAAGxB,QAASwB,EAAGvB,SAC1B,MACJ,KAAKjB,EAAYoB,KACba,EAAIU,OAAOH,EAAGxB,QAASwB,EAAGvB,SAC1B,MACJ,KAAKjB,EAAYqB,UACbpxB,EAAIuyB,EAAGxB,QACP9rB,EAAIstB,EAAGvB,QACPgB,EAAIW,iBAAiBJ,EAAGxB,QAASwB,EAAGvB,QAAShxB,EAAGiF,GAChD,MACJ,KAAK8qB,EAAYsB,OACbrxB,EAAIuyB,EAAGxB,QACP9rB,EAAIstB,EAAGvB,QACPgB,EAAIY,cAAcL,EAAGxB,QAASwB,EAAGvB,QAASuB,EAAGxB,QAASwB,EAAGvB,QAAShxB,EAAGiF,GAIjF+sB,EAAIa,OAERhxB,6BAA6B2uB,EAAS1E,EAAOmG,EAAOC,GAChD,MAAMK,EAAK,IAAI3B,EAAaJ,EAASyB,EAAOC,EAAOpG,GAC7CgH,EAAW,IAAIzsB,EAErB,IAEIrG,EAAGiF,EAFH8tB,EAAOd,EACPe,EAAOd,EAEX,MAAQK,EAAG9oB,QACP,OAAQ8oB,EAAGjpB,QACP,KAAKymB,EAAYmB,KAEb6B,EAAOR,EAAGxB,QACViC,EAAOT,EAAGvB,QACV,MACJ,KAAKjB,EAAYoB,KACb2B,EAAS/rB,SAASgsB,EAAMC,GACxBD,EAAOR,EAAGxB,QACViC,EAAOT,EAAGvB,QACV8B,EAAS/rB,SAASgsB,EAAMC,GACxB,MACJ,KAAKjD,EAAYqB,UACbpxB,EAAIuyB,EAAGxB,QACP9rB,EAAIstB,EAAGvB,QACP8B,EAAS5rB,kBAAkB6rB,EAAMC,EAAMT,EAAGxB,QAASwB,EAAGvB,QAAShxB,EAAGiF,GAClE8tB,EAAO/yB,EACPgzB,EAAO/tB,EACP,MACJ,KAAK8qB,EAAYsB,OACbrxB,EAAIuyB,EAAGxB,QACP9rB,EAAIstB,EAAGvB,QACP8B,EAASjrB,eAAekrB,EAAMC,EAAMT,EAAGxB,QAASwB,EAAGvB,QAASuB,EAAGxB,QAASwB,EAAGvB,QAAShxB,EAAGiF,GACvF8tB,EAAO/yB,EACPgzB,EAAO/tB,EAInB,OAAO,IAAID,EAAY8tB,EAASnsB,QAASmsB,EAASlsB,QAASksB,EAASjsB,QAASisB,EAAShsB,UAE1FjF,gBAAgBnC,EAAM0wB,EAAOD,GACzB,MAAMvjB,EAAOsf,EAAMiG,MAAMC,OAAO1yB,EAAMywB,IACnB,GAAfvjB,EAAKwjB,QACLA,EAAQxjB,EAAKwjB,OAEjB,MAAMtE,EAAiB,GAARsE,GAAmD,IAApCxjB,EAAKC,QAAQzB,KAAKgC,iBAChD,OAAOR,EAAK0jB,KAAK/qB,OAASumB,EAG9B/Z,QAAQ3R,IAGR6yB,UACI,OAAO30B,KAAKoB,KAGhB+xB,WAAWxG,GACP3sB,KAAK2sB,QAAUtsB,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAK2sB,SAAUA,GAC9D3sB,KAAKozB,QAETwB,SAAS9C,GAEL,OADA9xB,KAAK8xB,MAAQA,EACN9xB,KAEX60B,SAASC,GAEL,OADA90B,KAAK80B,MAAQA,EACN90B,KAEX+0B,UAAU5C,GAEN,OADAnyB,KAAKmyB,QAAUA,EACRnyB,KAEXg1B,UAAU5C,GAEN,OADApyB,KAAKoyB,QAAUA,EACRpyB,KAEXozB,QACI,MAAM9kB,EAAOsf,EAAMiG,MAAMC,OAAO9zB,KAAKoB,KAAMpB,KAAK2sB,QAAQkF,UACxD7xB,KAAKuO,QAAUD,EAAKC,SAED,GAAfD,EAAKwjB,QACL9xB,KAAK8xB,MAAQxjB,EAAKwjB,OAEtB9xB,KAAKwtB,MAAsB,GAAbxtB,KAAK8xB,OAAmD,IAApC9xB,KAAKuO,QAAQzB,KAAKgC,iBACpD9O,KAAKgyB,KAAO,IAAItrB,EAAY4H,EAAK0jB,KAAKjrB,OAAS/G,KAAKwtB,MAAOlf,EAAK0jB,KAAKhrB,OAAShH,KAAKwtB,MAAOlf,EAAK0jB,KAAK/qB,OAASjH,KAAKwtB,MAAOlf,EAAK0jB,KAAK9qB,OAASlH,KAAKwtB,OAErJyH,eACI,OAAOxzB,EAAQzB,KAAKuO,QAAS,WAAY,SAASvO,KAAKoB,4BAE3DwN,aACI,MAAML,EAAUvO,KAAKi1B,eACfC,EAAe3mB,EAAQif,MAC7B,MAAO,CACH8F,MAAO/kB,EAAQ+kB,MAAQtzB,KAAKwtB,MAAQ0H,EACpC3B,MAAOhlB,EAAQglB,MAAQvzB,KAAKwtB,MAAQ0H,EACpC3sB,MAAOvI,KAAKgyB,KAAK/qB,OACjBuB,OAAQxI,KAAKgyB,KAAK9qB,OAClBsmB,MAAOxtB,KAAKwtB,MAAQ0H,EACpB/C,QAAS5jB,EAAQ4jB,QACjBC,QAAS7jB,EAAQ6jB,QACjBF,QAAS3jB,EAAQ2jB,QACjBplB,KAAMyB,EAAQzB,KACd0mB,GAAIjlB,EAAQilB,IAGpB2B,WAAWzzB,GACP,MAAM,KAAEswB,GAAShyB,KAEXo1B,GAAU1zB,EADAsB,KAAK8C,IAAIksB,EAAKjrB,OAASirB,EAAK/qB,SACb+qB,EAAK/qB,OACpCjH,KAAKkzB,YAAYxxB,GAAK0zB,EAE1BC,WAAW1uB,GACP,MAAM,KAAEqrB,GAAShyB,KAEXs1B,GAAU3uB,EADA3D,KAAK8C,IAAIksB,EAAKhrB,OAASgrB,EAAK9qB,SACb8qB,EAAK9qB,OACpClH,KAAKkzB,YAAYvsB,GAAK2uB,EAE1BC,UAAU7zB,EAAGiF,GACT3G,KAAKm1B,WAAWzzB,GAChB1B,KAAKq1B,WAAW1uB,GAEpB6uB,OAAO9B,EAAKhyB,EAAGiF,GACX,MAAM4H,EAAUvO,KAAKi1B,eACf/C,EAAU3jB,EAAQ2jB,QAClB1E,EAAQxtB,KAAKwtB,MAAQjf,EAAQif,MACnCxtB,KAAK8T,cACL9T,KAAKwS,WAAWkhB,GAChB,MAAM+B,EAAO/zB,EAAI1B,KAAKkzB,YAAYxxB,EAAI6M,EAAQ4jB,QACxCuD,EAAO/uB,EAAI3G,KAAKkzB,YAAYvsB,EAAI4H,EAAQ6jB,QAC9CxE,EAAMoG,cAAcN,EAAKxB,EAAS1E,EAAOiI,EAAMC,GAC/C11B,KAAKqT,aAAaqgB,GAEtBiC,aACI,OAAOl0B,EAAQzB,KAAK80B,MAAO,UAAW,kCAE1Cc,cAAcl0B,GACV,MAAM+Q,EAAUzS,KAAKwT,eACfjF,EAAUvO,KAAKi1B,eACfH,EAAQ90B,KAAK21B,aACbzD,EAAU3jB,EAAQ2jB,QAClB1E,EAAQxtB,KAAKwtB,MAAQjf,EAAQif,MACnCxtB,KAAK8T,cACL9T,KAAKwS,aACL,MAAMijB,EAAO/zB,EAAI1B,KAAKmyB,QAAU5jB,EAAQ4jB,QAClCuD,EAAOZ,EAAMe,gBAAkB71B,KAAKoyB,QAAU7jB,EAAQ6jB,QAC5DxE,EAAMoG,cAAcvhB,EAASyf,EAAS1E,EAAOiI,EAAMC,GACnD11B,KAAKqT,gBAGbua,EAAMiG,MAAQ,IAjWd,MACI1yB,cACInB,KAAK6zB,MAAQ,IAAIiC,IAErBhC,OAAO1yB,EAAMywB,GACT,IAAIkE,EAAU/1B,KAAK6zB,MAAMrzB,IAAIotB,EAAMoI,wBACnBr0B,IAAZo0B,IACAA,EAAU,GACV/1B,KAAK6zB,MAAMxwB,IAAIuqB,EAAMoI,kBAAmBD,IAE5C,MAAM51B,EAAM0xB,EAAW,GAAGzwB,KAAQywB,IAAazwB,EAC/C,IAAI60B,EAAQF,EAAQ51B,GACpB,QAAcwB,IAAVs0B,EAAqB,CACrB,MAAMC,EAAiB5J,EAAOC,iBAAiBtqB,QAC/Cg0B,EAAQ,IAAItE,EAAgBuE,EAAgB90B,EAAMywB,GAClDkE,EAAQ51B,GAAO81B,EAEnB,OAAOA,IAoVfrI,EAAMoI,kBAAoB,GCxX1B,SAAWtE,GACPA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAwB,MAAI,GAAK,QAClDA,EAAiBA,EAAwB,MAAI,GAAK,QAClDA,EAAiBA,EAAwB,MAAI,GAAK,QALtD,CAMGA,IAAqBA,EAAmB,KAepC,MAAMyE,UAAiBtkB,EAC1B1Q,cACIG,QACAtB,KAAKuI,MAAQ,EAEbvI,KAAKo2B,UAAY,EACjBp2B,KAAKoxB,SAAW+E,EAASE,SAASC,KAClCt2B,KAAKmyB,QAAU,EACfnyB,KAAKoyB,QAAU,EACfpyB,KAAKu2B,wBAA0B,EAMxBjzB,sBACP,MAAO,WAGA+yB,sBACP,OAAO3E,EAEA8E,4BACP,MAAO,CACHC,OAAQ/E,EAAiBgF,OACzBC,MAAOjF,EAAiBkF,MACxBC,MAAOnF,EAAiBoF,MACxBC,KAAMrF,EAAiB4E,KACvBU,MAAOtF,EAAiBuF,OAIhC7D,SAIArF,WACI,OAAO/tB,KAAKuI,MAGhB2uB,SAAS3uB,GAEL,OADAvI,KAAKuI,MAAQA,EACNvI,KAGXm3B,UACI,OAAO11B,EAAQzB,KAAKo3B,KAAM,SAAU,yBAMxCC,oBACI,MAAMxF,EAAW7xB,KAAKiS,cAEtB,OADAxQ,EAAQzB,KAAKkQ,MAAO,UAAW,cAAc2hB,uBACtCpwB,EAAQzB,KAAKo3B,KAAM,SAAU,cAAcvF,qBAMtDyF,QAAQF,GAEJ,OADAp3B,KAAKo3B,KAAOA,EACLp3B,KAGXu3B,WACI,OAAOv3B,KAAKkQ,MAGhBsnB,aACI,OAAO/1B,EAAQzB,KAAKkQ,MAAO,UAAW,kCAG1CunB,SAASvnB,GAEL,OADAlQ,KAAKkQ,MAAQA,EACNlQ,KAGX03B,qBACI,OAAO13B,KAAK23B,gBAGhBC,uBACI,OAAOn2B,EAAQzB,KAAK23B,gBAAiB,oBAAqB,6BAG9DE,mBAAmB9tB,GAEf,OADA/J,KAAK23B,gBAAkB5tB,EAChB/J,KAGX83B,cACI,OAAO93B,KAAKoxB,SAMhB2G,YAAY3G,GAGR,OAFApxB,KAAKoxB,SAA+B,iBAAbA,EAAwB+E,EAASK,eAAepF,GAAYA,EACnFpxB,KAAKozB,QACEpzB,KAGXg4B,YAAYj2B,GAER,OADA/B,KAAKo2B,UAAYr0B,EACV/B,KAGXg1B,UAAUruB,GAEN,OADA3G,KAAKoyB,QAAUzrB,EACR3G,KAGXi4B,2BAA2Bv2B,GACvB1B,KAAKu2B,wBAA0B70B,EAGnCw2B,6BACI,OAAOl4B,KAAKu2B,wBAMhBxB,UAAUrzB,GAQN,OAPA1B,KAAKmyB,QAAU,EACXnyB,KAAKoxB,WAAa+E,EAASE,SAASC,KACpCt2B,KAAKmyB,SAAWzwB,EAGhB1B,KAAKmyB,SAAWzwB,EAEb1B,KAGXm4B,YACI,OAAOn4B,KAAKmyB,QAGhB1e,OAEI,MADAzT,KAAKwT,eACC,IAAIvS,EAAa,iBAAkB,6CAG7Cm3B,sBAAsBC,EAAUjB,GAE5B,MAAMkB,EAAclB,EAAKmB,iBACnBhqB,EAAU+pB,EAAY1pB,aACtBkmB,EAAQsC,EAAKoB,WACbC,EAAiBH,EAAYvxB,OAASwH,EAAQmqB,UAAYnqB,EAAQoqB,WAAa34B,KAAKk4B,6BAC1FG,EAASO,SAASC,IACd,MAAMC,EAAiBD,EAAQN,iBAC3BzD,GACA+D,EAAQhE,SAASC,GACrBgE,EAAeC,WAAWN,OCpL/B,MAAMO,EACLlsB,SAAKzG,GACLrG,KAAKoU,QAAQ/N,GAEbyG,WACA,OAAO9M,KAAK+U,UAMhBkkB,WAAW5yB,GAEP,OADArG,KAAKoU,QAAQ/N,GACNrG,MCLR,MAAMk5B,UAAiBrnB,EAC1B1Q,cACIG,QACAtB,KAAKm5B,eAAgB,EACrBn5B,KAAKo5B,gBAAiB,EAGtBp5B,KAAK0uB,MAAQ,IAAIxrB,EAAS,EAAG,GAC7BlD,KAAKq5B,eAAiB,EACtBr5B,KAAKs5B,eAAiB,IAAIp2B,EAAS,EAAG,GAEtClD,KAAKuI,MAAQ,EACbvI,KAAKmyB,QAAU,EACfnyB,KAAKu5B,UAAY,GACjBv5B,KAAKw5B,YAAc,GACnBx5B,KAAKy5B,cAAe,EACpBz5B,KAAK05B,eAAiB,EAGtB15B,KAAK25B,cAAe,EAGpB35B,KAAK45B,iBAAmB,CAIpBC,QAAS,CAAE9C,KAAM,EAAGC,MAAO,GAG3B1I,SAAU,GAEVwL,WAAY,EAGZC,MAAO,CACHC,KAAM,EACNC,KAAM,EACNC,UAAW,IAIZ52B,sBACP,MAAO,WAGX8vB,QACI,OAAOpzB,KAGXm6B,WACI,OAAOn6B,KAAK0uB,MAGhB0L,oBACI,OAAOp6B,KAAK25B,aAGhBU,eAAerJ,GAEX,OADAhxB,KAAK25B,aAAe3I,EACbhxB,KAGXk3B,SAAS3uB,GACLvI,KAAKuI,MAAQA,EAGjBwlB,WACI,IAAK/tB,KAAKm5B,cACN,MAAM,IAAIl4B,EAAa,kBAAmB,+CAE9C,OAAOjB,KAAKuI,OAASvI,KAAK23B,gBAAkB33B,KAAK23B,gBAAgB5J,WAAa,GAGlFgH,UAAUrzB,GAEN,OADA1B,KAAKmyB,QAAUzwB,EACR1B,KAGXm4B,YACI,OAAOn4B,KAAKmyB,QAGhBprB,OAEI,OADoB/G,KAAKs6B,iBAAiB,uCACvBvzB,OAAS/G,KAAKmyB,QAGrCoI,sBACI,OAAOv6B,KAAK45B,iBAGhBY,kBACI,OAAIx6B,KAAKy6B,kBACEz6B,KAAK05B,eAET,EAGXgB,gBAAgBC,GAEZ,OADA36B,KAAK05B,eAAiBiB,EACf36B,KAGXy6B,kBACI,OAAOz6B,KAAKy5B,aAGhBmB,mBAAmBnB,GAEf,OADAz5B,KAAKy5B,aAAeA,EACbz5B,KAMX66B,WACI,OAAOp5B,EAAQzB,KAAK86B,MAAO,UAAW,0BAG1CC,SAASD,GACL96B,KAAK86B,MAAQA,EAGjBE,YACI,OAAOh7B,KAAKi7B,OAGhBC,iBACI,OAAOl7B,KAAKw5B,YAOhB2B,YAAYF,GACR,IAAIG,EACAC,EACJ,GAAIJ,EAAQ,CACR,MAAMz0B,EAAIxG,KAAKw5B,YAAY8B,QAAQL,GAQnC,OAPW,IAAPz0B,IACAxG,KAAKw5B,YAAY+B,OAAO/0B,EAAG,GAC3B40B,EAAYH,EAAOO,eACnBH,EAAgBJ,EAAOQ,mBAEvBz7B,KAAK07B,oBAAoBN,EAAWC,IAEjCr7B,KAEX,KAAOA,KAAKw5B,YAAY51B,QAEpBw3B,GADAH,EAASj7B,KAAKw5B,YAAYmC,OACPH,eACnBH,EAAgBJ,EAAOQ,mBAEvBz7B,KAAK07B,oBAAoBN,EAAWC,GAExC,OAAOr7B,KAGX47B,UAAUX,GACN,GAAIA,EAAQ,CACRj7B,KAAKw5B,YAAYnL,KAAK4M,GACtB,MAAMG,EAAYH,EAAOO,eACnBH,EAAgBJ,EAAOQ,mBAC7Bz7B,KAAK07B,oBAAoBL,EAAeD,GAG5C,OADAp7B,KAAKi7B,OAASA,EACPj7B,KAOX67B,qBAAqBC,GACjB97B,KAAK23B,gBAAkBmE,EACvB,IAAK,IAAIt1B,EAAI,EAAGA,EAAIxG,KAAKu5B,UAAU31B,SAAU4C,EACzCxG,KAAK23B,gBAAgBoE,UAAU/7B,KAAKu5B,UAAU/yB,IAIlD,OAFAxG,KAAK23B,gBAAgBoE,UAAU/7B,MAC/BA,KAAKm5B,eAAgB,EACdn5B,KAQXg8B,YAAY9rB,EAAO+rB,GAGf,OAFAj8B,KAAKu5B,UAAUlL,KAAK4N,GACpBj8B,KAAKm5B,eAAgB,EACdn5B,KAGXk8B,eACI,OAAOl8B,KAAKu5B,UAGhB4C,eAAeC,GACXp8B,KAAKs4B,YAAc8D,EACnBp8B,KAAKm5B,eAAgB,EAEzBmB,iBAAiBj5B,EAAU,iCACvB,OAAOI,EAAQzB,KAAKs4B,YAAa,gBAAiBj3B,GAGtDg7B,YACQr8B,KAAKm5B,gBAETn5B,KAAKuI,MAAQ,EACTvI,KAAK23B,kBACL33B,KAAK23B,gBAAgB0E,YACrBr8B,KAAKuI,OAASvI,KAAK23B,gBAAgB5J,aAIvCuO,iBAAat4B,GACbhE,KAAKm5B,cAAgBn1B,EAErBs4B,mBACA,OAAOt8B,KAAKm5B,cAGhBoD,aACI,OAAIv8B,KAAKo5B,iBAETp5B,KAAKo5B,gBAAiB,GADXp5B,KAKXw8B,kBAAcx4B,GACdhE,KAAKo5B,eAAiBp1B,EAEtBw4B,oBACA,OAAOx8B,KAAKo5B,eAGhBqD,oBACI,OAAOz8B,KAAKq5B,eAGhBqD,kBAAkBrD,GACdr5B,KAAKq5B,eAAiBA,EACtBr5B,KAAK0uB,MAAQ1uB,KAAKs5B,eAAe9zB,QAAQX,SAAS7E,KAAKq5B,gBAG3DsD,oBACI,OAAO38B,KAAKs5B,eAGhBoC,oBAAoBv4B,EAAWC,GAC3BpD,KAAKs5B,eAAez0B,SAAS1B,EAAWC,GACxCpD,KAAK0uB,MAAQ1uB,KAAKs5B,eAAe9zB,QAAQX,SAAS7E,KAAKq5B,gBAG3DuD,YAAYtO,GACR,MAAMI,EAAQJ,EAASnrB,WAAampB,EAAO/W,WAAa+Y,EAASlrB,aACjEpD,KAAK0uB,MAAQ1uB,KAAKs5B,eAAe9zB,QAAQX,SAAS6pB,GAClD1uB,KAAKq5B,eAAiBr5B,KAAK0uB,MAAM1qB,QAErC64B,eAEI,OADoB78B,KAAKs6B,iBAAiB,+CACvBvzB,OAGvB8wB,mBAAmBiE,GAEf,OADA97B,KAAK23B,gBAAkBmE,EAChB97B,KAGX03B,qBACI,OAAO13B,KAAK23B,gBAGhBC,uBACI,OAAOn2B,EAAQzB,KAAK23B,gBAAiB,oBAAqB,mDC/Q3D,SAASmF,EAAWl8B,EAAKm8B,EAAKC,GAAiB,GAElD,GAAmB,iBAARp8B,GAA4B,OAARA,EAC3B,OAAO,EAIX,IAAIq8B,EAAiBr8B,EAAIO,YACzB,GAAIP,aAAem8B,GAAOE,IAAmBF,EACzC,OAAO,EAGX,MAAMG,EAAkBH,EAAIz5B,SAC5B,QAAwB3B,IAApBu7B,EACA,OAAO,EAEX,GAAIF,EAAgB,CAEhB,KAAe,OAARp8B,GAAc,CAEjB,GADAq8B,EAAiBr8B,EAAIO,YACjB,aAAc87B,GAAkBA,EAAe35B,WAAa45B,EAC5D,OAAO,EAEXt8B,EAAMP,OAAO88B,eAAev8B,GAEhC,OAAO,EAIP,MAAO,aAAcq8B,GAAkBA,EAAe35B,WAAa45B,ECpCpE,MAAME,EAAUx8B,GAAQk8B,EAAWl8B,EAAKy8B,GAUxC,MAAMA,UAAanE,EAOtB/3B,YAAYm8B,GAER,GADAh8B,SACKg8B,EACD,MAAM,IAAIr8B,EAAa,eAAgB,2EAG3C,MAAMs8B,EAAmBF,EAAKG,gBAAgBF,GAC9C,IAAKC,EACD,MAAM,IAAIt8B,EAAa,eAAgB,uCAAuCw8B,KAAKC,UAAUJ,MAGjGt9B,KAAKoR,KAAOksB,EAAWlsB,MAAQ,GAE/BpR,KAAK29B,SAAW,GAChB39B,KAAKsuB,SAAWiP,EAAiBjP,SACjCtuB,KAAK49B,SAAWL,EAAiBxtB,KACjC/P,KAAK69B,YAAcN,EAAiBM,YAChCP,EAAWQ,kBAEX99B,KAAK48B,YAAYU,EAAWQ,mBAI5B99B,KAAK08B,kBAAkBa,EAAiB7O,OAE5C1uB,KAAKu5B,UAAY,GAEjBv5B,KAAKytB,MAAQnB,EAAOyR,cAAc/9B,KAAKsuB,SAAUtuB,KAAK49B,UACtD59B,KAAKg+B,aAAeh+B,KAAK69B,YAAYxsB,KAAK3N,GAAM4oB,EAAOyR,cAAc/9B,KAAKsuB,SAAU5qB,KAEpF1D,KAAKi+B,cAAWt8B,EAEhB3B,KAAK25B,cAAe,EAEpB35B,KAAKuI,MAAQ,EACbvI,KAAKk+B,oBAAsB,EAC3Bl+B,KAAKm+B,qBAAuB,EAC5Bn+B,KAAKmyB,QAAU,EACfnyB,KAAKo+B,GAAK,GAENd,EAAW7D,cACXz5B,KAAK46B,mBAAmB0C,EAAW7D,cAGvCz5B,KAAKq+B,eAAiB,CAClBC,mBAAoB,EACpBC,iBAAkB,EAClBC,UAAW,EACXhR,MAAO,EACP1gB,KAAM,GACNslB,QAAS,GAKN9uB,sBACP,MAAO,OAGXC,mBAAmBmwB,EAAK0D,EAAM1B,GAC1B,MAAMnnB,EAAU6oB,EAAKxoB,aACf6vB,EAASrH,EAAKyF,eAAiBtuB,EAAQmqB,UAAYnqB,EAAQ2vB,oBAC3DQ,EAAQtH,EAAKyF,eAAiBtuB,EAAQ2vB,oBACtCS,EAAOvH,EAAKyF,eACZ+B,EAASxH,EAAKyF,eAAiBtuB,EAAQswB,OACvCC,EAAS1H,EAAKyF,eAAiBtuB,EAAQswB,OAAStwB,EAAQ4vB,qBACxDY,EAAO3H,EAAKyF,eAAiBtuB,EAAQswB,OAAStwB,EAAQ4vB,qBAAuB5vB,EAAQoqB,WACrFqG,EAAgBD,GAAQ3H,EAAKmD,sBAAsBV,QAAQ7C,OAAS,GACpEiI,EAASF,EAAON,EACtB/K,EAAIhhB,OACJghB,EAAItf,QAAQ5I,EAAKiB,WAAY,GAC7BinB,EAAIwL,SAASl8B,KAAKm8B,MAAMF,GAAU,KAAMR,EAASrH,EAAKe,YAAazC,GACnE,MAAM/uB,EAAI+uB,EAAO,EACjB,SAAS1I,EAAOhlB,EAAIG,EAAIi3B,EAAOC,EAAK14B,GAChC+sB,EAAIQ,YACJR,EAAIxgB,eAAeksB,GACnB1L,EAAI1gB,aAAaosB,GACjB1L,EAAItgB,aAAa,GACjBsgB,EAAIS,OAAOnsB,EAAKovB,EAAKe,YAAakH,GAClC3L,EAAIU,OAAOjsB,EAAKivB,EAAKe,YAAakH,GAClC3L,EAAI1G,SAERA,EAAOyR,EAAQC,EAAO,OACtB1R,EAAO0R,EAAOC,EAAM,QACpB3R,EAAO2R,EAAMC,EAAQ,SACrB5R,EAAO4R,EAAQE,EAAQ,QACvB9R,EAAO8R,EAAQC,EAAM,OACrB/R,EAAO+R,EAAMC,EAAe,QAC5BhS,EAAOyR,EAASrH,EAAKe,YAAasG,EAAQ,QHxF3C,SAAiB/K,EAAKhyB,EAAGiF,EAAGy4B,EAAQ,QACvC1L,EAAIhhB,OACJghB,EAAI1gB,aAAaosB,GAEjB1L,EAAIQ,YACJR,EAAI4L,IAAI59B,EAAGiF,EAAG,EAAG,EAAa,EAAV3D,KAAKC,IAAQ,GACjCywB,EAAI6L,YACJ7L,EAAIa,OACJb,EAAIpgB,UGiFAksB,CAAQ9L,EAAKiL,EAAOvH,EAAKe,YAAaxxB,EAAG,QACzC,MAAMizB,EAAmBxC,EAAKmD,sBAC9B,GAAIX,EAAiBE,WAAa,EAAG,CACjC,MAAM2F,EAAiB7F,EAAiBG,MAAMG,UACxCr3B,EAAS48B,GAAkB,EAAI,IAAM,GAC3C/L,EAAI1gB,aAAa,OACjB0gB,EAAIwL,SAASr8B,EAASG,KAAKm8B,MAAMM,GAAiBd,EAAOvH,EAAKe,YAAazC,EAAO,IAEtFhC,EAAIpgB,UAER/P,qBAAqBm8B,GACjB,IAAKA,EACD,OAEJ,MACMx0B,EADS,mCACOy0B,KAAKD,GAC3B,IAAKx0B,EACD,OAKJ,MAAO,CAAEojB,SAHQpjB,EAAO,GAGL00B,KAFN10B,EAAO,GAAGtH,OAEEmM,KADZ7E,EAAO,IAAM,KAG9B3H,uBAAuB+5B,GAEnB,MAAMuC,EAAgBxC,EAAKyC,cAAcxC,EAAWhP,UACpD,IAAKuR,EACD,OAGJ,IAAI9vB,EAAOutB,EAAWvtB,KACtB,GAAIA,IAASuc,EAAOkE,WAAWzgB,GAC3B,OAGJ,MAAM8tB,EAAc,GACf9tB,IACDA,EAAO8vB,EAAc9vB,MAAQ,SAELpO,IAApB27B,EAAWlsB,MACXksB,EAAWlsB,KAAKwnB,SAAQ,CAACtnB,EAAG9K,KACxB,MAAM0E,EAASoG,EAAE7K,MAAM,KAEvBo3B,EAAYr3B,GAAM0E,GAA4B,IAAlBA,EAAOtH,OAAesH,EAAO,GAAK6E,MAK1E,IAAI2e,EAAQpC,EAAOyT,gBAAgBF,EAAcvR,UACjD,IAAKI,EACD,OAGJ,MAAMkR,EAAOtC,EAAWsC,KAAOtC,EAAWsC,KAAOC,EAAcD,KAC/D,GAAoB,iBAATA,EACP,OAGJ,IAAII,EAAetR,EACnB,IAAK,IAAIloB,EAAI,EAAGA,EAAIo5B,EAAMp5B,IAAK,CAC3B,GAAIw5B,GAAgB,EAChB,OACJA,GAA8B,EAC9BtR,GAASsR,EAEb,MAAO,CACH1R,SAAUuR,EAAcvR,SACxBve,KAAAA,EACA8tB,YAAAA,EACA+B,KAAAA,EACAlR,MAAAA,GAORuR,cACI,OAAOjgC,KAAKi+B,SAMhBiC,YAAY9I,GAER,OADAp3B,KAAKi+B,SAAW7G,EACTp3B,KAQXmgC,SACI,OAAO,EAGXC,UAAUlwB,EAAO8c,GAKb,OAJAA,EAAOsK,QAAQt3B,MACfgtB,EAAOyK,SAASvnB,GAChBlQ,KAAKu5B,UAAUlL,KAAKrB,GACpBhtB,KAAKs8B,cAAe,EACbt8B,KAGXw4B,WACI,OAAOx4B,KAAK80B,MAGhBa,aACI,OAAOl0B,EAAQzB,KAAK80B,MAAO,UAAW,kCAG1CD,SAASC,GAIL,OAHA90B,KAAK80B,MAAQA,EACb90B,KAAKqgC,MAAM,CAACvL,EAAMwL,YAAY,KAC9BtgC,KAAKmU,WAAWnU,KAAK80B,MAAM5gB,cACpBlU,KAGXugC,yBACI,OAAOvgC,KAAKk+B,oBAGhBsC,0BACI,OAAOxgC,KAAKm+B,qBAGhBsC,uBAAuB/+B,GAEnB,OADA1B,KAAKk+B,oBAAsBx8B,EACpB1B,KAGX0gC,wBAAwBh/B,GAEpB,OADA1B,KAAKm+B,qBAAuBz8B,EACrB1B,KAGXo6B,oBACI,OAAOp6B,KAAK25B,aAIhBgH,cAAcC,GACV,OAAO,EAGXC,iBACI,OAAO,EAIXC,WACI,OAAO9gC,KAAKytB,MAGhBsT,gBAEI,GAAI/gC,KAAKytB,MAAO,CACZ,GAAIztB,KAAKytB,MAAM7e,WACX,OAAO5O,KAAKytB,MAAM7e,aAAarG,MAE9B,GAAIvI,KAAKytB,MAAMM,SAChB,OAAO/tB,KAAKytB,MAAMM,SAAS/tB,KAAKq+B,eAAeE,kBAGvD,OAAO,EAMX8B,MAAMjC,GAEF,OADAp+B,KAAKo+B,GAAKA,EACHp+B,KAMXghC,QACI,GAAuB,IAAnBhhC,KAAKo+B,GAAGx6B,OACR,MAAM,IAAI3C,EAAa,YAAa,yCAExC,OAAOjB,KAAKo+B,GAMhB6C,eAAe7K,GACX,OAAOp2B,KAAK21B,aAAasL,eAAe7K,GAG5CyE,WACI,IAAK76B,KAAK86B,MACN,MAAM,IAAI75B,EAAa,UAAW,sBACtC,OAAOjB,KAAK86B,MAGhBC,SAASD,GAGL,OAFA96B,KAAK86B,MAAQA,EACb96B,KAAKs8B,cAAe,EACbt8B,KAGXu4B,iBACI,OAAOv4B,KAAKs6B,mBAGhB6B,eAAeC,GAGX,OAFAp8B,KAAKs4B,YAAc8D,EACnBp8B,KAAKs8B,cAAe,EACbt8B,KAGXkhC,cACI,OAAOlhC,KAAKsuB,SAGhB6S,WACI,OAAOnhC,KAAKohC,mBAAmB,OAAOx9B,OAAS,EAGnDy9B,UACI,OAAO,EAGXC,cACI,OAAOthC,KAAK49B,SAGhB2D,UACI,OAAOvhC,KAAKwhC,KAGhBC,YACI,OAAOhgC,EAAQzB,KAAKwhC,KAAM,SAAU,gCAGxCE,UACI,OAAoB//B,MAAb3B,KAAKwhC,KAGhBG,QAAQH,GAEJ,OADAxhC,KAAKwhC,KAAOA,EACLxhC,KAQXg8B,YAAY9rB,EAAO0xB,GAWf,GATqB,iBAAV1xB,IACPA,EAAQtN,SAASsN,GAEjB/N,QAAQC,KAAK,iKAMO,iBAAbw/B,GAA0C,iBAAV1xB,EACvC,MAAM,IAAIjP,EAAa,cAAe,oGAM1C,OAJA2gC,EAAStK,QAAQt3B,MACjB4hC,EAASnK,SAASvnB,GAClBlQ,KAAKu5B,UAAUlL,KAAKuT,GACpB5hC,KAAKs8B,cAAe,EACbt8B,KAGXohC,mBAAmBrxB,GACf,OAAO/P,KAAK43B,uBAAuBiK,WAAW9xB,GAIlD+xB,mBAAmB1Q,EAAUlhB,EAAOyc,GAChC,IAAK3sB,KAAKs8B,aACN,MAAM,IAAIr7B,EAAa,kBAAmB,wDAE9C,MAAO,CACHS,EAAG1B,KAAK68B,eACRl2B,EAAG3G,KAAKo+B,GAAG,IAInBxvB,aACI,IAAK5O,KAAKs8B,aACN,MAAM,IAAIr7B,EAAa,kBAAmB,iDAE9C,MAAMy3B,EAAY14B,KAAK23B,gBAAkB33B,KAAK23B,gBAAgBoK,MAAMC,WAAa,EAC3ErJ,EAAa34B,KAAK23B,gBAAkB33B,KAAK23B,gBAAgBoK,MAAME,YAAc,EAC7E15B,EAAQvI,KAAK+tB,WAQnB,MAAO,CACHxlB,MAAAA,EACA25B,WATeliC,KAAK+gC,gBAUpBlC,OATWt2B,EACXmwB,EACAC,EACA34B,KAAKk+B,oBACLl+B,KAAKm+B,qBAOLzF,UAAAA,EACAC,WAAAA,EAEAuF,oBAAqBl+B,KAAKk+B,oBAC1BC,qBAAsBn+B,KAAKm+B,qBAC3BgE,QAAS,GAQjBtF,eAGI,IAAIn7B,EAFgB1B,KAAKs6B,iBAAiB,+CAEtBvzB,OAOpB,OANI/G,KAAK80B,QACLpzB,GAAK1B,KAAK80B,MAAMsN,gBAAkB9V,EAAO+V,mBAAmBnzB,aAAa,kBAEzElP,KAAKy6B,oBACL/4B,GAAK1B,KAAKw6B,mBAEP94B,EAGX4gC,mBACI,MAAM,IAAIrhC,EAAa,SAAU,kCAGrCshC,iBACI,MAAM,IAAIthC,EAAa,SAAU,kCAGrCuhC,eACI,IAAIC,EAAYziC,KAAK68B,eAIrB,OAFA4F,GADyBziC,KAAKytB,MAAMM,WACJ,EAChC0U,IAAcziC,KAAKuI,MAAQ,EAAIvI,KAAKuI,MAAQ,EACrCk6B,EAGXC,cACI,IAAIC,EAAU3iC,KAAK68B,eAInB,OAFA8F,GADyB3iC,KAAKytB,MAAMM,WACN,EAC9B4U,GAAW3iC,KAAKuI,MAAQ,EAAI,EACrBo6B,EAGXC,UACI,OAAO5iC,KAAKoR,KAGhByxB,cACI,OAAO7iC,KAAK29B,UCndb,MAAMmF,UAAajxB,EACtB1Q,YAAYwrB,GACRrrB,QACAtB,KAAK+iC,iBAAmB,EACxB/iC,KAAKgjC,mBAAqB,EAC1BhjC,KAAKijC,sBAAwB,EAC7BjjC,KAAKkjC,wBAA0B,EAE/BljC,KAAKmjC,SAAWxW,MAAAA,OAAyC,EAASA,EAAQwW,UAAY,EACtFnjC,KAAKojC,OAASzW,MAAAA,OAAyC,EAASA,EAAQyW,QAAU,EAElFpjC,KAAKqjC,OAAS1W,MAAAA,OAAyC,EAASA,EAAQ0W,QAAU,EAClFrjC,KAAKsjC,UAAY3W,MAAAA,OAAyC,EAASA,EAAQ2W,WAAa,EAExFtjC,KAAKujC,gBAAkB5W,MAAAA,OAAyC,EAASA,EAAQ4W,iBAAmB,EAEpGvjC,KAAKwjC,gBAAkB7W,MAAAA,OAAyC,EAASA,EAAQ6W,iBAAmB,EAEpGxjC,KAAKyjC,MAAQ9W,MAAAA,OAAyC,EAASA,EAAQ8W,QAAS,EAChFzjC,KAAK0jC,WAAa/W,MAAAA,OAAyC,EAASA,EAAQ+W,aAAc,EAC1F1jC,KAAK2jC,eAAiBhX,MAAAA,OAAyC,EAASA,EAAQgX,gBAAkB,EAGlG3jC,KAAK4jC,uBAAyB,EAC9B5jC,KAAKmzB,WAAWxG,GAETrpB,sBACP,MAAO,OAGAugC,gBACP,OAAO,EAEAC,kBACP,OAAQ,EAGDC,mBACP,OAAOzX,EAAO2C,WAEP+U,oBACP,OAAO1X,EAAO4C,YAElBiE,WAAWxG,GAEP3sB,KAAK+iC,kBAAoBpW,MAAAA,OAAyC,EAASA,EAAQoW,mBAAqB,EACxG/iC,KAAKgjC,oBAAsBrW,MAAAA,OAAyC,EAASA,EAAQqW,qBAAuB,EAC5GhjC,KAAKijC,uBAAyBtW,MAAAA,OAAyC,EAASA,EAAQsW,wBAA0B,EAClHjjC,KAAKkjC,yBAA2BvW,MAAAA,OAAyC,EAASA,EAAQuW,0BAA4B,EAG1He,mBAAmBd,EAASC,GAGxB,OAFApjC,KAAKmjC,QAAUA,EACfnjC,KAAKojC,MAAQA,EACNpjC,KAGXkkC,aAAaC,GACTnkC,KAAKwjC,eAAiBW,EAG1BC,aAAaC,GACTrkC,KAAKujC,eAAiBc,EAE1BC,eACI,OAAOtkC,KAAKujC,eAGhBgB,WAAWlB,EAAOC,GACdtjC,KAAKqjC,MAAQA,EACbrjC,KAAKsjC,SAAWA,EAGpBkB,YACI,MAAMC,EAAWzkC,KAAKwjC,iBAAmBV,EAAKe,GAAK7jC,KAAK+iC,iBAAmB/iC,KAAKgjC,mBAEhF,OADwBhjC,KAAKsjC,SAAWtjC,KAAKqjC,OAASP,EAAKkB,OAASS,EAAWzkC,KAAKujC,iBAC3DvjC,KAAKwjC,eAElCvvB,iBACI,MAAM,IAAIhT,EAAa,iBAAkB,qCAI7CyjC,aACI,MAAMC,EAAW3kC,KAAKwjC,iBAAmBV,EAAKe,GACxCzF,EAAK,CAACp+B,KAAKqjC,MAAOrjC,KAAKsjC,UACvBsB,EAAa9B,EAAKkB,OAAShkC,KAAKujC,eAChCsB,GAAsBF,EAAW3hC,KAAK8hC,IAAM9hC,KAAK6E,QAAQu2B,GACzD2G,GAAsBJ,EAAW3hC,KAAK6E,IAAM7E,KAAK8hC,QAAQ1G,GAE/D,MAAO,CAAE4G,KADQH,EAAqBD,GAAc5kC,KAAKwjC,eAChCyB,MAAOF,GAEpCG,cAAcC,GAEV,OADAnlC,KAAKyjC,MAAQ0B,EACNnlC,KAEXolC,WAAW1B,EAAWC,GAGlB,OAFA3jC,KAAK0jC,UAAYA,EACjB1jC,KAAK2jC,cAAgBA,EACd3jC,KAEXqlC,sBACIrlC,KAAK4jC,uBAAyBtX,EAAO+V,mBAAmBnzB,aAAa,gCAAiC,GAE1Go2B,sBACItlC,KAAK4jC,wBAA0Bd,EAAKiB,MAAQ,EAGhDtwB,OAEI,GADAzT,KAAK8T,cACD9T,KAAKyjC,KACL,OACJ,MAAM/P,EAAM1zB,KAAKwT,eACjB,IAAI+xB,EACAC,EACJ,MAAMhC,EAAiBxjC,KAAKwjC,eAC5B,IAAIiC,EAAgB,EAChBjC,IAAmBV,EAAKgB,MAExByB,EAASvlC,KAAKmjC,QACdqC,EAASxlC,KAAKqjC,MAAQrjC,KAAKgjC,mBAC3ByC,EAAgBzlC,KAAKkjC,0BAIrBqC,EAASvlC,KAAKojC,MACdoC,EAASxlC,KAAKsjC,SAAWtjC,KAAK+iC,iBAC9B0C,EAAgBzlC,KAAKijC,uBAEzB,MAAM2B,EAAa5kC,KAAKwkC,aArIhC,YAAc1iC,GACNghC,EAAK4C,OACL9jC,EAAI,gBAAiBE,GAoIrB6jC,CAAE,oBAAqB,UAAW3lC,KAAKqjC,MAAO,aAAcrjC,KAAKsjC,UAEjE,MAAMsC,EAAiB5lC,KAAK0jC,UAAYkB,EAAa5kC,KAAK2jC,cAAgB3jC,KAAKwjC,eAAiB,EAEhG9P,EAAIhhB,OACJ1S,KAAKwS,WAAWkhB,GAChBA,EAAIQ,YACJR,EAAItgB,aAAa0vB,EAAKiB,OACtBrQ,EAAIS,OAAOoR,EAAQC,EAASI,EAAiBH,GAC7C/R,EAAIU,OAAOmR,EAAQC,EAASZ,EAAa5kC,KAAK4jC,uBAAyBJ,GACvE9P,EAAI1G,SACJhtB,KAAKqT,aAAaqgB,GAClBA,EAAIpgB,WAIZwvB,EAAK4C,OAAQ,EClGN,MAAMG,UAAiBxI,EAC1Bl8B,YAAYm8B,GACRh8B,MAAMg8B,GACNt9B,KAAK8lC,cAAe,EACpB9lC,KAAK+lC,iBAAmB,EACxB/lC,KAAKgmC,mBAAqB,EAC1BhmC,KAAKkQ,MAAQotB,EAAWptB,MACxBlQ,KAAK0B,EAAI47B,EAAW57B,GAAK,EACzB1B,KAAK2G,EAAI22B,EAAW32B,GAAK,EACrB22B,EAAW2I,YACXjmC,KAAK49B,SAAWN,EAAW2I,WAC/BjmC,KAAKotB,UAAYkQ,EAAWlQ,YAAa,EACzCptB,KAAKwjC,eAAiBlG,EAAWkG,gBAAkBV,EAAKe,GACxD7jC,KAAK+B,KAAOu7B,EAAWv7B,MAAQ,EAG/B/B,KAAKytB,MAAQnB,EAAOyR,cAAc/9B,KAAKsuB,SAAUtuB,KAAK49B,UACtDn8B,EAAQzB,KAAKytB,MAAO,eAAgB,gCAAgCztB,KAAKsuB,uBAAuBtuB,KAAK49B,aACrG59B,KAAKkmC,WAAalmC,KAAKytB,MAAMqB,UAC7B9uB,KAAKmyB,QAAUmL,EAAWnL,SAAW,EACjCmL,EAAW6I,oBACXnmC,KAAK8lC,cAAe,EACpB9lC,KAAKkmC,WAAa5I,EAAW6I,kBAC7BnmC,KAAK+lC,iBAAmBzI,EAAWyI,kBAAoB,EACvD/lC,KAAKgmC,mBAAqB1I,EAAW0I,oBAAsB,GAE/DhmC,KAAKsM,MAAQgxB,EAAWhxB,MACxBtM,KAAKomC,QAAU9I,EAAW8I,UAAW,EACrCpmC,KAAKq+B,eAAiBh+B,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAKq+B,gBAAiB,CAExEE,iBAAkBjB,EAAWiB,kBAAoBjS,EAAO0C,sBAC5DhvB,KAAKk3B,SAASl3B,KAAKytB,MAAMM,SAAS/tB,KAAKq+B,eAAeE,mBAE/Cj7B,sBACP,MAAO,WAGXyqB,WACI,OAAO/tB,KAAKuI,MAGhB89B,cACI,OAA0B,IAAnBrmC,KAAKotB,UAGhB0T,WACI,OAAO9gC,KAAKytB,MAGhBtmB,KAAKzF,GAED,OADA1B,KAAK0B,EAAIA,EACF1B,KAGXgH,OACI,OAAOhH,KAAK2G,EAGhBS,KAAKT,GAED,OADA3G,KAAK2G,EAAIA,EACF3G,KAGXsmC,UACI,OAAOtmC,KAAK+B,KAGhBwkC,QAAQxkC,GAEJ,OADA/B,KAAK+B,KAAOA,EACL/B,KAGX68B,eAII,MAAMn7B,EAAK1B,KAAKs8B,aAAwBh7B,MAAMu7B,eAAf78B,KAAK0B,EAG9B8kC,EAA6B1D,EAAKiB,MAAQ,EAC1C0C,EAAYna,EAAO+V,mBACnBqE,EAAYD,EAAUv3B,aAAa,kBAAmB,GAAKlP,KAAKwjC,eAChEmD,EAAqBF,EAAUv3B,aAAa,4BAA6B,GAAKlP,KAAKwjC,eACzF,OAAQ9hC,EACJglC,GACC1mC,KAAKotB,WAAaptB,KAAKuI,MAAQi+B,GAA8BxmC,KAAKwjC,eAAiBmD,EAAqB,GAGjH1yB,iBACI,IAAKjU,KAAKs8B,aACN,MAAM,IAAIr7B,EAAa,kBAAmB,qDAE9C,MAAM2lC,EAAU5mC,KAAK21B,aAAakR,yBAC5BC,EAAeF,EAAU,EACzBG,EAAQ/mC,KAAK2G,EAAImgC,EACvB,OAAO,IAAIpgC,EAAY1G,KAAK68B,eAAgBkK,EAAO/mC,KAAKuI,MAAOq+B,GAGnE/R,SAASC,GACL,MAAM/yB,EAAO/B,KAAKsmC,UAMlB,OALAtmC,KAAK80B,MAAQA,EACT90B,KAAK80B,QACL90B,KAAKoH,KAAKpH,KAAK80B,MAAMkS,YAAYjlC,IACjC/B,KAAKmU,WAAWnU,KAAK80B,MAAM5gB,eAExBlU,KAGXq8B,YACI,GAAIr8B,KAAKs8B,aACL,OAAOt8B,KACX,MAAMuI,EAAQvI,KAAK+tB,WAAa/tB,KAAKk+B,oBAAsBl+B,KAAKm+B,qBAGhE,OAFAn+B,KAAKk3B,SAAS3uB,GACdvI,KAAKs8B,cAAe,EACbt8B,KAGXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACjBxT,KAAK8T,cACL,IAAImzB,EAASjnC,KAAK68B,eACd78B,KAAK8lC,eAELmB,GAAUjnC,KAAKwjC,iBAAmBV,EAAKe,GAAK7jC,KAAK+lC,iBAAmB/lC,KAAKgmC,oBAE7E,MAAMr/B,EAAI3G,KAAK2G,GAjLvB,YAAc7E,GACN+jC,EAASH,OACT9jC,EAAI,oBAAqBE,GAgLzB,CAAE,sBAAuB9B,KAAK49B,SAAU59B,KAAKsuB,SAAU,OAAQ2Y,EAAQtgC,GAEvE,MAAM68B,EAAiBxjC,KAAKwjC,eACtBjF,EAAmBv+B,KAAKq+B,eAAeE,iBACzCv+B,KAAKsM,OACLtM,KAAKwS,WAAWkhB,GAEpB,MAAMwT,EAAiB,GAAGlnC,KAAKkmC,iBAAiB1C,IAAmBV,EAAKe,GAAK,KAAO,SACpF,GAAsB,MAAlB7jC,KAAK49B,SAAkB,CACvB,MAAMuJ,EAAannC,KAAK21B,aAAakR,0BA/KjD,SAA2BnT,EAAKpF,EAAU5sB,EAAGiF,EAAG68B,EAAgB2D,GAC5D,MAAM5+B,EAAQ+jB,EAAO8C,qBACrBsE,EAAIhhB,OACJghB,EAAItgB,aAAakZ,EAAO2C,YACxB,IAAIsF,GAAO,EAmBX,GAlBIjI,EAAO8a,iBAAiB9Y,GAAY,IACpCiG,GAAO,GAENA,IACD7yB,GAAM4qB,EAAO2C,WAAa,EAAKuU,GACnC9P,EAAIQ,YACJR,EAAIS,OAAOzyB,EAAGiF,EAAIwgC,GAClBzT,EAAIU,OAAO1yB,EAAGiF,EAAI,GAClB+sB,EAAIU,OAAO1yB,EAAI6G,EAAO5B,EAAIwgC,GAC1BzT,EAAIU,OAAO1yB,EAAI6G,EAAO5B,GACtB+sB,EAAIU,OAAO1yB,EAAGiF,EAAIwgC,GAClBzT,EAAI6L,YACAhL,EACAb,EAAIa,OAGJb,EAAI1G,SAEJV,EAAOmC,mBAAmBH,GAAUvpB,OAAO,IAAM,CACjD,MAAMsiC,EAAc,EAAE,GAAI,EAAG9+B,EAAQ,EAAGA,EAAQ,GAChD,IAAK,IAAI/B,EAAI,EAAGA,EAAI6gC,EAAYzjC,OAAQ4C,IACpCktB,EAAIQ,YACJR,EAAIS,OAAOzyB,EAAI2lC,EAAY7gC,GAAIG,EAAI,IACnC+sB,EAAIU,OAAO1yB,EAAI2lC,EAAY7gC,GAAIG,EAAI,IACnC+sB,EAAI1G,SAGZ0G,EAAIpgB,UAgJIg0B,CAAkB5T,EAAK1zB,KAAKsuB,SAAU2Y,EAAQtgC,EAAG68B,EAAgB2D,QAGjEvZ,EAAM2Z,YAAY7T,EAAKuT,EAAQtgC,EAAG43B,EAAkBv+B,KAAKkmC,WAAY,CACjErU,SAAU7xB,KAAK8lC,aAAe,mBAAmBoB,IAAmB,qBAAqBA,MAG7FlnC,KAAKsM,OACLtM,KAAKqT,aAAaqgB,IAK9BmS,EAASH,OAAQ,ECtMV,MAAM8B,UAAsBnK,EAC/Bl8B,YAAYm8B,GACRh8B,MAAMg8B,GAECh6B,sBACP,MAAO,gBAGXmkC,UACI,OAAOznC,KAAK8wB,KAEhB4W,YACI,IAAK1nC,KAAK8wB,KACN,MAAM,IAAI7vB,EAAa,SAAU,gCAErC,OAAOjB,KAAK8wB,KAEhB6W,QAAQ7W,GAEJ,OADA9wB,KAAK8wB,KAAOA,EACL9wB,KAGX4nC,YACI,MAAM9W,EAAO,IAAIgS,EAEjB,OADA9iC,KAAK2nC,QAAQ7W,GACN9wB,KAEX6nC,UAAUhW,EAAW,QACjB,MAAM,MAAEpE,GAAUztB,KAClB,GAAIA,KAAK8nC,UAAW,CAChB,MAAMC,EAAW/nC,KAAKsiC,qBAAuBQ,EAAKgB,KAAOrW,EAAM+D,mBAAqB/D,EAAM8D,iBAC1FvxB,KAAKgxB,KAAO,IAAIpD,EAAMma,EAAU/nC,KAAKq+B,eAAeE,iBAAkB,CAAE1M,SAAAA,KAIhFmW,6BACI,OAAIhoC,KAAKsiC,qBAAuBQ,EAAKgB,KAC1B9jC,KAAKg+B,aAAah+B,KAAKg+B,aAAap6B,OAAS,GAG7C5D,KAAKg+B,aAAa,GAIjCiK,gBACI,OAAOnF,EAAKkB,OAAShkC,KAAKkoC,mBAG9BC,eACI,MAAM1a,EAAQztB,KAAK8gC,WACnB,OAAIrT,EACOA,EAAM4D,WAGN,EAIf+W,uBAEI,IAAIxkC,EADS0oB,EAAOmC,mBAAmBzuB,KAAKsuB,UAC1BtqB,SAAW,EAAI,EAAI,GAErC,OAAQhE,KAAKsuB,UACT,IAAK,IACgB3sB,MAAb3B,KAAKwhC,OACL59B,EAAS,IACb,MACJ,IAAK,KACDA,EAAsBjC,MAAb3B,KAAKwhC,KAAoB,GAAK,GACvC,MACJ,IAAK,KACD59B,EAAsBjC,MAAb3B,KAAKwhC,KAAoB,GAAK,GACvC,MACJ,IAAK,KACD59B,EAAsBjC,MAAb3B,KAAKwhC,KAAoB,GAAK,GACvC,MACJ,IAAK,MACD59B,EAAsBjC,MAAb3B,KAAKwhC,KAAoB,GAAK,GAK/C,OAAO59B,EAGX0+B,mBACI,IAAKtiC,KAAKwjC,eACN,MAAM,IAAIviC,EAAa,SAAU,kCACrC,OAAOjB,KAAKwjC,eAEhB6E,iBAAiBlE,GAGb,GAFKA,IACDA,EAAYrB,EAAKe,IACjBM,IAAcrB,EAAKe,IAAMM,IAAcrB,EAAKgB,KAC5C,MAAM,IAAI7iC,EAAa,cAAe,2BAA2BkjC,KASrE,GAPAnkC,KAAKwjC,eAAiBW,EAEtBnkC,KAAKozB,QACDpzB,KAAK8nC,WACL9nC,KAAK6nC,YAET7nC,KAAKwhC,UAAO7/B,EACR3B,KAAK8wB,KAAM,CACX9wB,KAAK8wB,KAAKoT,aAAaC,GACvBnkC,KAAK8wB,KAAKsT,aAAapkC,KAAKkoC,oBAG5B,MAAMza,EAAQztB,KAAKgoC,8BAAgChoC,KAAK8gC,WAElDwH,EAAUhc,EAAO+V,mBAAmBnzB,aAAa,iBAAiBue,EAAMqB,YAAa,CACvFyZ,kBAAmB,EACnBC,iBAAkB,EAClBC,oBAAqB,EACrBC,mBAAoB,IAGxB1oC,KAAK8wB,KAAKqC,WAAW,CACjB4P,iBAAkBuF,EAAQE,iBAC1BxF,mBAAoBsF,EAAQI,mBAC5BzF,sBAAuBqF,EAAQC,kBAC/BrF,wBAAyBoF,EAAQG,sBAMzC,OAHIzoC,KAAKs8B,cACLt8B,KAAKq8B,YAEFr8B,KAGX2oC,WACI,MAAMxF,EAAUnjC,KAAK68B,eAAiB78B,KAAKmyB,QACrCiR,EAAQpjC,KAAK68B,eAAiB78B,KAAKmyB,QAAUnyB,KAAK+gC,gBAExD,OADe/gC,KAAKwjC,iBAAmBV,EAAKgB,KAAOX,EAAUC,EAKjEwF,kBACI,OAAO5oC,KAAK68B,eAAiB78B,KAAKmyB,QAAUnyB,KAAK+gC,gBAAkB,EAGvEmH,mBACI,MAAMza,EAAQztB,KAAK8gC,WACnB,GAAoCn/B,MAAhC3B,KAAK6oC,wBACL,OAAO7oC,KAAK6oC,wBAGhB,GAAI7oC,KAAKwhC,KACL,OAAO/T,EAAM6D,oBAEjB,MAAMyW,EAAW/nC,KAAKsiC,qBAAuBQ,EAAKgB,KAAO9jC,KAAKytB,MAAM+D,mBAAqBxxB,KAAKytB,MAAM8D,iBACpG,OAAOvuB,KAAK8C,IAAIwmB,EAAO+V,mBAAmBnzB,aAAa,eAAe64B,WAAmB,IAG7Fe,cAActgC,GAEV,OADAxI,KAAK6oC,wBAA0BrgC,EAASs6B,EAAKkB,OACtChkC,KAGXuiC,iBACI,IAAKviC,KAAK8wB,KACN,MAAM,IAAI7vB,EAAa,SAAU,kCACrC,OAAOjB,KAAK8wB,KAAK4T,aAGrBzD,eAAe8H,GACX,MAAMjU,EAAQ90B,KAAK21B,aACnB,GAAI31B,KAAKqhC,UAAW,CAChB,MAAM2H,EAAUhpC,KAAKuiC,iBACrB,IAAKyG,EACD,MAAM,IAAI/nC,EAAa,eAAgB,+BAC3C,OAAO+B,KAAK8hC,IAAIhQ,EAAMmM,eAAe8H,GAAWC,EAAQhE,KAAOhlC,KAAKq+B,eAAeC,oBAAsByK,EAAW,IAGpH,OAAOjU,EAAMmM,eAAe8H,GAIpCE,kBAAkBF,GACd,MAAMjU,EAAQ90B,KAAK21B,aACnB,GAAI31B,KAAKqhC,UAAW,CAChB,MAAM2H,EAAUhpC,KAAKuiC,iBACrB,IAAKyG,EACD,MAAM,IAAI/nC,EAAa,eAAgB,+BAC3C,OAAO+B,KAAK6E,IAAIitB,EAAMmM,eAAe8H,GAAWC,EAAQ/D,MAAQjlC,KAAKq+B,eAAeC,mBAAqByK,GAGzG,OAAOjU,EAAMmU,kBAAkBF,GAGvCjB,UACI,OAAOxb,EAAOyR,cAAc/9B,KAAKsuB,UAAU0C,OAAShxB,KAAKwhC,KAG7DjF,aACI,IAAI1wB,EAGJ,OAFqB,QAApBA,EAAK7L,KAAKwhC,YAAyB,IAAP31B,GAAyBA,EAAG0wB,aACzDv8B,KAAKw8B,eAAgB,EACdx8B,KAGXkpC,SAASC,GACL,IAAIt9B,EACJ7L,KAAKwT,eACLxT,KAAK8T,cACL9T,KAAK2nC,QAAQ,IAAI7E,EAAKqG,IACD,QAApBt9B,EAAK7L,KAAK8wB,YAAyB,IAAPjlB,GAAyBA,EAAGsI,WAAWnU,KAAKkU,cAAcT,QC1MxF,MAAM21B,EAAexoC,GAAQk8B,EAAWl8B,EAAKyoC,GAapD,SAASC,EAAkB/vB,EAAM6d,EAAMmS,GACnC,MAAMC,GAASpS,EAAKqS,OAAS,EAAM,GAAOF,EAC1ChwB,EAAKxX,MAAQynC,EACbjwB,EAAKmwB,SAAWF,EAChBjwB,EAAKowB,SAAWH,EAChBjwB,EAAK6d,KAAKwS,WAAW,EAAGrwB,EAAK6d,KAAKyS,WAAW,GAAKL,GAU/C,MAAMH,UAAkB7B,EAC3BrmC,YAAYm8B,GACR,IAAIzxB,EAAIkF,EAAI+4B,EACZxoC,MAAMg8B,GAGNt9B,KAAK2pC,QAAU,EACf3pC,KAAK0pC,QAAU,EACf1pC,KAAK+pC,gBAAkB,GACvB/pC,KAAKwsB,KAAkC,QAA1B3gB,EAAKyxB,EAAW9Q,YAAyB,IAAP3gB,EAAgBA,EAAK,SACpE7L,KAAK4sB,aAAkD,QAAlC7b,EAAKusB,EAAW1Q,oBAAiC,IAAP7b,EAAgBA,EAAK,EAEpF/Q,KAAKytB,MAAQnB,EAAOyR,cAAc/9B,KAAKsuB,SAAUtuB,KAAK49B,UACtDn8B,EAAQzB,KAAKytB,MAAO,eAAgB,gCAAgCztB,KAAKsuB,uBAAuBtuB,KAAK49B,aAErG59B,KAAKotB,WAAY,EACjBptB,KAAKixB,WAAa,EAElBjxB,KAAKgqC,oBAAqB,EAE1BhqC,KAAKiqC,WAAa,GAClBjqC,KAAKu5B,UAAY,GACjBv5B,KAAKq+B,eAAiBh+B,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAKq+B,gBAAiB,CAExEE,iBAAkBjB,EAAWiB,kBAAoBjS,EAAO0C,oBAExDwP,UAAWlB,EAAWkB,WAAa6K,EAAUa,qBACjDlqC,KAAKmqC,oBACLnqC,KAAK4nC,YAEDtK,EAAW8M,UACXpqC,KAAKqqC,WAGLrqC,KAAKqoC,iBAAsD,QAApCyB,EAAKxM,EAAWkG,sBAAmC,IAAPsG,EAAgBA,EAAKhH,EAAKe,IAEjG7jC,KAAKozB,QACLpzB,KAAK6nC,YAEEvkC,sBACP,MAAO,YAKAgnC,qBACP,OAAOxH,EAAKe,GAKL0G,uBACP,OAAOzH,EAAKgB,KAELoG,gCACP,OAAO,EAEAM,gCAEP,OADkBle,EAAO+V,mBACRnzB,aAAa,8BAGlC3L,cAAc4qB,EAAO4T,GACjB,IAAK5T,GAASA,EAAMvqB,OAAS,EACzB,OAAO,EAaX,GAAIuqB,EAAM,GAAGqK,WAET,OADA6Q,EAAUoB,UAAUtc,EAAO4T,IACpB,EAEX,MAAM2I,EAAY,GAClB,IAAK,IAAIlkC,EAAI,EAAGA,EAAI2nB,EAAMvqB,OAAQ4C,IAAK,CACnC,MAAMmkC,EAAQxc,EAAM3nB,GAAGq8B,cACjB9gC,EAAO4oC,EAAM,GAAG5oC,KACtB,IAAI6oC,EAAOD,EAAMA,EAAM/mC,OAAS,GAAG7B,KACnC,MAAM8oC,EAAgB1c,EAAM3nB,GAAG87B,mBACzBwI,EAAU3c,EAAM3nB,GAAGyhC,gBAAkB,GACrC8C,EAAU5c,EAAM3nB,GAAG4hC,uBAAyB,GAClD,IAAI4C,EACA7c,EAAM3nB,GAAG25B,UACT6K,EAAOjpC,EAAOosB,EAAM3nB,GAAGinB,MAAMyD,WAC7B0Z,EAAO7oC,EAAOosB,EAAM3nB,GAAGinB,MAAM0D,aAG7B6Z,EAAyB,IAAlBH,EAAsBF,EAAMA,EAAM/mC,OAAS,GAAG7B,KAAO+oC,EAAUH,EAAMA,EAAM/mC,OAAS,GAAG7B,KAC9F6oC,EAAyB,IAAlBC,EAAsBF,EAAM,GAAG5oC,KAAO4oC,EAAM,GAAG5oC,KAAO+oC,GAEjEJ,EAAUrc,KAAK,CACXtsB,KAAM4oC,EAAM,GAAG5oC,KACf2nC,QAASsB,EACTrB,QAASiB,EACTnB,OAAQtb,EAAM3nB,GAAG25B,SACjB0K,cAAeA,EACfC,QAAAA,EACAC,QAAAA,EACAE,YAAa9c,EAAM3nB,GAAG0kC,qBACtBC,aAAchd,EAAM3nB,GAAG6/B,cACvBjP,KAAMjJ,EAAM3nB,KAGpB,MAAM4kC,EAASV,EAAU9mC,OACzB,IAAIynC,EAAQX,EAAU,GACtB,MAAMY,EAAQF,EAAS,EAAIV,EAAU,QAAK/oC,EAC1C,IAAI4pC,EAAQH,EAAS,EAAIV,EAAU,GAAKA,EAAU,GAGnC,IAAXU,IAAyC,IAAzBC,EAAMR,eAAgD,IAAxBU,EAAMV,gBACpDQ,EAAQX,EAAU,GAClBa,EAAQb,EAAU,IAEtB,MAAMc,EAAcxoC,KAAK6E,IAAIwjC,EAAMJ,YAAaM,EAAMN,aACtD,IACIQ,EADArW,EAAS,EAGb,GAAe,IAAXgW,EAAc,CACd,MAAMM,EAAcL,EAAMR,gBAAkBU,EAAMV,cAAgB,EAAM,GAgCxE,OA9BIQ,EAAMR,gBAAkBU,EAAMV,eAAiBQ,EAAM1B,SAAW4B,EAAM7B,UACjE2B,EAAM5B,SACPgC,EAAYzoC,KAAK8C,IAAIulC,EAAMtpC,MAAQwpC,EAAM7B,QAAU,KACnD+B,EAAYzoC,KAAK6E,IAAI4jC,EAAWJ,EAAMN,SACtCM,EAAM1B,QAAU0B,EAAMtpC,KAAO0pC,EAC7BJ,EAAMjU,KAAK0R,cAA0B,GAAZ2C,KAG7BJ,EAAM1B,SAAW4B,EAAM7B,QAAUgC,IAC7BL,EAAM5B,OAENH,EAAkB+B,EAAOE,EAAO,GAE3BA,EAAM9B,OAEXH,EAAkBiC,EAAOF,GAAQ,IAGjCjW,EAASoW,EACLH,EAAMR,gBAAkBU,EAAMV,cAE9BQ,EAAMjU,KAAKrC,UAAUK,EAAS,GAI9BmW,EAAMnU,KAAKrC,UAAUK,MAK1B,EAEX,IAAKkW,EACD,MAAM,IAAIrqC,EAAa,eAAgB,sBAc3C,GAZIqqC,EAAM3B,QAAU4B,EAAM7B,QAAU,KAC3B4B,EAAM7B,SACPgC,EAAYzoC,KAAK8C,IAAIwlC,EAAMvpC,MAAQwpC,EAAM7B,QAAU,KACnD+B,EAAYzoC,KAAK6E,IAAI4jC,EAAWH,EAAMP,SACtCO,EAAM3B,QAAU2B,EAAMvpC,KAAO0pC,EAC7BH,EAAMlU,KAAK0R,cAA0B,GAAZ2C,KAO7BH,EAAM7B,SAAW4B,EAAM5B,SAAW8B,EAAM9B,SACpC4B,EAAM1B,SAAW2B,EAAM5B,SAAW4B,EAAM3B,SAAW4B,EAAM7B,SAAS,CAYlE,OAXmB4B,EAAM5B,QAAU4B,EAAM3B,QAC3B0B,EAAM1B,QAAU4B,EAAM7B,QAzLpD,SAAoBnwB,EAAM8xB,EAAOE,GAC7B,MAAM/B,EAAQjwB,EAAKxX,KAAOQ,EAAQ8oC,EAAM1B,QAAS4B,EAAM7B,SACvDnwB,EAAK6d,KAAKwS,WAAW,EAAGrwB,EAAK6d,KAAKyS,WAAW,GAAKL,GAClDjwB,EAAKxX,MAAQynC,EACbjwB,EAAKmwB,SAAWF,EAChBjwB,EAAKowB,SAAWH,EAuLAmC,CAAWL,EAAOD,EAAOE,IAGzBnW,EAASoW,EAAc,EACvBF,EAAMlU,KAAKrC,UAAUK,KAGlB,EAIf,OAAIiW,EAAM5B,QAAU6B,EAAM7B,QAAU8B,EAAM9B,QAEtCH,EAAkB+B,EAAOC,EAAO,GAEhChC,EAAkBiC,EAAOD,GAAQ,IAE1B,IAGPA,EAAM7B,QAAU4B,EAAM5B,QAAU6B,EAAM3B,SAAW4B,EAAM7B,SAEvDJ,EAAkBgC,EAAOC,EAAO,GAEhCD,EAAM7B,QAAU8B,EAAM9B,QAAU4B,EAAM1B,SAAW2B,EAAM5B,SAEvDJ,EAAkBgC,EAAOD,GAAQ,GAEjCA,EAAM5B,QAAU4B,EAAM1B,SAAW2B,EAAM5B,SAEvCJ,EAAkB+B,EAAOC,EAAO,GAEhCC,EAAM9B,QAAU6B,EAAM3B,SAAW4B,EAAM7B,SAEvCJ,EAAkBiC,EAAOD,GAAQ,KAG/BD,EAAM5B,SAAW6B,EAAM7B,QAAU4B,EAAM1B,SAAW2B,EAAM5B,QAAU,KAClE4B,EAAM7B,SAAW8B,EAAM9B,QAAU6B,EAAM3B,SAAW4B,EAAM7B,WAC1DtU,EAASoW,EAAc,EACvBF,EAAMlU,KAAKrC,UAAUK,KAElB,GAEX7xB,iBAAiB4qB,EAAO4T,GAEpB,IAAI6J,GAAW,EACf,IAAK,IAAIplC,EAAI,EAAGA,EAAI2nB,EAAMvqB,OAAQ4C,IAC9BolC,EAAWA,GAAmCjqC,MAAvBwsB,EAAM3nB,GAAGgyB,WAEpC,IAAKoT,EACD,MAAM,IAAI3qC,EAAa,UAAW,gCAEtC,IAAIm0B,EAAS,EACb,IAAK,IAAI5uB,EAAI,EAAGA,EAAI2nB,EAAMvqB,OAAS,EAAG4C,IAAK,CACvC,IAAIqlC,EAAU1d,EAAM3nB,GAChBslC,EAAa3d,EAAM3nB,EAAI,GACvBqlC,EAAQvJ,qBAAuBQ,EAAKgB,OACpC+H,EAAU1d,EAAM3nB,EAAI,GACpBslC,EAAa3d,EAAM3nB,IAEvB,MAAMulC,EAAUF,EAAQhJ,cAClBmJ,EAAaF,EAAWjJ,cACxBoJ,EAAuB,GAQvBC,EADWL,EAAQlW,aACO2K,YAAY,EAAIyL,EAAQ,GAAGhqC,KAAOkqC,GAE5DE,EADcL,EAAWnW,aACI2K,YAAY,EAAI0L,EAAWA,EAAWpoC,OAAS,GAAG7B,KAAOkqC,GAChDtqC,MAAlBwqC,GAAiDxqC,MAAlBuqC,GAA8BC,EAAiBD,EAAiB,IAErH9W,EAASyW,EAAQX,qBAAuB,EACxCY,EAAW/W,UAAUK,IAG7B2M,EAAME,aAAe7M,EAEzB7xB,kBAAkB4qB,GACd,QAAKA,IAELA,EAAMyK,SAASxB,GAASA,EAAKmF,gBACtB,GAEXnJ,QACI9xB,MAAM8xB,QAEN,MAAMgZ,EAAiBpsC,KAAKiqC,WAAW54B,KAAKg7B,GAAaA,EAAS95B,aAClEvS,KAAKssC,iBACLtsC,KAAKiqC,WAAWrR,SAAQ,CAACyT,EAAUn8B,KAC/B,MAAMq8B,EAAgBH,EAAel8B,GACjCq8B,GACAF,EAAS/5B,SAASi6B,MAE1B,MAAMzX,EAAQ90B,KAAK80B,MAKnB,OAJIA,GACA90B,KAAKiqC,WAAWrR,SAAS4T,GAASA,EAAK3X,SAASC,KAEpD90B,KAAKysC,wBACEzsC,KAEX2hC,QAAQH,GAOJ,OANAxhC,KAAKwhC,KAAOA,EACZxhC,KAAKysC,wBAEDzsC,KAAK8wB,MACL9wB,KAAK8wB,KAAKsT,aAAapkC,KAAKkoC,oBAEzBloC,KAGX4nC,YAEI,OADA5nC,KAAK2nC,QAAQ,IAAI7E,EAAK,CAAEW,OAAQzjC,KAAKmgC,YAC9BngC,KAGXssC,iBACItsC,KAAKiqC,WAAa,GAClB,MAAMY,EAAgB7qC,KAAKsiC,mBACrBlxB,EAAOpR,KAAK4iC,UAClB,IAAI8J,EACAC,EAIAC,EACAC,EACA9hC,EALAqiB,GAAY,EAMZyd,IAAkB/H,EAAKe,IACvB+I,EAAQ,EACRC,EAAMz7B,EAAKxN,OACXmH,EAAO,IAGP6hC,EAAQx7B,EAAKxN,OAAS,EACtBipC,GAAO,EACP9hC,GAAQ,GAEZ,IAAK,IAAIvE,EAAIomC,EAAOpmC,IAAMqmC,EAAKrmC,GAAKuE,EAAM,CACtC,MAAM+hC,EAAY9sC,KAAK29B,SAASn3B,GAC1BzE,EAAO+qC,EAAU/qC,UAGNJ,IAAb+qC,EACAA,EAAW3qC,GAGX4qC,EAAW3pC,KAAK8C,IAAI4mC,EAAW3qC,GACd,IAAb4qC,GAA+B,KAAbA,EAClBvf,GAAaA,GAGbA,GAAY,EACZptB,KAAKgqC,oBAAqB,IAGlC0C,EAAW3qC,EACX,MAAMgrC,EAAW,IAAIlH,EAAS,CAC1BvX,SAAUtuB,KAAKsuB,SACf2X,UAAWjmC,KAAK49B,SAChBxQ,UAAAA,EACAoW,eAAgBqH,EAChB1E,kBAAmB2G,EAAU1rC,KAC7Bm9B,iBAAkBv+B,KAAKq+B,eAAeE,iBACtCpM,QAAS2a,EAAUpzB,YACnBqsB,iBAAkB+G,EAAU/G,iBAC5BC,mBAAoB8G,EAAU9G,mBAC9BjkC,KAAM+qC,EAAU/qC,OAEpB/B,KAAKiqC,WAAWzjC,GAAKumC,GAI7B1C,WACIrqC,KAAKqoC,iBAAiBroC,KAAKgtC,iCAE/BA,gCAEIhtC,KAAK2pC,QAAU3pC,KAAK29B,SAAS,GAAG57B,KAChC/B,KAAK0pC,QAAU1pC,KAAK29B,SAAS39B,KAAK29B,SAAS/5B,OAAS,GAAG7B,KAIvD,OAFiB/B,KAAK2pC,QAAU3pC,KAAK0pC,SAAW,EAD5B,EAE0B5G,EAAKe,GAAKf,EAAKgB,KAIjEqG,oBACI,IAAIuC,EACJ,IAAK,IAAIlmC,EAAI,EAAGA,EAAIxG,KAAKoR,KAAKxN,SAAU4C,EAAG,CACvC,MAAMrG,EAAMH,KAAKoR,KAAK5K,GAGlBxG,KAAKytB,MAAMlU,OACXvZ,KAAKytB,MAAM2D,SAAWjxB,GAC1B,MAAMwsB,EAAU,CAAEC,aAAc5sB,KAAK4sB,cAAgB,GAC/C+d,EAAQre,EAAO2gB,cAAc9sC,EAAKH,KAAKwsB,KAAMG,GACnD,IAAKge,EACD,MAAM,IAAI1pC,EAAa,eAAgB,oCAAoCd,KAG7D,MAAdwqC,EAAMxqC,MACgB,MAAlBH,KAAKsuB,UAAsC,MAAlBtuB,KAAKsuB,SAC9Bqc,EAAM5oC,KAAO,EAGb4oC,EAAM5oC,KAAO,GAIrB,MAAMA,EAAO4oC,EAAM5oC,KACHJ,MAAZ+qC,EACAA,EAAW3qC,EAGuB,KAA9BiB,KAAK8C,IAAI4mC,EAAW3qC,KACpB/B,KAAKotB,WAAY,EACjBud,EAAMvd,WAAY,EAGdptB,KAAK29B,SAAS/5B,OAAS,IACvB5D,KAAK29B,SAASn3B,EAAI,GAAG4mB,WAAY,IAI7Csf,EAAW3qC,EACX/B,KAAK29B,SAAStP,KAAKsc,GAGvB+B,OAAW/qC,EACX3B,KAAK29B,SAAS/E,SAASz4B,IACfusC,GAAYvsC,EAAI4B,KAAO2qC,GACvBtqC,EAAK,qGAETsqC,EAAWvsC,EAAI4B,QAEnB/B,KAAK29B,SAASuP,MAAK,CAAC1qC,EAAGC,IAAMD,EAAET,KAAOU,EAAEV,OAG5CkS,iBACI,IAAIpI,EAAIkF,EACR,IAAK/Q,KAAKs8B,aACN,MAAM,IAAIr7B,EAAa,kBAAmB,qDAE9C,MAAQsH,MAAO3B,EAAC,UAAE8xB,EAAS,oBAAEwF,GAAwBl+B,KAAK4O,aACpDlN,EAAI1B,KAAK68B,eAAiBnE,EAAYwF,EAC5C,IAAIiP,EAAO,EACPC,EAAO,EACX,MAAMC,GAAsH,QAAlGt8B,EAAgC,QAA1BlF,EAAK7L,KAAKw4B,kBAA+B,IAAP3sB,OAAgB,EAASA,EAAGg7B,gCAA6C,IAAP91B,EAAgBA,EAAK,GAAK,EACxJ26B,EAAgC,EAAlB2B,EACpB,GAAIrtC,KAAKmgC,SAAU,CACf,MAAMx5B,EAAI3G,KAAKo+B,GAAG,GACZkP,EAAOhhB,EAAOmC,mBAAmBzuB,KAAKsuB,UACxCgf,EAAKvoC,OAAO,IAAMuoC,EAAKvoC,OAAO,IAC9BooC,EAAOxmC,EAAI0mC,EACXD,EAAOzmC,EAAI0mC,IAGXF,EAAOxmC,EAAI3G,KAAKytB,MAAMyD,WAAawa,EACnC0B,EAAOzmC,EAAI3G,KAAKytB,MAAM0D,WAAaua,QAGtC,GAAI1rC,KAAKytB,MAAMqD,KAAM,CACtB,MAAMsN,EAAKp+B,KAAKuiC,iBAChBnE,EAAG6G,OAASoI,EAAkBrtC,KAAKsiC,mBACnC6K,EAAOnqC,KAAK8hC,IAAI1G,EAAG4G,KAAM5G,EAAG6G,OAC5BmI,EAAOpqC,KAAK6E,IAAIu2B,EAAG4G,KAAM5G,EAAG6G,WAE3B,CACDkI,EAAO,EACPC,EAAO,EACP,IAAK,IAAI5mC,EAAI,EAAGA,EAAIxG,KAAKo+B,GAAGx6B,SAAU4C,EAAG,CACrC,MAAM64B,EAAKr/B,KAAKo+B,GAAG53B,GACT,IAANA,GACA2mC,EAAO9N,EACP+N,EAAO/N,IAGP8N,EAAOnqC,KAAK8hC,IAAIzF,EAAI8N,GACpBC,EAAOpqC,KAAK6E,IAAIw3B,EAAI+N,IAG5BD,GAAQE,EACRD,GAAQC,EAEZ,OAAO,IAAI3mC,EAAYhF,EAAGyrC,EAAMvmC,EAAGwmC,EAAOD,GAI9CxM,cAAcC,GACV,IAAK5gC,KAAK29B,SAAS/5B,OACf,MAAM,IAAI3C,EAAa,aAAc,yEAEzC,IAAIssC,EAAavtC,KAAK29B,SAAS,GAAG57B,KAElC,IAAK,IAAIyE,EAAI,EAAGA,EAAIxG,KAAK29B,SAAS/5B,OAAQ4C,IAAK,CAC3C,MAAMgnC,EAAWxtC,KAAK29B,SAASn3B,GAAGzE,KAC9B6+B,EACI4M,EAAWD,IACXA,EAAaC,GAGbA,EAAWD,IACXA,EAAaC,GAGzB,OAAOD,EAKXpN,SACI,OAAOngC,KAAKytB,MAAMlU,KAGtBk0B,UACI,OAAQztC,KAAKmgC,UAAYngC,KAAKoR,KAAKxN,OAAS,EAGhDy9B,UACI,OAAOrhC,KAAKytB,MAAMqD,KAEtBgX,UACI,OAAOxmC,MAAMwmC,YAAc9nC,KAAKmgC,SAEpCwI,WACI,MAAsB,MAAlB3oC,KAAK49B,SACE59B,KAAK4oC,kBAKLtnC,MAAMqnC,YAAc3oC,KAAKwjC,eAAiBV,EAAKiB,OAAS,GAAK/jC,KAAKwjC,gBAAkB,GAKnGvC,eAAe8H,GACX,MAAMC,EAAUhpC,KAAKuiC,iBACrB,OAAOv/B,KAAK8hC,IAAI9kC,KAAK21B,aAAasL,eAAe8H,GAAWC,EAAQhE,KAAOhlC,KAAKq+B,eAAeC,oBAAsByK,EAAW,IAEpIE,kBAAkBF,GACd,MAAMC,EAAUhpC,KAAKuiC,iBACrB,OAAOv/B,KAAK6E,IAAI7H,KAAK21B,aAAasL,eAAe8H,GAAWC,EAAQ/D,MAAQjlC,KAAKq+B,eAAeC,mBAAqByK,GAIzHlU,SAASC,GACLxzB,MAAMuzB,SAASC,GACf,MAAMsJ,EAAKp+B,KAAKiqC,WAAW54B,KAAK07B,IAC5BA,EAASlY,SAASC,GACXiY,EAAS/lC,UAGpB,GADAhH,KAAKqgC,MAAMjC,GACPp+B,KAAK8wB,KAAM,CACX,MAAM,MAAEuS,EAAK,SAAEC,GAAatjC,KAAK0tC,oBACjC1tC,KAAK8wB,KAAKyT,WAAWlB,EAAOC,GAEhC,OAAOtjC,KAGXqmC,cACI,OAAOrmC,KAAKotB,UAGhBugB,iBAAiBvgB,GAEb,OADAptB,KAAKotB,UAAYA,EACVptB,KAGXwiC,eACI,IAAIC,EAAYziC,KAAK68B,eAIrB,OAHA4F,GAAaziC,KAAK+gC,gBAAkB/gC,KAAKmyB,QAAUnyB,KAAKm+B,qBACpDn+B,KAAK23B,kBACL8K,GAAaziC,KAAK23B,gBAAgBiW,iBAC/BnL,EAGXC,cACI,IAAIC,EAAU3iC,KAAK68B,eAEnB,OADA8F,GAAW3iC,KAAKmyB,QAAUnyB,KAAKk+B,oBACxByE,EAGX9B,iBACI,IAAIgN,EAAW7tC,KAAK29B,SAAS,GAAG57B,KAChC,GAAI/B,KAAK29B,SAAS/5B,OAAS,EAAG,CAC1B,MAAM8oC,EAAW1sC,KAAK29B,SAAS39B,KAAK29B,SAAS/5B,OAAS,GAAG7B,KAGzD8rC,EAAWtrC,EAFCS,KAAK6E,IAAIgmC,EAAUnB,GACnB1pC,KAAK8hC,IAAI+I,EAAUnB,IAGnC,OAAOmB,EAIX/L,mBAAmB1Q,EAAUlhB,EAAOyc,EAAU,IAC1C,IAAI9gB,EAAIkF,EACR,IAAK/Q,KAAKs8B,aACN,MAAM,IAAIr7B,EAAa,kBAAmB,wDAE9C,GAAuB,IAAnBjB,KAAKo+B,GAAGx6B,OACR,MAAM,IAAI3C,EAAa,YAAa,yCAExC,MAAM,MAAE21B,EAAK,MAAEE,EAAK,KAAER,EAAI,MAAEW,GAAUd,EAASE,SAC/C,IAAI30B,EAAI,EAiBR,OAhBI0vB,IAAakF,EAEb50B,GAAI,EAEC0vB,IAAa6F,GAElBv1B,EAAI1B,KAAK+gC,gBAAkB/gC,KAAKmyB,QAAU,EACtCnyB,KAAKwjC,iBAAmBV,EAAKe,IAC7B7jC,KAAK8nC,YACJnb,EAAQmhB,gBAxmBA,EAAC1W,EAAMlnB,IAAUA,KAAWknB,EAAKkL,qBAAuBQ,EAAKe,GAAKzM,EAAKuG,SAAS/5B,OAAS,EAAI,GAwmB3EmqC,CAAiB/tC,KAAMkQ,MAClDxO,GAAwI,QAAlIqP,EAAsE,QAAhElF,EAAK7L,MAAAA,UAAmC,EAASA,KAAKgxB,YAAyB,IAAPnlB,OAAgB,EAASA,EAAG+C,aAAarG,aAA0B,IAAPwI,EAAgBA,EAAK,IAGpKqgB,IAAa0F,GAAS1F,IAAawF,IACxCl1B,EAAI1B,KAAK+gC,gBAAkB,GAExB,CACHr/B,EAAG1B,KAAK68B,eAAiBn7B,EACzBiF,EAAG3G,KAAKo+B,GAAGluB,IAKnBoC,SAAShG,GACL,IAAIT,EAIJ,OAHAvK,MAAMgR,SAAShG,GACftM,KAAKiqC,WAAWrR,SAASmU,GAAaA,EAASz6B,SAAShG,KACnC,QAApBT,EAAK7L,KAAK8wB,YAAyB,IAAPjlB,GAAyBA,EAAGyG,SAAShG,GAC3DtM,KAEXguC,aAAa1hC,GACT,MAAMwkB,EAAO9wB,KAAKynC,UAElB,OADA3W,MAAAA,GAA4CA,EAAKxe,SAAShG,GACnDtM,KAEXiuC,eACI,IAAIpiC,EACJ,OAA4B,QAApBA,EAAK7L,KAAK8wB,YAAyB,IAAPjlB,OAAgB,EAASA,EAAG0G,WAEpE27B,mBAAmB5hC,GACftM,KAAK+pC,gBAAkBz9B,EAE3B6hC,qBACI,OAAOnuC,KAAK+pC,gBAEhBqE,aAAa9hC,GACTtM,KAAKquC,UAAY/hC,EAErBgiC,eACI,OAAOtuC,KAAKquC,UAMhBE,YAAYr+B,EAAO5D,GAEf,OADAtM,KAAKiqC,WAAW/5B,GAAOoC,SAAShG,GACzBtM,KAEX4pC,WAAW15B,EAAOnO,GAGd,OAFA/B,KAAK29B,SAASztB,GAAOnO,KAAOA,EAC5B/B,KAAKozB,QACEpzB,KAEX6pC,WAAW35B,GACP,OAAOlQ,KAAK29B,SAASztB,GAAOnO,KAIhCmpC,qBAEI,OAAOlrC,KAAK+gC,iBAAmB/gC,KAAKotB,UAAY,EAAI,GAIxDqf,wBACIzsC,KAAKygC,uBAAuBzgC,KAAKotB,WAAaptB,KAAKwjC,iBAAmBV,EAAKgB,KAAO9jC,KAAK+gC,gBAAkB,GAGzG/gC,KAAK0gC,yBAAyB1gC,KAAK8nC,WAAa9nC,KAAKotB,WAAaptB,KAAKwjC,iBAAmBV,EAAKe,GAAK7jC,KAAK+gC,gBAAkB,GAG/H1E,YACI,GAAIr8B,KAAKs8B,aACL,OACJ,IAAIkS,EAAkB,EAClBxuC,KAAK23B,kBACL33B,KAAK23B,gBAAgB0E,YAGmB,IAApCr8B,KAAK23B,gBAAgB5J,aACrBygB,EAAkBnF,EAAUmB,qBAGpC,IAAIjiC,EAAQvI,KAAK+gC,gBAAkB/gC,KAAKk+B,oBAAsBl+B,KAAKm+B,qBAAuBqQ,EAEtFxuC,KAAKyuC,kBAAoBzuC,KAAKwjC,iBAAmBV,EAAKe,KACtDt7B,GAASvI,KAAK+gC,iBAGlB/gC,KAAKk3B,SAAS3uB,GACdvI,KAAKs8B,cAAe,EAqBxBoR,oBAEI,IAEIgB,EACAC,EAGAC,EACAC,EAPAC,EAAQC,EAAAA,EACRC,GAAWD,EAAAA,EAGXE,EAAcjvC,KAAK21B,aAAauZ,cAChCC,EAAa,EAGbC,EAA0BH,EAC1BI,EAAyBF,EAuB7B,OAtBAnvC,KAAKiqC,WAAWrR,SAASmU,IACrB,MAAMhrC,EAAOgrC,EAASzG,UAChB3/B,EAAIomC,EAAS/lC,OACnB8nC,EAAO9rC,KAAK8hC,IAAIn+B,EAAGmoC,GACnBE,EAAUhsC,KAAK6E,IAAIlB,EAAGqoC,QACHrtC,IAAfgtC,GAA4B5B,EAAS1G,gBACrCsI,EAAa5B,EAASlQ,qBAEJl7B,IAAlB+sC,GAAgC3B,EAAS1G,gBACzCqI,EAAgB3B,EAASlQ,gBAE7BoS,EAAcjsC,KAAK6E,IAAI9F,EAAMktC,GAC7BE,EAAansC,KAAK8hC,IAAI/iC,EAAMotC,GACxBpC,EAAS1G,eACTuI,OAAgDjtC,IAAzBitC,EAAqC7sC,EAAOiB,KAAK6E,IAAI9F,EAAM6sC,GAClFC,OAA8CltC,IAAxBktC,EAAoC9sC,EAAOiB,KAAK8hC,IAAI/iC,EAAM8sC,KAGhFO,EAA0BpsC,KAAK6E,IAAI9F,EAAMqtC,GACzCC,EAAyBrsC,KAAK8hC,IAAI/iC,EAAMstC,MAE7CrvC,MACI,CACHqjC,MAAOyL,EACPxL,SAAU0L,EACVM,YAAaX,EACbY,gBAAiBb,EACjBc,aAAcP,EACdQ,YAAaN,EACbO,uBAAwBd,EACxBe,sBAAuBd,EACvBe,2BAA4BR,EAC5BS,0BAA2BR,GAInCS,oBACI,OAAO9vC,KAAK68B,eAAiB78B,KAAKmyB,QAGtC4d,kBAEI,OADe/vC,KAAK8vC,oBACJ9vC,KAAK+gC,gBAErBiP,gBACA,OAAOhwC,KAAKiqC,WAAWhoC,QAGvBguC,iBAEA,OA/xBJ9tC,QAAQC,KAAK,uEAAwE,iDA+xB1EpC,KAAKgwC,UAGhBE,kBACI,MAAMpb,EAAQ90B,KAAK21B,cACb,MAAElI,EAAO4Q,gBAAgB,UAAEG,IAAiBx+B,KAC5C0zB,EAAM1zB,KAAKwT,eACXjL,EAAQklB,EAAMM,WAAyB,EAAZyQ,EAC3B2R,EAAc,GAAK1iB,EAAMM,WAAayQ,GAAasE,EAAKiB,MAAQ,EACtE,GAAI/jC,KAAKmgC,SACL,OACJ,IAAKzM,EACD,MAAM,IAAIzyB,EAAa,kBAAmB,wCAE9C,MAAM,aAAEuuC,EAAY,YAAEC,EAAW,uBAAEC,EAAsB,2BAAEE,EAA0B,sBAAED,EAAqB,0BAAEE,EAAyB,YAAEP,EAAW,gBAAEC,GAAqBvvC,KAAK0tC,oBAEhL,GAAI8B,EAAe,GAAKC,EAAc,EAClC,OACJ,MAAMW,EAAQptC,KAAK8hC,IAAIwK,MAAAA,EAAiDA,EAAc,EAAGC,MAAAA,EAAyDA,EAAkB,GAC9Jc,EAAiB,CAAC1pC,EAAG2pC,EAAQljB,KAC/B,IAAI1rB,EAEAA,EADA0rB,GAAakjB,EACTF,EAAQ5R,EACP8R,GACAf,MAAAA,EAAyDA,EAAkB,GAAK/Q,GAEhF8Q,MAAAA,EAAiDA,EAAc,GAAK9Q,EAC7E,MAAM+R,EAAcD,GAAUljB,EAAY+iB,EAAc5nC,EACxDmrB,EAAIQ,YACJR,EAAIS,OAAOzyB,EAAGiF,GACd+sB,EAAIU,OAAO1yB,EAAI6uC,EAAa5pC,GAC5B+sB,EAAI1G,UAEF1gB,EAAQjM,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAIigB,EAAM0b,6BAA8BxwC,KAAKmuC,sBACvFnuC,KAAKwS,WAAWkhB,EAAKpnB,GAErB,IAAK,IAAIvK,EAAO,EAAGA,GAAQytC,IAAgBztC,EAAM,CAC7C,MAAMuuC,OAA6B3uC,IAApB4tC,GAAiCxtC,GAAQ6tC,EAClDxiB,OAAuCzrB,IAA3B+tC,GAAwC3tC,GAAQ2tC,EAClEW,EAAevb,EAAMkS,YAAYjlC,GAAOuuC,EAAQljB,GAGpD,IAAK,IAAIrrB,EAAO,EAAGA,GAAQ0tC,IAAe1tC,EAAM,CAC5C,MAAMuuC,OAA6B3uC,IAApB4tC,GAAiCxtC,GAAQ8tC,EAClDziB,OAAsCzrB,IAA1BguC,GAAuC5tC,GAAQ4tC,EACjEU,EAAevb,EAAMkS,YAAYjlC,GAAOuuC,EAAQljB,GAEpDptB,KAAKqT,aAAaqgB,EAAKpnB,GAG3BmkC,gBACI,MAAM/c,EAAM1zB,KAAKwT,eACjBkgB,EAAIgd,UAAU,aACd,IAAK,IAAIlqC,EAAI,EAAGA,EAAIxG,KAAKu5B,UAAU31B,OAAQ4C,IAAK,CAC5C,MAAMo7B,EAAW5hC,KAAKu5B,UAAU/yB,GAC1B0J,EAAQ0xB,EAASpK,aACjBuV,EAAW/sC,KAAKiqC,WAAW/5B,GAC3BygC,EAAgB5D,EAASx6B,WAC/Bw6B,EAASv6B,WAAWkhB,EAAKid,GACzB/O,EAASztB,WAAWuf,GACpBkO,EAASruB,gBACTw5B,EAAS15B,aAAaqgB,EAAKid,GAE/Bjd,EAAIkd,aAERnC,iBACI,MAAMpN,OAAwB1/B,IAAd3B,KAAK8wB,KACfgX,EAAU9nC,KAAKytB,MAAMuD,KACrB6f,OAA0BlvC,IAAd3B,KAAKwhC,KACvB,OAAOH,GAAWyG,GAAW+I,EAGjCC,WACI,IAAIjlC,EACJ,MAAM6nB,EAAM1zB,KAAKwT,eACjB,IAAKkgB,EACD,MAAM,IAAIzyB,EAAa,kBAAmB,wCAE9C,GAAIjB,KAAKyuC,iBAAkB,CACvB,MAAM,MAAEpL,EAAK,SAAEC,GAAatjC,KAAK0tC,oBAE3BqD,EAAiB/wC,KAAK8wB,KAAK0T,YAC3BwM,EAAQhxC,KAAK2oC,WAKbsI,OAA0BtvC,IAAd3B,KAAKgxB,KAAqBhxB,KAAKgxB,KAAKiE,eAAe7C,QAAU,EACzE8e,EAAQlxC,KAAKsiC,qBAAuBQ,EAAKgB,KAEvCT,EAAQ0N,EAAiB,EAAIE,EAE7B3N,EAAWyN,EAAiB,EAAIE,EAExCvd,EAAIgd,UAAU,YAAQ/uC,EAAW,CAAEwvC,aAAa,IAChDnxC,KAAKwS,WAAWkhB,EAAK1zB,KAAKsuC,gBACL,QAApBziC,EAAK7L,KAAKgxB,YAAyB,IAAPnlB,GAAyBA,EAAG2pB,OAAO9B,EAAKsd,EAAOE,GAC5ElxC,KAAKqT,aAAaqgB,EAAK1zB,KAAKsuC,gBAC5B5a,EAAIkd,cAIZQ,gBACI,MAAM1d,EAAM1zB,KAAKwT,eACjBxT,KAAKiqC,WAAWrR,SAASmU,IACrBrZ,EAAIgd,UAAU,gBAAY/uC,EAAW,CAAEwvC,aAAa,IACpDpE,EAAS54B,WAAWuf,GAAKjgB,OACzBigB,EAAIkd,gBAGZ1H,SAASC,GACL,IAAIt9B,EAIJ,MAAM6nB,EAAM1zB,KAAKwT,eACb21B,GACAnpC,KAAK2nC,QAAQ,IAAI7E,EAAKqG,IAItBnpC,KAAKyuC,kBAAoBzuC,KAAK8wB,MAC9B9wB,KAAK8wB,KAAKuU,sBAEd3R,EAAIgd,UAAU,YAAQ/uC,EAAW,CAAEwvC,aAAa,IAC3B,QAApBtlC,EAAK7L,KAAK8wB,YAAyB,IAAPjlB,GAAyBA,EAAGsI,WAAWuf,GAAKjgB,OACzEigB,EAAIkd,aAKR1I,mBACI,MAAMmJ,EAAuB/vC,MAAM4mC,mBACnC,IAAKloC,KAAKytB,MAAMqD,KACZ,OAAOugB,EAEX,MAAM7N,EAAiBxjC,KAAKsiC,mBAC5B,GAAIkB,IAAmBxjC,KAAKgtC,gCACxB,OAAOqE,EAEX,IAAIC,EAUAA,EARA9N,IAAmBV,EAAKe,GADR,EASkB7jC,KAAK0pC,QAGnB1pC,KAAK2pC,QAZT,EAepB,MAAM4H,EAAkCD,EAAoB,IAC5D,GAAIC,GAAmC,EACnC,OAAOF,EAEX,MAAMvc,EAAQ90B,KAAKw4B,WACnB,IAAIgZ,EAAwB,GAI5B,OAHa7vC,MAATmzB,IACA0c,EAAwB1c,EAAM+R,0BAE3BwK,EAAuBE,EAAkCC,EAGpE/9B,OACI,IAAI5H,EACJ,GAAuB,IAAnB7L,KAAKo+B,GAAGx6B,OACR,MAAM,IAAI3C,EAAa,YAAa,qCAExC,MAAMyyB,EAAM1zB,KAAKwT,eACXi+B,EAASzxC,KAAK8vC,oBACd4B,EAAmB1xC,KAAKqhC,YAAcrhC,KAAKwhC,KAEjDxhC,KAAKiqC,WAAWrR,SAASmU,GAAaA,EAAS5lC,KAAKsqC,KAEpD,MAAME,EAAQ3xC,KAAK2oC,WACE,QAApB98B,EAAK7L,KAAK8wB,YAAyB,IAAPjlB,GAAyBA,EAAGo4B,mBAAmB0N,EAAOA,GA/8B3F,YAAc7vC,GACNunC,EAAU3D,OACV9jC,EAAI,qBAAsBE,GA88B1B,CAAE,aAAc9B,KAAKytC,UAAY,UAAY,SAAUztC,KAAKoR,MAE5DpR,KAAKwS,aACLxS,KAAK6Q,aAAa,KAAM6iB,EAAIgd,UAAU,YAAa1wC,KAAK2Q,aAAa,QACrE3Q,KAAKkwC,kBACLxc,EAAIgd,UAAU,YAAQ/uC,EAAW,CAAEwvC,aAAa,IAC5CO,GACA1xC,KAAKkpC,WACTlpC,KAAKoxC,gBACLpxC,KAAK8wC,WACLpd,EAAIkd,aACJ5wC,KAAKywC,gBACL/c,EAAIkd,aACJ5wC,KAAKqT,eACLrT,KAAK8T,eAKbu1B,EAAU3D,OAAQ,ECr/BX,MAAMkM,EAAehxC,GAAQk8B,EAAWl8B,EAAKixC,GAC7C,MAAMA,UAAkBxI,EAC3BloC,YAAYm8B,GACRh8B,MAAMjB,OAAOwU,OAAO,CAAE0pB,iBAAkBjS,EAAO0C,oBAAsB6iB,EAAUC,MAAOtT,UAAWqT,EAAU3H,oBAAsB5M,IACjIt9B,KAAK+xC,MAAQzU,EAAWyU,QAAS,EACjC/xC,KAAKgyC,MAAO,EACZhyC,KAAKssC,iBACLtsC,KAAKuI,MAAQ,EAENjF,sBACP,MAAO,YAEA4mC,gCACP,OAAO,EAEA4H,mBACP,MAAO,IAEX5J,mBACI,GAAIloC,KAAK6oC,wBACL,OAAO7oC,KAAK6oC,wBAEhB,MAAMpb,EAAQztB,KAAK8gC,WACnB,GAAIrT,EAAO,CACP,IAAIwkB,EAAM3wC,MAAM4mC,mBAChB,GAAIza,EAAMqD,KAAM,CACZ,MAAMohB,EAAiBlyC,KAAKmyC,oBAC5BF,GAAOnP,EAAKkB,OAASiO,GAAOC,EAAiBpP,EAAKkB,OAEtD,OAAOiO,EAEX,OAAO,EAGXE,oBACI,OAAOnyC,KAAKq+B,eAAeE,iBAAmBjS,EAAO0C,oBAEzDvb,OACInS,MAAMmS,OACNzT,KAAK8T,cACL,MAAMgd,EAAO9wB,KAAK8wB,KAClB,GAAI9wB,KAAK+xC,OAASjhB,EAAM,CACpB,MAAMohB,EAAiBlyC,KAAKmyC,oBAEtBC,EAAcF,EAAiB,IACrC,IAAIG,EACJ,MAAM7Q,EAAOxhC,KAAKwhC,KAClB,GAAIA,EAEKA,EAAKhF,eACNgF,EAAKjF,aAET8V,EAAYryC,KAAKsyC,yBAAyB,EAAIF,EAAa,EAAIA,EAAa,CACxEthB,KAAM,EAAIshB,EACV5Q,KAAM,EAAI4Q,QAGb,CACD,MAAM5O,EAAiBxjC,KAAKsiC,mBACtBiQ,EAAiBvyC,KAAK0tC,oBACtBqD,EAAiBjgB,EAAK0T,YAC5B,IAAI9iC,EAAI1B,KAAK68B,eACTl2B,EAAI68B,IAAmBV,EAAKgB,KAC1ByO,EAAelP,MAAQ0N,EACvBwB,EAAejP,SAAWyN,EAC5ByB,EAAiBlmB,EAAO4C,YAC5BsjB,GAAkBA,EAAiB,IACnC7rC,GAAK6rC,EAAiBN,EAAiB1O,EACvC,MAAM8E,EAAU9E,IAAmBV,EAAKe,GAClC,CACE77B,GAAI,EACJE,GAAI,EACJC,GAAI,GACJC,IAAK,GAEP,CACEJ,IAAK,EACLE,GAAI,EACJC,GAAI,GACJC,GAAI,GAEZ1G,GAAK4mC,EAAQtgC,GAAKoqC,EAClBzrC,GAAK2hC,EAAQpgC,GAAKkqC,EAClBC,EAAY,CACRrqC,GAAItG,EACJwG,GAAIvB,EACJwB,GAAIzG,EAAI4mC,EAAQngC,GAAKiqC,EACrBhqC,GAAIzB,EAAI2hC,EAAQlgC,GAAKgqC,GAI7B,MAAM1e,EAAM1zB,KAAKwT,eACjBkgB,EAAIhhB,OACJghB,EAAItgB,aAAa,EAAIg/B,GACrB1e,EAAIQ,YACJR,EAAIS,OAAOke,EAAUrqC,GAAIqqC,EAAUnqC,IACnCwrB,EAAIU,OAAOie,EAAUlqC,GAAIkqC,EAAUjqC,IACnCsrB,EAAI6L,YACJ7L,EAAI1G,SACJ0G,EAAIpgB,WAGZg/B,yBAAyBG,EAAiBC,EAAiBC,GACvD,MAAMnR,EAAOxhC,KAAKwhC,KAClB,IAAKA,EACD,MAAM,IAAIvgC,EAAa,SAAU,mCACrC,MAAM2xC,EAAapR,EAAKqR,MAElBC,EADgBtR,EAAKrT,MAAMqT,EAAKrT,MAAMvqB,OAAS,KAAO5D,MAC5B,EAAI,EAC9B+yC,EAAa/vC,KAAKgwC,KAAKJ,EAAaE,GAEpCG,EACEjwC,KAAKkwC,IAAIH,GAAcL,EADzBO,EAEEjwC,KAAKmwC,IAAIJ,GAAcL,EAE/BD,GAAmBzyC,KAAKsiC,mBACxB,MAAM8Q,EAAcpwC,KAAKgwC,MAAMC,EAAkBR,GAAmBQ,GAC9DI,EAAqBrwC,KAAKkwC,IAAIE,GAAeT,EAAY7hB,KAAOgiB,EAChEQ,EAAqBtwC,KAAKmwC,IAAIC,GAAeT,EAAY7hB,KACzDyiB,EAAqBvwC,KAAKkwC,IAAIE,GAAeT,EAAYnR,KAAOsR,EAChEU,EAAqBxwC,KAAKmwC,IAAIC,GAAeT,EAAYnR,KACzDmQ,EAAQ3xC,KAAK2oC,WACb8K,EAASjS,EAAKrT,MAAM,GAAGwa,WACvB+K,EAAQlS,EAAKmS,kBAAoBhC,EAAQ8B,GAAUb,EAOzD,MANY,CACR5qC,GAAI2pC,EAAQ0B,EACZnrC,GAAIwrC,EAAQjB,EAAkBa,EAC9BnrC,GAAIwpC,EAAQsB,EAAkBH,EAASS,EACvCnrC,GAAIsrC,EAAQT,EAAkBO,IC5HnC,MAAMI,WAAYzd,EACrBh1B,cACIG,QACAtB,KAAKoxB,SAAW+E,EAASE,SAASY,MAClCj3B,KAAK6zC,OAAS,EACd7zC,KAAKk3B,SAAS,GACdl3B,KAAKixB,WAAa,EAEX3tB,sBACP,MAAO,MAGXC,eAAe6zB,GACX,OAAOA,EAAKgK,mBAAmBwS,GAAItwC,UAGvCC,sBAAsB4qB,EAAOxB,GACzB,IAAK,MAAMyK,KAAQjJ,EACf,GAAIxB,MAAAA,OAAyC,EAASA,EAAQmnB,IAC1D,IAAK,IAAIttC,EAAI,EAAGA,EAAI4wB,EAAKhmB,KAAKxN,OAAQ4C,IAAK,CACvC,MAAMutC,EAAM,IAAIH,GAChBG,EAAIC,aAAa5c,EAAK3J,MAAMwD,YAC5BmG,EAAK4E,YAAYx1B,EAAGutC,QAGvB,GAAyEpyC,OAApEgrB,MAAAA,OAAyC,EAASA,EAAQzc,OAAqB,CACrF,MAAM6jC,EAAM,IAAIH,GAChBG,EAAIC,aAAa5c,EAAK3J,MAAMwD,YAC5BmG,EAAK4E,YAAYrP,MAAAA,OAAyC,EAASA,EAAQzc,MAAO6jC,OAEjF,CACD,MAAMA,EAAM,IAAIH,GAChBG,EAAIC,aAAa5c,EAAK3J,MAAMwD,YAC5BmG,EAAK4E,YAAY,EAAG+X,IAKhCxwC,cAAcq8B,EAAMmC,GAChB,MAAME,EAAcF,EAAME,YAE1B,IAAKrC,GAAwB,IAAhBA,EAAKh8B,OACd,OAAO,EACX,MAAMqwC,EAAW,GACXC,EAAgB,GACtB,IAAK,IAAI1tC,EAAI,EAAGA,EAAIo5B,EAAKh8B,SAAU4C,EAAG,CAClC,MAAMutC,EAAMnU,EAAKp5B,GACX4wB,EAAO2c,EAAI5c,UACjB,IAAIwT,EACA7mC,EACJ,GAAIslC,EAAYhS,GAAO,CACnB,MAAMlnB,EAAQ6jC,EAAIvc,aAClBmT,EAAQvT,EAAKyL,cAAc3yB,GAGvBpM,EADgB,IAAhBm+B,EACQ7K,EAAKoJ,0BAELyB,MAEX,IAA2B,YAAvB7K,EAAKnlB,cAMV,MAAM,IAAIhR,EAAa,WAAY,wBALnC0pC,EAAQ,CAAE5oC,KAAM,IAChB+B,EAAQm+B,EAMZ,MAAMkS,EAAU/c,EAAKzmB,aAAa,MAClCsjC,EAAS5lB,KAAK,CAAEtsB,KAAM4oC,EAAM5oC,KAAMq1B,KAAAA,EAAM+c,QAAAA,EAASJ,IAAAA,IACjDG,EAAcC,GAAWnxC,KAAK6E,IAAIqsC,EAAcC,IAAYrwC,EAAOA,GAGvEmwC,EAAS/G,MAAK,CAAC1qC,EAAGC,IAAMA,EAAEV,KAAOS,EAAET,OACnC,IAAIqyC,EAAYnS,EACZoS,EAAU,EACVC,EAAY,KACZC,EAAY,KACZC,EAAoB,KACpBC,EAAc,EAClB,IAAK,IAAIjuC,EAAI,EAAGA,EAAIytC,EAASrwC,SAAU4C,EAAG,CACtC,MAAM,IAAEutC,EAAG,KAAE3c,EAAI,QAAE+c,EAAO,KAAEpyC,GAASkyC,EAASztC,GAE1CzE,IAASuyC,GAAald,IAASmd,IAC/BH,EAAYF,EAAcC,IAEzB/c,EAAK+I,UAAYp+B,IAASuyC,IACA,KAAvBtxC,KAAK8C,IAAI/D,EAAO,GAEhB0yC,EAAc,GAIdA,EAAc,GACG,MAAbF,GAAsBA,EAAUpU,UAAyB,MAAbmU,GAAqBA,EAAYvyC,GAAS,GAIjFA,EAAO0yC,IAAgBD,IAE5BC,GAAe,IAJfA,GAAe,KASvBrd,EAAK+I,SACL4T,EAAI9iB,aAAewjB,EAGnBV,EAAI9iB,YAAcwjB,EAEtBD,EAAoBzyC,EAAO0yC,EAC3BV,EAAIhf,UAAUqf,GACdA,GAAaL,EAAIhmB,WAxED,EAyEhBsmB,EAAUD,EAAYC,EAAUD,EAAYC,EAC5CC,EAAYvyC,EACZwyC,EAAYnd,EAIhB,OADA2K,EAAME,aAAeoS,GACd,EAEX/c,QAAQF,GAMJ,OALAp3B,KAAKo3B,KAAOA,EACRwa,EAAYxa,KACZp3B,KAAK6zC,QAAU,GACf7zC,KAAKk3B,SAAS,IAEXl3B,KAEXg0C,aAAartC,GAET,OADA3G,KAAKixB,WAAatqB,EACX3G,KAEXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cACL,MACM4gC,EADQtd,EAAKzB,aACKkR,yBAClB+F,EAAQxV,EAAK0K,mBAAmB9hC,KAAKoxB,SAAUpxB,KAAKkQ,MAAO,CAAE49B,gBAAgB,IAExD,YAAvB1W,EAAKnlB,gBACL26B,EAAMjmC,EAAIywB,EAAKmL,iBAAiB0C,OAEpC,MAAMvjC,EAAIkrC,EAAMlrC,EAAI1B,KAAKmyB,QAAUnyB,KAAKuI,MAAQvI,KAAK6zC,OAC/CltC,EAAIimC,EAAMjmC,EAAI3G,KAAKoyB,QAAUpyB,KAAKixB,WAAayjB,EACrDhhB,EAAIQ,YACJR,EAAI4L,IAAI59B,EAAGiF,EAAG3G,KAAK6zC,OAAQ,EAAa,EAAV7wC,KAAKC,IAAQ,GAC3CywB,EAAIa,QC7IL,MAAMogB,GAAa/zC,GAAQk8B,EAAWl8B,EAAKg0C,IAiF3C,MAAMA,WAAgBpN,EAGzBrmC,YAAYm8B,EAAYuX,GAAY,GAChCvzC,MAAMg8B,GACNt9B,KAAKiP,OAAS,GAEdjP,KAAK80C,eAAiB,IACX90C,KAAK+0C,UAAU1jC,KAAK3P,GAAMA,EAAE6E,MAAKyuC,QAAO,CAACxyC,EAAGC,IAAOD,EAAIC,EAAID,EAAIC,IAG1EzC,KAAKi1C,YAAc,IACRj1C,KAAK+0C,UAAU1jC,KAAK3P,GAAMA,EAAE6E,MAAKyuC,QAAO,CAACxyC,EAAGC,IAAOD,EAAIC,EAAID,EAAIC,IAE1EzC,KAAKk1C,OAAQ,EAGbl1C,KAAK+0C,UAAYzX,EAAWyX,WAAa,GAEzC/0C,KAAKq+B,eAAiBh+B,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAKq+B,gBAAiB,CAExEE,iBAAkBjS,EAAOuB,qBAEzBgnB,UAAAA,EAEAM,UAAWN,EAEXO,yBAAyB,EAEzBhjB,QAAS,EAET5E,MAAO,EAEP1gB,KAAM,GAAGtB,EAAKI,UAAUJ,EAAKiB,eACjCzM,KAAKytB,MAAQnB,EAAOyR,cAAc/9B,KAAKsuB,SAAUtuB,KAAK49B,UACtDn8B,EAAQzB,KAAKytB,MAAO,eAAgB,gCAAgCztB,KAAKsuB,uBAAuBtuB,KAAK49B,aACrG59B,KAAK4nC,YACDtK,EAAWkG,eACXxjC,KAAKqoC,iBAAiB/K,EAAWkG,gBAGjCxjC,KAAKqoC,iBAAiBvF,EAAKe,IAG/B7jC,KAAKk1C,OAAQ,EACbl1C,KAAKq1C,cAEE/xC,sBACP,MAAO,UAEX8vB,QAII,OAHA9xB,MAAM8xB,QACFpzB,KAAK80B,OACL90B,KAAK60B,SAAS70B,KAAK80B,OAChB90B,KAIXs1C,SAASJ,GAGL,OAFAl1C,KAAKk1C,MAAQA,EACbl1C,KAAKq1C,cACEr1C,KAGXqhC,UACI,QAAIrhC,KAAKq+B,eAAewW,UAK5B3M,mBACI,OAAoC,MAAhCloC,KAAK6oC,wBACE7oC,KAAK6oC,wBAEZ7oC,KAAKgxB,KAC8B,IAA5BhxB,KAAKsiC,oBAA4BtiC,KAAKgxB,KAAKiE,eAAe7C,QAAUpyB,KAAKgxB,KAAKiE,eAAe7C,QAEjG,EAGXijB,cACIr1C,KAAKiP,OAAS,GACdjP,KAAKuI,MAAQ,EACb,IAAK,IAAI/B,EAAI,EAAGA,EAAIxG,KAAK+0C,UAAUnxC,SAAU4C,EAAG,CAC5C,IAAI+mB,EAAOvtB,KAAK+0C,UAAUvuC,GAAG+mB,KACzBvtB,KAAKk1C,QACL3nB,EAAO,IAAMA,EAAO,KACxB,MAAME,EAAQnB,EAAOipB,WAAWhoB,EAAKxnB,WAAY/F,KAAKq+B,eAAe7Q,OACrExtB,KAAKiP,OAAOof,KAAKZ,GACjBztB,KAAKuI,MAAQvF,KAAK6E,IAAI4lB,EAAMM,WAAY/tB,KAAKuI,OAOjDvI,KAAKytB,MAAMM,SAAW,IAAM/tB,KAAKuI,MAGrCssB,SAASC,GACLxzB,MAAMuzB,SAASC,GACf,MAAMpB,EAAMoB,EAAM5gB,aAGlB,GAFAlU,KAAKmU,WAAWuf,GAEZA,EAAK,CACL1zB,KAAKuI,MAAQ,EACb,IAAK,IAAI/B,EAAI,EAAGA,EAAIxG,KAAKiP,OAAOrL,SAAU4C,EAAG,CACzC,MAAMinB,EAAQztB,KAAKiP,OAAOzI,GACpB1D,EAAO,GAAK2qB,EAAM3qB,KACG,MAAvBA,EAAKgqB,gBACL4G,EAAIhhB,OACJghB,EAAItf,QAAQpU,KAAKq+B,eAAevxB,MAChC2gB,EAAMllB,MAAQmrB,EAAI8hB,YAAY1yC,GAAMyF,MACpCmrB,EAAIpgB,UACJma,EAAMM,SAAW,IAAMN,EAAMllB,OAEjCvI,KAAKuI,MAAQvF,KAAK6E,IAAI4lB,EAAMM,WAAY/tB,KAAKuI,OAEjDvI,KAAKytB,MAAMM,SAAW,IAAM/tB,KAAKuI,MAIrC,MAAM61B,EAAKp+B,KAAK+0C,UAAU1jC,KAAI,EAAG9K,IAAKxE,KAAW+yB,EAAMwL,YAAY98B,OAAOzB,GAAQ,KAKlF,OAJA/B,KAAKqgC,MAAMjC,GACPp+B,KAAK8wB,MACL9wB,KAAK8wB,KAAKyT,WAAWvkC,KAAKy1C,WAAYz1C,KAAKy1C,YAExCz1C,KAGX01C,eACI,OAAO11C,KAAK+0C,UAIhBjT,mBAAmB1Q,EAAUlhB,GACzB,IAAKlQ,KAAKs8B,aACN,MAAM,IAAIr7B,EAAa,kBAAmB,wDAE9C,GAAuB,IAAnBjB,KAAKo+B,GAAGx6B,OACR,MAAM,IAAI3C,EAAa,YAAa,yCAExC,IAAIS,EAAI,EACR,GAAI0vB,IAAa+E,EAASE,SAASC,KAC/B50B,GAAI,OAEH,GAAI0vB,IAAa+E,EAASE,SAASY,MACpCv1B,EAAI1B,KAAKuI,MAAQ,OAEhB,GAAI6oB,IAAa+E,EAASE,SAASS,OAAS1F,IAAa+E,EAASE,SAASO,MAAO,CAEnFl1B,EADyB1B,KAAKytB,MAAMM,WACb,EAE3B,MAAO,CACHrsB,EAAG1B,KAAK68B,eAAiBn7B,EACzBiF,EAAG3G,KAAKo+B,GAAGluB,IAInB2wB,iBACI,OAAOr9B,OAAOxD,KAAK+0C,UAAU,GAAGxuC,KAGpC81B,YACQr8B,KAAKs8B,eAELt8B,KAAK23B,iBACL33B,KAAK23B,gBAAgB0E,YAEzBr8B,KAAKs8B,cAAe,GAGxBqM,WACI,OAAO3oC,KAAK4oC,kBAGhB6M,WACI,MAIME,EAJY31C,KAAK21B,aAAauZ,cAIH,GAC3B0G,EAAgB9S,EAAKe,KAAO7jC,KAAKwjC,gBAFnB,GAEiDmS,EACrE,OAAO31C,KAAK21B,aAAa2K,YAAYsV,GAGzCrT,iBACI,OAAOviC,KAAK0nC,YAAYhD,aAG5BoM,WACI,MAAM,KAAEtP,EAAI,MAAE/T,EAAK,eAAE+V,EAAgBnF,gBAAgB,UAAEwW,EAAS,iBAAEtW,IAAwBv+B,KACpFyS,EAAUzS,KAAKwT,eACfi7B,EAAyB9sC,MAAR6/B,GAAqBqT,EAE5C,GAAIpnB,EAAMuD,MAAQyd,EAAgB,CAC9B,MAAMoH,EAAS71C,KAAK2oC,WAAa,EAC3BmN,EAAS91C,KAAKy1C,WAAaz1C,KAAK0nC,YAAYlD,YAC5CuR,EAAYvS,IAAmBV,EAAKgB,KACpCrW,EAAM+D,mBACN/D,EAAM8D,iBAEZ3D,EAAM2Z,YAAY90B,EAASojC,EAAQC,EAAQvX,EAAkBwX,EAAW,CAAElkB,SAAU,kBAI5F4e,gBACIzwC,KAAKu5B,UAAUX,SAASgJ,IDxSF9E,EC0SR8E,ED1SwBgS,MC0SV5zC,KAAKq+B,eAAe8W,YAG5CvT,EAASztB,WAAWnU,KAAKkU,cACzB0tB,EAASruB,oBAIjByiC,kBACI,MAAMrE,EAAQ3xC,KAAK2oC,WACb+K,EAAQ1zC,KAAKy1C,WACb/hB,EAAM1zB,KAAKwT,eACX01B,EAAWlpC,KAAKq+B,eAAewW,UAC/BoB,EAAcj2C,KAAKq+B,eAAe+W,wBACxC,GAAIlM,GAAY+M,EAAa,CACzB,MAGMC,EArRlB,SAA6B1Q,EAAQ2Q,EAAgBrhB,EAAO0O,GACxD,MAAM4S,EAA6B,IAAnB5S,EACV6S,GAAgC,IAApB7S,EACZ8S,EAAexhB,EAAM+R,yBACrB0P,EAAczhB,EAAMoa,cACpBsH,EAAa,GA2CnB,OA1CAL,EAAevd,SAAS6d,IACpB,MAAMC,EAAqBD,EAAQnb,QAAQib,IAAgB,EACrDI,EAAsBF,EAAQnb,QAAQ,IAAM,EAClD,GAAK8a,GAAWO,GAAyBN,GAAaK,EAClD,OAKmB,IAAnBD,EAAQ7yC,QACR6yC,EAAQpoB,KAAKooB,EAAQ,IAEzB,MAAMG,EAAU,GAEhBH,EAAQ7d,SAAQ,CAACie,EAAQ3mC,EAAOumC,KAC5B,MAAMK,EAAwB,IAAXD,EACbE,EAAgBF,IAAWN,EAGjC,IAAI5vC,EAAImuB,EAAMwL,YAAYuW,EAAS,GAGrB,IAAV3mC,GAAgB4mC,EAGX5mC,IAAUumC,EAAQ7yC,OAAS,GAAMmzC,IACtCpwC,GAAK2vC,EAAe,EAAI,GAHxB3vC,GAAK2vC,EAAe,EAAI,EAM5BM,EAAQvoB,KAAK1nB,GAGU,IAAnB68B,GAAwBsT,EACxBF,EAAQvoB,KAAKmX,EAAS,IAEG,IAApBhC,GAAyBuT,GAC9BH,EAAQvoB,KAAKmX,EAAS,MAI9BgR,EAAWnoB,KAAKuoB,EAAQ1J,MAAK,CAAC1qC,EAAGC,IAAMD,EAAIC,QAExC+zC,EAqOmBQ,CAAoBtD,EA9SlD,SAA+BuD,EAAWC,GACtC,MAAMC,EAAe,GACrB,IAAIC,EAAQ,GACZ,IAAK,IAAIP,EAAS,EAAGA,GAAUI,EAAWJ,IACtBK,EAAa5b,QAAQub,IAAW,GAK5CM,EAAa9oB,KAAK+oB,GAClBA,EAAQ,IAJRA,EAAM/oB,KAAKwoB,GASnB,OAFIO,EAAMxzC,OAAS,GACfuzC,EAAa9oB,KAAK+oB,GACfD,EA8RuBE,CAFLr3C,KAAK21B,aAAauZ,cACflvC,KAAK+0C,UAAU1jC,KAAK+f,GAAa5tB,OAAO4tB,EAAS7qB,QAETvG,KAAK21B,aAAc31B,KAAKsiC,oBACpF5O,EAAIhhB,OACJghB,EAAItgB,aAAa0vB,EAAKiB,OACtBmS,EAAUtd,SAAS0e,IACO,IAAlBA,EAAO1zC,SAEX8vB,EAAIQ,YACJR,EAAIS,OAAOwd,EAAO2F,EAAO,IACzB5jB,EAAIU,OAAOud,EAAO2F,EAAOA,EAAO1zC,OAAS,IACzC8vB,EAAI1G,SACJ0G,EAAI6L,gBAER7L,EAAIpgB,WAIZikC,gBACI,MAAM7jB,EAAM1zB,KAAKwT,eACX9R,EAAI1B,KAAK68B,eACTuB,EAAKp+B,KAAKo+B,GAChB,IAAK,IAAI53B,EAAI,EAAGA,EAAIxG,KAAK+0C,UAAUnxC,SAAU4C,EAAG,CAC5C,MAAMG,EAAIy3B,EAAG53B,GAAKxG,KAAKq+B,eAAejM,QAChC3E,EAAQztB,KAAKiP,OAAOzI,GAGpBgxC,EAAQ91C,EADW1B,KAAKytB,MAAMM,WACC,EAAIN,EAAMM,WAAa,EAG5D,GADA2F,EAAI+jB,UAAUD,EAAQ,EAAG7wC,EAAI,EAAG8mB,EAAMM,WAAa,EAAG,GAClDN,EAAMrsB,KACNwsB,EAAM2Z,YAAY7T,EAAK8jB,EAAO7wC,EAAG3G,KAAKq+B,eAAeE,iBAAmBv+B,KAAKq+B,eAAe7Q,MAAOC,EAAMrsB,UAExG,CACDsyB,EAAIhhB,OACJghB,EAAItf,QAAQpU,KAAKq+B,eAAevxB,MAChC,MAAMhK,EAAO2qB,EAAM3qB,KAAKiD,WACxB2tB,EAAIwL,SAASp8B,EAAM00C,EAAO7wC,EAAI,EAAI3G,KAAKq+B,eAAe7Q,OACtDkG,EAAIpgB,YAKhBG,OACI,MAAMigB,EAAM1zB,KAAKwT,eACjB,GAAuB,IAAnBxT,KAAKo+B,GAAGx6B,OACR,MAAM,IAAI3C,EAAa,YAAa,qCAExCjB,KAAK8T,cACL,MAAM4jC,EAA2B/1C,MAAb3B,KAAKwhC,MAAqBxhC,KAAKq+B,eAAewW,UAIlE,GAHAnhB,EAAIgd,UAAU,eAAW/uC,EAAW,CAAEwvC,aAAa,IACnDnxC,KAAKu3C,gBACLv3C,KAAKg2C,kBACDh2C,KAAK8wB,MAAQ4mB,EAAa,CAC1B,MAAMnS,EAASvlC,KAAK2oC,WACpB3oC,KAAK8wB,KAAKmT,mBAAmBsB,EAAQA,GACrC7R,EAAIgd,UAAU,YAAQ/uC,EAAW,CAAEwvC,aAAa,IAChDnxC,KAAK8wB,KAAK3c,WAAWuf,GAAKjgB,OAC1BigB,EAAIkd,aAER5wC,KAAK8wC,WACL9wC,KAAKywC,gBACL/c,EAAIkd,cC5XZ,SAAS,MAAK9uC,GACN61C,GAAcjS,OACd9jC,EAAI,yBAA0BE,GAatC,MAAM81C,GAAiB,GAKjBxnC,GAAW,GACV,MAAMunC,GAKTx2C,YAAY02C,GAER73C,KAAKwM,OAAS,GAEdxM,KAAKoM,KAAO,GAEZpM,KAAK+O,WAAa,IAgBlB/O,KAAKiP,OAAS,GACdjP,KAAK83C,QAAS,EACd93C,KAAK+3C,YAAa,EAClB/3C,KAAKg4C,QAAS,EACdh4C,KAAKi4C,MAAO,EACZj4C,KAAKk4C,kBAAoB,EACzBl4C,KAAKm4C,gBAAkB,EACvBn4C,KAAKo4C,aAAe,IAEpBp4C,KAAKq4C,SAAW,GAChBr4C,KAAKs4C,aAAaT,GAKtBt0C,yBACI,MAAMg1C,EAAkB,GACxB,IAAK,MAAMxrC,KAAcqD,GAAU,CAC/B,MAAMynC,EAAgBznC,GAASrD,GAC/BwrC,EAAgBlqB,KAAKhuB,OAAOwU,OAAO,GAAIgjC,IAE3C,OAAOU,EASXh1C,cAAci1C,EAAgB,IAC1B,GAAE,WAAYA,GACTA,EAAchsC,SACfgsC,EAAchsC,OAAShB,EAAKiB,YAKhC,MAAMgsC,EAAa,GAGbC,EAAoBF,EAAchsC,OAAO/F,MAAM,WACrD,IAAK,MAAMkyC,KAAmBD,EAAmB,CAC7C,IAAK,MAAM3rC,KAAcqD,GAGjBrD,EAAW6rC,WAAWD,IACtBF,EAAWpqB,KAAKje,GAASrD,IAGjC,GAAI0rC,EAAW70C,OAAS,EACpB,MAGR,IAAIi1C,EACJ,GAA0B,IAAtBJ,EAAW70C,OAEXi1C,EAAY,IAAIlB,GAAct3C,OAAOy4C,OAAO1oC,IAAU,SAErD,GAA0B,IAAtBqoC,EAAW70C,OAChBi1C,EAAY,IAAIlB,GAAcc,EAAW,QAExC,CACD,MAAMR,EAAOzsC,EAAKutC,OAAOP,EAAcnsC,QACjC2rC,EAASxsC,EAAKwtC,SAASR,EAAclsC,OACrC2sC,EAAeR,EAAWS,MAAM7yC,GAAMA,EAAE4xC,OAASA,GAAQ5xC,EAAE2xC,SAAWA,IAC5E,GAAIiB,EACAJ,EAAY,IAAIlB,GAAcsB,OAE7B,CACD,MAAME,EAAeV,EAAWS,MAAM7yC,GAAMA,EAAE2xC,SAAWA,GAAU3xC,EAAE4xC,OAASA,IAE1EY,EAAY,IAAIlB,GADhBwB,GAI8BV,EAAW,KAIrD,MAAM9sC,EAAW6sC,EAAcpsC,KAC/B,QAAwB,IAAbT,EAA0B,CACjC,MAAMytC,EAAe5tC,EAAK4J,wBAAwBzJ,GAClDktC,EAAU5jC,YAAYmkC,GAE1B,OAAOP,EAMXt1C,eAAewJ,GACX,OAAOqD,GAASrD,GAUpBxJ,oBAAoBoO,EAAM0nC,GAAY,GAClC,GAAE,iBAAkB1nC,EAAM0nC,GAC1B,MAAMtsC,EAAa4E,EAAKnF,aAEH7K,IADAyO,GAASrD,IACIssC,KAC9BjpC,GAASrD,GAAc4E,GAG/B2mC,aAAa5rB,GACLA,EAAOlgB,SACPxM,KAAKwM,OAASkgB,EAAOlgB,QACrBkgB,EAAO3d,aACP/O,KAAK+O,WAAa2d,EAAO3d,YACzB2d,EAAOzd,SACPjP,KAAKiP,OAASyd,EAAOzd,QACrByd,EAAOorB,SACP93C,KAAK83C,OAASprB,EAAOorB,QACrBprB,EAAOqrB,aACP/3C,KAAK+3C,WAAarrB,EAAOqrB,YACzBrrB,EAAOsrB,SACPh4C,KAAKg4C,OAAStrB,EAAOsrB,QACrBtrB,EAAOurB,OACPj4C,KAAKi4C,KAAOvrB,EAAOurB,MACnBvrB,EAAO0rB,eACPp4C,KAAKo4C,aAAe1rB,EAAO0rB,cAC3B1rB,EAAOwrB,oBACPl4C,KAAKk4C,kBAAoBxrB,EAAOwrB,mBAChCxrB,EAAOyrB,kBACPn4C,KAAKm4C,gBAAkBzrB,EAAOyrB,iBAClCn4C,KAAKs5C,iBAGTA,iBACI,MAAM9sC,EAASxM,KAAKwM,OAAON,QAAQ,OAAQ,KACrCE,EAAOpM,KAAKoM,KACZC,EAASrM,KAAKi4C,KAAO7tC,EAAWmvC,KAAOnvC,EAAWsC,OAClDJ,EAAQtM,KAAKg4C,OAAS3tC,EAAUoD,OAASpD,EAAUqC,OAEzD1M,KAAKq4C,SAAW,GAAG7rC,KAAUJ,KAAQC,KAAUC,IAMnDktC,gBAAgBC,GACZ,OAAIz5C,KAAKiP,OAAOwqC,GACLz5C,KAAKiP,OAAOwqC,GAGZz5C,KAAKiP,OAAOjP,KAAKo4C,cAG5BsB,gBAEA,OADgB15C,KAAKw5C,gBAAgBx5C,KAAKo4C,cAC1B5kB,GAAKxzB,KAAK+O,WAAc/O,KAAKqV,iBAQjDskC,yBAAyB5vC,GACrB,IAAI8B,EACJ,MAAM0C,EAAUvO,KAAKw5C,gBAAgBzvC,GACrC,GAAKwE,EAIA,CAED,OADqD,QAA/B1C,EAAK0C,EAAQqrC,oBAAiC,IAAP/tC,EAAgBA,EAAK,GAC5D7L,KAAK+O,WAJ3B,MAAO,IAUf8qC,oBAAoB/2C,GAChB,MAAM3C,EAAMH,KAAKq4C,SAGjB,IAAIyB,EAAelC,GAAez3C,QACbwB,IAAjBm4C,IACAA,EAAe,GACflC,GAAez3C,GAAO25C,GAE1B,IAAIvxC,EAAQuxC,EAAah3C,GACzB,QAAcnB,IAAV4G,EAAqB,CACrBA,EAAQ,EACR,IAAK,IAAI/B,EAAI,EAAGA,EAAI1D,EAAKc,SAAU4C,EAC/B+B,GAASvI,KAAK25C,yBAAyB72C,EAAK0D,IAEhDszC,EAAah3C,GAAQyF,EAEzB,OAAOA,EAGXwxC,oBAAoBj3C,GAChB,OAAO9C,KAAK65C,oBAAoB/2C,GAAQ9C,KAAKqV,iBAKjDJ,YAAY7I,GAIR,OAHApM,KAAKoM,KAAOA,EAEZpM,KAAKs5C,iBACEt5C,KAGPqV,uBACA,OAAOrV,KAAKoM,KAAOZ,EAAKM,cAAcC,GAE1C+C,gBACI,OAAO9O,KAAK+O,YC7Pb,IAAIirC,GAOAC,GD0PXtC,GAAcjS,OAAQ,EChQtB,SAAWsU,GACPA,EAA4BA,EAAkC,KAAI,GAAK,OACvEA,EAA4BA,EAAoC,OAAI,GAAK,SACzEA,EAA4BA,EAAmC,MAAI,GAAK,QACxEA,EAA4BA,EAAyC,YAAI,GAAK,cAJlF,CAKGA,KAAgCA,GAA8B,KAEjE,SAAWC,GACPA,EAA0BA,EAA+B,IAAI,GAAK,MAClEA,EAA0BA,EAAkC,OAAI,GAAK,SACrEA,EAA0BA,EAAkC,OAAI,GAAK,SACrEA,EAA0BA,EAAuC,YAAI,GAAK,cAJ9E,CAKGA,KAA8BA,GAA4B,KAOtD,MAAMC,WAAmB/jB,EAM5Bh1B,YAAY2B,GACRxB,QACAtB,KAAK8C,KAAOA,EACZ9C,KAAKm6C,wBAA0BH,GAA4BtjB,OAG3D12B,KAAKo6C,sBAAwBH,GAA0BI,IACvDr6C,KAAKgV,YAELhV,KAAKk3B,SAAS5K,EAAOwB,UAAUhrB,IAGxBQ,sBACP,MAAO,aAGXC,cAAc+2C,EAAavY,GACvB,IAAKuY,GAAsC,IAAvBA,EAAY12C,OAC5B,OAAO,EACX,IAAI2E,EAAQ,EACZ,IAAK,IAAI/B,EAAI,EAAGA,EAAI8zC,EAAY12C,SAAU4C,EAAG,CACzC,MAAM+zC,EAAaD,EAAY9zC,GACzBg0C,EAAgB7C,GAAc8C,OAAOF,EAAWjmC,UAGtD,IAAIomC,GADe,EAAIF,EAAcd,WAAaptB,EAAO+C,oBAEzD,MAAM+H,EAAOmjB,EAAWljB,oBAClBvC,EAAQsC,EAAKoB,WACbqS,EAAgBzT,EAAKiK,UAAYjK,EAAKkL,mBAAqBQ,EAAKe,GACtE,IAAIe,EAAa,EACb+V,EAAQ,EACZ,GAAIvjB,aAAgBwd,GAChB,GAAIxd,EAAKiH,eAAewW,UAAW,CAC/B,MAAM/jB,EAAOsG,EAAKqQ,UACd3W,IACA8T,EAAa5hC,KAAK8C,IAAIgrB,EAAK0T,aAAelY,EAAO+C,0BAIrDuV,EAAa,OAGhB,GAAIxN,aAAgBoQ,EAAe,CACpC,MAAM1W,EAAOsG,EAAKqQ,UACd3W,GAA+B,MAAvBsG,EAAKkK,gBACbsD,EAAa5hC,KAAK8C,IAAIgrB,EAAK0T,aAAelY,EAAO+C,qBAGrDyF,IACA6lB,EAAQ7lB,EAAMoa,eAGlB,MAAMphB,EAAY0sB,EAAcT,oBAAoBQ,EAAWz3C,MAE/D,GADAyF,EAAQvF,KAAK6E,IAAIU,EAAOulB,GACpBysB,EAAWH,wBAA0Bp6C,KAAK46C,gBAAgBP,IAAK,CAC/D,IAAIQ,EAAWzjB,EAAKuJ,eAAc,GAC9BvJ,aAAgBwd,KAChBiG,EAAWF,GAASvjB,EAAK6d,cAAgB,KAEzCpK,IAAkB/H,EAAKe,KACvBgX,GAAYjW,GAEDiW,EAAW9Y,EAAM+Y,cAAgB,GACnCH,GACTJ,EAAWviB,YAAY2iB,EAAQE,GAC/BH,GAAuBC,EAAQE,EAC/B9Y,EAAM+Y,cAAgBJ,IAGtBH,EAAWviB,YAAY+J,EAAM+Y,eAC7B/Y,EAAM+Y,eAAiBJ,QAG1B,GAAIH,EAAWH,wBAA0Bp6C,KAAK46C,gBAAgBG,OAAQ,CACvE,IAAIF,EAAWF,EAAQvjB,EAAKuJ,gBACxBvJ,aAAgBwd,KAChBiG,EAAWzjB,EAAK0d,iBAAmB,GAEnCjK,IAAkB/H,EAAKgB,OACvB+W,GAAYjW,GAEhB,MAAMoW,EAAYH,EAAW9Y,EAAM3L,UAAY,EAC3C4kB,EAAYL,GACZJ,EAAWviB,YAAY2iB,EAAQK,GAC/BN,GAAuBC,EAAQK,EAC/BjZ,EAAM3L,UAAYskB,IAGlBH,EAAWviB,YAAY+J,EAAM3L,WAC7B2L,EAAM3L,WAAaskB,QAIvBH,EAAWviB,YAAY+J,EAAM3L,WAKrC,OAFA2L,EAAMC,YAAcz5B,EAAQ,EAC5Bw5B,EAAME,aAAe15B,EAAQ,GACtB,EAMX0yC,yBAAyBC,GAErB,OADAl7C,KAAKo6C,sBAAwC,iBAATc,EAAoBhB,GAAWiB,sBAAsBD,GAAQA,EAC1Fl7C,KAKXo7C,mBACI,OAAOp7C,KAAKm6C,wBAMhBkB,iBAAiBH,GAEb,OADAl7C,KAAKm6C,wBAA0C,iBAATe,EAAoBhB,GAAWoB,wBAAwBJ,GAAQA,EAC9Fl7C,KAGXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBACZwT,EAAgBzT,EAAKiK,UAAYjK,EAAKkL,mBAAqBQ,EAAKe,GAChE2W,EAAgB7C,GAAc8C,OAAOz6C,KAAKsU,UAC1Cs4B,EAAQxV,EAAK0K,mBAAmBpQ,EAAiBkF,MAAO52B,KAAKkQ,OACnElQ,KAAK8T,cAEL4f,EAAIhhB,OACJ,MAAM6oC,EAAcl7C,OAAO+Q,KAAKpR,KAAK2Q,aAAa,YAAYzO,KAAK,KACnEwxB,EAAIgd,UAAU6K,EAAav7C,KAAK2Q,aAAa,OAC7C+iB,EAAItf,QAAQpU,KAAKsU,UACjB,MAAMknC,EAAa9nB,EAAI8hB,YAAYx1C,KAAK8C,MAAMyF,MACxCkzC,EAAcjB,EAAcd,UAAY,EAC9C,IAAIh4C,EACAiF,EAEAjF,EADA1B,KAAKm6C,0BAA4BH,GAA4B1jB,KACzDsW,EAAMlrC,EAEL1B,KAAKm6C,0BAA4BH,GAA4B/iB,MAC9D2V,EAAMlrC,EAAI85C,EAETx7C,KAAKm6C,0BAA4BH,GAA4BtjB,OAC9DkW,EAAMlrC,EAAI85C,EAAa,EAGvBpkB,EAAKuR,WAAa6S,EAAa,EAEvC,IAAIE,EAAW,GACX9U,EAAU,EACd,MAAM+U,EAAWvkB,EAAKiK,UAChBvM,EAAQsC,EAAKzB,aAOnB,GAJIgmB,IACAD,EAAWtkB,EAAKsQ,YAAYhD,aAC5BkC,EAAU9R,EAAM+R,0BAEhB7mC,KAAKo6C,wBAA0BH,GAA0Bc,OAAQ,CAGjEp0C,EADWywB,EAAK4J,QACTgU,QAAO,CAACxyC,EAAGC,IAAOD,EAAIC,EAAID,EAAIC,IACrCkE,IAAM3G,KAAKo2B,UAAY,GAAK9J,EAAO+C,oBAAsBosB,EACrDE,GAAY9Q,IAAkB/H,EAAKgB,OACnCn9B,EAAI3D,KAAK6E,IAAIlB,EAAG+0C,EAAS1W,KAAOyW,EAAc7U,EAAU5mC,KAAKo2B,iBAGhE,GAAIp2B,KAAKo6C,wBAA0BH,GAA0BvjB,OAAQ,CACtE,MAAMklB,EAAKxkB,EAAK6J,eAAejhC,KAAKo2B,WAAa,EAEjDzvB,EAAIi1C,GADO9mB,EAAMmU,kBAAkBjpC,KAAKo2B,WACzBwlB,GAAM,EAAIH,EAAc,OAEtC,GAAIz7C,KAAKo6C,wBAA0BH,GAA0BI,IAC9D1zC,EAAIywB,EAAK4J,QAAQ,IAAMhhC,KAAKo2B,UAAY,GAAK9J,EAAO+C,oBAChDssB,GAAY9Q,IAAkB/H,EAAKe,KAGnC+C,EAAU8U,EAAS1W,KAAOlQ,EAAM+mB,iBAAmBvvB,EAAO+C,oBAAsBuX,EAChFjgC,EAAI3D,KAAK8hC,IAAIn+B,EAAG+0C,EAAS1W,KAAO4B,GAAW5mC,KAAKo2B,UAAY,SAG/D,CACD,MAAM4S,EAAU5R,EAAKmL,iBACrB57B,EAAIqiC,EAAQhE,MAAQgE,EAAQ/D,MAAQ+D,EAAQhE,MAAQ,EAAIyW,EAAc,GAxNlF,YAAc35C,GACNo4C,GAAWxU,OACX9jC,EAAI,sBAAuBE,GAwN3B,CAAE,yBAA0B9B,KAAK8C,KAAMpB,EAAGiF,GAC1C+sB,EAAIwL,SAASl/B,KAAK8C,KAAMpB,EAAGiF,GAC3B+sB,EAAIkd,aACJld,EAAIpgB,WAIZ4mC,GAAWxU,OAAQ,EACnBwU,GAAW1lC,UAAYnU,OAAOwU,OAAO,GAAIhD,EAAQ2C,WAEjD0lC,GAAW4B,kBAAoB9B,GAC/BE,GAAWoB,wBAA0B,CACjCvkB,KAAMijB,GAA4B1jB,KAClCU,MAAOgjB,GAA4B/iB,MACnCR,OAAQujB,GAA4BtjB,OACpCqlB,WAAY/B,GAA4BgC,aAE5C9B,GAAWU,gBAAkBX,GAC7BC,GAAWiB,sBAAwB,CAC/BxkB,MAAOsjB,GAA0BI,IACjC4B,IAAKhC,GAA0BI,IAC/BxjB,MAAOojB,GAA0Bc,OACjCmB,OAAQjC,GAA0Bc,OAClCtkB,OAAQwjB,GAA0BvjB,OAClCqlB,WAAY9B,GAA0B+B,aC5O1C,MAAM,MAAEplB,GAAK,MAAEE,IAAUX,EAASE,SAClC,SAAS8lB,GAAmBC,EAAQp4C,GAChC,MAA6B,GAAtBo4C,EAAOp4C,EAAQ,IAG1B,SAASq4C,GAAct6C,EAAMqvB,GACzB,OAAOA,IAAawF,GAAQ70B,GAAQ,EAAIA,GAAQ,EAEpD,SAASu6C,GAAoBv6C,EAAMqvB,GAC/B,OAAIirB,GAAct6C,EAAMqvB,GAChBA,IAAawF,GACN5zB,KAAKu5C,KAGLv5C,KAAK2C,MAIT3C,KAAKm8B,MAiBpB,MAAMqd,GAAsBplB,GAASgS,EAAYhS,IAASwa,EAAYxa,GA0G/D,MAAMqlB,WAAqBtmB,EAK9Bh1B,YAAY4O,GACRzO,QACAtB,KAAK+P,KAAOA,EACZ/P,KAAKoxB,SAAW0F,GAChB92B,KAAKq+B,eAAiB,CAClBqe,WAAY,IAEhB18C,KAAKozB,QAGE9vB,sBACP,MAAO,eAoBXC,cAAc8mB,EAAe0X,GACzB,IAAK1X,GAA0C,IAAzBA,EAAczmB,OAChC,OAAO,EACX,MACM+4C,EAAe,CAACC,EAAc76C,EAAMqvB,IAAa+qB,GAAmBG,GAAoBv6C,EAAMqvB,GAAW3vB,EAAQm7C,EAAanvB,MAAM7e,aAAapG,QAAU,GADlJ,IAEf6hB,EAAcuO,SAASgkB,IACnB,MAAMxlB,EAAOwlB,EAAavlB,oBAC1B,IAAIsjB,EAAQ,EACZ,MAAM9P,EAAgBzT,EAAKiK,UAAYjK,EAAKkL,mBAAqBQ,EAAKe,GACtE,IAAIe,EAAa,EAEjB,GAAIxN,aAAgBoQ,EAAe,CAC/B,MAAM1W,EAAOsG,EAAKqQ,UACd3W,IACA8T,EAAa5hC,KAAK8C,IAAIgrB,EAAK0T,aAAelY,EAAO+C,qBAGzD,MAAMyF,EAAQsC,EAAKoB,WAInB,GAHI1D,IACA6lB,EAAQ7lB,EAAMoa,eAEd0N,EAAa9kB,gBAAkBlB,GAAO,CACtC,IAAIikB,EAAWzjB,EAAKuJ,eAAc,GAC9BkK,IAAkB/H,EAAKe,KACvBgX,GAAYjW,GAEhB,IAAIiY,EAAYF,EAAaC,EAAc7a,EAAM+Y,cAAelkB,IAChE,MAAMkmB,EAASjC,EAAW9Y,EAAM+Y,cAAgB,IAE3C8B,EAAaA,aAAatyB,eAAiBwyB,EAASnC,IACrDkC,GAAalC,EAAQmC,GAEzBF,EAAa5kB,YAAY+J,EAAM+Y,eAC/B/Y,EAAM+Y,eAAiB+B,OAEtB,GAAID,EAAa9kB,gBAAkBhB,GAAO,CAC3C,IAAI+jB,EAAW73C,KAAK6E,IAAI8yC,EAAQvjB,EAAKuJ,gBAAiB,GAClDkK,IAAkB/H,EAAKgB,OACvB+W,GAAYjW,GAEhB,IAAIiY,EAAYF,EAAaC,EAAc7a,EAAM3L,UAAWU,IAC5D,MAAMkkB,EAAYH,EAAW9Y,EAAM3L,UAAY,IAE1CwmB,EAAaA,aAAatyB,eAAiB0wB,EAAYL,IACxDkC,GAAalC,EAAQK,GAEzB4B,EAAa5kB,YAAY+J,EAAM3L,WAC/B2L,EAAM3L,WAAaymB,MAG3B,MAAMt0C,EAAQ8hB,EACThZ,KAAKurC,GAAiBA,EAAa7uB,aACnCinB,QAAO,CAAC+H,EAAUC,IAAeh6C,KAAK6E,IAAIm1C,EAAYD,KAG3D,OAFAhb,EAAMC,YAAcz5B,EAAQ,EAC5Bw5B,EAAME,aAAe15B,EAAQ,GACtB,EAEXhF,sBAAqB,cAAE8mB,GAAiB+M,EAAM6lB,GAC1C,IAAK5yB,EACD,OACJ,MAAM6yB,EAAkB,CACpBC,SAAU,KACVC,OAAQ,KACRC,OAAQ,MAEZhzB,EACK5jB,MAAM,KACN4K,KAAKisC,GAAgBA,EAAYlwC,OAAO3G,MAAM,OAC9C4K,KAAI,EAAE3F,EAAM0lB,MACb,MAAMpD,EAAQ,CAAEje,KAAMmtC,EAAgBxxC,IAGtC,OAFI0lB,IACApD,EAAMoD,SAAW+E,EAASK,eAAepF,IACtC6rB,EAAQM,aAAad,aAAazuB,MAExC3c,KAAK2c,GAAUoJ,EAAK4E,YAAY,EAAGhO,KAE5CoF,QACIpzB,KAAK48C,aAAetwB,EAAOkxB,kBAAkBx9C,KAAK+P,MAClD,MAAM6sC,EAAen7C,EAAQzB,KAAK48C,aAAc,gBAAiB,2BAA2B58C,KAAK+P,QAC3F3O,GAAQpB,KAAKoxB,WAAawF,GAAQgmB,EAAapyB,UAAYoyB,EAAanyB,YAAcmyB,EAAax7C,KACzGpB,KAAKytB,MAAQ,IAAIG,EAAMxsB,MAAAA,EAAmCA,EAAO,GAAIpB,KAAKq+B,eAAeqe,YACzF18C,KAAKk3B,SAASz1B,EAAQzB,KAAKytB,MAAM7e,aAAarG,QAGlDkL,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cACL,MAAM5D,EAAQlQ,KAAKw3B,cACb,SAAEpG,EAAQ,MAAE3D,EAAO2I,UAAW2S,GAAa/oC,KAC3Cy9C,EAAqBz9C,KAAK48C,aAAatyB,cACvCwK,EAAQsC,EAAKzB,aACb+nB,EAAa5oB,EAAM+R,yBACnB8W,EAAQhJ,GAAUvd,IAElB,EAAE11B,GAAM01B,EAAK0K,mBAAmB1Q,EAAUlhB,GAC1C0tC,GAAyBH,GAAsBE,EAC/CE,EAlKd,SAA0BzmB,EAAMhG,GAC5B,MAAM0sB,EAAe1sB,IAAawF,IAASQ,EAAKkL,qBAAuBQ,EAAKe,IACvEzS,IAAa0F,IAASM,EAAKkL,qBAAuBQ,EAAKgB,KAC5D,OAAI0Y,GAAmBplB,GACfA,EAAKiK,WAAayc,EACX,GAKA,EAIP1mB,EAAKiK,WAAayc,EACX,EAGA,EAgJWC,CAAiB3mB,EAAMhG,GACvC4sB,EAAU1xB,EAAO+V,mBAAmBnzB,aAAa,gBAAgBue,EAAMkH,oBAAqB,GAClG,IAAIhuB,EAAI,CACJ,CAACiwB,IAAQ,KACLnJ,EAAM8H,UAAU,GAAK,GACrB,MAAM5uB,EAnPtB,SAAiBywB,EAAM2R,GACnB,MAAM8B,EAAgBzT,EAAKkL,oBACnB0C,KAAMiZ,EAAUhZ,MAAOiZ,GAAc9mB,EAAKmL,iBAClD,GAAIia,GAAmBplB,GACnB,OAAIA,EAAKiK,UACDwJ,IAAkB/H,EAAKe,GAChBoa,EAGAC,EAIJl7C,KAAK8hC,OAAO1N,EAAK4J,SAG3B,GAAI2T,GAAUvd,GACf,OAAIA,EAAKiK,WACDwJ,IAAkB/H,EAAKe,GAChBoa,EAOJ7mB,EAAKzB,aAAasL,eAAe8H,GAI5C,MAAM,IAAI9nC,EAAa,kBAAmB,iEAqNxBk9C,CAAQ/mB,EAAM2R,IAAaA,EAAW8U,GAAiBH,EACjE,OAAOE,EAAwB56C,KAAK8hC,IAAIhQ,EAAMmM,eAAewb,GAAa2B,gBAAiBz3C,GAAKA,GAEpG,CAACmwB,IAAQ,KACLrJ,EAAM8H,UAAU,GAAK,GACrB,MAAM5uB,EAvNtB,SAAoBywB,EAAM2R,GACtB,MAAM8B,EAAgBzT,EAAKkL,oBACnB0C,KAAMiZ,EAAUhZ,MAAOiZ,GAAc9mB,EAAKmL,iBAClD,GAAIia,GAAmBplB,GACnB,OAAIA,EAAKiK,UACDwJ,IAAkB/H,EAAKe,GAChBqa,EAGAD,EAIJj7C,KAAK6E,OAAOuvB,EAAK4J,SAG3B,GAAI2T,GAAUvd,GACf,OAAIA,EAAKiK,UACDwJ,IAAkB/H,EAAKe,GAChBzM,EAAKzB,aAAasT,kBAAkBF,GAGpCkV,EAIJ7mB,EAAKzB,aAAasT,kBAAkBF,GAI/C,MAAM,IAAI9nC,EAAa,kBAAmB,iEAyLxBo9C,CAAWjnB,EAAM2R,IAAaA,EAAW8U,GAAiBH,EACpE,OAAOE,EAAwB56C,KAAK6E,IAAIitB,EAAMmU,kBAAkBwT,GAAa2B,gBAAiBz3C,GAAKA,IAEzGyqB,KACF,IAAKusB,EAAO,CACR,MAAMW,EAAkBltB,IAAawF,IAAS,EAAI,EAC5CikB,EAAWzjB,EAAKyL,cAAc3yB,GAAOnO,KAErCw8C,GADoBnnB,EAAK4J,QAAQ9wB,GAASvJ,GAAK+2C,EAChBl6C,OAAOq3C,GACtC2D,EAhRlB,SAAyBf,EAAoB17C,EAAMqvB,EAAUktB,GAEzD,MAAME,EAAcrC,GAAmBG,GAAoBv6C,EAAMqvB,GAAWrvB,GAG5E,GAF4B07C,GAAsBpB,GAAcmC,EAAaptB,IACzDotB,EAAc,GAAM,EAGpC,OAAOA,EADkB,IACgBF,EAGzC,OAAOE,EAsQiBC,CAAgBhB,EAAoBc,EAAWntB,EAAUktB,GACzEjC,GAAcmC,EAAaptB,IAC3B3D,EAAM8H,UAAU,GAAK,IACzB5uB,GAAK3D,KAAK8C,IAAI04C,EAAcD,GAAab,EAAaY,EAAkBN,EAAUM,GA5S9F,YAAcx8C,GACN26C,GAAa/W,OACb9jC,EAAI,wBAAyBE,GA4S7B,CAAE,iCAAiCJ,SAASiF,MAC5C8mB,EAAM+H,OAAO9B,EAAKhyB,EAAGiF,IAI7B81C,GAAa/W,OAAQ,EACrB+W,GAAa2B,gBAAkB,GCzTxB,MAAMM,WAAavoB,EAkCtBh1B,YAAY2B,EAAM67C,GAAU,EAAOC,GAC/Bt9C,QACAtB,KAAK8C,KAAOA,EACZ9C,KAAKmyB,QAAU,EACfnyB,KAAK2+C,QAAUA,EACf3+C,KAAK6+C,IAAM,GACX7+C,KAAKgV,YACLhV,KAAKq+B,eAAiB,CAClBygB,WAAY,IACZC,WAAY,UACZC,WAAY,EACZC,cAAe,GAEfL,EACA5+C,KAAK4+C,OAASA,GAId5+C,KAAK4+C,OAAS,CAAC,CAAE7uC,KAAM2uC,GAAK7a,GAAI/gC,KAAM9C,KAAK8C,OACvC9C,KAAK2+C,SACL3+C,KAAK4+C,OAAOvwB,KAAK,CAAEte,KAAM2uC,GAAK5a,KAAMhhC,KAAM,MAElD9C,KAAKq1C,cAEE/xC,sBACP,MAAO,OAEAugC,gBACP,OAAO,EAEAC,kBACP,OAAO,EAGXvgC,cAAc27C,EAAOnd,GACjB,IAAKmd,GAA0B,IAAjBA,EAAMt7C,OAChB,OAAO,EACX,IAAIu7C,EAAa,EAEjB,IAAK,IAAI34C,EAAI,EAAGA,EAAI04C,EAAMt7C,SAAU4C,EAAG,CACnC,MAAMwlB,EAAOkzB,EAAM14C,GACb4wB,EAAOpL,EAAKqL,oBAClB,GAAID,aAAgBwd,GAAS,CACzB,MAAMwK,EAAYhoB,EAAK6d,cAAgB,EACnClT,EAAM+Y,cAAgBsE,IACtBrd,EAAM+Y,cAAgBsE,GAG9BpzB,EAAK+I,UAAUoqB,GACfA,EAAanzB,EAAK+B,WAClB/B,EAAKgM,YAAY+J,EAAM+Y,eAI3B,OAFA/Y,EAAME,aAAekd,EACrBpd,EAAM+Y,eAAiB,GAChB,EAGX/lB,UAAU/wB,GAGN,OAFAhE,KAAKmyB,QAAUnuB,EACfhE,KAAKq1C,cACEr1C,KAEXq/C,OAAOr7C,GAEH,OADAhE,KAAK6+C,IAAM76C,EACJhE,KAGXs/C,UACI,OAAOt/C,KAAK8C,KAEhBy8C,gBAEI,OADsB5H,GAAc8C,OAAOz6C,KAAKsU,UAC3BolC,UAGzBrE,cACI,MAAMmF,EAAgB7C,GAAc8C,OAAOz6C,KAAKsU,UAIhD,IAAIkrC,EAAa,EACjB,IAAK,IAAIh5C,EAAI,EAAGA,EAAIxG,KAAK4+C,OAAOh7C,SAAU4C,EAAG,CACzC,MAAMwlB,EAAOhsB,KAAK4+C,OAAOp4C,GACzB,QAAmB7E,IAAfqqB,EAAKzjB,MACLi3C,GAAcxzB,EAAKzjB,UAElB,CACD,MAAMk3C,EAAmBzzB,EAAKjc,OAAS2uC,GAAK7a,GAAK7jC,KAAKq+B,eAAe2gB,WAAah/C,KAAKq+B,eAAe4gB,cACtGjzB,EAAKzjB,MAAQvF,KAAK6E,IAAI43C,GAXT38C,EAWuCkpB,EAAKlpB,KAVtD03C,EAAcT,oBAAoBj3C,KAU6B,EAClEkpB,EAAK0zB,WAAa1zB,EAAKzjB,MAAQ,EAC/Bi3C,GAAcxzB,EAAKzjB,OAbP,IAACzF,EAiBrB,OADA9C,KAAKk3B,SAASsoB,EAAax/C,KAAKmyB,SACzBnyB,KAGXyT,OACI,IAAI5H,EACJ,MAAM6nB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cACL,MAAM84B,EAAQxV,EAAK0K,mBAAmB3L,EAASE,SAASY,MAAOj3B,KAAKkQ,OACpE08B,EAAMlrC,GAAK,EACXkrC,EAAMjmC,GAAK,GACX,MAAMwrB,EAAUnyB,KAAKmyB,QAEfyU,EADQxP,EAAKzB,aACGkR,yBAChB8Y,EAAUvoB,EAAK4J,QAAQgU,QAAO,CAACxyC,EAAGC,IAAOD,EAAIC,EAAID,EAAIC,IAErDm9C,EAAchT,EAAMjmC,IAAM3G,KAAKo2B,UAAY,GAAKwQ,EAAUgG,EAAMjmC,EAAIg5C,GAAW,EAC/EE,EAAejT,EAAMjmC,IAAM3G,KAAKo2B,UAAY,GAAKwQ,EAAUgG,EAAMjmC,EAAIg5C,GAAW,EAChFG,EAAa,CAACp+C,EAAGiF,EAAG4B,EAAOC,KAC7B,MAAMu3C,EAAOr+C,EAAI6G,EACXy3C,EAAOr5C,EACb+sB,EAAIhhB,OACJghB,EAAIQ,YACJR,EAAItgB,aAAapT,KAAKq+B,eAAeygB,YACrCprB,EAAIxgB,eAAelT,KAAKq+B,eAAe0gB,YACvCrrB,EAAI1gB,aAAahT,KAAKq+B,eAAe0gB,YACrCrrB,EAAIS,OAAOzyB,EAAGiF,GACd+sB,EAAIW,iBAAiB0rB,EAAMC,EAAMt+C,EAAI6G,EAAOC,GAC5CkrB,EAAI1G,SACJ0G,EAAIpgB,WAEF2sC,EAAgB,CAACv+C,EAAGiF,EAAG4B,EAAOC,KAChCkrB,EAAIhhB,OACJghB,EAAIQ,YACJR,EAAItgB,aAAapT,KAAKq+B,eAAeygB,YACrCprB,EAAIxgB,eAAelT,KAAKq+B,eAAe0gB,YACvCrrB,EAAI1gB,aAAahT,KAAKq+B,eAAe0gB,YACrCrrB,EAAIS,OAAOzyB,EAAG8G,GACdkrB,EAAIW,iBAAiB3yB,EAAI6G,EAAOC,EAAQ9G,EAAI6G,EAAO5B,GACnD+sB,EAAI1G,SACJ0G,EAAIpgB,WAEF4sC,EAAkB,CAACx+C,EAAGiF,EAAGw9B,KAC3B,MACMgc,EAAQx5C,EADA,EACYw9B,EAC1BzQ,EAAIQ,YACJR,EAAIS,OAAOzyB,EAAGiF,GACd+sB,EAAIU,OAAO1yB,EAJG,EAIQy+C,GACtBzsB,EAAIU,OAAO1yB,EALG,EAKQy+C,GACtBzsB,EAAI6L,YACJ7L,EAAIa,QAEF6rB,EAAa,CAAC1+C,EAAGoB,KACnB4wB,EAAIhhB,OACJghB,EAAItf,QAAQpU,KAAKsU,UACjB,MAAM+rC,EAAW3+C,EAAIgyB,EAAI8hB,YAAY1yC,GAAMyF,MAAQ,EACnDmrB,EAAIwL,SAASp8B,EAAMu9C,EAAUR,GAC7BnsB,EAAIpgB,WAER,IAAIgtC,EACAC,EAAuB,EACvBC,EAAmB,EACvB,GAAwB,QAAnB30C,EAAK7L,KAAK6+C,WAAwB,IAAPhzC,OAAgB,EAASA,EAAGjI,OAAQ,CAEhEw8C,EADiBhpB,EAAK0K,mBAAmB3L,EAASE,SAASK,OAAQ12B,KAAKkQ,OACpDxO,EAAG1B,KAAK6+C,KAEhC,IAAK,IAAIr4C,EAAI,EAAGA,EAAIxG,KAAK4+C,OAAOh7C,SAAU4C,EAAG,CACzC,MAAMwlB,EAAOhsB,KAAK4+C,OAAOp4C,GACpBwlB,EAAK0zB,aACN1zB,EAAK0zB,WAAa,GACZ,IAANl5C,IACAwlB,EAAK0zB,YAAcvtB,GACvBquB,EAAmBx0B,EAAK0zB,WAAaa,GAA8B,IAAN/5C,EAAU2rB,EAAU,GAC7EnG,EAAKjc,OAAS2uC,GAAK7a,KACfyc,GAAaA,EAAUvwC,OAAS2uC,GAAK7a,IACrCqc,EAAgBtT,EAAMlrC,EAAGk+C,EAAa,GAE1CE,EAAWlT,EAAMlrC,EAAGkrC,EAAMjmC,EAAG65C,EAAkBZ,IAE/C5zB,EAAKjc,OAAS2uC,GAAK5a,OACfwc,GAAaA,EAAUvwC,OAAS2uC,GAAK7a,IACrCoc,EAAcrT,EAAMlrC,EAAGkrC,EAAMjmC,EAAG65C,EAAkBZ,GAElDU,GAAaA,EAAUvwC,OAAS2uC,GAAK5a,OACrCoc,EAAgBtT,EAAMlrC,EAAGkrC,EAAMjmC,GAAI,GACnCs5C,EAAcrT,EAAMlrC,EAAGkrC,EAAMjmC,EAAG65C,EAAkBZ,IAEjDU,IACDE,EAAmBx0B,EAAK0zB,WACxBO,EAAcrT,EAAMlrC,EAAGkrC,EAAMjmC,EAAG65C,EAAkBZ,KAG1DQ,EAAWxT,EAAMlrC,EAAI8+C,EAAkBx0B,EAAKlpB,MAC5Cw9C,EAAYt0B,EACZu0B,EAAuBv0B,EAAK0zB,WAC5BY,EAAU5+C,EAAIkrC,EAAMlrC,EACpBkrC,EAAMlrC,GAAK8+C,EAEf,IAAKF,GAA4B3+C,MAAf2+C,EAAU5+C,EACxB,MAAM,IAAIT,EAAa,oBAAqB,mBAG5Cq/C,EAAUvwC,OAAS2uC,GAAK7a,GACxBqc,EAAgBI,EAAU5+C,EAAI8+C,EAAkBZ,EAAa,GAExDU,EAAUvwC,OAAS2uC,GAAK5a,MAC7Boc,EAAgBI,EAAU5+C,EAAI8+C,EAAkB5T,EAAMjmC,GAAI,IChOtE,SAAS,MAAK7E,GACN2+C,GAAY/a,OACZ9jC,EAAI,uBAAwBE,GAE7B,IAAI4+C,GAOAC,GAKAC,GAMAC,GClCAC,GFiPXpC,GAAKlqC,UAAYnU,OAAOwU,OAAO,GAAIhD,EAAQ2C,WChO3C,SAAWksC,GACPA,EAA6BA,EAAmC,KAAI,GAAK,OACzEA,EAA6BA,EAAqC,OAAI,GAAK,SAC3EA,EAA6BA,EAAoC,MAAI,GAAK,QAC1EA,EAA6BA,EAA0C,YAAI,GAAK,cAJpF,CAKGA,KAAiCA,GAA+B,KAEnE,SAAWC,GACPA,EAA2BA,EAAgC,IAAI,GAAK,MACpEA,EAA2BA,EAAmC,OAAI,GAAK,SAF3E,CAGGA,KAA+BA,GAA6B,KAE/D,SAAWC,GACPA,EAAYA,EAAmB,MAAI,GAAK,QACxCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAkB,KAAI,GAAK,OAH3C,CAIGA,KAAgBA,GAAc,KAEjC,SAAWC,GACPA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAA2B,UAAI,GAAK,YACpDA,EAAgBA,EAA6B,YAAI,GAAK,cAH1D,CAIGA,KAAoBA,GAAkB,KAKlC,MAAMJ,WAAoBtqB,EAC7Bh1B,cACIG,QACAtB,KAAK+gD,aAAe,GACpB/gD,KAAKghD,WAAaN,GAA6BpqB,KAC/Ct2B,KAAKihD,SAAWN,GAA2BtG,IAC3Cr6C,KAAKkhD,YAAa,EAClBlhD,KAAKmhD,aAAc,EACnBnhD,KAAKgV,YAEE1R,sBACP,MAAO,cAEA89C,2BACP,OAAOX,GAAYlyC,QAAQ8yC,OAAOD,cAG3BE,0BAAeC,GACtBd,GAAYe,SAAWD,EAEhBD,4BACP,OAAOb,GAAYe,SAGvBj+C,yBAAyBk+C,GACrB,GAAIhB,GAAYlyC,QAAQkzC,GACpB,OAAOhB,GAAYlyC,QAAQkzC,GAIxBC,qCACP,OAAOp1B,EAAO+V,mBAAmBvzB,gBAE1B6yC,kCACP,OAAOlB,GAAYlyC,QAAQ8yC,OAAOza,QAAU6Z,GAAYiB,wBAE5Dn+C,wBAAwBkqB,GACpB,MAAMm0B,EAASnB,GAAYoB,kBAAkBp0B,EAAMrsB,MACnD,OAAKwgD,EAGEA,EAAOhI,aAAe6G,GAAYiB,wBAF9B,IAIfn+C,yBAAyBkqB,GACrB,MAAMm0B,EAASnB,GAAYoB,kBAAkBp0B,EAAMrsB,MACnD,OAAKwgD,EAGEA,EAAOE,QAAUrB,GAAYiB,wBAFzB,EAIfn+C,yBAAyBkqB,GACrB,MAAMm0B,EAASnB,GAAYoB,kBAAkBp0B,EAAMrsB,MACnD,OAAKwgD,GAGI,EAAIA,EAAOG,gBAAmBtB,GAAYiB,wBAFxC,EAIJxJ,+BACP,OAAOuI,GAAYlyC,QAAQ8yC,OAAOnJ,kBAAoBuI,GAAYiB,wBAE3DvJ,6BACP,OAAOsI,GAAYlyC,QAAQ8yC,OAAOlJ,gBAAkBsI,GAAYiB,wBAEzDM,2BACP,OAAOvB,GAAYlyC,QAAQ8yC,OAAOW,cAAgBvB,GAAYiB,wBAGvDnzC,qBACP,OAAO+d,EAAO+V,mBAAmBzzB,aAAaK,OAAOgzC,YAE9CC,8BAIP,OAAOzB,GAAYlyC,QAAQ8yC,OAAOa,iBAE3BC,8BACP,OAAO1B,GAAYlyC,QAAQ8yC,OAAOc,iBAEtC5+C,qBAAqB1B,GACjB,YAAgCF,IAAzBE,EAAMugD,gBAAgCvgD,EAAMugD,iBAAmBvB,GAAgBwB,YAE1F9+C,mBAAmB1B,GACf,YAAgCF,IAAzBE,EAAMugD,gBAAgCvgD,EAAMugD,iBAAmBvB,GAAgByB,UAM1F/+C,cAAcg/C,EAASxgB,GACnB,IAAIl2B,EACJ,IAAK02C,GAA8B,IAAnBA,EAAQ3+C,OACpB,OAAO,EACX,IAAI2E,EAAQ,EACRi6C,EAAgB,EACpB,MAAMC,EAAiB,GACvB,IAAK,MAAMC,KAAUH,EAAS,CAC1B,MAAM52C,EAAWH,EAAK4J,wBAAmD,QAA1BvJ,EAAK62C,EAAOpuC,gBAA6B,IAAPzI,OAAgB,EAASA,EAAGO,MACvGu2C,EAAUn3C,EAAKo3C,UAAUj3C,EAAU,KACnCk3C,EAAqB,EAAVF,EACjB,IAAIG,EAAa,EACbC,GAAS,EACb,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAO3B,aAAan9C,SAAUo/C,EAAG,CACjD,MAAMnhD,EAAQ6gD,EAAO3B,aAAaiC,GAC5BC,EAAMxC,GAAYyC,cAAcrhD,GAChCshD,EAAM1C,GAAY2C,YAAYvhD,GAC9BwhD,EAAgBJ,GAAOE,EAAM1C,GAAYW,cAAgB,EACzDkC,EAAMzhD,EAAM0hD,aAAe3C,GAAY4C,MAAQX,EAAWQ,EAAgBV,EAAUU,GAGtFJ,GAAOE,KACPL,EAAa,GAIjB,MAAMn3C,EAAW+2C,EAAOlI,cAAcnlC,iBAChCouC,EAAmB93C,EAAW03C,EAmBpC,GAlBIxhD,EAAM0hD,aAAe3C,GAAY4C,YAAyB7hD,IAAhBE,EAAM4rB,OAChD5rB,EAAM0G,MAAQk4C,GAAYiD,iBAAiB7hD,EAAM4rB,OAASg2B,EAC1D5hD,EAAMyzB,QAAUmrB,GAAYkD,kBAAkB9hD,EAAM4rB,OAASg2B,EAC7D5hD,EAAMuzB,QAAUqrB,GAAYmD,kBAAkB/hD,EAAM4rB,OAASg2B,EAC7D5hD,EAAM4rB,MAAMD,MAAQ3rB,EAAM4rB,MAAMD,MAAQ81B,GAEnCzhD,EAAM0hD,aAAe3C,GAAYiD,OACtChiD,EAAM0G,MAAQ1G,EAAM0G,MAAQk7C,EAC5B5hD,EAAMyzB,QAAUotB,EAAOoB,kBAAkBjiD,EAAMiB,MAAQwgD,GAEvDzhD,EAAM0hD,aAAe3C,GAAY4C,YACjB7hD,IAAhBE,EAAM4rB,OACN5rB,EAAM4rB,MAAMrsB,OAASq/C,GAAYxxC,OAAO80C,KAAK3iD,OAC7C0hD,EAAa,GAEjBjhD,EAAM0G,OAASk4C,GAAYkB,qBAAuBh2C,EAAW03C,EAGzDJ,GAAOD,EAAI,EAAG,CACd,MAAMgB,EAAOtB,EAAO3B,aAAaiC,EAAI,GAChCvC,GAAYyC,cAAcc,KAC3BxB,EAAgBj6C,GAGpB46C,GAAOX,EAAgB,IACvBO,GAAS,EAETlhD,EAAMuzB,OAASvzB,EAAMuzB,QAAUotB,EAAgBj6C,GAC/CA,EAAQi6C,EACRA,EAAgB,EAEhBE,EAAOuB,kBAAiB,IAEvBhB,GAAQE,IACTX,EAAgB,GAEpB3gD,EAAMkhD,OAASA,EACfx6C,GAAS1G,EAAM0G,MAGnBm6C,EAAOwB,2BACPxB,EAAOyB,2BACHzB,EAAO0B,gBAAkBzD,GAA2BtG,KACpDqI,EAAO1qB,YAAY+J,EAAM+Y,eACzB/Y,EAAM+Y,eAAiBgI,IAGvBJ,EAAO1qB,YAAY+J,EAAM3L,UAAY,GACrC2L,EAAM3L,WAAa0sB,EAAa,GAEhCJ,EAAO2B,iBACP5B,EAAep0B,KAAK9lB,GAGpBk6C,EAAep0B,KAAK,GAM5B,OAHA9lB,EAAQk6C,EAAezN,QAAO,CAACxyC,EAAGC,IAAMD,EAAIC,GAAG,GAC/Cs/B,EAAMC,YAAcz5B,EAAQ,EAC5Bw5B,EAAME,aAAe15B,EAAQ,GACtB,EAOAiM,uBACP,IAAIhI,EAAS,4BAKb,MAJ4C,aAAxC8f,EAAO+V,mBAAmB3zB,YAE1BlC,EAAS,qCAEN,CACHA,OAAAA,EACAJ,KAAM,GACNC,OAAQjC,EAAWsC,OACnBJ,MAAOjC,EAAUqC,QAMrBwrC,wBACA,OAAOuI,GAAYvI,kBAAoBl4C,KAAKw6C,cAAcnlC,iBAE1D8iC,sBACA,OAAOsI,GAAYtI,gBAAkBn4C,KAAKw6C,cAAcnlC,iBAE5DivC,eAAetgD,GAEX,OADAhE,KAAKmhD,YAAcn9C,EACZhE,KAEXqkD,iBACI,OAAOrkD,KAAKmhD,YAEhBgD,2BACI,MAAMI,EAAWvkD,KAAK+gD,aAAayD,WAAU,EAAGjB,WAAAA,EAAY91B,MAAAA,KAAY81B,IAAe3C,GAAY4C,YAAmB7hD,IAAV8rB,GAAsC,iCAAfA,EAAMrsB,OACzI,GAAImjD,EAAW,EACX,OAEJ,MACME,EADMzkD,KAAK+gD,aAAawD,GACbh8C,MAAQ,EACnBm8C,EAAO,IAAO1kD,KAAKw6C,cAAcnlC,iBACvC,IAAIsvC,EAAW,EACf,KAAqBA,EAAWJ,IAAYI,EAAU,CAClD,MAAMjC,EAAS1iD,KAAK+gD,aAAa4D,GACjCjC,EAAOttB,OAASstB,EAAOttB,OAASqvB,EAChC/B,EAAOptB,OAASotB,EAAOptB,OAASovB,EAEpC,IAAKC,EAAWJ,EAAW,EAAGI,EAAW3kD,KAAK+gD,aAAan9C,SAAU+gD,EAAU,CAC3E,MAAMjC,EAAS1iD,KAAK+gD,aAAa4D,GACjCjC,EAAOttB,OAASstB,EAAOttB,OAASqvB,EAChC/B,EAAOptB,OAASotB,EAAOptB,OAASovB,GAGxCR,2BACI,IAAIU,EAAQ,EACZ,IAAK,IAAI5B,EAAI,EAAGA,EAAIhjD,KAAK+gD,aAAan9C,SAAUo/C,EAAG,CAC/C,MAAMN,EAAS1iD,KAAK+gD,aAAaiC,GACjC4B,GAAS5kD,KAAK6kD,qBAAqB7B,GACnCN,EAAOttB,QAAUwvB,GAIzBC,qBAAqB7B,GACjB,IAAKhjD,KAAKkhD,WACN,OAAO,EAEX,MAAM4D,EAAa9kD,KAAK+gD,aAAaiC,GAC/B+B,EAAa/B,EAAI,EAAIhjD,KAAK+gD,aAAaiC,EAAI,QAAKrhD,EACtD,IAAIqjD,EAAa,EAEbF,EAAWvB,aAAe3C,GAAY4C,YACjB7hD,IAArBmjD,EAAWr3B,OACXq3B,EAAWr3B,MAAMrsB,OAASq/C,GAAYxxC,OAAO80C,KAAK3iD,OAClD4jD,GAAcF,EAAWr3B,MAAMlf,QAAQ4jB,cAExBxwB,IAAfojD,GACAA,EAAWxB,aAAe3C,GAAY4C,YACjB7hD,IAArBojD,EAAWt3B,OACXs3B,EAAWt3B,MAAMrsB,OAASq/C,GAAYxxC,OAAO80C,KAAK3iD,OAClD4jD,GAAcD,EAAWt3B,MAAMlf,QAAQ4jB,SAG3C,IAAI8yB,GAAe,EACfC,GAAe,OACAvjD,IAAfojD,GAA4BA,EAAWxB,aAAe3C,GAAYiD,OAClEoB,EAAexE,GAAY0B,iBAAiBgD,MAAMC,GAAOA,IAAOL,EAAWjiD,KAAKiiD,EAAWjiD,KAAKc,OAAS,KACzGshD,EAAezE,GAAYyB,iBAAiBiD,MAAMC,GAAOA,IAAOL,EAAWjiD,KAAKiiD,EAAWjiD,KAAKc,OAAS,MAE7G,MAAMyhD,EAAsB5E,GAAYuB,cAAgBhiD,KAAKw6C,cAAcnlC,iBAc3E,OAXI4vC,GAAgBH,EAAW1C,iBAAmBvB,GAAgBwB,cAC9D2C,GAAcK,GAEdH,GAAgBJ,EAAWvB,aAAe3C,GAAYiD,OAClDiB,EAAWhiD,KAAK,IAAM,KAAOgiD,EAAWhiD,KAAK,IAAM,MACnDkiD,GAAcK,EAAsB,GAEpC5E,GAAY0B,iBAAiBgD,MAAMC,GAAOA,KAAQL,MAAAA,OAA+C,EAASA,EAAWjiD,KAAKiiD,EAAWjiD,KAAKc,OAAS,QACnJohD,GAAcK,EAAsB,IAGrCL,EAOXM,eAAe54B,EAAS,IACpB,IAAI7gB,EAAIkF,EAAI+4B,EACZ,MAAMyZ,EAA0C,QAA5B13C,EAAK6gB,EAAO62B,kBAA+B,IAAP13C,EAAgBA,EAAK+0C,GAAYiD,KACnF0B,EAAc,CAChBziD,KAA6B,QAAtBiO,EAAK2b,EAAO5pB,YAAyB,IAAPiO,EAAgBA,EAAK,GAC1DwyC,WAAAA,EACAnB,eAAiD,QAAhCtY,EAAKpd,EAAO01B,sBAAmC,IAAPtY,EAAgBA,EAAK+W,GAAgB2E,KAC9FpwB,OAAQ,EACRE,OAAQ,EACRytB,QAAQ,EACRx6C,MAAO,GAIX,GAAIg7C,IAAe3C,GAAY4C,OAAiC,iBAAjB92B,EAAOe,MAAoB,CACtE,MAAMg4B,EAAYhF,GAAYxxC,OAAOyd,EAAOe,OACtCi4B,EAAc,GACpBH,EAAY93B,MAAQ,IAAIG,EAAM63B,EAAUrkD,KAAMskD,EAAa,CAAE7zB,SAAU,qBAMlE0xB,IAAe3C,GAAYiD,KAChC0B,EAAYh9C,MAAQvI,KAAKw6C,cAAcX,oBAAoB0L,EAAYziD,MAElEygD,IAAe3C,GAAY/tB,OAChC0yB,EAAYh9C,MAAQmkB,EAAOnkB,OAE/B,OAAOg9C,EAIXI,eAAeC,GAEX,OADA5lD,KAAK+gD,aAAa1yB,KAAKruB,KAAKslD,eAAeM,IACpC5lD,KAKX6lD,QAAQ/iD,EAAM8iD,EAAa,IACvB,MAAMrC,EAAa3C,GAAYiD,KAC/B,OAAO7jD,KAAK2lD,eAAetlD,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI+wC,GAAa,CAAE9iD,KAAAA,EAAMygD,WAAAA,KAGpFuC,mBAAmBhjD,GACf,MAAMygD,EAAa3C,GAAYiD,KACzBzB,EAAiBvB,GAAgBwB,YACvC,OAAOriD,KAAK2lD,eAAe,CAAE7iD,KAAAA,EAAMygD,WAAAA,EAAYnB,eAAAA,IAGnD2D,iBAAiBjjD,GACb,MAAMygD,EAAa3C,GAAYiD,KACzBzB,EAAiBvB,GAAgByB,UACvC,OAAOtiD,KAAK2lD,eAAe,CAAE7iD,KAAAA,EAAMygD,WAAAA,EAAYnB,eAAAA,IAGnD4D,oBAAoBv4B,GAChB,MAAM81B,EAAa3C,GAAY4C,MACzBpB,EAAiBvB,GAAgBwB,YACvC,OAAOriD,KAAK2lD,eAAe,CAAEl4B,MAAAA,EAAO81B,WAAAA,EAAYnB,eAAAA,IAIpD6D,SAASx4B,EAAOf,EAAS,IACrB,MAAM62B,EAAa3C,GAAY4C,MAC/B,OAAOxjD,KAAK2lD,eAAetlD,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI6X,GAAS,CAAEe,MAAAA,EAAO81B,WAAAA,KAOjF2C,eAAepjD,EAAM4pB,EAAS,IAC1B,IAAInmB,EAAM,GACV,IAAK,IAAIC,EAAI,EAAGA,EAAI1D,EAAKc,SAAU4C,EAAG,CAClC,MAAM2/C,EAAOrjD,EAAK0D,GACdi6C,GAAYxxC,OAAOk3C,IACf5/C,EAAI3C,OAAS,IACb5D,KAAK6lD,QAAQt/C,EAAKmmB,GAClBnmB,EAAM,IAEVvG,KAAKimD,SAASE,EAAMz5B,IAIpBnmB,GAAO4/C,EAMf,OAHI5/C,EAAI3C,OAAS,GACb5D,KAAK6lD,QAAQt/C,EAAKmmB,GAEf1sB,KAIXomD,QAAQ79C,EAAOmkB,EAAS,IACpB,MAAM62B,EAAa3C,GAAY/tB,KAC/B,OAAO7yB,KAAK2lD,eAAetlD,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI6X,GAAS,CAAE62B,WAAAA,EAAYh7C,MAAAA,KActF6L,QAAQ/N,EAAG+F,EAAMC,EAAQC,GAGrB,OAFAhL,MAAM8S,QAAQ/N,EAAG+F,EAAMC,EAAQC,GAC/BtM,KAAKw6C,cAAgB7C,GAAc8C,OAAOz6C,KAAKsU,UACxCtU,KAEXikD,iBAAiB1C,GAEb,OADAvhD,KAAKkhD,WAAaK,EACXvhD,KAGXqmD,YAAYC,GAER,OADAtmD,KAAKihD,SAAyB,iBAAPqF,EAAkB7F,GAAYtF,sBAAsBmL,GAAMA,EAC1EtmD,KAEXokD,cACI,OAAOpkD,KAAKihD,SAGhBsF,cAAcC,GAEV,OADAxmD,KAAKghD,WAA2B,iBAAPwF,EAAkB/F,GAAYnF,wBAAwBkL,GAAMA,EAC9ExmD,KAEXymD,gBACI,OAAOzmD,KAAKghD,WAEhBjzB,WACI,IAAIxlB,EAAQ,EAIZ,OAHAvI,KAAK+gD,aAAanoB,SAAS8pB,IACvBn6C,GAASm6C,EAAOK,OAAS,EAAIL,EAAOn6C,SAEjCA,EAEXu7C,kBAAkBhhD,GACd,IAAI+I,EACJ,IAAIkK,EAAM,EACNvP,EAAI,EACR,IAAKA,EAAI,EAAGA,EAAI1D,EAAKc,SAAU4C,EAAG,CAC9B,MAAM+H,EAAUvO,KAAKw6C,cAAchB,gBAAgB12C,EAAK0D,IACxD,GAAI+H,EAAS,CACT,MAAMm4C,EAAgC,QAAxB76C,EAAK0C,EAAQo4C,aAA0B,IAAP96C,EAAgBA,EAAK,EACnEkK,EAAM2wC,EAAO3wC,EAAM2wC,EAAO3wC,GAGlC,MAAMhH,EAAa/O,KAAKw6C,cAAc1rC,gBACtC,OAAOtI,EAAI,EAAUuP,EAAMhH,GAAX,EAAyB,EAG7C0E,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cAEL4f,EAAIhhB,OACJ,MAAM6oC,EAAcl7C,OAAO+Q,KAAKpR,KAAK2Q,aAAa,YAAYzO,KAAK,KACnEwxB,EAAIgd,UAAU6K,EAAav7C,KAAK2Q,aAAa,OAC7C,MAAMi8B,EAAQxV,EAAK0K,mBAAmB3L,EAASE,SAASO,MAAO52B,KAAKkQ,OAEpE,IAAIvJ,EADJ+sB,EAAItf,QAAQpU,KAAKsU,UAIjB,MAAM+sB,EAAUjK,EAAKiK,UACfvM,EAAQsC,EAAKzB,aACnB,GAAI31B,KAAKihD,WAAaN,GAA2B5F,QAG7C,GADAp0C,EAAImuB,EAAMmU,kBAAkBjpC,KAAKo2B,UAAY9J,EAAOgD,yBAChD+R,EAAS,CACT,MAAMqa,EAAWtkB,EAAKsQ,YAAYhD,aAC5BkC,EAAU9R,EAAM+R,yBAChB+f,EAAwC,IAA5BxvB,EAAKkL,mBAA2BoZ,EAASzW,MAAQyW,EAAS1W,KAC5Er+B,EAAI3D,KAAK6E,IAAIlB,EAAGigD,EAAYhgB,GAAW5mC,KAAKo2B,UAAY,UAM5D,GADAzvB,EAAI3D,KAAK8hC,IAAIhQ,EAAMmM,eAAejhC,KAAKo2B,WAAYgB,EAAK4J,QAAQ,GAAK,IACjEK,EAAS,CACT,MAAMqa,EAAWtkB,EAAKsQ,YAAYhD,aAC5BkC,EAAU9R,EAAM+R,yBACtBlgC,EAAI3D,KAAK8hC,IAAIn+B,EAAG+0C,EAAS1W,KAAO,EAAI4B,EAAU5mC,KAAKo2B,WAG3D,IAAI10B,EAAIkrC,EAAMlrC,EAEVA,EADA1B,KAAKghD,aAAeN,GAA6BpqB,KAC7CsW,EAAMlrC,EAEL1B,KAAKghD,aAAeN,GAA6BzpB,MAClD2V,EAAMlrC,EAAI1B,KAAK+tB,WAEd/tB,KAAKghD,aAAeN,GAA6BhqB,OAClDkW,EAAMlrC,EAAI1B,KAAK+tB,WAAa,EAI5BqJ,EAAKuR,WAAa3oC,KAAK+tB,WAAa,EAE5C,GAAE,0BAA2B/tB,KAAKw6C,cAAe94C,EAAGiF,GACpD3G,KAAK+gD,aAAanoB,SAAS8pB,IACvB,MAAMmE,EAAUpG,GAAYyC,cAAcR,GACpCoE,EAAQrG,GAAY2C,YAAYV,GACtC,IAAIqE,EAAOpgD,EAUX,GATA,GAAE,aAAc+7C,EAAOttB,OAAQstB,EAAOptB,QACtC,GAAE,gBAAiByxB,GACfF,IACAE,GAAQ/mD,KAAKk4C,mBAEb4O,IACAC,GAAQ/mD,KAAKm4C,iBAEjB,GAAE,gBAAiB4O,GACfrE,EAAOa,aAAe3C,GAAYiD,KAAM,CACxC,IAAIgD,GAAWC,KACXpzB,EAAIhhB,OACA1S,KAAKsU,UAAU,CACf,MAAM,OAAE9H,EAAM,KAAEJ,EAAI,OAAEC,EAAM,MAAEC,GAAUtM,KAAKsU,SACvC0yC,EAAkBx7C,EAAKo3C,UAAUx2C,EAAMq0C,GAAYW,eACzD1tB,EAAItf,QAAQ5H,EAAQw6C,EAAiB36C,EAAQC,GAOrD,GAAE,mBAAoBo2C,EAAO5/C,KAAMpB,EAAIghD,EAAOttB,OAAQ2xB,EAAOrE,EAAOptB,QACpE5B,EAAIwL,SAASwjB,EAAO5/C,KAAMpB,EAAIghD,EAAOttB,OAAQ2xB,EAAOrE,EAAOptB,SACvDuxB,GAAWC,IACXpzB,EAAIpgB,eAGHovC,EAAOa,aAAe3C,GAAY4C,OAASd,EAAOj1B,OACvDs5B,GAAQrE,EAAOptB,OACf,GAAE,oBAAqBotB,EAAOj1B,MAAMrsB,KAAMM,EAAIghD,EAAOttB,OAAQ2xB,GAC7DrE,EAAOj1B,MAAM+H,OAAO9B,EAAKhyB,EAAIghD,EAAOttB,OAAQ2xB,IAEvCrE,EAAOa,aAAe3C,GAAY/tB,OACvC,GAAE,oBAAqB6vB,EAAOn6C,MAAO7G,EAAGqlD,GACxCrzB,EAAIQ,YACJR,EAAItgB,aAAa,GACjBsgB,EAAIS,OAAOzyB,EAAGiF,GACd+sB,EAAIU,OAAO1yB,EAAIghD,EAAOn6C,MAAOw+C,GAC7BrzB,EAAI1G,UAERtrB,GAAKghD,EAAOn6C,MACRm6C,EAAOK,SACPrhD,GAAKghD,EAAOttB,WAGpB1B,EAAIkd,aACJld,EAAIpgB,WAGZmtC,GAAY/a,OAAQ,EAEpB+a,GAAY3E,kBAAoB4E,GAChCD,GAAYnF,wBAA0B,CAClCvkB,KAAM2pB,GAA6BpqB,KACnCU,MAAO0pB,GAA6BzpB,MACpCR,OAAQiqB,GAA6BhqB,OACrCqlB,WAAY2E,GAA6B1E,aAE7CyE,GAAY7F,gBAAkB+F,GAC9BF,GAAYtF,sBAAwB,CAChCc,IAAK0E,GAA2BtG,IAChC1jB,MAAOgqB,GAA2BtG,IAClCxjB,MAAO8pB,GAA2B5F,OAClCmB,OAAQyE,GAA2B5F,QAGvC0F,GAAYxxC,OAAS,CACjBg4C,WAAY,CACR7lD,KAAM,kBAEV8lD,IAAK,CACD9lD,KAAM,kBAEV+lD,eAAgB,CACZ/lD,KAAM,sBAEV,IAAK,CACDA,KAAM,iBAEVgmD,UAAW,CACPhmD,KAAM,iBAEVimD,aAAc,CACVjmD,KAAM,oBAEVkmD,MAAO,CACHlmD,KAAM,aAEV,IAAK,CACDA,KAAM,aAEV,IAAK,CACDA,KAAM,sBAEVmmD,UAAW,CACPnmD,KAAM,sBAEV,IAAK,CACDA,KAAM,uBAEVomD,WAAY,CACRpmD,KAAM,uBAEVqmD,YAAa,CACTrmD,KAAM,uBAEVsmD,aAAc,CACVtmD,KAAM,wBAEVumD,cAAe,CACXvmD,KAAM,0BAEVwmD,eAAgB,CACZxmD,KAAM,2BAEV,IAAK,CACDA,KAAM,gCAEV2iD,KAAM,CACF3iD,KAAM,gCAEV,IAAK,CACDA,KAAM,mBAEVqB,EAAG,CACCrB,KAAM,mBAGdq/C,GAAYoH,YAAcjH,GAC1BH,GAAYqH,gBAAkBjH,GAE9BJ,GAAYe,UAAW,EEpqBhB,MAAMuG,WAAuB5xB,EAChCh1B,YAAY6mD,GACR1mD,QACAtB,KAAKgoD,OAASA,EACdhoD,KAAKuI,MAAQ,EACbvI,KAAKoxB,SAAW+E,EAASE,SAASC,KAClCt2B,KAAKmyB,QAAU,EACfnyB,KAAKoyB,QAAU,EACfpyB,KAAKioD,SAAW,EAChBjoD,KAAKykC,SAAW,EAChBzkC,KAAKgV,YAEE1R,sBACP,MAAO,iBAGXC,cAAc2kD,EAAMnmB,GAChB,MAAM,WAAEC,EAAU,YAAEC,GAAgBF,EAEpC,IAAKmmB,GAAwB,IAAhBA,EAAKtkD,OACd,OAAO,EACX,MAAMukD,EAAY,GAClB,IAAIC,EAAY,KACZC,EAAY,EACZC,EAAa,EACjB,IAAK,IAAI9hD,EAAI,EAAGA,EAAI0hD,EAAKtkD,SAAU4C,EAAG,CAClC,MAAMoP,EAAMsyC,EAAK1hD,GACX4wB,EAAOxhB,EAAIuhB,UACXoxB,EAAM3yC,EAAIkiB,cACV5nB,EAAQ0F,EAAI4hB,aACZmT,EAAQvT,EAAKyL,cAAc3yB,GACjC,GAAIknB,IAASgxB,EAAW,CACpB,IAAK,IAAIzlD,EAAI,EAAGA,EAAIy0B,EAAKhmB,KAAKxN,SAAUjB,EACjB,IAAfq/B,IACAqmB,EAAYrlD,KAAK6E,IAAIuvB,EAAKmJ,yBAA0B8nB,IAEpC,IAAhBpmB,IACAqmB,EAAatlD,KAAK6E,IAAIuvB,EAAKoJ,0BAA2B8nB,IAG9DF,EAAYhxB,EAEhB+wB,EAAU95B,KAAK,CACX+I,KAAAA,EACAxhB,IAAAA,EACA2yC,IAAAA,EACAxmD,KAAM4oC,EAAM5oC,KACZymD,OAAQH,EACRI,OAAQH,IAIhBH,EAAUjb,MAAK,CAAC1qC,EAAGC,IAAMA,EAAEV,KAAOS,EAAET,OACpC,IAAI2mD,EAAY,EACZC,EAAY,EACZC,EAAU,EACVC,EAAU,EACVnc,EAAW,KACXoc,EAAW,KACf,IAAK,IAAItiD,EAAI,EAAGA,EAAI2hD,EAAUvkD,SAAU4C,EAAG,CACvC,IAAIuiD,EAAY,EAChB,MAAM,KAAE3xB,EAAI,IAAEmxB,EAAG,IAAE3yC,EAAG,KAAE7T,EAAI,OAAEymD,EAAM,OAAEC,GAAWN,EAAU3hD,GAEvDzE,IAAS2qC,GAAYtV,IAAS0xB,IAC9BJ,EAAY1mB,EAAawmB,EACzBG,EAAY1mB,EAAcwmB,GAE9B,MAAMO,EAAWpzC,EAAImY,WAjDL,EAkDZw6B,IAAQpyB,EAASE,SAASC,MAC1B1gB,EAAImf,UAAUiN,EAAa0mB,GAC3BK,EAAY/mB,EAAagnB,EACzBJ,EAAUG,EAAYH,EAAUG,EAAYH,GAEvCL,IAAQpyB,EAASE,SAASY,QAC/BrhB,EAAImf,UAAU4zB,GACdI,EAAYT,EAAaU,EACzBH,EAAUE,EAAYF,EAAUE,EAAYF,GAEhDnc,EAAW3qC,EACX+mD,EAAW1xB,EAIf,OAFA2K,EAAMC,YAAc4mB,EACpB7mB,EAAME,aAAe4mB,GACd,EAEXtlD,sBAAqB,WAAE0lD,GAAe,GAAI7xB,EAAM6lB,GAC5CgM,MAAAA,GAAwDA,EAAWxiD,MAAM,KAAK4K,KAAK63C,IAC/E,MAAMziD,EAAQyiD,EAAgB97C,OAAO3G,MAAM,KACrCimB,EAAS,CAAEy8B,OAAQ1iD,EAAM,IAG/B,OAFIA,EAAM,KACNimB,EAAO0E,SAAW3qB,EAAM,IACrBw2C,EAAQM,aAAa6L,UAAU18B,MACvCrb,KAAI,CAACg4C,EAAWn5C,IAAUknB,EAAK4E,YAAY9rB,EAAOm5C,KAEzDC,kBAAkBtB,GAEd,OADAhoD,KAAKgoD,OAASA,EACPhoD,KAEXupD,oBACI,OAAOvpD,KAAKgoD,OAEhBwB,WAAW9nD,GAEP,OADA1B,KAAKioD,SAAWvmD,EACT1B,KAEXypD,WAAW9iD,GAEP,OADA3G,KAAKykC,SAAW99B,EACT3G,KAEXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cACL,MAAM84B,EAAQxV,EAAK0K,mBAAmB9hC,KAAKoxB,SAAUpxB,KAAKkQ,OAC1D,IAAIw5C,EAAQ9c,EAAMlrC,EAAI1B,KAAKmyB,QAAUnyB,KAAKioD,SACtC0B,EAAQ/c,EAAMjmC,EAAI3G,KAAKoyB,QAAUpyB,KAAKykC,SAAW,EACrD,OAAQzkC,KAAKoxB,UACT,KAAK+E,EAASE,SAASO,MACnB8yB,GAAS,EACTC,GAAS,GACT,MACJ,KAAKxzB,EAASE,SAASS,MACnB4yB,GAAS,EACTC,GAAS,GACT,MACJ,KAAKxzB,EAASE,SAASC,KACnBozB,GAAS1pD,KAAKuI,MACd,MACJ,KAAK4tB,EAASE,SAASY,MACnByyB,GAAS,EACT,MACJ,QACI,MAAM,IAAIzoD,EAAa,kBAAmB,gBAAgBjB,KAAKoxB,2BAEvEsC,EAAIhhB,OACJghB,EAAItf,QAAQpU,KAAKsU,UACjBof,EAAIwL,SAAS,GAAKl/B,KAAKgoD,OAAQ0B,EAAOC,GACtCj2B,EAAIpgB,WAGZy0C,GAAevzC,UAAY,CACvBhI,OAAQhB,EAAKiB,WACbL,KAAM,EACNC,OAAQjC,EAAWmvC,KACnBjtC,MAAOjC,EAAUqC,QDhJrB,SAAWo0C,GACPA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAgB,KAAI,GAAK,OAHvC,CAIGA,KAAcA,GAAY,KAItB,MAAM8I,WAAc/3C,EACvB1Q,YAAY0oD,EAAMl9B,GAUd,IAAIm9B,EACJ,GAVAxoD,QACAtB,KAAK+pD,qBAAuB,EAC5B/pD,KAAKgqD,KAAOlJ,GAAUmJ,OACtBjqD,KAAKs8B,cAAe,EACpBt8B,KAAKkqD,UAAY,IAAIhnD,EAAS,EAAG,GACjClD,KAAKmqD,iBAAmB,EACxBnqD,KAAKoqD,UAAY,GACjBpqD,KAAK2sB,QAAUtsB,OAAOwU,OAAO,CAAEw1C,cAAe,KAAO19B,GAGjC,iBAATk9B,EAAmB,CAE1B,MAAMS,EAAQT,EAAKS,MAAM,gBACrBA,IACAR,EAAY,CACRl5B,UAAWhuB,SAAS0nD,EAAM,IAC1Bz5B,WAAYjuB,SAAS0nD,EAAM,WAKnCR,EAAYD,EAGhB7pD,KAAK6pD,KAAOxpD,OAAOwU,OAAO,CAAE+b,UAAW,EAAGC,WAAY,EAAG9hB,WAAYud,EAAO/W,YAAcu0C,GAE1F9pD,KAAKuqD,WAAa,IAAIrnD,EAASlD,KAAK6pD,KAAKj5B,WAAa5wB,KAAK6pD,KAAK96C,WAAa/O,KAAK6pD,KAAKh5B,YAAa,GACpG7wB,KAAKwqD,kBAAoBxqD,KAAKuqD,WAAW/kD,QAElClC,sBACP,MAAO,QAQAmnD,kBACP,OAAO3J,GAGX4J,gBACI,OAAO1qD,KAAKuqD,WAGhBI,eACI,OAAO3qD,KAAKkqD,UAGhBU,sBACI,OAAO5qD,KAAKmqD,iBAGhBU,uBACI,OAAO7qD,KAAKwqD,kBAGhBM,eACI,OAAO9qD,KAAKoqD,UAGhBW,UACI,OAAO/qD,KAAKgqD,KAMhBgB,QAAQhB,GAEJ,OADAhqD,KAAKgqD,KAAOA,EACLhqD,KAGXirD,0BACI,OAAOjrD,KAAK+pD,qBAGhBmB,sBACI,OAAOlrD,KAAK+pD,qBAAuB/pD,KAAK6pD,KAAK96C,WAGjD8lB,SAASC,GAIL,OAHA90B,KAAK80B,MAAQA,EAEb90B,KAAKyH,iBAAc9F,EACZ3B,KAEXw4B,WACI,OAAOx4B,KAAK80B,MAGhB7gB,iBACI,IAAKjU,KAAKyH,YAAa,CACnB,MAAMqtB,EAAQ90B,KAAK21B,aACnB,IAAIluB,EACJ,IAAK,IAAIjB,EAAI,EAAGA,EAAIxG,KAAKoqD,UAAUxmD,SAAU4C,EAAG,CAC5C,MAAM2kD,EAAWnrD,KAAKoqD,UAAU5jD,GAChC2kD,EAASt2B,SAASC,GAClB,MAAMha,EAAKqwC,EAASl3C,iBAChB6G,IACArT,EAAcA,EAAcA,EAAYD,UAAUsT,GAAMA,GAGhE9a,KAAKyH,YAAcA,EAEvB,OAAOzH,KAAKyH,YAGhB2jD,UAAUC,GAEN,OADArrD,KAAKgqD,KAAOqB,EAASvK,GAAUmJ,OAASnJ,GAAUwK,KAC3CtrD,KAGXurD,aACI,OAAIvrD,KAAKgqD,OAASlJ,GAAUmJ,QAAUjqD,KAAKgqD,OAASlJ,GAAU0K,MACnDxrD,KAAKkqD,UAAUnlD,OAAO/E,KAAKuqD,YAa1CkB,iBAAiBC,GAEb,OADA1rD,KAAK2sB,QAAQ09B,cAAgBqB,EACtB1rD,KAMX2rD,0BACI,MAAMpB,EAAavqD,KAAKkqD,UAAUlmD,QAGlC,OADAhE,KAAK4rD,aAAe5rD,KAAKoqD,UAAU/4C,KADtB85C,GAAanoD,KAAK8G,IAAI9J,KAAK2sB,QAAQ09B,cAAec,EAAShxB,WAAWn2B,QAAUumD,KACjDvV,QAAO,CAACxyC,EAAGC,IAAMD,EAAIC,GAAG,GAC7DzC,KAAK4rD,aAGhBC,QAAQC,GACC9rD,KAAK4rD,eACN5rD,KAAK4rD,aAAe5rD,KAAK2rD,2BAE7B,MAAMpB,EAAavqD,KAAKkqD,UAAUlmD,QAGlC,MAFY,CAAC+nD,GAAM/oD,KAAK8G,IAAI9J,KAAK2sB,QAAQ09B,cAAe0B,EAAIxB,GACjDyB,CAAIF,GAAa9rD,KAAK4rD,aAIrCK,YAAYd,GACR,IAAKA,EAAS/wB,oBAAqB,CAC/B,MAAM1L,EAAQy8B,EAAShxB,WAIvB,GAFAn6B,KAAKkqD,UAAU7lD,IAAIqqB,GACnB1uB,KAAK4rD,aAAe,GACf5rD,KAAKgqD,OAASlJ,GAAUmJ,QAAUjqD,KAAKgqD,OAASlJ,GAAU0K,OAC3DxrD,KAAKkqD,UAAU9kD,YAAYpF,KAAKuqD,YAEhC,MADAvqD,KAAKkqD,UAAUtlD,SAAS8pB,GAClB,IAAIztB,EAAa,cAAe,mBAGtCytB,EAAMppB,SAAStF,KAAKwqD,qBACpBxqD,KAAKwqD,kBAAoB97B,EAAMlpB,SAEnCxF,KAAK+pD,qBAAuB/pD,KAAKkqD,UAAU9mD,YAE3CpD,KAAKuqD,WAAWlmD,IAAI,EAAGrE,KAAKkqD,UAAU9mD,aAK1C,OAFApD,KAAKoqD,UAAU/7B,KAAK88B,GACpBA,EAASpwB,SAAS/6B,MACXA,KAGXksD,aAAa9B,GACT,IAAK,IAAI5jD,EAAI,EAAGA,EAAI4jD,EAAUxmD,SAAU4C,EACpCxG,KAAKisD,YAAY7B,EAAU5jD,IAE/B,OAAOxG,KAGXq8B,YACI,GAAIr8B,KAAKs8B,aACL,OAAOt8B,KACX,MAAM80B,EAAQ90B,KAAK21B,aAOnB,OANA31B,KAAKoqD,UAAUxxB,SAASuyB,IACfA,EAAS3yB,YACV2yB,EAASt2B,SAASC,MAG1B90B,KAAKs8B,cAAe,EACbt8B,KAEX21B,aACI,OAAOl0B,EAAQzB,KAAK80B,MAAO,UAAW,kCAU1CrhB,KAAKhB,EAAUzS,KAAKwT,eAAgBshB,GAGhC,IAAIrtB,EAFJqtB,EAAQA,MAAAA,EAAqCA,EAAQ90B,KAAK80B,MAC1D90B,KAAK8T,cAEL,IAAK,IAAItN,EAAI,EAAGA,EAAIxG,KAAKoqD,UAAUxmD,SAAU4C,EAAG,CAC5C,MAAM2kD,EAAWnrD,KAAKoqD,UAAU5jD,GAE5BsuB,GACAq2B,EAASt2B,SAASC,GAEtBrzB,EAAQ0pD,EAAS3yB,WAAY,eAAgB,mDAC7C,MAAM1d,EAAKqwC,EAASl3C,iBAChB6G,IACArT,EAAcA,EAAcA,EAAYD,UAAUsT,GAAMA,GAE5DqwC,EAASh3C,WAAW1B,GACpB04C,EAAS53C,gBAEbvT,KAAKyH,YAAcA,GExOpB,MAAM0kD,WAAqBh2B,EAC9Bh1B,YAAYk3B,GACR/2B,QACAtB,KAAKs8B,cAAe,EACpBt8B,KAAKoxB,SAAW+E,EAASE,SAASC,KAClCt2B,KAAKq4B,SAAWA,EAChBr4B,KAAKq4B,SAASO,SAASC,IACnBA,EAAQwB,gBAAe,MAE3Br6B,KAAKuI,MAAQ,EACbvI,KAAK64C,UAAY,IAAIuT,GACrBpsD,KAAK86B,MAAQ,IAAI8uB,GAAM,CACnBh5B,UAAW,EACXC,WAAY,EACZ9hB,WAAYud,EAAO/W,aACpB61C,WAAU,GACbprD,KAAK86B,MAAMoxB,aAAalsD,KAAKq4B,UAEtB/0B,sBACP,MAAO,eAGXC,cAAc8oD,EAAQtqB,GAClB,IAAKsqB,GAA4B,IAAlBA,EAAOzoD,OAClB,OAAO,EACX,IAAI2E,EAAQ,EACZ,IAAK,IAAI/B,EAAI,EAAGA,EAAI6lD,EAAOzoD,SAAU4C,EAAG,CACpC,MAAM4wC,EAAQiV,EAAO7lD,GACrB4wC,EAAM/a,YACN9zB,GAAS6uC,EAAMrpB,WAGnB,OADAgU,EAAMC,YAAcz5B,GACb,EAEX8zB,YACQr8B,KAAKs8B,eAETt8B,KAAK64C,UAAUyT,WAAW,CAACtsD,KAAK86B,QAAQyxB,OAAO,CAACvsD,KAAK86B,OAAQ,GAC7D96B,KAAKk3B,SAASl3B,KAAK64C,UAAU2T,oBAC7BxsD,KAAKs8B,cAAe,GAExBpF,SAAS3uB,GAEL,OADAvI,KAAKuI,MAAQA,EACNvI,KAEX+tB,WACI,OAAO/tB,KAAKuI,MAEhBkL,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cACL9T,KAAKo4B,sBAAsBp4B,KAAKq4B,SAAUjB,GAC1Cp3B,KAAKq4B,SAASO,SAASC,GAAYA,EAAQ1kB,WAAWuf,GAAKngB,mBCvD5D,MAAMk5C,GACTtrD,YAAYwrB,GACR3sB,KAAKs8B,cAAe,EACpBt8B,KAAKw8B,eAAgB,EACrBx8B,KAAK0sD,OAAS//B,GAAWA,EAAQ+/B,OAAS//B,EAAQ+/B,OAAS,EAC3D1sD,KAAK2sD,YAAc,IAAIzpD,EAAS,EAAG,GACnClD,KAAK4sD,SAAW,IAAI1pD,EAAS,EAAG,GAChClD,KAAK6sD,iBAAclrD,EACnB3B,KAAK8sD,cAAWnrD,EAChB3B,KAAK+sD,iBAAcprD,EACnB3B,KAAKg+C,QAAU,EACfh+C,KAAK0B,EAAI,EACT1B,KAAKgtD,MAAQ,EACbhtD,KAAKitD,QAAU,EACfjtD,KAAKoqD,UAAY,GACjBpqD,KAAKktD,iBAAmB,GAExBltD,KAAK6+B,OAAS,EACd7+B,KAAKmiC,QAAU,EACfniC,KAAKk+B,oBAAsB,EAC3Bl+B,KAAKm+B,qBAAuB,EAC5Bn+B,KAAK04B,UAAY,EACjB14B,KAAK24B,WAAa,EAClB34B,KAAKmtD,YAAc,EACnBntD,KAAKotD,aAAe,EACpBptD,KAAKqtD,UAAY,GACjBrtD,KAAKuI,MAAQ,EACbvI,KAAK45B,iBAAmB,CAIpBC,QAAS,CAAE9C,KAAM,EAAGC,MAAO,IAGnCzzB,sBAAsB+pD,GAClB,MAAMC,EAAWD,EAASD,UACpBn9C,EAAQq9C,EAASjyB,QAAQgyB,GAC/B,GAAIp9C,EAAQ,EAAIq9C,EAAS3pD,OACrB,OAAO2pD,EAASr9C,EAAQ,GAEhCs9C,YACI,OAAOxtD,KAAK0sD,OAEhB3lD,OACI,OAAO/G,KAAK0B,EAEhByF,KAAKzF,GAID,OAHA1B,KAAK0B,EAAIA,EACT1B,KAAKgtD,MAAQtrD,EACb1B,KAAKitD,QAAU,EACRjtD,KAEXytD,WACI,OAAOztD,KAAKgtD,MAEhBU,SAASV,GACLhtD,KAAKgtD,MAAQA,EACbhtD,KAAK0B,EAAIsrD,EAAQhtD,KAAKitD,QAE1BU,aACI,OAAO3tD,KAAKitD,QAEhBl0B,WAAWk0B,GACPjtD,KAAKitD,QAAUA,EACfjtD,KAAK0B,EAAI1B,KAAKgtD,MAAQC,EAE1Bl/B,WACI,OAAO/tB,KAAKuI,MAAuB,EAAfvI,KAAKg+C,QAE7B4P,WAAW5P,GAEP,OADAh+C,KAAKg+C,QAAUA,EACRh+C,KAEX6tD,cACI,OAAO7tD,KAAK4sD,SAEhBkB,cACI,OAAO9tD,KAAK8sD,SAEhBiB,iBACI,OAAO/tD,KAAK6sD,YAEhBmB,iBACI,OAAOhuD,KAAK+sD,YAEhBjC,eACI,OAAO9qD,KAAKoqD,UAOhB6D,oBAAoBC,GAChB,OAAOluD,KAAKktD,iBAAiBgB,GAEjCC,sBACI,OAAOnuD,KAAKktD,iBAEhBkB,4BACI,OAAOpuD,KAAKoqD,UAAUiE,QAAQlD,GAAaA,EAAS1wB,oBAGxD7rB,aACI,MAAM,MAAErG,EAAK,QAAE45B,EAAO,OAAEtD,EAAM,oBAAEX,EAAmB,qBAAEC,EAAoB,UAAEzF,EAAS,WAAEC,EAAU,YAAEw0B,EAAW,aAAEC,GAAkBptD,KACjI,MAAO,CACHuI,MAAAA,EACA45B,QAAAA,EACAtD,OAAAA,EACAX,oBAAAA,EACAC,qBAAAA,EACAzF,UAAAA,EACAC,WAAAA,EACAw0B,YAAAA,EACAC,aAAAA,GAGRkB,iBACI,OAAOtuD,KAAK2sD,YAEhB4B,eAAeC,GACXxuD,KAAK2sD,YAAc6B,EACnBxuD,KAAKs8B,cAAe,EAExB2vB,YAAYd,EAAU+C,GAClB,IAAK/C,EACD,MAAM,IAAIlqD,EAAa,cAAe,2BAE1C,IAAKkqD,EAAS/wB,oBAAqB,CAC/B,MAAM1L,EAAQy8B,EAAShxB,WACnBzL,EAAMtpB,YAAYpF,KAAK4sD,YACvB5sD,KAAK4sD,SAAWl+B,EAAMlpB,QACtBxF,KAAK6sD,YAAc1B,IAEF,MAAjBnrD,KAAK8sD,UAIAp+B,EAAMppB,SAAStF,KAAK8sD,aAHzB9sD,KAAK8sD,SAAWp+B,EAAMlpB,QACtBxF,KAAK+sD,YAAc5B,GAW3B,OAJAA,EAAShvB,eAAen8B,MACxBA,KAAKoqD,UAAU/7B,KAAK88B,GACpBnrD,KAAKktD,iBAAiBgB,GAAc,GAAK/C,EACzCnrD,KAAKs8B,cAAe,EACbt8B,KAEXq8B,YACI,GAAIr8B,KAAKs8B,aACL,OAAOt8B,KACX,IAAK,IAAIwG,EAAI,EAAGA,EAAIxG,KAAKoqD,UAAUxmD,SAAU4C,EAAG,CAC5C,MAAM2kD,EAAWnrD,KAAKoqD,UAAU5jD,GAChC2kD,EAAS9uB,YACT,MAAM9tB,EAAU48C,EAASv8C,aAEzB5O,KAAKk+B,oBAAsBl7B,KAAK6E,IAAI7H,KAAKk+B,oBAAqB3vB,EAAQ2vB,qBACtEl+B,KAAKm+B,qBAAuBn7B,KAAK6E,IAAI7H,KAAKm+B,qBAAsB5vB,EAAQ4vB,sBAExEn+B,KAAK6+B,OAAS77B,KAAK6E,IAAI7H,KAAK6+B,OAAQtwB,EAAQswB,QAE5C7+B,KAAKmiC,QAAUn/B,KAAK6E,IAAI7H,KAAKmiC,QAAS5zB,EAAQ2zB,YAAc,GAE5DliC,KAAK04B,UAAY11B,KAAK6E,IAAI7H,KAAK04B,UAAWnqB,EAAQmqB,WAClD14B,KAAK24B,WAAa31B,KAAK6E,IAAI7H,KAAK24B,WAAYpqB,EAAQoqB,YAEpD34B,KAAKmtD,YAAcnqD,KAAK6E,IAAI7H,KAAKmtD,YAAa5+C,EAAQmqB,UAAYnqB,EAAQ2vB,qBAC1El+B,KAAKotD,aAAepqD,KAAK6E,IAAI7H,KAAKotD,aAAc7+C,EAAQoqB,WAAapqB,EAAQ4vB,sBAE7En+B,KAAKuI,MAAQvI,KAAK6+B,OAAS7+B,KAAKmtD,YAAcntD,KAAKotD,aAEvD,OAAOptD,KAEXu8B,aACI,OAAIv8B,KAAKw8B,gBAETx8B,KAAKw8B,eAAgB,GADVx8B,KAIfu6B,sBACI,OAAOv6B,KAAK45B,kBCzKb,MAAM60B,WAAiBt4B,EAK1Bh1B,YAAY4O,GACRzO,QACAtB,KAAK+P,KAAOA,EACZ/P,KAAK0uD,SAAU,EACf1uD,KAAKq+B,eAAiB,CAClBqe,WAAY,GACZiS,uBAAwB,EACxBC,uBAAwB,GAE5B5uD,KAAK6uD,SAAWviC,EAAOwiC,cAAc9uD,KAAK+P,MAI1C,MAAMxB,EAAUvO,KAAK4O,aAQrB,GANA5O,KAAK+uD,wBAAyB,EAG9B/uD,KAAKgvD,cAAgBzgD,GAAWA,EAAQygD,cAAgBzgD,EAAQygD,cAAgB,EAChFhvD,KAAKivD,cAAgB1gD,GAAWA,EAAQ0gD,cAAgB1gD,EAAQ0gD,cAAgB,EAChFjvD,KAAKkvD,0BAA4BT,GAASS,0BAA0B5zB,QAAQt7B,KAAK+P,OAAS,GACrF/P,KAAK6uD,SACN,MAAM,IAAI5tD,EAAa,gBAAiB,wBAAwBjB,KAAK+P,SAEzE/P,KAAKmyB,QAAU5jB,EAAUA,EAAQ0+C,QAAU,EAC3CjtD,KAAKoyB,QAAU7jB,EAAUA,EAAQuzC,QAAU,EAC3C9hD,KAAKytB,MAAQ,IAAIG,EAAM5tB,KAAK6uD,SAASztD,KAAMpB,KAAKq+B,eAAeqe,WAAY,CACvE7qB,SAAU,YAAY7xB,KAAK6uD,SAASztD,SAGpCqtD,GAASU,uBAAuB7zB,QAAQt7B,KAAK+P,OAAS,IACtD/P,KAAK0uD,SAAU,GAIdngD,GACDvO,KAAKytB,MAAM8H,UAAU,GAAK,GAIvBjyB,sBACP,MAAO,WAGXC,cAAcsnB,EAAWkX,GACrB,IAAKlX,GAAkC,IAArBA,EAAUjnB,OACxB,OAAO,EACX,IAAI2E,EAAQ,EACR05B,EAAcF,EAAME,YACpBD,EAAaD,EAAMC,WACnB8f,EAAU,EACd,IAAK,IAAIt7C,EAAI,EAAGA,EAAIqkB,EAAUjnB,SAAU4C,EAAG,CACvC,MAAMqoD,EAAWhkC,EAAUrkB,GACrBq2C,EAAY,EAiBlB,GAhBI4R,GAASW,gBAAgB9zB,QAAQuzB,EAAS9+C,OAAS,IACnD8+C,EAAS18B,SAAW8P,EAAc,GAElCwsB,GAASY,eAAe/zB,QAAQuzB,EAAS9+C,OAAS,IAClD8+C,EAAS18B,SAAW6P,EAAa,GAEjC6sB,EAASG,eAAiBH,EAAS18B,QAAU,EAC7C6P,GAAc6sB,EAASG,cAElBH,EAASG,eAAiBH,EAAS18B,QAAU,EAClD8P,GAAe4sB,EAASG,cAGxBzmD,EAAQvF,KAAK6E,IAAIgnD,EAAS9gC,WAAYxlB,GAGtCkmD,GAASa,qBAAqBh0B,QAAQuzB,EAAS9+C,OAAS,EAAG,CAGtCtO,EAAQotD,EAASz3B,KAAM,kBAC3BuJ,iBAAmB,GAAKkuB,EAAS/2B,gBAAkB3B,EAASE,SAASO,OAClFmL,EAAM+Y,eAAiB+B,EACvBgS,EAASz8B,SAAW0vB,EACpBA,GAAW+M,EAASphC,MAAMuE,KAAK9qB,SAG/B66B,EAAM3L,WAAaymB,EACnBgS,EAASz8B,SAAW0vB,EACpBA,GAAW+M,EAASphC,MAAMuE,KAAK9qB,aAI/B2nD,EAAS/2B,gBAAkB3B,EAASE,SAASO,OAC7Ci4B,EAAS72B,YAAY+J,EAAM+Y,eAC3B/Y,EAAM+Y,eAAiB+B,IAGvBgS,EAAS72B,YAAY+J,EAAM3L,WAC3B2L,EAAM3L,WAAaymB,GAQ/B,OAFA9a,EAAMC,WAAaA,EAAaz5B,EAAQ,EACxCw5B,EAAME,YAAcA,EAAc15B,EAAQ,GACnC,EAMA4mD,oCACP,MAAO,CAAC,OAAQ,WAAY,SAMrBE,4BACP,MAAO,CAAC,SAMDH,uCACP,MAAO,CAAC,OAAQ,OAAQ,WAAY,WAAY,OAAQ,gBAAiB,cAAe,SAMjFE,6BACP,MAAO,CAAC,OAAQ,OAAQ,WAAY,WAAY,WAAY,QAAS,QAG9DE,kCACP,MAAO,CAAC,OAAQ,gBAAiB,eAOrC1gD,aACI,OAAO0d,EAAO+V,mBAAmBzzB,aAAaK,OAAOsgD,cAAcvvD,KAAK6uD,SAASztD,MAGrFouD,WAAWd,GAEP,OADA1uD,KAAK0uD,QAAUA,EACR1uD,KAGXyvD,mBAAmBC,GACf,MAAMliC,EAAQxtB,KAAKq+B,eAAeqe,WAAa,IAG/C,OAFA18C,KAAK2vD,gBAAkB,IAAI/hC,EAAMtB,EAAOsjC,gBAAgBF,GAAOtuD,KAAMosB,GACrExtB,KAAK2vD,gBAAgBp6B,UAAU,GAAK,GAC7Bv1B,KAGX6vD,mBAAmBH,GACf,MAAMliC,EAAQxtB,KAAKq+B,eAAeqe,WAAa,IAG/C,OAFA18C,KAAK8vD,gBAAkB,IAAIliC,EAAMtB,EAAOsjC,gBAAgBF,GAAOtuD,KAAMosB,GACrExtB,KAAK8vD,gBAAgBv6B,UAAU,GAAK,GAC7Bv1B,KAGXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cACL,MAAMi8C,EAAU34B,EAAKkL,mBACfxN,EAAQsC,EAAKzB,aACb4lB,EAAcl7C,OAAO+Q,KAAKpR,KAAK2Q,aAAa,YAAYzO,KAAK,KACnEwxB,EAAIgd,UAAU6K,EAAav7C,KAAK2Q,aAAa,OAE7C,MAAMq/C,EAAc54B,EAAKsQ,YAAYhD,aACrC,IAAI/9B,EAAIopD,IAAYjtB,EAAKgB,KAAOksB,EAAY/qB,MAAQ+qB,EAAYhrB,KAE5D2P,GAAUvd,KACNA,EAAKiK,UACD0uB,IAAYjtB,EAAKgB,OACjBn9B,EAAImuB,EAAMmM,eAAejhC,KAAKo2B,YAKlCzvB,EAAImuB,EAAMmM,eAAejhC,KAAKo2B,YAGtC,MAAM65B,EAAyBF,IAAYjtB,EAAKgB,KAC1C8C,EAAU9R,EAAM+R,yBACtB,IAAI6E,EAAc,GAEbukB,GAA0B74B,EAAKsK,YAChCgK,GAAe,IAEnB,MACMwkB,EAAqBvpD,EADNigC,GAAW5mC,KAAKo2B,UAAYsV,GAG3CkB,EAAQxV,EAAK0K,mBAAmB9hC,KAAKoxB,SAAUpxB,KAAKkQ,OAC1D,IAAIigD,EAASvjB,EAAMlrC,EAGf0uD,EAASpwD,KAAKkvD,0BACZtiB,EAAMjmC,EACN3D,KAAK8hC,IAAIhQ,EAAMmM,eAAejhC,KAAKo2B,WAAY85B,GAGrD,GAFAE,GAAUpwD,KAAKoyB,QAEXpyB,KAAK0uD,QAAS,CACd,IAAI2B,EAAc,EAClB,MAAMC,EAASH,GAAUr7B,EAAM/tB,OAAS,IACxC,QAAyBpF,IAArB3B,KAAKqwD,YACLA,EAAcrwD,KAAKqwD,gBAElB,CACDA,GAAerwD,KAAKytB,MAAM7e,aAAarG,MAAQ,EAC/C,MAAMgoD,EAAc9D,GAAY+D,eAAep5B,EAAKmB,kBAEhD83B,GADAE,EAC+C,IAA/BA,EAAYxpD,OAASupD,GAGuB,IAA5Cx7B,EAAM/tB,OAAS+tB,EAAM/G,WAAauiC,GAEtDtwD,KAAKqwD,YAAcA,EAEvBF,GAAUE,GA7OtB,YAAcvuD,GACN2sD,GAAS/oB,OACT9jC,EAAI,oBAAqBE,GA6OzB,CAAE,uBAAwB9B,KAAK6uD,SAAUsB,EAAQC,GAC7CpwD,KAAK8vD,kBACL9vD,KAAK8vD,gBAAgBt6B,OAAO9B,EAAKy8B,EAAQC,GACzCA,GAAUpwD,KAAK8vD,gBAAgBlhD,aAAapG,OAC5C4nD,GAAUpwD,KAAKq+B,eAAeswB,wBAE9B3uD,KAAKivD,eAAiB73B,EAAKiK,WAAyC,IAA5BjK,EAAKkL,qBAC7C8tB,GAAUpwD,KAAKivD,eAEf73B,EAAKuJ,gBAAkB,GAAK8tB,GAASU,uBAAuB7zB,QAAQt7B,KAAK+P,OAAS,IAClFqgD,EAASh5B,EAAKzB,aAAa1hB,iBAAiBjN,OAAS,IAEzDhH,KAAKytB,MAAM+H,OAAO9B,EAAKy8B,EAASnwD,KAAKmyB,QAASi+B,GAC1CpwD,KAAK2vD,kBACLS,GAAUpwD,KAAKytB,MAAM7e,aAAapG,OAASxI,KAAKq+B,eAAeuwB,uBAC/D5uD,KAAK2vD,gBAAgBn6B,OAAO9B,EAAKy8B,EAAQC,IAE7C18B,EAAIkd,cAIZ6d,GAAS/oB,OAAQ,ECxQV,MAAM+qB,WAAoBt6B,EAM7Bh1B,YAAYiwB,GACR9vB,QACAtB,KAAKoxB,SAAWA,MAAAA,EAA2CA,EAAW+E,EAASE,SAASC,KACxFt2B,KAAK8xB,MAAQxF,EAAO+V,mBAAmBnzB,aAAa,6BACpDlP,KAAKk3B,SAAS5K,EAAO+V,mBAAmBnzB,aAAa,8BAE9C5L,sBACP,MAAO,cAGXC,sBAAsB4qB,GAClB,IAAK,MAAMiJ,KAAQjJ,EACf,IAAK,IAAI3nB,EAAI,EAAGA,EAAI4wB,EAAKhmB,KAAKxN,OAAQ4C,IAClC4wB,EAAK4E,YAAYx1B,EAAG,IAAIiqD,GAAY/+B,EAAiB4E,OACrDc,EAAK4E,YAAYx1B,EAAG,IAAIiqD,GAAY/+B,EAAiBuF,QAKjE1zB,cAAcmtD,EAAa3uB,GACvB,MAAM,YAAEE,EAAW,WAAED,GAAeD,EACpC,IAAK2uB,GAAsC,IAAvBA,EAAY9sD,OAC5B,OAAO,EACX,IAAI+sD,EAAW,EACXC,EAAW,EACf,IAAK,IAAIpqD,EAAI,EAAGA,EAAIkqD,EAAY9sD,SAAU4C,EAAG,CACzC,MAAMqqD,EAAcH,EAAYlqD,GAC1B4wB,EAAOy5B,EAAY15B,UACnBoxB,EAAMsI,EAAY/4B,cAClB5nB,EAAQ2gD,EAAYr5B,aACpBmT,EAAQvT,EAAKyL,cAAc3yB,GACjC,IAAIpM,EAAQ,EACRykD,IAAQ72B,EAAiBuF,QACzBnzB,GAAS6mC,EAAMvd,UAAYgK,EAAKoJ,0BAA4B,GAAKyB,EACjE2uB,GAAY9sD,EAAQ+sD,EAAYtoD,OAEhCggD,IAAQ72B,EAAiB4E,OACzBxyB,GAAS6mC,EAAMvd,UAAYgK,EAAKmJ,yBAA2B,GAAKyB,EAChE2uB,GAAY7sD,EAAQ+sD,EAAYtoD,OAEpCsoD,EAAY97B,UAAUjxB,GAI1B,OAFAi+B,EAAMC,YAAc2uB,EACpB5uB,EAAME,aAAe2uB,GACd,EAGXt5B,QAAQF,GAQJ,OAPAp3B,KAAKo3B,KAAOA,EACZp3B,KAAK8xB,MAAQxF,EAAO+V,mBAAmBnzB,aAAa,6BACpDlP,KAAKk3B,SAAS5K,EAAO+V,mBAAmBnzB,aAAa,8BAC1B,cAAvBkoB,EAAKnlB,gBACLjS,KAAK8xB,MAAQxF,EAAO+V,mBAAmBnzB,aAAa,+BACpDlP,KAAKk3B,SAAS5K,EAAO+V,mBAAmBnzB,aAAa,iCAElDlP,KAGXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cACL,MAAM84B,EAAQxV,EAAK0K,mBAAmB9hC,KAAKoxB,SAAUpxB,KAAKkQ,MAAO,CAAE49B,gBAAgB,IAC7EpsC,EAAIkrC,EAAMlrC,EAAI1B,KAAKmyB,QACnBxrB,EAAIimC,EAAMjmC,EAAI3G,KAAKoyB,QACrBpyB,KAAKoxB,UAAY+E,EAASE,SAASY,MACnCrJ,EAAM2Z,YAAY7T,EAAKhyB,EAAI,EAAGiF,EAAG3G,KAAK8xB,MAAO,2BAA4B,CACrED,SAAU,+CAGT7xB,KAAKoxB,UAAY+E,EAASE,SAASC,MACxC1I,EAAM2Z,YAAY7T,EAAKhyB,EAAI,EAAGiF,EAAG3G,KAAK8xB,MAAO,0BAA2B,CACpED,SAAU,+CC7EnB,SAASi/B,GAAaC,GACzB,IAAKA,EACD,OAAO,EACX,MAAM1P,EAAS9/C,IACf,MAEqC,mBAA7B8/C,EAAO2P,mBAAoCD,aAAmB1P,EAAO2P,mBAG1C,mBAAvBD,EAAQ78C,YAA0D,mBAAtB68C,EAAQE,UCP7D,MAAMC,WAAsBl4B,EAC/B73B,YAAYsR,GACRnR,QAEAtB,KAAKmxD,WAAa,EAClBnxD,KAAKoxD,UAAY3+C,EACZA,EAAQ4+C,OAOTrxD,KAAKqxD,OAAS5+C,EAAQ4+C,OANtBrxD,KAAKqxD,OAAS,CACV9oD,MAAO2oD,GAAcntB,MACrBv7B,OAAQ0oD,GAAcltB,QAOvBD,mBACP,OAAO,IAEAC,oBACP,OAAO,IAEAstB,uCACP,OAAO,MAMX/tD,0BAA0BgF,EAAOC,GAC7B,MAAM+oD,EAAQvxD,KAAKsxD,0BAUnB,OATItuD,KAAK6E,IAAIU,EAAOC,GAAU+oD,IAC1BnvD,EAAK,uDAAyDmvD,GAC1DhpD,EAAQgpD,IACRhpD,EAAQgpD,GAER/oD,EAAS+oD,IACT/oD,EAAS+oD,IAGV,CAAChpD,EAAOC,GAKnB6H,QACIrQ,KAAKoxD,UAAU3Z,UAAU,EAAG,EAAGz3C,KAAKqxD,OAAO9oD,MAAOvI,KAAKqxD,OAAO7oD,QAGlEkoC,UAAU3T,EAAKjtB,EAAIgC,IAGnB8+B,cAIAvsC,IAAImtD,IAGJx+C,aAAa1G,GAET,OADAtM,KAAKoxD,UAAUr+C,UAAYzG,EACpBtM,KAIXyxD,uBAAuBnlD,GAEnB,OAAOtM,KAEXkT,eAAe5G,GAEX,OADAtM,KAAKoxD,UAAUn+C,YAAc3G,EACtBtM,KAEX4S,eAAewsB,GAEX,OADAp/B,KAAKoxD,UAAUz+C,YAAcysB,EACtBp/B,KAEX8S,cAAc4+C,GAKV,MAAMhuD,EAAI1D,KAAKoxD,UAAUO,eACnBnkC,EAAQxqB,KAAKkH,KAAKxG,EAAElB,EAAIkB,EAAElB,EAAIkB,EAAEjB,EAAIiB,EAAEjB,EAAIiB,EAAEqG,EAAIrG,EAAEqG,EAAIrG,EAAES,EAAIT,EAAES,GAEpE,OADAnE,KAAKoxD,UAAUv+C,WAAa2a,EAAQkkC,EAC7B1xD,KAEXoT,aAAa7K,GAET,OADAvI,KAAKoxD,UAAUj+C,UAAY5K,EACpBvI,KAEX4xD,WAAWC,GAEP,OADA7xD,KAAKoxD,UAAUU,QAAUD,EAClB7xD,KAEX+xD,YAAYC,GAER,OADAhyD,KAAKoxD,UAAUW,YAAYC,GACpBhyD,KAEXwtB,MAAM9rB,EAAGiF,GAEL,OADA3G,KAAKoxD,UAAU5jC,MAAM9rB,EAAGiF,GACjB3G,KAEXiyD,OAAO1pD,EAAOC,GACV,MAAM6oD,EAASrxD,KAAKoxD,UAAUC,OACxBa,EAAmB3wD,IAAe2wD,kBAAoB,EAc5D,OAZC3pD,EAAOC,GAAU0oD,GAAciB,mBAAmB5pD,EAAQ2pD,EAAkB1pD,EAAS0pD,GAEtF3pD,EAASA,EAAQ2pD,EAAoB,EACrC1pD,EAAUA,EAAS0pD,EAAoB,EACvCb,EAAO9oD,MAAQA,EAAQ2pD,EACvBb,EAAO7oD,OAASA,EAAS0pD,EAGrBpB,GAAaO,KACbA,EAAO/kD,MAAM/D,MAAQA,EAAQ,KAC7B8oD,EAAO/kD,MAAM9D,OAASA,EAAS,MAE5BxI,KAAKwtB,MAAM0kC,EAAkBA,GAExCE,KAAK1wD,EAAGiF,EAAG4B,EAAOC,GAEd,OADAxI,KAAKoxD,UAAUgB,KAAK1wD,EAAGiF,EAAG4B,EAAOC,GAC1BxI,KAEXqyD,SAAS3wD,EAAGiF,EAAG4B,EAAOC,GAElB,OADAxI,KAAKoxD,UAAUiB,SAAS3wD,EAAGiF,EAAG4B,EAAOC,GAC9BxI,KAKXy3C,UAAU/1C,EAAGiF,EAAG4B,EAAOC,GAEnB,OADAxI,KAAKoxD,UAAU3Z,UAAU/1C,EAAGiF,EAAG4B,EAAOC,GAC/BxI,KAEXk0B,YAEI,OADAl0B,KAAKoxD,UAAUl9B,YACRl0B,KAEXm0B,OAAOzyB,EAAGiF,GAEN,OADA3G,KAAKoxD,UAAUj9B,OAAOzyB,EAAGiF,GAClB3G,KAEXo0B,OAAO1yB,EAAGiF,GAEN,OADA3G,KAAKoxD,UAAUh9B,OAAO1yB,EAAGiF,GAClB3G,KAEXs0B,cAAcg+B,EAAMC,EAAMC,EAAMC,EAAM/wD,EAAGiF,GAErC,OADA3G,KAAKoxD,UAAU98B,cAAcg+B,EAAMC,EAAMC,EAAMC,EAAM/wD,EAAGiF,GACjD3G,KAEXq0B,iBAAiBq+B,EAAKC,EAAKjxD,EAAGiF,GAE1B,OADA3G,KAAKoxD,UAAU/8B,iBAAiBq+B,EAAKC,EAAKjxD,EAAGiF,GACtC3G,KAEXs/B,IAAI59B,EAAGiF,EAAGktC,EAAQ+e,EAAYC,EAAUC,GAEpC,OADA9yD,KAAKoxD,UAAU9xB,IAAI59B,EAAGiF,EAAGktC,EAAQ+e,EAAYC,EAAUC,GAChD9yD,KAEXu0B,OAEI,OADAv0B,KAAKoxD,UAAU78B,OACRv0B,KAEXgtB,SAEI,OADAhtB,KAAKoxD,UAAUpkC,SACRhtB,KAEXu/B,YAEI,OADAv/B,KAAKoxD,UAAU7xB,YACRv/B,KAEXw1C,YAAY1yC,GACR,MAAMyL,EAAUvO,KAAKoxD,UAAU5b,YAAY1yC,GAC3C,IAAI6D,EAAI,EACJ6B,EAAS,EAUb,OATI+F,EAAQwkD,uBACRpsD,GAAK4H,EAAQwkD,sBACbvqD,EAAS+F,EAAQykD,uBAAyBzkD,EAAQwkD,wBAGlDpsD,GAAK4H,EAAQ0kD,wBACbzqD,EAAS+F,EAAQ2kD,yBAA2B3kD,EAAQ0kD,yBAGjD,CACHvxD,EAAG,EACHiF,EAAGA,EACH4B,MAAOgG,EAAQhG,MACfC,OAAQA,GAGhB02B,SAASp8B,EAAMpB,EAAGiF,GAEd,OADA3G,KAAKoxD,UAAUlyB,SAASp8B,EAAMpB,EAAGiF,GAC1B3G,KAEX0S,OAEI,OADA1S,KAAKoxD,UAAU1+C,OACR1S,KAEXsT,UAEI,OADAtT,KAAKoxD,UAAU99C,UACRtT,KAEP+S,cAAUzG,GACVtM,KAAKoxD,UAAUr+C,UAAYzG,EAE3ByG,gBACA,OAAO/S,KAAKoxD,UAAUr+C,UAEtBE,gBAAY3G,GACZtM,KAAKoxD,UAAUn+C,YAAc3G,EAE7B2G,kBACA,OAAOjT,KAAKoxD,UAAUn+C,YAU1BmB,QAAQ/N,EAAG+F,EAAMC,EAAQC,GACrB,MAAMY,EAAW1B,EAAKsJ,SAASzO,EAAG+F,EAAMC,EAAQC,GAGhD,OAFAtM,KAAKoxD,UAAUtkD,KAAOtB,EAAK6I,YAAYnH,GACvClN,KAAKmxD,WAAa3lD,EAAK8J,wBAAwBpI,EAASd,MACjDpM,KAGX+U,UACI,OAAO/U,KAAKoxD,UAAUtkD,MC3O9B,MAAMqmD,GAAuB,CACzBC,KAAM,CACF1xD,GAAG,EACHiF,GAAG,EACH4B,OAAO,EACPC,QAAQ,EACR,eAAe,EACf,eAAe,EACf,cAAc,EACd,aAAa,GAEjB4pD,KAAM,CACF,eAAe,EACf,eAAe,EACf,cAAc,EACd,aAAa,GAEjBtvD,KAAM,CACFyF,OAAO,EACPC,QAAQ,IAIV6qD,GAAS,6BACTC,GAAS,EAAItwD,KAAKC,GA+CjB,MAAMswD,WAAmBv6B,EAC5B73B,YAAY4vD,GACRzvD,QACAtB,KAAKuI,MAAQ,EACbvI,KAAKwI,OAAS,EACdxI,KAAKwzD,oBAAsB,QAE3BxzD,KAAKyzD,cAAgB,GACrBzzD,KAAK+wD,QAAUA,EAEf,MAAM2C,EAAM1zD,KAAKy6C,OAAO,OACxBz6C,KAAK+wD,QAAQ4C,YAAYD,GACzB1zD,KAAK0zD,IAAMA,EACX1zD,KAAK4zD,OAAS5zD,KAAK0zD,IACnB1zD,KAAKqsD,OAAS,CAACrsD,KAAK0zD,KACpB1zD,KAAKozD,KAAO,GACZpzD,KAAK6zD,IAAM,CAAEnyD,EAAGuG,IAAKtB,EAAGsB,KACxBjI,KAAKmT,UAAY,EACjB,MAAM2gD,EAAwB,CAC1B,cAAetoD,EAAKiB,WACpB,YAAajB,EAAKI,KAAO,KACzB,cAAexB,EAAWsC,OAC1B,aAAcrC,EAAUqC,QAE5B1M,KAAK+hC,MAAQ1hC,OAAOwU,OAAO,CAAE2Y,MAAO,CAAE9rB,EAAG,EAAGiF,EAAG,IAAOmtD,GACtD9zD,KAAK+zD,WAAa1zD,OAAOwU,OAAO,CAAE,eAAgB,GAAK,mBAAoB,OAAQ0f,KAAM,QAASvH,OAAQ,SAAW8mC,GACrH9zD,KAAKg0D,kBAAoB,CACrBzrD,MAAO,EACP62B,MAAO,SAEXp/B,KAAKi0D,YAAc,GAEvBxZ,OAAOyZ,GACH,OAAOtnD,SAASunD,gBAAgBd,GAAQa,GAG5CxjB,UAAU3T,EAAKjtB,EAAIgC,GACf,MAAMslC,EAAQp3C,KAAKy6C,OAAO,KAW1B,OAVAz6C,KAAKqsD,OAAOh+B,KAAK+oB,GACjBp3C,KAAK4zD,OAAOD,YAAYvc,GACxBp3C,KAAK4zD,OAASxc,EACVra,GACAqa,EAAMvmC,aAAa,QAAShO,EAAOk6B,IACnCjtB,GACAsnC,EAAMvmC,aAAa,KAAMhO,EAAOiN,IAChCgC,GAASA,EAAMq/B,aACfiG,EAAMvmC,aAAa,iBAAkB,gBAElCumC,EAEXxG,aACI5wC,KAAKqsD,OAAO1wB,MACZ37B,KAAK4zD,OAAS5zD,KAAKqsD,OAAOrsD,KAAKqsD,OAAOzoD,OAAS,GAEnDS,IAAIkM,GACAvQ,KAAK4zD,OAAOD,YAAYpjD,GAE5ByC,aAAa1G,GAET,OADAtM,KAAK+zD,WAAWx/B,KAAOjoB,EAChBtM,KAMXyxD,uBAAuBnlD,GAEnB,OADAtM,KAAKwzD,oBAAsBlnD,EACpBtM,KAEXkT,eAAe5G,GAEX,OADAtM,KAAK+zD,WAAW/mC,OAAS1gB,EAClBtM,KAEX4S,eAAewsB,GAEX,OADAp/B,KAAKg0D,kBAAkB50B,MAAQA,EACxBp/B,KAOX8S,cAAc4+C,GAEV,OADA1xD,KAAKg0D,kBAAkBzrD,MAAQmpD,EACxB1xD,KAMXoT,aAAa7K,GAGT,OAFAvI,KAAK+zD,WAAW,gBAAkBxrD,EAClCvI,KAAKmT,UAAY5K,EACVvI,KAQX+xD,YAAYqC,GACR,GAAiD,mBAA7C/zD,OAAOS,UAAUiF,SAAS/E,KAAKozD,GAE/B,OADAp0D,KAAK+zD,WAAW,oBAAsBK,EAASlyD,KAAK,KAC7ClC,KAGP,MAAM,IAAIiB,EAAa,gBAAiB,0CAOhD2wD,WAAWC,GAEP,OADA7xD,KAAK+zD,WAAW,kBAAoBlC,EAC7B7xD,KAOXiyD,OAAO1pD,EAAOC,GACVxI,KAAKuI,MAAQA,EACbvI,KAAKwI,OAASA,EACdxI,KAAK+wD,QAAQzkD,MAAM/D,MAAQA,EAAMxC,WACjC/F,KAAK0zD,IAAIpnD,MAAM/D,MAAQA,EAAMxC,WAC7B/F,KAAK0zD,IAAIpnD,MAAM9D,OAASA,EAAOzC,WAC/B,MAAMguD,EAAa,CACfxrD,MAAAA,EACAC,OAAAA,GAIJ,OAFAxI,KAAKq0D,gBAAgBr0D,KAAK0zD,IAAKK,GAC/B/zD,KAAKwtB,MAAMxtB,KAAK+hC,MAAMvU,MAAM9rB,EAAG1B,KAAK+hC,MAAMvU,MAAM7mB,GACzC3G,KAEXwtB,MAAM9rB,EAAGiF,GAYL3G,KAAK+hC,MAAMvU,MAAQ,CAAE9rB,EAAAA,EAAGiF,EAAAA,GACxB,MAAM2tD,EAAet0D,KAAKuI,MAAQ7G,EAC5B6yD,EAAgBv0D,KAAKwI,OAAS7B,EAEpC,OADA3G,KAAKw0D,WAAW,EAAG,EAAGF,EAAcC,GAC7Bv0D,KAMXw0D,WAAWC,EAAiBtnB,EAAM5kC,EAAOC,GACrC,GAA+B,iBAApBisD,EACPz0D,KAAK0zD,IAAI7iD,aAAa,UAAW4jD,OAEhC,CACD,MAAMC,EAAgBD,EAAkB,IAAMtnB,EAAO,IAAM5kC,EAAQ,IAAMC,EACzExI,KAAK0zD,IAAI7iD,aAAa,UAAW6jD,IAIzCL,gBAAgBtD,EAASgD,GACrB,MAAMY,EAAoBxB,GAAqBpC,EAAQ6D,UACvD,IAAK,MAAMC,KAAYd,EACfY,GAAqBA,EAAkBE,IAG3C9D,EAAQ+D,eAAe,KAAMD,EAAUd,EAAWc,IAEtD,OAAO9D,EAGX1gD,QASI,KAAOrQ,KAAK0zD,IAAIqB,WACZ/0D,KAAK0zD,IAAIsB,YAAYh1D,KAAK0zD,IAAIqB,WAGlC/0D,KAAKwtB,MAAMxtB,KAAK+hC,MAAMvU,MAAM9rB,EAAG1B,KAAK+hC,MAAMvU,MAAM7mB,GAGpDyrD,KAAK1wD,EAAGiF,EAAG4B,EAAOC,EAAQurD,GAElBvrD,EAAS,IACT7B,GAAK6B,EACLA,IAAW,GAEf,MAAMysD,EAAYj1D,KAAKy6C,OAAO,QAI9B,OAHAsZ,EAAaA,MAAAA,EAA+CA,EAAa,CAAEx/B,KAAM,OAAQ,eAAgBv0B,KAAKmT,UAAW6Z,OAAQ,SACjIhtB,KAAKq0D,gBAAgBY,EAAW50D,OAAOwU,OAAO,CAAEnT,EAAAA,EAAGiF,EAAAA,EAAG4B,MAAAA,EAAOC,OAAAA,GAAUurD,IACvE/zD,KAAKqE,IAAI4wD,GACFj1D,KAEXqyD,SAAS3wD,EAAGiF,EAAG4B,EAAOC,GAClB,MAAMurD,EAAa,CAAEx/B,KAAMv0B,KAAK+zD,WAAWx/B,MAE3C,OADAv0B,KAAKoyD,KAAK1wD,EAAGiF,EAAG4B,EAAOC,EAAQurD,GACxB/zD,KAEXy3C,UAAU/1C,EAAGiF,EAAG4B,EAAOC,GAQnB,OADAxI,KAAKoyD,KAAK1wD,EAAGiF,EAAG4B,EAAOC,EAAQ,CAAE,eAAgB,EAAG+rB,KAAMv0B,KAAKwzD,sBACxDxzD,KAGXk0B,YAII,OAHAl0B,KAAKozD,KAAO,GACZpzD,KAAK6zD,IAAInyD,EAAIuG,IACbjI,KAAK6zD,IAAIltD,EAAIsB,IACNjI,KAEXm0B,OAAOzyB,EAAGiF,GAIN,OAHA3G,KAAKozD,MAAQ,IAAM1xD,EAAI,IAAMiF,EAC7B3G,KAAK6zD,IAAInyD,EAAIA,EACb1B,KAAK6zD,IAAIltD,EAAIA,EACN3G,KAEXo0B,OAAO1yB,EAAGiF,GAIN,OAHA3G,KAAKozD,MAAQ,IAAM1xD,EAAI,IAAMiF,EAC7B3G,KAAK6zD,IAAInyD,EAAIA,EACb1B,KAAK6zD,IAAIltD,EAAIA,EACN3G,KAEXs0B,cAActsB,EAAIE,EAAIC,EAAIC,EAAI1G,EAAGiF,GAI7B,OAHA3G,KAAKozD,MAAQ,IAAMprD,EAAK,IAAME,EAAK,IAAMC,EAAK,IAAMC,EAAK,IAAM1G,EAAI,IAAMiF,EACzE3G,KAAK6zD,IAAInyD,EAAIA,EACb1B,KAAK6zD,IAAIltD,EAAIA,EACN3G,KAEXq0B,iBAAiBrsB,EAAIE,EAAIxG,EAAGiF,GAIxB,OAHA3G,KAAKozD,MAAQ,IAAMprD,EAAK,IAAME,EAAK,IAAMxG,EAAI,IAAMiF,EACnD3G,KAAK6zD,IAAInyD,EAAIA,EACb1B,KAAK6zD,IAAIltD,EAAIA,EACN3G,KAEXs/B,IAAI59B,EAAGiF,EAAGktC,EAAQ+e,EAAYC,EAAUC,GACpC,MAAMoC,EAAKxzD,EAAImyC,EAAS7wC,KAAKkwC,IAAI0f,GAC3BuC,EAAKxuD,EAAIktC,EAAS7wC,KAAKmwC,IAAIyf,GAIjC,IAAME,GAAoBD,EAAWD,GAAcU,IAC9CR,GAAoBF,EAAaC,GAAYS,GAAS,CACvD,MAAMtrD,EAAKtG,EAAImyC,EAAS7wC,KAAKkwC,IAAI0f,EAAa5vD,KAAKC,IAC7CiF,EAAKvB,EAAIktC,EAAS7wC,KAAKmwC,IAAIyf,EAAa5vD,KAAKC,IAGnDjD,KAAKozD,MAAQ,IAAI8B,KAAMC,MAAOthB,KAAUA,WAAgB7rC,KAAME,KAC9DlI,KAAKozD,MAAQ,IAAIvf,KAAUA,WAAgBqhB,KAAMC,IACjDn1D,KAAK6zD,IAAInyD,EAAIwzD,EACbl1D,KAAK6zD,IAAIltD,EAAIwuD,MAEZ,CACD,MAAMntD,EAAKtG,EAAImyC,EAAS7wC,KAAKkwC,IAAI2f,GAC3B3qD,EAAKvB,EAAIktC,EAAS7wC,KAAKmwC,IAAI0f,GAGjC,IAAIuC,EAFJxC,EAAa7vD,EAAe6vD,GAC5BC,EAAW9vD,EAAe8vD,GAGtBuC,EADApyD,KAAK8C,IAAI+sD,EAAWD,GAAc5vD,KAAKC,GAC/B6vD,GAGCA,EAETF,EAAaC,IACbuC,GAASA,GAEb,MAAMC,GAASvC,EACf9yD,KAAKozD,MAAQ,IAAI8B,KAAMC,MAAOthB,KAAUA,QAAauhB,MAAUC,KAASrtD,KAAME,IAC9ElI,KAAK6zD,IAAInyD,EAAIsG,EACbhI,KAAK6zD,IAAIltD,EAAIuB,EAEjB,OAAOlI,KAEXu/B,YAEI,OADAv/B,KAAKozD,MAAQ,IACNpzD,KAEXs1D,iBACI,MAAMC,EAAKv1D,KAAKg0D,kBAIhB,MAAO,2BAA2BuB,EAAGhtD,MAAQ,SAASgtD,EAAGn2B,SAE7D7K,KAAKw/B,GACD,MAAMX,EAAOpzD,KAAKy6C,OAAO,QAUzB,YAT0B,IAAfsZ,IACPA,EAAa1zD,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAK+zD,YAAa,CAAE/mC,OAAQ,UAE7E+mC,EAAW5vD,EAAInE,KAAKozD,KAChBpzD,KAAKg0D,kBAAkBzrD,MAAQ,IAC/BwrD,EAAWznD,MAAQtM,KAAKs1D,kBAE5Bt1D,KAAKq0D,gBAAgBjB,EAAMW,GAC3B/zD,KAAKqE,IAAI+uD,GACFpzD,KAEXgtB,SACI,MAAMomC,EAAOpzD,KAAKy6C,OAAO,QACnBsZ,EAAa1zD,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAK+zD,YAAa,CAAEx/B,KAAM,OAAQ,eAAgBv0B,KAAKmT,UAAWhP,EAAGnE,KAAKozD,OAM7H,OALIpzD,KAAKg0D,kBAAkBzrD,MAAQ,IAC/BwrD,EAAWznD,MAAQtM,KAAKs1D,kBAE5Bt1D,KAAKq0D,gBAAgBjB,EAAMW,GAC3B/zD,KAAKqE,IAAI+uD,GACFpzD,KAGXw1C,YAAY1yC,GACR,OAAOywD,GAAWiC,iBAAiB1hC,OAAOhxB,EAAM9C,KAAK0zD,IAAK1zD,KAAK+zD,YAEnE70B,SAASp8B,EAAMpB,EAAGiF,GACd,IAAK7D,GAAQA,EAAKc,QAAU,EACxB,OAAO5D,KAEX,MAAM+zD,EAAa1zD,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAK+zD,YAAa,CAAE/mC,OAAQ,OAAQtrB,EAAAA,EACnFiF,EAAAA,IACE8uD,EAAMz1D,KAAKy6C,OAAO,QAIxB,OAHAgb,EAAIC,YAAc5yD,EAClB9C,KAAKq0D,gBAAgBoB,EAAK1B,GAC1B/zD,KAAKqE,IAAIoxD,GACFz1D,KAGX0S,OAyBI,OAxBA1S,KAAKi0D,YAAY5lC,KAAK,CAClB0T,MAAO,CACH,cAAe/hC,KAAK+hC,MAAM,eAC1B,cAAe/hC,KAAK+hC,MAAM,eAC1B,aAAc/hC,KAAK+hC,MAAM,cACzB,YAAa/hC,KAAK+hC,MAAM,aACxBvU,MAAOxtB,KAAK+hC,MAAMvU,OAEtBumC,WAAY,CACR,cAAe/zD,KAAK+zD,WAAW,eAC/B,cAAe/zD,KAAK+zD,WAAW,eAC/B,aAAc/zD,KAAK+zD,WAAW,cAC9B,YAAa/zD,KAAK+zD,WAAW,aAC7Bx/B,KAAMv0B,KAAK+zD,WAAWx/B,KACtBvH,OAAQhtB,KAAK+zD,WAAW/mC,OACxB,eAAgBhtB,KAAK+zD,WAAW,gBAChC,mBAAoB/zD,KAAK+zD,WAAW,qBAExCC,kBAAmB,CACfzrD,MAAOvI,KAAKg0D,kBAAkBzrD,MAC9B62B,MAAOp/B,KAAKg0D,kBAAkB50B,OAElCjsB,UAAWnT,KAAKmT,YAEbnT,KAGXsT,UACI,MAAMqiD,EAAa31D,KAAKi0D,YAAYt4B,MACpC,GAAIg6B,EAAY,CACZ,MAAM5zB,EAAQ4zB,EACd31D,KAAK+hC,MAAM,eAAiBA,EAAMA,MAAM,eACxC/hC,KAAK+hC,MAAM,eAAiBA,EAAMA,MAAM,eACxC/hC,KAAK+hC,MAAM,cAAgBA,EAAMA,MAAM,cACvC/hC,KAAK+hC,MAAM,aAAeA,EAAMA,MAAM,aACtC/hC,KAAK+hC,MAAMvU,MAAQuU,EAAMA,MAAMvU,MAC/BxtB,KAAK+zD,WAAW,eAAiBhyB,EAAMgyB,WAAW,eAClD/zD,KAAK+zD,WAAW,eAAiBhyB,EAAMgyB,WAAW,eAClD/zD,KAAK+zD,WAAW,cAAgBhyB,EAAMgyB,WAAW,cACjD/zD,KAAK+zD,WAAW,aAAehyB,EAAMgyB,WAAW,aAChD/zD,KAAK+zD,WAAWx/B,KAAOwN,EAAMgyB,WAAWx/B,KACxCv0B,KAAK+zD,WAAW/mC,OAAS+U,EAAMgyB,WAAW/mC,OAC1ChtB,KAAK+zD,WAAW,gBAAkBhyB,EAAMgyB,WAAW,gBACnD/zD,KAAK+zD,WAAW,oBAAsBhyB,EAAMgyB,WAAW,oBACvD/zD,KAAKg0D,kBAAkBzrD,MAAQw5B,EAAMiyB,kBAAkBzrD,MACvDvI,KAAKg0D,kBAAkB50B,MAAQ2C,EAAMiyB,kBAAkB50B,MACvDp/B,KAAKmT,UAAY4uB,EAAM5uB,UAE3B,OAAOnT,KAEP+S,cAAUzG,GACVtM,KAAKgT,aAAa1G,GAElByG,gBACA,OAAO/S,KAAK+zD,WAAWx/B,KAEvBthB,gBAAY3G,GACZtM,KAAKkT,eAAe5G,GAEpB2G,kBACA,OAAOjT,KAAK+zD,WAAW/mC,OAY3B5Y,QAAQ/N,EAAG+F,EAAMC,EAAQC,GACrB,MAAMY,EAAW1B,EAAKsJ,SAASzO,EAAG+F,EAAMC,EAAQC,GAChDtM,KAAKyzD,cAAgBjoD,EAAK6I,YAAYnH,GACtC,MAAM0oD,EAAiB,CACnB,cAAe1oD,EAASV,OACxB,YAAaU,EAASd,KACtB,cAAec,EAASb,OACxB,aAAca,EAASZ,OAI3B,OAFAtM,KAAK+zD,WAAa1zD,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAK+zD,YAAa6B,GACpE51D,KAAK+hC,MAAQ1hC,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAK+hC,OAAQ6zB,GACnD51D,KAGX+U,UACI,OAAO/U,KAAKyzD,eCvfb,IAAIoC,GAMAC,GCPAC,GF2fXxC,GAAWiC,iBAAmB,IAje9B,MACIr0D,cAGInB,KAAK6zB,MAAQ,GAEjBC,OAAOhxB,EAAM4wD,EAAKK,GACd,IAAIh+B,EAAU/1B,KAAK6zB,MAAM/wB,QACTnB,IAAZo0B,IACAA,EAAU,GACV/1B,KAAK6zB,MAAM/wB,GAAQizB,GAEvB,MAIM51B,EAAM,GAJG4zD,EAAW,kBACbA,EAAW,gBACTA,EAAW,kBACZA,EAAW,gBAEzB,IAAI99B,EAAQF,EAAQ51B,GAKpB,YAJcwB,IAAVs0B,IACAA,EAAQj2B,KAAKg2D,YAAYlzD,EAAM4wD,EAAKK,GACpCh+B,EAAQ51B,GAAO81B,GAEZA,EAEX+/B,YAAYlzD,EAAM4wD,EAAKK,GACnB,IAAI0B,EAAMz1D,KAAKy1D,IACVA,IAGDA,EAAM7oD,SAASunD,gBAAgBd,GAAQ,QACvCrzD,KAAKy1D,IAAMA,GAEfA,EAAIC,YAAc5yD,EAClB2yD,EAAIX,eAAe,KAAM,cAAef,EAAW,gBACnD0B,EAAIX,eAAe,KAAM,YAAaf,EAAW,cACjD0B,EAAIX,eAAe,KAAM,aAAcf,EAAW,eAClD0B,EAAIX,eAAe,KAAM,cAAef,EAAW,gBACnDL,EAAIC,YAAY8B,GAChB,MAAMzjC,EAAOyjC,EAAIQ,UAEjB,OADAvC,EAAIsB,YAAYS,GACT,CAAE/zD,EAAGswB,EAAKtwB,EAAGiF,EAAGqrB,EAAKrrB,EAAG4B,MAAOypB,EAAKzpB,MAAOC,OAAQwpB,EAAKxpB,UChEvE,SAAWqtD,GACPA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAsB,IAAI,GAAK,MAFpD,CAGGA,KAAqBA,GAAmB,KAG3C,SAAWC,GACPA,EAAoBA,EAA0B,KAAI,GAAK,OACvDA,EAAoBA,EAAwB,GAAI,GAAK,KACrDA,EAAoBA,EAA0B,KAAI,GAAK,OAH3D,CAIGA,KAAwBA,GAAsB,KAI1C,MAAMI,GACT/0D,YAAYg1D,EAAMC,GACd,GAAID,aAAgBn9B,EAIhBh5B,KAAK0zB,IAAMyiC,MAEV,CACD,QAAax0D,IAATy0D,EAEA,MAAM,IAAIn1D,EAAa,kBAAmB,4BAE9C,MAAMo1D,EAAUD,EAChB,IAAIrF,EACJ,GAAmB,iBAARoF,EAAkB,CACzB,MAAMG,EAAe1pD,SAAS8D,eAAeylD,GAC7C,IAAKG,EACD,MAAM,IAAIr1D,EAAa,eAAgB,+BAA+Bq1D,MAE1EvF,EAAUuF,OAGVvF,EAAUoF,EAGd,GAAIE,IAAYH,GAASK,SAASC,OAAQ,CACtC,IAAK1F,GAAaC,GACd,MAAM,IAAI9vD,EAAa,aAAc,iDAEzC,MAAMwR,EAAUs+C,EAAQ78C,WAAW,MACnC,IAAKzB,EACD,MAAM,IAAIxR,EAAa,aAAc,4BAEzCjB,KAAK0zB,IAAM,IAAIw9B,GAAcz+C,OAE5B,IAAI4jD,IAAYH,GAASK,SAASE,IAOnC,MAAM,IAAIx1D,EAAa,iBAAkB,2BAA2Bo1D,KANpE,IHvCT,SAAmBtF,GACtB,IAAKA,EACD,OAAO,EACX,MAAM1P,EAAS9/C,IACf,MAEkC,mBAA1B8/C,EAAOqV,gBAAiC3F,aAAmB1P,EAAOqV,gBAEtC,mBAAxB3F,EAAQ4C,aAAuD,iBAAlB5C,EAAQzkD,MG+BhDqqD,CAAU5F,GACX,MAAM,IAAI9vD,EAAa,aAAc,2CAEzCjB,KAAK0zB,IAAM,IAAI6/B,GAAWxC,KAOtCxtD,oBAAoBqzD,EAAWP,EAAS9tD,EAAOC,EAAQquD,EAAa,QAChE,MAAMC,EAAW,IAAIZ,GAASU,EAAWP,GACrC9tD,GAASC,GACTsuD,EAAS7E,OAAO1pD,EAAOC,GAE3B,MAAMkrB,EAAMojC,EAAS5iD,aAGrB,OAFAwf,EAAI+9B,uBAAuBoF,GAC3BX,GAASa,YAAcrjC,EAChBA,EAEXnwB,wBAAwBqzD,EAAWruD,EAAOC,EAAQquD,GAC9C,OAAOX,GAASc,aAAaJ,EAAWV,GAASK,SAASC,OAAQjuD,EAAOC,EAAQquD,GAErFtzD,qBAAqBqzD,EAAWruD,EAAOC,EAAQquD,GAC3C,OAAOX,GAASc,aAAaJ,EAAWV,GAASK,SAASE,IAAKluD,EAAOC,EAAQquD,GAKlFtzD,sBAAsBkP,EAASwkD,EAAOC,EAAOC,EAAKC,EAAKC,GACnD5kD,EAAQyhB,YACR,MAAMojC,EAAKH,EAAMF,EACXM,EAAKH,EAAMF,EACXM,EAAQx0D,KAAKy0D,MAAMF,EAAID,GAC7B,IAAI51D,EAAIu1D,EACJtwD,EAAIuwD,EACRzkD,EAAQ0hB,OAAO8iC,EAAOC,GACtB,IAAIQ,EAAM,EACNjkD,GAAO,EACX,OAAU6jD,EAAK,EAAI51D,GAAKy1D,EAAMz1D,GAAKy1D,MAASI,EAAK,EAAI5wD,GAAKywD,EAAMzwD,GAAKywD,IAAO,CACxE,MAAMO,EAAaN,EAAYK,IAAQL,EAAYzzD,QAC7Cg0D,EAAKl2D,EAAIsB,KAAKkwC,IAAIskB,GAASG,EACjCj2D,EAAI41D,EAAK,EAAIt0D,KAAK6E,IAAIsvD,EAAKS,GAAM50D,KAAK8hC,IAAIqyB,EAAKS,GAC/C,MAAMC,EAAKlxD,EAAI3D,KAAKmwC,IAAIqkB,GAASG,EACjChxD,EAAI4wD,EAAK,EAAIv0D,KAAK6E,IAAIuvD,EAAKS,GAAM70D,KAAK8hC,IAAIsyB,EAAKS,GAC3CpkD,EACAhB,EAAQ2hB,OAAO1yB,EAAGiF,GAGlB8L,EAAQ0hB,OAAOzyB,EAAGiF,GAEtB8M,GAAQA,EAEZhB,EAAQ8sB,YACR9sB,EAAQua,SAEZilC,OAAO1pD,EAAOC,GAEV,OADAxI,KAAK0zB,IAAIu+B,OAAO1pD,EAAOC,GAChBxI,KAEXkU,aACI,OAAOlU,KAAK0zB,KAGpBwiC,GAASK,SAAWV,GACpBK,GAAS4B,YAAchC,GAIvBI,GAASa,iBAAcp1D,EEpHhB,MAAMo2D,WAAqB5hC,EAC9Bh1B,YAAYgoD,GACR7nD,QACAtB,KAAKg4D,cAAgB7O,EACrBnpD,KAAKk3B,SAAS,IACdl3B,KAAKoxB,SAAW+E,EAASE,SAASO,MAClC52B,KAAKmyB,QAAU,EACfnyB,KAAKoyB,QAAU,EACfpyB,KAAKioD,SAAW,EAChBjoD,KAAKykC,SAAW,EAChBzkC,KAAKi4D,QAAS,EACdj4D,KAAKk4D,IAAMhC,GAAS4B,YAAYtS,KAChCxlD,KAAK6zC,OAAS,EACd7zC,KAAKgV,YAEE1R,sBACP,MAAO,eAIXC,cAAc2kD,EAAMnmB,GAChB,MAAMC,EAAaD,EAAMC,WACnBC,EAAcF,EAAME,YAE1B,IAAKimB,GAAwB,IAAhBA,EAAKtkD,OACd,OAAO,EACX,MAAMukD,EAAY,GAClB,IAAIC,EAAY,KACZ+P,EAAa,EACbz+C,EAAc,EAClB,IAAK,IAAIlT,EAAI,EAAGA,EAAI0hD,EAAKtkD,SAAU4C,EAAG,CAClC,MAAMoP,EAAMsyC,EAAK1hD,GACX4wB,EAAOxhB,EAAIuhB,UACXoxB,EAAM3yC,EAAIkiB,cAChB,IAAKsR,EAAYhS,GACb,MAAM,IAAIn2B,EAAa,eAE3B,MAAMiP,EAAQ0F,EAAI4hB,aACZmT,EAAQvT,EAAKyL,cAAc3yB,GACjC,GAAIknB,IAASgxB,EAAW,CACpB,IAAK,IAAIzlD,EAAI,EAAGA,EAAIy0B,EAAKhmB,KAAKxN,SAAUjB,EACjB,IAAfq/B,IACAm2B,EAAan1D,KAAK6E,IAAIuvB,EAAKmJ,yBAA0B43B,IAErC,IAAhBl2B,IACAvoB,EAAc1W,KAAK6E,IAAIuvB,EAAKoJ,0BAA2B9mB,IAG/D0uC,EAAYhxB,EAEhB+wB,EAAU95B,KAAK,CACXk6B,IAAAA,EACAnxB,KAAAA,EACAxhB,IAAAA,EACA7T,KAAM4oC,EAAM5oC,KACZymD,OAAQ2P,EACR1P,OAAQ/uC,IAIhByuC,EAAUjb,MAAK,CAAC1qC,EAAGC,IAAMA,EAAEV,KAAOS,EAAET,OACpC,IAAIq2D,EAAa,EACbzH,EAAW,EACXC,EAAW,EACXtc,EAAY,KACZC,EAAY,KAChB,IAAK,IAAI/tC,EAAI,EAAGA,EAAI2hD,EAAUvkD,SAAU4C,EAAG,CACvC,IAAIuiD,EAAY,EAChB,MAAM3xB,EAAO+wB,EAAU3hD,GAAG4wB,KACpBmxB,EAAMJ,EAAU3hD,GAAG+hD,IACnB3yC,EAAMuyC,EAAU3hD,GAAGoP,IACnB7T,EAAOomD,EAAU3hD,GAAGzE,KACpB0mD,EAASN,EAAU3hD,GAAGiiD,OAExB1mD,IAASuyC,GAAald,IAASmd,IAC/B6jB,EAAan2B,EAAcwmB,GAE/B,MAAM4P,EAAYziD,EAAImY,WAtDN,EAuDZw6B,IAAQpyB,EAASE,SAASC,MAC1B1gB,EAAImf,UAAUiN,GACd+mB,EAAYoP,EAAaE,EACzB1H,EAAW5H,EAAY4H,EAAW5H,EAAY4H,GAEzCpI,IAAQpyB,EAASE,SAASY,QAC/BrhB,EAAImf,UAAUqjC,GACdrP,GAAasP,EACbzH,EAAW7H,EAAY6H,EAAW7H,EAAY6H,GAElDtc,EAAYvyC,EACZwyC,EAAYnd,EAIhB,OAFA2K,EAAMC,YAAc2uB,EACpB5uB,EAAME,aAAe2uB,GACd,EAEX0H,eAAeJ,GAIX,OAHIA,GAAOhC,GAAS4B,YAAYtS,MAAQ0S,GAAOhC,GAAS4B,YAAYh0B,OAChE9jC,KAAKk4D,IAAMA,GAERl4D,KAEXu4D,gBAAgBpP,GAEZ,OADAnpD,KAAKg4D,cAAgB7O,EACdnpD,KAEXwpD,WAAW9nD,GAEP,OADA1B,KAAKioD,SAAWvmD,EACT1B,KAEXypD,WAAW9iD,GAEP,OADA3G,KAAKykC,SAAW99B,EACT3G,KAEXw4D,YAAYphC,GAER,OADAp3B,KAAKu0C,UAAYnd,EACVp3B,KAEXy4D,UAAUR,GAEN,OADAj4D,KAAKi4D,OAASA,EACPj4D,KAEXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cACL,MAAM4kD,EAAathC,EAAKzB,aAAakR,yBAC/B+F,EAAQxV,EAAK0K,mBAAmB9hC,KAAKoxB,SAAUpxB,KAAKkQ,OAC1D,IAAIw5C,EAAQ9c,EAAMlrC,EAAI1B,KAAKmyB,QAAUnyB,KAAKioD,SACtC0B,EAAQ/c,EAAMjmC,EAAI3G,KAAKoyB,QAAUpyB,KAAKykC,SAC1C,OAAQzkC,KAAKoxB,UACT,KAAK+E,EAASE,SAASO,MACvB,KAAKT,EAASE,SAASS,MAAO,CAC1B,MAAM4kB,EAAWtkB,EAAKmL,iBACtB,IAAI0Z,EAAMP,EAAS1W,KACfkX,EAASR,EAASzW,MAAQ,EAC1B7N,EAAKkL,qBAAuBQ,EAAKgB,OACjCmY,EAAMP,EAASzW,MACfiX,EAASR,EAAS1W,KAAO,GAGzB2kB,EADA3pD,KAAKoxB,WAAa+E,EAASE,SAASO,MAC5BQ,EAAKiK,UAAY4a,EAAmB,KAAbyc,EAAoB9rB,EAAMjmC,EAAiB,KAAb+xD,EAGrDthC,EAAKiK,UAAY6a,EAAsB,IAAbwc,EAAmB9rB,EAAMjmC,EAAiB,KAAb+xD,EAEnE/O,GAAS3pD,KAAKoyB,QAAUpyB,KAAKykC,SAC7B,MAEJ,KAAKtO,EAASE,SAASC,KACnBozB,GAAS1pD,KAAK6zC,OAAS,EAAI,EAC3B,MACJ,KAAK1d,EAASE,SAASY,MACnByyB,GAAS1pD,KAAK6zC,OAAS,EAAI,EAC3B,MACJ,QACI,MAAM,IAAI5yC,EAAa,kBAAmB,gBAAgBjB,KAAKoxB,uBAEvEsC,EAAIhhB,OACJghB,EAAIQ,YACJR,EAAI4L,IAAIoqB,EAAOC,EAAO3pD,KAAK6zC,OAAQ,EAAa,EAAV7wC,KAAKC,IAAQ,GACnDywB,EAAItgB,aAAa,KACjBsgB,EAAI1G,SACJ0G,EAAItf,QAAQpU,KAAKsU,UACjB,MAAM5S,EAAIgoD,EAAQh2B,EAAI8hB,YAAYx1C,KAAKg4D,eAAezvD,MAAQ,EAC9DmrB,EAAIwL,SAAS,GAAKl/B,KAAKg4D,cAAet2D,EAAGioD,EAAQ,KACjD,MAAMb,EAAW9oD,KAAKu0C,UACtB,GrBvKgCzX,EqBuKZgsB,ErBvK4BthB,GqBuKjB,CAE3B,MAAMqF,EAAMic,EAASngB,WAAavR,EAAKrwB,OAAS,EAUhD,IAAI4xD,EACAC,EACJ,OAXAllC,EAAIxgB,eAAe,WACnBwgB,EAAIk+B,WAAW,SACfl+B,EAAItgB,aAAa,IACbpT,KAAKi4D,OACL/B,GAAS2C,eAAenlC,EAAKg2B,EAAQ,GAAIC,EAAOD,EAAQ7c,EAAK8c,EAAO,CAAC,EAAG,IAGxEuM,GAAS2C,eAAenlC,EAAKg2B,EAAQ,GAAIC,EAAOD,EAAQ7c,EAAK8c,EAAO,CAAC,EAAG,IAIpE3pD,KAAKk4D,KACT,KAAKhC,GAAS4B,YAAYj0B,GACtB80B,GAAO,GACPC,EAAU54D,KAAKi4D,OAAS,CAAC,EAAG,GAAK,CAAC,EAAG,GACrC/B,GAAS2C,eAAenlC,EAAKg2B,EAAQ7c,EAAK8c,EAAOD,EAAQ7c,EAAK8c,EAAQgP,EAAKC,GAC3E,MACJ,KAAK1C,GAAS4B,YAAYh0B,KACtB60B,EAAM,GACNC,EAAU54D,KAAKi4D,OAAS,CAAC,EAAG,GAAK,CAAC,EAAG,GACrC/B,GAAS2C,eAAenlC,EAAKg2B,EAAQ7c,EAAK8c,EAAOD,EAAQ7c,EAAK8c,EAAQgP,EAAKC,IAMvFllC,EAAIpgB,WAGZykD,GAAavjD,UAAY,CACrBhI,OAAQhB,EAAKiB,WACbL,KAAMZ,EAAKI,KACXS,OAAQjC,EAAWmvC,KACnBjtC,MAAOjC,EAAUqC,QC1Md,MAAMosD,WAAe3iC,EACxBh1B,YAAY4O,EAAM4c,GACdrrB,QACAtB,KAAK2sB,QAAUtsB,OAAOwU,OAAO,CAAEkkD,YAAY,GAAQpsC,GAEnD3sB,KAAK+4D,WAAa/4D,KAAK2sB,QAAQosC,WAE/B/4D,KAAK+P,KAAOA,EACZ/P,KAAKoxB,SAAW+E,EAASE,SAASC,KAClCt2B,KAAKq+B,eAAiB,CAClBqe,WAAY,IAEhB18C,KAAKgV,YACLhV,KAAK+0B,UAAU,GACf/0B,KAAKk3B,SAAS,IAEP5zB,sBACP,MAAO,SAGXC,cAAcy1D,EAASj3B,GACnB,MAAMC,EAAaD,EAAMC,WAEzB,IAAKg3B,GAA8B,IAAnBA,EAAQp1D,OACpB,OAAO,EACX,MAAMq1D,EAAaD,EAAQ3nD,KAAK2b,IAC5B,MAAMoK,EAAOpK,EAAOmK,UACdjnB,EAAQ8c,EAAOwK,aACrB,GAAI4R,EAAYhS,GAAO,CAEnB,MAAM,KAAEr1B,GAASq1B,EAAKyL,cAAc3yB,GAEpC,MAAO,CAAEnO,KAAAA,EAAM+B,MADDszB,EAAKmJ,yBACGvT,OAAAA,GAErB,GAAI2nB,GAAUvd,GAAO,CAEtB,MAAQ7wB,IAAKswC,GAAWzf,EAAKse,eAAexlC,GAC5C,MAAO,CAAEnO,KAAM80C,EAAQ/yC,MAAO,EAAGkpB,OAAAA,GAGjC,MAAM,IAAI/rB,EAAa,WAAY,2BAGrCi4D,EAAcl3B,EAEd5M,EAAS6jC,EAAWjkB,QAAO,CAAC5f,GAAUpI,OAAAA,EAAQlpB,MAAAA,MAChDkpB,EAAO+H,UAAUmkC,EAAcp1D,GACxBd,KAAK6E,IAAImlB,EAAOe,WAzBJ,EAyBiCqH,KACrD,GAEH,OADA2M,EAAMC,YAAc5M,GACb,EAEX0C,cACI,OAAO93B,KAAKoxB,SAEhB+nC,WAAW/hC,GAEP,OADAp3B,KAAKo5D,SAAWhiC,EACTp3B,KAEXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cACL,MAAM84B,EAAQxV,EAAK0K,mBAAmB9hC,KAAKoxB,SAAUpxB,KAAKkQ,OAC1D,IAAIkuB,EAAKhH,EAAK4J,QACVgE,EAAO4H,EAAMjmC,EACb0yD,EAAOzsB,EAAMjmC,EACjB,MAAMjF,EAAIkrC,EAAMlrC,EAAI,EACdg3D,EAAathC,EAAKzB,aAAakR,yBAC/B1Y,EAAQnuB,KAAK43B,uBAAuBiK,WAAWzK,EAAKnlB,eAC1D,IAAK,IAAIzL,EAAI,EAAGA,EAAI2nB,EAAMvqB,OAAQ4C,IAAK,CACnC,MAAM4wB,EAAOjJ,EAAM3nB,GACnB,GAAI42B,EAAOhG,GAAO,CAGdgH,EAAKhH,EAAK4J,QACV,IAAK,IAAIr+B,EAAI,EAAGA,EAAIy7B,EAAGx6B,OAAQjB,KACvB3C,KAAKo3B,OAASjJ,EAAM3nB,IAAMxG,KAAK+4D,cAC/B/zB,EAAOhiC,KAAK8hC,IAAIE,EAAM5G,EAAGz7B,IACzB02D,EAAOr2D,KAAK6E,IAAIwxD,EAAMj7B,EAAGz7B,MAKzC,IAAI22D,EAAQ,GACRC,EAAgB,EAChBC,EAAU,EACVC,EAAe,EACfC,EAAS,EACb,OAAQ15D,KAAK+P,MACT,KAAK+oD,GAAOa,KAAKC,WACbN,EAAQ,mBACRC,GAAiB,EACjBC,EAAUx0B,EAAO0zB,EAAa,EAAI,GAClCW,GAAQX,EAAa,EACrB,MACJ,KAAKI,GAAOa,KAAKE,SACbP,EAAQ,qBACRC,EAAgB,GAChBC,EAAUH,EAAOX,EAAa,EAC9B1zB,GAAQ0zB,EAAa,EACrB,MACJ,KAAKI,GAAOa,KAAKG,UACjB,KAAKhB,GAAOa,KAAKI,cACbT,EAAQ,mBACRC,GAAiB,EACjBE,EAAez5D,KAAKmyB,QAAUonC,EAAgB,EAC1CnwB,EAAYhS,IACZ4N,GAAQ,IAAM0zB,EAEVW,IADCA,EAAOr0B,GAAQ,GAAM,EACd,GAAM0zB,EAGNA,EAEZc,EAAUx0B,EAAO0zB,EACjBgB,EAASL,EAAOX,EAAa,IAG7B1zB,GAAQ,IAAM0zB,EACdW,GAAQX,EACRc,EAAUx0B,EAAO,IAAO0zB,EACxBgB,EAASL,EAAO,IAAOX,GAE3B,MACJ,KAAKI,GAAOa,KAAKK,QACjB,KAAKlB,GAAOa,KAAKM,YACbX,EAAQ,qBACRC,GAAiB,EACjBE,EAAez5D,KAAKmyB,QAAUonC,EAAgB,EAC1CnwB,EAAYhS,IACZoiC,EAAUd,EAAa,EACvB1zB,GAAQ,GAAM0zB,GACTW,EAAOr0B,GAAQ,GAAM,IACtBq0B,GAAQX,EAAa,GAEzBc,EAAUH,EAAO,GAAMX,EACvBgB,EAAS10B,EAAO,KAAO0zB,IAGvB1zB,GAAQ,IAAO0zB,EACfW,GAAQ,GAAMX,EACdc,EAAUH,EAAO,IAAOX,EACxBgB,EAAS10B,EAAO0zB,GAEpB,MACJ,KAAKI,GAAOa,KAAKO,uBACbl1B,GAAQ,GAAM0zB,EACdW,GAAQX,EACR,MACJ,QACI,MAAM,IAAIz3D,EAAa,cAAe,mBAAmBjB,KAAK+P,uBAEtE,IAAIoqD,EAAa,WAEjB,GAAIn6D,KAAK+P,OAAS+oD,GAAOa,KAAKC,YAAc55D,KAAK+P,OAAS+oD,GAAOa,KAAKE,SAClEnmC,EAAI2+B,SAAS3wD,EAAI1B,KAAKmyB,QAAS6S,EAAM,EAAGq0B,EAAOr0B,QAI/C,GADAm1B,EAAa,SACT/wB,EAAYhS,GACZ,IAAK,IAAI5wB,EAAIw+B,EAAMx+B,GAAK6yD,EAAM7yD,GAAKkyD,EAC/B9qC,EAAM2Z,YAAY7T,EAAKhyB,EAAI1B,KAAKmyB,QAAU,EAAG3rB,EAAGxG,KAAKq+B,eAAeqe,WAAY,2BAGnF,CACD,IAAIl2C,EACJ,IAAKA,EAAIw+B,EAAMx+B,GAAK6yD,EAAM7yD,GAAK,GAC3BonB,EAAM2Z,YAAY7T,EAAKhyB,EAAI1B,KAAKmyB,QAAU,EAAG3rB,EAAGxG,KAAKq+B,eAAeqe,WAAY,uBAEhF18C,KAAK+P,OAAS+oD,GAAOa,KAAKI,gBAC1BL,EAASlzD,EAAI,IAAOkyD,GAI5B14D,KAAK+P,OAAS+oD,GAAOa,KAAKO,yBAI9BtsC,EAAM2Z,YAAY7T,EAAKhyB,EAAI1B,KAAKmyB,QAAUonC,EAAeC,EAASx5D,KAAKq+B,eAAeqe,WAAY4c,EAAO,CACrGznC,SAAU,UAAUynC,KAASa,MAG7Bn6D,KAAK+P,OAAS+oD,GAAOa,KAAKI,eAAiB/5D,KAAK+P,OAAS+oD,GAAOa,KAAKM,cACrEvmC,EAAIhhB,OACJghB,EAAItf,QAAQpU,KAAKsU,UACjBof,EAAIwL,SAAS,IAAKx9B,EAAI+3D,EAAcC,GACpChmC,EAAIpgB,aAIhBwlD,GAAOa,KAAO,CACVC,WAAY,EACZC,SAAU,EACVC,UAAW,EACXE,QAAS,EACTD,cAAe,EACfE,YAAa,EACbC,uBAAwB,GAE5BpB,GAAOtkD,UAAY,CACfhI,OAAQhB,EAAK8D,MACblD,KAAMZ,EAAKI,KACXS,OAAQjC,EAAWmvC,KACnBjtC,MAAOjC,EAAUoD,QClNd,MAAM2sD,WAAgBjkC,EACzBh1B,cACIG,QACAtB,KAAKoxB,SAAW+E,EAASE,SAASY,MAClCj3B,KAAKq+B,eAAiB,CAClBg8B,OAAO,EACPC,cAAe,GACfC,YAAa,EACbC,WAAY,EACZC,WAAY,GAEhBz6D,KAAK06D,gBAAgB16D,KAAKq+B,eAAei8B,eAElCh3D,sBACP,MAAO,UAGXC,cAAco3D,EAAU54B,EAAOtvB,GAC3B,IAAKkoD,GAAgC,IAApBA,EAAS/2D,OACtB,OAAO,EAEX,IAAIwyB,EAAY2L,EAAM+Y,cAClBvyC,EAAQ,EACRzE,EAAQi+B,EAAME,YAAc,EAEhC,MAAMid,EAAQzsC,EAAQovB,WAAW6c,GAAKp7C,UACtC,GAAI47C,GAASA,EAAMt7C,OAAS,EAAG,CAE3BwyB,GADmB8oB,EAAM7tC,KAAKyJ,GAAOA,EAAGykC,kBAAiBvK,QAAO,CAACxyC,EAAGC,IAAOD,EAAIC,EAAID,EAAIC,IAAM6pB,EAAO+C,oBAC9D,OAGtC0S,EAAM+Y,eAAiB,EAG3B,IAAK,IAAIt0C,EAAI,EAAGA,EAAIm0D,EAAS/2D,SAAU4C,EAAG,CACtC,MAAMo0D,EAAUD,EAASn0D,GACzBo0D,EAAQ7lC,UAAUjxB,GAClB82D,EAAQ5iC,YAAY5B,GACpB7tB,GAASqyD,EAAQ7sC,WACjBjqB,GAASyE,EAGb,OADAw5B,EAAME,aAAe15B,GACd,EAGXsyD,SAASR,GAEL,OADAr6D,KAAKq+B,eAAeg8B,MAAQA,EACrBr6D,KAGX06D,gBAAgBnyD,GAGZ,OAFAvI,KAAKq+B,eAAei8B,cAAgB/xD,EACpCvI,KAAKk3B,SAAS3uB,GACPvI,KAGXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cACL,MACMgnD,EADQ1jC,EAAK0K,mBAAmB3L,EAASE,SAASY,MAAOj3B,KAAKkQ,OACnDxO,EAAI1B,KAAKmyB,QACpB4oC,EAAK3jC,EAAK6J,eAAejhC,KAAKo2B,WAAa,EACjDgkC,GAAQY,cAActnC,EAAKonC,EAAIC,EAAI/6D,KAAKq+B,gBAM5C96B,qBAAqBmwB,EAAKhyB,EAAGiF,EAAGs0D,GAC5B,MAAM,MAAEZ,EAAK,cAAEC,EAAa,WAAEE,EAAU,WAAEC,EAAU,YAAEF,GAAgBU,EAChEC,EAAYZ,EAAgBE,EAElC,IAAIh0D,EACJ,GAFAktB,EAAIQ,YAEAmmC,EAAO,CAEP,IADA3mC,EAAIS,OAAOzyB,EAAGiF,EAAI8zD,EAAa,GAC1Bj0D,EAAI,EAAGA,EAAI00D,EAAY,IAAK10D,EAC7BktB,EAAIU,OAAO1yB,EAAI84D,EAAY7zD,EAAI4zD,EAAc,GAC7C74D,GAAK84D,EACL9mC,EAAIU,OAAO1yB,EAAI84D,EAAY7zD,EAAI4zD,EAAc,GAC7C74D,GAAK84D,EAET,IAAKh0D,EAAI,EAAGA,EAAI00D,EAAY,IAAK10D,EAC7BktB,EAAIU,OAAO1yB,EAAI84D,EAAY7zD,EAAI4zD,EAAc,EAAIE,EAAa,GAC9D/4D,GAAK84D,EACL9mC,EAAIU,OAAO1yB,EAAI84D,EAAY7zD,EAAI4zD,EAAc,EAAIE,EAAa,GAC9D/4D,GAAK84D,EAET9mC,EAAIa,WAEH,CAED,IADAb,EAAIS,OAAOzyB,EAAGiF,EAAI8zD,GACbj0D,EAAI,EAAGA,EAAI00D,EAAY,IAAK10D,EAC7BktB,EAAIW,iBAAiB3yB,EAAI84D,EAAa,EAAG7zD,EAAI4zD,EAAc,EAAG74D,EAAI84D,EAAY7zD,GAC9EjF,GAAK84D,EACL9mC,EAAIW,iBAAiB3yB,EAAI84D,EAAa,EAAG7zD,EAAI4zD,EAAc,EAAG74D,EAAI84D,EAAY7zD,GAC9EjF,GAAK84D,EAET,IAAKh0D,EAAI,EAAGA,EAAI00D,EAAY,IAAK10D,EAC7BktB,EAAIW,iBAAiB3yB,EAAI84D,EAAa,EAAG7zD,EAAI4zD,EAAc,EAAIE,EAAY/4D,EAAI84D,EAAY7zD,EAAI8zD,GAC/F/4D,GAAK84D,EACL9mC,EAAIW,iBAAiB3yB,EAAI84D,EAAa,EAAG7zD,EAAI4zD,EAAc,EAAIE,EAAY/4D,EAAI84D,EAAY7zD,EAAI8zD,GAC/F/4D,GAAK84D,EAET9mC,EAAIa,SCtFhB,SAAS,MAAKzyB,GACNq5D,GAAgBz1B,OAChB9jC,EAAI,2BAA4BE,GAEjC,MAAMq5D,GACTh6D,cACInB,KAAKs8B,cAAe,EACpBt8B,KAAKw8B,eAAgB,EAErBx8B,KAAKo7D,QAAU,GAEfp7D,KAAKuI,MAAQ,EACbvI,KAAK4mC,QAAU,EACf5mC,KAAK+hC,MAAQ,CACTC,WAAY,EACZC,YAAa,EACb7L,UAAW,EACX0kB,cAAe,GAInB96C,KAAKq7D,UAAY,CACbhyB,EACAonB,GACA7c,GACAmU,GACAuT,GACAxC,GACAyC,GACApP,GACA4L,GACAtb,GACAgS,GACAvU,GACAuG,GACA/B,GACA0b,IAGJp6D,KAAKw7D,WAAa,CAACnyB,GAEvBrN,YAAYy/B,GAER,OADA,GAAE,qDACKz7D,KAAK+7B,UAAU0/B,GAQ1B1/B,UAAU0/B,GACN,MAAM5pC,EAAW4pC,EAAOxpD,cAOxB,OANKjS,KAAKo7D,QAAQvpC,KACd7xB,KAAKo7D,QAAQvpC,GAAY,IAE7B7xB,KAAKo7D,QAAQvpC,GAAUxD,KAAKotC,GAC5BA,EAAO5jC,mBAAmB73B,MAC1BA,KAAKs8B,cAAe,EACbt8B,KAKXk8B,aAAarK,GAET,OADA,GAAE,uDACK7xB,KAAK6hC,WAAWhQ,GAE3BgQ,WAAWhQ,GACP,OAAO7xB,KAAKo7D,QAAQvpC,GAExB9D,WACI,OAAO/tB,KAAKuI,MAEhBmzD,eACI,OAAO17D,KAAK+hC,MAAMC,WAEtB4L,gBACI,OAAO5tC,KAAK+hC,MAAME,YAEtB05B,WACI,OAAO37D,KAAK+hC,MAEhBnzB,aACI,IAAK5O,KAAK47D,UACN,MAAM,IAAI36D,EAAa,oBAAqB,sCAEhD,MAAO,CACHsH,MAAOvI,KAAK+hC,MAAMC,WAAahiC,KAAK+hC,MAAME,YAAcjiC,KAAK4mC,QAC7DA,QAAS5mC,KAAK4mC,SAGtBvK,YACQr8B,KAAKs8B,eAETt8B,KAAKq7D,UAAUziC,SAAS6iC,IACpB,GAAE,kCAAmCA,EAAOn4D,UAC5Cm4D,EAAOlP,OAAOvsD,KAAK6hC,WAAW45B,EAAOn4D,UAAWtD,KAAK+hC,MAAO/hC,SAGhEA,KAAKuI,MAAQvI,KAAK+hC,MAAMC,WAAahiC,KAAK+hC,MAAME,YAChDjiC,KAAKs8B,cAAe,GAExBC,aACQv8B,KAAKw8B,eAETx8B,KAAKw7D,WAAW5iC,SAAS6iC,IACrB,GAAE,mCAAoCA,EAAOn4D,UAC7Cm4D,EAAOl/B,WAAWv8B,KAAK6hC,WAAW45B,EAAOn4D,eAIrD63D,GAAgBz1B,OAAQ,EJjIxB,SAAWqwB,GACPA,EAAsBA,EAA8B,OAAI,GAAK,SAC7DA,EAAsBA,EAA4B,KAAI,GAAK,OAC3DA,EAAsBA,EAA6B,MAAI,GAAK,QAC5DA,EAAsBA,EAA6B,MAAI,GAAK,QAC5DA,EAAsBA,EAA6B,MAAI,GAAK,QAC5DA,EAAsBA,EAA6B,MAAI,GAAK,QAC5DA,EAAsBA,EAA2B,IAAI,GAAK,MAP9D,CAQGA,KAA0BA,GAAwB,KAC9C,MAAM8F,WAAsBhqD,EAC/B1Q,cACIG,QACAtB,KAAKuI,MAAQ,EACbvI,KAAK0B,EAAI,EACT1B,KAAKg+C,QAAU,GACfh+C,KAAKoxB,SAAW2kC,GAAsBn/B,MAE/BtzB,sBACP,MAAO,gBAEA+yB,sBACP,OAAO0/B,GAEXj+B,cACI,OAAO93B,KAAKoxB,SAEhB2G,YAAY3G,GAER,OADApxB,KAAKoxB,SAAWA,EACTpxB,KAEXw4B,WACI,OAAOx4B,KAAK80B,MAEhBa,aACI,OAAOl0B,EAAQzB,KAAK80B,MAAO,UAAW,kCAE1CD,SAASC,GAEL,OADA90B,KAAK80B,MAAQA,EACN90B,KAEX+tB,WACI,OAAO/tB,KAAKuI,MAEhB2uB,SAAS3uB,GAEL,OADAvI,KAAKuI,MAAQA,EACNvI,KAEX+G,OACI,OAAO/G,KAAK0B,EAEhByF,KAAKzF,GAED,OADA1B,KAAK0B,EAAIA,EACF1B,KAEX87D,iBAAiBruC,EAAOqH,EAAO/yB,EAAMg6D,EAAc,GAC/CtuC,EAAMuH,UAAUF,EAAMwL,YAAYv+B,MAAAA,EAAmCA,EAAO,GAAK+yB,EAAMe,gBAAkBkmC,GAE7GC,WAAW9rD,GACP,YAAiBvO,IAAVuO,GAAuBA,EAAQ,EAAI,EAAIlQ,KAAKg+C,QAEvD4P,WAAW5P,GAEP,OADAh+C,KAAKg+C,QAAUA,EACRh+C,KAEXi8D,iBAAiBC,GAEb,OADAl8D,KAAKk8D,cAAgBA,EACdl8D,KAEXm8D,mBACI,OAAOn8D,KAAKk8D,cAGhBzoD,QAAQ3R,KK9DL,MAAMs6D,WAAaP,GAEtB16D,YAAY4O,EAAM3D,EAAMmuC,GACpBj5C,QAKAtB,KAAKwsB,KAAO4vC,GAAKC,MAAc,OAC/Br8D,KAAK+3B,YAAYg+B,GAAsBuG,OACvCt8D,KAAKu8D,QAAQxsD,EAAM3D,EAAMmuC,GACzBv6C,KAAKk3B,SAAS5K,EAAO+V,mBAAmBnzB,aAAa,QAAQlP,KAAKoM,eApB1E,YAActK,GACNs6D,GAAK12B,OACL9jC,EAAI,gBAAiBE,GAmBrB,CAAE,iBAAkBiO,GAEbzM,sBACP,MAAO,OAMA+4D,mBACP,MAAO,CACHhlD,OAAQ,CACJjW,KAAM,QACNW,KAAM,EACN+vB,MAAO,GAEXva,KAAM,CACFnW,KAAM,QACNW,KAAM,EACN+vB,MAAO,GAEXra,KAAM,CACFrW,KAAM,QACNW,KAAM,EACN+vB,MAAO,GAEXta,MAAO,CACHpW,KAAM,QACNW,KAAM,EACN+vB,MAAO,GAEXna,WAAY,CACRvW,KAAM,aACNW,KAAM,EACN+vB,MAAO,GAEXpa,QAAS,CACLtW,KAAM,QACNW,KAAM,EACN+vB,MAAO,GAEX,gBAAiB,CACb1wB,KAAM,QACNW,KAAM,EACN+vB,MAAO,GAEX,aAAc,CACV1wB,KAAM,QACNW,KAAM,EACN+vB,MAAO,GAEX,aAAc,CACV1wB,KAAM,QACNW,KAAM,EACN+vB,MAAO,GAEXla,QAAS,CACLxW,KAAM,QACNW,KAAM,EACN+vB,MAAO,GAEXja,OAAQ,CACJzW,KAAM,QACNW,KAAM,EACN+vB,MAAO,GAEX0qC,IAAK,CACDp7D,KAAM,iBACN0wB,MAAO,IAKnByqC,QAAQxsD,EAAM3D,EAAMmuC,GAChBv6C,KAAK+P,KAAOA,EACZ/P,KAAKwsB,KAAO4vC,GAAKC,MAAMtsD,GAEnB/P,KAAKoM,UADIzK,IAATyK,EACY,UAGAA,EAEhB,MAAMq6B,EAAYna,EAAO+V,mBAMzB,GALAriC,KAAKwsB,KAAKsF,MAAQ2U,EAAUv3B,aAAa,QAAQlP,KAAKoM,aAAc,GACpEpM,KAAKytB,MAAQ,IAAIG,EAAM5tB,KAAKwsB,KAAKprB,KAAMpB,KAAKwsB,KAAKsF,MAAO,CACpDD,SAAU,QAAQ7xB,KAAKwsB,KAAKprB,QAAQpB,KAAKoM,cAG1BzK,IAAf44C,EAA0B,CAC1B,MAAMn5C,EAAOqlC,EAAUv3B,aAAa,oBAAoBqrC,eAClDzoB,EAAQ2U,EAAUv3B,aAAa,oBAAoBqrC,KAAcv6C,KAAKoM,cACtErK,EAAO0kC,EAAUv3B,aAAa,oBAAoBqrC,KAAcv6C,KAAKoM,QAAQpM,KAAK+P,aAClFoiB,EAAUsU,EAAUv3B,aAAa,oBAAoBqrC,KAAcv6C,KAAKoM,QAAQpM,KAAK+P,eAC3F/P,KAAKu6C,WAAa,CAAEn5C,KAAAA,EAAM0wB,MAAAA,EAAO/vB,KAAAA,EAAMowB,QAAAA,GACvCnyB,KAAKy8D,WAAa,IAAI7uC,EAAM5tB,KAAKu6C,WAAWn5C,KAAMpB,KAAKu6C,WAAWzoB,OAClE9xB,KAAKy8D,WAAWluD,QAAQglB,MAAQ,EAChCvzB,KAAKy8D,WAAW1nC,UAAU/0B,KAAKu6C,WAAWpoB,cAG1CnyB,KAAKu6C,gBAAa54C,EAEtB,OAAO3B,KAGX+tB,WAII,MAHkB,QAAd/tB,KAAK+P,MACLtO,EAAQzB,KAAK80B,MAAO,YAAa,kCAE9B90B,KAAKuI,MAGhBssB,SAASC,GAEL,GADA90B,KAAK80B,MAAQA,EACK,QAAd90B,KAAK+P,KAAgB,CACrB,MAAM0d,EAAQhsB,EAAQzB,KAAKytB,MAAO,YAAa,kCACzCivC,EAAW18D,KAAK80B,MAAMoa,cACtBzI,EAAYna,EAAO+V,mBACnBvQ,EAAQ2U,EAAUv3B,aAAa,kBAAkBwtD,WACjDC,EAASl2B,EAAUv3B,aAAa,kBAAkBwtD,YACxDjvC,EAAMmH,SAAS9C,GACfrE,EAAMuH,UAAU2nC,GAEpB,OAAO38D,KAGXyT,OACI,MAAMga,EAAQhsB,EAAQzB,KAAKytB,MAAO,YAAa,kCACzCqH,EAAQ90B,KAAK21B,aACbjC,EAAMoB,EAAMthB,eAClBxT,KAAK8T,cACL4f,EAAIgd,UAAU,OAAQ1wC,KAAK2Q,aAAa,OACxC8c,EAAMoH,SAASC,GACfrH,EAAMtZ,WAAWuf,QACM/xB,IAAnB3B,KAAKwsB,KAAKzqB,MACV/B,KAAK87D,iBAAiBruC,EAAOqH,EAAO90B,KAAKwsB,KAAKzqB,MAElD0rB,EAAMmI,cAAc51B,KAAK0B,QACDC,IAApB3B,KAAKu6C,iBAAgD54C,IAApB3B,KAAKy8D,aACtCz8D,KAAK87D,iBAAiB97D,KAAKy8D,WAAY3nC,EAAO90B,KAAKu6C,WAAWx4C,MAC9D/B,KAAKy8D,WAAW5nC,SAASC,GACzB90B,KAAKy8D,WAAWtoD,WAAWuf,GAC3B1zB,KAAKy8D,WAAW7mC,cAAc51B,KAAK0B,IAEvCgyB,EAAIkd,cAIZwrB,GAAK12B,OAAQ,ECrKN,MAAMk3B,WAAqBf,GAE9B16D,YAAY+sB,EAAS2uC,EAAeC,GAChCx7D,QACAtB,KAAK+8D,QAAU,GACf/8D,KAAKg9D,UAAU9uC,EAAS2uC,EAAeC,GACvC98D,KAAK+3B,YAAYg+B,GAAsBuG,OACvCt8D,KAAKi9D,eAAiB,GACtBj9D,KAAKiP,OAAS,GACdjP,KAAKk9D,WAAa,GAClBl9D,KAAKm9D,eAAgB,EAEd75D,sBACP,MAAO,eAKX85D,eAAernD,EAAKsnD,GAChB,MAAMC,EAAehxC,EAAOsjC,gBAAgB75C,EAAIhG,MAC1C0d,EAAQ,IAAIG,EAAM0vC,EAAal8D,KAAMpB,KAAKi9D,gBAEhD,IAAIM,EAAa,EACjB,GAAiB,MAAbxnD,EAAIhG,MAAgBstD,EAAS,CAC7B,MAAMz2B,EAAUg2B,GAAaY,kBAAkBH,EAAQttD,MACvD,GAAI62B,EAAS,CAET22B,EADgBF,EAAQt7D,MAAQgU,EAAIhU,KACb6kC,EAAQjQ,MAAQiQ,EAAQ/P,OAIvD72B,KAAK87D,iBAAiBruC,EAAOztB,KAAK21B,aAAc5f,EAAIhU,MACpD/B,KAAKiP,OAAOof,KAAKZ,GACjB,MAAMgwC,EAAYz9D,KAAKk9D,WAAWl9D,KAAKk9D,WAAWt5D,OAAS,GACrDs+B,EAAazU,EAAM7e,aAAarG,MAAQg1D,EAE9Cv9D,KAAKk9D,WAAW7uC,KAAKovC,EAAYv7B,GAEjCliC,KAAKuI,OAAS25B,EAIlBw7B,UAAUzvC,GAGN,OAFAjuB,KAAK47D,WAAY,EACjB57D,KAAK68D,cAAgB5uC,EACdjuB,KAEX29D,uBAAuB1vC,GAEnB,MAAM2vC,EAAiBtxC,EAAOuxC,aAAa5vC,GAErC6vC,EAAkB99D,KAAK+8D,QAAQn5D,OAAS,GAAKg6D,EAAeh6D,OAAS,GAAKg6D,EAAe,GAAG7tD,OAAS/P,KAAK+8D,QAAQ,GAAGhtD,KAErHguD,EAAWD,EAAkBF,EAAeh6D,OAASg6D,EAAeh6D,OAAS5D,KAAK+8D,QAAQn5D,OAEhG,GAAIm6D,EAAW,EACX,OAEJ,MAAMC,EAAY,GAClB,IAAK,IAAIx3D,EAAI,EAAGA,EAAIu3D,EAAUv3D,IAAK,CAC/B,IAAI0J,EAAQ1J,EACPs3D,IACD5tD,EAAQ0tD,EAAeh6D,OAASm6D,EAAWv3D,GAE/C,MAAMuP,EAAM6nD,EAAe1tD,GAC3B8tD,EAAU3vC,KAAK,CAAEte,KAAM,IAAKhO,KAAMgU,EAAIhU,OAI1C,OADA/B,KAAK+8D,QAAUiB,EAAUC,OAAOj+D,KAAK+8D,SAC9B,CACHA,QAASiB,EACTjuD,KAAM6tD,EAAe,GAAG7tD,MAIhCmuD,WAAWppC,GAGP,OAFA90B,KAAKm9D,eAAgB,EACrBroC,EAAMkH,YAAYh8B,MACXA,KAIXm+D,gBAAgB3xC,EAAMzc,EAAMgtD,EAAU/8D,KAAK+8D,SACvC,IACIqB,EAuCA53D,EAxCA63D,EAAS,EAEb,OAAQ7xC,GAEJ,IAAK,UACY,MAATzc,EACAquD,EAAc,CAAC,IAAK,GAAK,EAAG,EAAG,KAAM,GAAK,GAE1CC,GAAU,EACd,MACJ,IAAK,gBACY,MAATtuD,EACAquD,EAAc,CAAC,EAAG,EAAG,GAAK,IAAK,EAAG,EAAG,KAErCC,EAAS,IACb,MACJ,IAAK,OACDA,EAAS,GACT,MACJ,IAAK,QACY,MAATtuD,EACAquD,EAAc,CAAC,EAAG,EAAG,IAAK,GAAK,EAAG,EAAG,KAErCC,GAAU,GACd,MACJ,IAAK,aACL,IAAK,aACY,MAATtuD,EACAquD,EAAc,CAAC,GAAK,IAAK,EAAG,EAAG,IAAK,IAAK,GAEzCC,EAAS,EACb,MACJ,IAAK,OACL,IAAK,SACDA,EAAS,EAOjB,QAA2B,IAAhBD,EACP,IAAK53D,EAAI,EAAGA,EAAIu2D,EAAQn5D,SAAU4C,EAC9Bu2D,EAAQv2D,GAAGzE,KAAOq8D,EAAY53D,QAGjC,GAAe,IAAX63D,EACL,IAAK73D,EAAI,EAAGA,EAAIu2D,EAAQn5D,SAAU4C,EAC9Bu2D,EAAQv2D,GAAGzE,MAAQs8D,EAI/BrC,WAAW9rD,GAGP,OAFKlQ,KAAK47D,WACN57D,KAAKusD,SACqB,IAAvBvsD,KAAKiP,OAAOrL,SAAkB5D,KAAKm9D,eAAiBjtD,EAAQ,EAAK,EAAIlQ,KAAKg+C,QAErFjwB,WAGI,OAFK/tB,KAAK47D,WACN57D,KAAKusD,SACFvsD,KAAKuI,MAEhBy0D,UAAU9uC,EAAS2uC,EAAeC,GAK9B,OAJA98D,KAAK47D,WAAY,EACjB57D,KAAKkuB,QAAUA,EACfluB,KAAK68D,cAAgBA,EACrB78D,KAAK88D,aAAeA,EACb98D,KAKXs+D,SAASxB,GAGL,OAFA98D,KAAK47D,WAAY,EACjB57D,KAAK88D,aAAeA,EACb98D,KAEXu+D,sBAAsBzB,GAClB,MAAMj1D,EAAM7E,KAAK8hC,IAAIg4B,EAAal5D,OAAQ5D,KAAK+8D,QAAQn5D,QACvD,IAAK,IAAI4C,EAAI,EAAGA,EAAIqB,IAAOrB,EACnBs2D,EAAat2D,KACbxG,KAAK+8D,QAAQv2D,GAAGuJ,KAAO+sD,EAAat2D,IAIhD+lD,SACI,MAAMz3B,EAAQ90B,KAAK21B,aACnB31B,KAAKuI,MAAQ,EACbvI,KAAKiP,OAAS,GACdjP,KAAKk9D,WAAa,CAAC,GACnBl9D,KAAK+8D,QAAUzwC,EAAOuxC,aAAap8D,EAAQzB,KAAKkuB,UAChD,MAAM6uC,EAAU/8D,KAAK+8D,QACfyB,EAAsBzB,EAAQn5D,OAAS,EAAIm5D,EAAQ,GAAGhtD,UAAOpO,EACnE,IAAI88D,EAOJ,GANIz+D,KAAK68D,gBACL4B,EAAgBz+D,KAAK29D,uBAAuB39D,KAAK68D,gBAEjD78D,KAAK88D,cACL98D,KAAKu+D,sBAAsBv+D,KAAK88D,cAEhC98D,KAAK+8D,QAAQn5D,OAAS,EAAG,CACzB,MAAM4oB,GAAQxsB,KAAKoxB,WAAa2kC,GAAsB2I,IAAM5pC,EAAM6pC,aAAe7pC,EAAM8pC,YAAc9pC,EAAM8pC,UACvGH,GACAz+D,KAAKm+D,gBAAgB3xC,EAAMiyC,EAAc1uD,KAAM0uD,EAAc1B,SAEjE/8D,KAAKm+D,gBAAgB3xC,EAAMgyC,EAAqBzB,GAChD,IAAK,IAAIv2D,EAAI,EAAGA,EAAIxG,KAAK+8D,QAAQn5D,SAAU4C,EACvCxG,KAAKo9D,eAAep9D,KAAK+8D,QAAQv2D,GAAIxG,KAAK+8D,QAAQv2D,EAAI,IAG9DxG,KAAK47D,WAAY,EAErBnoD,OACI,MAAMqhB,EAAQ90B,KAAK21B,aACbjC,EAAMoB,EAAMthB,eACbxT,KAAK47D,WACN57D,KAAKusD,SACTvsD,KAAK8T,cACL4f,EAAIgd,UAAU,eAAgB1wC,KAAK2Q,aAAa,OAChD,IAAK,IAAInK,EAAI,EAAGA,EAAIxG,KAAKiP,OAAOrL,OAAQ4C,IAAK,CACzC,MAAMinB,EAAQztB,KAAKiP,OAAOzI,GACpB9E,EAAI1B,KAAK0B,EAAI1B,KAAKk9D,WAAW12D,GACnCinB,EAAMoH,SAASC,GACfrH,EAAMtZ,WAAWuf,GACjBjG,EAAMmI,cAAcl0B,GAExBgyB,EAAIkd,cAKZgsB,GAAaY,kBAAoB,CAC7B,IAAK,CACD7mC,MAAO,EACPE,MAAO,GAEXp0B,EAAG,CACCk0B,MAAO,EACPE,MAAO,GAEXl0B,EAAG,CACCg0B,MAAO,EACPE,MAAO,GAEX,KAAM,CACFF,MAAO,EACPE,MAAO,GAEX/b,GAAI,CACA6b,MAAO,EACPE,MAAO,GAEX9b,GAAI,CACA4b,MAAO,EACPE,MAAO,GAEX1yB,EAAG,CACCwyB,MAAO,EACPE,MAAO,GAEX3b,IAAK,CACDyb,MAAO,EACPE,MAAO,GAEX,KAAM,CACFF,MAAO,EACPE,MAAO,GAEX,IAAK,CACDF,MAAO,EACPE,MAAO,GAEX,KAAM,CACFF,MAAO,EACPE,MAAO,GAEX,MAAO,CACHF,MAAO,EACPE,MAAO,GAEX7b,GAAI,CACA2b,MAAO,EACPE,MAAO,IAEX5b,IAAK,CACD0b,MAAO,EACPE,MAAO,KClRR,MAAMgoC,GAAaj+D,GAAQk8B,EAAWl8B,EAAKk+D,IAC3C,IAAIC,GCDAC,GCFAC,IFIX,SAAWF,GACPA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAA0B,aAAI,GAAK,eAC/CA,EAAYA,EAAwB,WAAI,GAAK,aAC7CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAkB,KAAI,GAAK,OAP3C,CAQGA,KAAgBA,GAAc,KAC1B,MAAMD,WAAgBjD,GACzB16D,YAAY4O,GACRzO,QACAtB,KAAKk/D,UAAY5yC,EAAO6C,qBACxB,MAAMgwC,EAAOJ,GACb/+D,KAAKo/D,OAAS,GACdp/D,KAAKo/D,OAAOD,EAAKE,QAAU,EAC3Br/D,KAAKo/D,OAAOD,EAAKG,QAAU,EAC3Bt/D,KAAKo/D,OAAOD,EAAKT,KAAO,EACxB1+D,KAAKo/D,OAAOD,EAAKI,cAAgB,EACjCv/D,KAAKo/D,OAAOD,EAAKK,YAAc,EAC/Bx/D,KAAKo/D,OAAOD,EAAKM,aAAe,EAChCz/D,KAAKo/D,OAAOD,EAAK3Z,MAAQ,EACzBxlD,KAAK0/D,SAAW,GAChB1/D,KAAK0/D,SAASP,EAAKE,QAAU,EAC7Br/D,KAAK0/D,SAASP,EAAKG,QAAU,EAC7Bt/D,KAAK0/D,SAASP,EAAKT,KAAO,EAC1B1+D,KAAK0/D,SAASP,EAAKI,cAAgB,GACnCv/D,KAAK0/D,SAASP,EAAKK,YAAc,GACjCx/D,KAAK0/D,SAASP,EAAKM,aAAe,GAClCz/D,KAAK0/D,SAASP,EAAK3Z,MAAQ,EAC3BxlD,KAAK2/D,iBAAmB,GACxB3/D,KAAK2/D,iBAAiBR,EAAKE,QAAU,CACjCO,KAAM,EACNC,KAAM,EACNC,YAAa,EACbC,aAAc,GAElB//D,KAAK2/D,iBAAiBR,EAAKG,QAAU,CACjCM,MAAO,EACPC,KAAM,EACNC,YAAa,EACbC,aAAc,GAElB//D,KAAK2/D,iBAAiBR,EAAKT,KAAO,CAC9BkB,MAAO,EACPC,KAAM,EACNC,YAAa,EACbC,aAAc,GAElB//D,KAAK2/D,iBAAiBR,EAAKK,YAAc,CACrCI,MAAO,GACPC,KAAM,EACNC,YAAa,EACbC,aAAc,GAElB//D,KAAK2/D,iBAAiBR,EAAKI,cAAgB,CACvCK,MAAO,EACPC,KAAM,GACNC,YAAa,EACbC,aAAc,GAElB//D,KAAK2/D,iBAAiBR,EAAKM,aAAe,CACtCG,MAAO,GACPC,KAAM,GACNC,YAAa,EACbC,aAAc,GAElB//D,KAAK2/D,iBAAiBR,EAAK3Z,MAAQ,CAC/Boa,KAAM,EACNC,KAAM,EACNC,YAAa,EACbC,aAAc,GAElB//D,KAAK+3B,YAAYg+B,GAAsBuG,OACvCt8D,KAAKu8D,QAAQxsD,GAENzM,sBACP,MAAO,UAEAyM,kBACP,OAAOgvD,GAEAiB,wBACP,MAAO,CACHC,OAAQlB,GAAYM,OACpBa,OAAQnB,GAAYO,OACpBzyB,IAAKkyB,GAAYL,IACjByB,YAAapB,GAAYQ,aACzBa,UAAWrB,GAAYS,WACvBa,WAAYtB,GAAYU,YACxBa,KAAMvB,GAAYvZ,MAG1B+a,UACI,OAAOvgE,KAAK+P,KAEhBwsD,QAAQxsD,GAKJ,OAJA/P,KAAK+P,KAAuB,iBAATA,EAAoB+uD,GAAQkB,WAAWjwD,GAAQA,EAClE/P,KAAKk3B,SAASl3B,KAAKo/D,OAAOp/D,KAAK+P,OAC/B/P,KAAK4tD,WAAW5tD,KAAK0/D,SAAS1/D,KAAK+P,OACnC/P,KAAKi8D,iBAAiBj8D,KAAK2/D,iBAAiB3/D,KAAK+P,OAC1C/P,KAGXyT,KAAKqhB,GAGD,OAFAA,EAAMthB,eACNxT,KAAK8T,cACG9T,KAAK+P,MACT,KAAKgvD,GAAYM,OACbr/D,KAAKwgE,gBAAgB1rC,EAAO90B,KAAK0B,GAAG,GACpC,MACJ,KAAKq9D,GAAYO,OACbt/D,KAAKwgE,gBAAgB1rC,EAAO90B,KAAK0B,GAAG,GACpC,MACJ,KAAKq9D,GAAYL,IACb1+D,KAAKygE,mBAAmB3rC,EAAO90B,KAAK0B,GACpC,MACJ,KAAKq9D,GAAYQ,aAGbv/D,KAAK0gE,cAAc5rC,EAAO90B,KAAK0B,GAAG,GAC9BozB,EAAM/tB,SAAW/G,KAAK0B,GACtB1B,KAAKwgE,gBAAgB1rC,EAAOA,EAAM/tB,QAEtC,MACJ,KAAKg4D,GAAYS,WACbx/D,KAAK0gE,cAAc5rC,EAAO90B,KAAK0B,GAAG,GAClC,MACJ,KAAKq9D,GAAYU,YACbz/D,KAAK0gE,cAAc5rC,EAAO90B,KAAK0B,GAAG,GAClC1B,KAAK0gE,cAAc5rC,EAAO90B,KAAK0B,GAAG,IAO9C8+D,gBAAgB1rC,EAAOpzB,EAAGi/D,GACtB,MAAMC,EAAW9rC,EAAMthB,eACjBwxB,EAAOlQ,EAAM+mB,iBACbwd,EAAOvkC,EAAM+rC,uBACfF,GACAC,EAASvO,SAAS3wD,EAAI,EAAGsjC,EAAM,EAAGq0B,EAAOr0B,GAE7C47B,EAASvO,SAAS3wD,EAAGsjC,EAAM,EAAGq0B,EAAOr0B,GAEzCy7B,mBAAmB3rC,EAAOpzB,GACtB,MAAMk/D,EAAW9rC,EAAMthB,eACjBwxB,EAAOlQ,EAAM+mB,iBACbwd,EAAOvkC,EAAM+rC,uBACnBD,EAASvO,SAAS3wD,EAAI,EAAGsjC,EAAM,EAAGq0B,EAAOr0B,GACzC47B,EAASvO,SAAS3wD,EAAI,EAAGsjC,EAAM,EAAGq0B,EAAOr0B,GAE7C07B,cAAc5rC,EAAOpzB,EAAGo/D,GACpB,MAAMF,EAAW9rC,EAAMthB,eACjBwxB,EAAOlQ,EAAM+mB,iBACbwd,EAAOvkC,EAAM+rC,uBACnB,IAAI1uC,EAAU,EACT2uC,IACD3uC,GAAW,GAEfyuC,EAASvO,SAAS3wD,EAAIywB,EAAS6S,EAAM,EAAGq0B,EAAOr0B,GAC/C47B,EAASvO,SAAS3wD,EAAI,EAAGsjC,EAAM,EAAGq0B,EAAOr0B,GAGrC87B,EACA3uC,GAAW,EAGXA,GAAW,EAEf,MAAMu3B,EAAQhoD,EAAIywB,EAAU4uC,EAE5B,IAAIt8B,GAAY3P,EAAMoa,cAAgB,GAAKpa,EAAM+R,yBACjDpC,EAAWA,EAAW,EAAI3P,EAAM+R,yBAA2B,EAC3D,IAAI8iB,EAAQ3kB,EAAOP,EAAWs8B,EAE9BH,EAAS1sC,YACT0sC,EAASthC,IAAIoqB,EAAOC,EAfD,EAeoB,EAAa,EAAV3mD,KAAKC,IAAQ,GACvD29D,EAASrsC,OAETo1B,GAAS70B,EAAM+R,yBACf+5B,EAAS1sC,YACT0sC,EAASthC,IAAIoqB,EAAOC,EApBD,EAoBoB,EAAa,EAAV3mD,KAAKC,IAAQ,GACvD29D,EAASrsC,QG1LV,MAAMysC,WAAmBnF,GAC5B16D,YAAY4O,EAAMrO,EAAG0wB,GACjB9wB,QACAtB,KAAKihE,YAAclxD,EACnB/P,KAAK0B,EAAIA,EACT1B,KAAKmyB,QAAU,EACfnyB,KAAKoyB,QAAUA,EACfpyB,KAAKgV,YAEE1R,sBACP,MAAO,aAEX49D,UAAUx/D,GAEN,OADA1B,KAAKmyB,QAAUzwB,EACR1B,KAEXmhE,UAAUx6D,GAEN,OADA3G,KAAKoyB,QAAUzrB,EACR3G,KAEXyT,KAAKqhB,EAAOpzB,GAER,OADA1B,KAAK8T,cACG9T,KAAKihE,aACT,KAAKD,GAAWjxD,KAAKqxD,WACjBphE,KAAKqhE,cAAcvsC,EAAOpzB,EAAIozB,EAAM/G,YACpC,MACJ,KAAKizC,GAAWjxD,KAAKuxD,UACjBthE,KAAKuhE,eAAezsC,EAAOpzB,EAAG,QAAQ,GACtC,MACJ,KAAKs/D,GAAWjxD,KAAKyxD,WACjBxhE,KAAKyhE,eAAe3sC,EAAOpzB,GAC3B,MACJ,KAAKs/D,GAAWjxD,KAAK2xD,YACjB1hE,KAAKyhE,eAAe3sC,EAAOpzB,EAAIozB,EAAM/G,YACrC,MACJ,KAAKizC,GAAWjxD,KAAK4xD,GACjB3hE,KAAKuhE,eAAezsC,EAAOpzB,EAAG,QAAQ,GACtC,MACJ,KAAKs/D,GAAWjxD,KAAK6xD,WACjB5hE,KAAKuhE,eAAezsC,EAAOpzB,EAAG,WAAW,GACzC,MACJ,KAAKs/D,GAAWjxD,KAAK8xD,WACjB7hE,KAAKuhE,eAAezsC,EAAOpzB,EAAG,gBAAgB,GAC9C,MACJ,KAAKs/D,GAAWjxD,KAAK+xD,GACjB9hE,KAAKuhE,eAAezsC,EAAOpzB,EAAG,QAAQ,GACtC,MACJ,KAAKs/D,GAAWjxD,KAAKgyD,WACjB/hE,KAAKuhE,eAAezsC,EAAOpzB,EAAG,WAAW,GACzC,MACJ,KAAKs/D,GAAWjxD,KAAKiyD,WACjBhiE,KAAKuhE,eAAezsC,EAAOpzB,EAAG,gBAAgB,GAC9C,MACJ,KAAKs/D,GAAWjxD,KAAKkyD,KACjBjiE,KAAKuhE,eAAezsC,EAAOpzB,EAAG,QAAQ,GACtC,MACJ,KAAKs/D,GAAWjxD,KAAKmyD,QACjBliE,KAAKuhE,eAAezsC,EAAOpzB,EAAG,MAAM,GAK5C,OAAO1B,KAEXqhE,cAAcvsC,EAAOpzB,GACjB,MAAMiF,EAAImuB,EAAMmM,eAAenM,EAAMoa,eAAiBlvC,KAAKoyB,QAE3D,OADAxE,EAAM2Z,YAAYzS,EAAMthB,eAAgBxT,KAAK0B,EAAIA,EAAI1B,KAAKmyB,QAASxrB,EAAI2lB,EAAO+V,mBAAmBnzB,aAAa,mCAAoC,GAAI,OAAQ,CAAE2iB,SAAU,SACnK7xB,KAEXyhE,eAAe3sC,EAAOpzB,GAClB,MAAMiF,EAAImuB,EAAMmM,eAAenM,EAAMoa,eAAiBlvC,KAAKoyB,QAE3D,OADAxE,EAAM2Z,YAAYzS,EAAMthB,eAAgBxT,KAAK0B,EAAIA,EAAI1B,KAAKmyB,QAASxrB,EAAI2lB,EAAO+V,mBAAmBnzB,aAAa,mCAAoC,GAAI,QAAS,CAAE2iB,SAAU,UACpK7xB,KAEXuhE,eAAezsC,EAAOpzB,EAAGoB,EAAMq/D,GAC3B,MAAMzuC,EAAMoB,EAAMthB,eAClBkgB,EAAIhhB,OACJghB,EAAItf,QAAQpU,KAAKsU,UACjB,IAAI8tD,EAAS,EACTC,EAAW,EACf,MAAMC,EAAgBxtC,EAAMsN,gBAAkBpiC,KAAK0B,EACnD,OAAQ1B,KAAKihE,aAET,KAAKD,GAAWjxD,KAAKuxD,UAEjBc,EAASpiE,KAAK0B,EAAIozB,EAAMytC,sBACxBF,EACID,EACI1uC,EAAI8hB,YAAY1yC,GAAMyF,MACtB+jB,EAAO+V,mBAAmBnzB,aAAa,wCAC/C,MAEJ,KAAK8xD,GAAWjxD,KAAK4xD,GACrB,KAAKX,GAAWjxD,KAAK8xD,WACrB,KAAKb,GAAWjxD,KAAK+xD,GACrB,KAAKd,GAAWjxD,KAAKiyD,WACrB,KAAKhB,GAAWjxD,KAAKkyD,KACjBG,EACIpiE,KAAK0B,EACDA,EACA1B,KAAKmyB,QACL2C,EAAM/G,WACNzB,EAAO+V,mBAAmBnzB,aAAa,mCACvCozD,EACA5uC,EAAI8hB,YAAY1yC,GAAMyF,MAC9B,MAEJ,QACI65D,EACIpiE,KAAK0B,EACDA,EACA1B,KAAKmyB,QACL2C,EAAM/G,WACNzB,EAAO+V,mBAAmBnzB,aAAa,mCACvCozD,EACA5uC,EAAI8hB,YAAY1yC,GAAMyF,MACtB+jB,EAAO+V,mBAAmBnzB,aAAa,wCAC/CmzD,EACID,EACI1uC,EAAI8hB,YAAY1yC,GAAMyF,MACtB+jB,EAAO+V,mBAAmBnzB,aAAa,wCAGvD,MAAMvI,EAAImuB,EAAMmM,eAAenM,EAAMoa,eACjClvC,KAAKoyB,QACL9F,EAAO+V,mBAAmBnzB,aAAa,mCAM3C,OALIizD,GACAv0C,EAAM2Z,YAAY7T,EAAK2uC,EAAU17D,EAAG,GAAI,OAAQ,CAAEkrB,SAAU,SAEhE6B,EAAIwL,SAASp8B,EAAMs/D,EAAQz7D,EAAI,GAC/B+sB,EAAIpgB,UACGtT,MAGfghE,GAAWxsD,UAAY,CACnBhI,OAAQhB,EAAK8D,MACblD,KAAM,GACNC,OAAQjC,EAAWmvC,KACnBjtC,MAAOjC,EAAUqC,QAErBs0D,GAAWjxD,KAAO,CACdy1C,KAAM,EACN8b,UAAW,EACXF,WAAY,EACZI,WAAY,EACZE,YAAa,EACbC,GAAI,EACJC,WAAY,EACZC,WAAY,EACZC,GAAI,EACJC,WAAY,GACZC,WAAY,GACZC,KAAM,GACNC,QAAS,IC3JN,MAAMM,WAAqB3G,GAC9B16D,YAAYshE,EAAS/gE,EAAGgsB,GACpBpsB,QACAtB,KAAKk3B,SAAS,IACdl3B,KAAKyiE,QAAUA,EACfziE,KAAK0B,EAAIA,EACT1B,KAAK0iE,QAAU,EACf1iE,KAAK0tB,QAAUA,EACf1tB,KAAKgV,YAEE1R,sBACP,MAAO,eAEXq/D,gBAAgBF,GAEZ,OADAziE,KAAKyiE,QAAUA,EACRziE,KAEXkhE,UAAUx/D,GAEN,OADA1B,KAAK0iE,QAAUhhE,EACR1B,KAEXmhE,UAAUx6D,GAEN,OADA3G,KAAK0tB,QAAU/mB,EACR3G,KAEXyT,KAAKqhB,EAAO4tC,GACR,MAAMhvC,EAAMoB,EAAMthB,eAClBxT,KAAK8T,cACL4f,EAAIhhB,OACJghB,EAAItgB,aAAa,GACjBsgB,EAAItf,QAAQpU,KAAKsU,UACjB,MAGMsuD,EAAmBlvC,EAAI8hB,YAAYx1C,KAAKyiE,SAGxCl6D,EAFYq6D,EAAiBr6D,MAET,EACpBC,EAFao6D,EAAiBp6D,OAER,EAEtB7B,EAAImuB,EAAMmM,eAAe,GAAKjhC,KAAK0tB,QACnChsB,EAAI1B,KAAK0B,EAAIghE,EAOnB,OANAhvC,EAAIQ,YACJR,EAAItgB,aAVc,GAWlBsgB,EAAI0+B,KAAK1wD,EAAGiF,EAAIi8D,EAAiBj8D,EAZhB,EAY8B4B,EAAOC,GACtDkrB,EAAI1G,SACJ0G,EAAIwL,SAASl/B,KAAKyiE,QAAS/gE,EAfV,EAewBiF,GACzC+sB,EAAIpgB,UACGtT,MAGfwiE,GAAahuD,UAAY,CACrBhI,OAAQhB,EAAKiB,WACbL,KAAM,GACNC,OAAQjC,EAAWmvC,KACnBjtC,MAAOjC,EAAUqC,QCrDd,MAAMm2D,WAAmBhH,GAC5B16D,YAAY2hE,EAAOphE,EAAGgsB,GAClBpsB,QAEAtB,KAAKq+B,eAAiB,CAAEE,iBAAkB,IAC1Cv+B,KAAK8iE,MAAQA,EACb9iE,KAAKoxB,SAAW2kC,GAAsBn/B,MACtC52B,KAAK0B,EAAIA,EACT1B,KAAK0iE,QAAU,GACf1iE,KAAK0tB,QAAUA,EACf1tB,KAAKgV,YAEE1R,sBACP,MAAO,aAEXy/D,SAASD,GAEL,OADA9iE,KAAK8iE,MAAQA,EACN9iE,KAEXkhE,UAAUx/D,GAEN,OADA1B,KAAK0iE,QAAUhhE,EACR1B,KAEXmhE,UAAUx6D,GAEN,OADA3G,KAAK0tB,QAAU/mB,EACR3G,KAEXyT,KAAKqhB,EAAO4tC,GACR,MAAMhvC,EAAMoB,EAAMthB,eAClBxT,KAAK8T,cACL,MAAM6Y,EAAU3sB,KAAKq+B,eAGf7Q,EAAQb,EAAQ4R,iBAAmB,GACnC7yB,EAAO1L,KAAK8iE,MAAMp3D,KAClB4iB,EAAWtuB,KAAK8iE,MAAMx0C,SACtBsR,EAAO5/B,KAAK8iE,MAAMljC,MAAQ,EAC1BojC,EAAMhjE,KAAK8iE,MAAME,IACvB,IAAIthE,EAAI1B,KAAK0B,EAAI1B,KAAK0iE,QAAUA,EAChC,MAAM/7D,EAAImuB,EAAMmM,eAAe,GAAKjhC,KAAK0tB,QAOzC,GANAgG,EAAIhhB,OACAhH,IACAgoB,EAAItf,QAAQpU,KAAKsU,UACjBof,EAAIwL,SAASxzB,EAAMhK,EAAGiF,GACtBjF,GAAKgyB,EAAI8hB,YAAY9pC,GAAMnD,OAE3B+lB,GAAY00C,EAAK,CAEjBtvC,EAAItf,QAAQ/T,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAKsU,UAAW,CAAEjI,OAAQ,SAAUC,MAAO,YACnFZ,IACAhK,GAAKgyB,EAAI8hB,YAAY,KAAKjtC,MAC1BmrB,EAAIwL,SAAS,IAAKx9B,EAAGiF,GACrBjF,GAAKgyB,EAAI8hB,YAAY,KAAKjtC,OAE9B,MAAMnH,EAAOkrB,EAAOyR,cAAczP,GAKlC,GAJA5sB,GAAK,EAAI8rB,EACTI,EAAM2Z,YAAY7T,EAAKhyB,EAAGiF,EAAGgmB,EAAQ4R,iBAAkBn9B,EAAK0tB,WAC5DptB,GAAKN,EAAK2sB,WAAaP,EAEnBpsB,EAAK0vB,KAAM,CACX,IAAImyC,EAAc,GACd7hE,EAAKiwB,aACL4xC,GAAe,GAAK7hE,EAAKiwB,WAAa,IAC1C4xC,GAAez1C,EACf,MAAM6V,EAAQ18B,EAAIs8D,EAClBvvC,EAAI2+B,SAAS3wD,EAAI8rB,EAAO6V,EAAO7V,EAAOy1C,GAClC7hE,EAAK4vB,OACLpD,EAAM2Z,YAAY7T,EAAKhyB,EAAG2hC,EAAO1W,EAAQ4R,iBAAkBn9B,EAAKmwB,iBAAkB,CAC9EM,SAAU,oBAET+N,IACDl+B,GAAK,EAAI8rB,IAIrB,IAAK,IAAIhnB,EAAI,EAAGA,EAAIo5B,EAAMp5B,IACtB9E,GAAK,EAAI8rB,EACTkG,EAAIQ,YACJR,EAAI4L,IAAI59B,EAAGiF,EAAI,EAAI6mB,EAAO,EAAIA,EAAO,EAAa,EAAVxqB,KAAKC,IAAQ,GACrDywB,EAAIa,OAERb,EAAIwL,SAAS,MAAQ8jC,GAAOt3D,EAAO,IAAM,IAAKhK,EAAI,EAAI8rB,EAAO7mB,GAGjE,OADA+sB,EAAIpgB,UACGtT,MAGf6iE,GAAWruD,UAAY,CACnBhI,OAAQhB,EAAK8D,MACblD,KAAM,GACNC,OAAQjC,EAAWmvC,KACnBjtC,MAAOjC,EAAUqC,QJ1FrB,SAAWsyD,GACPA,EAAcA,EAAoB,KAAI,GAAK,OAC3CA,EAAcA,EAAsB,OAAI,GAAK,SAC7CA,EAAcA,EAAqB,MAAI,GAAK,QAHhD,CAIGA,KAAkBA,GAAgB,KAO9B,MAAMkE,WAAiB7lC,EAC1Bl8B,YAAYm8B,GAaR,GAZAh8B,MAAMg8B,GACNt9B,KAAK8C,KAAOw6B,EAAWx6B,MAAQ,GAC/B9C,KAAKmjE,YAAc7lC,EAAW6lC,YAC9BnjE,KAAKojE,UAAY9lC,EAAW8lC,UAC5BpjE,KAAKoU,QAAQkpB,EAAWxwB,MACxB9M,KAAK+B,KAAOu7B,EAAWv7B,MAAQ,EAC/B/B,KAAKqjE,OAAS/lC,EAAW+lC,SAAU,EACnCrjE,KAAK25B,aAAe2D,EAAW3D,eAAgB,EAC/C35B,KAAKsjE,cAAgBtE,GAAc1oC,KAI/BgH,EAAW7P,MAAO,CAClB,MAAM81C,EAASL,GAASM,OAAOlmC,EAAW7P,OAC1C,IAAK81C,EACD,MAAM,IAAItiE,EAAa,uBAAyBq8B,EAAW7P,OAC/DztB,KAAKytB,MAAQ,IAAIG,EAAM21C,EAAOniE,KAAM,GAAI,CAAEywB,SAAU,aACpD7xB,KAAKk3B,SAASl3B,KAAKytB,MAAM7e,aAAarG,YAGtCvI,KAAKytB,WAAQ9rB,EAGV2B,sBACP,MAAO,WAEA07D,2BACP,OAAOA,GAGAwE,oBACP,MAAO,CACHC,MAAO,CACHriE,KAAM,SAEV8pB,GAAI,CACA9pB,KAAM,iBAEV0pB,QAAS,CACL1pB,KAAM,mBAEVsiE,cAAe,CACXtiE,KAAM,sBAEVuiE,cAAe,CACXviE,KAAM,mBAEViF,EAAG,CACCjF,KAAM,gBAEVwiE,EAAG,CACCxiE,KAAM,gBAEVsvB,EAAG,CACCtvB,KAAM,gBAEV+E,EAAG,CACC/E,KAAM,oBAEVyiE,EAAG,CACCziE,KAAM,YAEV0iE,KAAM,CACF1iE,KAAM,QAEV2iE,WAAY,CACR3iE,KAAM,oBAEV4iE,YAAa,CACT5iE,KAAM,mBAEV6iE,iBAAkB,CACd7iE,KAAM,WAEV8iE,eAAgB,CACZ9iE,KAAM,iBAEV+iE,OAAQ,CACJ/iE,KAAM,mBAEVotD,KAAM,CACFptD,KAAM,kBAEV4pB,KAAM,CACF5pB,KAAM,gBAEV6pB,cAAe,CACX7pB,KAAM,sBAKlBi6C,iBAAiBH,GAEb,OADAl7C,KAAKsjE,cAAgBpoB,EACdl7C,KAGXumC,QAAQxkC,GAEJ,OADA/B,KAAK+B,KAAOA,EACL/B,KAGXq8B,YACI,GAAIr8B,KAAKs8B,aACL,OACJ,MAAMhE,EAAct4B,KAAKs6B,iBAAiB,0CAC1C,GAAIt6B,KAAKqjE,OACLrjE,KAAKk3B,SAAS,QAGd,GAAIl3B,KAAKytB,WAGJ,CACD,MAAMiG,EAAM1zB,KAAKwT,eACjBkgB,EAAItf,QAAQpU,KAAKsU,UACjBtU,KAAKk3B,SAASxD,EAAI8hB,YAAYx1C,KAAK8C,MAAMyF,OAG7CvI,KAAKsjE,gBAAkBtE,GAActoC,OACrC12B,KAAKk+B,oBAAsBl+B,KAAKuI,MAAQ,EAEnCvI,KAAKsjE,gBAAkBtE,GAAc/nC,QAC1Cj3B,KAAKk+B,oBAAsBl+B,KAAKuI,OAGpCvI,KAAKm+B,qBAAuB7F,EAAY1pB,aAAauzB,QAAU,EAC/DniC,KAAKs8B,cAAe,EAMxB7oB,OACI,MAAMigB,EAAM1zB,KAAKwT,eACXshB,EAAQ90B,KAAK21B,aACb2C,EAAct4B,KAAKs6B,iBAAiB,qCAC1Ct6B,KAAK8T,cAEL,IAAIpS,EAAI1B,KAAK68B,eAAiBvE,EAAY1pB,aAAauzB,QAAU,EAEjE,MAAM55B,EAAQvI,KAAK+tB,WAOnB,IAAIpnB,EACJ,GAPI3G,KAAKsjE,gBAAkBtE,GAActoC,OACrCh1B,GAAK6G,EAAQ,EAERvI,KAAKsjE,gBAAkBtE,GAAc/nC,QAC1Cv1B,GAAK6G,GAGLvI,KAAKytB,MACL9mB,EAAImuB,EAAMwL,YAAYtgC,KAAK+B,MAAQ,GACnC/B,KAAKytB,MAAM+H,OAAO9B,EAAKhyB,EAAGiF,OAEzB,CACDA,EAAImuB,EAAMwL,YAAYtgC,KAAK+B,MAAQ,GACnC/B,KAAKwS,WAAWkhB,GAChBA,EAAItf,QAAQpU,KAAKsU,UACjBof,EAAIwL,SAASl/B,KAAK8C,KAAMpB,EAAGiF,GAC3B,MAAM6B,EAASkrB,EAAI8hB,YAAYx1C,KAAK8C,MAAM0F,QAGpC,OAAEgE,EAAM,KAAEJ,EAAI,OAAEC,EAAM,MAAEC,GAAUtM,KAAKsU,SAEvC0yC,EAAkBx7C,EAAKo3C,UAAUx2C,EAAM,SACzCpM,KAAKmjE,cACLzvC,EAAItf,QAAQ5H,EAAQw6C,EAAiB36C,EAAQC,GAC7ConB,EAAIwL,SAASl/B,KAAKmjE,YAAazhE,EAAI1B,KAAKuI,MAAQ,EAAG5B,EAAI6B,EAAS,MAEhExI,KAAKojE,YACL1vC,EAAItf,QAAQ5H,EAAQw6C,EAAiB36C,EAAQC,GAC7ConB,EAAIwL,SAASl/B,KAAKojE,UAAW1hE,EAAI1B,KAAKuI,MAAQ,EAAG5B,EAAI6B,EAAS,IAAM,IAExExI,KAAKqT,aAAaqgB,KAI9BwvC,GAAS1uD,UAAY,CACjBhI,OAAQhB,EAAKiB,WACbL,KAAM,GACNC,OAAQjC,EAAWsC,OACnBJ,MAAOjC,EAAUqC,QKlMd,MAAM03D,WAAkBvI,GAC3B16D,YAAY2B,EAAMsuB,EAAUzE,EAAU,IAClCrrB,QACAtB,KAAKk3B,SAAS,IACdl3B,KAAK8C,KAAOA,EACZ9C,KAAKoxB,SAAWA,EAChBpxB,KAAK2sB,QAAUtsB,OAAOwU,OAAO,CAAE6tD,QAAS,EAAGh1C,QAAS,EAAG41C,cAAeJ,GAASlE,cAActoC,QAAU/J,GACvG3sB,KAAKgV,YAEE1R,sBACP,MAAO,YAEX+gE,aAAavhE,GAET,OADA9C,KAAK8C,KAAOA,EACL9C,KAEXkhE,UAAUx/D,GAEN,OADA1B,KAAK0iE,QAAUhhE,EACR1B,KAEXmhE,UAAUx6D,GAEN,OADA3G,KAAK0tB,QAAU/mB,EACR3G,KAEXskE,QAAQxhE,GAEJ,OADA9C,KAAK8C,KAAOA,EACL9C,KAEXyT,KAAKqhB,GACD,MAAMpB,EAAMoB,EAAMthB,eAClBxT,KAAK8T,cACL4f,EAAIhhB,OACJghB,EAAItgB,aAAa,GACjBsgB,EAAItf,QAAQpU,KAAKsU,UACjB,MAAMknC,EAAa9nB,EAAI8hB,YAAY,GAAKx1C,KAAK8C,MAAMyF,MACnD,IAAI7G,EACAiF,EACJ,OAAQ3G,KAAKoxB,UACT,KAAK2kC,GAAsBz/B,KAC3B,KAAKy/B,GAAsB9+B,MACvBtwB,GAAKmuB,EAAMwL,YAAY,GAAKxL,EAAMyvC,kBAAoB,EAAIvkE,KAAK2sB,QAAQe,QAEnEhsB,EADA1B,KAAKoxB,WAAa2kC,GAAsBz/B,KACpCxB,EAAM/tB,OAASy0C,EAAa,GAAKx7C,KAAK2sB,QAAQ+1C,QAG9C5tC,EAAM/tB,OAAS+tB,EAAM/G,WAAa,GAAK/tB,KAAK2sB,QAAQ+1C,QAE5D,MACJ,KAAK3M,GAAsBn/B,MAC3B,KAAKm/B,GAAsBj/B,MACvBp1B,EAAIozB,EAAM/tB,OAAS/G,KAAK2sB,QAAQ+1C,QAC5B1iE,KAAK2sB,QAAQ22C,gBAAkBtE,GAActoC,OAC7Ch1B,GAAKozB,EAAM/G,WAAa,EAAIytB,EAAa,EAEpCx7C,KAAK2sB,QAAQ22C,gBAAkBtE,GAAc/nC,QAClDv1B,GAAKozB,EAAM/G,WAAaytB,GAGxB70C,EADA3G,KAAKoxB,WAAa2kC,GAAsBn/B,MACpC9B,EAAMmM,eAAe,GAAKjhC,KAAK2sB,QAAQe,QAGvCoH,EAAMmU,kBAAkB,GAAKjpC,KAAK2sB,QAAQe,QAElD,MACJ,QACI,MAAM,IAAIzsB,EAAa,kBAAmB,uCAIlD,OAFAyyB,EAAIwL,SAAS,GAAKl/B,KAAK8C,KAAMpB,EAAGiF,EAAI,GACpC+sB,EAAIpgB,UACGtT,MAGfokE,GAAU5vD,UAAY,CAClBhI,OAAQhB,EAAK8D,MACblD,KAAM,GACNC,OAAQjC,EAAWsC,OACnBJ,MAAOjC,EAAUqC,QJ7ErB,SAAWuyD,GACPA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAiB,MAAI,GAAK,QACpCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAqB,UAAI,GAAK,YAL5C,CAMGA,KAAcA,GAAY,KACtB,MAAMuF,WAAc3I,GACvB16D,YAAY4O,EAAMo5C,EAAQznD,EAAG0wB,GACzB9wB,QACAtB,KAAKykE,MAAQ10D,EACb/P,KAAK0B,EAAIA,EACT1B,KAAKoyB,QAAUA,EACfpyB,KAAKmpD,OAASA,EACdnpD,KAAKgV,YAEE1R,sBACP,MAAO,QAEAyM,kBACP,OAAOkvD,GAEXkC,UAAUx6D,GAEN,OADA3G,KAAKoyB,QAAUzrB,EACR3G,KAEXyT,KAAKqhB,EAAOpzB,GACR,MAAMgyB,EAAMoB,EAAMthB,eAClBxT,KAAK8T,cACL,IAAIvL,EAAQusB,EAAM/G,WAAarsB,EAC/B,MAAMgjE,EAAQ5vC,EAAMmM,eAAenM,EAAMoa,eAAiBlvC,KAAKoyB,QACzDuyC,EAAc,IAAM7vC,EAAM+R,yBAChC,OAAQ7mC,KAAKykE,OACT,KAAKxF,GAAU3C,MACX5oC,EAAI2+B,SAASryD,KAAK0B,EAAIA,EAAGgjE,EAAO,EAAGC,GACnC,MACJ,KAAK1F,GAAUP,IACXn2D,GAAS,EACTmrB,EAAI2+B,SAASryD,KAAK0B,EAAIA,EAAI6G,EAAOm8D,EAAO,EAAGC,GAC3C,MACJ,KAAK1F,GAAU2F,UACXr8D,GAAS,EACTmrB,EAAI2+B,SAASryD,KAAK0B,EAAIA,EAAGgjE,EAAO,EAAGC,GACnCjxC,EAAI2+B,SAASryD,KAAK0B,EAAIA,EAAI6G,EAAOm8D,EAAO,EAAGC,GAanD,OAPI3kE,KAAKykE,QAAUxF,GAAU3C,OAASt8D,KAAKykE,QAAUxF,GAAU2F,YAC3DlxC,EAAIhhB,OACJghB,EAAItf,QAAQpU,KAAKsU,UACjBof,EAAIwL,SAASl/B,KAAKmpD,OAAQnpD,KAAK0B,EAAIA,EAAI,EAAGgjE,EAAQ,IAClDhxC,EAAIpgB,WAERogB,EAAI2+B,SAASryD,KAAK0B,EAAIA,EAAGgjE,EAAOn8D,EAAO,GAChCvI,MAGfwkE,GAAMhwD,UAAY,CACdhI,OAAQhB,EAAKiB,WACbL,KAAM,EACNC,OAAQjC,EAAWmvC,KACnBjtC,MAAOjC,EAAUqC,QK7Dd,MAAMm4D,WAA2Bj3C,EACpCzsB,YAAY2jE,EAAeC,EAAWC,EAAW5jE,EAAM0wB,EAAOnF,GAC1D,IAAI9gB,EACJvK,MAAMF,EAAM0wB,EAAOnF,GACnB3sB,KAAK8kE,cAAgBA,EACrB9kE,KAAKgzB,UAAY,GACjBhzB,KAAKizB,UAAY,GACjB,IAAIgyC,EAAW,EACf,IAAK,IAAIz+D,EAAI,EAAGA,EAAIu+D,EAAUnhE,SAAU4C,EAAG,CACvC,IAAI0+D,EAAcH,EAAUv+D,GAC5B,OAAQu+D,EAAUv+D,IACd,IAAK,IACD0+D,EAAc,QACd,MACJ,IAAK,IACDA,EAAcF,EAAUphE,OAAS,EAAI,YAAc,OACnD,MACJ,IAAK,IACDshE,EAAcF,EAAUphE,OAAS,EAAI,kBAAoB,aACzD,MACJ,IAAK,IACDshE,EAAcF,EAAUphE,OAAS,EAAI,mBAAqB,cAGlE,MAAMuhE,EAAW,IAAIv3C,EAAM,UAAYs3C,EAAallE,KAAK8kE,cAAchzC,OACvE9xB,KAAKgzB,UAAU3E,KAAK82C,GACpBF,GAAmD,QAAtCp5D,EAAKs5D,EAASv2D,aAAarG,aAA0B,IAAPsD,EAAgBA,EAAK,EAEpF,IAAIu5D,EAAW,EACf,IAAK,IAAI5+D,EAAI,EAAGA,EAAIw+D,EAAUphE,SAAU4C,EAAG,CACvC,IAAI0+D,EAAcF,EAAUx+D,GAC5B,OAAQw+D,EAAUx+D,IACd,IAAK,IACD0+D,EAAc,YACd,MACJ,IAAK,IACDA,EAAc,kBACd,MACJ,IAAK,IACDA,EAAc,mBAGtB,MAAMG,EAAW,IAAIz3C,EAAM,UAAYs3C,EAAallE,KAAK8kE,cAAchzC,OACvE9xB,KAAKizB,UAAU5E,KAAKg3C,GACpBD,GAAY3jE,EAAQ4jE,EAASz2D,aAAarG,OAE9CvI,KAAKuI,MAAQvF,KAAK6E,IAAIo9D,EAAUG,GAChCplE,KAAK4/D,KAAO5/D,KAAK4O,aAAa0kB,MAC9BtzB,KAAKslE,WAAatlE,KAAKuI,MAAQ08D,GAAY,EAC3CjlE,KAAKulE,WAAavlE,KAAKuI,MAAQ68D,GAAY,EAC3CplE,KAAKozB,QAETxkB,aACI,MAAO,CACH0kB,MAAOtzB,KAAK4/D,KACZrsC,MAAOvzB,KAAK4/D,KAAO5/D,KAAKuI,MACxBA,MAAOvI,KAAKuI,OAGpBqtB,cAAcl0B,GACV,MAAMozB,EAAQ90B,KAAK21B,aACbjC,EAAM1zB,KAAKwT,eACjB,IAAIgyD,EAAU9jE,EAAI1B,KAAKslE,UACnB3+D,EAAI,EAEJA,EADA3G,KAAKizB,UAAUrvB,OAAS,EACpBkxB,EAAMwL,YAAYtgC,KAAK8kE,cAAcW,UAEpC3wC,EAAMwL,YAAYtgC,KAAK8kE,cAAcW,SAAW3wC,EAAMwL,YAAYtgC,KAAK8kE,cAAcY,aAAe,EAC7G,IAAK,IAAIl/D,EAAI,EAAGA,EAAIxG,KAAKgzB,UAAUpvB,SAAU4C,EAAG,CAC5C,MAAMinB,EAAQztB,KAAKgzB,UAAUxsB,GAC7BonB,EAAMoG,cAAcN,EAAKjG,EAAM7e,aAAasjB,QAASlyB,KAAKwtB,MAAOg4C,EAAUxlE,KAAKmyB,QAASxrB,GACzF6+D,GAAW/jE,EAAQgsB,EAAM7e,aAAarG,OAE1Ci9D,EAAU9jE,EAAI1B,KAAKulE,UACnB5+D,EAAImuB,EAAMwL,YAAYtgC,KAAK8kE,cAAcY,YACzC,IAAK,IAAIl/D,EAAI,EAAGA,EAAIxG,KAAKizB,UAAUrvB,SAAU4C,EAAG,CAC5C,MAAMinB,EAAQztB,KAAKizB,UAAUzsB,GAC7BxG,KAAK8kE,cAAchJ,iBAAiBruC,EAAOqH,EAAO,GAClDlH,EAAMoG,cAAcN,EAAKjG,EAAM7e,aAAasjB,QAASlyB,KAAKwtB,MAAOg4C,EAAU/3C,EAAM7e,aAAaujB,QAASxrB,GACvG6+D,GAAW/jE,EAAQgsB,EAAM7e,aAAarG,SC/D3C,MAAMo9D,WAAsB9J,GAC/B16D,YAAYykE,EAAW,MAAOC,EAAgB,GAAIC,GAAgB,GAC9DxkE,QACAtB,KAAK8lE,cAAgBA,EACrB,MAAM9nB,EAAU6nB,EACVp/B,EAAYna,EAAO+V,mBACzBriC,KAAK8xB,MAAQ2U,EAAUv3B,aAAa,gBACpC,MAAM62D,EAAgBt/B,EAAUv3B,aAAa,mBAAoB,GACjElP,KAAKylE,QAAU,EAAIM,EACnB/lE,KAAK0lE,WAAa,EAAIK,EACtB/lE,KAAK+3B,YAAYg+B,GAAsBuG,OACvCt8D,KAAK2R,KAAO3R,KAAKgmE,cAAcJ,GAC/B5lE,KAAKk3B,SAASz1B,EAAQzB,KAAK2R,KAAK8b,MAAM7e,aAAarG,QACnDvI,KAAK4tD,WAAW5P,GAET16C,sBACP,MAAO,gBAEA2L,oBACP,MAAO,CACH0G,EAAG,CACCvU,KAAM,gBACN0wB,MAAO,GACP/vB,KAAM,GAEV,KAAM,CACFX,KAAM,mBACN0wB,MAAO,GACP/vB,KAAM,IAIlBikE,cAAcJ,GACV,IAAI/5D,EAAIkF,EACR,GAAiB,MAAb60D,GAAiC,OAAbA,EAAmB,CACvC,MAAM,KAAE7jE,EAAI,KAAEX,EAAI,MAAE0wB,GAAU6zC,GAAc12D,OAAO22D,GACnD,MAAO,CACH7jE,KAAAA,EACA6T,KAAK,EACL6X,MAAO,IAAIG,EAAMxsB,EAAM0wB,IAG3B9xB,KAAK8lE,eAtDY,CAACF,IAC1B,MAAMK,EAAUL,EAASn/D,MAAM,KAC/B,GAAuB,IAAnBw/D,EAAQriE,QAA+B,MAAfqiE,EAAQ,IAA6B,MAAfA,EAAQ,GACtD,MAAM,IAAIhlE,EAAa,mBAAoB,sBAAsB2kE,sDAErEK,EAAQrtC,SAASuwB,IAEb,GAAoC,GAAhC,gBAAgB+c,KAAK/c,GACrB,MAAM,IAAIloD,EAAa,mBAAoB,sBAAsB2kE,yCA+CjEO,CAAqBP,GAEzB,MAAMjzC,EAAQizC,EAASn/D,MAAM,KAC7B,MAAO,CACHmP,KAAK,EACL6X,MAAOztB,KAAKomE,uBAA2C,QAAnBv6D,EAAK8mB,EAAM,UAAuB,IAAP9mB,EAAgBA,EAAK,GAAwB,QAAnBkF,EAAK4hB,EAAM,UAAuB,IAAP5hB,EAAgBA,EAAK,KAGjJq1D,uBAAuBrB,EAAWC,GAC9B,OAAO,IAAIH,GAAmB7kE,KAAM+kE,EAAWC,EAAW,WAAYhlE,KAAK8xB,OAE/Eu0C,UACI,OAAOrmE,KAAK2R,KAEhB20D,WAAWV,GAEP,OADA5lE,KAAK2R,KAAO3R,KAAKgmE,cAAcJ,GACxB5lE,KAEXyT,OACI,MAAMqhB,EAAQ90B,KAAK21B,aACbjC,EAAMoB,EAAMthB,eAClBxT,KAAK8T,cACL4f,EAAIgd,UAAU,gBAAiB1wC,KAAK2Q,aAAa,OACjD3Q,KAAK2R,KAAK8b,MAAMoH,SAASC,GACzB90B,KAAK2R,KAAK8b,MAAMtZ,WAAWuf,GAC3B1zB,KAAK87D,iBAAiB97D,KAAK2R,KAAK8b,MAAOqH,EAAO90B,KAAK2R,KAAK5P,MACxD/B,KAAK2R,KAAK8b,MAAMmI,cAAc51B,KAAK0B,GACnCgyB,EAAIkd,cCzEZ,MAAM21B,GAA2B,CAC7B,CAACzH,GAAQx7D,UAAW,EACpB,CAAC84D,GAAK94D,UAAW,EACjB,CAACs5D,GAAat5D,UAAW,EACzB,CAACqiE,GAAcriE,UAAW,GAExBkjE,GAA2B,CAC7B,CAACb,GAAcriE,UAAW,EAC1B,CAACs5D,GAAat5D,UAAW,EACzB,CAACw7D,GAAQx7D,UAAW,EACpB,CAAC84D,GAAK94D,UAAW,GAEd,MAAMmjE,WAAc50D,EACvB1Q,YAAYO,EAAGiF,EAAG4B,EAAOokB,GACrBrrB,QAEAtB,KAAKwI,OAAS,EACdxI,KAAK0B,EAAIA,EACT1B,KAAK2G,EAAIA,EACT3G,KAAKuI,MAAQA,EACbvI,KAAK47D,WAAY,EACjB57D,KAAKwlE,QAAU9jE,EAAI,EACnB1B,KAAK0mE,MAAQhlE,EAAI6G,EACjBvI,KAAKu5B,UAAY,GACjBv5B,KAAK2mE,QAAU,EACf3mE,KAAKwsB,KAAO,SACZxsB,KAAK4mE,aAAUjlE,EACf3B,KAAKgV,YACLhV,KAAK2sB,QAAUtsB,OAAOwU,OAAO,CAAEgyD,mBAAoB,GAAI5vB,UAAW,EAAG6vB,WAAY,UAAWC,UAAU,EAAMC,WAAW,EAAMC,yBAA0B36C,EAAO+C,oBAAqB63C,qBAAsB,EAAGC,qBAAsB,EAAGC,kBAAmB,EAAGC,qBAAsB,EAAGC,YAAa,IAAM36C,GACvS3sB,KAAKs3C,OAAS,CAAE51C,EAAG1B,KAAK0B,EAAGiF,EAAG3G,KAAK2G,EAAGC,EAAG5G,KAAKuI,MAAO1B,EAAG,GACxD7G,KAAKunE,uBAAyB,CAAEt0D,YAAa,OAAQE,UAAW,KAChEnT,KAAKwnE,aAELxnE,KAAKg8B,YAAY,IAAI8iC,GAAQ9+D,KAAK2sB,QAAQo6C,SAAWhI,GAAYM,OAASN,GAAYvZ,OAEtFxlD,KAAKynE,eAAe,IAAI3I,GAAQ9+D,KAAK2sB,QAAQq6C,UAAYjI,GAAYM,OAASN,GAAYvZ,OAEnFliD,sBACP,MAAO,QAIAokE,4BACP,MAAMjhC,EAAYna,EAAO+V,mBACzB,OAAOoE,EAAUv3B,aAAa,iBAAmBu3B,EAAUv3B,aAAa,uBAGjEy4D,0BAEP,OADkBr7C,EAAO+V,mBACRnzB,aAAa,uBAGlC04D,0BAA0Bt7D,GACtBtM,KAAKunE,uBAAyBj7D,EAGlCkkC,4BACI,OAAOnwC,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAKuS,YAAavS,KAAKunE,wBAElExtC,MAAM6M,GACF,OAAO5mC,KAAK2sB,QAAQs6C,yBAA2BrgC,EAEnD4gC,aACIxnE,KAAK2sB,QAAQ26C,YAAc,GAC3B,IAAK,IAAI9gE,EAAI,EAAGA,EAAIxG,KAAK2sB,QAAQsqB,UAAWzwC,IACxCxG,KAAK2sB,QAAQ26C,YAAYj5C,KAAK,CAAEw5C,SAAS,IAE7C7nE,KAAKwI,QAAUxI,KAAK2sB,QAAQsqB,UAAYj3C,KAAK2sB,QAAQu6C,sBAAwBlnE,KAAK2sB,QAAQs6C,yBAC1FjnE,KAAK2sB,QAAQ06C,qBAAuBrnE,KAAK2sB,QAAQsqB,UAErD6wB,cAAcpmE,GACL1B,KAAK47D,WACN57D,KAAKusD,SACTvsD,KAAKwlE,QAAU9jE,EACf,MAAMqmE,EAAa/nE,KAAKu5B,UAAU,GAElC,OADAwuC,EAAW5gE,KAAKnH,KAAKwlE,QAAUuC,EAAWh6C,YACnC/tB,KAEXoiC,gBAGI,OAFKpiC,KAAK47D,WACN57D,KAAKusD,SACFvsD,KAAKwlE,QAEhBwC,cAGI,OAFKhoE,KAAK47D,WACN57D,KAAKusD,SACFvsD,KAAK0mE,MAEhBuB,eACI,OAAOjoE,KAAKwlE,QAEhB0C,aACI,OAAOloE,KAAK0mE,MAEhB3/D,OACI,OAAO/G,KAAK0B,EAEhBwtC,cACI,OAAOlvC,KAAK2sB,QAAQsqB,UAExBkxB,YAAYxlE,GAGR,OAFA3C,KAAK2sB,QAAQsqB,UAAYt0C,EACzB3C,KAAKwnE,aACExnE,KAEXoH,KAAKT,GAED,OADA3G,KAAK2G,EAAIA,EACF3G,KAEXgH,OACI,OAAOhH,KAAK2G,EAEhBk1C,iBACI,OAAO77C,KAAKsgC,YAAY,GAAKhU,EAAO6C,qBAAuB,EAE/D0xC,uBACI,OAAO7gE,KAAKsgC,YAAYtgC,KAAKkvC,cAAgB,GAAK5iB,EAAO6C,qBAAuB,EAEpFhoB,KAAKzF,GACD,MAAMoC,EAAQpC,EAAI1B,KAAK0B,EACvB1B,KAAK47D,WAAY,EACjB57D,KAAK0B,EAAIA,EACT1B,KAAKwlE,SAAW1hE,EAChB9D,KAAK0mE,OAAS5iE,EACd,IAAK,IAAI0C,EAAI,EAAGA,EAAIxG,KAAKu5B,UAAU31B,OAAQ4C,IAAK,CAC5C,MAAMy1B,EAAMj8B,KAAKu5B,UAAU/yB,GAC3By1B,EAAI90B,KAAK80B,EAAIl1B,OAASjD,GAE1B,OAAO9D,KAEXk3B,SAAS3uB,GAML,OALAvI,KAAK47D,WAAY,EACjB57D,KAAKuI,MAAQA,EACbvI,KAAK0mE,MAAQ1mE,KAAK0B,EAAI6G,EAGfvI,KAEX+tB,WACI,OAAO/tB,KAAKuI,MAEhBgK,WACI,OAAOlS,OAAOwU,OAAO,CAAE9B,UAAW/S,KAAK2sB,QAAQm6C,WAAY7zD,YAAajT,KAAK2sB,QAAQm6C,WAAY3zD,UAAWmZ,EAAO6C,sBAAwBnvB,KAAKsM,OAEpJ87D,WAAWzB,GAEP,OADA3mE,KAAK2mE,QAAUA,EACR3mE,KAQXqoE,kBAAkBn4D,EAAQ,GACtB,GAAqB,iBAAVA,EACP,MAAM,IAAIjP,EAAa,eAAgB,0BAI3C,GAFKjB,KAAK47D,WACN57D,KAAKusD,SACqD,IAA1DvsD,KAAKk8B,aAAa65B,GAAsBuG,OAAO14D,OAC/C,OAAO,EAGX,GAAI5D,KAAKu5B,UAAUrpB,GAAO4nB,gBAAkBi+B,GAAsB9+B,MAC9D,OAAO,EAEX,IAAIuuC,EAAUxlE,KAAKwlE,QAAUxlE,KAAK0B,EAClC,MAAMqmE,EAAa/nE,KAAKu5B,UAAU,GAIlC,OAHIwuC,EAAWxH,YAAcxB,GAAYQ,cAAgBiG,EAAUuC,EAAWh6C,aAC1Ey3C,GAAWuC,EAAWh6C,YAEnBy3C,EAGX8C,kBAAkBv4D,EAAMulB,EAAS,GAE7B,OADAt1B,KAAKu5B,UAAUlL,KAAK,IAAI2yC,GAAWjxD,EAAM/P,KAAK0B,EAAG4zB,IAC1Ct1B,KAGXuoE,aAAax4D,EAAMy4D,EAAU7hE,GAEzB,OADA3G,KAAKu5B,UAAUlL,KAAK,IAAIm2C,GAAMz0D,EAAMy4D,EAAUxoE,KAAK0B,EAAGiF,IAC/C3G,KAGXyoE,WAAWhG,EAAS97D,EAAGsmD,EAAU,EAAGthD,GAChC,MAAM+8D,EAAe,IAAIlG,GAAaC,EAASziE,KAAK0B,EAAIurD,EAAStmD,GAIjE,OAHIgF,GACA+8D,EAAazzD,YAAYtJ,GAC7B3L,KAAKu5B,UAAUlL,KAAKq6C,GACb1oE,KAGX+iE,SAASD,EAAOn8D,GAEZ,OADA3G,KAAKu5B,UAAUlL,KAAK,IAAIw0C,GAAWC,EAAO9iE,KAAK0B,EAAGiF,IAC3C3G,KAGXskE,QAAQxhE,EAAMsuB,EAAUzE,EAAU,IAE9B,OADA3sB,KAAKu5B,UAAUlL,KAAK,IAAI+1C,GAAUthE,EAAMsuB,EAAUzE,IAC3C3sB,KAEXwkC,YACI,OAAOxkC,KAAKwI,OAEhBq+B,yBACI,OAAO7mC,KAAK2sB,QAAQs6C,yBAExBhzD,iBACI,OAAO,IAAIvN,EAAY1G,KAAK0B,EAAG1B,KAAK2G,EAAG3G,KAAKuI,MAAOvI,KAAKq+C,aAAer+C,KAAK2G,GAEhF03C,aACI,MAAM1xB,EAAU3sB,KAAK2sB,QACfia,EAAUja,EAAQs6C,yBAExB,OADqBjnE,KAAKsgC,YAAY3T,EAAQsqB,WAAatqB,EAAQw6C,qBAAuBvgC,EAG9F29B,iBACI,OAAOvkE,KAAKsgC,YAAYtgC,KAAK2sB,QAAQsqB,WAIzC3W,YAAYv+B,GACR,MAAM4qB,EAAU3sB,KAAK2sB,QACfia,EAAUja,EAAQs6C,yBAClB0B,EAAWh8C,EAAQu6C,qBAEzB,OADUlnE,KAAK2G,EAAI5E,EAAO6kC,EAAU+hC,EAAW/hC,EAGnDgiC,YAAYjiE,GAGR,MAAMgmB,EAAU3sB,KAAK2sB,QACfia,EAAUja,EAAQs6C,yBAClB0B,EAAWh8C,EAAQu6C,qBACzB,OAAQvgE,EAAI3G,KAAK2G,GAAKigC,EAAU+hC,EAEpC1nC,eAAel/B,EAAO,GAClB,OAAO/B,KAAKsgC,aAAav+B,EAAO/B,KAAK2sB,QAAQy6C,mBAEjDn+B,kBAAkBlnC,EAAO,GACrB,OAAO/B,KAAKsgC,YAAYtgC,KAAK2sB,QAAQ06C,qBAAuBtlE,GAEhEilC,YAAYjlC,GACR,MAAM4qB,EAAU3sB,KAAK2sB,QACfia,EAAUja,EAAQs6C,yBAClB0B,EAAWh8C,EAAQu6C,qBACzB,OAAOlnE,KAAK2G,EAAIgiE,EAAW/hC,EAAU,EAAIA,EAAU7kC,EAAO6kC,EAE9D/Q,gBACI,OAAO71B,KAAKsgC,YAAY,GAI5BtE,YAAY4F,EAAUxQ,GAOlB,YANiBzvB,IAAbyvB,GACAwQ,EAAS7J,YAAY3G,GAEzBwQ,EAAS/M,SAAS70B,MAClBA,KAAK47D,WAAY,EACjB57D,KAAKu5B,UAAUlL,KAAKuT,GACb5hC,KAEXynE,eAAe7lC,GAEX,OADA5hC,KAAKg8B,YAAY4F,EAAUm0B,GAAsB2I,KAC1C1+D,KAGX6oE,cAAc94D,GAEV,MAAM,OAAEsvD,EAAM,aAAEE,EAAY,KAAE/Z,GAASuZ,GAKvC,OAJIhvD,IAASsvD,GAAUtvD,IAASwvD,GAAgBxvD,IAASy1C,IACrDxlD,KAAKu5B,UAAU,GAAGgjC,QAAQxsD,GAC1B/P,KAAK47D,WAAY,GAEd57D,KAEX8oE,cAAc/4D,GAMV,OAJIA,IAASgvD,GAAYQ,eACrBv/D,KAAKu5B,UAAU,GAAGgjC,QAAQxsD,GAC1B/P,KAAK47D,WAAY,GAEd57D,KAEX+oE,QAAQC,EAAU58D,EAAMmuC,EAAYnpB,QACfzvB,IAAbyvB,IACAA,EAAW2kC,GAAsBuG,OAEjClrC,IAAa2kC,GAAsB2I,IACnC1+D,KAAK4mE,QAAUoC,EAGfhpE,KAAKwsB,KAAOw8C,EAEhB,MAAM5xD,EAAQpX,KAAKk8B,aAAa9K,EAAUgrC,GAAK94D,UAO/C,OANqB,IAAjB8T,EAAMxT,OACN5D,KAAKipE,QAAQD,EAAU58D,EAAMmuC,EAAYnpB,GAGzCha,EAAM,GAAGmlD,QAAQyM,EAAU58D,EAAMmuC,GAE9Bv6C,KAEX4+D,UACI,OAAO5+D,KAAKwsB,KAEhB08C,WAAWF,EAAU58D,EAAMmuC,GAEvB,OADAv6C,KAAK+oE,QAAQC,EAAU58D,EAAMmuC,EAAYwb,GAAsB2I,KACxD1+D,KAEX2+D,aACI,OAAO3+D,KAAK4mE,QAEhBuC,gBAAgBj7C,EAAS2uC,EAAezrC,QACnBzvB,IAAbyvB,IACAA,EAAW2kC,GAAsBuG,OAErC,MAAM5mD,EAAgB1V,KAAKk8B,aAAa9K,EAAUwrC,GAAat5D,UAO/D,OAN6B,IAAzBoS,EAAc9R,OACd5D,KAAKopE,gBAAgBl7C,EAAS2uC,EAAezrC,GAG7C1b,EAAc,GAAGsnD,UAAU9uC,EAAS2uC,GAEjC78D,KAEXqpE,mBAAmBn7C,EAAS2uC,GAExB,OADA78D,KAAKmpE,gBAAgBj7C,EAAS2uC,EAAe9G,GAAsB2I,KAC5D1+D,KAEXspE,iBAAiB1D,EAAUC,EAAez0C,QACrBzvB,IAAbyvB,IACAA,EAAW2kC,GAAsBuG,OAErC,MAAMiN,EAAiBvpE,KAAKk8B,aAAa9K,EAAUu0C,GAAcriE,UAOjE,OAN8B,IAA1BimE,EAAe3lE,OACf5D,KAAKwpE,iBAAiB5D,EAAUC,EAAez0C,GAG/Cm4C,EAAe,GAAGjD,WAAWV,GAE1B5lE,KAEXypE,oBAAoB7D,EAAUC,GAE1B,OADA7lE,KAAKspE,iBAAiB1D,EAAUC,EAAe9P,GAAsB2I,KAC9D1+D,KAYXopE,gBAAgBl7C,EAAS2uC,EAAezrC,GAKpC,YAJiBzvB,IAAbyvB,IACAA,EAAW2kC,GAAsBuG,OAErCt8D,KAAKg8B,YAAY,IAAI4gC,GAAa1uC,EAAS2uC,GAAe9kC,YAAY3G,GAAWA,GAC1EpxB,KAcXipE,QAAQz8C,EAAMpgB,EAAMmuC,EAAYnpB,GAQ5B,YAPiBzvB,IAAbyvB,GAA0BA,IAAa2kC,GAAsBuG,MAC7Dt8D,KAAKwsB,KAAOA,EAEP4E,IAAa2kC,GAAsB2I,MACxC1+D,KAAK4mE,QAAUp6C,GAEnBxsB,KAAKg8B,YAAY,IAAIogC,GAAK5vC,EAAMpgB,EAAMmuC,GAAanpB,GAC5CpxB,KAEX0pE,WAAWl9C,EAAMpgB,EAAMmuC,GAEnB,OADAv6C,KAAKipE,QAAQz8C,EAAMpgB,EAAMmuC,EAAYwb,GAAsB2I,KACpD1+D,KAaXwpE,iBAAiB5D,EAAUC,EAAez0C,GAEtC,OADApxB,KAAKg8B,YAAY,IAAI2pC,GAAcC,EAAUC,GAAgBz0C,GACtDpxB,KAEX2pE,oBAAoB/D,EAAUC,GAE1B,OADA7lE,KAAKwpE,iBAAiB5D,EAAUC,EAAe9P,GAAsB2I,KAC9D1+D,KAGX4pE,iBAEI,OADA5pE,KAAKipE,QAAQ,UACNjpE,KAOXk8B,aAAa9K,EAAUS,GACnB,MAAMg4C,OAA0BloE,IAAbyvB,EACb04C,OAA0BnoE,IAAbkwB,EACnB,OAAIg4C,GAAcC,EACP9pE,KAAKu5B,UAEPswC,EAEE7pE,KAAKu5B,UAAU80B,QAAQ39B,GAAMmB,IAAanB,EAAEze,gBAE9C63D,EAEE9pE,KAAKu5B,UAAU80B,QAAQ39B,GAAMU,IAAaV,EAAEoH,gBAI5C93B,KAAKu5B,UAAU80B,QAAQ39B,GAAMU,IAAaV,EAAEoH,eAAiBjG,IAAanB,EAAEze,gBAO3F83D,eAAeC,EAAOC,GAClB,IAAK,IAAIzjE,EAAIwjE,EAAMpmE,OAAS,EAAG4C,GAAK,EAAGA,IACnC,IAAK,IAAIw8C,EAAI,EAAGA,EAAIx8C,EAAGw8C,IACnB,GAAIinB,EAAMD,EAAMhnB,GAAG/wC,eAAiBg4D,EAAMD,EAAMhnB,EAAI,GAAG/wC,eAAgB,CACnE,MAAMi4D,EAAOF,EAAMhnB,GACnBgnB,EAAMhnB,GAAKgnB,EAAMhnB,EAAI,GACrBgnB,EAAMhnB,EAAI,GAAKknB,GAK/B3d,SACI,MAAMwb,EAAa/nE,KAAKu5B,UAAU,GAC5B4wC,EAAanqE,KAAKu5B,UAAU,GAC5B6wC,EAAepqE,KAAKk8B,aAAa65B,GAAsBuG,OACvD+N,EAAerqE,KAAKk8B,aAAa65B,GAAsB2I,KAU7D,IAAIn2D,EACAy1C,EACApc,EAXJ5hC,KAAK+pE,eAAeK,EAAc7D,IAClCvmE,KAAK+pE,eAAeM,EAAc7D,IAC9B4D,EAAaxmE,OAAS,GAAKmkE,EAAWxH,YAAcxB,GAAYQ,eAChE6K,EAAa/7C,KAAK+7C,EAAa7uC,OAAO,EAAG,GAAG,IAC5C6uC,EAAa7uC,OAAO,EAAG,EAAG,IAAIujC,GAAQC,GAAYM,UAElDgL,EAAa/uC,QAAQ6uC,GAAc,GACnCE,EAAa9uC,OAAO,EAAG,EAAG,IAAIujC,GAAQC,GAAYvZ,OAKtD,IAAI6Y,EAAS,EACT38D,EAAI1B,KAAK0B,EACb,IAAK,IAAI8E,EAAI,EAAGA,EAAI4jE,EAAaxmE,OAAQ4C,IACrCo7B,EAAWwoC,EAAa5jE,GACxBw3C,EAAUpc,EAASo6B,WAAWx1D,EAAI63D,GAClC91D,EAAQq5B,EAAS7T,WACjBrsB,GAAKs8C,EACLpc,EAASz6B,KAAKzF,GACdA,GAAK6G,EACDy1C,EAAUz1C,IAAU,GACpB81D,IAERr+D,KAAKwlE,QAAU9jE,EACfA,EAAI1B,KAAK0B,EAAI1B,KAAKuI,MAClB,MAAM62D,EAAS,CACXroC,KAAM,EACNC,MAAO,EACP+oC,aAAc,EACdD,YAAa,GAEjB,IAAIwK,EAAiB,EACrB,IAAK,IAAI9jE,EAAI,EAAGA,EAAI6jE,EAAazmE,OAAQ4C,IAAK,CAC1Co7B,EAAWyoC,EAAa7jE,GACxB8jE,EAAiBzL,GAAUj9B,GAAYp7B,EAAI8jE,EAC3ClL,EAAOpoC,MAAQ,EACfooC,EAAOroC,KAAO,EACdqoC,EAAOW,aAAe,EACtBX,EAAOU,YAAc,EACrB,MAAM5D,EAAgBt6B,EAASu6B,mBAC3BD,GACU,IAAN11D,IACA44D,EAAOpoC,MAAQklC,EAAc2D,MAAQ,EACrCT,EAAOW,aAAe7D,EAAc6D,cAAgB,GAExDX,EAAOroC,MAAQmlC,EAAc0D,MAAQ,EACrCR,EAAOU,YAAc5D,EAAc4D,aAAe,EAC9Ct5D,IAAM6jE,EAAazmE,OAAS,IAC5Bw7D,EAAOU,YAAc,KAIzBV,EAAOW,aAAen+B,EAASo6B,WAAWx1D,EAAI8jE,GACpC,IAAN9jE,IACA44D,EAAOpoC,MAAQ4K,EAAS7T,YAElB,IAANvnB,IACA44D,EAAOroC,KAAO6K,EAAS7T,aAG/BrsB,GAAK09D,EAAOW,aACZr+D,GAAK09D,EAAOpoC,MACZ4K,EAASz6B,KAAKzF,GACdA,GAAK09D,EAAOroC,KACZr1B,GAAK09D,EAAOU,YAEhB9/D,KAAK0mE,MAAgC,IAAxB2D,EAAazmE,OAAe5D,KAAK0B,EAAI1B,KAAKuI,MAAQ7G,EAC/D1B,KAAK47D,WAAY,EAKrBnoD,OACI,MAAMigB,EAAM1zB,KAAKwT,eACjBxT,KAAK8T,cACL4f,EAAIgd,UAAU,QAAS1wC,KAAK2Q,aAAa,OACpC3Q,KAAK47D,WACN57D,KAAKusD,SACT,MAAMtV,EAAYj3C,KAAK2sB,QAAQsqB,UACzB1uC,EAAQvI,KAAKuI,MACb7G,EAAI1B,KAAK0B,EACf,IAAIiF,EAEJ,IAAK,IAAI5E,EAAO,EAAGA,EAAOk1C,EAAWl1C,IACjC4E,EAAI3G,KAAKsgC,YAAYv+B,GACrB/B,KAAKwS,aACDxS,KAAK2sB,QAAQ26C,YAAYvlE,GAAM8lE,UAC/Bn0C,EAAIQ,YACJR,EAAIS,OAAOzyB,EAAGiF,GACd+sB,EAAIU,OAAO1yB,EAAI6G,EAAO5B,GACtB+sB,EAAI1G,UAERhtB,KAAKqT,eAGT,IAAK,IAAI7M,EAAI,EAAGA,EAAIxG,KAAKu5B,UAAU31B,OAAQ4C,IAAK,CAC5C,MAAMo7B,EAAW5hC,KAAKu5B,UAAU/yB,GAEH,mBAAlBo7B,EAASnuB,OAChBmuB,EAASpvB,WAAWkhB,GACpBkO,EAASnuB,KAAKzT,KAAMA,KAAKqoE,kBAAkB7hE,IAC3Co7B,EAASvuB,aAAaqgB,IAI9B,GAAI1zB,KAAK2mE,QAAU,EAAG,CAClBjzC,EAAIhhB,OACJghB,EAAItf,QAAQpU,KAAKsU,UACjB,MAAMwZ,EAAY4F,EAAI8hB,YAAY,GAAKx1C,KAAK2mE,SAASp+D,MACrD5B,EAAI3G,KAAKihC,eAAe,GAAK,EAC7BvN,EAAIwL,SAAS,GAAKl/B,KAAK2mE,QAAS3mE,KAAK0B,EAAIosB,EAAY,EAAGnnB,GACxD+sB,EAAIpgB,UAGR,OADAogB,EAAIkd,aACG5wC,KAEXuiE,sBACI,OAAOviE,KAAK2sB,QAAQk6C,mBAMxB0D,oBACI,OAAOvqE,KAAK2sB,QAAQ26C,YASxBkD,iBAAiBC,EAAanD,GAC1B,GAAImD,GAAezqE,KAAK2sB,QAAQsqB,WAAawzB,EAAc,EACvD,MAAM,IAAIxpE,EAAa,mBAAoB,iFAE/C,QAA4BU,IAAxB2lE,EAAYO,QACZ,MAAM,IAAI5mE,EAAa,mBAAoB,oEAE/C,GAAmC,kBAAxBqmE,EAAYO,QACnB,MAAM,IAAI5mE,EAAa,mBAAoB,4EAG/C,OADAjB,KAAK2sB,QAAQ26C,YAAYmD,GAAenD,EACjCtnE,KAWX0qE,kBAAkBC,GACd,GAAIA,EAAoB/mE,SAAW5D,KAAK2sB,QAAQsqB,UAC5C,MAAM,IAAIh2C,EAAa,mBAAoB,2FAK/C,IAAK,MAAMqmE,KAAeqD,EAE0BhpE,MAA5CgpE,EAAoBrD,GAAaO,UACjC8C,EAAoBrD,GAAetnE,KAAK2sB,QAAQ26C,YAAYA,IAEhEtnE,KAAK2sB,QAAQ26C,YAAYA,GAAejnE,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAK2sB,QAAQ26C,YAAYA,IAAeqD,EAAoBrD,IAGxI,OADAtnE,KAAK2sB,QAAQ26C,YAAcqD,EACpB3qE,MCnoBf,SAAS4qE,GAAmBl3C,EAAK3jB,EAAM86D,EAAM7lC,EAAMq0B,GAC/C,GAAItpD,IAAS+6D,GAAe/6D,KAAKg7D,kBAAoBh7D,IAAS+6D,GAAe/6D,KAAKi7D,kBAC9E,MAAM,IAAI/pE,EAAa,mBAAoB,uDAE/C,IAAIkxB,EAAU,EACV84C,EAAgB,IAEhBl7D,IAAS+6D,GAAe/6D,KAAKi7D,oBAC7B74C,GAAW,EACX84C,EAAgB,GAGpBv3C,EAAI2+B,SAASwY,EAAO14C,EAAS6S,EAAM,EAAGq0B,EAAOr0B,GAE7CtR,EAAI2+B,SAASwY,EARW,EAQa7lC,EAAMimC,EAAe5R,EAAOr0B,GDwnBrEyhC,GAAMjyD,UAAY,CACdhI,OAAQhB,EAAKiB,WACbL,KAAM,EACNC,OAAQjC,EAAWsC,OACnBJ,MAAOjC,EAAUqC,QCznBd,MAAMo+D,WAAuBj5D,EAChC1Q,YAAY+pE,EAAWC,GACnB7pE,QACAtB,KAAKk/D,UAAY5yC,EAAO6C,qBACxBnvB,KAAKuI,MAAQ,EACbvI,KAAKkrE,UAAYA,EACjBlrE,KAAKmrE,aAAeA,EACpBnrE,KAAK+P,KAAO+6D,GAAe/6D,KAAKuvD,OAChCt/D,KAAKgV,YAGLhV,KAAKmyB,QAAU,EACfnyB,KAAKorE,MAAQ,GAEN9nE,sBACP,MAAO,iBAMXi5D,QAAQxsD,GAKJ,OAJAA,EAAuB,iBAATA,EAAoB+6D,GAAe9K,WAAWjwD,GAAQA,IACxD+6D,GAAe/6D,KAAKs7D,cAAgBt7D,GAAQ+6D,GAAe/6D,KAAKy1C,OACxExlD,KAAK+P,KAAOA,GAET/P,KAGXskE,QAAQxhE,EAAM6pB,EAAU,IAKpB,OAJA3sB,KAAKorE,MAAM/8C,KAAK,CACZi9C,QAASxoE,EACT6pB,QAAStsB,OAAOwU,OAAO,CAAE6tD,QAAS,EAAGh1C,QAAS,GAAKf,KAEhD3sB,KAEX+0B,UAAU5C,GACN,GAAuB,iBAAZA,EACP,MAAM,IAAIlxB,EAAa,cAAe,4BAG1C,OADAjB,KAAKmyB,QAAUA,EACRnyB,KAEXm4B,YACI,OAAOn4B,KAAKmyB,QAGhB1e,OACI,MAAMigB,EAAM1zB,KAAKwT,eACjBxT,KAAK8T,cACL,IAAIkxB,EAAOhlC,KAAKkrE,UAAU5qC,YAAY,GAClC+4B,EAAOr5D,KAAKmrE,aAAa7qC,YAAYtgC,KAAKmrE,aAAaj8B,cAAgB,GAAKlvC,KAAKk/D,UACjF32D,EAAQvI,KAAKuI,MACbsiE,EAAO7qE,KAAKkrE,UAAUnkE,QACI/G,KAAK+P,OAAS+6D,GAAe/6D,KAAKs7D,cAC5DrrE,KAAK+P,OAAS+6D,GAAe/6D,KAAKi7D,mBAClChrE,KAAK+P,OAAS+6D,GAAe/6D,KAAKw7D,eAElCV,EAAO7qE,KAAKkrE,UAAUnkE,OAAS/G,KAAKkrE,UAAUn9C,YAElD,IAAIy9C,EAAoBnS,EAAOr0B,EAC/B,OAAQhlC,KAAK+P,MACT,KAAK+6D,GAAe/6D,KAAKsvD,OAGzB,KAAKyL,GAAe/6D,KAAK07D,YAGzB,KAAKX,GAAe/6D,KAAKs7D,aACrB9iE,EAAQ,EACR,MACJ,KAAKuiE,GAAe/6D,KAAKuvD,OACrBuL,GAAQ7qE,KAAKuI,MAAQ,EACrBy8B,GAAQhlC,KAAKk/D,UACbsM,GAAqB,GACrB,MACJ,KAAKV,GAAe/6D,KAAK27D,MAAO,CAC5BnjE,EAAQ,GAER,MAAMP,EAAKhI,KAAKkrE,UAAUnkE,OAAS,EAAI/G,KAAKmyB,QACtCjqB,EAAK88B,EACL2mC,EAAK3jE,EACL4jE,EAAKvS,EACLlxD,EAAKH,EAAKO,EACVH,EAAKF,EAAKsjE,EAAoB,EAC9BK,EAAO1jE,EAAK,GAAMI,EAClBujE,EAAO5jE,EAAK,GAAMsjE,EAClBO,EAAO/jE,EAAK,IAAMO,EAClByjE,EAAO5jE,EAAK,KAAQojE,EACpBS,EAAOF,EACPG,EAAO9jE,EAAK,KAAQojE,EACpBW,EAAON,EACPO,EAAOR,EAAK,GAAMJ,EAClBa,EAAOlkE,EAAKI,EACZ+jE,EAAOF,EACPG,EAAOvkE,EAAK,GAAMO,EAClBikE,EAAOpkE,EAAK,KAAQojE,EACpBiB,EAAOF,EACPG,EAAOtkE,EAAK,KAAQojE,EACpBmB,EAAON,EACPO,EAAOd,EACbp4C,EAAIQ,YACJR,EAAIS,OAAOnsB,EAAIE,GACfwrB,EAAIY,cAAcu3C,EAAMC,EAAMC,EAAMC,EAAM7jE,EAAIC,GAC9CsrB,EAAIY,cAAc23C,EAAMC,EAAMC,EAAMC,EAAMT,EAAIC,GAC9Cl4C,EAAIY,cAAc+3C,EAAMC,EAAMC,EAAMC,EAAMrkE,EAAIC,GAC9CsrB,EAAIY,cAAcm4C,EAAMC,EAAMC,EAAMC,EAAM5kE,EAAIE,GAC9CwrB,EAAIa,OACJb,EAAI1G,SACJ,MAEJ,KAAK89C,GAAe/6D,KAAK88D,QACrB7nC,GAAQ,EACRq0B,GAAQ,EACRmS,EAAoBnS,EAAOr0B,EAC3BpX,EAAM2Z,YAAY7T,EAAKm3C,EAAO,EAAG7lC,EAAM,GAAI,cAC3CpX,EAAM2Z,YAAY7T,EAAKm3C,EAAO,EAAGxR,EAAM,GAAI,iBAC3CwR,GAAQ7qE,KAAKuI,MAAQ,EACrB,MACJ,KAAKuiE,GAAe/6D,KAAKg7D,iBACrBH,GAAmBl3C,EAAK1zB,KAAK+P,KAAM86D,EAAO7qE,KAAKmyB,QAAS6S,EAAMq0B,EAAOr5D,KAAKk/D,WAC1E,MACJ,KAAK4L,GAAe/6D,KAAKi7D,kBACrBJ,GAAmBl3C,EAAK1zB,KAAK+P,KAAM86D,EAAM7lC,EAAMq0B,EAAOr5D,KAAKk/D,WAC3D,MACJ,KAAK4L,GAAe/6D,KAAKw7D,YACrBhjE,EAAQ,EACRijE,GAAqBxrE,KAAKk/D,UAC1B,MACJ,KAAK4L,GAAe/6D,KAAKy1C,KACrB,MACJ,QACI,MAAM,IAAIvkD,EAAa,cAAe,qCAAqCjB,KAAK+P,qBAEpF/P,KAAK+P,OAAS+6D,GAAe/6D,KAAK27D,OAClC1rE,KAAK+P,OAAS+6D,GAAe/6D,KAAKg7D,kBAClC/qE,KAAK+P,OAAS+6D,GAAe/6D,KAAKi7D,mBAClChrE,KAAK+P,OAAS+6D,GAAe/6D,KAAKy1C,MAClC9xB,EAAI2+B,SAASwY,EAAM7lC,EAAMz8B,EAAOijE,GAGhCxrE,KAAK+P,OAAS+6D,GAAe/6D,KAAKw7D,aAClC73C,EAAI2+B,SAASwY,EAAO,EAAG7lC,EAAMz8B,EAAOijE,GAExC93C,EAAIhhB,OACJghB,EAAItgB,aAAa,GACjBsgB,EAAItf,QAAQpU,KAAKsU,UAEjB,IAAK,IAAI9N,EAAI,EAAGA,EAAIxG,KAAKorE,MAAMxnE,OAAQ4C,IAAK,CACxC,MAAM1D,EAAO9C,KAAKorE,MAAM5kE,GAClBg1C,EAAa9nB,EAAI8hB,YAAY,GAAK1yC,EAAKwoE,SAAS/iE,MAChD7G,EAAI1B,KAAKkrE,UAAUnkE,OAASy0C,EAAa,GAAK14C,EAAK6pB,QAAQ+1C,QAC3D/7D,GAAK3G,KAAKkrE,UAAU5qC,YAAY,GAAKtgC,KAAKmrE,aAAa5G,kBAAoB,EAAIzhE,EAAK6pB,QAAQe,QAClGgG,EAAIwL,SAAS,GAAKp8B,EAAKwoE,QAAS5pE,EAAGiF,EAAI,GAE3C+sB,EAAIpgB,WAGZw3D,GAAet2D,UAAY,CACvBhI,OAAQhB,EAAK8D,MACblD,KAAM,GACNC,OAAQjC,EAAWsC,OACnBJ,MAAOjC,EAAUqC,QAOrBo+D,GAAe/6D,KAAO,CAClBs7D,aAAc,EACdI,YAAa,EACbpM,OAAQ,EACRC,OAAQ,EACRoM,MAAO,EACPmB,QAAS,EACT9B,iBAAkB,EAClBC,kBAAmB,EACnBO,YAAa,EACb/lB,KAAM,GAeVslB,GAAe9K,WAAa,CACxB8M,YAAahC,GAAe/6D,KAAKs7D,aACjC0B,WAAYjC,GAAe/6D,KAAK07D,YAChCxL,OAAQ6K,GAAe/6D,KAAKsvD,OAC5Ba,OAAQ4K,GAAe/6D,KAAKuvD,OAC5B0N,MAAOlC,GAAe/6D,KAAK27D,MAC3BuB,QAASnC,GAAe/6D,KAAK88D,QAC7BK,eAAgBpC,GAAe/6D,KAAKg7D,iBACpCoC,gBAAiBrC,GAAe/6D,KAAKi7D,kBACrCoC,WAAYtC,GAAe/6D,KAAKw7D,YAChCjL,KAAMwK,GAAe/6D,KAAKy1C,MCrN9B,MAAM6nB,GAAYC,GAAQA,EAAIt4B,QAAO,CAACxyC,EAAGC,IAAMD,EAAIC,GAAG,GAKtD,SAAS8qE,GAAeniC,EAAQoiC,EAAaC,GACzC,MAAM1jB,EAAuBqC,GAAUnB,wBAAwB7f,GAEzDsiC,EAAmB,GACnBC,EAAW,GACXpgB,EAAW,GAsBjB,OAnBAniB,EAAOxS,SAAQ,CAACkC,EAAOozB,KAGnB,MAAMhE,EAAY,IAAIhnD,EAAS,EAAG6mD,GAClCjvB,EAAMgwB,eAAelyB,SAASuyB,IAC1B,MAAMyiB,EAAe1jB,EAAU/mD,UAE/B,IAAKuqE,EAAiBE,GAAe,CACjC,MAAMC,EAAaL,EAAY,CAAE9gB,OAAQkhB,IACzCrgB,EAASl/B,KAAKw/C,GACdH,EAAiBE,GAAgBC,EAEjCF,EAASt/C,KAAKu/C,GAGlBH,EAAatiB,EAAUuiB,EAAiBE,GAAe1f,GACvDhE,EAAU7lD,IAAI8mD,EAAShxB,kBAGxB,CACH9oB,IAAKq8D,EACLI,MAAOvgB,EACPwgB,KAAMJ,EAASzgC,MAAK,CAAC1qC,EAAGC,IAAMD,EAAIC,IAClCsnD,qBAAAA,GAgBR,SAASikB,GAA4B7/C,EAAO8/C,EAAcC,EAAelpE,GAErE,IAAImpE,EAAeF,EAEnB,IAAK,IAAIG,EAAYF,EAAgB,EAAGE,EAAYjgD,EAAMvqB,OAAQwqE,IAAa,CAC3E,MAAMh3C,EAAOjJ,EAAMigD,GACnB,GAAIhxC,EAAOhG,KAAUA,EAAK+I,WAAa/I,EAAKgD,oBAAqB,CAC7D+zC,EAAe/2C,EAAKyJ,iBACpB,OAIR,GAAI77B,GAAWipE,IAAiBE,EAAc,CAG1CA,EAAe5rE,EAFHS,KAAK6E,IAAIomE,EAAcE,GACvBnrE,KAAK8hC,IAAImpC,EAAcE,IAGvC,OAAOA,EAkBJ,MAAM/hB,GACTjrD,YAAYwrB,GACR3sB,KAAKquE,iBAAmBhuE,OAAOwU,OAAO,CAAEy5D,eAAe,EAAOjkB,cAAe,IAAKkkB,cAAe,GAAK5hD,GACtG3sB,KAAKwuE,aAAe,EACpBxuE,KAAKyuE,UAAY,EACjBzuE,KAAK0uE,WAAa,EAClB1uE,KAAK2uE,cAAgB,GAErB3uE,KAAK4uE,cAAgB,EAErB5uE,KAAK6uE,kBAAmB,EAExB7uE,KAAK8uE,kBAAentE,EACpB3B,KAAK+uE,sBAAmBptE,EAGxB3B,KAAKgvE,YAAc,CACfC,MAAO,EACPC,KAAM,IAEVlvE,KAAKorC,OAAS,GACdprC,KAAKmvE,YAAc,GAMvB5rE,oBAAoB4qB,EAAOzsB,EAAI,GAAG,eAAE0tE,EAAiB,IAAO,IACxDjhD,EAAM6mB,QAAO,CAACq6B,EAAaj4C,KACvBA,EAAKyE,qBAAqB,IAAIs/B,IAC9B,MAAM3M,GAAO,IAAI/B,IAAcR,YAAY70B,GAAMiF,YAC3C9tB,EAAUigD,EAAK5/C,aAErB,OADA4/C,EAAKrnD,KAAKkoE,EAAc9gE,EAAQ4+C,aACzBkiB,EAAc7gB,EAAKzgC,WAAaxf,EAAQ6+C,aAAegiB,IAC/D1tE,GAGP6B,qBAAqBmwB,EAAKmlB,EAAWpjB,EAAMvtB,EAAIE,EAAIukB,GAE/C,MAAMjrB,EAAI+zB,GADV9I,EAAUtsB,OAAOwU,OAAO,CAAEy6D,aAAchjD,EAAO+V,mBAAmBnzB,aAAa,kBAAoByd,IAC1E2iD,aACnBN,EAAcn2B,EAAUm2B,YAQ9Bt7C,EAAIhhB,OACJghB,EAAItf,QAAQ5I,EAAKiB,WAAY,GAC7BuiE,EAAYE,KAAKt2C,SAAS22C,IAT1B,IAAgBvnE,EAAIG,EAAIi3B,EAARp3B,EAULtG,EAAI6tE,EAAIvnE,GAVCG,EAUGzG,EAAI6tE,EAAIpnE,GAVPi3B,EAUW,wBAT/B1L,EAAIQ,YACJR,EAAIxgB,eAAeksB,GACnB1L,EAAI1gB,aAAaosB,GACjB1L,EAAItgB,aAAa,GACjBsgB,EAAI2+B,SAASrqD,EAAIE,EAAIlF,KAAK6E,IAAIM,EAAKH,EAAI,GAAII,EAAKF,GAMhDwrB,EAAI1gB,aAAa,SACjB0gB,EAAIwL,SAASl8B,KAAKm8B,MAAMowC,EAAIpnE,GAAKonE,EAAIvnE,IAAIjC,WAAYrE,EAAI6tE,EAAIvnE,GAAII,EAAK,OAE1EsrB,EAAI1gB,aAAa,OACjB0gB,EAAIwL,SAAS,UAAU2Z,EAAU41B,WAAa,GAAGe,QAAQ,cAAc32B,EAAU61B,YAAc,GAAGc,QAAQ,WAAWR,EAAYC,MAAMO,QAAQ,KAAM9tE,EAAI,GAAI0G,EAAK,IAClKsrB,EAAIpgB,UAiBR/P,qBAAqBmwB,EAAKoB,EAAO3G,EAAOzB,GACpC,IAAIC,EAAU,CACV8iD,WAAW,EACXC,aAAa,GAEK,iBAAXhjD,EACPC,EAAUtsB,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI8X,GAAUD,GAE7B,kBAAXA,IACZC,EAAQ8iD,UAAY/iD,GAGxB,MAAMoO,EAAQ,IAAI8uB,GAAMt9B,EAAOqE,SAASq6B,QAAQpB,GAAMa,KAAKa,MAAMY,aAAa/9B,GAExEwhD,EAAQhjD,EAAQ8iD,UAAYG,GAAKC,iBAAiB/0C,GAAS,GASjE,OAPA,IAAIsxB,IACCE,WAAW,CAACxxB,IACZg1C,cAAc,CAACh1C,GAAQhG,EAAO,CAAE46C,YAAa/iD,EAAQ+iD,YAAa56C,MAAAA,IAEvEgG,EAAMjG,SAASC,GAAOrhB,KAAKigB,EAAKoB,GAChC66C,EAAM/2C,SAAS4I,GAASA,EAAKrtB,WAAWuf,GAAKjgB,SAEtCqnB,EAAM7mB,iBAejB1Q,wBAAwBmwB,EAAKq8C,EAAUj7C,EAAOk7C,EAAU7hD,EAAO8hD,EAAUvjD,GACrE,IAAIuuC,EAAO,CACPwU,UAAWQ,EACXP,aAAa,GAEK,iBAAXhjD,EACPuuC,EAAO56D,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAIomD,GAAOvuC,GAEvB,kBAAXA,IACZuuC,EAAKwU,UAAY/iD,GAGrB,MAAMwjD,EAAY,IAAItmB,GAAMt9B,EAAOqE,SAASq6B,QAAQpB,GAAMa,KAAKa,MAAMY,aAAa/9B,GAE5EgiD,EAAW,IAAIvmB,GAAMt9B,EAAOqE,SAASq6B,QAAQpB,GAAMa,KAAKa,MAAMY,aAAa8jB,GAE3EL,EAAQ1U,EAAKwU,UAAYG,GAAKC,iBAAiBK,GAAa,IAElE,IAAI9jB,IACCE,WAAW,CAAC4jB,IACZ5jB,WAAW,CAAC6jB,IACZL,cAAc,CAACI,EAAWC,GAAWr7C,EAAO,CAAE46C,YAAazU,EAAKyU,cAErEQ,EAAUz8D,KAAKigB,EAAKoB,GACpBq7C,EAAS18D,KAAKigB,EAAKq8C,GACnBJ,EAAM/2C,SAAS4I,GAASA,EAAKrtB,WAAWuf,GAAKjgB,SAE7C,IAAIq3D,GAAeh2C,EAAOi7C,GAAU57D,WAAWuf,GAAKjgB,OAQxDlQ,yBAAyB6mD,EAAWgmB,EAAeC,GAC/CjmB,EAAUxxB,SAAQ,CAAC03C,EAAcpgE,KAC7B,GAAIk5B,EAAYknC,IAAiBA,EAAanwC,SAAU,CACpD,GAAImwC,EAAat1C,cAAgBq1C,EAC7B,OAGJ,MAAMj/C,EAAWk/C,EAAaxvC,WAAW1P,SAAStE,cAClD,GAAiB,QAAbsE,GAAmC,QAAbA,EACtB,OAEJ,GAAIg/C,GAAiBE,EAAa/uC,UAAW,CAEzC,MAAMoJ,EAAQ2lC,EAAaztC,cAAc,GACzC,GAAc,IAAV3yB,EACAy6B,EAAM5oC,KAAOisE,GAA4B5jB,EAAWzf,EAAM5oC,KAAMmO,GAAO,QAEtE,GAAIA,EAAQ,GAAKA,EAAQk6C,EAAUxmD,OAAQ,CAE5C,MAAM2sE,EAAenmB,EAAUl6C,EAAQ,GACvC,GAAIk5B,EAAYmnC,GACZ,GAAIA,EAAapwC,SACbwK,EAAM5oC,KAAOwuE,EAAa1tC,cAAc,GAAG9gC,SAE1C,CACD,MAAM8rC,EAAW0iC,EAAa1vC,iBAE9B8J,EAAM5oC,KAAOisE,GAA4B5jB,EAAWvc,EAAU39B,GAAO,IAIjFogE,EAAa1mC,WAAW,EAAGe,EAAM5oC,WAWjDyuE,WAAWplC,EAAQglC,GACf,IAAKhlC,IAAWA,EAAOxnC,OACnB,MAAM,IAAI3C,EAAa,cAAe,6BAE1CmqC,EAAOxS,SAASkC,GAAUsxB,GAAUqkB,kBAAkB31C,EAAMgwB,eAAgBslB,KAoBhFM,0BAA0BtlC,GACtB,MAAMulC,EAAmBrkD,EAAO+V,mBAAmBnzB,aAAa,8BAGhE,IAAI0hE,EAAoB,EACpBC,EAAO,EACPC,EAAO,EACX,MAAM1R,EAAS,GACT5pD,EAAY,GAElB,GAAIxV,KAAK6uE,iBACL,OAAO7uE,KAAK4uE,cAEhB,IAAK5uE,KAAK8uE,aAAc,CACpB,IAAK1jC,EACD,MAAM,IAAInqC,EAAa,cAAe,sDAE1CjB,KAAK+wE,mBAAmB3lC,GAG5B,MAAQ2iC,KAAMiD,EAAa3/D,IAAK4/D,GAAejxE,KAAK8uE,aACpD9uE,KAAK4uE,cAAgB,EAGrBoC,EAAYp4C,SAAS41B,IACjB,MAAM/7C,EAAUw+D,EAAWziB,GAC3B/7C,EAAQ4pB,YAGJ5pB,EAAQq4C,eAAelnD,OAASwnC,EAAOxnC,SACvCgtE,GAAqB,GAGzBn+D,EAAQq4C,eAAelyB,SAASl1B,IAC5BmtE,GAAQntE,EAAEkL,aAAarG,MACvBuoE,GAAQptE,EAAEy2B,WAAWn2B,QACrBo7D,EAAO/wC,KAAK3qB,EAAEkL,aAAarG,OAC3BiN,EAAU6Y,KAAK3qB,EAAEy2B,WAAWn2B,YAEhC,MAAMuE,EAAQkK,EAAQsb,WACtB/tB,KAAK4uE,eAAiBrmE,KAE1BvI,KAAK6uE,kBAAmB,EAExB,MAAMqC,EAAOL,EAAO,EAAIA,EAAOzR,EAAOx7D,OAAS,EAAIw7D,EAAOx7D,OACpDutE,EAAO9D,GAASjO,EAAO/tD,KAAK+/D,GAAOpuE,KAAK8G,IAAIsnE,EAAKF,EAAM,MACvDG,EAAQruE,KAAK8G,IAAIqnE,EAAO/R,EAAOx7D,OAAQ,IAAOstE,EAC9CI,EAAOR,EAAOt7D,EAAU5R,OACxB2tE,EAAOlE,GAAS73D,EAAUnE,KAAK+/D,GAAOpuE,KAAK8G,IAAIsnE,EAAKE,EAAM,MAC1DE,EAAQxuE,KAAK8G,IAAIynE,EAAO/7D,EAAU5R,OAAQ,IAAO0tE,EAEjDG,EAASzuE,KAAK6E,IAAI2pE,EAAOH,GAASL,EAAYptE,OAAS+sE,EACvDe,EAAef,EAAmBC,EACxC,OAAO5wE,KAAK4uE,cAAgB5rE,KAAK6E,IAAI6pE,EAAcD,GAMvDjlB,mBACI,IAAKxsD,KAAK6uE,iBACN,MAAM,IAAI5tE,EAAa,kBAAmB,qFAE9C,OAAOjB,KAAK4uE,cAGhBrrE,+BAA+B6nC,GAC3B,IAAKA,IAAWA,EAAOxnC,OACnB,MAAM,IAAI3C,EAAa,cAAe,uBAE1C,MAAMspD,EAAanf,EAAO,GAAGsf,gBAU7B,OAT6Btf,EAAO4J,QAAO,CAACq6B,EAAav0C,KACrD,IAAKA,EAAM4vB,gBAAgB3lD,OAAOwlD,GAC9B,MAAM,IAAItpD,EAAa,eAAgB,yDAE3C,GAAI65B,EAAMiwB,YAAcnB,GAAMa,KAAKR,SAAWnvB,EAAMywB,aAChD,MAAM,IAAItqD,EAAa,kBAAmB,qCAE9C,OAAO+B,KAAK6E,IAAIwnE,EAAansE,EAASW,IAAIwrE,EAAav0C,EAAMmwB,8BAC9D,GAIP0mB,uBAAuBvmC,GACnB,MACMmiB,EAAWggB,GAAeniC,GAAQ,IAAM,IAAI+vB,KADvC,CAAChQ,EAAU14C,IAAY04C,EAAStvB,qBAAqBppB,KAGhE,OADAzS,KAAK+uE,iBAAmBxhB,EACjBA,EAMXwjB,mBAAmB3lC,GACf,MACMmiB,EAAWggB,GAAeniC,GAASojB,GAAS,IAAI/B,GAAY+B,KADvD,CAACrD,EAAU14C,EAASy7C,IAAez7C,EAAQw5C,YAAYd,EAAU+C,KAE5EluD,KAAK8uE,aAAevhB,EACpB,MAAMqkB,EAAe5xE,KAAK8uE,aAAahB,MAIvC,OAHA8D,EAAah5C,SAASnmB,IAClBA,EAAQ46C,UAAYukB,KAEjBrkB,EAQXlxB,UAAUmyC,EAAe,EAAGqD,EAAkBC,EAAah9C,GAEvD,MAAMy4B,EAAWvtD,KAAK8uE,aACtB,IAAKvhB,EACD,MAAM,IAAItsD,EAAa,iBAAkB,mCAE7C,MAAQ8sE,KAAMiD,EAAa3/D,IAAK4/D,GAAe1jB,EAE/CvtD,KAAKmvE,YAAc,GAGf2C,GAAeh9C,GACfg9C,EAAYl5C,SAASkC,GAAUA,EAAMjG,SAASC,GAAOuH,cAIzD,IAAI36B,EAAI,EACJoC,EAAQ,EACZ9D,KAAK4uE,cAAgB,EACrB,IAAIrkB,EAAa,EAEjBymB,EAAYp4C,SAAS41B,IACjB,MAAM/7C,EAAUw+D,EAAWziB,GAG3B/7C,EAAQ4pB,YACR,MAAM9zB,EAAQkK,EAAQsb,WACtB/tB,KAAK4uE,eAAiBrmE,EACtB,MAAMqkD,EAAWn6C,EAAQo7C,cAAc7pD,QACvCumD,GAAcqC,EACd,MAAMr+C,EAAUkE,EAAQ7D,aACxBlN,EAAIA,EAAIoC,EAAQyK,EAAQ4+C,YACxB16C,EAAQtL,KAAKzF,GAEboC,EAAQyE,EAAQgG,EAAQ4+C,eAG5B,MAAM,cAAEmhB,EAAa,cAAEjkB,EAAa,cAAEkkB,GAAkBvuE,KAAKquE,iBAEvDziB,EAAeyhB,GAAS2D,EAAY3/D,KAD7Bm9C,GAASxrD,KAAK8G,IAAIugD,EAAgB4mB,EAAWziB,GAAMX,cAAc7pD,QAAUumD,MAKxF,GAHAvqD,KAAK4uE,cAAgBltE,EAAIoC,EACzB9D,KAAK6uE,kBAAmB,EAEpBL,GAAgB,EAChB,OAAOxuE,KAAK+xE,WAGhB,MAAMC,EAAef,EAAWD,EAAY,IACtCja,EAAcka,EAAWD,EAAYA,EAAYptE,OAAS,IAGhE,SAASquE,EAAwBC,GA8D7B,OA7DkBlB,EAAY3/D,KAAI,CAACm9C,EAAMhoD,KACrC,MAAMiM,EAAUw+D,EAAWziB,GACrBpjB,EAAS34B,EAAQ07C,sBACvB,IAAIgkB,EACJ,GAAI3rE,EAAI,EAAG,CACP,MAAM4rE,EAAcnB,EAAWD,EAAYxqE,EAAI,IAI/C,IAAK,IAAIw8C,EAAIx8C,EAAI,EAAGw8C,GAAK,EAAGA,IAAK,CAC7B,MACMqvB,EADWpB,EAAWD,EAAYhuB,IACZmL,sBAEtBmkB,EAAiB,GAMvB,GALAjyE,OAAO+Q,KAAKg6B,GAAQxS,SAASmzB,IACrBsmB,EAAWtmB,IACXumB,EAAejkD,KAAK09B,MAGxBumB,EAAe1uE,OAAS,EAAG,CAE3B,IAAIgpD,EAAW,EACX2lB,EAAqBxjC,EAAAA,EACrByjC,EAAmB,EAqBvB,GApBAF,EAAe15C,SAASmzB,IACpB,MAAMr9B,EAAQ2jD,EAAWtmB,GAAG5xB,WAAWn2B,QACnC0qB,EAAQk+B,IACRulB,EAAeE,EAAWtmB,GAC1Ba,EAAWl+B,GAGf,MAAM+jD,EAAernC,EAAO2gB,GACtB2mB,EAAiBD,EAAa1rE,QAC/B0rE,EAAa7jE,aAAa8pB,UAAY+5C,EAAa7jE,aAAasvB,qBAC/Dy0C,EAAcN,EAAWtmB,GAAGn9C,aAC5BgkE,EAAkBP,EAAWtmB,GAAGhlD,OAAS4rE,EAAY9zC,OAAS8zC,EAAYh6C,WAAag6C,EAAYx0C,qBAEzGo0C,EAAqBvvE,KAAK8hC,IAAIytC,EAAoBG,EAAiBE,MAIvEL,EAAqBvvE,KAAK8hC,IAAIytC,EAAoB9/D,EAAQ1L,QAAUqrE,EAAYrrE,OAAgC,IAAvBmrE,IAGrF5D,EAAe,CACf,MAAM5qE,EAAI6mD,EACVioB,EAAoBxvE,KAAK8G,IAAIugD,EAAgBuC,EAAWlpD,GAAMkoD,EAAgBsmB,YAEjD,IAAjBC,IACZK,EAAmBL,EAAat3C,WAAWgxB,QAAQe,GAAYslB,GAEnE,MAAO,CACHM,iBAAAA,EACAD,mBAAAA,EACAM,aAAcV,KAK9B,MAAO,CAAEK,iBAAkB,EAAGM,eAAgB,EAAGP,mBAAoB,MAI7E,SAASQ,EAAsBC,GAE3B,MAAMC,EAAUf,EAAuB,EACvC,IAAIgB,EAAa,EAsBjB,OArBAlC,EAAYp4C,SAAQ,CAAC41B,EAAMt+C,KACvB,MAAMuC,EAAUw+D,EAAWziB,GAC3B,GAAIt+C,EAAQ,EAAG,CACX,MAAMijE,EAAW1gE,EAAQ1L,OACnBqsE,EAAQJ,EAAe9iE,GACvBmjE,EAAU5xE,EAAQ2xE,EAAMP,cAAc9rE,OAASqsE,EAAMZ,kBAAoBW,EAAWD,GAC1F,IAAII,EAAkB,EAClBD,EAAU,EACVH,GAAcG,EAETA,EAAU,IACfC,EAAkBtwE,KAAK8hC,IAAIsuC,EAAMb,mBAAoBvvE,KAAK8C,IAAIutE,IAC9DH,IAAeI,GAEnB7gE,EAAQtL,KAAKgsE,EAAWD,GAG5BzgE,EAAQ27C,4BAA4Bx1B,SAASuyB,IACzCA,EAASzwB,gBAAgBu4C,EAAUxgE,EAAQ1L,cAG5CgwD,EAAYhwD,OAASirE,EAAajrE,OAE7C,MAAMmrE,EAAuB1D,EACzBzX,EAAYnoD,aAAaiwB,OACzBk4B,EAAYnoD,aAAaw+C,aACzB4kB,EAAapjE,aAAau+C,YACxB1mB,EAAYna,EAAO+V,mBACnBkxC,EAAmB9sC,EAAUv3B,aAAa,uBAC1CskE,EAAmB/sC,EAAUv3B,aAAa,uBAChD,IAAIukE,EAAcvB,EAClB,MAAMwB,EAAYzB,EAAwBwB,GAC1C,IAAIE,EAAcZ,EAAsBW,GAIxC,MASME,EATkB,EAACH,EAAaC,KAClC,IAAIG,EAASJ,EAAc,EAC3B,GAAIC,EAAU9vE,OAAS,EACnB,IAAK,IAAIkwE,EAAK,EAAGA,EAAKJ,EAAU9vE,SAAUkwE,EACtCD,EAAS7wE,KAAK8hC,IAAI4uC,EAAUI,GAAItB,iBAAmB,EAAGqB,GAG9D,OAAOA,GAESE,CAAgBN,EAAaC,GAEjD,GAA2B,IAAvB1C,EAAYptE,OACZ,OAAO,EAIX,MAAMowE,EAAgC,EAAnBR,EAAuBI,EAAcA,EAAcJ,EAEhES,EAAO/B,GADM8B,GAAcR,EAAmBD,IAEpD,IAAIz5C,EAAay0C,EAGjB,KAAQoF,EAAcM,GAAQn6C,EAAa,GAAO65C,EAAcK,EAAaC,GAAQn6C,EAAa,GAC9F25C,GAAeE,EAAcM,EAC7BN,EAAcZ,EAAsBd,EAAwBwB,IAC5D35C,IAGJ,OADA95B,KAAKwuE,aAAeA,EACbxuE,KAAK+xE,WAGhBA,WACI,IAAK/xE,KAAK8uE,aACN,OAAO,EACX,MAAMvhB,EAAWvtD,KAAK8uE,aAChBN,EAAexuE,KAAKwuE,aAG1BxuE,KAAKgvE,YAAc,CAAEC,MAAO,EAAGC,KAAM,IACrC3hB,EAASwgB,KAAKn1C,SAAQ,CAAC41B,EAAMt+C,KACzB,GAAc,IAAVA,EACA,OACJ,MAAMgkE,EAAW3mB,EAASwgB,KAAK79D,EAAQ,GACjCkiE,EAAc7kB,EAASl8C,IAAI6iE,GAC3BzhE,EAAU86C,EAASl8C,IAAIm9C,GACvB2lB,EAAc/B,EAAYxjE,aAC1BwlE,EAAc3hE,EAAQ7D,aAEtBgkE,EAAkBR,EAAYrrE,OAASotE,EAAYt1C,OAASs1C,EAAY/mB,aAExEslB,EAAiBjgE,EAAQ1L,OAASqtE,EAAYjnB,YAC9CoiB,EAAMmD,EAAiBE,EAC7B5yE,KAAKgvE,YAAYC,OAASM,EAC1BvvE,KAAKgvE,YAAYE,KAAK7gD,KAAK,CAAErmB,GAAI4qE,EAAiBzqE,GAAIuqE,IAEtDjgE,EAAQ8nB,sBAAsBV,QAAQ9C,KAAOw4C,EAC7C6C,EAAY73C,sBAAsBV,QAAQ7C,MAAQu4C,KAItDvvE,KAAK2uE,cAAgB,GACrB,MAAMA,EAAgB3uE,KAAK2uE,cAW3B3uE,KAAKorC,OAAOxS,SAASkC,IACjBA,EAAMgwB,eAAelyB,SAAQ,CAACxB,EAAM5wB,EAAG2nB,KACnC,MAAMG,EAAW8I,EAAK+C,WAAW30B,QAAQvB,WAAW8B,WAC9CwI,EAAU6oB,EAAKxoB,aACfgrB,EAAmBxC,EAAKmD,sBACxB85C,EAAej9C,EAAKrwB,OAASwH,EAAQswB,OAAStwB,EAAQoqB,WAAapqB,EAAQ4vB,qBACjF,IAAIpE,EAAQ,EACZ,GAAIvzB,EAAI2nB,EAAMvqB,OAAS,EAAG,CACtB,MAAM0wE,EAAYnmD,EAAM3nB,EAAI,GACtB+tE,EAAeD,EAAU1lE,aAE/BmrB,EADsBu6C,EAAUvtE,OAASwtE,EAAa77C,UAAY67C,EAAar2C,oBACvDm2C,EACxBz6C,EAAiBG,MAAMC,KAAOs6C,EAAUvtE,OAASqwB,EAAKrwB,OACtDutE,EAAU/5C,sBAAsBV,QAAQ9C,KAAOgD,OAG/CA,EAAQy0C,EAAe6F,EACvBz6C,EAAiBG,MAAMC,KAAOw0C,EAAep3C,EAAKrwB,OAEtD6yB,EAAiBC,QAAQ7C,MAAQ+C,EA7BzC,SAAqBzL,EAAUyL,GAC3B,MAAMy6C,EAAQ7F,EAAcrgD,QACd3sB,IAAV6yE,EACA7F,EAAcrgD,GAAY,CAAE2L,KAAMF,EAAO06C,MAAO,IAGhDD,EAAMC,OAAS,EACfD,EAAMv6C,MAAQu6C,EAAMv6C,KAAOF,GAAS,GAuBpC26C,CAAYpmD,EAAUsL,EAAiBG,MAAMC,YAKrD,IAAI26C,EAAiB,EAcrB,OAbA30E,KAAKorC,OAAOxS,SAASkC,IACjBA,EAAMgwB,eAAelyB,SAASxB,IAC1B,MAAM9I,EAAW8I,EAAK+C,WAAW30B,QAAQvB,WAAW8B,WAC9CwI,EAAU6oB,EAAKmD,sBACrBhsB,EAAQwrB,MAAME,KAAO00C,EAAcrgD,GAAU2L,KAC7C1rB,EAAQ+f,SAAWA,EACnB/f,EAAQurB,YAAc,EACtBvrB,EAAQwrB,MAAMG,UAAY3rB,EAAQwrB,MAAMC,KAAOzrB,EAAQwrB,MAAME,KAC7D06C,GAAkB3xE,KAAK8G,IAAIyE,EAAQwrB,MAAMG,UAAW,SAG5Dl6B,KAAKyuE,UAAYzrE,KAAKkH,KAAKyqE,GAC3B30E,KAAKmvE,YAAY9gD,KAAKruB,KAAKyuE,WACpBzuE,KAAKyuE,UAUhBmG,KAAKjoD,GACD,IAAI9gB,EACJ,MAAM0hD,EAAWvtD,KAAK8uE,aACtB,IAAKvhB,EACD,OAAO,EAEX,MAAMsnB,EAAmF,QAA1EhpE,EAAK8gB,MAAAA,OAAyC,EAASA,EAAQkoD,aAA0B,IAAPhpE,EAAgBA,EAAK,GAYtH,IAAI/H,EAAQ,EAsBZ,OArBA9D,KAAK0uE,WAAa,EAClBnhB,EAASwgB,KAAKn1C,SAAQ,CAAC41B,EAAMt+C,EAAO69D,KAChC,MAAMt7D,EAAU86C,EAASl8C,IAAIm9C,GACvB4jB,EAAcliE,EAAQ,EAAIq9C,EAASl8C,IAAI08D,EAAK79D,EAAQ,SAAMvO,EAC1D4uD,EAAcrgD,EAAQ69D,EAAKnqE,OAAS,EAAI2pD,EAASl8C,IAAI08D,EAAK79D,EAAQ,SAAMvO,GAdlF,SAAcmzE,EAAShxE,EAAOkgD,EAAMh5C,GAChC8pE,EAAQ3tE,KAAK2tE,EAAQ/tE,OAASjD,GAC9BgxE,EAAQv6C,sBAAsBV,QAAQ9C,MAAQjzB,EAC9CgxE,EAAQv6C,sBAAsBV,QAAQ7C,OAASlzB,EAC3CkgD,IACAA,EAAKzpB,sBAAsBV,QAAQ7C,OAASlzB,GAC5CkH,IACAA,EAAKuvB,sBAAsBV,QAAQ9C,MAAQjzB,GAQ/CyD,CAAKkL,EAAS3O,EAAOsuE,EAAa7hB,GAClC,MAAMwkB,GAAQ1H,GAAS56D,EAAQq4C,eAAez5C,KAAK3N,GAAMA,EAAE62B,sBAAsBR,MAAMG,aACnF66C,EAAO,EACPjxE,GAASd,KAAK8hC,IAAIryB,EAAQ8nB,sBAAsBV,QAAQ7C,MAAOh0B,KAAK8C,IAAIivE,IAEnEA,EAAO,IAERjxE,EADAysD,EACQvtD,KAAK8hC,IAAIyrB,EAAYh2B,sBAAsBV,QAAQ7C,MAAOh0B,KAAK8C,IAAIivE,IAGnE,GAGhBjxE,GAAS+wE,EACT70E,KAAK0uE,YAAc5qE,KAEhB9D,KAAK+xE,WAOhBx1C,aACI,MAAMy4C,EAAsBznB,GAAaA,EAASwgB,KAAKn1C,SAAS41B,GAASjB,EAASl8C,IAAIm9C,GAAMjyB,eAK5F,OAJIv8B,KAAK+uE,kBACLiG,EAAmBh1E,KAAK+uE,kBACxB/uE,KAAK8uE,cACLkG,EAAmBh1E,KAAK8uE,cACrB9uE,KAMXssD,WAAWlhB,GAGP,OAFAprC,KAAK2xE,uBAAuBvmC,GAC5BprC,KAAK6uE,kBAAmB,EACjB7uE,KAYXusD,OAAOnhB,EAAQojC,EAAc7hD,GACzB,MAAMsuC,EAAO56D,OAAOwU,OAAO,CAAE66D,aAAa,GAAS/iD,GACnD3sB,KAAKorC,OAASA,EACd,MAAMif,EAAgBrqD,KAAKquE,iBAAiBhkB,cAU5C,OATIA,GACArqD,KAAKorC,OAAOxS,SAASmzB,GAAMA,EAAEN,iBAAiBpB,KAElDrqD,KAAKwwE,WAAWplC,EAAQ6vB,EAAKyU,aAC7B1vE,KAAK+wE,mBAAmB3lC,GACxBprC,KAAKq8B,UAAUmyC,EAAcvT,EAAKxoD,QAAS24B,EAAQ6vB,EAAKnmC,OAEpDmmC,EAAKnmC,OACL90B,KAAKu8B,aACFv8B,KAGX8vE,cAAc1kC,EAAQtW,EAAOmgD,GACzB,MAAMtoD,EAAUtsB,OAAOwU,OAAO,CAAEpC,QAASqiB,EAAM5gB,cAAgB+gE,GAEzDzG,EAAe15C,EAAMkzC,cAAgBlzC,EAAMsN,gBAAkBqkC,GAAMiB,eAEzE,OApuBR,YAAc5lE,GACNsqD,GAAU1mB,OACV9jC,EAAI,qBAAsBE,GAiuB1B,CAAE,+BAAgC0sE,GAC3BxuE,KAAKusD,OAAOnhB,EAAQojC,EAAc7hD,GAE7C4L,eAAei2B,GACX,IAAI3iD,EACJ,OAAoC,QAA5BA,EAAK7L,KAAK8uE,oBAAiC,IAAPjjE,OAAgB,EAASA,EAAGwF,IAAIm9C,IAIpFpC,GAAU1mB,OAAQ,ECjvBX,MAAMwvC,WAAerjE,EACxB1Q,YAAYgtB,EAAOxB,EAAU,IAIzB,GAHArrB,QACAtB,KAAKm1E,iBAAmB,GACxBn1E,KAAKo1E,aAAe,IACfjnD,IAAUA,EAAMvqB,OACjB,MAAM,IAAI3C,EAAa,eAAgB,iCAE3CjB,KAAK2sB,QAAUA,EACf3sB,KAAKmuB,MAAQA,EACbnuB,KAAKq1E,UAAsC1zE,MAA1B3B,KAAK2sB,QAAQ0oD,UAAyBr1E,KAAK2sB,QAAQ0oD,UAAYlnD,EAAMvqB,OAGlF5D,KAAK2sB,QAAQ2oD,gBACbt1E,KAAKu1E,kCAETv1E,KAAKw1E,eAAiBx1E,KAAK2sB,QAAQ6oD,gBAAkBx1E,KAAK2sB,QAAQ2oD,gBAAkB,EACtD3zE,MAA1B3B,KAAK2sB,QAAQ8oD,UACbz1E,KAAKy1E,UAAYz1E,KAAK2sB,QAAQ8oD,UAG9Bz1E,KAAKy1E,UAAYtnD,EAAMg3B,MAAM/tB,IAAUA,EAAKsK,YAEhD1hC,KAAK01E,QACuB/zE,MAAxB3B,KAAK2sB,QAAQ+oD,QAAuB11E,KAAK2sB,QAAQ+oD,QAAU1yE,KAAK8C,IAAI9F,KAAKw1E,eAAiBx1E,KAAKq1E,WAAa,EAChHr1E,KAAK8xB,MAAQxF,EAAO+V,mBAAmBnzB,aAAa,sBACpDlP,KAAK4zB,MAAQ,GACb5zB,KAAK2zB,MAAQ,IACb3zB,KAAKuI,MAAQ,IACbvI,KAAK21E,kBAAkB31E,KAAK2sB,QAAQipD,UAAYV,GAAOW,cACvDzpB,GAAUqkB,kBAAkBtiD,GAAO,GAAM,GACzCnuB,KAAK81E,gBACL91E,KAAK+1E,SAEEzyE,sBACP,MAAO,SAEAuyE,0BACP,OAAO,EAEAG,6BACP,OAAQ,EAEDC,4BACP,OAAO,GAGA1nE,qBACP,OAAO+d,EAAO+V,mBAAmBzzB,aAAaK,OAAOgsB,OAEzD86C,SACI,IAAK,IAAIvvE,EAAI,EAAGA,EAAIxG,KAAKmuB,MAAMvqB,OAAQ4C,IAAK,CAC3BxG,KAAKmuB,MAAM3nB,GACnBo1B,UAAU57B,OAGvBk2E,SACI,IAAK,IAAI1vE,EAAI,EAAGA,EAAIxG,KAAKmuB,MAAMvqB,OAAQ4C,IAAK,CAC3BxG,KAAKmuB,MAAM3nB,GACnB20B,YAAYn7B,OAMzBm2E,aAAaV,GAET,OADAz1E,KAAKy1E,YAAcA,EACZz1E,KAKXo2E,WAAWV,GAEP,OADA11E,KAAK01E,UAAYA,EACV11E,KAKX21E,kBAAkBC,GAOd,OANIA,IAAaV,GAAOW,cAAgBD,IAAaV,GAAOc,kBAExD7zE,QAAQC,KAAK,4BAA4BwzE,kCACzCA,EAAWV,GAAOW,cAEtB71E,KAAK41E,SAAWA,EACT51E,KAEXq2E,WACI,OAAOr2E,KAAKmuB,MAEhBqN,eACI,OAAOx7B,KAAKq1E,UAEhBE,kCAEIpzE,QAAQC,KAAK,kGAAmG,4GAA6G,mDAEjOk0E,mBAEI,OADAt2E,KAAKu1E,kCACEv1E,KAAKy7B,mBAEhB86C,iBAAiBC,GAEb,OADAx2E,KAAKu1E,kCACEv1E,KAAKy2E,iBAAiBD,GAEjC/6C,mBACI,OAAOz7B,KAAKw1E,eAEhBiB,iBAAiBtoD,GACbnuB,KAAKk2E,SACLl2E,KAAKw1E,eAAiBrnD,EACtBnuB,KAAK81E,gBACL91E,KAAK+1E,SAETD,gBACI91E,KAAKm1E,iBAAmB,GACxB,IAAIxyE,EAAI3C,KAAKq1E,UACb,KAAO1yE,GAAK,GACR3C,KAAKm1E,iBAAiBuB,QAAQ,IAAI9oD,EAAM,UAAajrB,EAAI,GAAK3C,KAAK8xB,QACnEnvB,EAAIC,UAAUD,EAAI,IAAIoD,WAAY,IAItC,IAFA/F,KAAKo1E,aAAe,GACpBzyE,EAAI3C,KAAKw1E,eACF7yE,GAAK,GACR3C,KAAKo1E,aAAasB,QAAQ,IAAI9oD,EAAM,UAAajrB,EAAI,GAAK3C,KAAK8xB,QAC/DnvB,EAAIC,UAAUD,EAAI,IAAIoD,WAAY,IAM1C4wE,uBACI,MAAMf,EAAW51E,KAAK41E,SAChBgB,EAAa52E,KAAKmuB,MAAM,GAC9B,IAAI0oD,EAAiBC,EAAaF,EAAYhB,GAC1CmB,EAAiBD,EAAaF,EAAYhB,GAG9C,SAASkB,EAAa1/C,EAAMw+C,GACxB,OAAOx+C,EAAK8D,iBAAiBmzB,QAAQpzB,GAAWA,EAAO26C,WAAaA,IAAUhyE,OAOlF,OALA5D,KAAKmuB,MAAMyK,SAASxB,IAChB,MAAM4/C,EAAcF,EAAa1/C,EAAMw+C,GACvCiB,EAAiBG,EAAcH,EAAiBG,EAAcH,EAC9DE,EAAiBC,EAAcD,EAAiBC,EAAcD,KAE3DF,EAAiBE,EAG5BE,eAGI,MAAMC,EAAyBl3E,KAAK22E,uBAAyBzB,GAAOe,gBAAkBj2E,KAAK41E,SAErFnxC,EAAWzkC,KAAK2sB,QAAQ8X,UAAY,EAGpCmyC,EAAa52E,KAAKmuB,MAAM,GAC9B,IAAIyF,EACJ,GAAI5zB,KAAK41E,WAAaV,GAAOW,aAAc,CACvCjiD,EAAQgjD,EAAWjhD,aAAa2K,YAAY,GAAK40C,GAAO3mE,QAAQ4oE,kBAEhE,IAAK,IAAI3wE,EAAI,EAAGA,EAAIxG,KAAKmuB,MAAMvqB,SAAU4C,EAAG,CACxC,MAAM4wB,EAAOp3B,KAAKmuB,MAAM3nB,GACxB,IAAI4wE,EAAW,EACf,MAAMt7C,EAAK1E,EAAKM,qBACZoE,IACAs7C,EAAWp0E,KAAK6E,IAAIuvE,EAAUt7C,EAAG6/B,WAAW7gB,gBAEhD,MAAMu8B,EAAOjgD,EAAK6J,eAAem2C,GAAYlC,GAAO3mE,QAAQ+oE,eAC5D,GAAIlgD,EAAKiK,WAAajK,EAAK+I,SAAU,CACjC,MAAMukC,EAAQttC,EAAKkL,qBAAuBQ,EAAKe,GACzCzM,EAAKmL,iBAAiByC,KAAOkwC,GAAO3mE,QAAQgpE,WAC5CngD,EAAKmL,iBAAiB0C,MAAQiwC,GAAO3mE,QAAQ+oE,eACnD1jD,EAAQ5wB,KAAK8hC,IAAI4/B,EAAO9wC,GACpBwjD,EAAW,IACXxjD,EAAQ5wB,KAAK8hC,IAAIuyC,EAAMzjD,UAKlC,CACD,IAAI4jD,EAAYtC,GAAO3mE,QAAQm3D,WAE/B1lE,KAAKmuB,MAAMyK,SAAS6+C,IAChB,MAAM37C,EAAK27C,EAAG//C,qBACVoE,IACA07C,EAAYx0E,KAAK6E,IAAI2vE,EAAW17C,EAAG6/B,WAAWvlC,UAAY,OAGlExC,EAAQgjD,EAAWjhD,aAAa2K,YAAYk3C,GAAatC,GAAO3mE,QAAQ+oE,eACxE,IAAK,IAAI9wE,EAAI,EAAGA,EAAIxG,KAAKmuB,MAAMvqB,SAAU4C,EACrC,GAAIxG,KAAKmuB,MAAM3nB,GAAG66B,WAAarhC,KAAKmuB,MAAM3nB,GAAG25B,SAAU,CACnD,MAAMu3C,EAAW13E,KAAKmuB,MAAM3nB,GAAG87B,qBAAuBQ,EAAKe,GACrD7jC,KAAKmuB,MAAM3nB,GAAG+7B,iBAAiB0C,MAAQiwC,GAAO3mE,QAAQ+oE,eACtDt3E,KAAKmuB,MAAM3nB,GAAG+7B,iBAAiByC,KAAOkwC,GAAO3mE,QAAQgpE,WACvDG,EAAW9jD,IACXA,EAAQ8jD,IAKxB,OAAO9jD,EAAQsjD,EAAyBzyC,EAE5ChxB,OACI,MAAMigB,EAAM1zB,KAAKwT,eACjBxT,KAAK8T,cAEL,MAAM8iE,EAAa52E,KAAKmuB,MAAM,GACxBomB,EAAYv0C,KAAKmuB,MAAMnuB,KAAKmuB,MAAMvqB,OAAS,GAC5C5D,KAAKy1E,WAKNz1E,KAAK2zB,MAAQijD,EAAWl0C,cAAgB,EACxC1iC,KAAKuI,MAAQgsC,EAAU/R,eAAiBxiC,KAAK2zB,MAAQ,IALrD3zB,KAAK2zB,MAAQijD,EAAWjuC,WACxB3oC,KAAKuI,MAAQgsC,EAAU5L,WAAa3oC,KAAK2zB,OAO7C3zB,KAAK4zB,MAAQ5zB,KAAKi3E,eAClB,MAAMU,EAAgB,CAACpvE,EAAOklB,IAAUllB,EAAQ9G,EAAQgsB,EAAM7e,aAAarG,OAE3E,IAAIA,EAAQvI,KAAKm1E,iBAAiBngC,OAAO2iC,EAAe,GACpD33E,KAAK01E,UACLntE,EAAQvI,KAAKo1E,aAAapgC,OAAO2iC,EAAepvE,GAChDA,GAAsB,IAAbvI,KAAK8xB,OAElB,MACM8lD,EADoB53E,KAAK2zB,MAAQ3zB,KAAKuI,MAAQ,EACPA,EAAQ,EAErD,GAAIvI,KAAKy1E,UAAW,CAChB,MAAM32B,EAAa9+C,KAAKuI,MAAQ,EAAIA,EAAQ,EAAI,EAE5Cu2C,EAAa,IACbprB,EAAI2+B,SAASryD,KAAK2zB,MAAO3zB,KAAK4zB,MAAOkrB,EAAY,GACjDprB,EAAI2+B,SAASryD,KAAK2zB,MAAQ3zB,KAAKuI,MAAQ,EAAIA,EAAQ,EAAI,EAAGvI,KAAK4zB,MAAOkrB,EAAY,GAClFprB,EAAI2+B,SAASryD,KAAK2zB,MAAO3zB,KAAK4zB,OAAS5zB,KAAK41E,WAAaV,GAAOc,gBAAkB,EAAI,GAAI,EAAmB,GAAhBh2E,KAAK41E,UAClGliD,EAAI2+B,SAASryD,KAAK2zB,MAAQ3zB,KAAKuI,MAAOvI,KAAK4zB,OAAS5zB,KAAK41E,WAAaV,GAAOc,gBAAkB,EAAI,GAAI,EAAmB,GAAhBh2E,KAAK41E,WAIvH,MAAMjZ,EAASrwC,EAAO+V,mBAAmBnzB,aAAa,gBAAiB,GACvE,IAAI+4C,EAAW,EAMf,GALAjoD,KAAKm1E,iBAAiBv8C,SAASnL,IAC3BA,EAAM+H,OAAO9B,EAAKkkD,EAAmB3vB,EAAUjoD,KAAK4zB,MAAQ5zB,KAAK8xB,MAAQ,EAAI,EAAI6qC,GACjF1U,GAAYxmD,EAAQgsB,EAAM7e,aAAarG,UAGvCvI,KAAK01E,QAAS,CACd,MAAMmC,EAAUD,EAAmB3vB,EAAwB,IAAbjoD,KAAK8xB,MAC7CgmD,EAA4B,IAAb93E,KAAK8xB,MAC1B4B,EAAIQ,YACJR,EAAI4L,IAAIu4C,EAAS73E,KAAK4zB,MAAqB,IAAb5zB,KAAK8xB,MAAcgmD,EAAc,EAAa,EAAV90E,KAAKC,IAAQ,GAC/EywB,EAAI6L,YACJ7L,EAAIa,OACJb,EAAIQ,YACJR,EAAI4L,IAAIu4C,EAAS73E,KAAK4zB,MAAqB,IAAb5zB,KAAK8xB,MAAcgmD,EAAc,EAAa,EAAV90E,KAAKC,IAAQ,GAC/EywB,EAAI6L,YACJ7L,EAAIa,OACJ0zB,GAAyB,IAAbjoD,KAAK8xB,MACjB9xB,KAAKo1E,aAAax8C,SAASnL,IACvBA,EAAM+H,OAAO9B,EAAKkkD,EAAmB3vB,EAAUjoD,KAAK4zB,MAAQ5zB,KAAK8xB,MAAQ,EAAI,EAAI6qC,GACjF1U,GAAYxmD,EAAQgsB,EAAM7e,aAAarG,YC/SvD,SAASwvE,GAAuB5pD,GAC5B,IAAI6pD,EAAU,EAQd,OAPA7pD,EAAMyK,SAASxB,IACPA,EAAKuG,UACLvG,EAAKuG,SAAS/E,SAASq/C,IACnBD,GAAWC,EAAQl2E,KAAO,QAIlCi2E,GAAW,EACJl1C,EAAKgB,KAEThB,EAAKe,GAShB,MAAMq0C,GAAY,IAEZC,GAAY,IAEX,MAAMvI,WAAa/9D,EACtB1Q,YAAYgtB,EAAOic,GAAY,GAI3B,GAHA9oC,QACAtB,KAAK6yC,MAAQ,EACb7yC,KAAKoyB,QAAU,GACVjE,GAA0B,IAAjBA,EAAMvqB,OAChB,MAAM,IAAI3C,EAAa,eAAgB,+BAE3C,GAAqB,IAAjBktB,EAAMvqB,OACN,MAAM,IAAI3C,EAAa,eAAgB,2BAI3C,GADAjB,KAAK0uB,MAAQP,EAAM,GAAGsO,oBAClBz8B,KAAK0uB,OAASpC,EAAOyT,gBAAgB,KACrC,MAAM,IAAI9+B,EAAa,eAAgB,mEAE3C,IAAIuF,EACA4wB,EAEJ,IADAp3B,KAAKwjC,eAAiBV,EAAKe,GACtBr9B,EAAI,EAAGA,EAAI2nB,EAAMvqB,SAAU4C,EAE5B,GADA4wB,EAAOjJ,EAAM3nB,GACT4wB,EAAKiK,UAAW,CAChBrhC,KAAKwjC,eAAiBpM,EAAKkL,mBAC3B,MAGR,IAAIkB,EAAiBxjC,KAAKwjC,eAE1B,GAAI4G,GAAahB,EAAYjb,EAAM,IAC/BqV,EAAiBu0C,GAAuB5pD,QAEvC,GAAIic,GAAauK,GAAUxmB,EAAM,IAAK,CAEvC,MAAMiqD,EAAcjqD,EAAM6mB,QAAO,CAACqjC,EAAMjhD,IAASihD,EAAOjhD,EAAKkL,oBAAoB,GACjFkB,EAAiB40C,GAAe,EAAIt1C,EAAKe,GAAKf,EAAKgB,KAGvD,IAAKt9B,EAAI,EAAGA,EAAI2nB,EAAMvqB,SAAU4C,EAC5B4wB,EAAOjJ,EAAM3nB,GACT4jC,IACAhT,EAAKiR,iBAAiB7E,GACtBxjC,KAAKwjC,eAAiBA,GAE1BpM,EAAKuK,QAAQ3hC,MAEjBA,KAAKw8B,eAAgB,EACrBx8B,KAAKmuB,MAAQA,EACbnuB,KAAKqxB,WAAarxB,KAAKmoC,eACvBnoC,KAAKs4E,iBAAmB,GACxBt4E,KAAKq+B,eAAiB,CAClBk6C,WAAY,EACZC,UAAW,IACXC,WAAY,IACZC,iBAAkB,GAClBC,WAAY,IACZC,eAAe,EACfC,kBAAmB,EACnBC,oBAAqB,GACrBC,YAAY,EACZC,qBAAsB,IAGnB11E,sBACP,MAAO,OAGXg/B,mBACI,OAAOtiC,KAAKwjC,eAOhBjgC,4BAA4B01E,GACnBA,GAAyB,MAAbA,IACbA,EAAW,OAEf,MAkBM5sB,EAlBW,CACb,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,OAAQ,CAAC,QACT,OAAQ,CAAC,QACT,OAAQ,CAAC,QACT,OAAQ,CAAC,SAEW4sB,GACxB,QAAet3E,IAAX0qD,EAiBA,OAAOA,EAAOh7C,KAAK+lC,IAAU,IAAIl0C,GAAWoD,MAAM8wC,KAjB5B,CAGtB,MAAM8hC,EAAYt2E,SAASq2E,EAASxyE,MAAM,KAAK,GAAI,IAC7C0yE,EAAYv2E,SAASq2E,EAASxyE,MAAM,KAAK,GAAI,IAEnD,GADoByyE,EAAY,GAAM,EAElC,MAAO,CAAC,IAAIh2E,EAAS,EAAGi2E,IAEvB,GAAIA,EAAY,EACjB,MAAO,CAAC,IAAIj2E,EAAS,EAAGi2E,IAEvB,GAAIA,GAAa,EAClB,MAAO,CAAC,IAAIj2E,EAAS,EAAGi2E,IAMhC,MAAO,CAAC,IAAIj2E,EAAS,EAAG,IAS5BK,wBAAwBu3B,EAAO0I,EAAgB6oB,GAC3C,OAAOujB,GAAKwJ,cAAct+C,EAAMgwB,eAAgB,CAAEuB,OAAAA,EAAQ7oB,eAAAA,IA2B9DjgC,qBAAqB4qB,EAAOkrD,EAAS,IAC5BA,EAAOhtB,QAAWgtB,EAAOhtB,OAAOzoD,SACjCy1E,EAAOhtB,OAAS,CAAC,IAAInpD,EAAS,EAAG,KAGrC,MAAMo2E,EAAaD,EAAOhtB,OAAOh7C,KAAK+lC,IAClC,IAAKA,EAAMvyC,SACP,MAAM,IAAI5D,EAAa,oBAAqB,0DAEhD,OAAOm2C,EAAM5xC,QAAQX,SAASynB,EAAO/W,WAAY,MAE/CgkE,EAAmBprD,EACzB,IAAIqrD,EAAmB,EACnBC,EAAa,GACbC,EAAe,GAInB,SAASC,IACDL,EAAW11E,OAAS,EAAI41E,EACxBA,GAAoB,EAGpBA,EAAmB,GAG3B,WACI,IAAII,EAAY,GAEZC,EAAyB,IAAI32E,EAAS,EAAG,GAC7Cq2E,EAAiB3gD,SAASkhD,IAEtB,GADAF,EAAY,GACRE,EAAgB1/C,oBAGhB,OAFAq/C,EAAWprD,KAAKqrD,QAChBA,EAAeE,GAGnBF,EAAarrD,KAAKyrD,GAClB,MAAMC,EAAgBT,EAAWE,GAAkBh0E,QAC7C+kD,GAxBSyvB,EAwBkBN,EAvB9BM,EAAShlC,QAAO,CAACqjC,EAAMjhD,IAASA,EAAK+C,WAAW30B,QAAQnB,IAAIg0E,IAAO,IAAIn1E,EAAS,EAAG,KAuBvCmB,IAAIw1E,GAxB3D,IAAuBG,EA0Bf,MAAMC,EAAa3tD,EAAO8a,iBAAiB0yC,EAAgB54C,eAAiB,EAK5E,GAJI+4C,GAAcH,EAAgB9+C,cAC9B++C,EAAc52E,WAAa,GAG3BonD,EAAWnlD,YAAY20E,GAAgB,CAGvC,IAAKE,EAAY,CACb,MAAM7iD,EAAOsiD,EAAa/9C,MACtBvE,GACAwiD,EAAUvrD,KAAK+I,GAEvBqiD,EAAWprD,KAAKqrD,GAKhB,GACIG,EAAyBtvB,EAAW3lD,SAAS00E,EAAWE,IACxDG,UACKE,EAAuBx0E,kBAAkBi0E,EAAWE,KAC7DE,EAAeE,OAEVrvB,EAAWxlD,OAAOg1E,KACvBN,EAAWprD,KAAKqrD,GAChBG,EAAyB,IAAI32E,EAAS,EAAG,GACzCw2E,EAAeE,EACfD,QAIJD,EAAa91E,OAAS,GACtB61E,EAAWprD,KAAKqrD,GA6GxBQ,GA3FA,WACI,MAAMC,EAAkB,GACxBV,EAAW7gD,SAASwe,IAChB,IAAIgjC,EAAY,GAChBhjC,EAAMxe,SAAQ,CAACxB,EAAMlnB,EAAOknC,KACxB,MAAMijC,EAA0B,IAAVnqE,GAAeA,IAAUknC,EAAMxzC,OAAS,EACxD02E,EAAWljC,EAAMlnC,EAAQ,GACzBqqE,GAAoBlB,EAAOmB,YAAcpjD,EAAK+I,SAC9Cs6C,EAA0BpB,EAAOmB,YAAcnB,EAAOqB,kBAAoBtjD,EAAK+I,UAAYk6C,EACjG,IAAIM,GAAoB,EACxB,GAAItB,EAAOuB,0BAA4BN,IAAaljD,EAAK+I,WAAam6C,EAASn6C,SAAU,CACrF,MAAM06C,EAAgBP,EAASh4C,mBAE/Bq4C,EADyBvjD,EAAKkL,qBACWu4C,EAE7C,MAAMC,EAAuBl4E,SAASw0B,EAAK8J,cAAe,IAAM,EAE5Cq5C,GAAoBE,GAA2BE,GAAqBG,GAGhFV,EAAUx2E,OAAS,GACnBu2E,EAAgB9rD,KAAK+rD,GAKzBA,EAAYO,EAAoB,CAACvjD,GAAQ,IAIzCgjD,EAAU/rD,KAAK+I,MAInBgjD,EAAUx2E,OAAS,GACnBu2E,EAAgB9rD,KAAK+rD,MAG7BX,EAAaU,EAsDjBY,GAnDItB,EAAW7gD,SAASwe,IAChB,IAAIvM,EACJ,GAAIwuC,EAAOuB,yBAA0B,CACjC,MAAMxjD,EAclB,SAAuBggB,GACnB,IAAK,IAAI5wC,EAAI,EAAGA,EAAI4wC,EAAMxzC,OAAQ4C,IAAK,CACnC,MAAM4wB,EAAOggB,EAAM5wC,GACnB,IAAK4wB,EAAK+I,SACN,OAAO/I,EAGf,OAAO,EArBc4jD,CAAc5jC,GAC3BvM,EAAgBzT,EAAOA,EAAKkL,mBAAqBQ,EAAKe,QAIlDgH,EADAwuC,EAAO71C,eACS61C,EAAO71C,eAGPu0C,GAAuB3gC,IAevD,SAA4BA,EAAOjT,GAC/BiT,EAAMxe,SAASxB,IACXA,EAAKiR,iBAAiBlE,MAdtB82C,CAAmB7jC,EAAOvM,MAwClC,MAAMqwC,EA7GKzB,EAAWprB,QAAQjX,IACtB,GAAIA,EAAMxzC,OAAS,EAAG,CAClB,IAAIu3E,GAAW,EAMf,OALA/jC,EAAMxe,SAASxB,IACPA,EAAKqF,qBAAuBnQ,EAAOyT,gBAAgB,OACnDo7C,GAAW,MAGZA,EAEX,OAAO,KAqGTC,EAxBN,WACI,MAAMC,EAAgB,GAYtB,OAVA5B,EAAW7gD,SAASwe,IAChB,IAAInc,EACJmc,EAAMxe,SAASxB,IACX,MAAMkkD,EAAalkD,EAAK4D,YACpBsgD,GAAcrgD,IAAWqgD,IACzBrgD,EAASqgD,EACTD,EAAchtD,KAAK4M,UAIxBogD,EAWQE,GAEb5L,EAAQ,GA+Bd,OA9BAuL,EAAiBtiD,SAASwe,IACtB,MAAM5V,EAAO,IAAIouC,GAAKx4B,GAClBiiC,EAAOT,gBACPp3C,EAAKnD,eAAeu6C,eAAgB,GAEpCS,EAAOmC,mBACPh6C,EAAKnD,eAAeo9C,sBAAwBnvD,EAAOyT,gBAAgBs5C,EAAOmC,oBAEpD,IAAtBnC,EAAON,aACPv3C,EAAKnD,eAAe06C,YAAa,EACjCv3C,EAAKnD,eAAeq9C,iBAAmBrC,EAAOqC,kBAElD/L,EAAMthD,KAAKmT,MAGf45C,EAAWxiD,SAASqC,IAEhB,MAAMkJ,EAAYlJ,EAAO9M,MAAM,GAAGqV,iBAAmBV,EAAKgB,KAAOoxC,GAAOc,gBAAkBd,GAAOW,aACjG56C,EAAO06C,kBAAkBxxC,GAEzB,IAAIsxC,GAAY,EAChB,IAAK,IAAIjvE,EAAI,EAAGA,EAAIy0B,EAAO9M,MAAMvqB,OAAQ4C,IAAK,CAE1C,IADay0B,EAAO9M,MAAM3nB,GAChBk7B,UAAW,CACjB+zC,GAAY,EACZ,OAGRx6C,EAAOk7C,aAAaV,MAEjB9F,EAGX0G,WACI,OAAOr2E,KAAKmuB,MAGhBga,eAGI,OAFmBnoC,KAAKmuB,MAAM9c,KAAK+lB,GAASA,EAAK0J,WAAWzP,aAC5B2jB,QAAO,CAACntC,EAAK8zE,IAAeA,EAAY9zE,EAAM8zE,EAAY9zE,IAI9F+zE,iBAAiBC,GAEb,OADA77E,KAAKs4E,iBAAmBuD,EACjB77E,KAGX87E,UAAUp6E,EAAGq6E,EAAYC,EAAYnpC,GACjC,OAAOmpC,GAAct6E,EAAIq6E,GAAclpC,EAG3CopC,iBACI,MAAM,MAAE9tD,EAAOqV,eAAgBqH,EAAexM,gBAAgB,UAAEm6C,EAAS,UAAEC,EAAS,iBAAEC,EAAgB,WAAEC,IAAkB34E,KACpHk8E,EAAY/tD,EAAM,GAClBguD,EA3Zd,SAAsBD,EAAWpzB,GAC7B,MAAMszB,EAAgBF,EAAU35C,iBAAiByC,KAC3Cq3C,EAAaH,EAAUvzC,WAG7B,OAFqBmgB,EAASvmB,iBAAiByC,KAExBo3C,IADLtzB,EAASngB,WAC0B0zC,GAsZ5BC,CAAaJ,EAAW/tD,EAAMA,EAAMvqB,OAAS,IAC5Di5C,GAAa27B,EAAYC,GAAaC,EAC5C,IAAI6D,EAAU/4E,OAAOg5E,UACjBC,EAAY,EACZnnD,EAAS,EAEb,IAAK,IAAIud,EAAQ4lC,EAAW5lC,GAAS2lC,EAAW3lC,GAASgK,EAAW,CAChE,IAAI6/B,EAAqB,EACrBC,EAAa,EAEjB,IAAK,IAAIn2E,EAAI,EAAGA,EAAI2nB,EAAMvqB,SAAU4C,EAAG,CACnC,MAAM4wB,EAAOjJ,EAAM3nB,GACnB,GAAI4wB,EAAKiK,WAAajK,EAAK+I,SAAU,CACjC,MAAMy8C,EAAmB58E,KAAK87E,UAAU1kD,EAAKuR,WAAYuzC,EAAUvzC,WAAYuzC,EAAU35C,iBAAiByC,KAAM6N,GAAS8pC,EACnH1+B,EAAW7mB,EAAKmL,iBAAiByC,KAEvC,GAAIiZ,EAAWpT,EAAgB+xC,EAAmB/xC,EAAe,CAC7D,MAAMgyC,EAAO75E,KAAK8C,IAAIm4C,EAAW2+B,GACjCD,GAAcE,GAAQhyC,EACtB6xC,GAAsBG,EAAOr2E,OAI7Bk2E,IAAuBz+B,EAAW2+B,GAAoB/xC,GAMlE,MAAMiyC,EAAaX,EAAe,EAI5BpH,EAAO4D,EAHa31E,KAAK8C,IAAIg3E,EAAajqC,GAGF7vC,KAAK8C,IAAI42E,GAEnD3H,EAAOwH,IACPA,EAAUxH,EACV0H,EAAY5pC,EACZvd,EAASqnD,GAGjB38E,KAAK6yC,MAAQ4pC,EACbz8E,KAAKoyB,QAAUkD,EAGnBynD,qBACI,MAAM,MAAE5uD,EAAK,eAAEqV,EAAgBnF,gBAAgB,WAAEk6C,EAAU,qBAAES,EAAoB,iBAAE0C,IAAwB17E,KAG3G,IAAIivE,EAAQ,EACR+N,EAAW,EACXC,EAAmB,EACnBC,EAAiB,EACrB,IAAK,IAAI12E,EAAI,EAAGA,EAAI2nB,EAAMvqB,OAAQ4C,IAAK,CAEnC,MAAM4wB,EAAOjJ,EAAM3nB,GACby3C,EAAW7mB,EAAKmL,iBAAiByC,KACvCiqC,GAAShxB,EAGLza,IAAmBV,EAAKgB,MAAQo5C,EAAiBj/B,GACjDi/B,EAAiBj/B,EACjB++B,EAAWh6E,KAAK6E,OAAOuvB,EAAK4J,SAC5Bi8C,EAAmB7lD,EAAK+Q,gBAEnB3E,IAAmBV,EAAKe,KAA0B,IAAnBq5C,GAAwBA,EAAiBj/B,KAC7Ei/B,EAAiBj/B,EACjB++B,EAAWh6E,KAAK8hC,OAAO1N,EAAK4J,SAC5Bi8C,EAAmB7lD,EAAK+Q,gBAKhC,IAAIk2B,EAAS4Q,EAAQ9gD,EAAMvqB,OAK3B,MACMu5E,EAAcnE,EAAuBiE,GADZ,IAAb1E,GAEZ6E,EAAYJ,EAAWG,GAAe35C,EACxCA,IAAmBV,EAAKgB,MAAQu6B,EAAS+e,EACzC/e,EAAS2e,EAAWG,EAEf35C,IAAmBV,EAAKe,IAAMw6B,EAAS+e,IAC5C/e,EAAS2e,EAAWG,GAEnBzB,GAIIl4C,IAAmBV,EAAKgB,MAAQu6B,EAASqd,GAGzCl4C,IAAmBV,EAAKe,IAAMw6B,EAASqd,KAF5C17E,KAAKq+B,eAAeq9C,iBAAmBrd,GAHvCr+D,KAAKq+B,eAAeq9C,iBAAmBrd,EAS3Cr+D,KAAK6yC,MAAQ,EACb7yC,KAAKoyB,QAAU,EAGnBuhB,iBAGI,IAAI0pC,EAFcr9E,KAAKmuB,MAAM,GACGoU,iBAAiByC,KAOjD,OAHIhlC,KAAKq+B,eAAe06C,YAAc/4E,KAAKq+B,eAAeq9C,mBACtD2B,EAAQr9E,KAAKq+B,eAAeq9C,kBAEzB2B,EAMXC,sBACI,MAAM,MAAEnvD,EAAK,MAAE0kB,EAAK,QAAEzgB,EAAO,eAAEoR,EAAc,WAAEnS,EAAYgN,gBAAgB,cAAEu6C,EAAa,kBAAEC,EAAiB,WAAEN,IAAkBv4E,KAC3Hk8E,EAAY/tD,EAAM,GAClBiuD,EAAgBp8E,KAAK2zC,iBACrB0oC,EAAaH,EAAUvzC,WAC7B,IAAK,IAAIniC,EAAI,EAAGA,EAAI2nB,EAAMvqB,SAAU4C,EAAG,CACnC,MAAM4wB,EAAOjJ,EAAM3nB,GACbsqB,EAAOsG,EAAKqQ,UAClB,GAAI3W,EAAM,CACN,MAAM6gB,EAAQva,EAAKuR,YACX3D,KAAMiZ,GAAa7mB,EAAKmL,iBAC1Bg7C,EAAiBv9E,KAAK87E,UAAUnqC,EAAO0qC,EAAYD,EAAevpC,GAASzgB,EAC3EorD,EAAmB1sD,EAAKwT,eACxBm5C,EAAgBj6C,IAAmBV,EAAKe,GAAKoa,EAAWs/B,EAAiBA,EAAiBt/B,EAGhG,GAFAntB,EAAKsT,aAAao5C,EAAmBC,GACrC3sD,EAAKwU,sBACDlO,EAAK+I,UAAYy4C,EAAe,CAChC,MACM8E,GAAkBrsD,EAAa,GADnBknD,EACoC,IADpCA,EAElBznD,EAAKoU,eAAc,GAAME,YAAW,EAAMs4C,EAAiB7E,MAM3E8E,oBAAoBrvD,EAAUsvD,EAAWpvB,EAAMqvB,GAC3C,GAAiB,MAAbvvD,EACA,OAAO4pD,GAEX,MAAM4F,EAAkB,GAAGxxD,EAAO8a,iBAAiB9Y,GAAY,EACzDyvD,EAAsBH,EAAYtxD,EAAOyT,gBAAgB+9C,GACzDE,EAAsBH,EAAYvxD,EAAOyT,gBAAgB+9C,GACzDG,EAAiBzvB,EAAOliC,EAAOyT,gBAAgB+9C,GACrD,OAAIC,GAAuBC,GAAuBC,EACvC9F,GAEF4F,IAAwBC,GAAuBC,EAC7C/F,IAED6F,GAAuBC,GAAuBC,EA/iB7C,IAkjBJj+E,KAAK29E,oBAAoBG,EAAiBF,EAAWpvB,EAAMqvB,GAGtEK,aAAa5vD,GACT,MAAM6vD,EAAmB7xD,EAAOyT,gBAAgBzR,GAChD,IAAI8vD,GAAe,EACnB,MAAMC,EAAa,GACnB,IAAIC,EACJ,MAAMxF,EAAsB94E,KAAKq+B,eAAey6C,oBAChD,IAAIyF,GAAwB,EACxBC,EAAa,EACjB,IAAK,IAAIh4E,EAAI,EAAGA,EAAIxG,KAAKmuB,MAAMvqB,SAAU4C,EAAG,CACxC,MAAM4wB,EAAOp3B,KAAKmuB,MAAM3nB,GAGxBg4E,GADcpnD,EAAK+C,WAAWn2B,QAE9B,IAAIy6E,GAAe,EAEf77E,SAAS0rB,EAAU,KAAO,IAE1BmwD,GAAqD,IAAtCz+E,KAAKs4E,iBAAiBh9C,QAAQ90B,GAGzCxG,KAAKq+B,eAAeo9C,uBAAyB+C,GAAcx+E,KAAKq+B,eAAeo9C,wBAC/E+C,EAAa,EACbC,GAAe,IAGvB,MAAMR,EAAiB7mD,EAAKqF,oBAAsB0hD,EAC5C54C,EAASnO,EAAKuR,WAAa7F,EAAKiB,MAAQ,EAGxCqkB,EAAYpoD,KAAKmuB,MAAM3nB,EAAI,GAC3Bk4E,EAAY1+E,KAAKmuB,MAAM3nB,EAAI,GAC3Bw3E,EAAsBU,GAAaA,EAAUjiD,oBAAsB0hD,EACnEJ,EAAsB31B,GAAaA,EAAU3rB,oBAAsB0hD,EACnEQ,EAAav2B,GAAas2B,GAAaT,IAAmBF,IAAwBC,EAExF,GAAIC,EAEA,GAAIG,EAGAE,EAAeD,EAAWA,EAAWz6E,OAAS,GAC9C06E,EAAazxC,IAAMtH,EAEfk5C,IACAL,GAAe,EACXM,IAAcV,QAA4Cr8E,IAArB28E,EAAazxC,MAGlDyxC,EAAazxC,IAAMyxC,EAAa1xC,MAAQksC,QAI/C,CAID,GAFAwF,EAAe,CAAE1xC,MAAOrH,EAAQsH,SAAKlrC,GACrCy8E,GAAe,EACXO,EAAY,CAEZ,MAAMf,EAAYx1B,EAAU3rB,oBACtBohD,EAAYa,EAAUjiD,oBACtB+xB,EAAOp3B,EAAKqF,oBACZmiD,EAAiB5+E,KAAK29E,oBAAoBrvD,EAAUsvD,EAAWpvB,EAAMqvB,GACvE,CAAC3F,GAAWC,IAAWvmE,SAASgtE,GAChCN,EAAazxC,IAAMyxC,EAAa1xC,MAAQksC,EAGxCwF,EAAazxC,IAAMyxC,EAAa1xC,MAAQksC,OAGtCkF,EAYDS,IAGLH,EAAazxC,IAAMyxC,EAAa1xC,MAAQksC,EACxCsF,GAAe,GAXXE,EAAazxC,KAHZ0xC,GAA+B,IAAN/3E,IAAYk4E,EAGnBJ,EAAa1xC,MAAQksC,EAIrBwF,EAAa1xC,MAAQksC,EAShDuF,EAAWhwD,KAAKiwD,QAKpBF,GAAe,EAInBG,EAAwBE,EAG5B,MAAMI,EAAYR,EAAWA,EAAWz6E,OAAS,GAIjD,OAHIi7E,QAA+Bl9E,IAAlBk9E,EAAUhyC,MACvBgyC,EAAUhyC,IAAMgyC,EAAUjyC,MAAQksC,GAE/BuF,EAGXS,UAAUprD,GACN1zB,KAAKmuB,MAAMyK,SAASxB,IAChB,MAAMtG,EAAOsG,EAAKqQ,UACd3W,GACAA,EAAK3c,WAAWuf,GAAKjgB,SAE1BzT,MAGP++E,cAAcrrD,GACV,MAAMsrD,EAAuB,CAAC,IAAK,IAAK,KAAM,KAAM,MAC9C9C,EAAYl8E,KAAKmuB,MAAM,GAC7B,IAAIkvD,EAAQr9E,KAAK2zC,iBACjB,MAAM0oC,EAAaH,EAAUvzC,WACvBs2C,EAAgBj/E,KAAKq+B,eAAek6C,WAAav4E,KAAKwjC,eAE5D,IAAK,IAAIh9B,EAAI,EAAGA,EAAIw4E,EAAqBp7E,SAAU4C,EAAG,CAClD,MAAM8nB,EAAW0wD,EAAqBx4E,GAChC04E,EAAYl/E,KAAKk+E,aAAa5vD,GACpC,IAAK,IAAI00B,EAAI,EAAGA,EAAIk8B,EAAUt7E,SAAUo/C,EAAG,CACvC,MAAMm8B,EAAYD,EAAUl8B,GACtBo8B,EAAaD,EAAUvyC,MACvByyC,EAAar/E,KAAK87E,UAAUsD,EAAY/C,EAAYgB,EAAOr9E,KAAK6yC,OAChEysC,EAAYH,EAAUtyC,IAC5B,IAAIyyC,EAWA,MAAM,IAAIr+E,EAAa,cAAe,wBAX3B,CACX,MAAMs+E,EAAYv/E,KAAK87E,UAAUwD,EAAWjD,EAAYgB,EAAOr9E,KAAK6yC,OACpEnf,EAAIQ,YACJR,EAAIS,OAAOirD,EAAYC,GACvB3rD,EAAIU,OAAOgrD,EAAYC,EAAaJ,GACpCvrD,EAAIU,OAAOkrD,EAAY,EAAGC,EAAYN,GACtCvrD,EAAIU,OAAOkrD,EAAY,EAAGC,GAC1B7rD,EAAI6L,YACJ7L,EAAIa,QAMZ8oD,GAAyB,IAAhB4B,GAIjB5iD,YACI,OAAOr8B,KAOXu8B,aACQv8B,KAAKw8B,gBAGLmY,GAAU30C,KAAKmuB,MAAM,KAAOnuB,KAAKq+B,eAAe06C,WAChD/4E,KAAK+8E,qBAGL/8E,KAAKi8E,iBAETj8E,KAAKs9E,sBACLt9E,KAAKw8B,eAAgB,GAGzB/oB,OACI,MAAMigB,EAAM1zB,KAAKwT,eACjBxT,KAAK8T,cACD9T,KAAKi6E,aAEJj6E,KAAKw8B,eACNx8B,KAAKu8B,aAETv8B,KAAK8+E,UAAUprD,GACf1zB,KAAKwS,aACLxS,KAAK++E,cAAcrrD,GACnB1zB,KAAKqT,iBCpwBN,MAAMmsE,WAAiB3tE,EAa1B1Q,YAAYgtB,EAAOrrB,GACfxB,QACAtB,KAAKy/E,SAAStxD,GACdnuB,KAAK8C,KAAOA,EACZ9C,KAAKq+B,eAAiB,CAClBqhD,IAAK,EACLC,IAAK,GACLlmB,aAAc,EACdmmB,cAAe,EACfC,aAAc,EACdztD,QAAS,EACT0tD,YAAa,GAEjB9/E,KAAKgV,YAEE1R,sBACP,MAAO,WAEX4gC,aAAaC,GAET,OADAnkC,KAAKmkC,UAAYA,EACVnkC,KAOXy/E,SAAStxD,GACL,IAAKA,EAAMyoD,aAAezoD,EAAMomB,UAC5B,MAAM,IAAItzC,EAAa,eAAgB,yDAQ3C,GANKktB,EAAM4xD,gBACP5xD,EAAM4xD,cAAgB,CAAC,IAEtB5xD,EAAM6xD,eACP7xD,EAAM6xD,aAAe,CAAC,IAEtB7xD,EAAM4xD,cAAcn8E,SAAWuqB,EAAM6xD,aAAap8E,OAClD,MAAM,IAAI3C,EAAa,eAAgB,gDAG3C,OADAjB,KAAKmuB,MAAQA,EACNnuB,KAKXigF,YACI,OAAQjgF,KAAKmuB,MAAMyoD,aAAe52E,KAAKmuB,MAAMomB,UAEjD2rC,UAAUxzD,GACN,GAA+B,IAA3BA,EAAOyzD,SAASv8E,QAA0C,IAA1B8oB,EAAO0zD,QAAQx8E,OAC/C,MAAM,IAAI3C,EAAa,eAAgB,yBAE3C,MAAMyyB,EAAM1zB,KAAKwT,eACjB,IAAIksE,EAAM1/E,KAAKq+B,eAAeqhD,IAC1BC,EAAM3/E,KAAKq+B,eAAeshD,IAC1B38E,KAAK8C,IAAI4mB,EAAO2zD,UAAY3zD,EAAOqvD,YAAc,KACjD2D,EAAM,EACNC,EAAM,GAEV,MAAMC,EAAgB5/E,KAAKq+B,eAAeuhD,cACpCC,EAAe7/E,KAAKq+B,eAAewhD,aACnCztD,EAAUpyB,KAAKq+B,eAAejM,QAAU1F,EAAOyX,UAI/C47C,EAAgB//E,KAAKmuB,MAAM4xD,cAE3BC,EAAehgF,KAAKmuB,MAAM6xD,aAChC,IAAK,IAAIx5E,EAAI,EAAGA,EAAIu5E,EAAcn8E,SAAU4C,EAAG,CAC3C,MAAMu5C,GAAQrzB,EAAO2zD,UAAYR,GAAgBnzD,EAAOqvD,WAAa6D,IAAkB,EACjF5D,EAAatvD,EAAOyzD,SAASJ,EAAcv5E,IAAM4rB,EACjDkuD,EAAY5zD,EAAO0zD,QAAQJ,EAAax5E,IAAM4rB,EACpD,GAAI3uB,MAAMu4E,IAAev4E,MAAM68E,GAC3B,MAAM,IAAIr/E,EAAa,eAAgB,kCAE3C,MAAMs/E,GAAYvE,EAAasE,GAAa,EAAIZ,EAAMhzD,EAAOyX,UACvDq8C,GAAexE,EAAasE,GAAa,EAAIX,EAAMjzD,EAAOyX,UAChEzQ,EAAIQ,YACJR,EAAIS,OAAOzH,EAAOqvD,WAAa6D,EAAe5D,GAC9CtoD,EAAIW,iBAAiB0rB,EAAMwgC,EAAU7zD,EAAO2zD,UAAYR,EAAcS,GACtE5sD,EAAIW,iBAAiB0rB,EAAMygC,EAAa9zD,EAAOqvD,WAAa6D,EAAe5D,GAC3EtoD,EAAI6L,YACJ7L,EAAIa,QAGZ6rB,WAAW27B,EAAYsE,GACnB,IAAIx0E,EAAIkF,EAAI+4B,EACZ,IAAK9pC,KAAK8C,KACN,OACJ,MAAM4wB,EAAM1zB,KAAKwT,eACjB,IAAIitE,GAAY1E,EAAasE,GAAa,EAC1CI,GAAY/sD,EAAI8hB,YAAYx1C,KAAK8C,MAAMyF,MAAQ,EAC/C,MAAMusB,EAAqG,QAA5F/jB,EAAsC,QAAhClF,EAAK7L,KAAKmuB,MAAMyoD,kBAA+B,IAAP/qE,OAAgB,EAASA,EAAG8pB,oBAAiC,IAAP5kB,EAAgBA,EAAqC,QAA/B+4B,EAAK9pC,KAAKmuB,MAAMomB,iBAA8B,IAAPzK,OAAgB,EAASA,EAAGnU,aACxMb,IACApB,EAAIhhB,OACJghB,EAAItf,QAAQpU,KAAKsU,UACjBof,EAAIwL,SAASl/B,KAAK8C,KAAM29E,EAAWzgF,KAAKq+B,eAAeo7B,aAAc3kC,EAAMmM,iBAAmB,GAC9FvN,EAAIpgB,WAGZG,OACIzT,KAAKwT,eACLxT,KAAK8T,cACL,MAAM8iE,EAAa52E,KAAKmuB,MAAMyoD,WACxBriC,EAAYv0C,KAAKmuB,MAAMomB,UAE7B,IAAIwnC,EAAa,EACbsE,EAAY,EACZF,EAAW,CAAC,GACZC,EAAU,CAAC,GACX58C,EAAiB,EACrB,GAAIozC,EACAmF,EAAanF,EAAWp0C,eAAiBxiC,KAAKq+B,eAAeyhD,YAC7Dt8C,EAAiBozC,EAAWt0C,mBAC5B69C,EAAWvJ,EAAW51C,aAErB,GAAIuT,EAAW,CAEhBwnC,EADcxnC,EAAU5e,aACLsyC,eACnBkY,EAAW5rC,EAAUvT,QACrBhhC,KAAKmuB,MAAM4xD,cAAgB//E,KAAKmuB,MAAM6xD,aAE1C,GAAIzrC,EACA8rC,EAAY9rC,EAAU7R,cAAgB1iC,KAAKq+B,eAAeyhD,YAC1Dt8C,EAAiB+Q,EAAUjS,mBAC3B89C,EAAU7rC,EAAUvT,aAEnB,GAAI41C,EAAY,CAEjByJ,EADczJ,EAAWjhD,aACPuyC,aAClBkY,EAAUxJ,EAAW51C,QACrBhhC,KAAKmuB,MAAM6xD,aAAehgF,KAAKmuB,MAAM4xD,cAazC,OAXI//E,KAAKmkC,YACLX,EAAiBxjC,KAAKmkC,WAE1BnkC,KAAKkgF,UAAU,CACXnE,WAAAA,EACAsE,UAAAA,EACAF,SAAAA,EACAC,QAAAA,EACAj8C,UAAWX,IAEfxjC,KAAKogD,WAAW27B,EAAYsE,IACrB,GAIfb,GAAShrE,UAAYnU,OAAOwU,OAAO,GAAIhD,EAAQ2C,WClKxC,MAAMksE,WAAelB,GACbl8E,sBACP,MAAO,SAEXC,sBAAsB4qB,GAClB,OAAO,IAAIuyD,GAAOvyD,EAAO,KAE7B5qB,qBAAqB4qB,GACjB,OAAO,IAAIuyD,GAAOvyD,EAAO,KAa7BhtB,YAAYgtB,EAAOrrB,GACfxB,MAAM6sB,EAAOrrB,GACb9C,KAAKq+B,eAAeqhD,IAAM,EAC1B1/E,KAAKq+B,eAAeshD,IAAM,GAC1B3/E,KAAKq+B,eAAejM,QAAU,EAC9BpyB,KAAKmkC,WAAa,GCRnB,MAAMo3B,WAAuBplC,EAEhCh1B,YAAYw/E,EAAaC,GAmBrB,OAlBAt/E,QACAtB,KAAKs8B,cAAe,EACpBt8B,KAAKoxB,SAAW+E,EAASE,SAASC,KAClCt2B,KAAK2gF,YAAcA,EACnB3gF,KAAKuI,MAAQ,EACbvI,KAAK4gF,UAAYA,EACjB5gF,KAAKgyC,UAAOrwC,EACZ3B,KAAK64C,UAAY,IAAIuT,GACrBpsD,KAAK86B,MAAQ,IAAI8uB,GAAM,CACnBh5B,UAAW,EACXC,WAAY,EACZ9hB,WAAYud,EAAO/W,aACpB61C,WAAU,GACbprD,KAAKq+B,eAAiB,CAClBwiD,aAAc,GAElB7gF,KAAK2vE,MAAQ,GACb3vE,KAAK86B,MAAMoxB,aAAalsD,KAAK2gF,aACtB3gF,KAEAsD,sBACP,MAAO,iBAGXC,cAAcu9E,EAAkB/+C,GAG5B,IAAK++C,GAAgD,IAA5BA,EAAiBl9E,OACtC,OAAO,EACX,MAAMm9E,EAAa,GACnB,IAAI34B,EAAY,KACZI,EAAS,EACb,IAAK,IAAIhiD,EAAI,EAAGA,EAAIs6E,EAAiBl9E,SAAU4C,EAAG,CAC9C,MAAMw6E,EAAkBF,EAAiBt6E,GACnC4wB,EAAO4pD,EAAgB7pD,UACvB8pD,EAAe73C,EAAYhS,GAC3BwP,EAAUq6C,EAXQ,EACF,EAWtB,GAAIA,GAAgB7pD,IAASgxB,EAAW,CAEpC,IAAK,IAAIzlD,EAAI,EAAGA,EAAIy0B,EAAKhmB,KAAKxN,SAAUjB,EACpC6lD,EAASxlD,KAAK6E,IAAIuvB,EAAKmJ,yBAA0BioB,GAErDJ,EAAYhxB,EAEhB2pD,EAAW1yD,KAAK,CAAEvqB,MAAO0kD,EAAQw4B,gBAAAA,EAAiBp6C,QAAAA,IAGtD,IACIs6C,EADAC,EAAcJ,EAAW,GAAGj9E,MAEhC,IAAK,IAAI0C,EAAI,EAAGA,EAAIu6E,EAAWn9E,SAAU4C,EAAG,CACxC,MAAMw6E,EAAkBD,EAAWv6E,GAAGw6E,gBACtCA,EAAgB3kD,YAChB6kD,EAAcF,EAAgBjzD,WAAagzD,EAAWv6E,GAAGogC,QACzDu6C,EAAcn+E,KAAK6E,IAAIq5E,EAAaC,GAExC,IAAK,IAAI36E,EAAI,EAAGA,EAAIu6E,EAAWn9E,SAAU4C,EAAG,CACxC,MAAMw6E,EAAkBD,EAAWv6E,GAAGw6E,gBACtCE,EAAcF,EAAgBjzD,WAAagzD,EAAWv6E,GAAGogC,QACzDo6C,EAAgB/oD,2BAA2BkpD,EAAcn+E,KAAK8hC,IAAIo8C,EAAaC,IAGnF,OADAp/C,EAAMC,YAAcm/C,GACb,EAEX9kD,YACQr8B,KAAKs8B,eAETt8B,KAAK64C,UAAUyT,WAAW,CAACtsD,KAAK86B,QAAQyxB,OAAO,CAACvsD,KAAK86B,OAAQ,EAAG,IAChE96B,KAAKk3B,SAASl3B,KAAK64C,UAAU2T,oBAC7BxsD,KAAKs8B,cAAe,GAExB8kD,UAAUT,GAEN,IADAA,EAAcA,GAAe3gF,KAAK2gF,aAClB/8E,OAAS,EAAG,CACxB,MAAM49B,EAAO,IAAIouC,GAAK+Q,GACtBn/C,EAAKnD,eAAek6C,WAAa,EACjC/2C,EAAKnD,eAAey6C,oBAAsB,EAC1C94E,KAAK2vE,MAAMthD,KAAKmT,GAEpB,OAAOxhC,KAEXk3B,SAAS3uB,GAEL,OADAvI,KAAKuI,MAAQA,EACNvI,KAEX+tB,WACI,OAAO/tB,KAAKuI,MAEhB84E,gBACI,OAAOrhF,KAAK2gF,YAEhBltE,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAQlB,GAPAr3B,KAAK8T,cArGb,YAAchS,GACNy5D,GAAe71B,OACf9jC,EAAI,0BAA2BE,GAoG/B,CAAE,gCAAiCs1B,GACnCp3B,KAAKo4B,sBAAsBp4B,KAAKqhF,gBAAiBjqD,GAEjDp3B,KAAK2gF,YAAY/nD,SAAS0oD,GAAcA,EAAUntE,WAAWuf,GAAKjgB,SAElEzT,KAAK2vE,MAAM/2C,SAAS4I,GAASA,EAAKrtB,WAAWuf,GAAKjgB,SAC9CzT,KAAK4gF,UAAW,CAEhB,MAAMK,EAAe73C,EAAYhS,GAC3BmqD,EAAWN,EAAezB,GAAWkB,GAC3C1gF,KAAKgyC,KAAO,IAAIuvC,EAAS,CACrBhtC,UAAWv0C,KAAK2gF,YAAY,GAC5B/J,WAAYx/C,EACZ2oD,cAAe,CAAC,GAChBC,aAAc,CAAC,KAEnBhgF,KAAKgyC,KAAK3T,eAAeshD,IAAM,GAC/B3/E,KAAKgyC,KAAK3T,eAAejM,SAAW6uD,EAAe,EAAI,GAAKjhF,KAAKq+B,eAAewiD,aAChF7gF,KAAKgyC,KAAK79B,WAAWuf,GAAKjgB,SAItC8nD,GAAe71B,OAAQ,EC3IhB,MAAM87C,GAEEC,uBACP,OAAOzhF,KAAK0hF,gBAAgB99E,OAGrB+9E,mBACP,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAG/BC,yBACP,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGnBC,0BACP,MAAO,CACH93E,EAAG,EACH5F,EAAG,EACHxD,EAAG,EACH0F,EAAG,EACH5F,EAAG,EACH+B,EAAG,EACHC,EAAG,GAIAi/E,6BACP,MAAO,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAG7DI,gCACP,MAAO,CAAC,SAAU,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,UAG/EC,kCACP,MAAO,CACHC,OAAQ,CAAE5qD,KAAM,EAAGnf,WAAY,GAC/BgqE,GAAI,CAAE7qD,KAAM,EAAGnf,YAAa,GAC5BiqE,GAAI,CAAE9qD,KAAM,EAAGnf,WAAY,GAC3BkqE,GAAI,CAAE/qD,KAAM,EAAGnf,YAAa,GAC5BmqE,GAAI,CAAEhrD,KAAM,EAAGnf,WAAY,GAC3BoqE,GAAI,CAAEjrD,KAAM,EAAGnf,WAAY,GAC3BqqE,KAAM,CAAElrD,KAAM,EAAGnf,YAAa,GAC9BsqE,GAAI,CAAEnrD,KAAM,EAAGnf,WAAY,GAC3BuqE,GAAI,CAAEprD,KAAM,EAAGnf,YAAa,GAC5BwqE,GAAI,CAAErrD,KAAM,EAAGnf,WAAY,GAC3ByqE,GAAI,CAAEtrD,KAAM,EAAGnf,YAAa,GAC5B0qE,GAAI,CAAEvrD,KAAM,EAAGnf,WAAY,GAC3BwB,OAAQ,CAAE2d,KAAM,EAAGnf,WAAY,IAI5B2qE,uBACP,MAAO,CACH1+E,EAAG,EACH89E,OAAQ,EACRC,GAAI,EACJY,GAAI,EACJC,KAAM,EACNC,EAAG,EACHC,EAAG,EACH,EAAG,EACHd,GAAI,EACJe,KAAM,EACNC,EAAG,EACHC,EAAG,EACHhB,GAAI,EACJiB,GAAI,EACJC,KAAM,EACNjB,GAAI,EACJ,EAAG,EACHkB,KAAM,EACN,EAAG,EACHjB,GAAI,EACJ,KAAM,EACNkB,GAAI,EACJC,KAAM,EACNlB,KAAM,EACN,EAAG,EACHC,GAAI,EACJ,KAAM,EACNkB,GAAI,EACJC,KAAM,EACN,EAAG,EACHjB,GAAI,EACJkB,KAAM,EACNjB,GAAI,GACJkB,GAAI,GACJC,KAAM,GACNC,KAAM,GACNnB,GAAI,GACJoB,KAAM,GACN,EAAG,GACHtqE,OAAQ,IAILuqE,oBACP,MAAO,CACHC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1B38B,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1B48B,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5BC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAIzBC,wBACP,MAAO,CACHC,EAAGlD,GAAMwC,OAAOC,MAChBvzD,EAAG8wD,GAAMwC,OAAO18B,OAIb1sC,yBACP,MAAO,CAAC,KAAM,IAAK,IAAK,IAAK,MAGtB+pE,wBACP,MAAO,CACH56E,EAAG,CAAE66E,WAAY,EAAG7sE,QAAS,GAC7B8sE,GAAI,CAAED,WAAY,EAAG7sE,QAAS,GAC9B,KAAM,CAAE6sE,WAAY,EAAG7sE,QAAS,GAChC,MAAO,CAAE6sE,WAAY,EAAG7sE,QAAS,GACjC+sE,GAAI,CAAEF,WAAY,EAAG7sE,QAAS,IAC9BgtE,IAAK,CAAEH,WAAY,EAAG7sE,QAAS,IAC/B5T,EAAG,CAAEygF,WAAY,EAAG7sE,QAAS,GAC7BitE,GAAI,CAAEJ,WAAY,EAAG7sE,QAAS,GAC9B,KAAM,CAAE6sE,WAAY,EAAG7sE,QAAS,GAChC,MAAO,CAAE6sE,WAAY,EAAG7sE,QAAS,GACjCgD,GAAI,CAAE6pE,WAAY,EAAG7sE,QAAS,GAC9BktE,IAAK,CAAEL,WAAY,EAAG7sE,QAAS,GAC/BpX,EAAG,CAAEikF,WAAY,EAAG7sE,QAAS,GAC7BmtE,GAAI,CAAEN,WAAY,EAAG7sE,QAAS,GAC9B,KAAM,CAAE6sE,WAAY,EAAG7sE,QAAS,GAChC,MAAO,CAAE6sE,WAAY,EAAG7sE,QAAS,GACjCotE,GAAI,CAAEP,WAAY,EAAG7sE,QAAS,GAC9BqtE,IAAK,CAAER,WAAY,EAAG7sE,QAAS,GAC/B1R,EAAG,CAAEu+E,WAAY,EAAG7sE,QAAS,GAC7BstE,GAAI,CAAET,WAAY,EAAG7sE,QAAS,GAC9B,KAAM,CAAE6sE,WAAY,EAAG7sE,QAAS,GAChC,MAAO,CAAE6sE,WAAY,EAAG7sE,QAAS,GACjCutE,GAAI,CAAEV,WAAY,EAAG7sE,QAAS,GAC9BwtE,IAAK,CAAEX,WAAY,EAAG7sE,QAAS,GAC/BtX,EAAG,CAAEmkF,WAAY,EAAG7sE,QAAS,GAC7BytE,GAAI,CAAEZ,WAAY,EAAG7sE,QAAS,GAC9B,KAAM,CAAE6sE,WAAY,EAAG7sE,QAAS,GAChC,MAAO,CAAE6sE,WAAY,EAAG7sE,QAAS,GACjC0tE,GAAI,CAAEb,WAAY,EAAG7sE,QAAS,GAC9B2tE,IAAK,CAAEd,WAAY,EAAG7sE,QAAS,GAC/BvV,EAAG,CAAEoiF,WAAY,EAAG7sE,QAAS,GAC7B4tE,GAAI,CAAEf,WAAY,EAAG7sE,QAAS,GAC9B,KAAM,CAAE6sE,WAAY,EAAG7sE,QAAS,IAChC,MAAO,CAAE6sE,WAAY,EAAG7sE,QAAS,IACjC6tE,GAAI,CAAEhB,WAAY,EAAG7sE,QAAS,GAC9B8tE,IAAK,CAAEjB,WAAY,EAAG7sE,QAAS,GAC/BtV,EAAG,CAAEmiF,WAAY,EAAG7sE,QAAS,IAC7B+tE,GAAI,CAAElB,WAAY,EAAG7sE,QAAS,IAC9B,KAAM,CAAE6sE,WAAY,EAAG7sE,QAAS,GAChC,MAAO,CAAE6sE,WAAY,EAAG7sE,QAAS,GACjC+C,GAAI,CAAE8pE,WAAY,EAAG7sE,QAAS,IAC9BguE,IAAK,CAAEnB,WAAY,EAAG7sE,QAAS,IAGvCiuE,iBAAiB5uD,GACb,OAAOA,GAAQ,GAAKA,EAAOoqD,GAAME,gBAAgB99E,OAErDqiF,qBAAqBC,GACjB,OAAOA,GAAY,GAAKA,EAAW1E,GAAMM,mBAAmBl+E,OAGhEuiF,aAAaC,GACT,IAAKA,GAAcA,EAAWxiF,OAAS,EACnC,MAAM,IAAI3C,EAAa,eAAgB,sBAAwBmlF,GAEnE,GAAIA,EAAWxiF,OAAS,EACpB,MAAM,IAAI3C,EAAa,eAAgB,sBAAwBmlF,GAEnE,MAAMhvD,EAAOgvD,EAAWj6E,cAElBm+C,EADQ,8BACM3qB,KAAKvI,GACzB,GAAc,OAAVkzB,EAAgB,CAGhB,MAAO,CACH9qD,KAHS8qD,EAAM,GAIfryC,WAHeqyC,EAAM,IAOzB,MAAM,IAAIrpD,EAAa,eAAgB,sBAAwBmlF,GAIvEC,YAAYC,GACR,IAAKA,GAAaA,EAAU1iF,OAAS,EACjC,MAAM,IAAI3C,EAAa,eAAgB,gBAAkBqlF,GAE7D,MAAMnmF,EAAMmmF,EAAUn6E,cAGhBm+C,EADQ,qCACM3qB,KAAKx/B,GACzB,GAAc,OAAVmqD,EAAgB,CAChB,MAAM9qD,EAAO8qD,EAAM,GACbryC,EAAaqyC,EAAM,GACzB,IAAIv6C,EAAOu6C,EAAM,GAIjB,OAFKv6C,IACDA,EAAO,KACJ,CACHvQ,KAAAA,EACAyY,WAAAA,EACAlI,KAAAA,GAIJ,MAAM,IAAI9O,EAAa,eAAgB,gBAAgBqlF,KAI/DC,aAAaH,GACT,MAAMpiF,EAAQw9E,GAAMmD,WAAWyB,GAC/B,QAAczkF,IAAVqC,EACA,MAAM,IAAI/C,EAAa,eAAgB,sBAAsBmlF,KAEjE,OAAOpiF,EAAM+T,QAGjByuE,iBAAiBC,GACb,MAAMziF,EAAQw9E,GAAMoB,UAAU6D,GAC9B,QAAc9kF,IAAVqC,EACA,MAAM,IAAI/C,EAAa,eAAgB,0BAA0BwlF,KAErE,OAAOziF,EAGX0iF,qBAAqBp5D,GACjB,IAAKttB,KAAKgmF,iBAAiB14D,GACvB,MAAM,IAAIrsB,EAAa,eAAgB,uBAAuBqsB,KAElE,OAAOk0D,GAAME,gBAAgBp0D,GAGjCq5D,yBAAyBC,GACrB,IAAK5mF,KAAKimF,qBAAqBW,GAC3B,MAAM,IAAI3lF,EAAa,eAAgB,2BAA2B2lF,KAEtE,OAAOpF,GAAMM,mBAAmB8E,GAKpCC,qBAAqBv5D,EAAWs5D,EAAeziD,EAAY,GACvD,GAAkB,IAAdA,IAAkC,IAAfA,EACnB,MAAM,IAAIljC,EAAa,eAAgB,sBAAsBkjC,KAEjE,IAAI2iD,GAAOx5D,EAAY6W,EAAYyiD,GAAiBpF,GAAMC,UAG1D,OAFIqF,EAAM,IACNA,GAAOtF,GAAMC,WACVqF,EAKXC,oBAAoBvnF,EAAM8tB,GACtB,MAAMqF,EAAQ3yB,KAAKmmF,aAAa3mF,GAC1BwnF,EAAYhnF,KAAKumF,aAAa5zD,EAAMnzB,MAC1C,IAAI0mF,EAAW54D,EAAY05D,EAC3B,GAAIhkF,KAAK8C,IAAIogF,GAAY1E,GAAMC,UAAY,EAAG,CAC1C,IAAIwF,EAAa,EACbf,EAAW,IACXe,GAAc,GAElB,MAAMC,GAAqB55D,EAAY,GAAK05D,EAAY,IAAMxF,GAAMC,UAAawF,EACjF,GAAIjkF,KAAK8C,IAAIohF,GAAoB,EAC7B,MAAM,IAAIjmF,EAAa,eAAgB,sBAAsBzB,MAAS8tB,MAGtE44D,EAAWgB,EAGnB,GAAIlkF,KAAK8C,IAAIogF,GAAY,EACrB,MAAM,IAAIjlF,EAAa,eAAgB,sBAAsBzB,MAAS8tB,MAE1E,IAAI65D,EAAmBx0D,EAAMnzB,KAC7B,GAAI0mF,EAAW,EACX,IAAK,IAAI1/E,EAAI,EAAGA,GAAK0/E,IAAY1/E,EAC7B2gF,GAAoB,SAGvB,GAAIjB,EAAW,EAChB,IAAK,IAAI1/E,GAAK,EAAGA,GAAK0/E,IAAY1/E,EAC9B2gF,GAAoB,IAG5B,OAAOA,EAWXC,cAAcjnF,EAAKyiF,GACf,MAAMyE,EAAQ,CAAClnF,GACf,IAAImnF,EAAWnnF,EACf,IAAK,IAAIqG,EAAI,EAAGA,EAAIo8E,EAAUh/E,OAAQ4C,IAClC8gF,EAAWtnF,KAAK6mF,qBAAqBS,EAAU1E,EAAUp8E,IACrD8gF,IAAannF,GACbknF,EAAMh5D,KAAKi5D,GAEnB,OAAOD,EAMXE,mBAAmBC,EAAOC,EAAOtjD,EAAY,GACzC,GAAkB,IAAdA,IAAkC,IAAfA,EACnB,MAAM,IAAIljC,EAAa,eAAgB,sBAAsBkjC,KAEjE,IAAKnkC,KAAKgmF,iBAAiBwB,KAAWxnF,KAAKgmF,iBAAiByB,GACxD,MAAM,IAAIxmF,EAAa,eAAgB,kBAAkBumF,MAAUC,KAEvE,IAAIC,EAA2B,IAAdvjD,EAAkBsjD,EAAQD,EAAQA,EAAQC,EAG3D,OAFIC,EAAa,IACbA,GAAclG,GAAMC,WACjBiG,EAQXC,eAAe9pB,GACX,MAAM+pB,EAAc5nF,KAAKqmF,YAAYxoB,GACrC,IAAK+pB,EAAY73E,KACb,MAAM,IAAI9O,EAAa,eAAgB,mCAC3C,MAAM4mF,EAAYrG,GAAMiD,WAAWmD,EAAY73E,MAC/C,IAAI+3E,EAAeF,EAAYpoF,KAG/B,GAFIooF,EAAY3vE,aACZ6vE,GAAgBF,EAAY3vE,aAC3B4vE,EACD,MAAM,IAAI5mF,EAAa,eAAgB,yBAA2B48D,GACtE,MAAMrwC,EAAQxtB,KAAKonF,cAAcpnF,KAAKumF,aAAauB,GAAeD,GAC5DE,EAAevG,GAAMK,aAAa+F,EAAYpoF,MAC9CwoF,EAAW,GACjB,IAAK,IAAIxhF,EAAI,EAAGA,EAAIg7E,GAAMG,MAAM/9E,SAAU4C,EAAG,CACzC,MAAM0J,GAAS63E,EAAevhF,GAAKg7E,GAAMG,MAAM/9E,OACzCqkF,EAAWzG,GAAMG,MAAMzxE,GAC7B,IAAIg4E,EAAWloF,KAAK+mF,oBAAoBkB,EAAUz6D,EAAMhnB,IAChC,IAApB0hF,EAAStkF,SACTskF,GAAY,KAEhBF,EAASC,GAAYC,EAEzB,OAAOF,GCjWf,SAAS,MAAKlmF,GACNw5D,GAAW51B,OACX9jC,EAAI,sBAAuBE,GAS5B,MAAMw5D,WAAmBnlC,EAM5Bh1B,YAAY4O,GACRzO,QACA,GAAE,mBAAoByO,GACtB/P,KAAK+P,KAAOA,EACZ/P,KAAKoxB,SAAW+E,EAASE,SAASC,KAClCt2B,KAAKq+B,eAAiB,CAElBqe,WAAY,GAEZyrC,iBAAkB,EAClBC,kBAAmB,GAEvBpoF,KAAKiY,WAAaqU,EAAOsjC,gBAAgB5vD,KAAK+P,MAC9CtO,EAAQzB,KAAKiY,WAAY,gBAAiB,4BAA4BlI,KAEtE/P,KAAKqoF,YAAa,EAClBroF,KAAKozB,QAGE9vB,sBACP,MAAO,aAGXC,cAAcqX,EAAamnB,GAEvB,IAAKnnB,GAAsC,IAAvBA,EAAYhX,OAC5B,OACJ,MAAM6iC,EAAYna,EAAO+V,mBACnBimD,EAA4B7hD,EAAUv3B,aAAa,wCACnDq5E,EAAYxmD,EAAMC,WAAasmD,EAC/B9qB,EAAoB/2B,EAAUv3B,aAAa,gCAC3Cs5E,EAAoB/hD,EAAUv3B,aAAa,0BAC3C6tD,EAAU,GAChB,IAAIud,EACA9xB,EAAS,EAEb,IAAK,IAAIhiD,EAAI,EAAGA,EAAIoU,EAAYhX,SAAU4C,EAAG,CACzC,MAAMuP,EAAM6E,EAAYpU,GAClB4wB,EAAOrhB,EAAIohB,UACXrC,EAAQsC,EAAKoB,WACbtoB,EAAQ6F,EAAIyhB,aACZmT,EAAQvT,EAAKyL,cAAc3yB,GACjC,GAAIknB,IAASkjD,EAAU,CAEnB,IAAK,IAAI33E,EAAI,EAAGA,EAAIy0B,EAAKhmB,KAAKxN,SAAUjB,EACpC6lD,EAASxlD,KAAK6E,IAAIuvB,EAAKmJ,yBAA0BioB,GAErD8xB,EAAWljD,EAEf,GAAItC,EAAO,CACP,MAAM4f,EAAY5f,EAAM+R,yBAClBlgC,EAAImuB,EAAMwL,YAAYqK,EAAM5oC,MAC5B0mF,EAAUzlF,KAAKm8B,MAAOx4B,EAAI+tC,EAAa,GAAK,EAClDqoB,EAAQ1uC,KAAK,CAAE1nB,EAAAA,EAAG5E,KAAM0mF,EAAS3kF,MAAO0kD,EAAQzyC,IAAAA,EAAK2+B,UAAAA,SAGrDqoB,EAAQ1uC,KAAK,CAAEtsB,KAAM4oC,EAAM5oC,KAAM+B,MAAO0kD,EAAQzyC,IAAAA,IAIxDgnD,EAAQ7vB,MAAK,CAAC1qC,EAAGC,IAAMA,EAAEV,KAAOS,EAAET,OAGlC,MAAM2mF,EAAW,GAGjB,IACIC,EADAC,EAAW,EAGf,IAAK,IAAIpiF,EAAI,EAAGA,EAAIu2D,EAAQn5D,OAAQ4C,IAAK,CACrC,MAAMuP,EAAMgnD,EAAQv2D,QAEC7E,IAAjBgnF,GAA8BA,IAAiB5yE,EAAIhU,MACnD2mF,EAASr6D,KAAK,CACVtsB,KAAMgU,EAAIhU,KACV8mF,UAAU,EACVC,cAAc,EACdC,OAAQ,EACRxgF,MAAO,EACPygF,OAAQ,IAMK,MAAjBjzE,EAAIA,IAAIhG,MAAiC,OAAjBgG,EAAIA,IAAIhG,OAChC24E,EAASA,EAAS9kF,OAAS,GAAGilF,UAAW,GAGxB,OAAjB9yE,EAAIA,IAAIhG,OACR24E,EAASA,EAAS9kF,OAAS,GAAGklF,cAAe,GAGjDJ,EAASA,EAAS9kF,OAAS,GAAGmlF,SAI9BL,EAASA,EAAS9kF,OAAS,GAAG2E,OAASwN,EAAIA,IAAIgY,WAAayvC,EAE5DorB,EAAW7yE,EAAIjS,MAAQ8kF,EAAW7yE,EAAIjS,MAAQ8kF,EAC9CD,EAAe5yE,EAAIhU,KAmBvB,IAAIknF,EAAe,EAEnB,IAAK,IAAIziF,EAAI,EAAGA,EAAIkiF,EAAS9kF,OAAQ4C,IAAK,CACtC,IAAI0iF,GAAqB,EACzB,MAAMC,EAAa3iF,EACnB,IAAI4iF,EAAW5iF,EACf,KAAO4iF,EAAW,EAAIV,EAAS9kF,SAAWslF,GAElClpF,KAAKqpF,eAAeX,EAASU,GAAWV,EAASU,EAAW,IAE5DA,IAGAF,GAAqB,EAI7B,MAAMI,EAAgBp5E,GAAUw4E,EAASS,EAAaj5E,GAChDq5E,EAAiBC,GAAYA,EAAQn4E,IAAIi4E,GACzCG,EAAiB,CAACC,EAAQC,KAC5B,MAAOnnF,EAAGC,GAAK8mF,EAAc,CAACG,EAAQC,IAASt4E,KAAKu4E,GAASA,EAAK7nF,OAClE,OAAOS,EAAIC,GAETonF,EAAe,IAAIC,IAAeA,EAAWz4E,IAAIk4E,GAAeQ,OAAM,EAAEC,EAAOC,MAAYjqF,KAAKqpF,eAAeW,EAAOC,KAEtHC,EAAcd,EAAWD,EAAa,EAE5C,IA+BIgB,EACAnB,EAhCAoB,EAAUpqF,KAAKqpF,eAAeX,EAASS,GAAaT,EAASU,IAAa,IAAM,IACpF,OAAQc,GACJ,KAAK,EACe,MAAZE,GAA4C,KAAzBX,EAAe,EAAG,IAAuC,KAAzBA,EAAe,EAAG,KACrEW,EAAU,oBAEd,MACJ,KAAK,EACGP,EAAa,CAAC,EAAG,GAAI,CAAC,EAAG,MACzBO,EAAU,yBAEd,MACJ,KAAK,EACe,MAAZA,GAAmBP,EAAa,CAAC,EAAG,MACpCO,EAAU,wBACNP,EAAa,CAAC,EAAG,GAAI,CAAC,EAAG,MACzBO,EAAU,+BAGlB,MACJ,KAAK,EACGP,EAAa,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MACjCO,EAAU,wBAEVP,EAAa,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MACzCO,EAAU,6BAUtB,GAAIF,GAAe,EAAG,CAElB,IAAIG,EAAgB,EAChBC,GAAoB,EACxB,MAA6B,IAAtBA,GAA4B,CAC/BA,GAAoB,EACpB,IAAK,IAAIvoF,EAAO,EAAGA,EAAOsoF,EAAgB3B,EAAS9kF,OAAQ7B,IACvD,GAAI/B,KAAKqpF,eAAeX,EAAS3mF,GAAO2mF,EAAS3mF,EAAOsoF,IAAiB,CACrEC,GAAoB,EACpBD,IACA,OAKZ,IAAKF,EAAc3jF,EAAG2jF,GAAef,EAAUe,IAC3CnB,GAAWmB,EAAc3jF,GAAK6jF,EAAiB,EAC/C3B,EAASyB,GAAanB,OAASA,EAC/BC,EAAeA,EAAeD,EAASC,EAAeD,OAM1D,IAAKmB,EAAc3jF,EAAG2jF,GAAef,EAAUe,IAC3CnB,EAAS18D,EAAOkD,uBAAuB06D,GAAaE,GAASD,EAAc3jF,GAC3EkiF,EAASyB,GAAanB,OAASA,EAC/BC,EAAeA,EAAeD,EAASC,EAAeD,EAK9DxiF,EAAI4iF,EAcR,MAAMmB,EAAe,GACfC,EAAiB,GACvB,IAAK,IAAIhkF,EAAI,EAAGA,GAAKyiF,EAAcziF,IAC/B+jF,EAAa/jF,GAAK,EAClBgkF,EAAehkF,GAAK,EAExB+jF,EAAa,GAAK3B,EAAWL,EAC7BiC,EAAe,GAAK5B,EAAWL,EAG/BG,EAAS9vD,SAAS72B,IACVA,EAAKwG,MAAQgiF,EAAaxoF,EAAKinF,UAC/BuB,EAAaxoF,EAAKinF,QAAUjnF,EAAKwG,UAEzC,IAAK,IAAI/B,EAAI,EAAGA,EAAI+jF,EAAa3mF,OAAQ4C,IAErCgkF,EAAehkF,GAAK+jF,EAAa/jF,GAAKgkF,EAAehkF,EAAI,GAE7D,MAAMkoE,EAAa8b,EAAeA,EAAe5mF,OAAS,GAE1D,IAAI6mF,EAAW,EACf/B,EAAS9vD,SAAS72B,IACd,IAAIoR,EAAY,EAChB,MAAMu3E,EAAgBD,EAAW1oF,EAAKgnF,OAEtC,KAAe0B,EAAWC,EAAeD,IAAY,CACjD,MAAMr1D,EAASo1D,EAAezoF,EAAKinF,OAAS,GAAK71E,EACjD4pD,EAAQ0tB,GAAU10E,IAAIgf,UAAUK,GAGhCjiB,GAAa4pD,EAAQ0tB,GAAU10E,IAAIgY,WAAayvC,EAChD,GAAE,0BAA2Bz7D,EAAKA,KAAM0oF,EAAUr1D,OAI1D2M,EAAMC,YAAc0sC,EAAa8Z,EAGrCjlF,sBAAsBymF,EAAOC,GACzB,IAAIU,EAAYV,EAAMloF,KAAOioF,EAAMjoF,KAC/B6oF,EAAoB,EAEpBD,EAAY,GAEZC,EAAoBX,EAAMpB,UAAYoB,EAAMnB,aAAe,IAAM,EAC7DkB,EAAMlB,eACN6B,GAAa,MAIjBC,EAAoBZ,EAAMnB,UAAYmB,EAAMlB,aAAe,IAAM,EAC7DmB,EAAMnB,eACN6B,GAAa,KAErB,MAAME,EAAY7nF,KAAK8C,IAAI6kF,GAAaC,EAExC,OADA,GAAE,8BAA+BZ,EAAMjoF,KAAMkoF,EAAMloF,KAAM8oF,GAClDA,EAOXtnF,wBAAwB6nC,EAAQyyB,GAC5B,MAAMitB,EAAgB,GAChBC,EAAc,GAEpB3/C,EAAOxS,SAASkC,IACZ,MAAMkwD,EAAe,IAAI9nF,EAAS,EAAG,GACpB43B,EAAMgwB,eACdlyB,SAASl1B,IACd,GAAIA,EAAE02B,oBACF,OACJ,MAAM6wD,EAAkBF,EAAYC,EAAahnF,SAC5CinF,EAKDA,EAAgB58D,KAAK3qB,IAJrBonF,EAAcz8D,KAAK28D,EAAahnF,SAChC+mF,EAAYC,EAAahnF,SAAW,CAACN,IAKzCsnF,EAAa3mF,IAAIX,EAAEy2B,kBAG3B,MAAM+wD,EAAQ,IAAI1J,GAEb3jB,IACDA,EAAe,KAEnB,MAAMstB,EAAcD,EAAMvD,eAAe9pB,GACnCmqB,EAAW,GACjB8C,EAAclyD,SAASwyD,IACnB,MAAMhhC,EAAY2gC,EAAYK,GAGxBC,EAAkB,GAClBC,EAAe5nF,IAEjB,IAAK0lC,EAAY1lC,IAAMA,EAAEy8B,UAAYz8B,EAAE02B,oBACnC,OAGJ,MAAMmxD,EAAY7nF,EAClB6nF,EAAUn6E,KAAKwnB,SAAQ,CAAC0tD,EAAWkF,KAC/B,MAAMrrF,EAAM+qF,EAAM/E,aAAaG,EAAU7/E,MAAM,KAAK,IAC9CgT,EAAS6sE,EAAU7/E,MAAM,KAAK,GAE9BglF,EAAmBtrF,EAAI8X,YAAc,IACrCyzE,EAAQvrF,EAAIX,KAAOisF,EAGpBzD,EAAS7nF,EAAIX,KAAOia,KACrBuuE,EAAS7nF,EAAIX,KAAOia,GAAU0xE,EAAYhrF,EAAIX,OAClD,MAAMmsF,EAAiB3D,EAAS7nF,EAAIX,KAAOia,KAAYiyE,EAGjDE,EAAqBP,EAAgB/vD,QAAQgrD,IAAc,EAUjE,GARAiF,EAAUrvD,eAAetD,SAAQ,CAACgJ,EAAU1xB,KACpC4sB,EAAW8E,EAAU05B,KACrB15B,EAAS7xB,MAAQ07E,GACjB7pD,EAASrK,YAAci0D,GACvBD,EAAUrvD,eAAeX,OAAOrrB,EAAO,OAI1Cy7E,GAAmBA,GAAkBC,EAAqB,CAG3D5D,EAAS7nF,EAAIX,KAAOia,GAAUiyE,EAE9B,MAAMzzE,EAAa,IAAIqjD,GAAWmwB,GAElCF,EAAUvvD,YAAYwvD,EAAUvzE,GAEhCozE,EAAgBh9D,KAAKi4D,OAI7BiF,EAAUrvD,eAAetD,SAASgJ,IF9XT9E,EE+XA8E,EF/XgB25B,KEgYjC35B,EAASy/C,gBAAgBzoD,QAAQ0yD,OAI7ClhC,EAAUxxB,QAAQ0yD,MAG1Bl4D,QACI,MAAMy4D,EAAY7rF,KAAKq+B,eAAeqe,WACtC18C,KAAKytB,MAAQ,IAAIG,EAAM5tB,KAAKiY,WAAW7W,KAAMyqF,GAC7C7rF,KAAKytB,MAAM0H,WAAW,GAClBn1B,KAAKqoF,aACLroF,KAAK8rF,UAAY,IAAIl+D,EAAMtB,EAAOsjC,gBAAgB,KAAKxuD,KAAMyqF,GAC7D7rF,KAAK+rF,WAAa,IAAIn+D,EAAMtB,EAAOsjC,gBAAgB,KAAKxuD,KAAMyqF,GAC9D7rF,KAAK8rF,UAAU32D,WAAW,GAC1Bn1B,KAAK+rF,WAAW52D,WAAW,IAInCpH,WACI,GAAI/tB,KAAKqoF,WAAY,CACjB,MAAMyD,EAAYrqF,EAAQzB,KAAK8rF,WACzBC,EAAatqF,EAAQzB,KAAK+rF,YAC1BC,EAAaF,EAAUl9E,aAAarG,MACtCwjF,EAAWn9E,aAAarG,MACxBvI,KAAKq+B,eAAe8pD,iBACpBnoF,KAAKq+B,eAAe+pD,kBACxB,OAAOpoF,KAAKytB,MAAM7e,aAAarG,MAAQyjF,EAGvC,OAAOhsF,KAAKytB,MAAM7e,aAAarG,MAIvC+uB,QAAQF,GAQJ,OAPA31B,EAAQ21B,EAAM,gBAAiB,mBAAmBA,KAClDp3B,KAAKo3B,KAAOA,EAERwa,EAAYxa,KACZp3B,KAAKq+B,eAAeqe,WAAa,GACjC18C,KAAKozB,SAEFpzB,KAGXisF,kBAII,OAHAjsF,KAAKqoF,YAAa,EAClBroF,KAAKq+B,eAAeqe,WAAa,GACjC18C,KAAKozB,QACEpzB,KAGXyT,OACI,MAAM,KAAE1D,EAAI,SAAEqhB,EAAQ,MAAElhB,EAAK,WAAEm4E,EAAU,QAAEl2D,EAAO,QAAEC,EAAO,MAAE3E,EAAO4Q,gBAAgB,iBAAE8pD,EAAgB,kBAAEC,IAAyBpoF,KAC3H0zB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cAEL,MAAM84B,EAAQxV,EAAK0K,mBAAmB1Q,EAAUlhB,GAChD,IAAIg8E,EAAOt/C,EAAMlrC,EAAIywB,EACrB,MAAMg6D,EAAOv/C,EAAMjmC,EAAIyrB,EAEvB,GADA,GAAE,cAAeriB,EAAMm8E,EAAMC,GACxB9D,EAGA,CACD,MAAMyD,EAAYrqF,EAAQzB,KAAK8rF,WACzBC,EAAatqF,EAAQzB,KAAK+rF,YAEhCA,EAAWv2D,OAAO9B,EAAKw4D,EAAMC,GAC7BD,GAAQH,EAAWn9E,aAAarG,MAChC2jF,GAAQ9D,EACR8D,GAAQlsF,KAAKiY,WAAW4C,4BACxB4S,EAAM+H,OAAO9B,EAAKw4D,EAAMC,GACxBD,GAAQz+D,EAAM7e,aAAarG,MAC3B2jF,GAAQ/D,EACR2D,EAAUt2D,OAAO9B,EAAKw4D,EAAMC,QAb5B1+D,EAAM+H,OAAO9B,EAAKw4D,EAAMC,IAkBpC7wB,GAAW51B,OAAQ,EChdZ,MAAM0mD,WAAgB/uD,EACzBl8B,YAAY4O,EAAOgvD,GAAYM,QAC3B/9D,MAAM,CAAEgtB,SAAU,MAClBtuB,KAAKuO,QAAU,CACX6wD,OAAQ,IAEZ,MAAMD,EAAOJ,GACb/+D,KAAKuO,QAAQ6wD,OAAS,CAClB,CAACD,EAAKE,QAAS,EACf,CAACF,EAAKG,QAAS,GACf,CAACH,EAAKT,KAAM,GACZ,CAACS,EAAKI,cAAe,GACrB,CAACJ,EAAKK,YAAa,GACnB,CAACL,EAAKM,aAAc,GACpB,CAACN,EAAK3Z,MAAO,GAGjBxlD,KAAK25B,cAAe,EACpB35B,KAAKu8D,QAAQxsD,GAENzM,sBACP,MAAO,UAGXi9D,UACI,OAAOvgE,KAAK+P,KAGhBwsD,QAAQxsD,GAIJ,OAHA/P,KAAK+P,KAAuB,iBAATA,EAAoB+uD,GAAQkB,WAAWjwD,GAAQA,EAElE/P,KAAKk3B,SAASl3B,KAAKuO,QAAQ6wD,OAAOp/D,KAAK+P,OAChC/P,KAIX67B,qBAAqBC,GAEjB,OAAO97B,KAGXq8B,YAEI,OADAr8B,KAAKs8B,cAAe,EACbt8B,KAGXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,gBA1DzB,YAAc1R,GACNsqF,GAAQ1mD,OACR9jC,EAAI,mBAAoBE,GAyDxB,CAAE,0BAA2B9B,KAAK68B,gBAC9B78B,KAAKsM,OACLtM,KAAKwS,WAAWkhB,GACpB,MAAM24D,EAAU,IAAIvtB,GAAQ9+D,KAAK+P,MACjCs8E,EAAQllF,KAAKnH,KAAK68B,gBAClBwvD,EAAQ54E,KAAKzT,KAAK21B,cACd31B,KAAKsM,OACLtM,KAAKqT,aAAaqgB,GACtB1zB,KAAK8T,eAIbs4E,GAAQ1mD,OAAQ,ECtET,MAAM4mD,WAAiBjvD,EAC1Bl8B,YAAY4O,EAAM3D,EAAMmuC,GACpBj5C,MAAM,CAAEgtB,SAAU,MAClBtuB,KAAK+P,KAAOA,EACZ/P,KAAKusF,SAAW,IAAInwB,GAAKrsD,EAAM3D,EAAMmuC,GACrCv6C,KAAKwsB,KAAOxsB,KAAKusF,SAAS//D,KAC1BxsB,KAAKytB,MAAQ,IAAIG,EAAM5tB,KAAKwsB,KAAKprB,KAAMpB,KAAKwsB,KAAKsF,OACjD9xB,KAAKk3B,SAASl3B,KAAKytB,MAAM7e,aAAarG,OAEtCvI,KAAK25B,cAAe,EAEbr2B,sBACP,MAAO,WAGXi5D,QAAQxsD,EAAM3D,EAAMmuC,GAMhB,OALAv6C,KAAK+P,KAAOA,EACZ/P,KAAKusF,SAAW,IAAInwB,GAAKrsD,EAAM3D,EAAMmuC,GACrCv6C,KAAKwsB,KAAOxsB,KAAKusF,SAAS//D,KAC1BxsB,KAAKytB,MAAQ,IAAIG,EAAM5tB,KAAKwsB,KAAKprB,KAAMpB,KAAKwsB,KAAKsF,OACjD9xB,KAAKk3B,SAASl3B,KAAKytB,MAAM7e,aAAarG,OAC/BvI,KAGX4+D,UACI,OAAO5+D,KAAKwsB,KAGhBrY,WAAW1B,GAGP,OAFAnR,MAAM6S,WAAW1B,GACjBzS,KAAKytB,MAAMtZ,WAAWnU,KAAKkU,cACpBlU,KAGXiU,iBACI,OAAO3S,MAAM2S,iBAIjB4nB,qBAAqBC,GAEjB,OAAO97B,KAEXq8B,YAEI,OADAr8B,KAAKs8B,cAAe,EACbt8B,KAGXyT,OACI,IAAI5H,EACJ,MAAMipB,EAAQ90B,KAAK21B,aACd31B,KAAKytB,MAAMvZ,cACZlU,KAAKytB,MAAMtZ,WAAWnU,KAAKkU,cAE/BlU,KAAK8T,cACL,MAAM04E,EAAQxsF,KAAK68B,eAKnB,GAJA78B,KAAKytB,MAAMoH,SAASC,GACpB90B,KAAKytB,MAAMuH,UAAUF,EAAMwL,YAAsC,QAAzBz0B,EAAK7L,KAAKwsB,KAAKzqB,YAAyB,IAAP8J,EAAgBA,EAAK,GAAKipB,EAAMe,iBACzG71B,KAAKytB,MAAMmI,cAAc42D,QAEQ7qF,IAA7B3B,KAAKusF,SAAShyC,WAA0B,CACxC,MAAMkiB,EAAa,IAAI7uC,EAAM5tB,KAAKusF,SAAShyC,WAAWn5C,KAAMpB,KAAKusF,SAAShyC,WAAWzoB,OAChF2qC,EAAWvoD,cACZuoD,EAAWtoD,WAAWnU,KAAKkU,cAE/BuoD,EAAW5nC,SAASC,GACpB2nC,EAAWznC,UAAUF,EAAMwL,YAAYtgC,KAAKusF,SAAShyC,WAAWx4C,MAAQ+yB,EAAMe,iBAC9E4mC,EAAW1nC,UAAU/0B,KAAKusF,SAAShyC,WAAWpoB,SAC9CsqC,EAAW7mC,cAAc42D,KCvC9B,MAAMC,WAAkBpvD,EAE3Bl8B,YAAYm8B,GACRh8B,MAAMg8B,GACNt9B,KAAK2sB,QAAU,CAEX+/D,YAAa,EACbC,aAAc,EAEdv6D,QAAS,GAGbpyB,KAAK4sF,aAAc,EAEnB5sF,KAAK+B,KAAOu7B,EAAWv7B,MAAQ,EAE/B/B,KAAKwI,OAAS,GAGPlF,sBACP,MAAO,YAGXijC,QAAQxkC,GAEJ,OADA/B,KAAK+B,KAAOA,EACL/B,KAGX6sF,UAAUrkF,GAEN,OADAxI,KAAKwI,OAASA,EACPxI,KAIX8sF,eAAeC,GAEX,OADA/sF,KAAK4sF,YAAcG,EACZ/sF,KAGXq8B,YAEI,OADAr8B,KAAKs8B,cAAe,EACbt8B,KAGXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACXshB,EAAQ90B,KAAK21B,aACnB31B,KAAK8T,cACL,MAAMk5E,EAAehtF,KAAKu4B,iBACpB00D,EAAexgC,GAAY+D,eAAew8B,GAC1CE,EAAUltF,KAAK68B,eACf6pC,EAAQumB,EAAeA,EAAalmF,OAAS+tB,EAAM/tB,OAAS+tB,EAAM/G,WAClEpnB,EAAImuB,EAAMwL,YAAYtgC,KAAK+B,MAAQ,GAAK,GA5EtD,YAAcD,GACN2qF,GAAU/mD,OACV9jC,EAAI,qBAAsBE,GA2E1B,CAAE,WAAY9B,KAAK4sF,YAAc,eAAiB,aAAc5sF,KAAKwI,OAAQ,IAAK0kF,EAAUxmB,GAxEpG,SAAuBhzC,EAAKhH,GACxB,MAAMwgE,EAAUxgE,EAAOwgE,QACjBxmB,EAAQh6C,EAAOg6C,MACf//D,EAAI+lB,EAAO/lB,EACXwmF,EAAczgE,EAAOlkB,OAAS,EACpCkrB,EAAIQ,YACAxH,EAAO0gE,SACP15D,EAAIS,OAAO+4D,EAASvmF,EAAIwmF,GACxBz5D,EAAIU,OAAOsyC,EAAO//D,GAClB+sB,EAAIU,OAAO84D,EAASvmF,EAAIwmF,KAGxBz5D,EAAIS,OAAOuyC,EAAO//D,EAAIwmF,GACtBz5D,EAAIU,OAAO84D,EAASvmF,GACpB+sB,EAAIU,OAAOsyC,EAAO//D,EAAIwmF,IAE1Bz5D,EAAI1G,SACJ0G,EAAI6L,YAwDA8tD,CAAc35D,EAAK,CACfw5D,QAASA,EAAUltF,KAAK2sB,QAAQ+/D,YAChChmB,MAAOA,EAAQ1mE,KAAK2sB,QAAQggE,aAC5BhmF,EAAGA,EAAI3G,KAAK2sB,QAAQyF,QACpB5pB,OAAQxI,KAAKwI,OACb4kF,QAASptF,KAAK4sF,eCzFnB,IAAIU,GD6FXb,GAAU/mD,OAAQ,EC5FlB,SAAW4nD,GACPA,EAAcA,EAAyB,UAAI,GAAK,YAChDA,EAAcA,EAAwB,SAAI,GAAK,WAFnD,CAGGA,KAAkBA,GAAgB,KAC9B,MAAMC,WAAc17E,EAOvB1Q,YAAYqsF,EAAMC,EAAI9gE,GAClBrrB,QACAtB,KAAKq+B,eAAiBh+B,OAAOwU,OAAO,CAAEqqD,UAAW,EAAG/sC,QAAS,EAAGC,QAAS,GAAIhB,SAAUk8D,GAAcI,UAAWC,aAAcL,GAAcI,UAAWE,QAAQ,EAAOC,IAAK,CACnK,CAAEnsF,EAAG,EAAGiF,EAAG,IACX,CAAEjF,EAAG,EAAGiF,EAAG,MACVgmB,GACT3sB,KAAKwtF,KAAOA,EACZxtF,KAAKytF,GAAKA,EAEHnqF,sBACP,MAAO,QAEA+yB,sBACP,OAAOi3D,GAEA92D,4BACP,MAAO,CACHs3D,SAAUR,GAAcI,UACxBK,QAAST,GAAcU,UAG/BvO,SAAS+N,EAAMC,GACX,IAAKD,IAASC,EACV,MAAM,IAAIxsF,EAAa,eAAgB,kDAI3C,OAFAjB,KAAKwtF,KAAOA,EACZxtF,KAAKytF,GAAKA,EACHztF,KAKXigF,YACI,OAAQjgF,KAAKwtF,OAASxtF,KAAKytF,GAE/BQ,YAAYvhE,GACR,MAAMgH,EAAM1zB,KAAKwT,eACX2e,EAAUnyB,KAAKq+B,eAAelM,QAC9BC,EAAUpyB,KAAKq+B,eAAejM,QAAU1F,EAAOyX,UAC/C+pD,EAAUxhE,EAAOwhE,QAAU/7D,EAC3Bg8D,EAAUzhE,EAAOyhE,QAAU/7D,EAC3Bg8D,EAAS1hE,EAAO0hE,OAASj8D,EACzBk8D,EAAS3hE,EAAO2hE,OAASj8D,EACzB8sC,EAAYl/D,KAAKq+B,eAAe6gC,UAChC2uB,EAAM7tF,KAAKq+B,eAAewvD,KACxBnsF,EAAG4sF,EAAM3nF,EAAG4nF,GAASV,EAAI,IACzBnsF,EAAG4wD,EAAM3rD,EAAG4rD,GAASs7B,EAAI,GAC3BW,GAAcJ,EAASF,IAAYL,EAAIjqF,OAAS,GACtD8vB,EAAIQ,YACJR,EAAIS,OAAO+5D,EAASC,GACpBz6D,EAAIY,cAAc45D,EAAUM,EAAaF,EAAMH,EAAUI,EAAO7hE,EAAOyX,UAAWiqD,EAASI,EAAal8B,EAAM+7B,EAAS97B,EAAO7lC,EAAOyX,UAAWiqD,EAAQC,GACxJ36D,EAAIY,cAAc85D,EAASI,EAAal8B,EAAM+7B,GAAU97B,EAAO2M,GAAaxyC,EAAOyX,UAAW+pD,EAAUM,EAAaF,EAAMH,GAAWI,EAAOrvB,GAAaxyC,EAAOyX,UAAW+pD,EAASC,GACrLz6D,EAAI1G,SACJ0G,EAAI6L,YACJ7L,EAAIa,OAER9gB,OACIzT,KAAKwT,eACLxT,KAAK8T,cACL,MAAM8iE,EAAa52E,KAAKwtF,KAClBj5C,EAAYv0C,KAAKytF,GACvB,IAAIS,EACAE,EACAD,EACAE,EACA7qD,EAAiB,EACjBoe,EAAS,QACT6sC,EAAa,QACjB,SAAS32D,EAAY1G,GACjB,MAA2B,iBAAbA,EAAwBm8D,GAAM/2D,eAAepF,GAAYA,EAE3E,MAAMA,EAAW0G,EAAY93B,KAAKq+B,eAAejN,UAC3Cu8D,EAAe71D,EAAY93B,KAAKq+B,eAAesvD,cAWrD,GAVIv8D,IAAak8D,GAAcU,WAC3BpsC,EAAS,OACT6sC,EAAa,QAEbd,IAAiBL,GAAcI,UAC/Be,EAAa,QAERd,IAAiBL,GAAcU,WACpCS,EAAa,QAEb7X,EACAsX,EAAUtX,EAAWp0C,eACrBgB,EAAiBozC,EAAWt0C,mBAC5B6rD,EAAUvX,EAAWr0C,iBAAiBqf,OAErC,CAEDssC,EADc35C,EAAU5e,aACRsyC,eAChBkmB,EAAU55C,EAAUhS,iBAAiBqf,GAEzC,GAAIrN,EACA65C,EAAS75C,EAAU7R,cACnBc,EAAiB+Q,EAAUjS,mBAC3B+rD,EAAS95C,EAAUhS,iBAAiBksD,OAEnC,CAEDL,EADcxX,EAAWjhD,aACVuyC,aACfmmB,EAASzX,EAAWr0C,iBAAiBksD,GASzC,OAPAzuF,KAAKiuF,YAAY,CACbC,QAAAA,EACAE,OAAAA,EACAD,QAAAA,EACAE,OAAAA,EACAlqD,UAAWX,IAAiD,IAA/BxjC,KAAKq+B,eAAeuvD,QAAmB,EAAI,MAErE,GC1Hf,SAAS,MAAK9rF,GACN4sF,GAAOhpD,OACP9jC,EAAI,kBAAmBE,GAQ/B,SAAS6sF,GAAel+D,GACpB,GAAI,kBAAmBA,EACnB,OAAOA,EAAEm+D,cACb,GAAI,YAAan+D,EACb,OAAOk+D,GAAel+D,EAAEo+D,SAC5B,MAAMA,EAAUp+D,EAChB,OAAuB,IAAnBo+D,EAAQjrF,OACD+qF,GAAeE,EAAQ,IACX,IAAnBA,EAAQjrF,OACD,KACJirF,EAAQx9E,IAAIs9E,IAKhB,MAAMD,GAGTvtF,YAAY2tF,GACR9uF,KAAK8uF,QAAUA,EACf9uF,KAAK+B,KAAO,GACZ/B,KAAKuoD,IAAM,EACXvoD,KAAK+uF,UA5BQ,EAiCjBzoF,MAAMvE,GACF/B,KAAK+B,KAAOA,EACZ/B,KAAKuoD,IAAM,EACXvoD,KAAK+uF,UApCQ,EAqCb,MAAM7jF,EAASlL,KAAKgvF,OAAOhvF,KAAK8uF,QAAQhuB,SAExC,OADA51D,EAAO6jF,SAAW/uF,KAAK+uF,SAChB7jF,EAEX+jF,UAAUC,IAzCO,IA0CTlvF,KAAK+uF,WACL/uF,KAAK+uF,SAAW/uF,KAAKuoD,KACzBvoD,KAAKuoD,IAAM2mC,EAEfC,eACInvF,KAAK+uF,UA/CQ,EAmDjBK,WAAWC,EAAOC,GAAU,GACxB,MAAMC,EAASD,EAAU,IAAIE,OAAO,MAAQH,EAAQ,MAAQ,IAAIG,OAAO,MAAQH,EAAQ,UAEjFnkF,EADclL,KAAK+B,KAAKE,MAAMjC,KAAKuoD,KACd+B,MAAMilC,GACjC,OAAe,OAAXrkF,EACO,CACHukF,SAAS,EACTb,cAAe1jF,EAAO,GACtBwkF,aAAcxkF,EAAO,GAAGtH,OACxB2kD,IAAKvoD,KAAKuoD,KAIP,CAAEknC,SAAS,EAAOlnC,IAAKvoD,KAAKuoD,KAO3ConC,UAAUC,EAAMC,GAAQ,GACpB,MAAMhB,EAAU,GACVtmC,EAAMvoD,KAAKuoD,IACjB,IAAIunC,GAAa,EACbC,GAAW,EAGf,GAFAF,GAAkB,IAAVA,IAAiC,IAAfD,EAAKC,MAE3BD,EAAKZ,OACL,IAAK,MAAMhkF,KAAQ4kF,EAAKZ,OAAQ,CAC5B,MAAMgB,EAAWhwF,KAAKuoD,IAChBr9C,EAASlL,KAAKgvF,OAAOhkF,GAG3B,GAAIE,EAAOukF,SAGP,GAFAZ,EAAQxgE,KAAKnjB,GACb6kF,GAAW,EACPH,EAAKK,GACL,WAIJ,GADAH,GAAa,GACRF,EAAKK,GAAI,CACVjwF,KAAKuoD,IAAMynC,EACX,OAKhB,MAAME,EAAUN,EAAKK,IAAMF,GAAaD,EAClCL,EAAUS,IAAoB,IAAVL,EACpBM,EAAaD,EAAS,EAAI,EAShC,OARIL,IAAUK,IACVlwF,KAAKuoD,IAAMA,GACXknC,EACAzvF,KAAKmvF,eAGLnvF,KAAKivF,UAAU1mC,GAEZ,CAAEknC,QAAAA,EAASZ,QAAAA,EAASsB,WAAAA,GAI/BC,gBAAgBR,EAAMC,GAAQ,GAC1B,MAAMhB,EAAU,GACVtmC,EAAMvoD,KAAKuoD,IACjB,IAAI4nC,EAAa,EACbE,GAAO,EACX,EAAG,CACC,MAAMnlF,EAASlL,KAAK2vF,UAAUC,GAC1B1kF,EAAOukF,SAAWvkF,EAAO2jF,SACzBsB,IACAtB,EAAQxgE,KAAKnjB,EAAO2jF,UAGpBwB,GAAO,QAENA,GACT,MAAMZ,EAAUU,EAAa,IAAe,IAAVN,EASlC,OARIA,GAAWM,EAAa,IACxBnwF,KAAKuoD,IAAMA,GACXknC,EACAzvF,KAAKmvF,eAGLnvF,KAAKivF,UAAU1mC,GAEZ,CAAEknC,QAAAA,EAASZ,QAAAA,EAASsB,WAAAA,GAG/BG,iBAAiBV,GACb,OAAO5vF,KAAKowF,gBAAgBR,GAAM,GAKtCZ,OAAOuB,GAEH,GADA,GAAE,4BAA6BA,IAC1BA,EACD,MAAM,IAAItvF,EAAa,yBAE3B,IAAIiK,EAOJ,MAAM0kF,EAAOW,EAASC,KAAKxwF,KAAK8uF,QAAnByB,GACb,GAAIX,EAAKP,MAILnkF,EAASlL,KAAKovF,WAAWQ,EAAKP,OAAwB,IAAjBO,EAAKN,SACtCpkF,EAAOukF,UAGPzvF,KAAKuoD,KAAOr9C,EAAOwkF,kBAGtB,KAAIE,EAAKZ,OAcV,MADA,GAAEY,GACI,IAAI3uF,EAAa,gDAAkD2uF,GAXrE1kF,EADA0kF,EAAKa,UACIzwF,KAAKowF,gBAAgBR,GAEzBA,EAAKc,WACD1wF,KAAKswF,iBAAiBV,GAGtB5vF,KAAK2vF,UAAUC,GAUhC,MAAMe,EAAU,GAQhB,OAPAzlF,EAAOylF,QAAUA,EACbzlF,EAAO2jF,SACP3jF,EAAO2jF,QAAQj2D,SAASnI,GAAMkgE,EAAQtiE,KAAKsgE,GAAel+D,MAE1Dm/D,EAAKgB,KAAO1lF,EAAOukF,SACnBG,EAAKgB,IAAI,CAAED,QAAAA,IAERzlF,GCrMf,SAAS,MAAKpJ,GACN+uF,GAAUnrD,OACV9jC,EAAI,qBAAsBE,GDsMlC4sF,GAAOhpD,OAAQ,ECpMR,MAAMorD,GACT3vF,YAAY87C,GACRj9C,KAAKi9C,QAAUA,EAEnB6jB,QACI,OAAO9gE,KAAK6yB,KAEhBA,OACI,MAAO,CACHm8D,OAAQ,CAAChvF,KAAK+wF,MAAO/wF,KAAKgxF,OAAQhxF,KAAKixF,MAG/CF,QACI,MAAO,CACH/B,OAAQ,CAAChvF,KAAKkxF,YAAalxF,KAAKmxF,QAChCP,IAAK,IAAM5wF,KAAKi9C,QAAQm0C,eAGhCJ,SACI,MAAO,CACHhC,OAAQ,CAAChvF,KAAKqxF,MAAOrxF,KAAK+wF,OAC1BL,YAAY,GAGpBS,SACI,MAAO,CACHnC,OAAQ,CAAChvF,KAAKsxF,SAAUtxF,KAAKm/D,KAAMn/D,KAAKuxF,KAAMvxF,KAAKwxF,OAG3DN,cACI,MAAO,CACHlC,OAAQ,CAAChvF,KAAKyxF,MAAOzxF,KAAK0xF,YAC1BzB,IAAI,GAGZwB,QACI,MAAO,CACHzC,OAAQ,CAAChvF,KAAK2xF,OAAQ3xF,KAAK4xF,MAAO5xF,KAAK6xF,QAEvCjB,IAAM7uD,GAAU/hC,KAAKi9C,QAAQ60C,SAAS/vD,EAAM4uD,QAAQ,KAG5DiB,QACI,MAAO,CACH5C,OAAQ,CAAChvF,KAAK+xF,MACdtB,WAAW,GAGnBsB,OACI,MAAO,CACH/C,OAAQ,CAAChvF,KAAKgyF,SAAUhyF,KAAKiyF,WAAYjyF,KAAKkyF,SAGtDR,aACI,MAAO,CACH1C,OAAQ,CAAChvF,KAAKgyF,SAAUhyF,KAAKiyF,WAAYjyF,KAAKkyF,QAC9CtB,IAAM7uD,IAEF,MAAM57B,EAAI47B,EACV/hC,KAAKi9C,QAAQk1C,cAAchsF,EAAEwqF,QAAQ,GAAIxqF,EAAEwqF,QAAQ,GAAIxqF,EAAEwqF,QAAQ,MAI7EsB,aACI,MAAO,CACHjD,OAAQ,CAAChvF,KAAKoyF,WAAYpyF,KAAKqyF,aAC/BxC,OAAO,EACPI,IAAI,GAGZsB,OACI,MAAO,CACHvC,OAAQ,CAAChvF,KAAKsyF,KACd5B,YAAY,EAEZE,IAAM7uD,GAAU/hC,KAAKi9C,QAAQs1C,YAAYxwD,EAAM4uD,UAGvDxxB,OACI,MAAO,CACH6vB,OAAQ,CAAChvF,KAAKwyF,MAAOxyF,KAAKyyF,WAAYzyF,KAAK0yF,OAC3C7C,OAAO,EAEPe,IAAM7uD,GAAU/hC,KAAKi9C,QAAQ01C,YAAY5wD,EAAM4uD,QAAQ,KAG/DW,WACI,MAAO,CACHtC,OAAQ,CAAChvF,KAAKwyF,MAAOxyF,KAAK4yF,WAC1B/C,OAAO,EAEPe,IAAM7uD,GAAU/hC,KAAKi9C,QAAQ41C,gBAAgB9wD,EAAM4uD,QAAQ,KAGnEa,OACI,MAAO,CACHxC,OAAQ,CAAChvF,KAAK8yF,SAAU9yF,KAAK+yF,OAAQ/yF,KAAKgzF,QAAShzF,KAAKizF,UACxDpD,OAAO,GAGfmD,UACI,MAAO,CACHhE,OAAQ,CAAChvF,KAAKqxF,MAAOrxF,KAAK+yF,QAC1BrC,YAAY,GAGpBqC,SAEI,MAAO,CACH/D,OAAQ,CAAChvF,KAAKkzF,IAAKlzF,KAAKmzF,OAAQnzF,KAAKozF,KAErCxC,IAAM7uD,GAAU/hC,KAAKi9C,QAAQo2C,cAActxD,EAAM4uD,QAAQ,GAAY5uD,EAAM4uD,QAAQ,GAJ1D1uF,MAAM,GAAI,KAO3CmxF,MACI,MAAO,CACHpE,OAAQ,CAAChvF,KAAKszF,KAAMtzF,KAAKuzF,MACzBtD,IAAI,GAGZiD,MACI,MAAO,CAAE7D,MAAO,wBAEpBkE,OACI,MAAO,CAAElE,MAAO,eAEpBiE,OACI,MAAO,CAAEjE,MAAO,eAEpB2C,WACI,MAAO,CAAE3C,MAAO,YAEpB6C,SACI,MAAO,CAAE7C,MAAO,UAEpBgD,cACI,MAAO,CAAEhD,MAAO,eAEpB+C,aACI,MAAO,CAAE/C,MAAO,+CAEpBuD,YACI,MAAO,CAAEvD,MAAO,aAEpBqD,QACI,MAAO,CAAErD,MAAO,gBAEpBsC,SACI,MAAO,CAAEtC,MAAO,OAEpBwC,SACI,MAAO,CAAExC,MAAO,OAEpBgC,QACI,MAAO,CAAEhC,MAAO,OAEpBiD,MACI,MAAO,CAAEjD,MAAO,OAEpBmD,QACI,MAAO,CAAEnD,MAAO,OAEpBoD,aACI,MAAO,CAAEpD,MAAO,QAEpB8D,SACI,MAAO,CAAE9D,MAAO,OAEpByD,WACI,MAAO,CAAEzD,MAAO,OAEpB4D,WACI,MAAO,CAAE5D,MAAO,OAEpB4B,MACI,MAAO,CAAE5B,MAAO,MAGjB,MAAMmE,GACTryF,YAAYmtB,GACRtuB,KAAKyzF,MAAQ,GACbzzF,KAAK4/B,KAAO,EACZ5/B,KAAK2sB,QAAU,GACf3sB,KAAKsuB,SAAWA,GAGjB,MAAMolE,GACTvyF,YAAY1B,GACRO,KAAK2zF,YAAc,GACnB3zF,KAAKP,QAAUA,EACfO,KAAKozB,QAETA,MAAMzG,GACF3sB,KAAK2sB,QAAUtsB,OAAOwU,OAAO,CAAEic,KAAM,OAAQtE,KAAM,UAAYG,GAC/D3sB,KAAK4zF,SAAW,CAAEzlE,MAAO,GAAIvT,YAAa,IAC1C5a,KAAK6zF,gBAAkB,IACvB7zF,KAAK8zF,aAETv2C,aACI,OAAOv9C,KAAKP,QAEhBs0F,cACI,OAAO/zF,KAAK4zF,SAEhBI,cAAcC,GACVj0F,KAAK2zF,YAAYtlE,KAAK4lE,GAE1BH,aACI,GAAE,cACF9zF,KAAKk0F,MAAQ,IAAIV,GAAMxzF,KAAK6zF,iBAEhCtB,YAAY3yD,GACR,GAAE,eAAgBA,GACdA,IACA5/B,KAAKk0F,MAAMt0D,KAAOA,EAAKh8B,QAE/BivF,gBAAgBvkE,GACZ,GAAE,mBAAoBA,GACtBtuB,KAAK6zF,gBAAkB7zF,KAAKk0F,MAAM5lE,SAAWA,GAAYtuB,KAAK6zF,gBAElElB,YAAY5iF,GACR,GAAE,eAAgBA,GACdA,IACA/P,KAAKk0F,MAAMnkF,KAAOA,GAE1BsjF,cAAclzF,EAAK6D,GACf,GAAE,sBAAuB7D,EAAK,SAAU6D,GACxChE,KAAKk0F,MAAMvnE,QAAQxsB,GAAO6D,EAE9BmwF,QAAQh0F,EAAKuvD,EAAOj2C,GAChB,GAAE,WAAYtZ,EAAKuvD,EAAOj2C,GAC1BzZ,KAAKk0F,MAAMT,MAAMplE,KAAK,CAClBluB,IAAKA,EACLuvD,MAAAA,EACAj2C,OAAAA,IAGR04E,cAAchyF,EAAKuvD,EAAOj2C,GACtB,GAAE,iBAAkBtZ,EAAKuvD,EAAOj2C,GAChCzZ,KAAKm0F,QAAQh0F,EAAKuvD,EAAOj2C,GAG7Bq4E,SAAS3jE,GACL,GAAE,cACsB,iBAAbA,EAAM,GACbnuB,KAAKmyF,cAAchkE,EAAM,IAGzBA,EAAMyK,SAASj2B,IACPA,GACA3C,KAAKm0F,WAAWxxF,MAG5B,GAAE,YAENyuF,cACI,GAAE,eACF,MAAM,QAAE3xF,GAAYO,KACpB,IAAKP,EACD,OACJ,MAAMktB,EAAUtsB,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAK2sB,SAAU3sB,KAAKk0F,MAAMvnE,SAGpEmE,EAAOrvB,EAAQkrB,EAAQmE,KAAM,eAAgB,+BAA+B3kB,cAE5EqgB,EAAO/qB,EAAQkrB,EAAQH,KAAM,eAAgB,+BAA+BrgB,eAC5E,MAAEsnF,EAAK,SAAEnlE,EAAQ,KAAEsR,EAAI,KAAE7vB,GAAS/P,KAAKk0F,MAIvCE,EAAsB5S,GAAM5mE,YAC5BxJ,EAAOqiF,EAAMpiF,KAAKgjF,IACpB,IAAIxoF,EACJ,OAAOwoF,EAAUl0F,KACZi0F,EAAoBxiF,SAAoC,QAA1B/F,EAAKwoF,EAAU3kC,aAA0B,IAAP7jD,EAAgBA,EAAK,IAAMwoF,EAAU3kC,MAAQ,IAC9G,IACA2kC,EAAU56E,UAEZ2wB,EAAqB,SAATtZ,EAEZsG,EAA2E,MAAnErnB,MAAAA,OAAmC,EAASA,EAAK5D,eACzD1M,EAAQ60F,UAAU,CAAEhmE,SAAAA,EAAUsR,KAAAA,IAC9BngC,EAAQ4pC,UAAU,CAAEj4B,KAAAA,EAAMkd,SAAAA,EAAUsR,KAAAA,EAAM7vB,KAAAA,EAAMyc,KAAAA,EAAM4d,UAAAA,IACvDA,GACDhT,EAAKiR,iBAA0B,OAATvX,EAAgBgS,EAAKe,GAAKf,EAAKgB,MAEzD,MAAMlpB,EAAc,GACpB64E,EAAM76D,SAAQ,CAACy7D,EAAWnkF,KACtB,MAAMw/C,EAAQ2kC,EAAU3kC,MACxB,GAAqB,iBAAVA,EAAoB,CAC3B,MAAMz3C,EAAaxY,EAAQ67D,WAAW,CAAEvrD,KAAM2/C,IAC9Ct4B,EAAK4E,YAAY9rB,EAAO+H,GACxB2C,EAAYyT,KAAKpW,QAGjB2C,EAAYyT,UAAK1sB,MAIzB,IAAK,IAAI6E,EAAI,EAAGA,EAAIo5B,EAAMp5B,IACtBotC,GAAI2gD,eAAe,CAACn9D,GAAO,CAAE0c,KAAK,IACtC9zC,KAAK2zF,YAAY/6D,SAASq7D,GAAeA,EAAWtnE,EAASyK,EAAMp3B,QACnEA,KAAK4zF,SAASzlE,MAAME,KAAK+I,GACzBp3B,KAAK4zF,SAASh5E,YAAYyT,KAAKzT,GAC/B5a,KAAK8zF,cAMb,SAASU,GAAM7nE,EAASyK,QACDz1B,IAAfgrB,EAAQ7c,IAEZsnB,EAAKvmB,aAAa,KAAM8b,EAAQ7c,IAGpC,MAAM2kF,GAAsB,UAI5B,SAASC,GAAS/nE,EAASyK,QACDz1B,IAAlBgrB,EAAQ3c,OAEZ2c,EAAQ3c,MAAMvJ,MAAMguF,IAAqB77D,SAASnnB,GAAc2lB,EAAKzjB,SAASlC,KAK3E,MAAMo/E,GACT1vF,YAAYwrB,EAAU,IAClB3sB,KAAK20F,SAAW,CACZnoE,KAAM,SACNq9B,KAAM,MACN/4B,KAAM,QAEV9wB,KAAKmzB,WAAWxG,GAUpBtpB,IAAIsxF,GAEA,OADA30F,KAAK20F,SAAWt0F,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAK20F,UAAWA,GACzD30F,KAMXmzB,WAAWxG,GACP,IAAI9gB,EAAIkF,EAER,MAAMtR,EAAUktB,EAAQltB,QAClBw9C,EAAqC,QAA1BpxC,EAAK8gB,EAAQswB,eAA4B,IAAPpxC,EAAgBA,EAAK,IAAI6nF,GAAQj0F,GAQpF,OAPAO,KAAK2sB,QAAUtsB,OAAOwU,OAAOxU,OAAOwU,OAAO,CAAE8+E,YAAa,CAACa,GAAOE,GAAUj4C,GAAam4C,cAAe7sC,GAAe6sC,eAAgBC,cAAc,GAASloE,GAAU,CAAEltB,QAAAA,EACtKw9C,QAAAA,IACJj9C,KAAKP,QAAUA,EACfO,KAAKi9C,QAAUA,EACfj9C,KAAK8uF,QAAU,IAAIgC,GAAiB9wF,KAAKi9C,SACzCj9C,KAAK80F,OAAS,IAAIpG,GAAO1uF,KAAK8uF,SACM,QAAnC/9E,EAAK/Q,KAAK2sB,QAAQgnE,mBAAgC,IAAP5iF,GAAyBA,EAAG6nB,SAASq7D,GAAej0F,KAAKg0F,cAAcC,KAC5Gj0F,KAEXmU,WAAW1B,GAEP,OADAzS,KAAKP,QAAQ0U,WAAW1B,GACjBzS,KAEXsG,MAAMvE,EAAM4qB,EAAU,IAClB3sB,KAAKi9C,QAAQ7pB,MAAMzG,GACnB,MAAMzhB,EAASlL,KAAK80F,OAAOxuF,MAAMvE,GACjC,IAAKmJ,EAAOukF,SAAWzvF,KAAK2sB,QAAQkoE,aAEhC,MADA,GAAE3pF,GACI,IAAIjK,EAAa,uBAAyBc,GAEpD,OAAOmJ,EAEXs2B,KAAKrT,EAAOxB,GAER,OADA3sB,KAAKP,QAAQmwE,KAAK,CAAEzhD,MAAAA,EAAOxB,QAAAA,IACpBwB,EAEX8M,OAAO9M,EAAOxB,GAEV,OADA3sB,KAAKP,QAAQy1E,OAAO,CAAE/mD,MAAAA,EAAOxB,QAAAA,IACtBwB,EAEXA,MAAMpsB,EAAM4qB,EAAU,IAGlB,OAFAA,EAAUtsB,OAAOwU,OAAO,CAAE2X,KAAMxsB,KAAK20F,SAASnoE,KAAMsE,KAAM9wB,KAAK20F,SAAS7jE,MAAQnE,GAChF3sB,KAAKsG,MAAMvE,EAAM4qB,GACV3sB,KAAKi9C,QAAQ82C,cAAc5lE,MAEtC2M,MAAM3M,EAAOxB,EAAU,IAEnB,OADAA,EAAUtsB,OAAOwU,OAAO,CAAEg1C,KAAM7pD,KAAK20F,SAAS9qC,MAAQl9B,GAC/C3sB,KAAKP,QAAQmqD,MAAMj9B,GAASu/B,aAAa/9B,GAEpD6lE,cAAcC,GACVj0F,KAAKi9C,QAAQ+2C,cAAcC,IAGnCpD,GAAUnrD,OAAQ,EC1ZlB,MAAMqvD,GAAY,uEACX,MAAMT,WAAkB9sD,EAChBlkC,sBACP,MAAO,YAEXnC,YAAY6zF,GACR,IAAKA,EACD,MAAM,IAAI/zF,EAAa,eAAgB8zF,IAE3C,IAAIz3D,EACJ,GAAyB,iBAAd03D,EAEP13D,EAAa,CAAEhP,SAAU0mE,OAExB,IAAyB,iBAAdA,EAIZ,MAAM,IAAI/zF,EAAa,eAAgB8zF,IAHvCz3D,EAAa03D,EAKjB1zF,MAAMg8B,GAENt9B,KAAKk3B,SAAS,GAKlBiJ,SACI,OAAO,EAEXtL,SAASC,GAEL,OADAxzB,MAAMuzB,SAASC,GACR90B,KAIX67B,qBAAqBC,GAEjB,OAAO97B,KAEXq8B,YAEI,OADAr8B,KAAKs8B,cAAe,EACbt8B,KAEXyT,OAEIzT,KAAK8T,cACL,IAAK,IAAItN,EAAI,EAAGA,EAAIxG,KAAKu5B,UAAU31B,SAAU4C,EAAG,CAC5C,MAAMo7B,EAAW5hC,KAAKu5B,UAAU/yB,GAC5Bo7B,aAAoBsY,KACpBtY,EAASztB,WAAWnU,KAAKkU,cACzB0tB,EAASruB,mBCvDlB,MAAM0hF,WAAkB53D,EAC3Bl8B,YAAYssB,EAAO6P,EAAY3Q,GAC3BrrB,MAAMg8B,GACNt9B,KAAK2sB,QAAUtsB,OAAOwU,OAAO,CAAEqgF,aAAa,EAAOnzF,KAAM,GAAK4qB,GAE9D3sB,KAAK25B,aAAe35B,KAAK2sB,QAAQuoE,YAC7BznE,GACAztB,KAAKm1F,SAAS1nE,GAGXnqB,sBACP,MAAO,YAEX6xF,SAAS1nE,GAGL,OAFAztB,KAAKytB,MAAQA,EACbztB,KAAKk3B,SAASl3B,KAAKytB,MAAM7e,aAAarG,OAC/BvI,KAEXiU,iBACI,OAAOjU,KAAKytB,MAAMxZ,iBAEtBooB,YAKI,OAJKr8B,KAAKs8B,cAAgBt8B,KAAK23B,iBAC3B33B,KAAK23B,gBAAgB0E,YAEzBr8B,KAAKs8B,cAAe,EACbt8B,KAEXywC,gBACI,MAAM/c,EAAM1zB,KAAKwT,eACjBkgB,EAAIgd,UAAU,aACd,IAAK,IAAIlqC,EAAI,EAAGA,EAAIxG,KAAKu5B,UAAU31B,OAAQ4C,IAAK,CAC5C,MAAMo7B,EAAW5hC,KAAKu5B,UAAU/yB,GAChCo7B,EAASztB,WAAWuf,GACpBkO,EAASruB,gBAEbmgB,EAAIkd,aAERn9B,OACI,MAAMqhB,EAAQ90B,KAAK21B,aACbjC,EAAMoB,EAAMthB,eAClBxT,KAAK8T,cACL4f,EAAIgd,UAAU,YAAa1wC,KAAK2Q,aAAa,OAE7C,MAAM8c,EAAQztB,KAAKytB,MACdA,EAAMvZ,cACPuZ,EAAMtZ,WAAWuf,GAErBjG,EAAMoH,SAASC,GACfrH,EAAMuH,UAAUF,EAAMwL,YAAYtgC,KAAK2sB,QAAQ5qB,MAAQ+yB,EAAMe,iBAC7D,MAAMn0B,EAAI1B,KAAKy6B,kBAAoBz6B,KAAK68B,eAAiB78B,KAAK+tB,WAAa,EAAI/tB,KAAK68B,eACpFpP,EAAMmI,cAAcl0B,GACpB1B,KAAKywC,gBACL/c,EAAIkd,cCnDL,MAAMwkD,WAAmB/3D,EAC5Bl8B,YAAY+sB,EAAS2uC,EAAeC,GAChCx7D,MAAM,CAAEgtB,SAAU,MAClBtuB,KAAK69D,aAAe,IAAIjB,GAAa1uC,EAAS2uC,EAAeC,GAE7D98D,KAAK25B,cAAe,EAEbr2B,sBACP,MAAO,aAIXu4B,qBAAqBC,GAEjB,OAAO97B,KAEXq8B,YAII,OAHAr8B,KAAKs8B,cAAe,EACpBt8B,KAAK69D,aAAahpC,SAAS70B,KAAK21B,cAChC31B,KAAKk3B,SAASl3B,KAAK69D,aAAa9vC,YACzB/tB,KAEXyT,OACI,MAAMigB,EAAM1zB,KAAK21B,aAAaniB,eAC9BxT,KAAK8T,cACL9T,KAAK69D,aAAa12D,KAAKnH,KAAK68B,gBAC5B78B,KAAK69D,aAAa1pD,WAAWuf,GAC7B1zB,KAAK69D,aAAapqD,QCnB1B,IAAI4hF,GAYG,MAAMC,WAAyBzjF,EAMlC1Q,YAAYo0F,EAAoB5oE,GAC5BrrB,QACAtB,KAAKw1F,GAAK,CAAEz+D,KAAM9uB,IAAK+uB,MAAO/uB,KAC9BjI,KAAKy1F,gBAAiB,EACtBz1F,KAAK01F,iBAAkB,EACvB11F,KAAK21F,kBAAmB,EACxB31F,KAAK41F,kBAAmB,EACxB51F,KAAKu1F,mBAAqBA,EAE1Bv1F,KAAKy1F,eAAiD,iBAAzB9oE,EAAQkpE,aACrC71F,KAAK01F,gBAAmD,iBAA1B/oE,EAAQmpE,cACtC91F,KAAK21F,iBAAqD,iBAA3BhpE,EAAQopE,eACvC/1F,KAAK41F,iBAAqD,iBAA3BjpE,EAAQqpE,eACvC,MAAMvvD,EAAYna,EAAO+V,mBACzBriC,KAAKq+B,eAAiBh+B,OAAOwU,OAAO,CAAEohF,aAAa,EAAOC,aAAa,EAAMC,aAAc,GAAKC,mBAAoB3vD,EAAUv3B,aAAa,gBAAiBnN,KAAM,EAAGklE,yBAA0B36C,EAAO+C,oBAAqBgnE,gBAAiB,EAAGC,2BAA4BhqE,EAAO0C,oBAAqB6mE,aAAc,EAAGC,cAAe,EAAGC,eAAgB,EAAGC,eAAgB,GAAKrpE,GAClX,MAAMo5C,EAAgBt/B,EAAUv3B,aAAa,mBAAoB,GACjElP,KAAKq+B,eAAe83D,aAAepwB,EAE5BziE,sBACP,MAAO,mBAEXizF,QACI,OAAOv2F,KAAKw1F,GAEhB3gE,SAASC,GAEL,OADA90B,KAAK80B,MAAQA,EACN90B,KAEXw4B,WACI,OAAOx4B,KAAK80B,MAEhBa,aACI,OAAOl0B,EAAQzB,KAAK80B,MAAO,UAAW,kCAE1C0hE,SAAS1hE,EAAOpB,EAAKqD,EAAMC,EAAOy/D,GAC9B,MAAM9pE,EAAU3sB,KAAKq+B,eACf13B,EAAImuB,EAAMwL,YAAY3T,EAAQ5qB,MAC9Bi8C,EAA2B,IAAhBhnB,EAAQD,GAGzB,IAAI2/D,EAFJ3/D,GAAQinB,EACRhnB,GAASgnB,EAGL04C,EADA12F,KAAK21F,iBACwC,GAAzBhpE,EAAQopE,eAGc,IAAtBU,EAExB,MAAME,EAAiBhqE,EAAQ0pE,gBACzBp6C,EAAMt1C,EAAI8vF,EACVG,EAAMjwF,EAAI8vF,EACVI,EAAe9/D,EAAO4/D,EACtBG,EAAgB9/D,EAAQ2/D,EACxBI,EAAUpwF,EAAI+vF,EACdM,EAAarwF,EAAI+vF,EACvBhjE,EAAIhhB,OACJghB,EAAIQ,YACJR,EAAIS,OAAO4C,EAAMklB,GACjBvoB,EAAIU,OAAOyiE,EAAc56C,GACzBvoB,EAAIU,OAAOyiE,EAAcE,GACzBrjE,EAAIU,OAAO0iE,EAAeC,GAC1BrjE,EAAIU,OAAO0iE,EAAe76C,GAC1BvoB,EAAIU,OAAO4C,EAAOilB,GAClBvoB,EAAIU,OAAO4C,EAAO4/D,GAClBljE,EAAIU,OAAO0iE,EAAeF,GAC1BljE,EAAIU,OAAO0iE,EAAeE,GAC1BtjE,EAAIU,OAAOyiE,EAAcG,GACzBtjE,EAAIU,OAAOyiE,EAAcD,GACzBljE,EAAIU,OAAO2C,EAAM6/D,GACjBljE,EAAI6L,YACJ7L,EAAIa,OAER0iE,YAAYniE,EAAOpB,EAAKqD,EAAMC,EAAOy/D,GACjC,MAAMS,EAAKl0F,KAAK2C,MAAM3F,KAAKu1F,mBAAqB,GAC1C5yF,EAAI3C,KAAKu1F,mBAAqB,EAC9B4B,EAAKn0F,KAAK2C,MAAMhD,EAAI,GACpBy0F,EAAKz0F,EAAI,EACTgqB,EAAU3sB,KAAKq+B,eAGrBg3D,QAAiB1zF,EACjB,MAAM4X,EAjGd,WACI,IAAK87E,GAAgB,CACjB,MAAMhpD,EAAW,IAAIxG,EAAS,CAAEvX,SAAU,IAAK2X,UAAW,MAC1DovD,GAAiB,CACb92D,iBAAkB8N,EAAShO,eAAeE,iBAC1C2H,WAAYmG,EAASnG,WACrB39B,MAAO8jC,EAASte,YAGxB,OAAOsnE,GAwFUgC,GACPC,EAAa3qE,EAAQ2pE,2BACrBiB,EAAah+E,EAAKhR,OAAS+uF,EAAa/9E,EAAKglB,kBAC7CtvB,EAAS,CACX,EAAG,CACC1G,MAAoB,GAAbgvF,EACP/uF,OAAQiuF,GAEZ,EAAG,CACCluF,MAAOgvF,IAIT3wD,EAAU5mC,KAAK41F,iBAAmBjpE,EAAQqpE,eAAiB,GAEjE,IAAIt0F,EAAIq1B,EAAwB,IAAhBC,EAAQD,GAAsB,IADhCmgE,EAAKjoF,EAAO,GAAG1G,MAAQ4uF,EAAKloF,EAAO,GAAG1G,MAAQ6uF,EAAKnoF,EAAO,GAAG1G,OAAS2uF,EAAKC,EAAKC,EAAK,GAAKxwD,GAExG,MAAM7kC,EAAO4qB,EAAQ5qB,KACf+sC,EAAOha,EAAMwL,YAAYv+B,EAAO,GAChCy1F,EAAU1iE,EAAMwL,YAAYv+B,GAC5BitC,EAAUla,EAAMwL,YAAYv+B,EAAO,GACzC2xB,EAAIhhB,OACJghB,EAAIxgB,eAAe,QACnBwgB,EAAItgB,aAAa,GACjB,IAAK,IAAI5M,EAAI,EAAGA,EAAI0wF,IAAM1wF,EACtBktB,EAAI2+B,SAAS3wD,EAAG81F,EAAUvoF,EAAO,GAAGzG,OAAQyG,EAAO,GAAG1G,MAAO0G,EAAO,GAAGzG,QACvEkrB,EAAI2+B,SAAS3wD,EAAGstC,EAAU//B,EAAO,GAAGzG,OAAQyG,EAAO,GAAG1G,MAAO0G,EAAO,GAAGzG,QACvE9G,GAAKuN,EAAO,GAAG1G,MAAQq+B,EAE3B,IAAK,IAAIpgC,EAAI,EAAGA,EAAI2wF,IAAM3wF,EACtBktB,EAAI2+B,SAAS3wD,EAAG81F,EAAUvoF,EAAO,GAAGzG,OAAQyG,EAAO,GAAG1G,MAAO0G,EAAO,GAAGzG,QACvE9G,GAAKuN,EAAO,GAAG1G,MAAQq+B,EAE3B,IAAK,IAAIpgC,EAAI,EAAGA,EAAI4wF,IAAM5wF,EACtBonB,EAAM2Z,YAAY7T,EAAKhyB,EAAGotC,EAAMwoD,EAAY/9E,EAAK2sB,YACjDxkC,GAAKuN,EAAO,GAAG1G,MAAQq+B,EAE3BlT,EAAIpgB,UAERG,OACI,MAAMigB,EAAM1zB,KAAKwT,eACjBxT,KAAK8T,cACL,MAAMghB,EAAQ90B,KAAK21B,aACnB,IAAIoB,EAAOjC,EAAMsN,gBACbpL,EAAQlC,EAAMkzC,cAKlB,MAAMoC,EAAet1C,EAAMoH,aAAa65B,GAAsBuG,OAClC,IAAxB8N,EAAaxmE,QAAgBi7D,GAAUuL,EAAa,MACpDrzC,GAAQqzC,EAAa,GAAGr8C,YAE5B,MAAMpB,EAAU3sB,KAAKq+B,eACjBr+B,KAAKy1F,iBACL1+D,EAAOjC,EAAM/tB,OAAS4lB,EAAQkpE,cAE9B71F,KAAK01F,kBACL1+D,EAAQlC,EAAM/tB,OAAS+tB,EAAM/G,WAAapB,EAAQmpE,eAEtD91F,KAAKw1F,GAAGz+D,KAAOA,EACf/2B,KAAKw1F,GAAGx+D,MAAQA,EAChB,MAAMy/D,EAAsB9pE,EAAQs6C,yBAOpC,GANIt6C,EAAQspE,YACRj2F,KAAKi3F,YAAYniE,EAAOpB,EAAKqD,EAAMC,EAAOy/D,GAG1Cz2F,KAAKw2F,SAAS1hE,EAAOpB,EAAKqD,EAAMC,EAAOy/D,GAEvC9pE,EAAQupE,YAAa,CACrB,MAAMtwB,EAAW,IAAM5lE,KAAKu1F,mBACtBkC,EAAU,IAAI9xB,GAAcC,EAAU,GAAG,GAC/C6xB,EAAQ3lE,MAAQnF,EAAQypE,mBACxBqB,EAAQnxB,WAAWV,GACnB6xB,EAAQ5iE,SAASC,GACjB2iE,EAAQtwF,KAAK4vB,EAAwB,IAAhBC,EAAQD,GAA2D,GAA7C0gE,EAAQpxB,UAAU54C,MAAM7e,aAAarG,OAChFkvF,EAAQ/xB,WAAa/4C,EAAQwpE,YAC7BsB,EAAQtjF,WAAWuf,GAAKjgB,SCzKpC,SAASikF,GAAehsF,EAAM+G,EAAS/Q,EAAGiF,EAAGmrB,GACzC,MAAM6lE,EAAaC,GAAap0B,OAAO93D,GACzB,IAAIkiB,EAAM+pE,EAAWv2F,KAAM0wB,EAAO,CAAED,SAAU,iBACtD2D,OAAO/iB,EAAS/Q,EAAIi2F,EAAWxlE,QAASxrB,EAAIgxF,EAAWvlE,SAS1D,MAAMwlE,WAAqB/lF,EAC9B1Q,YAAYgtB,GACR7sB,QACAtB,KAAKmuB,MAAQA,EACbnuB,KAAK+P,KAAO6nF,GAAa7nF,KAAK8zC,KAC9B7jD,KAAK+B,KAAO,EAEZ/B,KAAK63F,oBAAsB,GAC3B73F,KAAK83F,oBAAsB,GAC3B93F,KAAKgV,YACLhV,KAAKq+B,eAAiB,CAClB05D,eAAgB,GAChBC,kBAAmB,EACnBC,mBAAoB,EACpB74D,MAAO,SAGJ97B,sBACP,MAAO,eAMXC,qBAAqB4qB,GAEjB,OADc,IAAIypE,GAAazpE,GAInC5qB,uBAAuB4qB,GACnB,MAAM+pE,EAAQ,IAAIN,GAAazpE,GAG/B,OAFA+pE,EAAM37B,QAAQq7B,GAAa7nF,KAAKooF,OAChCD,EAAME,cAAc,cACbF,EAGX30F,sBAAsB4qB,GAClB,MAAM+pE,EAAQ,IAAIN,GAAazpE,GAG/B,OAFA+pE,EAAM37B,QAAQq7B,GAAa7nF,KAAK8zC,MAChCq0C,EAAME,cAAc,YAAa,aAC1BF,EAGX37B,QAAQxsD,GAKJ,OAJAA,EAAuB,iBAATA,EAAoB6nF,GAAa53B,WAAWjwD,GAAQA,IACtD6nF,GAAa7nF,KAAK8zC,MAAQ9zC,GAAQ6nF,GAAa7nF,KAAKooF,QAC5Dn4F,KAAK+P,KAAOA,GAET/P,KAMXo4F,cAAcC,EAAS15C,GAGnB,OAFA3+C,KAAK63F,oBAAsBQ,GAAW,GACtCr4F,KAAK83F,oBAAsBn5C,GAAW,GAC/B3+C,KAGXumC,QAAQxkC,GAEJ,OADA/B,KAAK+B,KAAOA,EACL/B,KAGXs4F,gBACI,MAAM5kE,EAAM1zB,KAAKwT,eACjB,IACI+kF,EACAC,EAFAC,GAAqB,EAIzBz4F,KAAKmuB,MAAMyK,SAAQ,CAACxB,EAAMlnB,EAAOie,KAE7BsqE,GAAsBA,EAEtB,MAAM/2F,EAAI01B,EAAKyF,eACTl2B,EAAIywB,EAAKzB,aAAasT,kBAAkBjpC,KAAK+B,KAAO,GAE1D,GAAIL,EAAI62F,EACJ,MAAM,IAAIt3F,EAAa,uBAAwB,gEAKnD,MAAMy3F,EAAevqE,EAAMje,EAAQ,KAAOknB,EACpCuhE,EAAexqE,EAAMje,EAAQ,KAAOknB,EAC1C,IAAIjF,EAAU,EACd,MAAML,EAAQxF,EAAO+V,mBAAmBnzB,aAAa,gBAAgBupF,EAAqB,OAAS,cACnG,GAAIA,EAGA,GADAtmE,EAAUwmE,EAAe,EAAI,EACzB34F,KAAK+P,OAAS6nF,GAAa7nF,KAAKooF,OAAUQ,EAgB1CjlE,EAAIQ,YACJR,EAAIS,OAAOzyB,EAAGiF,EAAI3G,KAAKq+B,eAAe05D,gBACtCrkE,EAAIU,OAAO1yB,EAAIywB,EAASxrB,GACxB+sB,EAAI1G,SACJ0G,EAAI6L,iBAlBJ,GAAIv/B,KAAK63F,oBAAqB,CAE1B,MAAMr8C,EAAa9nB,EAAI8hB,YAAYx1C,KAAK63F,qBAAqBtvF,MAC7DmrB,EAAIwL,SAASl/B,KAAK63F,oBAAqBn2F,EAAI85C,EAAa,EAAG70C,GAC3DwrB,EAAUqpB,EAAa,EAAIx7C,KAAKq+B,eAAe25D,uBAI/CN,GAAe,gBAAiBhkE,EAAKhyB,EAAGiF,EAAGmrB,GAC3CK,EAAU,GAAKnyB,KAAKq+B,eAAe25D,uBAc3C7lE,EAAUumE,GAAgB,EAAI,EAE9BhlE,EAAIQ,YACJR,EAAIS,OAAOokE,EAAQC,GACnB9kE,EAAIU,OAAO1yB,EAAIywB,EAASxrB,GACxB+sB,EAAIU,OAAO1yB,EAAGiF,EAAI3G,KAAKq+B,eAAe05D,gBACtCrkE,EAAI1G,SACJ0G,EAAI6L,YAGRg5D,EAAS72F,EAAIywB,EACbqmE,EAAS7xF,KAOjBiyF,WACI,MAAMllE,EAAM1zB,KAAKwT,eACjB,IAAIilF,GAAqB,EAEzBz4F,KAAKmuB,MAAMyK,SAASxB,IAChBqhE,GAAsBA,EACtB,MAAM3jE,EAAQsC,EAAKzB,aACbj0B,EAAI01B,EAAKyF,eACTl2B,EAAImuB,EAAMmU,kBAAkBjpC,KAAK+B,KAAO,GACxC+vB,EAAQxF,EAAO+V,mBAAmBnzB,aAAa,gBAAgBupF,EAAqB,OAAS,cACnG,IAAIj9C,EAAa,EACbi9C,EACIz4F,KAAK63F,qBACLr8C,EAAa9nB,EAAI8hB,YAAYx1C,KAAK63F,qBAAqBtvF,MACvDmrB,EAAIwL,SAASl/B,KAAK63F,oBAAqBn2F,EAAI85C,EAAa,EAAG70C,IAG3D+wF,GAAe,gBAAiBhkE,EAAKhyB,EAAGiF,EAAGmrB,GAI3C9xB,KAAK83F,qBACLt8C,EAAa9nB,EAAI8hB,YAAYx1C,KAAK83F,qBAAqBvvF,MACvDmrB,EAAIwL,SAASl/B,KAAK83F,oBAAqBp2F,EAAI85C,EAAa,EAAG70C,IAG3D+wF,GAAe,gBAAiBhkE,EAAKhyB,EAAGiF,EAAGmrB,MAM3Dre,OACI,MAAMigB,EAAM1zB,KAAKwT,eACjBxT,KAAK8T,cACL4f,EAAIhhB,OACJghB,EAAIxgB,eAAelT,KAAKq+B,eAAee,OACvC1L,EAAI1gB,aAAahT,KAAKq+B,eAAee,OACrC1L,EAAItf,QAAQpU,KAAKsU,UAjMzB,YAAcxS,GACN81F,GAAalyD,OACb9jC,EAAI,wBAAyBE,GAgM7B,CAAE,2BACE9B,KAAK+P,OAAS6nF,GAAa7nF,KAAK88D,SAAW7sE,KAAK+P,OAAS6nF,GAAa7nF,KAAKooF,OAC3EzkE,EAAItgB,aAAapT,KAAKq+B,eAAe45D,oBACrCj4F,KAAKs4F,iBAEAt4F,KAAK+P,OAAS6nF,GAAa7nF,KAAK8zC,MACrC7jD,KAAK44F,WAETllE,EAAIpgB,WAIZskF,GAAalyD,OAAQ,EACrBkyD,GAAapjF,UAAY,CACrBhI,OAAQhB,EAAK8D,MACblD,KAAM,GACNC,OAAQjC,EAAWmvC,KACnBjtC,MAAOjC,EAAUoD,QAGrBmqF,GAAap0B,OAAS,CAClBq1B,cAAe,CACXz3F,KAAM,mBACN+wB,SAAU,GACVC,QAAS,GAEb0mE,cAAe,CACX13F,KAAM,kBACN+wB,SAAU,EACVC,QAAS,IAIjBwlE,GAAa7nF,KAAO,CAChB8zC,KAAM,EACNgpB,QAAS,EACTsrB,MAAO,GAGXP,GAAa53B,WAAa,CACtBl9D,KAAM80F,GAAa7nF,KAAK8zC,KACxBopB,QAAS2qB,GAAa7nF,KAAK88D,QAC3BksB,MAAOnB,GAAa7nF,KAAKooF,OC/O7B,MAAMa,GAAQ,CACV,EAAK,aACL,EAAK,cACL,EAAK,cACLjnD,MAAO,kBAEJ,MAAMknD,WAAmBhE,GACjB3xF,sBACP,MAAO,aAEXnC,YAAY4O,EAAMutB,EAAY3Q,GAC1BrrB,WAAMK,EAAWtB,OAAOwU,OAAO,CAAEyZ,SAAU,IAAKmL,aAAuB,UAAT1pB,GAAoButB,GAAa3Q,GAC/F,MACMc,EAAQ,IAAIG,EADAorE,GAAMjpF,IAAS,aACEuc,EAAO+V,mBAAmBnzB,aAAa,mBAAoB,IAAK,CAC/F2iB,SAAU,eAEd7xB,KAAKm1F,SAAS1nE,ICJtB,SAASyrE,GAAcxlE,EAAKwhC,EAAIC,EAAIntD,EAAIE,EAAIC,EAAIC,GAE5CsrB,EAAIQ,YACJR,EAAIS,OAAO+gC,EAAIC,GACfzhC,EAAIU,OAAOpsB,EAAIE,GACfwrB,EAAIU,OAAOjsB,EAAIC,GACfsrB,EAAIU,OAAO8gC,EAAIC,GACfzhC,EAAI6L,YACJ7L,EAAIa,OAED,MAAM4kE,WAAkBtnF,EAa3B1Q,YAAYgtB,GACR7sB,QACAtB,KAAKy/E,SAAStxD,GACdnuB,KAAK8C,KAAO,GACZ9C,KAAKgV,YACLhV,KAAKq+B,eAAiB,CAElBw3D,aAAc,EACdC,cAAe,EAEfh3C,WAAY,EAEZs6C,eAAWz3F,EAEX03F,aAAa,EAEbj6D,WAAOz9B,EAEP23F,kBAAkB,EAClBC,gBAAgB,EAEhBC,iBAAkB,GAElBC,gBAAiBz2F,KAAKC,GAAK,EAE3By2F,uBAAwBP,GAAUQ,qBAAqBt/C,IACvDu/C,mBAAoBT,GAAUU,kBAAkBnjE,QAG7CpzB,sBACP,MAAO,YAGXghE,QAAQxhE,GAEJ,OADA9C,KAAK8C,KAAOA,EACL9C,KAGXy/E,SAAStxD,GACL,IAAKA,EAAMyoD,aAAezoD,EAAMomB,UAC5B,MAAM,IAAItzC,EAAa,eAAgB,2DAM3C,GAJKktB,EAAM4xD,gBACP5xD,EAAM4xD,cAAgB,CAAC,IACtB5xD,EAAM6xD,eACP7xD,EAAM6xD,aAAe,CAAC,IACtB7xD,EAAM4xD,cAAcn8E,SAAWuqB,EAAM6xD,aAAap8E,OAClD,MAAM,IAAI3C,EAAa,eAAgB,qDAO3C,OALAjB,KAAKmuB,MAAQA,EACbnuB,KAAK42E,WAAazoD,EAAMyoD,WACxB52E,KAAK+/E,cAAgB5xD,EAAM4xD,cAC3B//E,KAAKu0C,UAAYpmB,EAAMomB,UACvBv0C,KAAKggF,aAAe7xD,EAAM6xD,aACnBhgF,KAGX85F,iBACI,MAAMpmE,EAAM1zB,KAAKwT,eACX6qB,EAAiBr+B,KAAKq+B,eACxBA,EAAe+6D,WACf1lE,EAAIq+B,YAAY1zB,EAAe+6D,WAE/B/6D,EAAeygB,YACfprB,EAAItgB,aAAairB,EAAeygB,YAEhCzgB,EAAeg7D,YACf3lE,EAAIk+B,WAAW,SAGfl+B,EAAIk+B,WAAW,UAIvBmoC,iBACI,MAAMrmE,EAAM1zB,KAAKwT,eACjBkgB,EAAItf,QAAQpU,KAAKsU,UACjB,MACM8qB,EADiBp/B,KAAKq+B,eACCe,MACzBA,IACA1L,EAAIxgB,eAAeksB,GACnB1L,EAAI1gB,aAAaosB,IAIzB46D,cAActmE,EAAKumE,EAAKC,GACpB,MAAMC,EAAcn6F,KAAKq+B,eAAei7D,kBAAoBt5F,KAAKq+B,eAAek7D,eAC1EvxF,EAAKiyF,EAAIv4F,EACTwG,EAAK+xF,EAAItzF,EACTwB,EAAK+xF,EAAIx4F,EACT0G,EAAK8xF,EAAIvzF,EAGTyzF,EAAWp3F,KAAKkH,MAAM/B,EAAKH,IAAOG,EAAKH,IAAOI,EAAKF,IAAOE,EAAKF,IAC/DmyF,GAASD,EAAWp6F,KAAKq+B,eAAem7D,iBAAmB,GAAKY,EACtE,IAAI1zB,EACA4zB,EACA90B,EACA+0B,EACAv6F,KAAKq+B,eAAek7D,gBAAkBY,GACtCzzB,EAAQ1jE,KAAKm8B,MAAMn3B,GAAMG,EAAKH,GAAMqyF,GACpCC,EAAQt3F,KAAKm8B,MAAMj3B,GAAME,EAAKF,GAAMmyF,KAGpC3zB,EAAQv+D,EACRmyF,EAAQlyF,GAERpI,KAAKq+B,eAAei7D,kBAAoBa,GACxC30B,EAAUx9D,GAAMG,EAAKH,IAAO,EAAIqyF,GAChCE,EAAUryF,GAAME,EAAKF,IAAO,EAAImyF,KAGhC70B,EAAUx9D,EACVuyF,EAAUryF,GAEVlI,KAAKq+B,eAAee,QACpB1L,EAAIxgB,eAAelT,KAAKq+B,eAAee,OACvC1L,EAAI1gB,aAAahT,KAAKq+B,eAAee,QAGzC1L,EAAIQ,YACJR,EAAIS,OAAOqxC,EAAS+0B,GACpB7mE,EAAIU,OAAOsyC,EAAO4zB,GAClB5mE,EAAI1G,SACJ0G,EAAI6L,YAEJ,MAAMi7D,EAAax3F,KAAKy0D,MAAMrvD,EAAKF,EAAIC,EAAKH,GAEtCnB,EAAI7D,KAAK8C,IAAI9F,KAAKq+B,eAAem7D,iBAAmBx2F,KAAKkwC,IAAIlzC,KAAKq+B,eAAeo7D,kBACvF,IAAIgB,EACAC,EACAC,EACAj2B,EACAk2B,EACAljB,GACA13E,KAAKq+B,eAAek7D,gBAAkBY,KACtCM,EAASD,EAAax3F,KAAKC,GAAKjD,KAAKq+B,eAAeo7D,gBACpDkB,EAAQxyF,EAAKnF,KAAKkwC,IAAIunD,GAAU5zF,EAChC69D,EAAQt8D,EAAKpF,KAAKmwC,IAAIsnD,GAAU5zF,EAChC6zF,EAASF,EAAax3F,KAAKC,GAAKjD,KAAKq+B,eAAeo7D,gBACpDmB,EAAWzyF,EAAKnF,KAAKkwC,IAAIwnD,GAAU7zF,EACnC6wE,EAAWtvE,EAAKpF,KAAKmwC,IAAIunD,GAAU7zF,EACnCqyF,GAAcxlE,EAAKinE,EAAOj2B,EAAOv8D,EAAIC,EAAIwyF,EAAUljB,KAEnD13E,KAAKq+B,eAAei7D,kBAAoBa,KACxCM,EAASD,EAAax6F,KAAKq+B,eAAeo7D,gBAC1CkB,EAAQ3yF,EAAKhF,KAAKkwC,IAAIunD,GAAU5zF,EAChC69D,EAAQx8D,EAAKlF,KAAKmwC,IAAIsnD,GAAU5zF,EAChC6zF,EAASF,EAAax6F,KAAKq+B,eAAeo7D,gBAC1CmB,EAAW5yF,EAAKhF,KAAKkwC,IAAIwnD,GAAU7zF,EACnC6wE,EAAWxvE,EAAKlF,KAAKmwC,IAAIunD,GAAU7zF,EACnCqyF,GAAcxlE,EAAKinE,EAAOj2B,EAAO18D,EAAIE,EAAI0yF,EAAUljB,IAI3DjkE,OACI,MAAMigB,EAAM1zB,KAAKwT,eACjBxT,KAAK8T,cACL,MAAM8iE,EAAa52E,KAAK42E,WAClBriC,EAAYv0C,KAAKu0C,UACjBlW,EAAiBr+B,KAAKq+B,eAC5B3K,EAAIhhB,OACJ1S,KAAK85F,iBAEL,IAAIe,EAAiB,CAAEn5F,EAAG,EAAGiF,EAAG,GAC5Bm0F,EAAe,CAAEp5F,EAAG,EAAGiF,EAAG,GAC9B3G,KAAK+/E,cAAcnnD,SAAQ,CAACmiE,EAAav0F,KACrC,MAAMw0F,EAAah7F,KAAKggF,aAAax5E,GAErCq0F,EAAiBjkB,EAAW90C,mBAAmB,EAAGi5D,GAClDD,EAAevmD,EAAUzS,mBAAmB,EAAGk5D,GAC/C,MAAMC,EAAgBJ,EAAel0F,EAAIm0F,EAAan0F,EAEtDk0F,EAAen5F,GAAKk1E,EAAWhoE,aAAa+pB,WAAa0F,EAAew3D,aACxEiF,EAAap5F,GAAK6yC,EAAU3lC,aAAa8pB,UAAY2F,EAAey3D,cAEpE,MAAMoF,EAAiBtkB,EAAW91C,WAAW/S,WACrB6oD,EAAW/zC,cAAck4D,GAAa3tE,WACL,IAAlCwpD,EAAWt0C,qBAC9Bu4D,EAAen5F,GAAKw5F,EAAiB78D,EAAew3D,cAGjCthD,EAAU1R,cAAcm4D,GAAY5tE,YACH,IAAlCmnB,EAAUjS,qBAC5Bw4D,EAAap5F,GAAKw5F,EAAiB78D,EAAey3D,eAGtD+E,EAAel0F,GAAKs0F,GAAiB,EAAI,EACzCH,EAAan0F,GAAKs0F,EAAgB,EAAI,EACtCj7F,KAAKg6F,cAActmE,EAAKmnE,EAAgBC,MAE5CpnE,EAAIpgB,UAEJ,MAAMkoC,EAAa9nB,EAAI8hB,YAAYx1C,KAAK8C,MAAMyF,MACxC+6D,EAAgBjlC,EAAeu7D,mBACrC,IAAIl4F,EAAI,EACR,GAAI4hE,IAAkB61B,GAAUU,kBAAkBvjE,KAC9C50B,EAAIm5F,EAAen5F,OAElB,GAAI4hE,IAAkB61B,GAAUU,kBAAkBnjE,OAAQ,CAG3Dh1B,GAFgBo5F,EAAap5F,EAAIm5F,EAAen5F,GACrB,EAAIm5F,EAAen5F,EAC/B85C,EAAa,OAEvB8nB,IAAkB61B,GAAUU,kBAAkB5iE,QACnDv1B,EAAIo5F,EAAap5F,EAAI85C,GAGzB,IAAI70C,EAAI,EACR,MAAMw0F,EAAoB98D,EAAeq7D,uBAYzC,OAXIyB,IAAsBhC,GAAUQ,qBAAqBt/C,IACrD1zC,EAAIiwE,EAAWjhD,aAAasL,iBAEvBk6D,IAAsBhC,GAAUQ,qBAAqB5+C,SAC1Dp0C,EAAIiwE,EAAWjhD,aAAasT,kBAAkB3c,EAAOgD,0BAGzDoE,EAAIhhB,OACJ1S,KAAK+5F,iBACLrmE,EAAIwL,SAASl/B,KAAK8C,KAAMpB,EAAGiF,GAC3B+sB,EAAIpgB,UACGtT,MAIfm5F,GAAU3kF,UAAYnU,OAAOwU,OAAO,GAAIhD,EAAQ2C,WAEhD2kF,GAAUQ,qBAAuB,CAC7Bt/C,IAAK,EACLU,OAAQ,GAEZo+C,GAAUU,kBAAoB,CAC1BvjE,KAAM,EACNI,OAAQ,EACRO,MAAO,GCpQJ,MAAMmkE,WAAevpF,EACxB1Q,YAAYurB,EAAS,IACjBprB,QACAtB,KAAKmzB,WAAWzG,GAChB1sB,KAAK2yB,MAAQ,GAENrvB,sBACP,MAAO,SAGX6vB,WAAWxG,EAAU,IACjB,IAAI9gB,EACJ7L,KAAKP,QAAqC,QAA1BoM,EAAK8gB,EAAQltB,eAA4B,IAAPoM,EAAgBA,EAAK,IAAIwvF,GAAQ,CAAEvkC,SAAU,CAAEF,UAAW,KAAMruD,MAAO,EAAGC,OAAQ,KACpIxI,KAAK2sB,QAAUtsB,OAAOwU,OAAOxU,OAAOwU,OAAO,CAAEpV,QAASO,KAAKP,QAASiC,EAAG,GAAIiF,EAAG,GAAI4B,MAAO,IAAK+yF,mBAAoB,GAAIC,WAAW,EAAOC,iBAAiB,EAAOC,gBAAgB,EAAOC,iBAAkB,EAAGC,WAAW,GAAShvE,GAAU,CAAEivE,QAASv7F,OAAOwU,OAAO,CAAEggE,MAAO,IAAOloD,EAAQivE,SAAUC,cAAex7F,OAAOwU,OAAO,GAAI8X,EAAQkvE,kBACzS,IAAjC77F,KAAK2sB,QAAQ6uE,sBAAsD,IAAlB7uE,EAAQpkB,QACzDvI,KAAK2sB,QAAQ4uE,WAAY,GAIjCpnF,WAAW1B,GAGP,OAFAnR,MAAM6S,WAAW1B,GACjBzS,KAAKP,QAAQ0U,WAAW1B,GACjBzS,KAMX87F,aAAa/rF,EAAO,UAMhB,OALA/P,KAAK+7F,UAAY/7F,KAAKP,QAAQqrE,eAAe,CACzCI,UAAWlrE,KAAK2yB,MAAM,GAAGmC,MACzBq2C,aAAcnrE,KAAK2yB,MAAM3yB,KAAK2yB,MAAM/uB,OAAS,GAAGkxB,MAChD/kB,KAAAA,IAEG/P,KAAK+7F,UAmBhBC,SAAStvE,GACL,IAAI7gB,EACJ,MAAMowF,EAAe57F,OAAOwU,OAAO,CAAEkyD,UAAU,GAASr6C,EAAOC,SACzDmI,EAAgC,QAAvBjpB,EAAK6gB,EAAOoI,aAA0B,IAAPjpB,EAAgBA,EAAK7L,KAAKP,QAAQgnE,MAAM,CAAE/kE,EAAG1B,KAAK2sB,QAAQjrB,EAAGiF,EAAG3G,KAAK2sB,QAAQhmB,EAAG4B,MAAOvI,KAAK2sB,QAAQpkB,MAAOokB,QAASsvE,IAC5Jr4B,EAAIvjE,OAAOwU,OAAOxU,OAAOwU,OAAO,CAAEigB,MAAAA,EAEpConE,WAAY,EAAGC,WAAY,EAAGC,kBAAkB,EAAOZ,iBAAiB,GAAS9uE,GAAS,CAAEC,QAASsvE,IACnGvoE,EAAM1zB,KAAKkU,aAOjB,OANA0vD,EAAEx4B,OAAOxS,SAASkC,GAAUA,EACvB3mB,WAAWuf,GACXmB,SAASC,GACTg2B,eACAlyB,SAASuyB,GAAaA,EAASt2B,SAASC,OAC7C90B,KAAK2yB,MAAMtE,KAAKu1C,GACT9uC,EAGXy3B,SACI,MAAM8vC,EAAkBr8F,KAAK2sB,QAAQivE,QACrC,IAAIptB,EAAe,EACnB,MAAM31B,EAAY,IAAIuT,GAAUiwC,GAChCr8F,KAAK64C,UAAYA,EACjB,IAAIlyC,EAAI3G,KAAK2sB,QAAQhmB,EACjB2pD,EAAS,EACTgsC,EAAY,GAChB,MAAMC,EAAqB,GAE3Bv8F,KAAK2yB,MAAMiG,SAAS4jE,IAChB71F,GAAQ61F,EAAK1nE,MAAMiF,MAAMyiE,EAAKN,YAC9BM,EAAK1nE,MAAM1tB,KAAKT,GACZ3G,KAAK2sB,QAAQ4uE,UACbiB,EAAKpxD,OAAOxS,SAASkC,IACjB+d,EAAUyT,WAAW,CAACxxB,OAI1B+d,EAAUyT,WAAWkwC,EAAKpxD,QAE9BzkC,GAAQ61F,EAAK1nE,MAAMiF,MAAMyiE,EAAKL,YAC9Bx1F,GAAQ61F,EAAK1nE,MAAMiF,MAAM/5B,KAAK2sB,QAAQ2uE,oBAClCkB,EAAKJ,mBACLG,EAAmBluE,KAAK,CAAE1nB,EAAAA,EAAGm0B,MAAO0hE,EAAKpxD,OAAO,KAChDzkC,GAAK,IAET21F,EAAYA,EAAUr+B,OAAOu+B,EAAKpxD,QAClCklB,EAASttD,KAAK6E,IAAIyoD,EAAQksC,EAAK1nE,MAAMsN,oBAGzCpiC,KAAK2yB,MAAMiG,SAAS4jE,GAASA,EAAK1nE,MAAMgzC,cAAcxX,KAClDtwD,KAAK2sB,QAAQ4uE,WACb/sB,EAAe31B,EAAU63B,0BAA0B4rB,GACnDt8F,KAAK2yB,MAAMiG,SAAS4jE,IAChBA,EAAK1nE,MAAMoC,SAASs3C,EAAe/H,GAAMkB,cAAgBrX,EAAStwD,KAAK2sB,QAAQjrB,QAInF8sE,EAAexuE,KAAK2sB,QAAQgvE,UACtB37F,KAAK2sB,QAAQpkB,MAAQvI,KAAK2sB,QAAQjrB,EAClC1B,KAAK2sB,QAAQpkB,OAAS+nD,EAAStwD,KAAK2sB,QAAQjrB,GAAK+kE,GAAMiB,eAEjE7uB,EAAU0T,OAAO+vC,EAAWt8F,KAAK2sB,QAAQ6uE,gBAAkB,EAAIhtB,EAAcxuE,KAAK2sB,QAAQkvE,eAC1F,IAAK,IAAIr1F,EAAI,EAAGA,EAAIxG,KAAK2sB,QAAQ+uE,iBAAkBl1F,IAC/CqyC,EAAU+7B,KAAKynB,GAEnBr8F,KAAKswD,OAASA,EACdtwD,KAAKu8F,mBAAqBA,EAC1Bv8F,KAAKy8F,MAAQ91F,EACb3G,KAAKyH,YAAc,IAAIf,EAAY1G,KAAK2sB,QAAQjrB,EAAG1B,KAAK2sB,QAAQhmB,EAAG3G,KAAK2sB,QAAQpkB,MAAOvI,KAAKy8F,MAAQz8F,KAAK2sB,QAAQhmB,GAGrH8M,OAEI,MAAMigB,EAAM1zB,KAAKwT,eACjB,KAAKxT,KAAK64C,WAAc74C,KAAKswD,QAAWtwD,KAAKy8F,OAAUz8F,KAAKu8F,oBACxD,MAAM,IAAIt7F,EAAa,cAAe,yCAE1CjB,KAAK8T,cACD9T,KAAK2sB,QAAQ8uE,gBACbrvC,GAAUswC,cAAchpE,EAAK1zB,KAAK64C,UAAW74C,KAAKswD,OAAQtwD,KAAK2sB,QAAQhmB,EAAG3G,KAAKy8F,OAEnFz8F,KAAKu8F,mBAAmB3jE,SAASz0B,IAC7BA,EAAE22B,MAAMgwB,eAAelyB,SAASuyB,GAAa9tB,EAAKs/D,YAAYjpE,EAAKy3B,EAAUhnD,EAAEwC,SClJpF,MAAMi2F,WAAiBn2B,GACfnjE,sBACP,MAAO,WAEXnC,YAAYO,EAAGiF,EAAG4B,EAAOokB,GAErBrrB,MAAMI,EAAGiF,EAAG4B,EADQlI,OAAOwU,OAAO,CAAEoyD,yBAA0B,GAAIhwB,UAAW,EAAGmwB,kBAAmB,GAAKz6C,IAG5GkJ,gBACI,OAAO71B,KAAKsgC,YAAY,KAG5Bu8D,cAEI,OADA78F,KAAKipE,QAAQ,OACNjpE,MCHf,SAAS,MAAK8B,GACNg7F,GAAYp3D,OACZ9jC,EAAI,uBAAwBE,GAE7B,IAAIi7F,IACX,SAAWA,GACPA,EAAoBA,EAAyB,IAAI,GAAK,MACtDA,EAAoBA,EAA4B,QAAK,GAAK,SAF9D,CAGGA,KAAwBA,GAAsB,KAC1C,MAAMD,WAAoBjrF,EAC7B1Q,aAAY,MAAEyrC,EAAK,KAAEowD,EAAI,KAAEl6F,EAAO,GAAE,YAAEqgE,EAAc,GAAE,SAAE/xC,EAAW2rE,GAAoB1iD,MACnF/4C,QACAtB,KAAK4sC,MAAQA,EACb5sC,KAAKg9F,KAAOA,EACZh9F,KAAK8C,KAAOA,EACZ9C,KAAKmjE,YAAcA,EACnBnjE,KAAKoxB,SAA+B,iBAAbA,EAAwB0rE,GAAYtmE,eAAepF,GAAYA,EACtFpxB,KAAK+B,KAAO,EACZ/B,KAAKgV,YACLhV,KAAKq+B,eAAiB,CAClB45B,QAAQ,EACRjG,KAAM,CAAC,GACP5yB,MAAO,QACP0f,WAAY,EACZm+C,cAAc,EACdlF,eAAgB,EAGhBmF,uBAAuB,GAGpB55F,sBACP,MAAO,cAEA+yB,sBACP,OAAO0mE,GAEAvmE,4BACP,MAAO,CACHylB,IAAK8gD,GAAoB1iD,IACzB6B,OAAQ6gD,GAAoBhiD,QAMzBoiD,uBAEP,OADA,GAAE,6DACKJ,GAKAK,6BAEP,OADA,GAAE,8DACKN,GAAYtmE,eAOvBhkB,WAAWkhB,GACPA,EAAItf,QAAQpU,KAAK8M,MACjB,MAAM6f,EAAU3sB,KAAKq+B,eAIrB,OAHA3K,EAAIxgB,eAAeyZ,EAAQyS,OAC3B1L,EAAI1gB,aAAa2Z,EAAQyS,OACzB1L,EAAItgB,aAAauZ,EAAQmyB,YAClB9+C,KAIXy4D,UAAUR,EAAQjG,GAId,OAHAhyD,KAAKq+B,eAAe45B,OAASA,EACzBjG,IACAhyD,KAAKq+B,eAAe2zB,KAAOA,GACxBhyD,KAGXumC,QAAQxkC,GAEJ,OADA/B,KAAK+B,KAAOA,EACL/B,KAGXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACjBxT,KAAK8T,cACL,IAAInN,EAAI,EACR,OAAQ3G,KAAKoxB,UACT,KAAK2rE,GAAoB1iD,IACrB1zC,EAAI3G,KAAK4sC,MAAMjX,aAAasL,eAAejhC,KAAK+B,MAChD,MACJ,KAAKg7F,GAAoBhiD,OACrBp0C,EAAI3G,KAAK4sC,MAAMjX,aAAasT,kBAAkBjpC,KAAK+B,KAAOuqB,EAAOgD,yBACjE,MACJ,QACI,MAAM,IAAIruB,EAAa,kBAAmB,gBAAgBjB,KAAKoxB,wBAGvE,MAAMwb,EAAQ,CAAElrC,EAAG1B,KAAK4sC,MAAM/P,eAAgBl2B,EAAAA,GACxCq2F,EAAO,CAAEt7F,EAAG1B,KAAKg9F,KAAKngE,eAAgBl2B,EAAAA,GAC5C,GAAE,gCAAiCimC,EAAO,QAASowD,EAAM,KAAMr2F,GAC/D,MAAMoxF,EAAiB/3F,KAAKq+B,eAAe05D,eAAiB/3F,KAAKoxB,SACjEsC,EAAIhhB,OACJ1S,KAAKwS,WAAWkhB,GAEhBA,EAAIwL,SAASl/B,KAAK8C,KAAM8pC,EAAMlrC,EAAGkrC,EAAMjmC,GAEvC,MAAM02F,EAAe3pE,EAAI8hB,YAAYx1C,KAAK8C,MACpCw6F,EAAaD,EAAa90F,MAC1Bg1F,EAAcF,EAAa70F,OAE3Bg1F,EAAU5wD,EAAMjmC,EAAI42F,EAAc,KAGlC,OAAE/wF,EAAM,KAAEJ,EAAI,OAAEC,EAAM,MAAEC,GAAUtM,KAAKsU,SAEvC0yC,EAAkBx7C,EAAKo3C,UAAUx2C,EAAM,SAC7CsnB,EAAItf,QAAQ5H,EAAQw6C,EAAiB36C,EAAQC,GAC7ConB,EAAIwL,SAASl/B,KAAKmjE,YAAav2B,EAAMlrC,EAAI47F,EAAa,EAAGE,GAEzD,MAAMC,EAAgB/pE,EAAI8hB,YAAYx1C,KAAKmjE,aACrCu6B,EAAcD,EAAcl1F,MAC5Bo1F,EAAeF,EAAcj1F,OAEnC,IAAIg9D,EAAU54B,EAAMlrC,EAChBk8F,EAASJ,EACb,MAAM92B,EAAQs2B,EAAKt7F,EAAI1B,KAAKg9F,KAAKl8D,WAAW/S,WAExC/tB,KAAKoxB,WAAa2rE,GAAoB1iD,KACtCmrB,GAAW83B,EAAaI,EAAc,EACtCE,GAAUD,EAAe,KAEpB39F,KAAKoxB,WAAa2rE,GAAoBhiD,SAC3C6iD,GAAUD,EAAe,IACzBn4B,GAAW83B,EAAa,EACnBt9F,KAAKq+B,eAAe6+D,wBACrB13B,GAAWk4B,IAGf19F,KAAKq+B,eAAe45B,QAEpB/B,GAAS2C,eAAenlC,EAAK8xC,EAASo4B,EAAQl3B,EAAOk3B,EAAQ59F,KAAKq+B,eAAe2zB,MAE7EhyD,KAAKq+B,eAAe4+D,cACpB/mC,GAAS2C,eAAenlC,EAAKgzC,EAAOk3B,EAAS,EAAI59F,KAAKoxB,SAAUs1C,EAAOk3B,EAAS7F,EAAgB/3F,KAAKq+B,eAAe2zB,QAIxHt+B,EAAIQ,YACJR,EAAIS,OAAOqxC,EAASo4B,GAEpBlqE,EAAIU,OAAOsyC,EAAOk3B,GACd59F,KAAKq+B,eAAe4+D,cAEpBvpE,EAAIU,OAAOsyC,EAAOk3B,EAAS7F,GAE/BrkE,EAAI1G,SACJ0G,EAAI6L,aAER7L,EAAIpgB,WCvKZ,SAAS,MAAKxR,GACN+7F,GAAan4D,OACb9jC,EAAI,wBAAyBE,GDwKrCg7F,GAAYp3D,OAAQ,EACpBo3D,GAAYtoF,UAAY,CACpBhI,OAAQhB,EAAK8D,MACblD,KAAM,GACNC,OAAQjC,EAAWsC,OACnBJ,MAAOjC,EAAUoD,QCpKd,MAAMowF,WAAqBxgE,EAU9Bl8B,YAAYm8B,GACRh8B,MAAMg8B,GACNt9B,KAAK89F,UAAYxgE,EAAWx6B,MAAQ,IAAIqJ,cACxCnM,KAAK+B,KAAOu7B,EAAWv7B,MAAQ,EAC/B/B,KAAKiP,OAAS,GACdjP,KAAKq+B,eAAiBh+B,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAKq+B,gBAAiB,CAAE0/D,gBAAiB,KAC/F,GAAE,sBAAuB/9F,KAAK89F,UAEvBx6F,sBACP,MAAO,eAGAkgE,oBACP,MAAO,CACHn9D,EAAG,CACCjF,KAAM,eACNmH,MAAO,IAEXq7D,EAAG,CACCxiE,KAAM,eACNmH,MAAO,IAEXmoB,EAAG,CACCtvB,KAAM,eACNmH,MAAO,IAEXpC,EAAG,CACC/E,KAAM,mBACNmH,MAAO,IAEXs7D,EAAG,CACCziE,KAAM,WACNmH,MAAO,IAEXkoB,EAAG,CACCrvB,KAAM,qBACNmH,MAAO,KAKnBg+B,QAAQxkC,GAEJ,OADA/B,KAAK+B,KAAOA,EACL/B,KAGXq8B,YACI,IAAI2hE,EAAc,EAoBlB,OAhBAh+F,KAAKiP,OAAS,GAEdjP,KAAK89F,SAASr3F,MAAM,IAAImyB,SAASqlE,IAE7B,MAAMtG,EAAakG,GAAar6B,OAAOy6B,GACvC,IAAKtG,EACD,MAAM,IAAI12F,EAAa,+BAAiCg9F,GAC5D,MAAM7xF,EAAO3K,EAAQzB,KAAKq+B,eAAe0/D,iBACnCtwE,EAAQ,IAAIG,EAAM+pE,EAAWv2F,KAAMgL,EAAM,CAAEylB,SAAU,aAE3D7xB,KAAKiP,OAAOof,KAAKZ,GACjBuwE,GAAerG,EAAWpvF,SAG9BvI,KAAKk3B,SAAS8mE,GACdh+F,KAAKs8B,cAAe,EACbt8B,KAGXyT,OACIzT,KAAK8T,cACL,MAAMpS,EAAI1B,KAAK68B,eACTl2B,EAAI3G,KAAK21B,aAAa2K,YAAYtgC,KAAK+B,MAAQ,GACrD,GAAE,uBAAwB/B,KAAK89F,UAC/B,IAAII,EAAWx8F,EACf1B,KAAKiP,OAAO2pB,SAAQ,CAACnL,EAAOvd,KACxB,MAAMiuF,EAAiBn+F,KAAK89F,SAAS5tF,GACrCud,EAAM+H,OAAOx1B,KAAKwT,eAAgB0qF,EAAUv3F,GAC5Cu3F,GAAYL,GAAar6B,OAAO26B,GAAgB51F,UAK5Ds1F,GAAan4D,OAAQ,EC3Gd,MAAM04D,WAAoB/gE,EAC7Bl8B,YAAYykE,EAAUC,GAClBvkE,MAAM,CAAEgtB,SAAU,MAClB,MAAMw2C,EAAgB,IAAIa,GAAcC,EAAUC,GAClD7lE,KAAKq+F,YAAcv5B,EAAcuB,UACjCrmE,KAAKk3B,SAASl3B,KAAKq+F,YAAY5wE,MAAM7e,aAAarG,OAElDvI,KAAK25B,cAAe,EAEbr2B,sBACP,MAAO,cAIXu4B,qBAAqBC,GAEjB,OAAO97B,KAEXq8B,YAEI,OADAr8B,KAAKs8B,cAAe,EACbt8B,KAEXyT,OACI,MAAMqhB,EAAQ90B,KAAK21B,aACbjC,EAAM1zB,KAAKwT,eACjBxT,KAAK8T,cACA9T,KAAKq+F,YAAY5wE,MAAMvZ,cACxBlU,KAAKq+F,YAAY5wE,MAAMtZ,WAAWuf,GAEtC1zB,KAAKq+F,YAAY5wE,MAAMoH,SAASC,GAChC90B,KAAKq+F,YAAY5wE,MAAMuH,UAAUF,EAAMwL,YAAY,GAAKxL,EAAMe,iBAC9D71B,KAAKq+F,YAAY5wE,MAAMmI,cAAc51B,KAAK68B,iBCvB3C,MAAMyhE,WAAuBzsF,EAMhC1Q,YAAYo9F,GACRj9F,QACIi9F,EAAa3xD,QACb5sC,KAAK4sC,MAAQ2xD,EAAa3xD,OAC1B2xD,EAAavB,OACbh9F,KAAKg9F,KAAOuB,EAAavB,MAC7Bh9F,KAAK+B,KAAO,EACZ/B,KAAKq+B,eAAiB,CAClBg8B,OAAO,EACPE,YAAa,EACbC,WAAY,EACZC,WAAY,EACZH,cAAe,GAGZh3D,sBACP,MAAO,iBAGXijC,QAAQxkC,GAEJ,OADA/B,KAAK+B,KAAOA,EACL/B,KAGX66D,SAASR,GAEL,OADAr6D,KAAKq+B,eAAeg8B,MAAQA,EACrBr6D,KAGXyT,OACI,MAAMigB,EAAM1zB,KAAKwT,eACjBxT,KAAK8T,cACL,MAAMnN,EAAK3G,KAAK4sC,OAAS5sC,KAAK4sC,MAAMjX,aAAasL,eAAejhC,KAAK+B,OAChE/B,KAAKg9F,MAAQh9F,KAAKg9F,KAAKrnE,aAAasL,eAAejhC,KAAK+B,OACzD,EAGEyjE,EAAWxlE,KAAK4sC,OAAS5sC,KAAK4sC,MAAM/P,gBAAoB78B,KAAKg9F,MAAQh9F,KAAKg9F,KAAKrnE,aAAasyC,gBAAmB,EAG/Gu2B,EAAUx+F,KAAKg9F,MAAQh9F,KAAKg9F,KAAKngE,eAAiB78B,KAAKg9F,KAAKjvE,WAAa,GAC1E/tB,KAAK4sC,OAAS5sC,KAAK4sC,MAAMjX,aAAauyC,aAAe,IACtD,EACJloE,KAAKq+B,eAAei8B,cAAgBkkC,EAASh5B,EAtDrD,YAAc1jE,GACNw8F,GAAe54D,OACf9jC,EAAI,0BAA2BE,GAqD/B,CAAE,qCAAsC0jE,EAAS,UAAWg5B,EAAQ,KAAM73F,GAC1EyzD,GAAQY,cAActnC,EAAK8xC,EAAS7+D,EAAG3G,KAAKq+B,iBCjBpD,SAAS,MAAKv8B,GACNu5F,GAAQ31D,OACR9jC,EAAI,mBAAoBE,GDmBhCw8F,GAAe54D,OAAQ,ECdhB,MAAM21D,GAQTl6F,YAAYwrB,EAAU,IAClB,GAAE,gBAAiBA,GACnB3sB,KAAK2sB,QAAU,CACXmI,MAAO,CACHiF,MAAO,IAEX+8B,SAAU,CACNF,UAAW,GACXruD,MAAO,IACPC,OAAQ,IACRquD,WAAY,QAEhB/pD,KAAMuuF,GAAQ7mF,WAElBxU,KAAKmzB,WAAWxG,GAWpBppB,wBAAwBqzD,EAAWruD,EAAQ,IAAKC,EAAS,KACrD,OAAO,IAAI6yF,GAAQ,CAAEvkC,SAAU,CAAEF,UAAAA,EAAWruD,MAAAA,EAAOC,OAAAA,KAEvD4qB,QACIpzB,KAAKy+F,QAAU,GACfz+F,KAAK0+F,QAAU,GACf1+F,KAAK2+F,OAAS,GACd3+F,KAAKorC,OAAS,GACdprC,KAAK80B,WAAQnzB,EAEjBwxB,WAAWxG,GACP3sB,KAAK2sB,QAAUtsB,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAK2sB,SAAUA,GAC9D3sB,KAAK4+F,eACL5+F,KAAKozB,QAETwrE,eACI,MAAM,UAAEhoC,EAAS,MAAEruD,EAAK,OAAEC,EAAM,WAAEquD,GAAe72D,KAAK2sB,QAAQmqC,SAC9D,GAAiB,MAAbF,EACA,OAEJ,GAAiB,IAAbA,EAEA,MADA,GAAE52D,MACI,IAAIiB,EAAa,gDAE3B,IAAIo1D,EAAUr2D,KAAK2sB,QAAQmqC,SAAST,QACpC,QAAgB10D,IAAZ00D,EAAuB,CAOnBA,EADAvF,GALSlkD,SAAS8D,eAAekmD,IAMvBV,GAASK,SAASC,OAGlBN,GAASK,SAASE,IAGpCz2D,KAAKyS,QAAUyjD,GAASc,aAAaJ,EAAWP,EAAS9tD,EAAOC,EAAQquD,GAE5E3iD,aACI,OAAOlU,KAAKyS,QAEhB0B,WAAW1B,GAEP,OADAzS,KAAKyS,QAAUA,EACRzS,KAEXw4B,WACI,OAAOx4B,KAAK80B,MAEhB+pE,YACI,OAAO7+F,KAAKorC,OAGhBq7B,MAAM/5C,GACF,MAAMya,EAAannC,KAAK2sB,QAAQmI,MAAMiF,MAChC6pC,EAAIvjE,OAAOwU,OAAO,CAAEnT,EAAG,EAAGiF,EAAG,EAAG4B,MAAOvI,KAAK2sB,QAAQmqC,SAASvuD,MAAqB,EAAb4+B,EAAkBxa,QAAS,CAAEs6C,yBAAuC,EAAb9/B,IAAsBza,GAClJoI,EAAQ,IAAI2xC,GAAM7C,EAAEliE,EAAGkiE,EAAEj9D,EAAGi9D,EAAEr7D,MAAOq7D,EAAEj3C,SAI7C,OAHA3sB,KAAK2+F,OAAOtwE,KAAKyG,GACjBA,EAAM3gB,WAAWnU,KAAKyS,SACtBzS,KAAK80B,MAAQA,EACNA,EAEX8nE,SAASlwE,GACL,MAAMya,EAAannC,KAAK2sB,QAAQmI,MAAMiF,MAChC6pC,EAAIvjE,OAAOwU,OAAO,CAAEnT,EAAG,EAAGiF,EAAG,EAAG4B,MAAOvI,KAAK2sB,QAAQmqC,SAASvuD,MAAqB,EAAb4+B,EAAkBxa,QAAS,CAAEs6C,yBAAuC,IAAb9/B,IAAsBza,GAClJoI,EAAQ,IAAI8nE,GAASh5B,EAAEliE,EAAGkiE,EAAEj9D,EAAGi9D,EAAEr7D,MAAOq7D,EAAEj3C,SAIhD,OAHA3sB,KAAK2+F,OAAOtwE,KAAKyG,GACjBA,EAAM3gB,WAAWnU,KAAKyS,SACtBzS,KAAK80B,MAAQA,EACNA,EAEXuU,UAAU/L,GACN,MAAMlG,EAAO,IAAIiS,EAAU/L,GAK3B,OAJIt9B,KAAK80B,OACLsC,EAAKvC,SAAS70B,KAAK80B,OACvBsC,EAAKjjB,WAAWnU,KAAKyS,SACrBzS,KAAKy+F,QAAQpwE,KAAK+I,GACXA,EAEX69D,UAAUxnE,EAAO6P,EAAY3Q,GACzB,MAAMyK,EAAO,IAAI69D,GAAUxnE,EAAO6P,EAAY3Q,GAK9C,OAJI3sB,KAAK80B,OACLsC,EAAKvC,SAAS70B,KAAK80B,OACvBsC,EAAKjjB,WAAWnU,KAAKyS,SACrBzS,KAAKy+F,QAAQpwE,KAAK+I,GACXA,EAEX6hE,WAAWlpF,EAAMutB,EAAY3Q,GACzB,MAAMyK,EAAO,IAAI6hE,GAAWlpF,EAAMutB,EAAY3Q,GAK9C,OAJI3sB,KAAK80B,OACLsC,EAAKvC,SAAS70B,KAAK80B,OACvBsC,EAAKjjB,WAAWnU,KAAKyS,SACrBzS,KAAKy+F,QAAQpwE,KAAK+I,GACXA,EAEXk9D,UAAUh3D,GACN,MAAMwhE,EAAY,IAAIxK,GAAUh3D,GAKhC,OAJIt9B,KAAK80B,OACLgqE,EAAUjqE,SAAS70B,KAAK80B,OAC5BgqE,EAAU3qF,WAAWnU,KAAKyS,SAC1BzS,KAAKy+F,QAAQpwE,KAAKywE,GACXA,EAEX57B,SAAS5lC,GACL,MAAMyhE,EAAW,IAAI77B,GAAS5lC,GAK9B,OAJIt9B,KAAK80B,OACLiqE,EAASlqE,SAAS70B,KAAK80B,OAC3BiqE,EAAS5qF,WAAWnU,KAAKyS,SACzBzS,KAAKy+F,QAAQpwE,KAAK0wE,GACXA,EAEX3S,QAAQ1/D,EAAS,IACb,MAAMsyE,EAAU,IAAI5S,GAAQ1/D,EAAO3c,MAKnC,OAJI/P,KAAK80B,OACLkqE,EAAQnqE,SAAS70B,KAAK80B,OAC1BkqE,EAAQ7qF,WAAWnU,KAAKyS,SACxBzS,KAAKy+F,QAAQpwE,KAAK2wE,GACXA,EAEX1S,SAAS5/D,GACL,MAAMk3C,EAAIvjE,OAAOwU,OAAO,CAAE9E,KAAM,SAAU4c,QAAS,CAC3CvgB,KAAM,UACNmuC,gBAAY54C,IACX+qB,GACHuyE,EAAW,IAAI3S,GAAS1oB,EAAE7zD,KAAM6zD,EAAEj3C,QAAQvgB,KAAMw3D,EAAEj3C,QAAQ4tB,YAKhE,OAJIv6C,KAAK80B,OACLmqE,EAASpqE,SAAS70B,KAAK80B,OAC3BmqE,EAAS9qF,WAAWnU,KAAKyS,SACzBzS,KAAKy+F,QAAQpwE,KAAK4wE,GACXA,EAEXb,YAAY1xE,GACR,MAAMk3C,EAAIvjE,OAAOwU,OAAO,CAAEg1C,KAAM,OAASn9B,GACnCwyE,EAAc,IAAId,GAAYx6B,EAAE/Z,MAKtC,OAJI7pD,KAAK80B,OACLoqE,EAAYrqE,SAAS70B,KAAK80B,OAC9BoqE,EAAY/qF,WAAWnU,KAAKyS,SAC5BzS,KAAKy+F,QAAQpwE,KAAK6wE,GACXA,EAEX9J,WAAW1oE,GACP,MAAMyyE,EAAa,IAAI/J,GAAW1oE,EAAOvsB,IAAKusB,EAAOgxC,UAAWhxC,EAAO4xC,UAKvE,OAJIt+D,KAAK80B,OACLqqE,EAAWtqE,SAAS70B,KAAK80B,OAC7BqqE,EAAWhrF,WAAWnU,KAAKyS,SAC3BzS,KAAKy+F,QAAQpwE,KAAK8wE,GACXA,EAEXvqD,QAAQtX,GACJ,MAAMlG,EAAO,IAAIwd,GAAQtX,GAKzB,OAJIt9B,KAAK80B,OACLsC,EAAKvC,SAAS70B,KAAK80B,OACvBsC,EAAKjjB,WAAWnU,KAAKyS,SACrBzS,KAAKy+F,QAAQpwE,KAAK+I,GACXA,EAEXya,UAAUvU,GACN,MAAMlG,EAAO,IAAIya,EAAUvU,GAI3B,OAHIt9B,KAAK80B,OACLsC,EAAKvC,SAAS70B,KAAK80B,OACvBsC,EAAKjjB,WAAWnU,KAAKyS,SACd2kB,EAEXmkC,eAAe7uC,GACX,MAAM0qB,EAAQ,IAAImkB,GAAe7uC,EAAOyB,MAAOzB,EAAOslB,MAEtD,OADAoF,EAAMjjC,WAAWnU,KAAKyS,SACf2kC,EAEXkkB,WAAW5uC,GACP,MAAMgjC,EAAQ,IAAI4L,GAAW5uC,EAAO3c,MAEpC,OADA2/C,EAAMv7C,WAAWnU,KAAKyS,SACfi9C,EAEXxV,WAAWxtB,GACP,MAAMk3C,EAAIvjE,OAAOwU,OAAO,CAAE/R,KAAM,IAAKs8F,SAAUplD,GAA4BtjB,OAAQ2oE,SAAUplD,GAA0Bc,QAAUruB,GAC3H6tB,EAAa,IAAIL,GAAW0pB,EAAE9gE,MAKpC,OAJAy3C,EAAWc,iBAAiBuoB,EAAEw7B,UAC9B7kD,EAAWU,yBAAyB2oB,EAAEy7B,UACtC9kD,EAAWnmC,QAAQwvD,EAAE92D,MACrBytC,EAAWpmC,WAAWnU,KAAKyS,SACpB8nC,EAEXkG,YAAY/zB,GACR,MAAMk3C,EAAIvjE,OAAOwU,OAAO,CAAEwqF,SAAU,MAAOD,SAAU,SAAUE,SAAS,EAAMn+C,aAAa,GAAQz0B,GAC7Fu1B,EAAc,IAAIxB,GAiBxB,OAhBAwB,EAAYsE,cAAcqd,EAAEw7B,UAC5Bn9C,EAAYoE,YAAYud,EAAEy7B,UAC1Bp9C,EAAYgC,iBAAiB2f,EAAE07B,SAC/Br9C,EAAYqC,eAAesf,EAAEziB,aAGD,iBAAjByiB,EAAE72D,YAAiD,iBAAf62D,EAAEj4D,SACjB,iBAAjBi4D,EAAE52D,WACTi1C,EAAY7tC,QAAQwvD,EAAE72D,WAAY62D,EAAEj4D,SAAUi4D,EAAE52D,YAEhDi1C,EAAY7tC,QAAQwvD,EAAE72D,WAAY62D,EAAEj4D,SAAU,IAEvB,iBAAfi4D,EAAEj4D,UACds2C,EAAYhtC,YAAY2uD,EAAEj4D,UAE9Bs2C,EAAY9tC,WAAWnU,KAAKyS,SACrBwvC,EAEXxF,aAAa/vB,GACT,MAAMk3C,EAAIvjE,OAAOwU,OAAO,CAAE9E,KAAM,KAAMqhB,SAAU,SAAW1E,GACrDkwB,EAAe,IAAIH,GAAamnB,EAAE7zD,MAGxC,OAFA6sC,EAAa7kB,YAAY6rC,EAAExyC,UAC3BwrB,EAAazoC,WAAWnU,KAAKyS,SACtBmqC,EAEXihD,aAAanxE,GACT,MAAMk3C,EAAIvjE,OAAOwU,OAAO,CAAE/R,KAAM,IAAKwrB,SAAU,IAAKsR,KAAM,EAAG79B,KAAM,GAAK2qB,GAClE5pB,EAAO,IAAI+6F,GAAa,CAC1B/6F,KAAM8gE,EAAE9gE,KACRf,KAAM6hE,EAAE7hE,KACRusB,SAAUs1C,EAAEt1C,SACZsR,KAAMgkC,EAAEhkC,OAMZ,OAJI5/B,KAAK80B,OACLhyB,EAAK+xB,SAAS70B,KAAK80B,OACvBhyB,EAAKqR,WAAWnU,KAAKyS,SACrBzS,KAAKy+F,QAAQpwE,KAAKvrB,GACXA,EAEXsmD,UAAU18B,GACN,MAAMk3C,EAAIvjE,OAAOwU,OAAO,CAAEs0C,OAAQ,IAAK/3B,SAAU,QAAU1E,GACrD28B,EAAY,IAAItB,GAAe6b,EAAEza,QAGvC,OAFAE,EAAUtxB,YAAY6rC,EAAExyC,UACxBi4B,EAAUl1C,WAAWnU,KAAKyS,SACnB42C,EAEX0O,aAAarrC,GACT,MAAM6yE,EAAe,IAAIxnC,GAAarrC,EAAOy8B,QAG7C,OAFAo2C,EAAaxnE,YAAYrL,EAAO0E,UAChCmuE,EAAaprF,WAAWnU,KAAKyS,SACtB8sF,EAEX9yC,cACI,OAAO,IAAIA,GAEf0O,kBACI,OAAO,IAAIA,GAEfm6B,iBAAiB5oE,GACb,MAAM8yE,EAAc/9F,EAAQirB,EAAO6oE,mBAAoB,sBACjDkK,EAAmB,IAAInK,GAAiBkK,EAAa9yE,GAG3D,OAFA+yE,EAAiBtrF,WAAWnU,KAAKyS,SACjCzS,KAAKy+F,QAAQpwE,KAAKoxE,GACXA,EAEX71C,MAAMl9B,GACF,MAAMk3C,EAAIvjE,OAAOwU,OAAO,CAAEg1C,KAAM,OAASn9B,GACnCoO,EAAQ,IAAI8uB,GAAMga,EAAE/Z,KAAM+Z,EAAEj3C,SAElC,OADA3sB,KAAKorC,OAAO/c,KAAKyM,GACVA,EAEXgwC,eAAep+C,GACX,MAAMqvE,EAAY,IAAIjxB,GAAep+C,EAAOw+C,UAAWx+C,EAAOy+C,cAG9D,OAFA4wB,EAAUx/B,QAAQ7vC,EAAO3c,MAAMoE,WAAWnU,KAAKyS,SAC/CzS,KAAKy+F,QAAQpwE,KAAK0tE,GACXA,EAEX3vC,UAAUz/B,GACN,OAAO,IAAIy/B,GAAUz/B,GAEzBuoD,OAAOxoD,GACH,MAAMk3C,EAAIvjE,OAAOwU,OAAO,CAAEsZ,MAAO,GAAIxB,QAAS,IAAMD,GAC9CuO,EAAS,IAAIi6C,GAAOtR,EAAEz1C,MAAOy1C,EAAEj3C,SAASxY,WAAWnU,KAAKyS,SAE9D,OADAzS,KAAKy+F,QAAQpwE,KAAK4M,GACXA,EAEX20C,KAAKljD,GACD,IAAI7gB,EAAIkF,EAAI+4B,EACZ,MAAMtI,EAAO,IAAIouC,GAAKljD,EAAOyB,MAAiC,QAAzBtiB,EAAK6gB,EAAOC,eAA4B,IAAP9gB,OAAgB,EAASA,EAAGw+B,UAAUl2B,WAAWnU,KAAKyS,SAG5H,OAFA+uB,EAAKo6C,iBAA8G,QAA5F9xC,EAA+B,QAAzB/4B,EAAK2b,EAAOC,eAA4B,IAAP5b,OAAgB,EAASA,EAAG2uF,2BAAwC,IAAP51D,EAAgBA,EAAK,IAChJ9pC,KAAKy+F,QAAQpwE,KAAKmT,GACXA,EAEX+rD,MAAM7gE,GACF,MAAMizE,EAAQ,IAAIpS,GAAM7gE,EAAO8gE,KAAM9gE,EAAO+gE,GAAI/gE,EAAOC,SAASxY,WAAWnU,KAAKyS,SAEhF,OADAzS,KAAKy+F,QAAQpwE,KAAKsxE,GACXA,EAEXngB,SAAS9yD,GACL,IAAI7gB,EACJ,MAAM+zF,EAAM,IAAIpgB,GAAS,CACrB5I,WAAYlqD,EAAO8gE,KACnBj5C,UAAW7nB,EAAO+gE,GAClB1N,cAAerzD,EAAOqzD,cACtBC,aAActzD,EAAOszD,cACtBtzD,EAAO5pB,MAKV,OAJ8B,QAAzB+I,EAAK6gB,EAAOC,eAA4B,IAAP9gB,OAAgB,EAASA,EAAGs4B,YAC9Dy7D,EAAI17D,aAAaxX,EAAOC,QAAQwX,WACpCy7D,EAAIzrF,WAAWnU,KAAKyS,SACpBzS,KAAKy+F,QAAQpwE,KAAKuxE,GACXA,EAEXzG,UAAUzsE,GACN,IAAI7gB,EAAIkF,EACR,MAAMhP,EAAO,IAAIo3F,GAAU,CACvBviB,WAAYlqD,EAAO8gE,KACnBj5C,UAAW7nB,EAAO+gE,GAClB1N,cAAerzD,EAAOqzD,cACtBC,aAActzD,EAAOszD,eAQzB,OAN8B,QAAzBn0E,EAAK6gB,EAAOC,eAA4B,IAAP9gB,OAAgB,EAASA,EAAG/I,OAC9Df,EAAKuiE,QAAQ53C,EAAOC,QAAQ7pB,OACF,QAAzBiO,EAAK2b,EAAOC,eAA4B,IAAP5b,OAAgB,EAASA,EAAGjE,OAC9D/K,EAAKqS,QAAQsY,EAAOC,QAAQ7f,MAChC/K,EAAKoS,WAAWnU,KAAKyS,SACrBzS,KAAKy+F,QAAQpwE,KAAKtsB,GACXA,EAEXu8F,eAAe5xE,GACX,MAAMmzE,EAAiB,IAAIvB,GAAe,CACtC1xD,MAAOlgB,EAAO8gE,KACdwP,KAAMtwE,EAAO+gE,KAQjB,OANI/gE,EAAOC,QAAQ5qB,MACf89F,EAAet5D,QAAQ7Z,EAAOC,QAAQ5qB,MACtC2qB,EAAOC,QAAQ0tC,OACfwlC,EAAehlC,SAASnuC,EAAOC,QAAQ0tC,OAC3CwlC,EAAe1rF,WAAWnU,KAAKyS,SAC/BzS,KAAKy+F,QAAQpwE,KAAKwxE,GACXA,EAEX/C,YAAYpwE,GACR,MAAMozE,EAAc,IAAIhD,GAAY,CAChClwD,MAAOlgB,EAAO8gE,KACdwP,KAAMtwE,EAAO+gE,GACb3qF,KAAM4pB,EAAO5pB,KACbqgE,YAAaz2C,EAAOC,QAAQw2C,YAC5B/xC,SAAU1E,EAAOC,QAAQyE,WAQ7B,OANI1E,EAAOC,QAAQ5qB,MACf+9F,EAAYv5D,QAAQ7Z,EAAOC,QAAQ5qB,MACnC2qB,EAAOC,QAAQ7f,MACfgzF,EAAY1rF,QAAQsY,EAAOC,QAAQ7f,MACvCgzF,EAAY3rF,WAAWnU,KAAKyS,SAC5BzS,KAAKy+F,QAAQpwE,KAAKyxE,GACXA,EAEX1E,OAAO1uE,EAAS,IACZA,EAAOjtB,QAAUO,KACjB,MAAM+/F,EAAS,IAAI3E,GAAO1uE,GAAQvY,WAAWnU,KAAKyS,SAElD,OADAzS,KAAK0+F,QAAQrwE,KAAK0xE,GACXA,EAaXlP,UAAUlkE,EAAU,IAEhB,OADAA,EAAQltB,QAAUO,KACX,IAAI6wF,GAAUlkE,GAEzBirE,aAAalrE,GACT,MAAMk3C,EAAIvjE,OAAOwU,OAAO,CAAEsZ,MAAO,GAAIxB,QAAS,CACtCrgB,MAAO,UACNogB,GACHwrE,EAAQ,IAAIN,GAAah0B,EAAEz1C,OAIjC,OAHA+pE,EAAM37B,QAAQq7B,GAAa53B,WAAW4D,EAAEj3C,QAAQrgB,QAChD4rF,EAAM/jF,WAAWnU,KAAKyS,SACtBzS,KAAKy+F,QAAQpwE,KAAK6pE,GACXA,EAEX/rC,aAAaz/B,GACT,MAAMk3C,EAAIvjE,OAAOwU,OAAO,CAAEsZ,MAAO,IAAMzB,GACjC0qB,EAAQ,IAAI+U,GAAayX,EAAEz1C,OAEjC,OADAipB,EAAMjjC,WAAWnU,KAAKyS,SACf2kC,EAGX3jC,OACI,MAAMigB,EAAM1zB,KAAKyS,QACjBzS,KAAK0+F,QAAQ9lE,SAASzyB,GAAMA,EAAEgO,WAAWuf,GAAK64B,WAC9CvsD,KAAK2+F,OAAO/lE,SAASzyB,GAAMA,EAAEgO,WAAWuf,GAAKjgB,SAC7CzT,KAAKorC,OAAOxS,SAASmzB,GAAMA,EAAE53C,WAAWuf,GAAKjgB,SAC7CzT,KAAKy+F,QAAQ7lE,SAASj4B,IACbA,EAAEkT,cACHlT,EAAEwT,WAAWuf,GAAKjgB,UAE1BzT,KAAK0+F,QAAQ9lE,SAASzyB,GAAMA,EAAEgO,WAAWuf,GAAKjgB,SAC9CzT,KAAKozB,SAIbioE,GAAQ31D,OAAQ,EAEhB21D,GAAQ7mF,UAAYnU,OAAOwU,OAAO,GAAIhD,EAAQ2C,WCzdvC,MAAMwrF,WAAqBnuF,EAa9B1Q,YAAYgtB,EAAOpe,GACfzO,QACAtB,KAAKy/E,SAAStxD,GACdnuB,KAAKigG,QAAUlwF,EACf/P,KAAKoxB,SAAW+E,EAASE,SAASS,MAClC92B,KAAKq+B,eAAiB,CAClB71B,OAAQ,GACR4pB,QAAS,EACT8tE,cAAe,EACfC,eAAgB,EAChBC,kBAAmB,EACnBC,iBAAkB,GAGf/8F,sBACP,MAAO,eAgBXC,4BAA4BmwB,EAAKmlB,EAAW1qB,EAAOpe,EAAMqhB,EAAUzE,GAC/D,IAAI9gB,EAAIkF,EACR,MAAMuvF,EAAMznD,EAAU0nD,cACtB,GAAW,MAAPD,EACA,MAAM,IAAIr/F,EAAa,eAAgB,+DAE3C,MAAMu/F,EAAaF,GAA2C,QAAnCz0F,EAAK8gB,EAAQ0zE,wBAAqC,IAAPx0F,EAAgBA,EAAK,GACrF40F,EAAaH,GAA4C,QAApCvvF,EAAK4b,EAAQyzE,yBAAsC,IAAPrvF,EAAgBA,EAAK,GACtF2vF,EAAkB,CACpBl4F,OAAQmkB,EAAQnkB,OAChB4pB,QAASzF,EAAQyF,QACjB8tE,cAAeM,EACfL,eAAgBM,EAChBL,kBAAmB,EACnBC,iBAAkB,GAEtB,IAAIL,GAAa,CACbppB,WAAYzoD,EAAMyoD,WAClBriC,UAAWpmB,EAAMomB,WAClBxkC,GACEoE,WAAWuf,GACXitE,iBAAiBD,GACjB3oE,YAAY3G,GACZ3d,OAETskB,YAAY3G,GAIR,OAHIA,IAAa+E,EAASE,SAASO,OAASxF,IAAa+E,EAASE,SAASS,QACvE92B,KAAKoxB,SAAWA,GAEbpxB,KAEX2gG,iBAAiBh0E,GAOb,OANsB,MAAlBA,EAAQnkB,QACW,MAAnBmkB,EAAQyF,SACiB,MAAzBzF,EAAQuzE,eACkB,MAA1BvzE,EAAQwzE,iBACRngG,KAAKq+B,eAAiB1R,GAEnB3sB,KAOXy/E,SAAStxD,GACL,IAAKA,EAAMyoD,aAAezoD,EAAMomB,UAC5B,MAAM,IAAItzC,EAAa,eAAgB,6DAK3C,OAHAjB,KAAKmuB,MAAQA,EACbnuB,KAAK42E,WAAazoD,EAAMyoD,WACxB52E,KAAKu0C,UAAYpmB,EAAMomB,UAChBv0C,KAEXqtF,cAAc3gE,GACV,MAAMgH,EAAM1zB,KAAKwT,eACjB,IAAIotF,EAAM5gG,KAAKq+B,eAAejM,QAAU,GACpCA,EAAU1F,EAAOyhE,QACjBnuF,KAAKoxB,WAAa+E,EAASE,SAASO,QACpCgqE,EAAa,GAANA,EACPxuE,EAAU1F,EAAOyhE,QAAUzhE,EAAOm0E,cAEtC,MAAMC,EAAU9gG,KAAKq+B,eAAe6hE,cAC9Ba,EAAU/gG,KAAKq+B,eAAe8hE,eAEpC,OADAzsE,EAAIQ,YACIl0B,KAAKigG,SACT,KAAKD,GAAajwF,KAAKixF,MACnBttE,EAAIS,OAAOzH,EAAO0hE,OAAS2S,EAAS3uE,EAAUwuE,GAC9CltE,EAAIU,OAAO1H,EAAOwhE,QAAU4S,EAAS1uE,EAAUpyB,KAAKq+B,eAAe71B,OAAS,EAAIo4F,GAChFltE,EAAIU,OAAO1H,EAAO0hE,OAAS2S,EAAS3uE,EAAUpyB,KAAKq+B,eAAe71B,OAASo4F,GAC3E,MACJ,KAAKZ,GAAajwF,KAAKkxF,QACnBvtE,EAAIS,OAAOzH,EAAOwhE,QAAU4S,EAAS1uE,EAAUwuE,GAC/CltE,EAAIU,OAAO1H,EAAO0hE,OAAS2S,EAAS3uE,EAAUpyB,KAAKq+B,eAAe71B,OAAS,EAAIo4F,GAC/EltE,EAAIU,OAAO1H,EAAOwhE,QAAU4S,EAAS1uE,EAAUpyB,KAAKq+B,eAAe71B,OAASo4F,GAMpFltE,EAAI1G,SACJ0G,EAAI6L,YAER9rB,OACIzT,KAAKwT,eACLxT,KAAK8T,cACL,MAAMooE,EAAYl8E,KAAK42E,WACjB9tB,EAAW9oD,KAAKu0C,UACtB,IAAK2nC,IAAcpzB,EACf,MAAM,IAAI7nD,EAAa,SAAU,0BACrC,MAAM2rC,EAAQsvC,EAAUp6C,mBAAmB9hC,KAAKoxB,SAAU,GACpDyb,EAAMic,EAAShnB,mBAAmB9hC,KAAKoxB,SAAU,GACvDpxB,KAAKqtF,cAAc,CACfa,QAASthD,EAAMlrC,EACf0sF,OAAQvhD,EAAInrC,EACZysF,QAASjS,EAAUvmD,aAAa3uB,OAASk1E,EAAUvmD,aAAa6O,YAChE6pD,OAAQvlC,EAASnzB,aAAa3uB,OAAS8hD,EAASnzB,aAAa6O,YAC7Dq8D,aAAc3kB,EAAUvmD,aAAa6O,eAIjDw7D,GAAajwF,KAAO,CAChBixF,MAAO,EACPC,QAAS,GCrJN,MAAMC,WAAiBxgB,GAgB1Bv/E,YAAYgtB,EAAOgW,GAGf,GAFA7iC,MAAM6sB,EAAO,QAERgW,EAAW,CACZ,IAAIg9D,EAAahzE,EAAMyoD,WAAWlhC,eAAe,GAAGnoB,KAC1B,iBAAf4zE,IACPA,EAAav+F,SAASu+F,EAAY,KAEtC,IAAIC,EAAYjzE,EAAMomB,UAAUmB,eAAe,GAAGnoB,KACzB,iBAAd6zE,IACPA,EAAYx+F,SAASw+F,EAAW,KAKhCj9D,EADA1gC,MAAM09F,IAAe19F,MAAM29F,GACfF,GAASG,SAGTF,EAAaC,EAAYF,GAASI,WAAaJ,GAASG,SAG5ErhG,KAAKmkC,UAAYA,EACjBnkC,KAAKq+B,eAAeqhD,IAAM,GAC1B1/E,KAAKq+B,eAAeshD,IAAM,GAC1B3/E,KAAKq+B,eAAejM,QAAU,GAC9BpyB,KAAKgV,YAEE1R,sBACP,MAAO,WAEA+9F,sBACP,OAAO,EAEAC,wBACP,OAAQ,EAEZ/9F,qBAAqB4qB,GACjB,OAAO,IAAI+yE,GAAS/yE,EAAO+yE,GAASG,UAExC99F,uBAAuB4qB,GACnB,OAAO,IAAI+yE,GAAS/yE,EAAO+yE,GAASI,YAExCphB,UAAUxzD,GACN,GAA+B,IAA3BA,EAAOyzD,SAASv8E,QAA0C,IAA1B8oB,EAAO0zD,QAAQx8E,OAC/C,MAAM,IAAI3C,EAAa,eAAgB,yBAE3C,MAAMyyB,EAAM1zB,KAAKwT,eACXuoE,EAAarvD,EAAOqvD,WACpBoE,EAAWzzD,EAAOyzD,SAClBE,EAAY3zD,EAAO2zD,UACnBl8C,EAAYzX,EAAOyX,UACzB,GAAIA,IAAc+8D,GAASG,UAAYl9D,IAAc+8D,GAASI,WAC1D,MAAM,IAAIrgG,EAAa,WAAY,2BAGvC,MAAM8+E,EAAgB//E,KAAKmuB,MAAM4xD,cACjC,IAAK,IAAIv5E,EAAI,EAAGA,EAAIu5E,EAAcn8E,SAAU4C,EAAG,CAC3C,MAAM+6F,EAAUphB,EAASJ,EAAcv5E,IAAMxG,KAAKq+B,eAAejM,QACjE,GAAI3uB,MAAM89F,GACN,MAAM,IAAItgG,EAAa,eAAgB,oCAE3CyyB,EAAIQ,YACJR,EAAIS,OAAO4nD,EAAYwlB,EAAU,EAAIp9D,GACrCzQ,EAAIU,OAAOisD,EAAWkhB,EAAU,EAAIp9D,GACpCzQ,EAAI6L,YACJ7L,EAAI1G,SAERhtB,KAAK8T,eAGbotF,GAAS1sF,UAAY,CACjBhI,OAAQhB,EAAK8D,MACblD,KAAM,GACNC,OAAQjC,EAAWmvC,KACnBjtC,MAAOjC,EAAUoD,QC7Fd,MAAM+zF,GAKTrgG,YAAYsgG,EAAe,mCACvBzhG,KAAK0hG,aAAe,GAEpB1hG,KAAK2hG,UAAUF,GAERG,mBACP,MAAO,CACHC,SAAU,0BACVC,OAAQ,0BACRC,MAAO,0BACP5c,GAAI,gCACJ6c,cAAe,uBAIvBC,cAAc7b,GACV,OAAO95D,EAAO2gB,cAAcm5C,GAAYn5D,UAM5C00E,UAAUF,GACFD,GAAOI,MAAMH,KACbA,EAAeD,GAAOI,MAAMH,IAEhCzhG,KAAK0hG,aAAe,GACpB,MAAMtwF,EAAOqwF,EAAah7F,MAAM,WAChC,GAAoB,IAAhB2K,EAAKxN,OACL,MAAM,IAAI3C,EAAa,eAAgB,0BAA0BwgG,KAErE,IAAK,IAAIj7F,EAAI,EAAGA,EAAI4K,EAAKxN,SAAU4C,EAC/BxG,KAAK0hG,aAAal7F,GAAKxG,KAAKiiG,cAAc7wF,EAAK5K,IAIvD07F,kBAAkBC,GACd,MAAMh8F,EAAI3C,OAAO2+F,GACjB,GAAIh8F,EAAI,GAAKA,EAAInG,KAAK0hG,aAAa99F,OAC/B,MAAM,IAAI3C,EAAa,eAAgB,uCAAuCjB,KAAK0hG,aAAa99F,UAAUu+F,KAE9G,OAAOniG,KAAK0hG,aAAav7F,EAAI,GAGjCi8F,gBAAgBC,EAASF,GACrB,MAAMG,EAActiG,KAAKkiG,kBAAkBC,GACrC97F,EAAI7C,OAAO6+F,GACjB,GAAIh8F,EAAI,EACJ,MAAM,IAAIpF,EAAa,eAAgB,oCAAoCohG,KAE/E,OAAOC,EAAcj8F,EAGzBk8F,eAAeF,EAASF,GACpB,MAAM70E,EAAYttB,KAAKoiG,gBAAgBC,EAASF,GAC1C1oF,EAASzW,KAAK2C,MAAM2nB,EAAY,IAChCtpB,EAAQspB,EAAY,GAC1B,MAAO,GAAGhB,EAAOk2E,cAAcx+F,MAAUyV,KCnEjD,IAAI,GAAwC,SAAUlP,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9G,GAAS,IAAM+G,EAAKL,EAAUM,KAAKhH,IAAW,MAAOrD,GAAKkK,EAAOlK,IACpF,SAASsK,EAASjH,GAAS,IAAM+G,EAAKL,EAAiB,MAAE1G,IAAW,MAAOrD,GAAKkK,EAAOlK,IACvF,SAASoK,EAAKG,GAJlB,IAAelH,EAIakH,EAAOC,KAAOP,EAAQM,EAAOlH,QAJ1CA,EAIyDkH,EAAOlH,MAJhDA,aAAiByG,EAAIzG,EAAQ,IAAIyG,GAAE,SAAUG,GAAWA,EAAQ5G,OAIToH,KAAKN,EAAWG,GAClGF,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,YAqF/D,MAAMy3F,GACEC,mBACP,MAAO,CAEHC,QC/FW,gBDiGXtwF,GChGM,2CDkGNuwF,KCjGQ,4BDoGLH,kBAKP,OAAOA,GA6BXl/F,uBAAuBs/F,GAEnB,MAAM90F,EAAQ80F,EAAUxxF,KAAK5F,GAAaD,EAAKsC,KAAKrC,KAGpD,OAFA6gB,EAAOC,iBAAmBxe,EAC1B6f,EAAMoI,kBAAoB6sE,EAAU3gG,KAAK,KAClC6L,EAMXxK,sBAAsBkI,EAAUq3F,GAC5B,OAAO,GAAU9iG,UAAM,OAAQ,GAAQ,gBAK3CuD,sBAEI,OADc+oB,EAAOC,iBACRlb,KAAKvE,GAASA,EAAK4B,YAEzBsgB,iCACP,OAAO1C,EAAO0C,oBAEPA,+BAAoBhrB,GAC3BsoB,EAAO0C,oBAAsBhrB,EAEtB6pB,kCACP,OAAOvB,EAAOuB,qBAEPA,gCAAqB7pB,GAC5BsoB,EAAOuB,qBAAuB7pB,EAEvBuR,wBACP,OAAO+W,EAAO/W,WAEPA,sBAAWvR,GAClBsoB,EAAO/W,WAAavR,EAEborB,kCACP,OAAO9C,EAAO8C,qBAEPA,gCAAqBprB,GAC5BsoB,EAAO8C,qBAAuBprB,EAEvBqrB,iCACP,OAAO/C,EAAO+C,oBAEPA,+BAAoBrrB,GAC3BsoB,EAAO+C,oBAAsBrrB,EAEtBmrB,kCACP,OAAO7C,EAAO6C,qBAEPA,gCAAqBnrB,GAC5BsoB,EAAO6C,qBAAuBnrB,EAEvBkrB,yBACP,OAAO5C,EAAO4C,YAEPA,uBAAYlrB,GACnBsoB,EAAO4C,YAAclrB,EAEdirB,wBACP,OAAO3C,EAAO2C,WAEPA,sBAAWjrB,GAClBsoB,EAAO2C,WAAajrB,EAEb2sB,qBACP,OAAOrE,EAAOqE,QAEPpB,2BACP,OAAOjD,EAAOiD,cAEPQ,qBACP,OAAOzD,EAAOyD,QAElBxsB,oBAAoB0qB,GAChB,OAAO3B,EAAOuxC,aAAa5vC,GAE/B1qB,uBAAuB0qB,GACnB,OAAO3B,EAAOy2E,gBAAgB90E,GAElC1qB,0BACI,OAAO+oB,EAAO02E,mBAElBz/F,sBAAsBipB,GAClB,OAAOF,EAAOS,eAAeP,GAGjCjpB,qBAAqBpD,EAAKqsB,EAAME,GAC5B,OAAOJ,EAAO2gB,cAAc9sC,EAAKqsB,EAAME,GAE3CnpB,uBAAuB+qB,GACnB,OAAOhC,EAAOyT,gBAAgBzR,IAGtCm0E,GAAKnnC,WAAaA,GAClBmnC,GAAKvoD,WAAaA,GAClBuoD,GAAKhmD,aAAeA,GACpBgmD,GAAK3jC,QAAUA,GACf2jC,GAAKrW,QAAUA,GACfqW,GAAK7yB,KAAOA,GACZ6yB,GAAK/jD,KAAOA,GACZ+jD,GAAK/7F,YAAcA,EACnB+7F,GAAK16F,uBAAyBA,EAC9B06F,GAAKvxC,cAAgBA,GACrBuxC,GAAKhiD,YAAcA,GACnBgiD,GAAKrmC,KAAOA,GACZqmC,GAAKnW,SAAWA,GAChBmW,GAAKhW,UAAYA,GACjBgW,GAAKlV,MAAQA,GACbkV,GAAK7uD,IAAMA,GACX6uD,GAAK5R,UAAYA,GACjB4R,GAAK5wF,QAAUA,EACf4wF,GAAKpH,QAAUA,GACfoH,GAAKj3F,KAAOA,EACZi3F,GAAKr2C,UAAYA,GACjBq2C,GAAKv/F,SAAWA,EAChBu/F,GAAK16C,eAAiBA,GACtB06C,GAAKnO,UAAYA,GACjBmO,GAAK70E,MAAQA,EACb60E,GAAKxN,UAAYA,GACjBwN,GAAK5wD,UAAYA,EACjB4wD,GAAKlnC,eAAiBA,GACtBknC,GAAKQ,aE3PE,cAA2BruD,GACnBtxC,sBACP,MAAO,eAEXnC,YAAYm8B,GACRh8B,MAAMg8B,GAAY,GAClBt9B,KAAKq+B,eAAiBh+B,OAAOwU,OAAOxU,OAAOwU,OAAO,GAAI7U,KAAKq+B,gBAAiB,CAExEjM,QAAS,GAET5E,MAAO,GAEP1gB,KAAM,SAAStB,EAAKiB,eACxBzM,KAAKq1C,gBF+ObotD,GAAKS,WGhQE,MACH/hG,YAAYhB,GACRH,KAAKkrF,MAAQ,IAAI1J,GACjBxhF,KAAKmjG,OAAOhjG,GAEhBgjG,OAAOhjG,GAGH,OAFAH,KAAKG,IAAMA,EACXH,KAAKozB,QACEpzB,KAEXojG,SACI,OAAOpjG,KAAKG,IAEhBizB,QACIpzB,KAAKoP,SAAWpP,KAAKkrF,MAAM7E,YAAYrmF,KAAKG,KAC5CH,KAAKsmF,UAAYtmF,KAAKoP,SAAS5P,KAC3BQ,KAAKoP,SAAS6I,aACdjY,KAAKsmF,WAAatmF,KAAKoP,SAAS6I,YAEpC,IAD0BupE,GAAMiD,WAAWzkF,KAAKoP,SAASW,MAErD,MAAM,IAAI9O,EAAa,eAAgB,yBAAyBjB,KAAKG,OAEzEH,KAAKwtB,MAAQxtB,KAAKkrF,MAAM9D,cAAcpnF,KAAKkrF,MAAM3E,aAAavmF,KAAKsmF,WAAY9E,GAAMiD,WAAWzkF,KAAKoP,SAASW,OAC9G/P,KAAKgoF,SAAW,GAChBhoF,KAAKqjG,gBAAkB,GACvBrjG,KAAKsjG,wBAA0B,GAC/B,MAAMvb,EAAevG,GAAMK,aAAa7hF,KAAKoP,SAAS5P,MACtD,IAAK,IAAIgH,EAAI,EAAGA,EAAIg7E,GAAMG,MAAM/9E,SAAU4C,EAAG,CACzC,MAAM0J,GAAS63E,EAAevhF,GAAKg7E,GAAMG,MAAM/9E,OACzCqkF,EAAWzG,GAAMG,MAAMzxE,GACvBg4E,EAAWloF,KAAKkrF,MAAMnE,oBAAoBkB,EAAUjoF,KAAKwtB,MAAMhnB,IACrExG,KAAKgoF,SAASC,GAAYC,EAC1BloF,KAAKqjG,gBAAgBrjG,KAAKwtB,MAAMhnB,IAAM0hF,EACtCloF,KAAKsjG,wBAAwBtjG,KAAKwtB,MAAMhnB,IAAM0hF,EAElD,OAAOloF,KAEXujG,cAAcpjG,GACV,MAAMX,EAAOQ,KAAKkrF,MAAM7E,YAAYlmF,GAAKX,KACnCmzB,EAAQ3yB,KAAKkrF,MAAM/E,aAAanmF,KAAKgoF,SAASxoF,IACpD,MAAO,CACH43B,KAAMp3B,KAAKgoF,SAASxoF,GACpByY,WAAY0a,EAAM1a,YAG1BurF,WAAWpsE,GACPA,EAAOA,EAAKjrB,cACZ,MAAMwmB,EAAQ3yB,KAAKkrF,MAAM/E,aAAa/uD,GAEhCqsE,EAAYzjG,KAAKgoF,SAASr1D,EAAMnzB,MAChCkkG,EAAW1jG,KAAKkrF,MAAM/E,aAAasd,GACzC,GAAIA,IAAcrsE,EACd,MAAO,CACHA,KAAMqsE,EACNxrF,WAAY0a,EAAM1a,WAClB0rF,QAAQ,GAIhB,MAAMC,EAAY5jG,KAAKqjG,gBAAgBrjG,KAAKkrF,MAAM3E,aAAanvD,IAC/D,GAAiB,MAAbwsE,EACA,MAAO,CACHxsE,KAAMwsE,EACN3rF,WAAYjY,KAAKkrF,MAAM/E,aAAayd,GAAW3rF,WAC/C0rF,QAAQ,GAIhB,MAAME,EAAoB7jG,KAAKsjG,wBAAwBtjG,KAAKkrF,MAAM3E,aAAanvD,IAC/E,OAAyB,MAArBysE,GACA7jG,KAAKgoF,SAAS0b,EAASlkG,MAAQqkG,SACxB7jG,KAAKqjG,gBAAgBrjG,KAAKkrF,MAAM3E,aAAakd,IACpDzjG,KAAKqjG,gBAAgBrjG,KAAKkrF,MAAM3E,aAAanvD,IAASysE,EAC/C,CACHzsE,KAAMysE,EACN5rF,WAAYjY,KAAKkrF,MAAM/E,aAAa0d,GAAmB5rF,WACvD0rF,QAAQ,IAIZD,EAASlkG,OAAS43B,UACXp3B,KAAKqjG,gBAAgBrjG,KAAKkrF,MAAM3E,aAAavmF,KAAKgoF,SAASr1D,EAAMnzB,QACxEQ,KAAKqjG,gBAAgBrjG,KAAKkrF,MAAM3E,aAAamd,EAASlkG,OAASkkG,EAASlkG,KACxEQ,KAAKgoF,SAAS0b,EAASlkG,MAAQkkG,EAASlkG,KACjC,CACH43B,KAAMssE,EAASlkG,KACfyY,gBAAYtW,EACZgiG,QAAQ,YAIT3jG,KAAKqjG,gBAAgBrjG,KAAKkrF,MAAM3E,aAAavmF,KAAKgoF,SAASr1D,EAAMnzB,QACxEQ,KAAKqjG,gBAAgBrjG,KAAKkrF,MAAM3E,aAAanvD,IAASA,SAC/Cp3B,KAAKgoF,SAAS0b,EAASlkG,MAC9BQ,KAAKgoF,SAAS0b,EAASlkG,MAAQ43B,EACxB,CACHA,KAAAA,EACAnf,WAAY0a,EAAM1a,WAClB0rF,QAAQ,MH+JpBlB,GAAK7lC,aAAeA,GACpB6lC,GAAKrN,WAAaA,GAClBqN,GAAKtsE,SAAWA,EAChBssE,GAAKtnC,gBAAkBA,GACvBsnC,GAAKnN,iBAAmBA,GACxBmN,GAAKjhB,MAAQA,GACbihB,GAAKplE,KAAOA,EACZolE,GAAK58D,SAAWA,EAChB48D,GAAKt2C,aAAeA,GACpBs2C,GAAKh0C,SAAWA,GAChBg0C,GAAKhyC,YAAcA,GACnBgyC,GAAK/T,OAASA,GACd+T,GAAK7K,aAAeA,GACpB6K,GAAKxyF,SAAWA,EAChBwyF,GAAKzpE,cAAgBA,EACrBypE,GAAKvsC,SAAWA,GAChBusC,GAAKxJ,WAAaA,GAClBwJ,GAAKzhC,WAAaA,GAClByhC,GAAKh8B,MAAQA,GACbg8B,GAAK33B,eAAiBA,GACtB23B,GAAKzC,aAAeA,GACpByC,GAAKtJ,UAAYA,GACjBsJ,GAAK5mC,cAAgBA,GACrB4mC,GAAKp5D,UAAYA,EACjBo5D,GAAK5/B,WAAaA,GAClB4/B,GAAKr+B,UAAYA,GACjBq+B,GAAKjjB,SAAWA,GAChBijB,GAAK3/D,KAAOA,EACZ2/D,GAAK1qC,aAAeA,GACpB0qC,GAAK3pC,OAASA,GACd2pC,GAAKlvC,WAAaA,GAClBkvC,GAAKrH,OAASA,GACdqH,GAAK7tD,QAAUA,GACf6tD,GAAKvB,SAAWA,GAChBuB,GAAK7F,SAAWA,GAChB6F,GAAK/hB,OAASA,GACd+hB,GAAK3F,YAAcA,GACnB2F,GAAK5E,aAAeA,GACpB4E,GAAK9qD,cAAgBA,GACrB8qD,GAAKv/B,SAAWA,GAChBu/B,GAAKh2C,YAAcA,GACnBg2C,GAAK98B,cAAgBA,GACrB88B,GAAKrE,YAAcA,GACnBqE,GAAKqB,QI1SE,cAAsB3tE,EAIzBh1B,YAAYyU,GACRtU,QACAtB,KAAK4V,IAAMA,EACX5V,KAAKoxB,SAAW+E,EAASE,SAASK,OAClC12B,KAAKoB,KAAO,WAEZpB,KAAK+jG,gBAAkB,EACvB/jG,KAAKgkG,mBAAqB,EAEnB1gG,sBACP,MAAO,UAGXmQ,OACI,MAAMigB,EAAM1zB,KAAKwT,eACX4jB,EAAOp3B,KAAKq3B,oBAClBr3B,KAAK8T,cACL,MAAM+2B,EAAgBzT,EAAKkL,mBAE3B,IAAI5gC,EADU01B,EAAK0K,mBAAmB9hC,KAAKoxB,SAAUpxB,KAAKkQ,OAC5CxO,EACd,MAAM8jF,EAAK5zC,EAAYxa,GACjB5J,EAAQg4D,EAAK3zC,EAAUC,MAAQ,EAC/BjgB,EAAW,YAAW2zD,EAAK,QAAU,WACrC/+C,EAAYna,EAAO+V,mBACzB,IAAI4hE,EAAYx9D,EAAUv3B,aAAa,GAAG2iB,aAAsBgZ,EAEhEo5D,GAAajkG,KAAK+jG,gBAClB,MAAMv7F,EAASxI,KAAK4V,IAAMquF,EAC1B,IAAIt9F,EAAIywB,EAAKmL,iBAAiB0C,MAAQz8B,EAElC7B,GADAkkC,EAAgB,EACXpE,EAAUv3B,aAAa,GAAG2iB,qBAA8BrE,EAGxDiZ,EAAUv3B,aAAa,GAAG2iB,mBAA4BrE,EAE/D,MAAMq+D,EAAYplD,EAAUv3B,aAAa,GAAG2iB,WAC5CnwB,GAAK+kC,EAAUv3B,aAAa,GAAG2iB,gBAAuBgZ,IAAkB/H,EAAKe,GAAK,KAAO,UACzF,IAAK,IAAIr9B,EAAI,EAAGA,EAAIxG,KAAK4V,MAAOpP,EAC5BonB,EAAM2Z,YAAY7T,EAAKhyB,EAAGiF,EAAGklF,EAAW7rF,KAAKoB,KAAM,CAAEywB,SAAAA,EAAUrE,MAAOxtB,KAAKgkG,qBAC3Er9F,GAAKs9F,IJgQjBxB,GAAKjB,OAASA,GACdiB,GAAKvtB,OAASA,GACdutB,GAAKroC,QAAUA,GACfqoC,GAAKnE,eAAiBA,GACtBmE,GAAK74C,MAAQA,GACb64C,GAAKj+B,MAAQA,GAEbi+B,GAAK1jC,YAAcA,GACnB0jC,GAAK/wE,iBAAmBA,EKvTjB,MAAM,GAUTnuB,qBAAqB+pE,EAAK42B,EAAKC,GAC3B,GAAI72B,EAAI1pE,OAAS,EAAG,CAChB,MAAMwgG,EAAS,GACf,IAAIC,EACJ/2B,EAAIpgC,KAAKg3D,GACT,IAAK,IAAI19F,EAAI,EAAGA,EAAI8mE,EAAI1pE,SAAU4C,EACpB,IAANA,GAAY29F,EAAG72B,EAAI9mE,GAAI69F,IACvBD,EAAO/1E,KAAKi/C,EAAI9mE,IAEpB69F,EAAO/2B,EAAI9mE,GAEf,OAAO49F,EAGP,OAAO92B,EAKf/pE,gBAAgB+pE,EAAK1sE,GACjB,IAAI4F,EAAI8mE,EAAI1pE,OACZ,KAAO4C,KACH,GAAI8mE,EAAI9mE,KAAO5F,EACX,OAAO,EAGf,OAAO,EAGX2C,wBAAwB+gG,GACpB,IAAKA,EACD,MAAM,IAAIrjG,EAAa,cAAe,4BAA8BqjG,GAExE,MAAMjzC,EAASzkD,SAAS8D,eAAe4zF,GACvC,IAAMjzC,IAAUA,EAAOn9C,WACnB,MAAM,IAAIjT,EAAa,0BAA2B,8CAEtD,OAAOowD,EAAOn9C,WAAW,MAI7B3Q,iBAAiB4C,EAAGE,GAChB,MAAMk+F,GAAa,IAAIC,MAAOC,UAC9Bp+F,IAEAzE,EAAIuE,GADY,IAAIq+F,MAAOC,UAAYF,EACtB,MAGrBhhG,oBAEI,OADY,IAAIrC,OACLoB,OAGnB,GAAImgG,KAAOA,GCpEJ,MAAMiC,GAAa,CACtB31F,WAAY,IACZhC,WAAY,gBACZkC,OAAQ,CACJ01F,oBAAqB,CACjBrxE,MAAO,EACPC,MAAO,OACPC,GAAI,IACJpzB,EAAG,mGAEPwkG,oBAAqB,CACjBtxE,MAAO,EACPC,MAAO,OACPC,GAAI,IACJpzB,EAAG,kDAEPykG,4BAA6B,CACzBvxE,OAAQ,MACRC,MAAO,SACPC,GAAI,IACJpzB,EAAG,+wCAEP0kG,qBAAsB,CAClBxxE,OAAQ,SACRC,MAAO,SACPC,GAAI,IACJpzB,EAAG,q6BAEP2kG,6BAA8B,CAC1BzxE,OAAQ,SACRC,MAAO,WACPC,GAAI,IACJpzB,EAAG,skDAEP4kG,gBAAiB,CACb1xE,OAAQ,GACRC,MAAO,IACPC,GAAI,IACJpzB,EAAG,kMAEP6kG,eAAgB,CACZ3xE,OAAQ,UACRC,MAAO,SACPC,GAAI,IACJpzB,EAAG,mvBAEP8kG,yBAA0B,CACtB5xE,OAAQ,SACRC,MAAO,SACPC,GAAI,IACJpzB,EAAG,23EAEP+kG,yBAA0B,CACtB7xE,MAAO,EACPC,MAAO,OACPC,GAAI,IACJpzB,EAAG,qoGAEPglG,yBAA0B,CACtB9xE,MAAO,EACPC,MAAO,OACPC,GAAI,IACJpzB,EAAG,4gDAEPilG,qBAAsB,CAClB/xE,MAAO,EACPC,MAAO,OACPC,GAAI,IACJpzB,EAAG,kDAEPklG,qBAAsB,CAClBhyE,MAAO,EACPC,MAAO,OACPC,GAAI,IACJpzB,EAAG,oGC1EFmlG,GAAgB,CACzB75F,KAAM,gBACN85F,OAAO,EACPv2F,OAAQ,ICHL,MAAMw2F,GAAe,CACxBx2F,OAAQ,CACJy2F,WAAY,CACRpyE,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,6WAEPwlG,cAAe,CACXtyE,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,EACPnzB,GAAI,IACJpzB,EAAG,scAEPylG,YAAa,CACTvyE,MAAO,EACPC,MAAO,mBACPoyE,MAAO,iBACPh/C,MAAO,mBACPnzB,GAAI,mBACJpzB,EAAG,gLAEP0lG,eAAgB,CACZxyE,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,smBAEPqjE,MAAO,CACHnwC,MAAO,EACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,u0DAEP0jE,KAAM,CACFxwC,MAAO,EACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJpzB,EAAG,mrDAEP2lG,MAAO,CACHzyE,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJpzB,EAAG,87DAEP4lG,MAAO,CACH1yE,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,KACJpzB,EAAG,soFAEP6lG,MAAO,CACH3yE,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,qqCAEP8lG,yBAA0B,CACtB5yE,MAAO,EACPC,MAAO,mBACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,ytBAEP,iBAAkB,CACdkzB,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,KACJpzB,EAAG,u3EAEP+lG,SAAU,CACN7yE,MAAO,GACPC,MAAO,IACPoyE,OAAQ,iBACRh/C,MAAO,IACPnzB,GAAI,iBACJpzB,EAAG,ooBAEPgmG,SAAU,CACN9yE,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,2gBAEPimG,SAAU,CACN/yE,MAAO,GACPC,MAAO,kBACPoyE,OAAQ,kBACRh/C,MAAO,IACPnzB,GAAI,iBACJpzB,EAAG,wnCAEPkmG,SAAU,CACNhzE,MAAO,mBACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,4iCAEPmmG,SAAU,CACNjzE,MAAO,GACPC,MAAO,kBACPoyE,OAAQ,mBACRh/C,MAAO,mBACPnzB,GAAI,kBACJpzB,EAAG,kkCAEPomG,SAAU,CACNlzE,MAAO,mBACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,46BAEPqmG,SAAU,CACNnzE,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,w7BAEPsmG,SAAU,CACNpzE,MAAO,iBACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,8mBAEPumG,SAAU,CACNrzE,MAAO,GACPC,MAAO,mBACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,w/BAEPwmG,SAAU,CACNtzE,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,k2BAEPymG,cAAe,CACXvzE,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,mBACPnzB,GAAI,iBACJpzB,EAAG,g3BAEP0mG,iBAAkB,CACdxzE,MAAO,GACPC,MAAO,IACPoyE,OAAQ,kBACRh/C,MAAO,IACPnzB,GAAI,mBACJpzB,EAAG,wwDAEP2mG,YAAa,CACTzzE,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,mwBAEP4mG,iBAAkB,CACd1zE,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,uuBAEP6mG,aAAc,CACV3zE,MAAO,EACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,GACPnzB,GAAI,IACJpzB,EAAG,kRAEP8mG,mBAAoB,CAChB5zE,MAAO,EACPC,MAAO,mBACPoyE,OAAQ,kBACRh/C,MAAO,IACPnzB,GAAI,mBACJpzB,EAAG,gfAEP+mG,wBAAyB,CACrB7zE,MAAO,EACPC,MAAO,kBACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,+bAEPgnG,kBAAmB,CACf9zE,MAAO,kBACPC,MAAO,kBACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,KACJpzB,EAAG,qhBAEPinG,uBAAwB,CACpB/zE,MAAO,EACPC,MAAO,mBACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,oZAEPknG,oBAAqB,CACjBh0E,OAAQ,kBACRC,MAAO,SACPoyE,OAAQ,mBACRh/C,MAAO,IACPnzB,GAAI,kBACJpzB,EAAG,u3DAEPmnG,cAAe,CACXj0E,MAAO,EACPC,MAAO,mBACPoyE,OAAQ,mBACRh/C,MAAO,IACPnzB,GAAI,mBACJpzB,EAAG,weAEPonG,aAAc,CACVl0E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,wbAEPqnG,cAAe,CACXn0E,MAAO,EACPC,MAAO,mBACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,gMAEPsnG,eAAgB,CACZp0E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,kBACRh/C,MAAO,IACPnzB,GAAI,kBACJpzB,EAAG,wpCAEPunG,cAAe,CACXr0E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,mBACRh/C,MAAO,IACPnzB,GAAI,mBACJpzB,EAAG,kjCAEPwnG,eAAgB,CACZt0E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,8rBAEPynG,gBAAiB,CACbv0E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,mBACPnzB,GAAI,mBACJpzB,EAAG,2sBAEP0nG,wBAAyB,CACrBx0E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,ieAEP2nG,uBAAwB,CACpBz0E,MAAO,EACPC,MAAO,kBACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,oeAEP4nG,wBAAyB,CACrB10E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,ySAEP6nG,qBAAsB,CAClB30E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,ggBAEP8nG,oBAAqB,CACjB50E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,glBAEP+nG,qBAAsB,CAClB70E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,2TAEPukG,oBAAqB,CACjBrxE,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,qwBAEPwkG,oBAAqB,CACjBtxE,MAAO,EACPC,MAAO,IACPoyE,OAAQ,mBACRh/C,MAAO,mBACPnzB,GAAI,kBACJpzB,EAAG,yUAEPgoG,oBAAqB,CACjB90E,OAAQ,gBACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,ivBAEPioG,yBAA0B,CACtB/0E,OAAQ,GACRC,MAAO,GACPoyE,OAAQ,mBACRh/C,MAAO,IACPnzB,GAAI,kBACJpzB,EAAG,wYAEPkoG,wBAAyB,CACrBh1E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,sWAEPmoG,gBAAiB,CACbj1E,MAAO,EACPC,MAAO,GACPoyE,OAAQ,GACRh/C,MAAO,GACPnzB,GAAI,IACJpzB,EAAG,8PAEPooG,SAAU,CACNl1E,OAAQ,IACRC,MAAO,mBACPoyE,OAAQ,GACRh/C,MAAO,GACPnzB,GAAI,IACJpzB,EAAG,qUAEPqoG,UAAW,CACPn1E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,EACPnzB,GAAI,IACJpzB,EAAG,2lBAEPsoG,YAAa,CACTp1E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,8hBAEPuoG,WAAY,CACRr1E,MAAO,EACPC,MAAO,kBACPoyE,OAAQ,kBACRh/C,MAAO,EACPnzB,GAAI,kBACJpzB,EAAG,0vBAEPwoG,aAAc,CACVt1E,MAAO,EACPC,MAAO,kBACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,+pBAEPyoG,WAAY,CACRv1E,OAAQ,mBACRC,MAAO,kBACPoyE,OAAQ,kBACRh/C,MAAO,kBACPnzB,GAAI,kBACJpzB,EAAG,0gCAEP0oG,aAAc,CACVx1E,OAAQ,kBACRC,MAAO,mBACPoyE,OAAQ,mBACRh/C,MAAO,kBACPnzB,GAAI,kBACJpzB,EAAG,m7BAEP2oG,WAAY,CACRz1E,OAAQ,EACRC,MAAO,IACPoyE,OAAQ,kBACRh/C,MAAO,IACPnzB,GAAI,mBACJpzB,EAAG,q+CAEP4oG,aAAc,CACV11E,OAAQ,EACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,kBACPnzB,GAAI,mBACJpzB,EAAG,q5CAEP6oG,YAAa,CACT31E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,KACJpzB,EAAG,yhDAEP8oG,cAAe,CACX51E,OAAQ,kBACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,KACJpzB,EAAG,4+CAEP+oG,eAAgB,CACZ71E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,ipBAEPgpG,kBAAmB,CACf91E,MAAO,EACPC,MAAO,MACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,+xBAEPipG,gBAAiB,CACb/1E,OAAQ,GACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,sgDAEPkpG,sBAAuB,CACnBh2E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,msBAEPmpG,qBAAsB,CAClBj2E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,4yCAEPopG,qBAAsB,CAClBl2E,MAAO,EACPC,MAAO,mBACPoyE,OAAQ,IACRh/C,MAAO,kBACPnzB,GAAI,kBACJpzB,EAAG,oYAEPqpG,sBAAuB,CACnBn2E,OAAQ,kBACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,yYAEPspG,+BAAgC,CAC5Bp2E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,0qBAEPupG,0CAA2C,CACvCr2E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,q2CAEPwpG,gCAAiC,CAC7Bt2E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,w3BAEPypG,sCAAuC,CACnCv2E,OAAQ,GACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,87DAEPykG,4BAA6B,CACzBvxE,MAAO,mBACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,kBACPnzB,GAAI,kBACJpzB,EAAG,glCAEP0kG,qBAAsB,CAClBxxE,MAAO,mBACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,47BAEP0pG,oBAAqB,CACjBx2E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,w3BAEP2kG,6BAA8B,CAC1BzxE,OAAQ,mBACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,4wCAEP4kG,gBAAiB,CACb1xE,MAAO,EACPC,MAAO,IACPoyE,OAAQ,kBACRh/C,MAAO,IACPnzB,GAAI,kBACJpzB,EAAG,idAEP6kG,eAAgB,CACZ3xE,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,kpCAEP2pG,iBAAkB,CACdz2E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,qdAEP4pG,iBAAkB,CACd12E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,EACPnzB,GAAI,IACJpzB,EAAG,+fAEP6pG,iBAAkB,CACd32E,MAAO,mBACPC,MAAO,kBACPoyE,MAAO,EACPh/C,MAAO,GACPnzB,GAAI,GACJpzB,EAAG,yTAEP8pG,iBAAkB,CACd52E,MAAO,mBACPC,MAAO,kBACPoyE,OAAQ,GACRh/C,OAAQ,EACRnzB,GAAI,GACJpzB,EAAG,6WAEP+pG,mBAAoB,CAChB72E,MAAO,mBACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,wOAEPgqG,mBAAoB,CAChB92E,MAAO,mBACPC,MAAO,mBACPoyE,OAAQ,IACRh/C,MAAO,EACPnzB,GAAI,IACJpzB,EAAG,4QAEPiqG,wBAAyB,CACrB/2E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,gQAEPkqG,wBAAyB,CACrBh3E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,EACPnzB,GAAI,IACJpzB,EAAG,qSAEPmqG,kBAAmB,CACfj3E,MAAO,mBACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,kBACPnzB,GAAI,kBACJpzB,EAAG,mbAEPoqG,kBAAmB,CACfl3E,MAAO,EACPC,MAAO,kBACPoyE,OAAQ,kBACRh/C,MAAO,EACPnzB,GAAI,kBACJpzB,EAAG,8dAEPqqG,aAAc,CACVn3E,OAAQ,mBACRC,MAAO,IACPoyE,MAAO,kBACPh/C,MAAO,IACPnzB,GAAI,iBACJpzB,EAAG,qtBAEPsqG,aAAc,CACVp3E,OAAQ,iBACRC,MAAO,iBACPoyE,OAAQ,IACRh/C,OAAQ,kBACRnzB,GAAI,mBACJpzB,EAAG,gtBAEPuqG,gBAAiB,CACbr3E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,2YAEPwqG,gBAAiB,CACbt3E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,qeAEPyqG,QAAS,CACLv3E,MAAO,EACPC,MAAO,kBACPoyE,OAAQ,mBACRh/C,MAAO,kBACPnzB,GAAI,kBACJpzB,EAAG,wgBAEP0qG,cAAe,CACXx3E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,0rBAEP2qG,WAAY,CACRz3E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,qjBAEP4qG,gBAAiB,CACb13E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,wRAEP6qG,UAAW,CACP33E,MAAO,kBACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,GACPnzB,GAAI,IACJpzB,EAAG,0TAEP8qG,SAAU,CACN53E,MAAO,EACPC,MAAO,kBACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,4PAEP+qG,YAAa,CACT73E,OAAQ,kBACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,y+BAEPgrG,QAAS,CACL93E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,qkBAEPirG,SAAU,CACN/3E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,iBACRh/C,MAAO,IACPnzB,GAAI,kBACJpzB,EAAG,26BAEPkrG,SAAU,CACNh4E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,kBACRh/C,MAAO,IACPnzB,GAAI,kBACJpzB,EAAG,yxCAEPmrG,SAAU,CACNj4E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,kBACPnzB,GAAI,mBACJpzB,EAAG,uiDAEPorG,UAAW,CACPl4E,MAAO,kBACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,KACJpzB,EAAG,upDAEPqrG,aAAc,CACVn4E,OAAQ,GACRC,MAAO,kBACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,ijCAEPsrG,aAAc,CACVp4E,OAAQ,GACRC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,woCAEPurG,aAAc,CACVr4E,OAAQ,IACRC,MAAO,gBACPoyE,OAAQ,kBACRh/C,MAAO,IACPnzB,GAAI,kBACJpzB,EAAG,i+BAEPwrG,mBAAoB,CAChBt4E,OAAQ,GACRC,MAAO,kBACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,omBAEPyrG,iBAAkB,CACdv4E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,+3BAEP0rG,SAAU,CACNx4E,OAAQ,kBACRC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,8uBAEP2rG,cAAe,CACXz4E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,21CAEP4rG,aAAc,CACV14E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,q3BAEP6rG,kBAAmB,CACf34E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,mrCAEP8rG,gBAAiB,CACb54E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,4mCAEP+rG,mBAAoB,CAChB74E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,84BAEPgsG,oBAAqB,CACjB94E,MAAO,EACPC,MAAO,gBACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,spCAEPisG,2BAA4B,CACxB/4E,OAAQ,mBACRC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,kBACPnzB,GAAI,kBACJpzB,EAAG,45CAEPksG,oCAAqC,CACjCh5E,MAAO,EACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,m5CAEPmsG,8BAA+B,CAC3Bj5E,MAAO,EACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,snEAEPosG,mCAAoC,CAChCl5E,MAAO,EACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,8lDAEPqsG,wCAAyC,CACrCn5E,MAAO,EACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,kBACPnzB,GAAI,kBACJpzB,EAAG,s4CAEPssG,4CAA6C,CACzCp5E,MAAO,EACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,suDAEPusG,gCAAiC,CAC7Br5E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,0yCAEPwsG,WAAY,CACRt5E,OAAQ,kBACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,GACPnzB,GAAI,IACJpzB,EAAG,oPAEPysG,gBAAiB,CACbv5E,OAAQ,mBACRC,MAAO,mBACPoyE,OAAQ,GACRh/C,MAAO,kBACPnzB,GAAI,kBACJpzB,EAAG,kRAEP0sG,kBAAmB,CACfx5E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,GACPnzB,GAAI,IACJpzB,EAAG,iUAEP2sG,gBAAiB,CACbz5E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,ooCAEP4sG,qBAAsB,CAClB15E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,ovDAEP6sG,UAAW,CACP35E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,4nBAEP8sG,gBAAiB,CACb55E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,4gBAEP+sG,cAAe,CACX75E,MAAO,EACPC,MAAO,mBACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,0bAEPgtG,UAAW,CACP95E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,+MAEPitG,cAAe,CACX/5E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,szBAEPktG,WAAY,CACRh6E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,kXAEPmtG,eAAgB,CACZj6E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,mBACRh/C,MAAO,IACPnzB,GAAI,mBACJpzB,EAAG,mmBAEPotG,aAAc,CACVl6E,MAAO,EACPC,MAAO,kBACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,uVAEPqtG,gBAAiB,CACbn6E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,iTAEPstG,0BAA2B,CACvBp6E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,meAEPutG,0BAA2B,CACvBr6E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,skBAEPwtG,yBAA0B,CACtBt6E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,+aAEPytG,iBAAkB,CACdv6E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,q6EAEP0tG,gBAAiB,CACbx6E,MAAO,EACPC,MAAO,kBACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,mjCAEP2tG,gBAAiB,CACbz6E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,8TAEP4tG,mBAAoB,CAChB16E,OAAQ,GACRC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,2eAEP6tG,aAAc,CACV36E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJpzB,EAAG,28DAEP8tG,eAAgB,CACZ56E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJpzB,EAAG,qmEAEP+tG,WAAY,CACR76E,MAAO,EACPC,MAAO,kBACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,w2BAEPguG,YAAa,CACT96E,MAAO,oBACPC,MAAO,IACPoyE,OAAQ,mBACRh/C,MAAO,mBACPnzB,GAAI,kBACJpzB,EAAG,g7BAEPiuG,YAAa,CACT/6E,MAAO,EACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,koEAEPkuG,eAAgB,CACZh7E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,mBACRh/C,MAAO,mBACPnzB,GAAI,mBACJpzB,EAAG,sXAEPmuG,eAAgB,CACZj7E,MAAO,EACPC,MAAO,IACPoyE,OAAQ,oBACRh/C,MAAO,IACPnzB,GAAI,kBACJpzB,EAAG,0bAEPouG,mBAAoB,CAChBl7E,OAAQ,GACRC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,g+BAEPquG,cAAe,CACXn7E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,umBAEPsuG,iBAAkB,CACdp7E,MAAO,EACPC,MAAO,kBACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,6jBAEPuuG,UAAW,CACPr7E,MAAO,EACPC,MAAO,mBACPoyE,MAAO,IACPh/C,MAAO,mBACPnzB,GAAI,kBACJpzB,EAAG,iQAEPwuG,mBAAoB,CAChBt7E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJpzB,EAAG,qfAEPyuG,oBAAqB,CACjBv7E,OAAQ,GACRC,MAAO,kBACPoyE,MAAO,mBACPh/C,MAAO,KACPnzB,GAAI,mBACJpzB,EAAG,8eAEP0uG,oBAAqB,CACjBx7E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,kqBAEP2uG,qBAAsB,CAClBz7E,MAAO,kBACPC,MAAO,IACPoyE,OAAQ,mBACRh/C,MAAO,kBACPnzB,GAAI,kBACJpzB,EAAG,mrBAEP4uG,uBAAwB,CACpB17E,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,kBACPnzB,GAAI,kBACJpzB,EAAG,ocAEP6uG,wBAAyB,CACrB37E,OAAQ,GACRC,MAAO,kBACPoyE,OAAQ,mBACRh/C,MAAO,KACPnzB,GAAI,mBACJpzB,EAAG,iaAEP8uG,6BAA8B,CAC1B57E,OAAQ,mBACRC,MAAO,IACPoyE,OAAQ,mBACRh/C,MAAO,mBACPnzB,GAAI,mBACJpzB,EAAG,6YAEP6pB,6BAA8B,CAC1BqJ,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,4qBAEP8pB,oCAAqC,CACjCoJ,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,uyCAEP+pB,qBAAsB,CAClBmJ,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,wmBAEPgqB,sBAAuB,CACnBkJ,MAAO,EACPC,MAAO,kBACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJpzB,EAAG,yQAGX2M,WAAY,WACZgC,WAAY,IACZogG,YAAa,4BCjzCJC,GAAkB,CAC3B1jG,KAAM,WACN85F,OAAO,EACP1wE,MAAO,CACHkpB,QAAS,GACTqxD,cAAe,GACfC,cAAe,EACfC,qBAAsB,IAE1Bt3F,WAAY,CACRqwE,0BAA2B,EAC3BknB,YAAa,EACbhyC,kBAAmB,GAEvBhxC,KAAM,CACFijF,QAAS,CACL39E,MAAO,GACPvpB,MAAO,IAEXmnG,MAAO,CACH59E,MAAO,GACPvpB,MAAO,IAEX+xC,YAAa,CACT,MAAO,CACHq1D,UAAW,WACXF,QAAS,CACL39E,MAAO,GACPza,OAAQ,CACJtV,MAAO,IACP6tG,OAAQ,KAGhBF,MAAO,CACH59E,MAAO,GACPza,OAAQ,CACJtV,MAAO,GACP6tG,OAAQ,KAIpB,MAAO,CACHD,UAAW,WACXF,QAAS,CACL39E,MAAO,GACPza,OAAQ,CACJtV,KAAM,EACN6tG,OAAQ,IAEZr4F,KAAM,CACFxV,KAAM,IACN6tG,OAAQ,IAGhBF,MAAO,CACH59E,MAAO,GACPza,OAAQ,CACJtV,KAAM,IACN6tG,OAAQ,GAEZr4F,KAAM,CACFxV,KAAM,IACN6tG,OAAQ,OAMxBC,UAAW,CACP,EAAK,CAAE/9E,MAAO,GAAI6qC,OAAQ,IAC1B,EAAK,CAAE7qC,MAAO,GAAI6qC,OAAQ,GAC1B,EAAK,CAAE7qC,MAAO,GAAI6qC,OAAQ,GAC1B,EAAK,CAAE7qC,MAAO,GAAI6qC,QAAS,GAC3B,EAAK,CAAE7qC,MAAO,GAAI6qC,QAAS,MAGnC9L,YAAa,CACT4+C,QAAS,CACL39E,MAAO,GACPvpB,MAAO,GAEXunG,UAAW,CACPh+E,MAAO,KACPvpB,MAAO,IAGfwnG,aAAc,CACVC,GAAI,CACAl+E,MAAO,IAEXm+E,KAAM,CACFn+E,MAAO,KAIfo+E,OAAQ,CAEJC,WAAY,EACZr+E,MAAO,GAEPs+E,YAAa,GACbzzC,QAAS,GAEb/f,aAAc,CACVytD,wBAAyB,CACrBrsD,QAAS,GAEbssD,wBAAyB,CACrBtsD,QAAS,IAGjBqyD,QAAS,CACLZ,QAAS,CACL39E,MAAO,GACP8U,QAAS,EACT0pE,eAAgB,EAChBC,gBAAiB,EACjBC,cAAe,GACfC,gBAAiB,GAErBC,MAAO,CACH5+E,MAAO,GACP8U,QAAS,EACT0pE,eAAgB,EAChBC,gBAAiB,EACjBC,cAAe,EACfC,gBAAiB,IAGzBE,gBAAiB,CACblB,QAAS,CACLmB,QAAS,GACTC,aAAc,GACdjqE,QAAS,IAGjByF,SAAU,CACNjf,UAAW,CACPwiF,QAAS,IAGjB9+E,KAAM,CACFggF,yBAA0B,EAG1BzkE,SAAU,CACN07D,uBAAwB,CACpBx/D,kBAAmB,EACnBE,oBAAqB,GAEzBu/D,wBAAyB,CACrBz/D,kBAAmB,EACnBE,oBAAqB,GAEzBq/D,wBAAyB,CACrBv/D,kBAAmB,EACnBE,oBAAqB,GAEzBk/D,cAAe,CACXp/D,mBAAoB,EACpBE,oBAAqB,GAEzBm/D,eAAgB,CACZr/D,mBAAoB,EACpBE,oBAAqB,GAEzBi/D,eAAgB,CACZn/D,mBAAoB,EACpBE,oBAAqB,GAEzB++D,aAAc,CACV/+D,oBAAqB,IACrBF,mBAAoB,KAExBk/D,cAAe,CACXh/D,oBAAqB,EACrBF,mBAAoB,GAExBo8D,oBAAqB,CACjBl8D,qBAAsB,EACtBF,kBAAmB,KAa/Bt5B,OAAQ,CACJ60D,KAAM,CACFhyC,MAAO,GACP89E,QAAS,EACTjzC,OAAQ,GAEZ8G,MAAO,CACHmsC,QAAS,GAEb5+E,KAAM,CACF4+E,QAAS,IACTjH,WAAY,CACRiH,QAAS,KAEb/G,WAAY,CACR+G,QAAS,KAEb7G,WAAY,CACR6G,QAAS,MAEb3G,YAAa,CACT2G,QAAS,KAEbhH,aAAc,CACVgH,QAAS,KAEb9G,aAAc,CACV8G,QAAS,KAEb5G,aAAc,CACV4G,QAAS,KAEb1G,cAAe,CACX0G,QAAS,KAEbmB,QAAS,CACLnB,QAAS,MAEboB,WAAY,CACRpB,QAAS,IAGjBpjF,KAAM,CACFu5E,MAAO,CACH0J,QAAS,CAAEjiF,MAAO,IAAKmvC,OAAQ,GAC/B+yC,MAAO,CAAE/yC,OAAQ,MAErBspC,MAAO,CACHwJ,QAAS,CAAE9yC,QAAS,MAG5B9N,SAAU,CACNm9C,aAAc,CACVx+E,MAAO,KAEXy+E,kBAAmB,CACfz+E,MAAO,MAGfR,OAAQ,CACJikF,mBAAoB,CAChBC,SAAU,CACNtB,QAAS,KAEbuB,OAAQ,CACJvB,QAAS,EACTjzC,OAAQ,IAGhBy0C,iBAAkB,CACdF,SAAU,CACNtB,QAAS,KAEbuB,OAAQ,CACJvB,QAAS,EACTjzC,OAAQ,KAIpBoiC,SAAU,CACNjtE,MAAO,GACPg0E,eAAgB,CACZh0E,MAAO,GACP6qC,OAAQ,GAEZguC,gBAAiB,CACb74E,MAAO,IAEX2xC,MAAO,CACH3xC,MAAO,GACP89E,QAAS,EACTjzC,OAAQ,GAEZmH,KAAM,CACFhyC,MAAO,GACP89E,QAAS,EACTjzC,OAAQ,GAEZovC,cAAe,CACX6D,QAAS,GACTjzC,OAAQ,GAEZuvC,gBAAiB,CACb0D,QAAS,GAEbzD,mBAAoB,CAChByD,QAAS,IAGjBvjE,SAAU,CACNglE,WAAY,EACZxP,SAAU,CACNyP,oBAAqB,CACjB1B,OAAQ,IAEZ2B,mBAAoB,CAChB3B,OAAQ,MAEZ4B,oBAAqB,CACjB5B,OAAQ,IAGhB6B,OAAQ,CACJC,sBAAuB,CACnB9B,QAAS,GAEb+B,wBAAyB,CACrB/B,OAAQ,KAEZgC,0BAA2B,CACvBhC,OAAQ,KAEZiC,2BAA4B,CACxBjC,OAAQ,KAEZkC,2BAA4B,CACxBlC,OAAQ,GAEZmC,qBAAsB,CAClBnC,OAAQ,GAEZoC,oBAAqB,CACjBpC,QAAS,GAEbqC,sBAAuB,CACnBrC,OAAQ,GAEZsC,qBAAsB,CAClBtC,QAAS,GAEbuC,uBAAwB,CACpBvC,OAAQ,GAEZwC,4BAA6B,CACzBxC,OAAQ,KAEZyC,0BAA2B,CACvBzC,QAAS,KAEb0C,0BAA2B,CACvB1C,QAAS,KAEb2C,8BAA+B,CAC3B3C,QAAS,OAIrB3tD,YAAa,CACTZ,OAAQ,CACJnJ,mBAAoB,IACpBC,gBAAiB,IACjB6J,eAAgB,IAChBE,iBAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5CC,iBAAkB,CAAC,KACnBvb,QAAS,GACTwa,cAAe,KAEnBmtD,eAAgB,CACZ/gF,MAAO,GACPu0B,iBAAkB,GAClBnI,aAAc,IACdkI,QAAS,GAEb0sD,mBAAoB,CAChBhhF,MAAO,GACPu0B,iBAAkB,GAClBnI,aAAc,IACdkI,QAAS,GAEb2sD,cAAe,CACXjhF,MAAO,EACPu0B,iBAAkB,GAClBnI,aAAc,IACdkI,QAAS,GAEb8sD,mBAAoB,CAChBphF,MAAO,GACPu0B,gBAAiB,EACjBnI,aAAc,IACdkI,QAAS,KAEb+sD,oBAAqB,CACjBrhF,MAAO,GACPu0B,gBAAiB,GACjBnI,aAAc,IACdkI,QAAS,KAEbgtD,oBAAqB,CACjBthF,MAAO,GACPu0B,gBAAiB,EACjBnI,aAAc,IACdkI,QAAS,GAEbitD,qBAAsB,CAClBvhF,MAAO,GACPu0B,gBAAiB,EACjBnI,aAAc,IACdkI,QAAS,GAEbktD,uBAAwB,CACpBxhF,MAAO,IACPu0B,gBAAiB,EACjBnI,aAAc,IACdkI,QAAS,KAEbmtD,wBAAyB,CACrBzhF,MAAO,GACPu0B,iBAAkB,IAClBnI,aAAc,IACdkI,QAAS,KAEbotD,6BAA8B,CAC1B1hF,MAAO,GACPu0B,iBAAkB,EAClBnI,aAAc,IACdkI,QAAS,GAEb6sD,UAAW,CACPnhF,MAAO,GACPu0B,gBAAiB,EACjBnI,aAAc,IACdkI,QAAS,GAEb4sD,iBAAkB,CACdlhF,MAAO,GACPu0B,gBAAiB,IACjBD,QAAS,EACTlI,aAAc,KAElByvD,gBAAiB,CACb77E,MAAO,GACPu0B,gBAAiB,EACjBnI,aAAc,IACdkI,SAAU,KAEdqnD,eAAgB,CACZ37E,MAAO,GACPu0B,iBAAkB,GAClBnI,aAAc,IACdkI,SAAU,MAGlByN,cAAe,CACXq9C,WAAY,CACRp/E,MAAO,EACPy/B,SAAU,GACVnL,QAAS,EACTmN,cAAe,EACfD,cAAe,IAEnB69C,gBAAiB,CACbr/E,MAAO,EACPy/B,QAAS,GACTnL,QAAS,EACTmN,cAAe,EACfD,cAAe,GAEnB89C,kBAAmB,CACft/E,MAAO,EACPy/B,QAAS,GACTnL,QAAS,EACTmN,cAAe,EACfD,cAAe,GAEnB+9C,gBAAiB,CACbv/E,MAAO,EACPy/B,QAAS,GACTnL,QAAS,EACTmN,cAAe,EACfD,cAAe,GAEnBg+C,qBAAsB,CAClBx/E,MAAO,EACPy/B,QAAS,GACTnL,QAAS,GACTmN,cAAe,EACfD,cAAe,GAEnBi+C,UAAW,CACPz/E,MAAO,EACPy/B,QAAS,EACTnL,SAAU,EACVmN,cAAe,GACfD,cAAe,GAEnBk+C,gBAAiB,CACb1/E,MAAO,EACPy/B,QAAS,EACTnL,SAAU,EACVmN,cAAe,GACfD,cAAe,GAEnBm+C,cAAe,CACX3/E,MAAO,EACPy/B,QAAS,EACTnL,SAAU,EACVmN,cAAe,GACfD,cAAe,GAEnBo+C,UAAW,CACP5/E,MAAO,EACPy/B,QAAS,GACTnL,SAAU,EACVmN,cAAe,EACfD,cAAe,GAEnBq+C,cAAe,CACX7/E,MAAO,EACPy/B,QAAS,EACTnL,SAAU,EACVmN,cAAe,EACfD,cAAe,GAEnBs+C,WAAY,CACR9/E,MAAO,EACPy/B,QAAS,GACTnL,SAAU,EACVmN,cAAe,EACfD,cAAe,IAGvB/zB,OAAQ,CACJq8C,eAAgB,GAChBC,WAAY,GACZ7R,WAAY,EACZyR,kBAAmB,MC9hBxB,MAAMq7B,GAAqB,CAC9B5rE,QAAS,GACT33B,OAAQ,CACJ,IAAK,CACDqkB,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,EACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,EACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB64D,EAAG,CACCn/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,OAAQ,EACRC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,iBAAkB,EAClBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,GACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,GACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,OAAQ,GACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,iBAAkB,GAClBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,GACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,kBACPh/C,MAAO,IACPnzB,GAAI,kBACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,GACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB3iC,EAAG,CACCqc,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBziC,EAAG,CACCmc,MAAO,GACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBjkC,EAAG,CACC2d,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB7iC,EAAG,CACCuc,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB1iC,EAAG,CACCoc,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB9jC,EAAG,CACCwd,MAAO,GACPC,MAAO,IACPoyE,MAAO,GACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB/iC,EAAG,CACCyc,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBopC,EAAG,CACC1vD,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB84D,EAAG,CACCp/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB+4D,EAAG,CACCr/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBg5D,EAAG,CACCt/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBjU,EAAG,CACCrS,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB8qC,EAAG,CACCpxD,MAAO,GACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBi5D,EAAG,CACCv/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBk5D,EAAG,CACCx/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBnvC,EAAG,CACC6oB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBm5D,EAAG,CACCz/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBtgC,EAAG,CACCga,MAAO,GACPC,MAAO,IACPoyE,MAAO,GACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBmpC,EAAG,CACCzvD,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBspC,EAAG,CACC5vD,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBo5D,EAAG,CACC1/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBq5D,EAAG,CACC3/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBupC,EAAG,CACC7vD,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBpgC,EAAG,CACC8Z,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBs5D,EAAG,CACC5/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBu5D,EAAG,CACC7/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,KAAM,CACFtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,OAAQ,GACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,KACJuuB,iBAAkB,GAClBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBw5D,EAAG,CACC9/E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,OAAQ,EACRnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBp3C,EAAG,CACC8wB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBn3C,EAAG,CACC6wB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB7vC,EAAG,CACCupB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBz1C,EAAG,CACCmvB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBj5C,EAAG,CACC2yB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBvzC,EAAG,CACCitB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBn5C,EAAG,CACC6yB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB/yC,EAAG,CACCysB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBpzC,EAAG,CACC8sB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBoJ,EAAG,CACC1vB,OAAQ,IACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,iBAAkB,IAClBnI,aAAc,KAElBtoC,EAAG,CACCgiB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBy5D,EAAG,CACC//E,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBlpB,EAAG,CACC4C,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBj3C,EAAG,CACC2wB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBx5C,EAAG,CACCkzB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBgqB,EAAG,CACCtwC,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBxzC,EAAG,CACCktB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBnpB,EAAG,CACC6C,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBzzC,EAAG,CACCmtB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBl2C,EAAG,CACC4vB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB11C,EAAG,CACCovB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBmS,EAAG,CACCz4B,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBhzC,EAAG,CACC0sB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBl4C,EAAG,CACC4xB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBjzC,EAAG,CACC2sB,OAAQ,GACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,iBAAkB,GAClBnI,aAAc,KAElBiqB,EAAG,CACCvwC,MAAO,GACPC,MAAO,IACPoyE,OAAQ,EACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,EACPC,MAAO,EACPoyE,MAAO,EACPh/C,MAAO,EACPnzB,GAAI,EACJuuB,gBAAiB,EACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,EACPC,MAAO,EACPoyE,MAAO,EACPh/C,MAAO,EACPnzB,GAAI,EACJuuB,gBAAiB,EACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,EACPC,MAAO,EACPoyE,MAAO,EACPh/C,MAAO,EACPnzB,GAAI,EACJuuB,gBAAiB,EACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,EACPC,MAAO,EACPoyE,MAAO,EACPh/C,MAAO,EACPnzB,GAAI,EACJuuB,gBAAiB,EACjBnI,aAAc,MAGtB7sC,WAAY,iBACZgC,WAAY,IACZogG,YAAa,4BC71BJmE,GAAiB,CAC1B1sE,QAAS,GACT33B,OAAQ,CACJ,IAAK,CACDqkB,MAAO,EACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,EACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,IACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,IACjBnI,aAAc,MAElB,EAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,IACjBnI,aAAc,KAElB,EAAK,CACDtmB,MAAO,iBACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,EAAK,CACDtmB,MAAO,kBACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,EAAK,CACDtmB,MAAO,iBACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,EAAK,CACDtmB,MAAO,IACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,IACjBnI,aAAc,MAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,iBAAkB,GAClBnI,aAAc,MAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,EAAK,CACDtmB,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,IACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,MAAO,KACPh/C,MAAO,KACPnzB,GAAI,IACJuuB,gBAAiB,IACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB64D,EAAG,CACCn/E,MAAO,kBACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,MAAO,KACPh/C,MAAO,KACPnzB,GAAI,IACJuuB,gBAAiB,IACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,IACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,KACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,KACPoyE,MAAO,IACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,IACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,IACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,EACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,EACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,IACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,KACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,IACjBnI,aAAc,MAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,MAAO,GACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,IACjBnI,aAAc,MAElB,IAAK,CACDtmB,MAAO,kBACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,iBACPC,MAAO,mBACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB3iC,EAAG,CACCqc,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBziC,EAAG,CACCmc,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBjkC,EAAG,CACC2d,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB7iC,EAAG,CACCuc,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB1iC,EAAG,CACCoc,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB9jC,EAAG,CACCwd,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB/iC,EAAG,CACCyc,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBopC,EAAG,CACC1vD,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB84D,EAAG,CACCp/E,MAAO,GACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElB+4D,EAAG,CACCr/E,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBg5D,EAAG,CACCt/E,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBjU,EAAG,CACCrS,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB8qC,EAAG,CACCpxD,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBi5D,EAAG,CACCv/E,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBk5D,EAAG,CACCx/E,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBnvC,EAAG,CACC6oB,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBm5D,EAAG,CACCz/E,MAAO,GACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBtgC,EAAG,CACCga,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBmpC,EAAG,CACCzvD,MAAO,IACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,IACjBnI,aAAc,MAElBspC,EAAG,CACC5vD,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBo5D,EAAG,CACC1/E,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBq5D,EAAG,CACC3/E,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBupC,EAAG,CACC7vD,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBpgC,EAAG,CACC8Z,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBs5D,EAAG,CACC5/E,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBu5D,EAAG,CACC7/E,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,IACjBnI,aAAc,KAElB,KAAM,CACFtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,IACPh/C,MAAO,KACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBw5D,EAAG,CACC9/E,MAAO,IACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,EACPnzB,GAAI,IACJuuB,gBAAiB,IACjBnI,aAAc,MAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,MAAO,KACPh/C,MAAO,KACPnzB,GAAI,IACJuuB,gBAAiB,GACjBnI,aAAc,KAElBp3C,EAAG,CACC8wB,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBn3C,EAAG,CACC6wB,OAAQ,GACRC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,iBAAkB,GAClBnI,aAAc,MAElB7vC,EAAG,CACCupB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBz1C,EAAG,CACCmvB,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBj5C,EAAG,CACC2yB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBvzC,EAAG,CACCitB,MAAO,GACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElBn5C,EAAG,CACC6yB,MAAO,GACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB/yC,EAAG,CACCysB,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBpzC,EAAG,CACC8sB,MAAO,GACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElBoJ,EAAG,CACC1vB,OAAQ,GACRC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,iBAAkB,GAClBnI,aAAc,KAElBtoC,EAAG,CACCgiB,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBy5D,EAAG,CACC//E,MAAO,GACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElBlpB,EAAG,CACC4C,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBj3C,EAAG,CACC2wB,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBx5C,EAAG,CACCkzB,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBgqB,EAAG,CACCtwC,MAAO,GACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBxzC,EAAG,CACCktB,MAAO,GACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBnpB,EAAG,CACC6C,MAAO,GACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElBzzC,EAAG,CACCmtB,MAAO,IACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,IACjBnI,aAAc,MAElBl2C,EAAG,CACC4vB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElB11C,EAAG,CACCovB,MAAO,GACPC,MAAO,KACPoyE,OAAQ,GACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBmS,EAAG,CACCz4B,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBhzC,EAAG,CACC0sB,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBl4C,EAAG,CACC4xB,MAAO,GACPC,MAAO,KACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBjzC,EAAG,CACC2sB,MAAO,GACPC,MAAO,KACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElBiqB,EAAG,CACCvwC,MAAO,GACPC,MAAO,IACPoyE,MAAO,EACPh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,MAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,IACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,GACPC,MAAO,IACPoyE,OAAQ,IACRh/C,MAAO,KACPnzB,GAAI,KACJuuB,gBAAiB,GACjBnI,aAAc,KAElB,IAAK,CACDtmB,MAAO,IACPC,MAAO,KACPoyE,MAAO,IACPh/C,MAAO,IACPnzB,GAAI,IACJuuB,gBAAiB,IACjBnI,aAAc,OAGtB7sC,WAAY,cACZgC,WAAY,KACZogG,YAAa,4BCv1Bb3jG,EAAKsC,KAAK,WAAY23F,GAAc2J,ICApC5jG,EAAKsC,KAAK,SAAU42F,GAAYa,ICMpC9C,GAAK8Q,aAAa,WAAY,UCNvB,WAEH,CACI,MAAMC,EAAWF,IACX,WAAEvmG,EAAU,WAAEgC,EAAU,OAAEE,GAAWukG,EAC3ChoG,EAAKsC,KAAKf,EAAYymG,GAGtB,MAAMp7D,EAAe,IACrBT,GAAc87D,aAAa,CACvBjnG,OAAQO,EACRgC,WAAAA,EACAE,OAAAA,EACAmpC,aAAAA,EACAL,YAAY,EACZE,MAAM,EACND,QAAQ,EACRE,kBAAmB,IACnBC,gBAAiB,IACjBL,QAAQ,EACR47D,YAAa,+DAIrB,CACI,MAAMF,EAAWhB,IACX,WAAEzlG,EAAU,WAAEgC,EAAU,OAAEE,GAAWukG,EAC3ChoG,EAAKsC,KAAKf,EAAYymG,GAGtB,MAAMp7D,EAAe,IACrBT,GAAc87D,aAAa,CACvBjnG,OAAQO,EACRgC,WAAAA,EACAE,OAAAA,EACAmpC,aAAAA,EACAL,YAAY,EACZE,MAAM,EACND,QAAQ,EACRE,kBAAmB,IACnBC,gBAAiB,IACjBL,QAAQ,EACR47D,YAAa,qDDnCzBC,GAEA,Y,oBxGLA","sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/webpack/runtime/define property getters","webpack://Vex/webpack/runtime/global","webpack://Vex/webpack/runtime/hasOwnProperty shorthand","webpack://Vex/./src/util.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/boundingboxcomputation.ts","webpack://Vex/./src/font.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/glyph.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/rendercontext.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/typeguard.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/textformatter.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/parenthesis.ts","webpack://Vex/./src/web.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/timesigglyph.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/flow.ts","webpack://Vex/./src/version.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/vex.ts","webpack://Vex/./src/fonts/custom_glyphs.ts","webpack://Vex/./src/fonts/custom_metrics.ts","webpack://Vex/./src/fonts/petaluma_glyphs.ts","webpack://Vex/./src/fonts/petaluma_metrics.ts","webpack://Vex/./src/fonts/petalumascript_glyphs.ts","webpack://Vex/./src/fonts/robotoslab_glyphs.ts","webpack://Vex/./src/fonts/load_petaluma.ts","webpack://Vex/./src/fonts/load_custom.ts","webpack://Vex/./entry/vexflow-petaluma.ts","webpack://Vex/./src/fonts/textfonts.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})((typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : this), function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// Note: Keep this module free of imports to reduce the chance of circular dependencies.\n/** `RuntimeError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\n/** VexFlow can be used outside of the browser (e.g., Node) where `window` may not be defined. */\n// eslint-disable-next-line\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\n/**\n * Check that `x` is of type `T` and not `undefined`.\n * If `x` is `undefined`, throw a RuntimeError with the optionally provided error code and message.\n */\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\n/** Default log function sends all arguments to console. */\n// eslint-disable-next-line\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\n/** Dump warning to console. */\n// eslint-disable-next-line\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a, b) {\n    let mid_line = b + (a - b) / 2;\n    if (mid_line % 2 > 0) {\n        mid_line = roundN(mid_line * 10, 5) / 10;\n    }\n    return mid_line;\n}\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text) {\n    return `vf-${text}`;\n}\n/**\n * Convert an arbitrary angle in radians to the equivalent one in the range [0, pi).\n */\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// Author: Joshua Koo / @zz85\n// Author: @incompleteopus\nimport { RuntimeError } from './util';\n/** Fraction represents a rational number. */\nexport class Fraction {\n    /** Set the numerator and denominator. */\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    static get CATEGORY() {\n        return 'Fraction';\n    }\n    /**\n     * GCD: Greatest common divisor using the Euclidean algorithm.\n     * Note: GCD(0, 0) => 0 and GCD(0, n) => n.\n     */\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    /** LCM: Lowest common multiple. */\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    /** Lowest common multiple for more than two numbers. */\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            // args.shift() removes the first number.\n            // LCM the first number with the rest of the numbers.\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    /** Set the numerator and denominator. */\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    /** Return the value of the fraction. */\n    value() {\n        return this.numerator / this.denominator;\n    }\n    /** Simplify numerator and denominator using GCD. */\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    /** Add value of another fraction. */\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Substract value of another fraction. */\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Multiply by value of another fraction. */\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    /** Divide by value of another Fraction. */\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    /** Simplify both sides and check if they are equal. */\n    equals(compare) {\n        const a = Fraction.__staticFractionA.copy(compare).simplify();\n        const b = Fraction.__staticFractionB.copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    /** Greater than operator. */\n    greaterThan(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    /** Greater than or equals operator. */\n    greaterThanEquals(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    /** Less than operator. */\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    /** Less than or equals operator. */\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    /** Return a new copy with current values. */\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    /** Copy value of another fraction. */\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other, 1);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    /** Return the integer component (eg. 5/2 => 2). */\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    /** Return the remainder component (eg. 5/2 => 1). */\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    /** Calculate absolute value. */\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    /** Return a raw string representation (eg. \"5/2\"). */\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    /** Return a simplified string respresentation. */\n    toSimplifiedString() {\n        return Fraction.__staticFractionTmp.copy(this).simplify().toString();\n    }\n    /** Return string representation in mixed form. */\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = Fraction.__staticFractionTmp.copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    /** Parse a fraction string. */\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\n// Cached objects for comparisons.\nFraction.__staticFractionA = new Fraction();\nFraction.__staticFractionB = new Fraction();\nFraction.__staticFractionTmp = new Fraction();\n/** Helper function to extract the numerator and denominator from another fraction. */\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        // Both params are numbers, so we return them as [numerator, denominator].\n        return [n, d];\n    }\n    else {\n        // First param is a Fraction object. We ignore the second param.\n        return [n.numerator, n.denominator];\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nexport class BoundingBox {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    /**\n     * Create a new copy.\n     */\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    /** Get x position. */\n    getX() {\n        return this.x;\n    }\n    /** Get y position. */\n    getY() {\n        return this.y;\n    }\n    /** Get width. */\n    getW() {\n        return this.w;\n    }\n    /** Get height. */\n    getH() {\n        return this.h;\n    }\n    /** Set x position. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Set y position. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Set width. */\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    /** Set height. */\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    /** Move to position. */\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    /** Clone. */\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    /**\n     * Merge my box with given box. Creates a bigger bounding box unless\n     * the given box is contained in this one.\n     */\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const new_x = this.x < that.x ? this.x : that.x;\n        const new_y = this.y < that.y ? this.y : that.y;\n        const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n        const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n        this.x = new_x;\n        this.y = new_y;\n        this.w = new_w;\n        this.h = new_h;\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n/**\n * BoundingBoxComputation computes metrics for a bounding box by continuously\n * taking canvas path commands.\n *\n * Warning: This class is merely a crutch to get bounding box information without\n * explicit metadata. This is likely to get deprecated following SMuFL support.\n *\n * based on: https://github.com/canvg/canvg/blob/master/src/BoundingBox.ts (MIT License)\n */\nexport class BoundingBoxComputation {\n    constructor() {\n        this.x1 = Number.NaN;\n        this.y1 = Number.NaN;\n        this.x2 = Number.NaN;\n        this.y2 = Number.NaN;\n    }\n    /** Get calculated X1. */\n    getX1() {\n        return this.x1;\n    }\n    /** Get calculated Y1. */\n    getY1() {\n        return this.y1;\n    }\n    /** Get calculated width. */\n    width() {\n        return this.x2 - this.x1;\n    }\n    /** Get calculated height. */\n    height() {\n        return this.y2 - this.y1;\n    }\n    /** Add point to BoundingBox. */\n    addPoint(x, y) {\n        if (isNaN(this.x1) || x < this.x1)\n            this.x1 = x;\n        if (isNaN(this.x2) || x > this.x2)\n            this.x2 = x;\n        if (isNaN(this.y1) || y < this.y1)\n            this.y1 = y;\n        if (isNaN(this.y2) || y > this.y2)\n            this.y2 = y;\n    }\n    /** Add X to BoundingBox. */\n    addX(x) {\n        this.addPoint(x, this.y1);\n    }\n    /** Add Y to BoundingBox. */\n    addY(y) {\n        this.addPoint(this.x1, y);\n    }\n    /** Add quadratic curve to BoundingBox. */\n    addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n        this.addPoint(p0x, p0y);\n        this.addPoint(p2x, p2y);\n        const p01x = p1x - p0x;\n        const p12x = p2x - p1x;\n        let denom = p01x - p12x;\n        if (denom != 0) {\n            const t = p01x / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addX(it * it * p0x + 2 * it * t * p1x + t * t * p2x);\n            }\n        }\n        const p01y = p1y - p0y;\n        const p12y = p2y - p1y;\n        denom = p01y - p12y;\n        if (denom != 0) {\n            const t = p01y / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addY(it * it * p0y + 2 * it * t * p1y + t * t * p2y);\n            }\n        }\n    }\n    /** Add bezier curve to BoundingBox. */\n    addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n        // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n        const p0 = [p0x, p0y];\n        const p1 = [p1x, p1y];\n        const p2 = [p2x, p2y];\n        const p3 = [p3x, p3y];\n        let i;\n        this.addPoint(p0[0], p0[1]);\n        this.addPoint(p3[0], p3[1]);\n        const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n            3 * Math.pow(1 - t, 2) * t * p1[i] +\n            3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n            Math.pow(t, 3) * p3[i];\n        for (i = 0; i <= 1; i++) {\n            const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            const c = 3 * p1[i] - 3 * p0[i];\n            if (a === 0) {\n                if (b === 0)\n                    continue;\n                const t = -c / b;\n                if (0 < t && t < 1) {\n                    if (i === 0)\n                        this.addX(f(t, i));\n                    if (i === 1)\n                        this.addY(f(t, i));\n                }\n                continue;\n            }\n            const b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0)\n                continue;\n            const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                if (i === 0)\n                    this.addX(f(t1, i));\n                if (i === 1)\n                    this.addY(f(t1, i));\n            }\n            const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                if (i === 0)\n                    this.addX(f(t2, i));\n                if (i === 1)\n                    this.addY(f(t2, i));\n            }\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defined } from './util';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\n// Internal <span></span> element for parsing CSS font shorthand strings.\nlet fontParser;\nconst Fonts = {};\nexport class Font {\n    /**\n     * Use `Font.load(fontName)` to get a Font object.\n     * Do not call this constructor directly.\n     */\n    constructor(fontName) {\n        this.name = fontName;\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of pixels that is equivalent to `fontSize`\n     */\n    static convertSizeToPixelValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of points that is equivalent to `fontSize`\n     */\n    static convertSizeToPointValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param f\n     * @param size\n     * @param weight\n     * @param style\n     * @returns the `size` field will include the units (e.g., '12pt', '16px').\n     */\n    static validate(f, size, weight, style) {\n        // If f is a string but all other arguments are undefined, we assume that\n        // f is CSS font shorthand (e.g., 'italic bold 10pt Arial').\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            // f is a FontInfo object, so we extract its fields.\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            // f is a string representing the font family name or undefined.\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Font.SANS_SERIF;\n        size = size !== null && size !== void 0 ? size : Font.SIZE + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        // If size is a number, we assume the unit is `pt`.\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        // If weight is a number (e.g., 900), turn it into a string representation of that number.\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        // At this point, `family`, `size`, `weight`, and `style` are all strings.\n        return { family, size, weight, style };\n    }\n    /**\n     * @param cssFontShorthand a string formatted as CSS font shorthand (e.g., 'italic bold 15pt Arial').\n     */\n    static fromCSSString(cssFontShorthand) {\n        // Let the browser parse this string for us.\n        // First, create a span element.\n        // Then, set its style.font and extract it back out.\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    /**\n     * @returns a CSS font shorthand string of the form `italic bold 16pt Arial`.\n     */\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = ''; // no space! Omit the style section.\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = ''; // no space! Omit the weight section.\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Font.SIZE + 'pt ';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            // size is already a string.\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Font.SANS_SERIF;\n        return `${style}${weight}${size}${family}`;\n    }\n    /**\n     * @param fontSize a number representing a font size, or a string font size with units.\n     * @param scaleFactor multiply the size by this factor.\n     * @returns size * scaleFactor (e.g., 16pt * 3 = 48pt, 8px * 0.5 = 4px, 24 * 2 = 48).\n     * If the fontSize argument was a number, the return value will be a number.\n     * If the fontSize argument was a string, the return value will be a string.\n     */\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, ''); // Remove all numbers, dots, spaces.\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    /**\n     * @param weight a string (e.g., 'bold') or a number (e.g., 600 / semi-bold in the OpenType spec).\n     * @returns true if the font weight indicates bold.\n     */\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            // a string can be 'bold' or '700'\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    /**\n     * @param style\n     * @returns true if the font style indicates 'italic'.\n     */\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    /**\n     * @param fontName\n     * @param woffURL The absolute or relative URL to the woff file.\n     * @param includeWoff2 If true, we assume that a woff2 file is in\n     * the same folder as the woff file, and will append a `2` to the url.\n     */\n    // Support distributions of the typescript compiler that do not yet include the FontFace API declarations.\n    // eslint-disable-next-line\n    // @ts-ignore\n    static loadWebFont(fontName, woffURL, includeWoff2 = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const woff2URL = includeWoff2 ? `url(${woffURL}2) format('woff2'), ` : '';\n            const woff1URL = `url(${woffURL}) format('woff')`;\n            const woffURLs = woff2URL + woff1URL;\n            // eslint-disable-next-line\n            // @ts-ignore\n            const fontFace = new FontFace(fontName, woffURLs);\n            yield fontFace.load();\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.fonts.add(fontFace);\n            return fontFace;\n        });\n    }\n    /**\n     * Load the web fonts that are used by ChordSymbol. For example, `flow.html` calls:\n     *   `await Vex.Flow.Font.loadWebFonts();`\n     * Alternatively, you may load web fonts with a stylesheet link (e.g., from Google Fonts),\n     * and a @font-face { font-family: ... } rule in your CSS.\n     * If you do not load either of these fonts, ChordSymbol will fall back to Times or Arial,\n     * depending on the current music engraving font.\n     *\n     * You can customize `Font.WEB_FONT_HOST` and `Font.WEB_FONT_FILES` to load different fonts\n     * for your app.\n     */\n    static loadWebFonts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const host = Font.WEB_FONT_HOST;\n            const files = Font.WEB_FONT_FILES;\n            for (const fontName in files) {\n                const fontPath = files[fontName];\n                Font.loadWebFont(fontName, host + fontPath);\n            }\n        });\n    }\n    static loadTextFonts() {\n        //\n    }\n    /**\n     * @param fontName\n     * @param data optionally set the Font object's `.data` property.\n     *   This is usually done when setting up a font for the first time.\n     * @param metrics optionally set the Font object's `.metrics` property.\n     *   This is usually done when setting up a font for the first time.\n     * @returns a Font object with the given `fontName`.\n     *   Reuse an existing Font object if a matching one is found.\n     */\n    static load(fontName, data, metrics) {\n        let font = Fonts[fontName];\n        if (!font) {\n            font = new Font(fontName);\n            Fonts[fontName] = font;\n        }\n        if (data) {\n            font.setData(data);\n        }\n        if (metrics) {\n            font.setMetrics(metrics);\n        }\n        return font;\n    }\n    getName() {\n        return this.name;\n    }\n    getData() {\n        return defined(this.data, 'FontError', 'Missing font data');\n    }\n    getMetrics() {\n        return defined(this.metrics, 'FontError', 'Missing metrics');\n    }\n    setData(data) {\n        this.data = data;\n    }\n    setMetrics(metrics) {\n        this.metrics = metrics;\n    }\n    hasData() {\n        return this.data !== undefined;\n    }\n    getResolution() {\n        return this.getData().resolution;\n    }\n    getGlyphs() {\n        return this.getData().glyphs;\n    }\n    /**\n     * Use the provided key to look up a value in this font's metrics file (e.g., bravura_metrics.ts, petaluma_metrics.ts).\n     * @param key is a string separated by periods (e.g., stave.endPaddingMax, clef.lineCount.'5'.shiftY).\n     * @param defaultValue is returned if the lookup fails.\n     * @returns the retrieved value (or `defaultValue` if the lookup fails).\n     */\n    // eslint-disable-next-line\n    lookupMetric(key, defaultValue) {\n        const keyParts = key.split('.');\n        // Start with the top level font metrics object, and keep looking deeper into the object (via each part of the period-delimited key).\n        let currObj = this.getMetrics();\n        for (let i = 0; i < keyParts.length; i++) {\n            const keyPart = keyParts[i];\n            const value = currObj[keyPart];\n            if (value === undefined) {\n                // If the key lookup fails, we fall back to the defaultValue.\n                return defaultValue;\n            }\n            // The most recent lookup succeeded, so we drill deeper into the object.\n            currObj = value;\n        }\n        // After checking every part of the key (i.e., the loop completed), return the most recently retrieved value.\n        return currObj;\n    }\n    /** For debugging. */\n    toString() {\n        return '[' + this.name + ' Font]';\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// STATIC MEMBERS\n/** Default sans-serif font family. */\nFont.SANS_SERIF = 'Arial, sans-serif';\n/** Default serif font family. */\nFont.SERIF = 'Times New Roman, serif';\n/** Default font size in `pt`. */\nFont.SIZE = 10;\n// CSS Font Sizes: 36pt == 48px == 3em == 300% == 0.5in\n/** Given a length (for units: pt, px, em, %, in, mm, cm) what is the scale factor to convert it to px? */\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\n/**\n * Customize this field to specify a different CDN for delivering web fonts.\n * Alternative: https://cdn.jsdelivr.net/npm/vexflow-fonts@1.0.3/\n * Or you can use your own host.\n */\nFont.WEB_FONT_HOST = 'https://unpkg.com/vexflow-fonts@1.0.3/';\n/**\n * These font files will be loaded from the CDN specified by `Font.WEB_FONT_HOST` when\n * `await Font.loadWebFonts()` is called. Customize this field to specify a different\n * set of fonts to load. See: `Font.loadWebFonts()`.\n */\nFont.WEB_FONT_FILES = {\n    'Roboto Slab': 'robotoslab/RobotoSlab-Medium_2.001.woff',\n    PetalumaScript: 'petaluma/PetalumaScript_1.10_FS.woff',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\nimport { RuntimeError } from './util';\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    constructor() {\n        this.index = new Index();\n    }\n    static getDefaultRegistry() {\n        return Registry.defaultRegistry;\n    }\n    // If you call `enableDefaultRegistry`, any new elements will auto-register with\n    // the provided registry as soon as they're constructed.\n    static enableDefaultRegistry(registry) {\n        Registry.defaultRegistry = registry;\n    }\n    static disableDefaultRegistry() {\n        Registry.defaultRegistry = undefined;\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    // Updates the indexes for element 'id'. If an element's attribute changes\n    // from A -> B, make sure to remove the element from A.\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    /**\n     * Register element `elem` with this registry.\n     * This adds the element to its index and watches it for attribute changes.\n     * @param elem\n     * @param id\n     * @returns this\n     */\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        // Manually add id to index, then update other indexes.\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _a, _b;\n        return (_b = (_a = this.index.id) === null || _a === void 0 ? void 0 : _a[id]) === null || _b === void 0 ? void 0 : _b[id]; // return undefined if the id is not found.\n    }\n    getElementsByAttribute(attribute, value) {\n        const index_attr = this.index[attribute];\n        if (index_attr) {\n            const index_attr_val = index_attr[value];\n            if (index_attr_val) {\n                const keys = Object.keys(index_attr_val);\n                return keys.map((k) => index_attr_val[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    // This is called by the element when an attribute value changes. If an indexed\n    // attribute changes, then update the local index.\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Registry } from './registry';\nimport { defined } from './util';\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n */\nexport class Element {\n    constructor() {\n        var _a;\n        this.attrs = {\n            id: Element.newID(),\n            el: undefined,\n            type: this.getCategory(),\n            classes: {},\n        };\n        this.rendered = false;\n        // If a default registry exist, then register with it right away.\n        (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n    }\n    static get CATEGORY() {\n        return 'Element';\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    /** Get element category string. */\n    getCategory() {\n        return this.constructor.CATEGORY;\n    }\n    /**\n     * Set the element style used to render.\n     *\n     * Example:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.draw();\n     * ```\n     * Note: If the element draws additional sub-elements (ie.: Modifiers in a Stave),\n     * the style can be applied to all of them by means of the context:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.getContext().setFillStyle('red');\n     * element.getContext().setStrokeStyle('red');\n     * element.draw();\n     * ```\n     * or using drawWithStyle:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.drawWithStyle();\n     * ```\n     */\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    /** Get the element style used for rendering. */\n    getStyle() {\n        return this.style;\n    }\n    /** Apply the element style to `context`. */\n    applyStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.save();\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        return this;\n    }\n    /** Restore the style of `context`. */\n    restoreStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.restore();\n        return this;\n    }\n    /**\n     * Draw the element and all its sub-elements (ie.: Modifiers in a Stave)\n     * with the element style.\n     */\n    drawWithStyle() {\n        this.checkContext();\n        this.applyStyle();\n        this.draw();\n        this.restoreStyle();\n    }\n    /** Check if it has a class label (An element can have multiple class labels).  */\n    hasClass(className) {\n        return this.attrs.classes[className] === true;\n    }\n    /** Add a class label (An element can have multiple class labels).  */\n    addClass(className) {\n        var _a;\n        this.attrs.classes[className] = true;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    /** Remove a class label (An element can have multiple class labels).  */\n    removeClass(className) {\n        var _a;\n        delete this.attrs.classes[className];\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    /** Call back from registry after the element is registered. */\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    /** Return the rendered status. */\n    isRendered() {\n        return this.rendered;\n    }\n    /** Set the rendered status. */\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    /** Return the element attributes. */\n    getAttributes() {\n        return this.attrs;\n    }\n    /** Return an attribute. */\n    // eslint-disable-next-line\n    getAttribute(name) {\n        return this.attrs[name];\n    }\n    /** Set an attribute. */\n    // eslint-disable-next-line\n    setAttribute(name, value) {\n        var _a;\n        const oldID = this.attrs.id;\n        const oldValue = this.attrs[name];\n        this.attrs[name] = value;\n        // Register with old id to support id changes.\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    /** Get the boundingBox. */\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    /** Return the context. */\n    getContext() {\n        return this.context;\n    }\n    /** Set the context. */\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    /** Validate and return the context. */\n    checkContext() {\n        return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // Font Handling\n    /**\n     * Provide a CSS compatible font string (e.g., 'bold 16px Arial').\n     */\n    set font(f) {\n        this.setFont(f);\n    }\n    /** Returns the CSS compatible font string. */\n    get font() {\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Set the element's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     * @param font is 1) a `FontInfo` object or\n     *                2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *                3) a string representing the font family (at least one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     * If no arguments are provided, then the font is set to the default font.\n     * Each Element subclass may specify its own default by overriding the static `TEXT_FONT` property.\n     */\n    setFont(font, size, weight, style) {\n        // Allow subclasses to override `TEXT_FONT`.\n        const defaultTextFont = this.constructor.TEXT_FONT;\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const fontIsUndefined = font === undefined;\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        if (fontIsObject) {\n            // `font` is case 1) a FontInfo object\n            this.textFont = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            // `font` is case 2) CSS font shorthand.\n            this.textFont = Font.fromCSSString(font);\n        }\n        else if (fontIsUndefined && sizeWeightStyleAreUndefined) {\n            // All arguments are undefined. Do not check for `arguments.length === 0`,\n            // which fails on the edge case: `setFont(undefined)`.\n            // TODO: See if we can remove this case entirely without introducing a visual diff.\n            // The else case below seems like it should be equivalent to this case.\n            this.textFont = Object.assign({}, defaultTextFont);\n        }\n        else {\n            // `font` is case 3) a font family string (e.g., 'Times New Roman').\n            // The other parameters represent the size, weight, and style.\n            // It is okay for `font` to be undefined while one or more of the other arguments is provided.\n            // Following CSS conventions, unspecified params are reset to the default.\n            this.textFont = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        return this;\n    }\n    getFont() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Reset the text font to the style indicated by the static `TEXT_FONT` property.\n     * Subclasses can call this to initialize `textFont` for the first time.\n     */\n    resetFont() {\n        this.setFont();\n    }\n    /** Return a copy of the current FontInfo object. */\n    get fontInfo() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        // We can cast to Required<FontInfo> here, because\n        // we just called resetFont() above to ensure this.textFont is set.\n        return Object.assign({}, this.textFont);\n    }\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    /** Change the font size, while keeping everything else the same. */\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     * See Element.fontSizeInPixels or Element.fontSizeInPoints if you need to get a number for calculation purposes.\n     */\n    getFontSize() {\n        return this.fontSize;\n    }\n    /**\n     * The size is 1) a string of the form '10pt' or '16px', compatible with the CSS font-size property.\n     *          or 2) a number, which is interpreted as a point size (i.e. 12 == '12pt').\n     */\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     */\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    /**\n     * @returns the font size in `pt`.\n     */\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    /**\n     * @returns the font size in `px`.\n     */\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    /**\n     * @returns a CSS font-style string (e.g., 'italic').\n     */\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    /**\n     * @returns a CSS font-weight string (e.g., 'bold').\n     * As in CSS, font-weight is always returned as a string, even if it was set as a number.\n     */\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n}\nElement.ID = 1000;\n/**\n * Default font for text. This is not related to music engraving. Instead, see `Flow.setMusicFont(...fontNames)`\n * to customize the font for musical symbols placed on the score.\n */\nElement.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { RuntimeError } from './util';\nconst RESOLUTION = 16384;\n/**\n * Map duration numbers to 'ticks', the unit of duration used throughout VexFlow.\n * For example, a quarter note is 4, so it maps to RESOLUTION / 4 = 4096 ticks.\n */\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    // This is the default duration used to render bars (BarNote). Bars no longer\n    // consume ticks, so this should be a no-op.\n    // TODO(0xfe): This needs to be cleaned up.\n    b: '256',\n};\nconst keySignatures = {\n    C: { num: 0 },\n    Am: { num: 0 },\n    F: { acc: 'b', num: 1 },\n    Dm: { acc: 'b', num: 1 },\n    Bb: { acc: 'b', num: 2 },\n    Gm: { acc: 'b', num: 2 },\n    Eb: { acc: 'b', num: 3 },\n    Cm: { acc: 'b', num: 3 },\n    Ab: { acc: 'b', num: 4 },\n    Fm: { acc: 'b', num: 4 },\n    Db: { acc: 'b', num: 5 },\n    Bbm: { acc: 'b', num: 5 },\n    Gb: { acc: 'b', num: 6 },\n    Ebm: { acc: 'b', num: 6 },\n    Cb: { acc: 'b', num: 7 },\n    Abm: { acc: 'b', num: 7 },\n    G: { acc: '#', num: 1 },\n    Em: { acc: '#', num: 1 },\n    D: { acc: '#', num: 2 },\n    Bm: { acc: '#', num: 2 },\n    A: { acc: '#', num: 3 },\n    'F#m': { acc: '#', num: 3 },\n    E: { acc: '#', num: 4 },\n    'C#m': { acc: '#', num: 4 },\n    B: { acc: '#', num: 5 },\n    'G#m': { acc: '#', num: 5 },\n    'F#': { acc: '#', num: 6 },\n    'D#m': { acc: '#', num: 6 },\n    'C#': { acc: '#', num: 7 },\n    'A#m': { acc: '#', num: 7 },\n};\nconst clefs = {\n    treble: { line_shift: 0 },\n    bass: { line_shift: 6 },\n    tenor: { line_shift: 4 },\n    alto: { line_shift: 3 },\n    soprano: { line_shift: 1 },\n    percussion: { line_shift: 0 },\n    'mezzo-soprano': { line_shift: 2 },\n    'baritone-c': { line_shift: 5 },\n    'baritone-f': { line_shift: 5 },\n    subbass: { line_shift: 7 },\n    french: { line_shift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, int_val: 0 },\n    CN: { index: 0, int_val: 0, accidental: 'n' },\n    'C#': { index: 0, int_val: 1, accidental: '#' },\n    'C##': { index: 0, int_val: 2, accidental: '##' },\n    CB: { index: 0, int_val: 11, accidental: 'b' },\n    CBB: { index: 0, int_val: 10, accidental: 'bb' },\n    D: { index: 1, int_val: 2 },\n    DN: { index: 1, int_val: 2, accidental: 'n' },\n    'D#': { index: 1, int_val: 3, accidental: '#' },\n    'D##': { index: 1, int_val: 4, accidental: '##' },\n    DB: { index: 1, int_val: 1, accidental: 'b' },\n    DBB: { index: 1, int_val: 0, accidental: 'bb' },\n    E: { index: 2, int_val: 4 },\n    EN: { index: 2, int_val: 4, accidental: 'n' },\n    'E#': { index: 2, int_val: 5, accidental: '#' },\n    'E##': { index: 2, int_val: 6, accidental: '##' },\n    EB: { index: 2, int_val: 3, accidental: 'b' },\n    EBB: { index: 2, int_val: 2, accidental: 'bb' },\n    F: { index: 3, int_val: 5 },\n    FN: { index: 3, int_val: 5, accidental: 'n' },\n    'F#': { index: 3, int_val: 6, accidental: '#' },\n    'F##': { index: 3, int_val: 7, accidental: '##' },\n    FB: { index: 3, int_val: 4, accidental: 'b' },\n    FBB: { index: 3, int_val: 3, accidental: 'bb' },\n    G: { index: 4, int_val: 7 },\n    GN: { index: 4, int_val: 7, accidental: 'n' },\n    'G#': { index: 4, int_val: 8, accidental: '#' },\n    'G##': { index: 4, int_val: 9, accidental: '##' },\n    GB: { index: 4, int_val: 6, accidental: 'b' },\n    GBB: { index: 4, int_val: 5, accidental: 'bb' },\n    A: { index: 5, int_val: 9 },\n    AN: { index: 5, int_val: 9, accidental: 'n' },\n    'A#': { index: 5, int_val: 10, accidental: '#' },\n    'A##': { index: 5, int_val: 11, accidental: '##' },\n    AB: { index: 5, int_val: 8, accidental: 'b' },\n    ABB: { index: 5, int_val: 7, accidental: 'bb' },\n    B: { index: 6, int_val: 11 },\n    BN: { index: 6, int_val: 11, accidental: 'n' },\n    'B#': { index: 6, int_val: 12, accidental: '#' },\n    'B##': { index: 6, int_val: 13, accidental: '##' },\n    BB: { index: 6, int_val: 10, accidental: 'b' },\n    BBB: { index: 6, int_val: 9, accidental: 'bb' },\n    R: { index: 6, rest: true },\n    X: {\n        index: 6,\n        accidental: '',\n        octave: 4,\n        code: 'noteheadXBlack',\n        shift_right: 5.5,\n    },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n};\nconst customNoteHeads = {\n    /* Diamond */\n    D0: { code: 'noteheadDiamondWhole' },\n    D1: { code: 'noteheadDiamondHalf' },\n    D2: { code: 'noteheadDiamondBlack' },\n    D3: { code: 'noteheadDiamondBlack' },\n    /* Triangle */\n    T0: { code: 'noteheadTriangleUpWhole' },\n    T1: { code: 'noteheadTriangleUpHalf' },\n    T2: { code: 'noteheadTriangleUpBlack' },\n    T3: { code: 'noteheadTriangleUpBlack' },\n    /* Cross */\n    X0: { code: 'noteheadXWhole' },\n    X1: { code: 'noteheadXHalf' },\n    X2: { code: 'noteheadXBlack' },\n    X3: { code: 'noteheadCircleX' },\n    /* Square */\n    S1: { code: 'noteheadSquareWhite' },\n    S2: { code: 'noteheadSquareBlack' },\n    /* Rectangle */\n    R1: { code: 'vexNoteHeadRectWhite' },\n    R2: { code: 'vexNoteHeadRectBlack' }, // no smufl code\n};\nconst accidentals = {\n    '#': { code: 'accidentalSharp', parenRightPaddingAdjustment: -1 },\n    '##': { code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    b: { code: 'accidentalFlat', parenRightPaddingAdjustment: -2 },\n    bb: { code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2 },\n    n: { code: 'accidentalNatural', parenRightPaddingAdjustment: -1 },\n    '{': { code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1 },\n    '}': { code: 'accidentalParensRight', parenRightPaddingAdjustment: -1 },\n    db: { code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1 },\n    d: { code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0 },\n    '++': { code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1 },\n    '+': { code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1 },\n    '+-': { code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1 },\n    bs: { code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1 },\n    bss: { code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1 },\n    o: { code: 'accidentalSori', parenRightPaddingAdjustment: -1 },\n    k: { code: 'accidentalKoron', parenRightPaddingAdjustment: -1 },\n    bbs: { code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1 },\n    '++-': { code: 'vexAccidentalMicrotonal2', parenRightPaddingAdjustment: -1 },\n    ashs: { code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1 },\n    afhf: { code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaUp: { code: 'accSagittal5v7KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaDown: { code: 'accSagittal5v7KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaUp: { code: 'accSagittal5CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaDown: { code: 'accSagittal5CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaUp: { code: 'accSagittal7CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaDown: { code: 'accSagittal7CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisUp: { code: 'accSagittal25SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisDown: { code: 'accSagittal25SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisUp: { code: 'accSagittal35MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisDown: { code: 'accSagittal35MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisUp: { code: 'accSagittal11MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisDown: { code: 'accSagittal11MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisUp: { code: 'accSagittal11LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisDown: { code: 'accSagittal11LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisUp: { code: 'accSagittal35LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisDown: { code: 'accSagittal35LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SDown: { code: 'accSagittalSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SUp: { code: 'accSagittalFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CDown: { code: 'accSagittalSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CUp: { code: 'accSagittalFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CDown: { code: 'accSagittalSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CUp: { code: 'accSagittalFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kDown: { code: 'accSagittalSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kUp: { code: 'accSagittalFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp: { code: 'accSagittalSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat: { code: 'accSagittalFlat', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kUp: { code: 'accSagittalSharp5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kDown: { code: 'accSagittalFlat5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CUp: { code: 'accSagittalSharp5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CDown: { code: 'accSagittalFlat5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CUp: { code: 'accSagittalSharp7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CDown: { code: 'accSagittalFlat7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SUp: { code: 'accSagittalSharp25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SDown: { code: 'accSagittalFlat25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35MUp: { code: 'accSagittalSharp35MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35MDown: { code: 'accSagittalFlat35MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11MUp: { code: 'accSagittalSharp11MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11MDown: { code: 'accSagittalFlat11MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11LUp: { code: 'accSagittalSharp11LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11LDown: { code: 'accSagittalFlat11LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35LUp: { code: 'accSagittalSharp35LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35LDown: { code: 'accSagittalFlat35LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp25SDown: { code: 'accSagittalDoubleSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat25SUp: { code: 'accSagittalDoubleFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7CDown: { code: 'accSagittalDoubleSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7CUp: { code: 'accSagittalDoubleFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5CDown: { code: 'accSagittalDoubleSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5CUp: { code: 'accSagittalDoubleFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v7kDown: { code: 'accSagittalDoubleSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v7kUp: { code: 'accSagittalDoubleFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp: { code: 'accSagittalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat: { code: 'accSagittalDoubleFlat', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaUp: { code: 'accSagittal7v11KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaDown: { code: 'accSagittal7v11KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaUp: { code: 'accSagittal17CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaDown: { code: 'accSagittal17CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaUp: { code: 'accSagittal55CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaDown: { code: 'accSagittal55CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaUp: { code: 'accSagittal7v11CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaDown: { code: 'accSagittal7v11CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisUp: { code: 'accSagittal5v11SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisDown: { code: 'accSagittal5v11SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SDown: { code: 'accSagittalSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SUp: { code: 'accSagittalFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CDown: { code: 'accSagittalSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CUp: { code: 'accSagittalFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CDown: { code: 'accSagittalSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CUp: { code: 'accSagittalFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CDown: { code: 'accSagittalSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CUp: { code: 'accSagittalFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kDown: { code: 'accSagittalSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kUp: { code: 'accSagittalFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kUp: { code: 'accSagittalSharp7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kDown: { code: 'accSagittalFlat7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CUp: { code: 'accSagittalSharp17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CDown: { code: 'accSagittalFlat17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CUp: { code: 'accSagittalSharp55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CDown: { code: 'accSagittalFlat55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CUp: { code: 'accSagittalSharp7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CDown: { code: 'accSagittalFlat7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SUp: { code: 'accSagittalSharp5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SDown: { code: 'accSagittalFlat5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v11SDown: { code: 'accSagittalDoubleSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v11SUp: { code: 'accSagittalDoubleFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11CDown: { code: 'accSagittalDoubleSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11CUp: { code: 'accSagittalDoubleFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp55CDown: { code: 'accSagittalDoubleSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat55CUp: { code: 'accSagittalDoubleFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17CDown: { code: 'accSagittalDoubleSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17CUp: { code: 'accSagittalDoubleFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11kDown: { code: 'accSagittalDoubleSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11kUp: { code: 'accSagittalDoubleFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaUp: { code: 'accSagittal23CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaDown: { code: 'accSagittal23CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaUp: { code: 'accSagittal5v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaDown: { code: 'accSagittal5v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisUp: { code: 'accSagittal5v23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisDown: { code: 'accSagittal5v23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SDown: { code: 'accSagittalSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SUp: { code: 'accSagittalFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CDown: { code: 'accSagittalSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CUp: { code: 'accSagittalFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CDown: { code: 'accSagittalSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CUp: { code: 'accSagittalFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CUp: { code: 'accSagittalSharp23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CDown: { code: 'accSagittalFlat23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CUp: { code: 'accSagittalSharp5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CDown: { code: 'accSagittalFlat5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SUp: { code: 'accSagittalSharp5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SDown: { code: 'accSagittalFlat5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v23SDown: { code: 'accSagittalDoubleSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v23SUp: { code: 'accSagittalDoubleFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v19CDown: { code: 'accSagittalDoubleSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v19CUp: { code: 'accSagittalDoubleFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23CDown: { code: 'accSagittalDoubleSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23CUp: { code: 'accSagittalDoubleFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaUp: { code: 'accSagittal19SchismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaDown: { code: 'accSagittal19SchismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaUp: { code: 'accSagittal17KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaDown: { code: 'accSagittal17KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaUp: { code: 'accSagittal143CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaDown: { code: 'accSagittal143CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaUp: { code: 'accSagittal11v49CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaDown: { code: 'accSagittal11v49CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaUp: { code: 'accSagittal19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaDown: { code: 'accSagittal19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaUp: { code: 'accSagittal7v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaDown: { code: 'accSagittal7v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisUp: { code: 'accSagittal49SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisDown: { code: 'accSagittal49SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisUp: { code: 'accSagittal23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisDown: { code: 'accSagittal23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisUp: { code: 'accSagittal5v13MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisDown: { code: 'accSagittal5v13MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisUp: { code: 'accSagittal11v19MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisDown: { code: 'accSagittal11v19MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisUp: { code: 'accSagittal49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisDown: { code: 'accSagittal49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisUp: { code: 'accSagittal5v49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisDown: { code: 'accSagittal5v49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisUp: { code: 'accSagittal49LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisDown: { code: 'accSagittal49LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisUp: { code: 'accSagittal11v19LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisDown: { code: 'accSagittal11v19LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisUp: { code: 'accSagittal5v13LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisDown: { code: 'accSagittal5v13LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SDown: { code: 'accSagittalSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SUp: { code: 'accSagittalFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SDown: { code: 'accSagittalSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SUp: { code: 'accSagittalFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CDown: { code: 'accSagittalSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CUp: { code: 'accSagittalFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CDown: { code: 'accSagittalSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CUp: { code: 'accSagittalFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CDown: { code: 'accSagittalSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CUp: { code: 'accSagittalFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CDown: { code: 'accSagittalSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CUp: { code: 'accSagittalFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kDown: { code: 'accSagittalSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kUp: { code: 'accSagittalFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sDown: { code: 'accSagittalSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sUp: { code: 'accSagittalFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sUp: { code: 'accSagittalSharp19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sDown: { code: 'accSagittalFlat19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kUp: { code: 'accSagittalSharp17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kDown: { code: 'accSagittalFlat17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CUp: { code: 'accSagittalSharp143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CDown: { code: 'accSagittalFlat143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CUp: { code: 'accSagittalSharp11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CDown: { code: 'accSagittalFlat11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CUp: { code: 'accSagittalSharp19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CDown: { code: 'accSagittalFlat19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CUp: { code: 'accSagittalSharp7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CDown: { code: 'accSagittalFlat7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SUp: { code: 'accSagittalSharp49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SDown: { code: 'accSagittalFlat49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SUp: { code: 'accSagittalSharp23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SDown: { code: 'accSagittalFlat23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13MUp: { code: 'accSagittalSharp5v13MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13MDown: { code: 'accSagittalFlat5v13MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19MUp: { code: 'accSagittalSharp11v19MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19MDown: { code: 'accSagittalFlat11v19MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49MUp: { code: 'accSagittalSharp49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49MDown: { code: 'accSagittalFlat49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v49MUp: { code: 'accSagittalSharp5v49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v49MDown: { code: 'accSagittalFlat5v49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49LUp: { code: 'accSagittalSharp49LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49LDown: { code: 'accSagittalFlat49LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19LUp: { code: 'accSagittalSharp11v19LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19LDown: { code: 'accSagittalFlat11v19LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13LUp: { code: 'accSagittalSharp5v13LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13LDown: { code: 'accSagittalFlat5v13LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23SDown: { code: 'accSagittalDoubleSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23SUp: { code: 'accSagittalDoubleFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp49SDown: { code: 'accSagittalDoubleSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat49SUp: { code: 'accSagittalDoubleFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v19CDown: { code: 'accSagittalDoubleSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v19CUp: { code: 'accSagittalDoubleFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19CDown: { code: 'accSagittalDoubleSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19CUp: { code: 'accSagittalDoubleFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp11v49CDown: { code: 'accSagittalDoubleSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat11v49CUp: { code: 'accSagittalDoubleFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp143CDown: { code: 'accSagittalDoubleSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat143CUp: { code: 'accSagittalDoubleFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17kDown: { code: 'accSagittalDoubleSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17kUp: { code: 'accSagittalDoubleFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19sDown: { code: 'accSagittalDoubleSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19sUp: { code: 'accSagittalDoubleFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftUp: { code: 'accSagittalShaftUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftDown: { code: 'accSagittalShaftDown', parenRightPaddingAdjustment: -1 },\n    accSagittalAcute: { code: 'accSagittalAcute', parenRightPaddingAdjustment: -1 },\n    accSagittalGrave: { code: 'accSagittalGrave', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaUp: { code: 'accSagittal1MinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaDown: { code: 'accSagittal1MinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasUp: { code: 'accSagittal2MinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasDown: { code: 'accSagittal2MinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaUp: { code: 'accSagittal1TinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaDown: { code: 'accSagittal1TinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasUp: { code: 'accSagittal2TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasDown: { code: 'accSagittal2TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasUp: { code: 'accSagittal3TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasDown: { code: 'accSagittal3TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasUp: { code: 'accSagittal4TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasDown: { code: 'accSagittal4TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasUp: { code: 'accSagittal5TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasDown: { code: 'accSagittal5TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasUp: { code: 'accSagittal6TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasDown: { code: 'accSagittal6TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasUp: { code: 'accSagittal7TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasDown: { code: 'accSagittal7TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasUp: { code: 'accSagittal8TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasDown: { code: 'accSagittal8TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasUp: { code: 'accSagittal9TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasDown: { code: 'accSagittal9TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaUp: { code: 'accSagittalFractionalTinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaDown: { code: 'accSagittalFractionalTinaDown', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlat: { code: 'accidentalNarrowReversedFlat', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlatAndFlat: {\n        code: 'accidentalNarrowReversedFlatAndFlat',\n        parenRightPaddingAdjustment: -1,\n    },\n    accidentalWilsonPlus: { code: 'accidentalWilsonPlus', parenRightPaddingAdjustment: -1 },\n    accidentalWilsonMinus: { code: 'accidentalWilsonMinus', parenRightPaddingAdjustment: -1 },\n};\n// Helps determine the layout of accidentals.\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        second_on_bottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spaced_out_tetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spaced_out_pentachord: [1, 2, 3, 2, 1],\n        very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n        very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: 'augmentationDot', between_lines: true },\n    av: {\n        aboveCode: 'articStaccatissimoAbove',\n        belowCode: 'articStaccatissimoBelow',\n        between_lines: true,\n    },\n    'a>': {\n        aboveCode: 'articAccentAbove',\n        belowCode: 'articAccentBelow',\n        between_lines: true,\n    },\n    'a-': {\n        aboveCode: 'articTenutoAbove',\n        belowCode: 'articTenutoBelow',\n        between_lines: true,\n    },\n    'a^': {\n        aboveCode: 'articMarcatoAbove',\n        belowCode: 'articMarcatoBelow',\n        between_lines: false,\n    },\n    'a+': { code: 'pluckedLeftHandPizzicato', between_lines: false },\n    ao: {\n        aboveCode: 'pluckedSnapPizzicatoAbove',\n        belowCode: 'pluckedSnapPizzicatoBelow',\n        between_lines: false,\n    },\n    ah: { code: 'stringsHarmonic', between_lines: false },\n    'a@': { aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false },\n    'a@a': { code: 'fermataAbove', between_lines: false },\n    'a@u': { code: 'fermataBelow', between_lines: false },\n    'a|': { code: 'stringsUpBow', between_lines: false },\n    am: { code: 'stringsDownBow', between_lines: false },\n    'a,': { code: 'pictChokeCymbal', between_lines: false }, // Choked\n};\nconst ornaments = {\n    mordent: { code: 'ornamentShortTrill' },\n    mordent_inverted: { code: 'ornamentMordent' },\n    turn: { code: 'ornamentTurn' },\n    turn_inverted: { code: 'ornamentTurnSlash' },\n    tr: { code: 'ornamentTrill' },\n    upprall: { code: 'ornamentPrecompSlideTrillDAnglebert' },\n    downprall: { code: 'ornamentPrecompDoubleCadenceUpperPrefix' },\n    prallup: { code: 'ornamentPrecompTrillSuffixDandrieu' },\n    pralldown: { code: 'ornamentPrecompTrillLowerSuffix' },\n    upmordent: { code: 'ornamentPrecompSlideTrillBach' },\n    downmordent: { code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn' },\n    lineprall: { code: 'ornamentPrecompAppoggTrill' },\n    prallprall: { code: 'ornamentTremblement' },\n    scoop: { code: 'brassScoop' },\n    doit: { code: 'brassDoitMedium' },\n    fall: { code: 'brassFallLipShort' },\n    doitLong: { code: 'brassLiftMedium' },\n    fallLong: { code: 'brassFallRoughMedium' },\n    bend: { code: 'brassBend' },\n    plungerClosed: { code: 'brassMuteClosed' },\n    plungerOpen: { code: 'brassMuteOpen' },\n    flip: { code: 'brassFlip' },\n    jazzTurn: { code: 'brassJazzTurn' },\n    smear: { code: 'brassSmear' },\n};\nexport class Tables {\n    /**\n     * @returns the `Font` object at the head of the music font stack.\n     */\n    static currentMusicFont() {\n        if (Tables.MUSIC_FONT_STACK.length === 0) {\n            throw new RuntimeError('NoFonts', 'The font stack is empty. See: await Flow.fetchMusicFont(...); Flow.setMusicFont(...).');\n        }\n        else {\n            return Tables.MUSIC_FONT_STACK[0];\n        }\n    }\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    /**\n     * @param keyOctaveGlyph a string in the format \"key/octave\" (e.g., \"c/5\") or \"key/octave/custom-note-head-code\" (e.g., \"g/5/t3\").\n     * @param clef\n     * @param params a struct with one option, `octave_shift` for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n     * @returns properties for the specified note.\n     */\n    // eslint-disable-next-line\n    static keyProperties(keyOctaveGlyph, clef = 'treble', params) {\n        let options = { octave_shift: 0 };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        if (value.octave)\n            pieces[1] = value.octave.toString();\n        let octave = parseInt(pieces[1], 10);\n        // Octave_shift is the shift to compensate for clef 8va/8vb.\n        octave += -1 * options.octave_shift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).line_shift;\n        let stroke = 0;\n        if (line <= 0 && (line * 2) % 2 === 0)\n            stroke = 1; // stroke up\n        if (line >= 6 && (line * 2) % 2 === 0)\n            stroke = -1; // stroke down\n        // Integer value for note arithmetic.\n        const int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : undefined;\n        // If the user specified a glyph, overwrite the glyph code.\n        const code = value.code;\n        const shift_right = value.shift_right;\n        let customNoteHeadProps = {};\n        if (pieces.length > 2 && pieces[2]) {\n            const glyphName = pieces[2].toUpperCase();\n            customNoteHeadProps = customNoteHeads[glyphName] || {};\n        }\n        return Object.assign({ key,\n            octave,\n            line,\n            int_value, accidental: value.accidental, code,\n            stroke,\n            shift_right, displaced: false }, customNoteHeadProps);\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    static tabToGlyph(fret, scale = 1.0) {\n        let glyph = undefined;\n        let width = 0;\n        let shift_y = 0;\n        if (fret.toUpperCase() === 'X') {\n            const glyphMetrics = new Glyph('accidentalDoubleSharp', Tables.TABLATURE_FONT_SCALE).getMetrics();\n            glyph = 'accidentalDoubleSharp';\n            if (glyphMetrics.width == undefined || glyphMetrics.height == undefined)\n                throw new RuntimeError('InvalidMetrics', 'Width and height required');\n            width = glyphMetrics.width;\n            shift_y = -glyphMetrics.height / 2;\n        }\n        else {\n            width = Tables.textWidth(fret);\n        }\n        return {\n            text: fret,\n            code: glyph,\n            getWidth: () => width * scale,\n            shift_y,\n        };\n    }\n    // Used by annotation.ts and bend.ts. Clearly this implementation only works for the default font size.\n    // TODO: The actual width depends on the font family, size, weight, style.\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(acc) {\n        return accidentals[acc];\n    }\n    static ornamentCodes(acc) {\n        return ornaments[acc];\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.acc) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        const notes = accidentalList[keySpec.acc];\n        const acc_list = [];\n        for (let i = 0; i < keySpec.num; ++i) {\n            const line = notes[i];\n            acc_list.push({ type: keySpec.acc, line });\n        }\n        return acc_list;\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    /**\n     * Convert duration aliases to the number based duration.\n     * If the input isn't an alias, simply return the input.\n     * @param duration\n     * @returns Example: 'q' -> '4', '8' -> '8'\n     */\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    /** Convert the `duration` to a fraction. */\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    /** Convert the `duration` to a number. */\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    /* Convert the `duration` to total ticks. */\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n    // The default type is a regular note ('n').\n    // eslint-disable-next-line\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        // Lookup duration for default glyph head code\n        const code = durationCodes[duration];\n        if (code === undefined) {\n            return undefined;\n        }\n        // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n        let glyphTypeProperties = code.type[type];\n        // If this isn't a standard type, then lookup the custom note head map.\n        if (glyphTypeProperties === undefined) {\n            // Try and get it from the custom list of note heads\n            const customGlyphTypeProperties = customNoteHeads[type.toUpperCase()];\n            // If not, then return with nothing.\n            if (customGlyphTypeProperties === undefined) {\n                return undefined;\n            }\n            // Otherwise set it as the code_head value\n            glyphTypeProperties = Object.assign({ code_head: customGlyphTypeProperties.code }, customGlyphTypeProperties);\n        }\n        const code_head = glyphTypeProperties.code_head;\n        // The default implementation of getWidth() calls Glyph.getWidth(code_head, scale).\n        // This can be overridden by an individual glyph type (see slash noteheads below: Tables.SLASH_NOTEHEAD_WIDTH).\n        const getWidth = (scale = Tables.NOTATION_FONT_SCALE) => {\n            return Glyph.getWidth(code_head, scale);\n        };\n        // Merge duration props for 'duration' with the note head properties.\n        return Object.assign(Object.assign(Object.assign({}, code.common), { getWidth: getWidth }), glyphTypeProperties);\n    }\n}\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RESOLUTION = RESOLUTION;\n/**\n * Customize this by calling Flow.setMusicFont(...fontNames);\n */\nTables.MUSIC_FONT_STACK = [];\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\n// HACK:\n// Since text origins are positioned at the baseline, we must\n// compensate for the ascender of the text. Of course, 1 staff space is\n// a very poor approximation.\n//\n// This will be deprecated in the future. This is a temporary solution until\n// we have more robust text metrics.\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalMap = accidentals;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    // ♯ accidental sharp\n    sharp: String.fromCharCode(0x266f),\n    // ♭ accidental flat\n    flat: String.fromCharCode(0x266d),\n    // ♮ accidental natural\n    natural: String.fromCharCode(0x266e),\n    // △ major seventh\n    triangle: String.fromCharCode(0x25b3),\n    // ø half-diminished\n    'o-with-slash': String.fromCharCode(0x00f8),\n    // ° diminished\n    degrees: String.fromCharCode(0x00b0),\n    // ○ diminished\n    circle: String.fromCharCode(0x25cb),\n};\n/* The list of valid note types. Used by note.ts during parseNoteStruct(). */\nTables.validTypes = validNoteTypes;\n// Default time signature.\nTables.TIME4_4 = {\n    num_beats: 4,\n    beat_value: 4,\n    resolution: RESOLUTION,\n};\n// 1/2, 1, 2, 4, 8, 16, 32, 64, 128\n// NOTE: There is no 256 here! However, there are other mentions of 256 in this file.\n// For example, in durations has a 256 key, and sanitizeDuration() can return 256.\n// The sanitizeDuration() bit may need to be removed by 0xfe.\n// eslint-disable-next-line\nconst durationCodes = {\n    '1/2': {\n        common: {\n            stem: false,\n            stem_offset: 0,\n            flag: false,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Breve note\n                code_head: 'noteheadDoubleWhole',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDoubleWhole', scale);\n                // },\n            },\n            h: {\n                // Breve note harmonic\n                code_head: 'unpitchedPercussionClef1',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('unpitchedPercussionClef1', scale);\n                // },\n            },\n            m: {\n                // Breve note muted\n                code_head: 'vexNoteHeadMutedBreve',\n                stem_offset: 0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('vexNoteHeadMutedBreve', scale);\n                // },\n            },\n            r: {\n                // Breve rest\n                code_head: 'restDoubleWhole',\n                rest: true,\n                position: 'B/5',\n                dot_shiftY: 0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restDoubleWhole', scale);\n                // },\n            },\n            s: {\n                // Breve note slash -\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadDoubleWhole',\n            },\n        },\n    },\n    1: {\n        common: {\n            stem: false,\n            stem_offset: 0,\n            flag: false,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Whole note\n                code_head: 'noteheadWhole',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadWhole', scale);\n                // },\n            },\n            h: {\n                // Whole note harmonic\n                code_head: 'noteheadDiamondWhole',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondWhole', scale);\n                // },\n            },\n            m: {\n                // Whole note muted\n                code_head: 'noteheadXWhole',\n                stem_offset: -3,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXWhole', scale);\n                // },\n            },\n            r: {\n                // Whole rest\n                code_head: 'restWhole',\n                rest: true,\n                position: 'D/5',\n                dot_shiftY: 0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restWhole', scale);\n                // },\n            },\n            s: {\n                // Whole note slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadWhole',\n            },\n        },\n    },\n    2: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: false,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Half note\n                code_head: 'noteheadHalf',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadHalf', scale);\n                // },\n            },\n            h: {\n                // Half note harmonic\n                code_head: 'noteheadDiamondHalf',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondHalf', scale);\n                // },\n            },\n            m: {\n                // Half note muted\n                code_head: 'noteheadXHalf',\n                stem_offset: -3,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXHalf', scale);\n                // },\n            },\n            r: {\n                // Half rest\n                code_head: 'restHalf',\n                stem: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restHalf', scale);\n                // },\n            },\n            s: {\n                // Half note slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadHalf',\n            },\n        },\n    },\n    4: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: false,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Quarter note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Quarter harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Quarter muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Quarter rest\n                code_head: 'restQuarter',\n                stem: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.5,\n                line_below: 1.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restQuarter', scale);\n                // },\n            },\n            s: {\n                // Quarter slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n    8: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            beam_count: 1,\n            stem_beam_extension: 0,\n            code_flag_upstem: 'flag8thUp',\n            code_flag_downstem: 'flag8thDown',\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Eighth note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Eighth note harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Eighth note muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Eighth rest\n                code_head: 'rest8th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.0,\n                line_below: 1.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest8th', scale);\n                // },\n            },\n            s: {\n                // Eighth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n    16: {\n        common: {\n            beam_count: 2,\n            stem_beam_extension: 0,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag16thUp',\n            code_flag_downstem: 'flag16thDown',\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Sixteenth note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Sixteenth note harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Sixteenth note muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Sixteenth rest\n                code_head: 'rest16th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.0,\n                line_below: 2.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest16th', scale);\n                // },\n            },\n            s: {\n                // Sixteenth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n    32: {\n        common: {\n            beam_count: 3,\n            stem_beam_extension: 7.5,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag32ndUp',\n            code_flag_downstem: 'flag32ndDown',\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Thirty-second note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Thirty-second harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Thirty-second muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Thirty-second rest\n                code_head: 'rest32nd',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -1.5,\n                line_above: 2.0,\n                line_below: 2.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest32nd', scale);\n                // },\n            },\n            s: {\n                // Thirty-second slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n    64: {\n        common: {\n            beam_count: 4,\n            stem_beam_extension: 15,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag64thUp',\n            code_flag_downstem: 'flag64thDown',\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Sixty-fourth note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Sixty-fourth harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Sixty-fourth muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Sixty-fourth rest\n                code_head: 'rest64th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -1.5,\n                line_above: 2.0,\n                line_below: 3.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest64th', scale);\n                // },\n            },\n            s: {\n                // Sixty-fourth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n    128: {\n        common: {\n            beam_count: 5,\n            stem_beam_extension: 22.5,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag128thUp',\n            code_flag_downstem: 'flag128thDown',\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Hundred-twenty-eight note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Hundred-twenty-eight harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Hundred-twenty-eight muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Hundred-twenty-eight rest\n                code_head: 'rest128th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -2.5,\n                line_above: 3.0,\n                line_below: 3.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest128th', scale);\n                // },\n            },\n            s: {\n                // Hundred-twenty-eight slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { defined, RuntimeError } from './util';\nexport var OutlineCode;\n(function (OutlineCode) {\n    OutlineCode[OutlineCode[\"MOVE\"] = 0] = \"MOVE\";\n    OutlineCode[OutlineCode[\"LINE\"] = 1] = \"LINE\";\n    OutlineCode[OutlineCode[\"QUADRATIC\"] = 2] = \"QUADRATIC\";\n    OutlineCode[OutlineCode[\"BEZIER\"] = 3] = \"BEZIER\";\n})(OutlineCode || (OutlineCode = {}));\nclass GlyphCacheEntry {\n    constructor(fontStack, code, category) {\n        this.point = -1;\n        this.metrics = Glyph.loadMetrics(fontStack, code, category);\n        this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.metrics.scale, this.metrics.x_shift, this.metrics.y_shift);\n        if (category) {\n            this.point = Glyph.lookupFontMetric(this.metrics.font, category, code, 'point', -1);\n        }\n    }\n}\nclass GlyphCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    lookup(code, category) {\n        let entries = this.cache.get(Glyph.CURRENT_CACHE_KEY);\n        if (entries === undefined) {\n            entries = {};\n            this.cache.set(Glyph.CURRENT_CACHE_KEY, entries);\n        }\n        const key = category ? `${code}%${category}` : code;\n        let entry = entries[key];\n        if (entry === undefined) {\n            const musicFontStack = Tables.MUSIC_FONT_STACK.slice();\n            entry = new GlyphCacheEntry(musicFontStack, code, category);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n}\nclass GlyphOutline {\n    constructor(outline, originX, originY, scale) {\n        this.outline = outline;\n        this.originX = originX;\n        this.originY = originY;\n        this.scale = scale;\n        this.i = 0;\n        // Automatically assign private properties: this.outline, this.originX, this.originY, and this.scale.\n    }\n    done() {\n        return this.i >= this.outline.length;\n    }\n    next() {\n        return this.outline[this.i++];\n    }\n    nextX() {\n        return this.originX + this.outline[this.i++] * this.scale;\n    }\n    nextY() {\n        return this.originY - this.outline[this.i++] * this.scale;\n    }\n    static parse(str) {\n        const result = [];\n        const parts = str.split(' ');\n        let i = 0;\n        while (i < parts.length) {\n            switch (parts[i++]) {\n                case 'm':\n                    result.push(OutlineCode.MOVE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'l':\n                    result.push(OutlineCode.LINE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'q':\n                    result.push(OutlineCode.QUADRATIC, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'b':\n                    result.push(OutlineCode.BEZIER, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n            }\n        }\n        return result;\n    }\n}\nexport class Glyph extends Element {\n    /**\n     * @param code\n     * @param point\n     * @param options\n     */\n    constructor(code, point, options) {\n        super();\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.bbox = new BoundingBox(0, 0, 0, 0);\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        this.options = {};\n        this.scale = 1;\n        this.code = code;\n        this.point = point;\n        this.originShift = { x: 0, y: 0 };\n        this.x_shift = 0;\n        this.y_shift = 0;\n        if (options) {\n            this.setOptions(options);\n        }\n        else {\n            this.reset();\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return 'Glyph';\n    }\n    /**\n     * Pass a key of the form `glyphs.{category}.{code}.{key}` to Font.lookupMetric(). If the initial lookup fails,\n     * try again with the path `glyphs.{category}.{key}`. If the second lookup fails, return the defaultValue.\n     *\n     * @param font\n     * @param category any metric path under 'glyphs', so 'stem.up' could resolve to glyphs.stem.up.shiftX, glyphs.stem.up.shiftY, etc.\n     * @param code\n     * @param key\n     * @param defaultValue\n     */\n    static lookupFontMetric(font, category, code, key, defaultValue) {\n        let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, undefined);\n        if (value === undefined) {\n            // The first lookup failed, so we omit .${code} and try again (with a defaultValue this time).\n            value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n        }\n        return value;\n    }\n    static lookupGlyph(fontStack, code) {\n        defined(fontStack, 'BadFontStack', 'Font stack is misconfigured');\n        let glyph;\n        let font;\n        for (let i = 0; i < fontStack.length; i++) {\n            font = fontStack[i];\n            glyph = font.getGlyphs()[code];\n            if (glyph)\n                return { glyph, font };\n        }\n        throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n    static loadMetrics(fontStack, code, category) {\n        const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n        if (!glyph.o)\n            throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n        let x_shift = 0;\n        let y_shift = 0;\n        let scale = 1;\n        if (category && font) {\n            x_shift = Glyph.lookupFontMetric(font, category, code, 'shiftX', 0);\n            y_shift = Glyph.lookupFontMetric(font, category, code, 'shiftY', 0);\n            scale = Glyph.lookupFontMetric(font, category, code, 'scale', 1);\n        }\n        const x_min = glyph.x_min;\n        const x_max = glyph.x_max;\n        const ha = glyph.ha;\n        if (!glyph.cached_outline) {\n            glyph.cached_outline = GlyphOutline.parse(glyph.o);\n        }\n        return {\n            x_min,\n            x_max,\n            x_shift,\n            y_shift,\n            scale,\n            ha,\n            outline: glyph.cached_outline,\n            font,\n            width: x_max - x_min,\n            height: ha,\n        };\n    }\n    /**\n     * Renders glyphs from the default font stack.\n     *\n     * @param ctx Canvas or SVG context\n     * @param x_pos x coordinate\n     * @param y_pos y coordinate\n     * @param point the point size of the font\n     * @param code the glyph code in font.getGlyphs()\n     * @param options\n     * @returns\n     */\n    static renderGlyph(ctx, x_pos, y_pos, point, code, options) {\n        var _a;\n        const data = Glyph.cache.lookup(code, options === null || options === void 0 ? void 0 : options.category);\n        const metrics = data.metrics;\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const customScale = (_a = options === null || options === void 0 ? void 0 : options.scale) !== null && _a !== void 0 ? _a : 1;\n        const scale = ((point * 72.0) / (metrics.font.getResolution() * 100.0)) * metrics.scale * customScale;\n        Glyph.renderOutline(ctx, metrics.outline, scale, x_pos + metrics.x_shift * customScale, y_pos + metrics.y_shift * customScale);\n        return metrics;\n    }\n    static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        ctx.beginPath();\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    ctx.moveTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.LINE:\n                    ctx.lineTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.quadraticCurveTo(go.nextX(), go.nextY(), x, y);\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.bezierCurveTo(go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    break;\n            }\n        }\n        ctx.fill();\n    }\n    static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        const bboxComp = new BoundingBoxComputation();\n        // (penX, penY) hold the pen position: the start of each stroke.\n        let penX = x_pos;\n        let penY = y_pos;\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    // Note that we don't add any points to the bounding box until a srroke is actually drawn.\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    break;\n                case OutlineCode.LINE:\n                    bboxComp.addPoint(penX, penY);\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    bboxComp.addPoint(penX, penY);\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addQuadraticCurve(penX, penY, go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addBezierCurve(penX, penY, go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n            }\n        }\n        return new BoundingBox(bboxComp.getX1(), bboxComp.getY1(), bboxComp.width(), bboxComp.height());\n    }\n    static getWidth(code, point, category) {\n        const data = Glyph.cache.lookup(code, category);\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const scale = (point * 72) / (data.metrics.font.getResolution() * 100);\n        return data.bbox.getW() * scale;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n    getCode() {\n        return this.code;\n    }\n    // eslint-disable-next-line\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.reset();\n    }\n    setPoint(point) {\n        this.point = point;\n        return this;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    setXShift(x_shift) {\n        this.x_shift = x_shift;\n        return this;\n    }\n    setYShift(y_shift) {\n        this.y_shift = y_shift;\n        return this;\n    }\n    reset() {\n        const data = Glyph.cache.lookup(this.code, this.options.category);\n        this.metrics = data.metrics;\n        // Override point from metrics file\n        if (data.point != -1) {\n            this.point = data.point;\n        }\n        this.scale = (this.point * 72) / (this.metrics.font.getResolution() * 100);\n        this.bbox = new BoundingBox(data.bbox.getX() * this.scale, data.bbox.getY() * this.scale, data.bbox.getW() * this.scale, data.bbox.getH() * this.scale);\n    }\n    checkMetrics() {\n        return defined(this.metrics, 'BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n    getMetrics() {\n        const metrics = this.checkMetrics();\n        const metricsScale = metrics.scale;\n        return {\n            x_min: metrics.x_min * this.scale * metricsScale,\n            x_max: metrics.x_max * this.scale * metricsScale,\n            width: this.bbox.getW(),\n            height: this.bbox.getH(),\n            scale: this.scale * metricsScale,\n            x_shift: metrics.x_shift,\n            y_shift: metrics.y_shift,\n            outline: metrics.outline,\n            font: metrics.font,\n            ha: metrics.ha,\n        };\n    }\n    setOriginX(x) {\n        const { bbox } = this;\n        const originX = Math.abs(bbox.getX() / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.originShift.x = -xShift;\n    }\n    setOriginY(y) {\n        const { bbox } = this;\n        const originY = Math.abs(bbox.getY() / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.originShift.y = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n    render(ctx, x, y) {\n        const metrics = this.checkMetrics();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle(ctx);\n        const xPos = x + this.originShift.x + metrics.x_shift;\n        const yPos = y + this.originShift.y + metrics.y_shift;\n        Glyph.renderOutline(ctx, outline, scale, xPos, yPos);\n        this.restoreStyle(ctx);\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    renderToStave(x) {\n        const context = this.checkContext();\n        const metrics = this.checkMetrics();\n        const stave = this.checkStave();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle();\n        const xPos = x + this.x_shift + metrics.x_shift;\n        const yPos = stave.getYForGlyphs() + this.y_shift + metrics.y_shift;\n        Glyph.renderOutline(context, outline, scale, xPos, yPos);\n        this.restoreStyle();\n    }\n}\nGlyph.cache = new GlyphCache();\n// The current cache key for GlyphCache above.\n// Computed whenever the Flow.setMusicFont(...) is called.\n// It is set to a comma separated list of font names.\nGlyph.CURRENT_CACHE_KEY = '';\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { defined, RuntimeError } from './util';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n    constructor() {\n        super();\n        this.width = 0;\n        // The `text_line` is reserved space above or below a stave.\n        this.text_line = 0;\n        this.position = Modifier.Position.LEFT;\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.spacingFromNextModifier = 0;\n    }\n    /**\n     * Modifiers category string. Every modifier has a different category.\n     * The `ModifierContext` uses this to determine the type and order of the modifiers.\n     */\n    static get CATEGORY() {\n        return 'Modifier';\n    }\n    /** Modifiers can be positioned almost anywhere, relative to a note. */\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    /** Called when position changes. */\n    reset() {\n        // DO NOTHING.\n    }\n    /** Get modifier widths. */\n    getWidth() {\n        return this.width;\n    }\n    /** Set modifier widths. */\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    /**\n     * Used in draw() to check and get the attached note (`StaveNote`, `TabNote`, etc.).\n     * Also verifies that the index is valid.\n     */\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    /**\n     * Set attached note.\n     * @param note (`StaveNote`, `TabNote`, etc.)\n     */\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    /** Get note index, which is a specific note in a chord. */\n    getIndex() {\n        return this.index;\n    }\n    /** Check and get note index, which is a specific note in a chord. */\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    /** Set note index, which is a specific note in a chord. */\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'Modifier Context Required');\n    }\n    /** Every modifier must be part of a `ModifierContext`. */\n    setModifierContext(c) {\n        this.modifierContext = c;\n        return this;\n    }\n    /** Get position. */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Set position.\n     * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n     */\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    /** Set the `text_line` for the modifier. */\n    setTextLine(line) {\n        this.text_line = line;\n        return this;\n    }\n    /** Shift modifier down `y` pixels. Negative values shift up. */\n    setYShift(y) {\n        this.y_shift = y;\n        return this;\n    }\n    /** Set spacing from next modifier. */\n    setSpacingFromNextModifier(x) {\n        this.spacingFromNextModifier = x;\n    }\n    /** Get spacing from next modifier. */\n    getSpacingFromNextModifier() {\n        return this.spacingFromNextModifier;\n    }\n    /**\n     * Shift modifier `x` pixels in the direction of the modifier. Negative values\n     * shift reverse.\n     */\n    setXShift(x) {\n        this.x_shift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.x_shift -= x;\n        }\n        else {\n            this.x_shift += x;\n        }\n        return this;\n    }\n    /** Get shift modifier `x` */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render the modifier onto the canvas. */\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n    alignSubNotesWithNote(subNotes, note) {\n        // Shift over the tick contexts of each note\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2021.\n// MIT License\nexport class RenderContext {\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n    /**\n     * This is kept for backwards compatibility with 3.0.9.\n     * @deprecated use `setFont(...)` instead since it now supports CSS font shorthand.\n     */\n    setRawFont(f) {\n        this.setFont(f);\n        return this;\n    }\n}\n/**\n * Draw a tiny dot marker on the specified context. A great debugging aid.\n * @param ctx context\n * @param x dot x coordinate\n * @param y dot y coordinate\n * @param color\n */\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    // draw a circle\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { defined, RuntimeError } from './util';\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport class Tickable extends Element {\n    constructor() {\n        super();\n        this._preFormatted = false;\n        this._postFormatted = false;\n        // These properties represent the duration of\n        // this tickable element.\n        this.ticks = new Fraction(0, 1); // Fractional value of ticks\n        this.intrinsicTicks = 0; // Floating point value of ticks\n        this.tickMultiplier = new Fraction(1, 1);\n        // Formatter metrics\n        this.width = 0;\n        this.x_shift = 0; // Shift from tick context\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.align_center = false;\n        this.center_x_shift = 0; // Shift from tick context if center aligned\n        // This flag tells the formatter to ignore this tickable during\n        // formatting and justification. It is set by tickables such as BarNote.\n        this.ignore_ticks = false;\n        // This is a space for an external formatting class or function to maintain\n        // metrics.\n        this.formatterMetrics = {\n            // The freedom of a tickable is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n            // The simplified rational duration of this tick as a string. It can be\n            // used as an index to a map or hashtable.\n            duration: '',\n            // The number of formatting iterations undergone.\n            iterations: 0,\n            // The space in pixels allocated by this formatter, along with the mean space\n            // for tickables of this duration, and the deviation from the mean.\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    static get CATEGORY() {\n        return 'Tickable';\n    }\n    /** Reset the Tickable, this function will be overloaded. */\n    reset() {\n        return this;\n    }\n    /** Return the ticks. */\n    getTicks() {\n        return this.ticks;\n    }\n    /** Check if it ignores the ticks. */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Ignore the ticks. */\n    setIgnoreTicks(flag) {\n        this.ignore_ticks = flag;\n        return this;\n    }\n    /** Set width of note. Used by the formatter for positioning. */\n    setWidth(width) {\n        this.width = width;\n    }\n    /** Get width of note. Used by the formatter for positioning. */\n    getWidth() {\n        if (!this._preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    /** Displace note by `x` pixels. Used by the formatter. */\n    setXShift(x) {\n        this.x_shift = x;\n        return this;\n    }\n    /** Get the `x` displaced pixels of the note. */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Get `x` position of this tick context. */\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.x_shift;\n    }\n    /** Return the formatterMetrics. */\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    /** Return the center `x` shift. */\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.center_x_shift;\n        }\n        return 0;\n    }\n    /** Set the center `x` shift. */\n    setCenterXShift(centerXShift) {\n        this.center_x_shift = centerXShift;\n        return this;\n    }\n    // Check if tickable is center aligned. */\n    isCenterAligned() {\n        return this.align_center;\n    }\n    // Set/unset center alignment. */\n    setCenterAlignment(align_center) {\n        this.align_center = align_center;\n        return this;\n    }\n    /**\n     * Return the associated voice. Every tickable must be associated with a voice.\n     * This allows formatters and preFormatter to associate them with the right modifierContexts.\n     */\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    /** Set the associated voice. */\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    /** Get the tuplet. */\n    getTuplet() {\n        return this.tuplet;\n    }\n    /** Return the intrinsic ticks. */\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    /**\n     * Reset the specific Tuplet if this is not provided, all tuplets are reset.\n     * Remove any prior tuplets from the tick calculation and\n     * reset the intrinsic tick value.\n     */\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                // Revert old multiplier by inverting numerator & denom.:\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            // Revert old multiplier by inverting numerator & denom.:\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    /** Attach to new tuplet. */\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    /**\n     * Add self to the provided ModifierContext `mc`.\n     * If this tickable has modifiers, set modifierContext.\n     * @returns this\n     */\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        this._preFormatted = false;\n        return this;\n    }\n    /**\n     * Optional, if tickable has modifiers, associate a Modifier.\n     * @param index ignored\n     * @param mod the modifier\n     */\n    // eslint-disable-next-line\n    addModifier(index, mod) {\n        this.modifiers.push(mod);\n        this._preFormatted = false;\n        return this;\n    }\n    /** Get the list of associated modifiers. */\n    getModifiers() {\n        return this.modifiers;\n    }\n    /** Set the Tick Context. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this._preFormatted = false;\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    /** Preformat the Tickable. */\n    preFormat() {\n        if (this._preFormatted)\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    /** Set preformatted status. */\n    set preFormatted(value) {\n        this._preFormatted = value;\n    }\n    get preFormatted() {\n        return this._preFormatted;\n    }\n    /** Postformat the Tickable. */\n    postFormat() {\n        if (this._postFormatted)\n            return this;\n        this._postFormatted = true;\n        return this;\n    }\n    /** Set postformatted status. */\n    set postFormatted(value) {\n        this._postFormatted = value;\n    }\n    get postFormatted() {\n        return this._postFormatted;\n    }\n    /** Return the intrinsic ticks. */\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    /** Set the intrinsic ticks. */\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Get the tick multiplier. */\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    /** Apply a tick multiplier. */\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Set the duration. */\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    /** Attach this note to a modifier context. */\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/ban-types */\n/**\n * Use instead of `instanceof` as a more flexible type guard.\n * @param obj check if this object is an instance of the provided `cls`.\n * @param cls a JavaScript class, such as `StaveNote`. `cls` is a constructor function, and it has a `prototype` property, and\n *            optionally a `CATEGORY` property (used in VexFlow for flexible type checking).\n * @param checkAncestors defaults to `true`, so we walk up the prototype chain to look for a matching `CATEGORY`.\n *        If `false`, we do not check the superclass or other ancestors.\n * @returns true if `obj` is an instance of `ClassName`, or has a static `CATEGORY` property that matches `ClassName.CATEGORY`.\n */\nexport function isCategory(obj, cls, checkAncestors = true) {\n    // obj is NOT an instance of cls if it is: undefined, a number, a primitive string, or null.\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    // `obj.constructor` is a reference to the constructor function that created the `obj` instance.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\n    let constructorFcn = obj.constructor;\n    if (obj instanceof cls || constructorFcn === cls) {\n        return true;\n    }\n    // If instanceof fails, fall back to checking if the object's static .CATEGORY matches the class's .CATEGORY property.\n    const categoryToMatch = cls.CATEGORY;\n    if (categoryToMatch === undefined) {\n        return false;\n    }\n    if (checkAncestors) {\n        // Walk up the prototype chain to look for a matching obj.constructor.CATEGORY.\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === categoryToMatch) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        // Do not walk up the prototype chain. Just check this particular object's static .CATEGORY string.\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === categoryToMatch;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { drawDot } from './rendercontext';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { isCategory } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport const isNote = (obj) => isCategory(obj, Note);\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport class Note extends Tickable {\n    /**\n     * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n     * positioning and layout.\n     *\n     * @param noteStruct To create a new note you need to provide a `noteStruct`.\n     */\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        /** Parses `noteStruct` and get note properties. */\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        // Set note properties from parameters.\n        this.keys = noteStruct.keys || [];\n        // per-pitch properties\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.duration_override) {\n            // Custom duration\n            this.setDuration(noteStruct.duration_override);\n        }\n        else {\n            // Default duration\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        // Get the glyph code for this note from the font.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Tables.getGlyphProps(this.duration, t));\n        // Note to play for audio players.\n        this.playNote = undefined;\n        // Positioning contexts used by the Formatter.\n        this.ignore_ticks = false;\n        // Positioning variables\n        this.width = 0; // Width in pixels calculated after preFormat\n        this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n        this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n        this.x_shift = 0; // X shift from tick context X\n        this.ys = []; // list of y coordinates for each note\n        // we need to hold on to these for ties and beams.\n        if (noteStruct.align_center) {\n            this.setCenterAlignment(noteStruct.align_center);\n        }\n        // The render surface.\n        this.render_options = {\n            annotation_spacing: 5,\n            glyph_font_scale: 1,\n            stroke_px: 1,\n            scale: 1,\n            font: '',\n            y_shift: 0,\n        };\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return 'Note';\n    }\n    /** Debug helper. Displays various note metrics for the given note. */\n    static plotMetrics(ctx, note, yPos) {\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        // Preserve backwards-compatibility\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        // If specified type is invalid, return undefined.\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        // If no type specified, check duration or custom types\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            // If we have keys, try and check if we've got a custom glyph\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    // We have a custom glyph specified after the note eg. /X2\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        // Calculate the tick duration of the note\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        // Are there any dots?\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        // Add ticks as necessary depending on the numbr of dots\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    /**\n     * Get the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    getPlayNote() {\n        return this.playNote;\n    }\n    /**\n     * Set the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    /**\n     * @returns true if this note is a type of rest.\n     *\n     * Rests don't have pitches, but take up space in the score.\n     * Subclasses should override this default implementation.\n     */\n    isRest() {\n        return false;\n    }\n    /** Add stroke. */\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the target stave. */\n    getStave() {\n        return this.stave;\n    }\n    /** Check and get the target stave. */\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /** Set the target stave. */\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    /** Get spacing to the left of the notes. */\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    /** Get spacing to the right of the notes. */\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    /** Set spacing to the left of the notes. */\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    /** Set spacing to the right of the notes. */\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Get the stave line number for the note. */\n    // eslint-disable-next-line\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    /** Get the stave line number for rest. */\n    getLineForRest() {\n        return 0;\n    }\n    /** Get the glyph associated with this note. */\n    // eslint-disable-next-line\n    getGlyph() {\n        return this.glyph;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        // TODO: FIXME (multiple potential values for this.glyph)\n        if (this.glyph) {\n            if (this.glyph.getMetrics) {\n                return this.glyph.getMetrics().width;\n            }\n            else if (this.glyph.getWidth) {\n                return this.glyph.getWidth(this.render_options.glyph_font_scale);\n            }\n        }\n        return 0;\n    }\n    /**\n     * Set Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    /**\n     * Get Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    /**\n     * Get the Y position of the space above the stave onto which text can\n     * be rendered.\n     */\n    getYForTopText(text_line) {\n        return this.checkStave().getYForTopText(text_line);\n    }\n    /** Return the voice that this note belongs in. */\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    /** Attach this note to `voice`. */\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the `TickContext` for this note. */\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    /** Set the `TickContext` for this note. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Accessor to duration. */\n    getDuration() {\n        return this.duration;\n    }\n    /** Accessor to isDotted. */\n    isDotted() {\n        return this.getModifiersByType('Dot').length > 0;\n    }\n    /** Accessor to hasStem. */\n    hasStem() {\n        return false;\n    }\n    /** Accessor to note type. */\n    getNoteType() {\n        return this.noteType;\n    }\n    /** Get the beam. */\n    getBeam() {\n        return this.beam;\n    }\n    /** Check and get the beam. */\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    /** Check it has a beam. */\n    hasBeam() {\n        return this.beam != undefined;\n    }\n    /** Set the beam. */\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    /**\n     * Attach a modifier to this note.\n     * @param modifier the Modifier to add.\n     * @param index of the key to modify.\n     * @returns this\n     */\n    addModifier(index, modifier) {\n        // Backwards compatibility with 3.0.9.\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            // eslint-disable-next-line\n            console.warn('Note.addModifier(modifier: Modifier, index?: number) ' +\n                'expected a number for `index`, but received a string. ' +\n                'Please provide a number for the `index` argument.');\n        }\n        // Legacy versions of VexFlow had the two parameters swapped.\n        // We check here and throw an error if the argument types are not correct.\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Call signature to addModifier not supported, use addModifier(modifier: Modifier, index) instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        this.modifiers.push(modifier);\n        this.preFormatted = false;\n        return this;\n    }\n    // Get all modifiers of a specific type in the `ModifierContext`\n    getModifiersByType(type) {\n        return this.checkModifierContext().getMembers(type);\n    }\n    /** Get the coordinates for where modifiers begin. */\n    // eslint-disable-next-line\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    /** Get the metrics for this note. */\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.state.left_shift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.state.right_shift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx - // subtract left modifiers\n            modRightPx - // subtract right modifiers\n            this.leftDisplacedHeadPx - // subtract left displaced head\n            this.rightDisplacedHeadPx; // subtract right displaced head\n        // NOTE: If you change this, remember to update MockTickable.getMetrics() in the tests/ directory.\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            // Modifier spacing.\n            modLeftPx,\n            modRightPx,\n            // Displaced note head on left or right.\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    /**\n     * Get the absolute `X` position of this note's tick context. This\n     * excludes x_shift, so you'll need to factor it in if you're\n     * looking for the post-formatted x-position.\n     */\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        // Position note to left edge of tick context.\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Tables.currentMusicFont().lookupMetric('stave.padding');\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    /** Get the direction of the stem. */\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the top and bottom `y` values of the stem. */\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the `x` coordinate to the right of the note. */\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const note_glyph_width = this.glyph.getWidth();\n        tieStartX += note_glyph_width / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    /** Get the `x` coordinate to the left of the note. */\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const note_glyph_width = this.glyph.getWidth();\n        tieEndX += note_glyph_width / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    // Get the pitches in the note\n    getKeys() {\n        return this.keys;\n    }\n    // Get the properties for all the keys in the note\n    getKeyProps() {\n        return this.keyProps;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('Vex.Flow.Stem', args);\n}\nexport class Stem extends Element {\n    constructor(options) {\n        super();\n        this.stem_up_y_offset = 0;\n        this.stem_down_y_offset = 0;\n        this.stem_up_y_base_offset = 0;\n        this.stem_down_y_base_offset = 0;\n        // Default notehead x bounds\n        this.x_begin = (options === null || options === void 0 ? void 0 : options.x_begin) || 0;\n        this.x_end = (options === null || options === void 0 ? void 0 : options.x_end) || 0;\n        // Y bounds for top/bottom most notehead\n        this.y_top = (options === null || options === void 0 ? void 0 : options.y_top) || 0;\n        this.y_bottom = (options === null || options === void 0 ? void 0 : options.y_bottom) || 0;\n        // Stem top extension\n        this.stem_extension = (options === null || options === void 0 ? void 0 : options.stem_extension) || 0;\n        // Direction of the stem\n        this.stem_direction = (options === null || options === void 0 ? void 0 : options.stem_direction) || 0;\n        // Flag to override all draw calls\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (options === null || options === void 0 ? void 0 : options.stemletHeight) || 0;\n        // Use to adjust the rendered height without affecting\n        // the results of `.getExtents()`\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    static get CATEGORY() {\n        return 'Stem';\n    }\n    // Stem directions\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    // Theme\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    setOptions(options) {\n        // Changing where the stem meets the head\n        this.stem_up_y_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_offset) || 0;\n        this.stem_down_y_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_offset) || 0;\n        this.stem_up_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_base_offset) || 0;\n        this.stem_down_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_base_offset) || 0;\n    }\n    // Set the x bounds for the default notehead\n    setNoteHeadXBounds(x_begin, x_end) {\n        this.x_begin = x_begin;\n        this.x_end = x_end;\n        return this;\n    }\n    // Set the direction of the stem in relation to the noteheads\n    setDirection(direction) {\n        this.stem_direction = direction;\n    }\n    // Set the extension for the stem, generally for flags or beams\n    setExtension(ext) {\n        this.stem_extension = ext;\n    }\n    getExtension() {\n        return this.stem_extension;\n    }\n    // The the y bounds for the top and bottom noteheads\n    setYBounds(y_top, y_bottom) {\n        this.y_top = y_top;\n        this.y_bottom = y_bottom;\n    }\n    // Gets the entire height for the stem\n    getHeight() {\n        const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n        const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension); // parentheses just for grouping.\n        return unsigned_height * this.stem_direction;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    // Get the y coordinates for the very base of the stem to the top of\n    // the extension\n    getExtents() {\n        const isStemUp = this.stem_direction === Stem.UP;\n        const ys = [this.y_top, this.y_bottom];\n        const stemHeight = Stem.HEIGHT + this.stem_extension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Tables.currentMusicFont().lookupMetric('stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    // Render the stem onto the canvas\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stem_x;\n        let stem_y;\n        const stem_direction = this.stem_direction;\n        let y_base_offset = 0;\n        if (stem_direction === Stem.DOWN) {\n            // Down stems are rendered to the left of the head.\n            stem_x = this.x_begin;\n            stem_y = this.y_top + this.stem_down_y_offset;\n            y_base_offset = this.stem_down_y_base_offset;\n        }\n        else {\n            // Up stems are rendered to the right of the head.\n            stem_x = this.x_end;\n            stem_y = this.y_bottom - this.stem_up_y_offset;\n            y_base_offset = this.stem_up_y_base_offset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n        // The offset from the stem's base which is required fo satisfy the stemlet height\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n        // Draw the stem\n        ctx.save();\n        this.applyStyle(ctx);\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n        ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n        ctx.stroke();\n        this.restoreStyle(ctx);\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`. */\nStem.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('Vex.Flow.NoteHead', args);\n}\n/**\n * Draw slashnote head manually. No glyph exists for this.\n * @param ctx the Canvas context\n * @param duration the duration of the note. ex: \"4\"\n * @param x the x coordinate to draw at\n * @param y the y coordinate to draw at\n * @param stem_direction the direction of the stem\n */\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n    const width = Tables.SLASH_NOTEHEAD_WIDTH;\n    ctx.save();\n    ctx.setLineWidth(Tables.STEM_WIDTH);\n    let fill = false;\n    if (Tables.durationToNumber(duration) > 2) {\n        fill = true;\n    }\n    if (!fill)\n        x -= (Tables.STEM_WIDTH / 2) * stem_direction;\n    ctx.beginPath();\n    ctx.moveTo(x, y + staveSpace);\n    ctx.lineTo(x, y + 1);\n    ctx.lineTo(x + width, y - staveSpace);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x, y + staveSpace);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    else {\n        ctx.stroke();\n    }\n    if (Tables.durationToFraction(duration).equals(0.5)) {\n        const breve_lines = [-3, -1, width + 1, width + 3];\n        for (let i = 0; i < breve_lines.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(x + breve_lines[i], y - 10);\n            ctx.lineTo(x + breve_lines[i], y + 11);\n            ctx.stroke();\n        }\n    }\n    ctx.restore();\n}\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nexport class NoteHead extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.custom_glyph = false;\n        this.stem_up_x_offset = 0;\n        this.stem_down_x_offset = 0;\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.note_type)\n            this.noteType = noteStruct.note_type;\n        this.displaced = noteStruct.displaced || false;\n        this.stem_direction = noteStruct.stem_direction || Stem.UP;\n        this.line = noteStruct.line || 0;\n        // Get glyph code based on duration and note type. This could be\n        // regular notes, rests, or other custom codes.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.glyph_code = this.glyph.code_head;\n        this.x_shift = noteStruct.x_shift || 0;\n        if (noteStruct.custom_glyph_code) {\n            this.custom_glyph = true;\n            this.glyph_code = noteStruct.custom_glyph_code;\n            this.stem_up_x_offset = noteStruct.stem_up_x_offset || 0;\n            this.stem_down_x_offset = noteStruct.stem_down_x_offset || 0;\n        }\n        this.style = noteStruct.style;\n        this.slashed = noteStruct.slashed || false;\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE });\n        this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n    }\n    static get CATEGORY() {\n        return 'NoteHead';\n    }\n    /** Get the width of the notehead. */\n    getWidth() {\n        return this.width;\n    }\n    /** Determine if the notehead is displaced. */\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    /** Get the glyph data. */\n    getGlyph() {\n        return this.glyph;\n    }\n    /** Set the X coordinate. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Get the Y coordinate. */\n    getY() {\n        return this.y;\n    }\n    /** Set the Y coordinate. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Get the stave line the notehead is placed on. */\n    getLine() {\n        return this.line;\n    }\n    /** Set the stave line the notehead is placed on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Get the canvas `x` coordinate position of the notehead. */\n    getAbsoluteX() {\n        // If the note has not been preformatted, then get the static x value\n        // Otherwise, it's been formatted and we should use it's x value relative\n        // to its tick context\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        // For a more natural displaced notehead, we adjust the displacement amount\n        // by half the stem width in order to maintain a slight overlap with the stem\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        const musicFont = Tables.currentMusicFont();\n        const fontShift = musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n        const displacedFontShift = musicFont.lookupMetric('noteHead.displaced.shiftX', 0) * this.stem_direction;\n        return (x +\n            fontShift +\n            (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0));\n    }\n    /** Get the `BoundingBox` for the `NoteHead`. */\n    getBoundingBox() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const spacing = this.checkStave().getSpacingBetweenLines();\n        const half_spacing = spacing / 2;\n        const min_y = this.y - half_spacing;\n        return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n    }\n    /** Set notehead to a provided `stave`. */\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n        this.setWidth(width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the notehead. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let head_x = this.getAbsoluteX();\n        if (this.custom_glyph) {\n            // head_x += this.x_shift;\n            head_x += this.stem_direction === Stem.UP ? this.stem_up_x_offset : this.stem_down_x_offset;\n        }\n        const y = this.y;\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", head_x, y);\n        // Begin and end positions for head.\n        const stem_direction = this.stem_direction;\n        const glyph_font_scale = this.render_options.glyph_font_scale;\n        if (this.style) {\n            this.applyStyle(ctx);\n        }\n        const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n        if (this.noteType === 's') {\n            const staveSpace = this.checkStave().getSpacingBetweenLines();\n            drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n        }\n        else {\n            Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n                category: this.custom_glyph ? `noteHead.custom.${categorySuffix}` : `noteHead.standard.${categorySuffix}`,\n            });\n        }\n        if (this.style) {\n            this.restoreStyle(ctx);\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\nNoteHead.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { isCategory } from './typeguard';\nimport { RuntimeError } from './util';\nexport const isStemmableNote = (obj) => isCategory(obj, StemmableNote);\nexport class StemmableNote extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n    }\n    static get CATEGORY() {\n        return 'StemmableNote';\n    }\n    // Get and set the note's `Stem`\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        return this;\n    }\n    // Builds and sets a new stem\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag(category = 'flag') {\n        const { glyph } = this;\n        if (this.hasFlag()) {\n            const flagCode = this.getStemDirection() === Stem.DOWN ? glyph.code_flag_downstem : glyph.code_flag_upstem;\n            this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, { category });\n        }\n    }\n    // Get the custom glyph associated with the outer note head on the base of the stem.\n    getBaseCustomNoteHeadGlyph() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    // Get the full length of stem\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    // Get the number of beams for this duration\n    getBeamCount() {\n        const glyph = this.getGlyph();\n        if (glyph) {\n            return glyph.beam_count;\n        }\n        else {\n            return 0;\n        }\n    }\n    // Get the minimum length of stem\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        let length = frac.value() <= 1 ? 0 : 20;\n        // if note is flagged, cannot shorten beam\n        switch (this.duration) {\n            case '8':\n                if (this.beam == undefined)\n                    length = 35;\n                break;\n            case '16':\n                length = this.beam == undefined ? 35 : 25;\n                break;\n            case '32':\n                length = this.beam == undefined ? 45 : 35;\n                break;\n            case '64':\n                length = this.beam == undefined ? 50 : 40;\n                break;\n            case '128':\n                length = this.beam == undefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    // Get/set the direction of the stem\n    getStemDirection() {\n        if (!this.stem_direction)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem_direction;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stem_direction = direction;\n        // Reset and reformat everything. Flag has to be built before calling getStemExtension.\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n            // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n            // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n            const glyph = this.getBaseCustomNoteHeadGlyph() || this.getGlyph();\n            // Get the font-specific customizations for the note heads.\n            const offsets = Tables.currentMusicFont().lookupMetric(`stem.noteHead.${glyph.code_head}`, {\n                offsetYBaseStemUp: 0,\n                offsetYTopStemUp: 0,\n                offsetYBaseStemDown: 0,\n                offsetYTopStemDown: 0,\n            });\n            // Configure the stem to use these offsets.\n            this.stem.setOptions({\n                stem_up_y_offset: offsets.offsetYTopStemUp,\n                stem_down_y_offset: offsets.offsetYTopStemDown,\n                stem_up_y_base_offset: offsets.offsetYBaseStemUp,\n                stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n            });\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    // Get the `x` coordinate of the stem\n    getStemX() {\n        const x_begin = this.getAbsoluteX() + this.x_shift;\n        const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n        const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n        return stem_x;\n    }\n    // Get the `x` coordinate for the center of the glyph.\n    // Used for `TabNote` stems and stemlets over rests\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n    }\n    // Get the stem extension for the current duration\n    getStemExtension() {\n        const glyph = this.getGlyph();\n        if (this.stem_extension_override != undefined) {\n            return this.stem_extension_override;\n        }\n        // Use stem_beam_extension with beams\n        if (this.beam) {\n            return glyph.stem_beam_extension;\n        }\n        const flagCode = this.getStemDirection() === Stem.DOWN ? this.glyph.code_flag_downstem : this.glyph.code_flag_upstem;\n        return Math.abs(Tables.currentMusicFont().lookupMetric(`glyphs.flag.${flagCode}.shiftY`, 0));\n    }\n    // Set the stem length to a specific. Will override the default length.\n    setStemLength(height) {\n        this.stem_extension_override = height - Stem.HEIGHT;\n        return this;\n    }\n    // Get the top and bottom `y` values of the stem.\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return Tables.getGlyphProps(this.duration).flag && !this.beam;\n    }\n    /** Post formats the note. */\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    /** Renders the stem onto the canvas. */\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).draw();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.\n//\n// See `tests/stavenote_tests.ts` for usage examples.\nimport { BoundingBox } from './boundingbox';\nimport { Modifier } from './modifier';\nimport { NoteHead } from './notehead';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { isCategory } from './typeguard';\nimport { defined, log, midLine, RuntimeError, warn } from './util';\nexport const isStaveNote = (obj) => isCategory(obj, StaveNote);\nfunction showDeprecationWarningForNoteHeads() {\n    // eslint-disable-next-line\n    console.warn('StaveNote.note_heads is deprecated. Use StaveNote.noteHeads instead.', 'This accessor will be removed in VexFlow 5.0.');\n}\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('Vex.Flow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = (note.isrest ? 0.0 : 1.0) * dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nexport class StaveNote extends StemmableNote {\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.minLine = 0;\n        this.maxLine = 0;\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octave_shift = (_b = noteStruct.octave_shift) !== null && _b !== void 0 ? _b : 0;\n        // Pull note rendering properties.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // if true, displace note to right\n        this.displaced = false;\n        this.dot_shiftY = 0;\n        // for displaced ledger lines\n        this.use_default_head_x = false;\n        // Drawing\n        this._noteHeads = [];\n        this.modifiers = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE, \n            // number of stroke px to the left and right of head\n            stroke_px: noteStruct.stroke_px || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        // Set the stem direction\n        if (noteStruct.auto_stem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stem_direction) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    static get CATEGORY() {\n        return 'StaveNote';\n    }\n    /**\n     * @deprecated Use Stem.UP.\n     */\n    static get STEM_UP() {\n        return Stem.UP;\n    }\n    /**\n     * @deprecated Use Stem.DOWN.\n     */\n    static get STEM_DOWN() {\n        return Stem.DOWN;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Format notes inside a ModifierContext. */\n    static format(notes, state) {\n        if (!notes || notes.length < 2)\n            return false;\n        // FIXME: VexFlow will soon require that a stave be set before formatting.\n        // Which, according to the below condition, means that following branch will\n        // always be taken and the rest of this function is dead code.\n        //\n        // Problematically, `Formatter#formatByY` was not designed to work for more\n        // than 2 voices (although, doesn't throw on this condition, just tries\n        // to power through).\n        //\n        // Based on the above:\n        //   * 2 voices can be formatted *with or without* a stave being set but\n        //     the output will be different\n        //   * 3 voices can only be formatted *without* a stave\n        if (notes[0].getStave()) {\n            StaveNote.formatByY(notes, state);\n            return true;\n        }\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            const props = notes[i].getKeyProps();\n            const line = props[0].line;\n            let minL = props[props.length - 1].line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL = line + notes[i].glyph.line_above;\n                minL = line - notes[i].glyph.line_below;\n            }\n            else {\n                maxL = stemDirection === 1 ? props[props.length - 1].line + stemMax : props[props.length - 1].line;\n                minL = stemDirection === 1 ? props[0].line : props[0].line - stemMax;\n            }\n            notesList.push({\n                line: props[0].line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection: stemDirection,\n                stemMax,\n                stemMin,\n                voice_shift: notes[i].getVoiceShiftWidth(),\n                is_displaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        const voices = notesList.length;\n        let noteU = notesList[0];\n        const noteM = voices > 2 ? notesList[1] : undefined;\n        let noteL = voices > 2 ? notesList[2] : notesList[1];\n        // for two voice backward compatibility, ensure upper voice is stems up\n        // for three voices, the voices must be in order (upper, middle, lower)\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n        let xShift = 0;\n        let stemDelta;\n        // Test for two voice note intersection\n        if (voices === 2) {\n            const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            // if top voice is a middle voice, check stem intersection with lower voice\n            if (noteU.stemDirection === noteL.stemDirection && noteU.minLine <= noteL.maxLine) {\n                if (!noteU.isrest) {\n                    stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n                    stemDelta = Math.max(stemDelta, noteU.stemMin);\n                    noteU.minLine = noteU.line - stemDelta;\n                    noteU.note.setStemLength(stemDelta * 10);\n                }\n            }\n            if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    // shift rest up\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    // shift rest down\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    xShift = voiceXShift;\n                    if (noteU.stemDirection === noteL.stemDirection) {\n                        // upper voice is middle voice, so shift it right\n                        noteU.note.setXShift(xShift + 3);\n                    }\n                    else {\n                        // shift lower voice right\n                        noteL.note.setXShift(xShift);\n                    }\n                }\n            }\n            // format complete\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        // Check middle voice stem intersection with lower voice\n        if (noteM.minLine < noteL.maxLine + 0.5) {\n            if (!noteM.isrest) {\n                stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n                stemDelta = Math.max(stemDelta, noteM.stemMin);\n                noteM.minLine = noteM.line - stemDelta;\n                noteM.note.setStemLength(stemDelta * 10);\n            }\n        }\n        // For three voices, test if rests can be repositioned\n        //\n        // Special case 1 :: middle voice rest between two notes\n        //\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    // center middle voice rest between the upper and lower voices\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 3; // shift middle rest right\n                    noteM.note.setXShift(xShift);\n                }\n                // format complete\n                return true;\n            }\n        }\n        // Special case 2 :: all voices are rests\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            // Shift upper voice rest up\n            shiftRestVertical(noteU, noteM, 1);\n            // Shift lower voice rest down\n            shiftRestVertical(noteL, noteM, -1);\n            // format complete\n            return true;\n        }\n        // Test if any other rests can be repositioned\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            // Shift middle voice rest up\n            shiftRestVertical(noteM, noteL, 1);\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            // Shift middle voice rest down\n            shiftRestVertical(noteM, noteU, -1);\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            // shift upper voice rest up;\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            // shift lower voice rest down\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        // If middle voice intersects upper or lower voice\n        if ((!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n            (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)) {\n            xShift = voiceXShift + 3; // shift middle note right\n            noteM.note.setXShift(xShift);\n        }\n        return true;\n    }\n    static formatByY(notes, state) {\n        // NOTE: this function does not support more than two voices per stave. Use with care.\n        let hasStave = true;\n        for (let i = 0; i < notes.length; i++) {\n            hasStave = hasStave && notes[i].getStave() != undefined;\n        }\n        if (!hasStave) {\n            throw new RuntimeError('NoStave', 'All notes must have a stave.');\n        }\n        let xShift = 0;\n        for (let i = 0; i < notes.length - 1; i++) {\n            let topNote = notes[i];\n            let bottomNote = notes[i + 1];\n            if (topNote.getStemDirection() === Stem.DOWN) {\n                topNote = notes[i + 1];\n                bottomNote = notes[i];\n            }\n            const topKeys = topNote.getKeyProps();\n            const bottomKeys = bottomNote.getKeyProps();\n            const HALF_NOTEHEAD_HEIGHT = 0.5;\n            // `keyProps` and `stave.getYForLine` have different notions of a `line`\n            // so we have to convert the keyProps value by subtracting 5.\n            // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n            //\n            // We also extend the y for each note by a half notehead because the\n            // notehead's origin is centered\n            const topStave = topNote.checkStave();\n            const topNoteBottomY = topStave.getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n            const bottomStave = bottomNote.checkStave();\n            const bottomNoteTopY = bottomStave.getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n            const areNotesColliding = bottomNoteTopY != undefined && topNoteBottomY != undefined ? bottomNoteTopY - topNoteBottomY < 0 : false;\n            if (areNotesColliding) {\n                xShift = topNote.getVoiceShiftWidth() + 2;\n                bottomNote.setXShift(xShift);\n            }\n        }\n        state.right_shift += xShift;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    reset() {\n        super.reset();\n        // Save prior noteHead styles & reapply them after making new noteheads.\n        const noteHeadStyles = this._noteHeads.map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        this._noteHeads.forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this._noteHeads.forEach((head) => head.setStave(stave));\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        // Update stem extension is a beam is assigned.\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    // Builds a `Stem` for the note\n    buildStem() {\n        this.setStem(new Stem({ hide: !!this.isRest() }));\n        return this;\n    }\n    // Builds a `NoteHead` for each key in the note\n    buildNoteHeads() {\n        this._noteHeads = [];\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        // Draw notes from bottom to top.\n        // For down-stem notes, we draw from top to bottom.\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            const noteProps = this.keyProps[i];\n            const line = noteProps.line;\n            // Keep track of last line with a note head, so that consecutive heads\n            // are correctly displaced.\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.use_default_head_x = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                note_type: this.noteType,\n                displaced,\n                stem_direction: stemDirection,\n                custom_glyph_code: noteProps.code,\n                glyph_font_scale: this.render_options.glyph_font_scale,\n                x_shift: noteProps.shift_right,\n                stem_up_x_offset: noteProps.stem_up_x_offset,\n                stem_down_x_offset: noteProps.stem_down_x_offset,\n                line: noteProps.line,\n            });\n            this._noteHeads[i] = notehead;\n        }\n    }\n    // Automatically sets the stem direction based on the keys in the note\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        // Figure out optimal stem direction based on given notes\n        this.minLine = this.keyProps[0].line;\n        this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    // Calculates and stores the properties for each key in the note\n    calculateKeyProps() {\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            // All rests use the same position on the line.\n            // if (this.glyph.rest) key = this.glyph.position;\n            if (this.glyph.rest)\n                this.glyph.position = key;\n            const options = { octave_shift: this.octave_shift || 0 };\n            const props = Tables.keyProperties(key, this.clef, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            // Override line placement for default rests\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            // Calculate displacement of this note\n            const line = props.line;\n            if (lastLine == undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) === 0.5) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    // Have to mark the previous note as\n                    // displaced as well, for modifier placement\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        // Sort the notes from lowest line to highest line\n        lastLine = undefined;\n        this.keyProps.forEach((key) => {\n            if (lastLine && key.line < lastLine) {\n                warn('Unsorted keys in note will be sorted. ' + 'See https://github.com/0xfe/vexflow/issues/104 for details.');\n            }\n            lastLine = key.line;\n        });\n        this.keyProps.sort((a, b) => a.line - b.line);\n    }\n    // Get the `BoundingBox` for the entire note\n    getBoundingBox() {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const { width: w, modLeftPx, leftDisplacedHeadPx } = this.getMetrics();\n        const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n        let minY = 0;\n        let maxY = 0;\n        const halfLineSpacing = ((_b = (_a = this.getStave()) === null || _a === void 0 ? void 0 : _a.getSpacingBetweenLines()) !== null && _b !== void 0 ? _b : 0) / 2;\n        const lineSpacing = halfLineSpacing * 2;\n        if (this.isRest()) {\n            const y = this.ys[0];\n            const frac = Tables.durationToFraction(this.duration);\n            if (frac.equals(1) || frac.equals(2)) {\n                minY = y - halfLineSpacing;\n                maxY = y + halfLineSpacing;\n            }\n            else {\n                minY = y - this.glyph.line_above * lineSpacing;\n                maxY = y + this.glyph.line_below * lineSpacing;\n            }\n        }\n        else if (this.glyph.stem) {\n            const ys = this.getStemExtents();\n            ys.baseY += halfLineSpacing * this.getStemDirection();\n            minY = Math.min(ys.topY, ys.baseY);\n            maxY = Math.max(ys.topY, ys.baseY);\n        }\n        else {\n            minY = 0;\n            maxY = 0;\n            for (let i = 0; i < this.ys.length; ++i) {\n                const yy = this.ys[i];\n                if (i === 0) {\n                    minY = yy;\n                    maxY = yy;\n                }\n                else {\n                    minY = Math.min(yy, minY);\n                    maxY = Math.max(yy, maxY);\n                }\n            }\n            minY -= halfLineSpacing;\n            maxY += halfLineSpacing;\n        }\n        return new BoundingBox(x, minY, w, maxY - minY);\n    }\n    // Gets the line number of the bottom note in the chord.\n    // If `isTopNote` is `true` then get the top note's line number instead\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        // No precondition assumed for sortedness of keyProps array\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return this.glyph.rest;\n    }\n    // Determine if the current note is a chord\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    // Determine if the `StaveNote` has a stem\n    hasStem() {\n        return this.glyph.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            // We adjust the origin of the stem because we want the stem left-aligned\n            // with the notehead if stemmed-down, and right-aligned if stemmed-up\n            return super.getStemX() + (this.stem_direction ? Stem.WIDTH / (2 * -this.stem_direction) : 0);\n        }\n    }\n    // Get the `y` coordinate for text placed on the top/bottom of a\n    // note at a desired `text_line`\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n    }\n    // Sets the current note to the provided `stave`. This applies\n    // `y` values to the `NoteHeads`.\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = this._noteHeads.map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(y_top, y_bottom);\n        }\n        return this;\n    }\n    // Check if note is shifted to the right\n    isDisplaced() {\n        return this.displaced;\n    }\n    // Sets whether shift note to the right. `displaced` is a `boolean`\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    // Get the starting `x` coordinate for a `StaveTie`\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    // Get the ending `x` coordinate for a `StaveTie`\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    // Get the stave line on which to place a rest\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    // Get the default `x` and `y` coordinates for the provided `position`\n    // and key `index`\n    getModifierStartXY(position, index, options = {}) {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            // FIXME: Left modifier padding, move to font file\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            // FIXME: Right modifier padding, move to font file\n            x = this.getGlyphWidth() + this.x_shift + 2;\n            if (this.stem_direction === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += (_b = (_a = this === null || this === void 0 ? void 0 : this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().width) !== null && _b !== void 0 ? _b : 0;\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Sets the style of the complete StaveNote, including all keys\n    // and the stem.\n    setStyle(style) {\n        var _a;\n        super.setStyle(style);\n        this._noteHeads.forEach((notehead) => notehead.setStyle(style));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setStyle(style);\n        return this;\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        stem === null || stem === void 0 ? void 0 : stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        this.flagStyle = style;\n    }\n    getFlagStyle() {\n        return this.flagStyle;\n    }\n    // Sets the notehead at `index` to the provided coloring `style`.\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    setKeyStyle(index, style) {\n        this._noteHeads[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    // Get the width of the note if it is displaced. Used for `Voice`\n    // formatting\n    getVoiceShiftWidth() {\n        // TODO: may need to accomodate for dot here.\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    // Calculates and sets the extra pixels to the left or right\n    // if the note is displaced.\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stem_direction === Stem.DOWN ? this.getGlyphWidth() : 0);\n        // For upstems with flags, the extra space is unnecessary, since it's taken\n        // up by the flag.\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stem_direction === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            // If there are no modifiers on this note, make sure there is adequate padding\n            // between the notes.\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        // For upward flagged notes, the width of the flag needs to be added\n        if (this.shouldDrawFlag() && this.stem_direction === Stem.UP) {\n            width += this.getGlyphWidth();\n            // TODO: Add flag width as a separate metric\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    /**\n     * @typedef {Object} noteHeadBounds\n     * @property {number} y_top the highest notehead bound\n     * @property {number} y_bottom the lowest notehead bound\n     * @property {number|Null} displaced_x the starting x for displaced noteheads\n     * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n     * @property {number} highest_line the highest notehead line in traditional music line\n     *  numbering (bottom line = 1, top line = 5)\n     * @property {number} lowest_line the lowest notehead line\n     * @property {number|false} highest_displaced_line the highest staff line number\n     *   for a displaced notehead\n     * @property {number|false} lowest_displaced_line\n     * @property {number} highest_non_displaced_line\n     * @property {number} lowest_non_displaced_line\n     */\n    /**\n     * Get the staff line and y value for the highest & lowest noteheads\n     * @returns {noteHeadBounds}\n     */\n    getNoteHeadBounds() {\n        // Top and bottom Y values for stem.\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        this._noteHeads.forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            y_top: yTop,\n            y_bottom: yBottom,\n            displaced_x: displacedX,\n            non_displaced_x: nonDisplacedX,\n            highest_line: highestLine,\n            lowest_line: lowestLine,\n            highest_displaced_line: highestDisplacedLine,\n            lowest_displaced_line: lowestDisplacedLine,\n            highest_non_displaced_line: highestNonDisplacedLine,\n            lowest_non_displaced_line: lowestNonDisplacedLine,\n        };\n    }\n    // Get the starting `x` coordinate for the noteheads\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.x_shift;\n    }\n    // Get the ending `x` coordinate for the noteheads\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return this._noteHeads.slice();\n    }\n    /** @deprecated use StaveNote.noteHeads instead. */\n    get note_heads() {\n        showDeprecationWarningForNoteHeads();\n        return this.noteHeads;\n    }\n    // Draw the ledger lines between the stave and the highest/lowest keys\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { glyph, render_options: { stroke_px }, } = this;\n        const ctx = this.checkContext();\n        const width = glyph.getWidth() + stroke_px * 2;\n        const doubleWidth = 2 * (glyph.getWidth() + stroke_px) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highest_line, lowest_line, highest_displaced_line, highest_non_displaced_line, lowest_displaced_line, lowest_non_displaced_line, displaced_x, non_displaced_x, } = this.getNoteHeadBounds();\n        // Early out if there are no ledger lines to draw.\n        if (highest_line < 6 && lowest_line > 0)\n            return;\n        const min_x = Math.min(displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0, non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = min_x - stroke_px;\n            else if (normal)\n                x = (non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0) - stroke_px;\n            else\n                x = (displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0) - stroke_px;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        this.applyStyle(ctx, style);\n        // Draw ledger lines below the staff:\n        for (let line = 6; line <= highest_line; ++line) {\n            const normal = non_displaced_x !== undefined && line <= highest_non_displaced_line;\n            const displaced = highest_displaced_line !== undefined && line <= highest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        // Draw ledger lines above the staff:\n        for (let line = 0; line >= lowest_line; --line) {\n            const normal = non_displaced_x !== undefined && line >= lowest_non_displaced_line;\n            const displaced = lowest_displaced_line !== undefined && line >= lowest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        this.restoreStyle(ctx, style);\n    }\n    // Draw all key modifiers\n    drawModifiers() {\n        const ctx = this.checkContext();\n        ctx.openGroup('modifiers');\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = this._noteHeads[index];\n            const noteheadStyle = notehead.getStyle();\n            notehead.applyStyle(ctx, noteheadStyle);\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n            notehead.restoreStyle(ctx, noteheadStyle);\n        }\n        ctx.closeGroup();\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyph.flag; // specified in tables.js\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam;\n    }\n    // Draw the flag for the note\n    drawFlag() {\n        var _a;\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            // eslint-disable-next-line\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX();\n            // FIXME: What's with the magic +/- 2\n            // ANSWER: a corner of the note stem pokes out beyond the tip of the flag.\n            // The extra +/- 2 pushes the flag glyph outward so it covers the stem entirely.\n            // Alternatively, we could shorten the stem.\n            const extension = this.flag !== undefined ? this.flag.checkMetrics().y_shift : 0;\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    y_top - noteStemHeight + 2 - extension\n                : // Up stems are above the note head and have flags on the right.\n                    y_bottom - noteStemHeight - 2 - extension;\n            // Draw the Flag\n            ctx.openGroup('flag', undefined, { pointerBBox: true });\n            this.applyStyle(ctx, this.getFlagStyle());\n            (_a = this.flag) === null || _a === void 0 ? void 0 : _a.render(ctx, flagX, flagY);\n            this.restoreStyle(ctx, this.getFlagStyle());\n            ctx.closeGroup();\n        }\n    }\n    // Draw the NoteHeads\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        this._noteHeads.forEach((notehead) => {\n            ctx.openGroup('notehead', undefined, { pointerBBox: true });\n            notehead.setContext(ctx).draw();\n            ctx.closeGroup();\n        });\n    }\n    drawStem(stemOptions) {\n        var _a;\n        // GCR TODO: I can't find any context in which this is called with the stemStruct\n        // argument in the codebase or tests. Nor can I find a case where super.drawStem\n        // is called at all. Perhaps these should be removed?\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        // If we will render a flag, we shorten the stem so that the tip\n        // does not poke through the flag.\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        ctx.openGroup('stem', undefined, { pointerBBox: true });\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(ctx).draw();\n        ctx.closeGroup();\n    }\n    /**\n     * Override stemmablenote stem extension to adjust for distance from middle line.\n     */\n    getStemExtension() {\n        const super_stem_extension = super.getStemExtension();\n        if (!this.glyph.stem) {\n            return super_stem_extension;\n        }\n        const stem_direction = this.getStemDirection();\n        if (stem_direction !== this.calculateOptimalStemDirection()) {\n            return super_stem_extension; // no adjustment for manually set stem direction.\n        }\n        let mid_line_distance;\n        const MIDDLE_LINE = 3;\n        if (stem_direction === Stem.UP) {\n            // Note that the use of maxLine here instead of minLine might\n            // seem counterintuitive, but in the case of (say) treble clef\n            // chord(F2, E4) stem up, we do not want to extend the stem because\n            // of F2, when a normal octave-length stem above E4 is fine.\n            //\n            // maxLine and minLine are set in calculateOptimalStemDirection() so\n            // will be known.\n            mid_line_distance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            mid_line_distance = this.minLine - MIDDLE_LINE;\n        }\n        // how many lines more than an octave is the relevant notehead?\n        const lines_over_octave_from_mid_line = mid_line_distance - 3.5;\n        if (lines_over_octave_from_mid_line <= 0) {\n            return super_stem_extension;\n        }\n        const stave = this.getStave();\n        let spacing_between_lines = 10;\n        if (stave != undefined) {\n            spacing_between_lines = stave.getSpacingBetweenLines();\n        }\n        return super_stem_extension + lines_over_octave_from_mid_line * spacing_between_lines;\n    }\n    // Draws all the `StaveNote` parts. This is the main drawing method.\n    draw() {\n        var _a;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        // Format note head x positions\n        this._noteHeads.forEach((notehead) => notehead.setX(xBegin));\n        // Format stem x positions\n        const stemX = this.getStemX();\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setNoteHeadXBounds(stemX, stemX);\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        // Apply the overall style -- may be contradicted by local settings:\n        this.applyStyle();\n        this.setAttribute('el', ctx.openGroup('stavenote', this.getAttribute('id')));\n        this.drawLedgerLines();\n        ctx.openGroup('note', undefined, { pointerBBox: true });\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        ctx.closeGroup();\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle();\n        this.setRendered();\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// STATIC MEMBERS\nStaveNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { isCategory } from './typeguard';\nimport { RuntimeError } from './util';\nexport const isGraceNote = (obj) => isCategory(obj, GraceNote);\nexport class GraceNote extends StaveNote {\n    constructor(noteStruct) {\n        super(Object.assign({ glyph_font_scale: Tables.NOTATION_FONT_SCALE * GraceNote.SCALE, stroke_px: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 3;\n    }\n    static get CATEGORY() {\n        return 'GraceNote';\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    static get SCALE() {\n        return 0.66;\n    }\n    getStemExtension() {\n        if (this.stem_extension_override) {\n            return this.stem_extension_override;\n        }\n        const glyph = this.getGlyph();\n        if (glyph) {\n            let ret = super.getStemExtension();\n            if (glyph.stem) {\n                const staveNoteScale = this.getStaveNoteScale();\n                ret = (Stem.HEIGHT + ret) * staveNoteScale - Stem.HEIGHT;\n            }\n            return ret;\n        }\n        return 0;\n    }\n    // FIXME: move this to more basic class.\n    getStaveNoteScale() {\n        return this.render_options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const staveNoteScale = this.getStaveNoteScale();\n            // some magic numbers are based on the staveNoteScale 0.66.\n            const offsetScale = staveNoteScale / 0.66;\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                // FIXME: should render slash after beam?\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale, 8 * offsetScale, {\n                    stem: 6 * offsetScale,\n                    beam: 5 * offsetScale,\n                });\n            }\n            else {\n                const stem_direction = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteStemHeight = stem.getHeight();\n                let x = this.getAbsoluteX();\n                let y = stem_direction === Stem.DOWN\n                    ? noteHeadBounds.y_top - noteStemHeight\n                    : noteHeadBounds.y_bottom - noteStemHeight;\n                let defaultOffsetY = Tables.STEM_HEIGHT;\n                defaultOffsetY -= defaultOffsetY / 2.8;\n                y += defaultOffsetY * staveNoteScale * stem_direction;\n                const offsets = stem_direction === Stem.UP\n                    ? {\n                        x1: 1,\n                        y1: 0,\n                        x2: 13,\n                        y2: -9,\n                    }\n                    : {\n                        x1: -4,\n                        y1: 1,\n                        x2: 13,\n                        y2: 9,\n                    };\n                x += offsets.x1 * offsetScale;\n                y += offsets.y1 * offsetScale;\n                slashBBox = {\n                    x1: x,\n                    y1: y,\n                    x2: x + offsets.x2 * offsetScale,\n                    y2: y + offsets.y2 * offsetScale,\n                };\n            }\n            // FIXME: avoid staff lines, ledger lines or others.\n            const ctx = this.checkContext();\n            ctx.save();\n            ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.restore();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beam_slope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beam_angle = Math.atan(beam_slope * scaleX);\n        // slash line intersecting point on beam.\n        const iPointOnBeam = {\n            dx: Math.cos(beam_angle) * slashBeamOffset,\n            dy: Math.sin(beam_angle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n        const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n        const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n        const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beam_slope;\n        const ret = {\n            x1: stemX - protrusion_stem_dx,\n            y1: stemY + slashStemOffset - protrusion_stem_dy,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusion_beam_dx,\n            y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n        };\n        return ret;\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\nimport { isGraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { isStaveNote } from './stavenote';\nimport { isCategory } from './typeguard';\nimport { RuntimeError } from './util';\nexport const isDot = (obj) => isCategory(obj, Dot);\nexport class Dot extends Modifier {\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.radius = 2;\n        this.setWidth(5);\n        this.dot_shiftY = 0;\n    }\n    static get CATEGORY() {\n        return 'Dot';\n    }\n    /** Returns the dots associated to a Note. */\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    /** Add a dot on the specified keys to the notes. */\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    dot.setDotShiftY(note.glyph.dot_shiftY);\n                    note.addModifier(i, dot);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) != undefined) {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyph.dot_shiftY);\n                note.addModifier(options === null || options === void 0 ? void 0 : options.index, dot);\n            }\n            else {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyph.dot_shiftY);\n                note.addModifier(0, dot);\n            }\n        }\n    }\n    // Arrange dots inside a ModifierContext.\n    static format(dots, state) {\n        const right_shift = state.right_shift;\n        const dot_spacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dot_list = [];\n        const max_shift_map = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                // consider right displaced head with no previous modifier\n                if (right_shift === 0)\n                    shift = note.getRightDisplacedHeadPx();\n                else\n                    shift = right_shift;\n            }\n            else if (note.getCategory() === 'TabNote') {\n                props = { line: 0.5 }; // Shim key props for dot placement\n                shift = right_shift;\n            }\n            else {\n                // note object is not StaveNote or TabNote.\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const note_id = note.getAttribute('id');\n            dot_list.push({ line: props.line, note, note_id, dot });\n            max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n        }\n        // Sort dots by line number.\n        dot_list.sort((a, b) => b.line - a.line);\n        let dot_shift = right_shift;\n        let x_width = 0;\n        let last_line = null;\n        let last_note = null;\n        let prev_dotted_space = null;\n        let half_shiftY = 0;\n        for (let i = 0; i < dot_list.length; ++i) {\n            const { dot, note, note_id, line } = dot_list[i];\n            // Reset the position of the dot every line.\n            if (line !== last_line || note !== last_note) {\n                dot_shift = max_shift_map[note_id];\n            }\n            if (!note.isRest() && line !== last_line) {\n                if (Math.abs(line % 1) === 0.5) {\n                    // note is on a space, so no dot shift\n                    half_shiftY = 0;\n                }\n                else {\n                    // note is on a line, so shift dot to space above the line\n                    half_shiftY = 0.5;\n                    if (last_note != null && !last_note.isRest() && last_line != null && last_line - line === 0.5) {\n                        // previous note on a space, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                    else if (line + half_shiftY === prev_dotted_space) {\n                        // previous space is dotted, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                }\n            }\n            // convert half_shiftY to a multiplier for dots.draw()\n            if (note.isRest()) {\n                dot.dot_shiftY += -half_shiftY;\n            }\n            else {\n                dot.dot_shiftY = -half_shiftY;\n            }\n            prev_dotted_space = line + half_shiftY;\n            dot.setXShift(dot_shift);\n            dot_shift += dot.getWidth() + dot_spacing; // spacing\n            x_width = dot_shift > x_width ? dot_shift : x_width;\n            last_line = line;\n            last_note = note;\n        }\n        // Update state.\n        state.right_shift += x_width;\n        return true;\n    }\n    setNote(note) {\n        this.note = note;\n        if (isGraceNote(note)) {\n            this.radius *= 0.5;\n            this.setWidth(3);\n        }\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dot_shiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        // Set the starting y coordinate to the base of the stem for TabNotes.\n        if (note.getCategory() === 'TabNote') {\n            start.y = note.getStemExtents().baseY;\n        }\n        const x = start.x + this.x_shift + this.width - this.radius;\n        const y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.ts` for usage examples.\nimport { isDot } from './dot';\nimport { Font } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { isCategory } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport const isTabNote = (obj) => isCategory(obj, TabNote);\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n    const stem_through = [];\n    let group = [];\n    for (let string = 1; string <= num_lines; string++) {\n        const is_used = strings_used.indexOf(string) > -1;\n        if (!is_used) {\n            group.push(string);\n        }\n        else {\n            stem_through.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stem_through.push(group);\n    return stem_through;\n}\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n    const up_stem = stem_direction !== 1;\n    const down_stem = stem_direction !== -1;\n    const line_spacing = stave.getSpacingBetweenLines();\n    const total_lines = stave.getNumLines();\n    const stem_lines = [];\n    unused_strings.forEach((strings) => {\n        const containsLastString = strings.indexOf(total_lines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((up_stem && containsFirstString) || (down_stem && containsLastString)) {\n            return;\n        }\n        // If there's only one string in the group, push a duplicate value.\n        // We do this because we need 2 strings to convert into upper/lower y\n        // values.\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const line_ys = [];\n        // Iterate through each group string and store it's y position\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === total_lines;\n            // Get the y value for the appropriate staff line,\n            // we adjust for a 0 index array, since string numbers are index 1\n            let y = stave.getYForLine(string - 1);\n            // Unless the string is the first or last, add padding to each side\n            // of the line\n            if (index === 0 && !isTopBound) {\n                y -= line_spacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += line_spacing / 2 - 1;\n            }\n            // Store the y value\n            line_ys.push(y);\n            // Store a subsequent y value connecting this group to the main\n            // stem above/below the stave if it's the top/bottom string\n            if (stem_direction === 1 && isTopBound) {\n                line_ys.push(stem_y - 2);\n            }\n            else if (stem_direction === -1 && isBottomBound) {\n                line_ys.push(stem_y + 2);\n            }\n        });\n        // Add the sorted y values to the\n        stem_lines.push(line_ys.sort((a, b) => a - b));\n    });\n    return stem_lines;\n}\nexport class TabNote extends StemmableNote {\n    // Initialize the TabNote with a `noteStruct` full of properties\n    // and whether to `draw_stem` when rendering the note\n    constructor(noteStruct, draw_stem = false) {\n        super(noteStruct);\n        this.glyphs = [];\n        // Return the number of the greatest string, which is the string lowest on the display\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        // Return the number of the least string, which is the string highest on the display\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false; // Renders parenthesis around notes\n        // Note properties\n        // The fret positions in the note. An array of `{ str: X, fret: X }`\n        this.positions = noteStruct.positions || [];\n        // Render Options\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: Tables.TABLATURE_FONT_SCALE, \n            // Flag to draw a stem\n            draw_stem, \n            // Flag to draw dot modifiers\n            draw_dots: draw_stem, \n            // Flag to extend the main stem through the stave and fret positions\n            draw_stem_through_stave: false, \n            // vertical shift from stave line\n            y_shift: 0, \n            // normal glyph scale\n            scale: 1.0, \n            // default tablature font\n            font: `${Font.SIZE}pt ${Font.SANS_SERIF}` });\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stem_direction) {\n            this.setStemDirection(noteStruct.stem_direction);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        // Renders parenthesis around notes\n        this.ghost = false;\n        this.updateWidth();\n    }\n    static get CATEGORY() {\n        return 'TabNote';\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n    // Often used for indicating frets that are being bent to\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    // Determine if the note has a stem\n    hasStem() {\n        if (this.render_options.draw_stem)\n            return true;\n        return false;\n    }\n    // Get the default stem extension for the note\n    getStemExtension() {\n        if (this.stem_extension_override != null) {\n            return this.stem_extension_override;\n        }\n        if (this.flag) {\n            return this.getStemDirection() === 1 ? -this.flag.checkMetrics().y_shift : this.flag.checkMetrics().y_shift;\n        }\n        return 0;\n    }\n    // Calculate and store the width of the note\n    updateWidth() {\n        this.glyphs = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const glyph = Tables.tabToGlyph(fret.toString(), this.render_options.scale);\n            this.glyphs.push(glyph);\n            this.width = Math.max(glyph.getWidth(), this.width);\n        }\n        // For some reason we associate a notehead glyph with a TabNote, and this\n        // glyph is used for certain width calculations. Of course, this is totally\n        // incorrect since a notehead is a poor approximation for the dimensions of\n        // a fret number which can have multiple digits. As a result, we must\n        // overwrite getWidth() to return the correct width\n        this.glyph.getWidth = () => this.width;\n    }\n    // Set the `stave` to the note\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        // Calculate the fret number width based on font used\n        if (ctx) {\n            this.width = 0;\n            for (let i = 0; i < this.glyphs.length; ++i) {\n                const glyph = this.glyphs[i];\n                const text = '' + glyph.text;\n                if (text.toUpperCase() !== 'X') {\n                    ctx.save();\n                    ctx.setFont(this.render_options.font);\n                    glyph.width = ctx.measureText(text).width;\n                    ctx.restore();\n                    glyph.getWidth = () => glyph.width;\n                }\n                this.width = Math.max(glyph.getWidth(), this.width);\n            }\n            this.glyph.getWidth = () => this.width;\n        }\n        // we subtract 1 from `line` because getYForLine expects a 0-based index,\n        // while the position.str is a 1-based index\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    // Get the fret positions for the note\n    getPositions() {\n        return this.positions;\n    }\n    // Get the default `x` and `y` coordinates for a modifier at a specific\n    // `position` at a fret position `index`\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const note_glyph_width = this.glyph.getWidth();\n            x = note_glyph_width / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Get the default line for rest\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        // width is already set during init()\n        this.preFormatted = true;\n    }\n    // Get the x position for the stem\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    // Get the y position for the stem\n    getStemY() {\n        const num_lines = this.checkStave().getNumLines();\n        // The decimal staff line amounts provide optimal spacing between the\n        // fret number and the stem\n        const stemUpLine = -0.5;\n        const stemDownLine = num_lines - 0.5;\n        const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    // Get the stem extents for the tabnote\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    // Draw the fal onto the context\n    drawFlag() {\n        const { beam, glyph, stem_direction, render_options: { draw_stem, glyph_font_scale }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam == undefined && draw_stem;\n        // Now it's the flag's turn.\n        if (glyph.flag && shouldDrawFlag) {\n            const flag_x = this.getStemX() + 1;\n            const flag_y = this.getStemY() - this.checkStem().getHeight();\n            const flag_code = stem_direction === Stem.DOWN\n                ? glyph.code_flag_downstem // Down stems have flags on the left.\n                : glyph.code_flag_upstem;\n            // Draw the Flag\n            Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, { category: 'flag.tabStem' });\n        }\n    }\n    // Render the modifiers onto the context.\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            // Only draw the dots if enabled.\n            if (isDot(modifier) && !this.render_options.draw_dots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    // Render the stem extension through the fret positions\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.render_options.draw_stem;\n        const stemThrough = this.render_options.draw_stem_through_stave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.save();\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n            ctx.restore();\n        }\n    }\n    // Render the fret positions onto the context\n    drawPositions() {\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.render_options.y_shift;\n            const glyph = this.glyphs[i];\n            // Center the fret text beneath the notation note head\n            const note_glyph_width = this.glyph.getWidth();\n            const tab_x = x + note_glyph_width / 2 - glyph.getWidth() / 2;\n            // FIXME: Magic numbers.\n            ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n            if (glyph.code) {\n                Glyph.renderGlyph(ctx, tab_x, y, this.render_options.glyph_font_scale * this.render_options.scale, glyph.code);\n            }\n            else {\n                ctx.save();\n                ctx.setFont(this.render_options.font);\n                const text = glyph.text.toString();\n                ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n                ctx.restore();\n            }\n        }\n    }\n    // The main rendering function for the entire note.\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const render_stem = this.beam == undefined && this.render_options.draw_stem;\n        ctx.openGroup('tabnote', undefined, { pointerBBox: true });\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && render_stem) {\n            const stem_x = this.getStemX();\n            this.stem.setNoteHeadXBounds(stem_x, stem_x);\n            ctx.openGroup('stem', undefined, { pointerBBox: true });\n            this.stem.setContext(ctx).draw();\n            ctx.closeGroup();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextFormatter.DEBUG)\n        log('Vex.Flow.TextFormatter', args);\n}\n/**\n * Text widths are stored in a cache, so we don't have to recompute widths\n * for the same font + string combination.\n *\n * The cache is first keyed by the font information. The key is of the form:\n *   `${family}-${size}-${weight}-${style}`\n * The second level key is the specific text to be measured.\n *\n * The stored value is the measured width in `em` units.\n *   textWidth == textWidthCache[cacheKey][textToMeasure]\n */\nconst textWidthCache = {};\n/**\n * Applications may register additional fonts via `TextFormatter.registerInfo(info)`.\n * The metrics for those fonts will be made available to the application.\n */\nconst registry = {};\nexport class TextFormatter {\n    /**\n     * Use `TextFormatter.create(...)` to build an instance from information previously\n     * registered via `TextFormatter.registerInfo(info)`.\n     */\n    constructor(formatterInfo) {\n        /** Font family. */\n        this.family = '';\n        /** Specified in `pt` units. */\n        this.size = 14;\n        /** Font metrics are extracted at 1000 upem (units per em). */\n        this.resolution = 1000;\n        /**\n         * For text formatting, we do not require glyph outlines, but instead rely on glyph\n         * bounding box metrics such as:\n         * ```\n         * {\n         *    x_min: 48,\n         *    x_max: 235,\n         *    y_min: -17,\n         *    y_max: 734,\n         *    ha: 751,\n         *    leftSideBearing: 48,\n         *    advanceWidth: 286,\n         *  }\n         * ```\n         */\n        this.glyphs = {};\n        this.serifs = false;\n        this.monospaced = false;\n        this.italic = false;\n        this.bold = false;\n        this.superscriptOffset = 0;\n        this.subscriptOffset = 0;\n        this.maxSizeGlyph = 'H';\n        // This is an internal key used to index the `textWidthCache`.\n        this.cacheKey = '';\n        this.updateParams(formatterInfo);\n    }\n    /**\n     * Return all registered font families.\n     */\n    static getFontFamilies() {\n        const registeredFonts = [];\n        for (const fontFamily in registry) {\n            const formatterInfo = registry[fontFamily];\n            registeredFonts.push(Object.assign({}, formatterInfo));\n        }\n        return registeredFonts;\n    }\n    /**\n     * Call `TextFormatter.registerInfo(info)` to register font information before using this method.\n     *\n     * This method creates a formatter for the font that most closely matches the requested font.\n     * We compare font family, bold, and italic attributes.\n     * This method will return a fallback formatter if there are no matches.\n     */\n    static create(requestedFont = {}) {\n        L('create: ', requestedFont);\n        if (!requestedFont.family) {\n            requestedFont.family = Font.SANS_SERIF;\n        }\n        // TODO: One potential (small) optimization is to cache the TextFormatter object\n        // returned for each font info. We would probably want to clear the cache if\n        // the registry is ever updated.\n        const candidates = [];\n        // The incoming font family is a string of comma-separated font family names.\n        // (e.g., `PetalumaScript, Arial, sans-serif`).\n        const requestedFamilies = requestedFont.family.split(/\\s*,\\s*/);\n        for (const requestedFamily of requestedFamilies) {\n            for (const fontFamily in registry) {\n                // Support cases where the registry contains 'Roboto Slab Medium',\n                // but the requestedFont.family is 'Roboto Slab'.\n                if (fontFamily.startsWith(requestedFamily)) {\n                    candidates.push(registry[fontFamily]);\n                }\n            }\n            if (candidates.length > 0) {\n                break;\n            }\n        }\n        let formatter;\n        if (candidates.length === 0) {\n            // No match, so return a fallback text formatter.\n            formatter = new TextFormatter(Object.values(registry)[0]);\n        }\n        else if (candidates.length === 1) {\n            formatter = new TextFormatter(candidates[0]);\n        }\n        else {\n            const bold = Font.isBold(requestedFont.weight);\n            const italic = Font.isItalic(requestedFont.style);\n            const perfectMatch = candidates.find((f) => f.bold === bold && f.italic === italic);\n            if (perfectMatch) {\n                formatter = new TextFormatter(perfectMatch);\n            }\n            else {\n                const partialMatch = candidates.find((f) => f.italic === italic || f.bold === bold);\n                if (partialMatch) {\n                    formatter = new TextFormatter(partialMatch);\n                }\n                else {\n                    formatter = new TextFormatter(candidates[0]);\n                }\n            }\n        }\n        const fontSize = requestedFont.size;\n        if (typeof fontSize !== 'undefined') {\n            const fontSizeInPt = Font.convertSizeToPointValue(fontSize);\n            formatter.setFontSize(fontSizeInPt);\n        }\n        return formatter;\n    }\n    /**\n     * @param fontFamily used as a key to the font registry.\n     * @returns the same info object that was passed in via `TextFormatter.registerInfo(info)`\n     */\n    static getInfo(fontFamily) {\n        return registry[fontFamily];\n    }\n    /**\n     * Apps may register their own fonts and metrics, and those metrics\n     * will be available to the app for formatting.\n     *\n     * Metrics can be generated from a font file using fontgen_text.js in the tools/fonts directory.\n     * @param info\n     * @param overwrite\n     */\n    static registerInfo(info, overwrite = false) {\n        L('registerInfo: ', info, overwrite);\n        const fontFamily = info.family;\n        const currFontInfo = registry[fontFamily];\n        if (currFontInfo === undefined || overwrite) {\n            registry[fontFamily] = info;\n        }\n    }\n    updateParams(params) {\n        if (params.family)\n            this.family = params.family;\n        if (params.resolution)\n            this.resolution = params.resolution;\n        if (params.glyphs)\n            this.glyphs = params.glyphs;\n        if (params.serifs)\n            this.serifs = params.serifs;\n        if (params.monospaced)\n            this.monospaced = params.monospaced;\n        if (params.italic)\n            this.italic = params.italic;\n        if (params.bold)\n            this.bold = params.bold;\n        if (params.maxSizeGlyph)\n            this.maxSizeGlyph = params.maxSizeGlyph;\n        if (params.superscriptOffset)\n            this.superscriptOffset = params.superscriptOffset;\n        if (params.subscriptOffset)\n            this.subscriptOffset = params.subscriptOffset;\n        this.updateCacheKey();\n    }\n    /** Create a hash with the current font data, so we can cache computed widths. */\n    updateCacheKey() {\n        const family = this.family.replace(/\\s+/g, '_');\n        const size = this.size;\n        const weight = this.bold ? FontWeight.BOLD : FontWeight.NORMAL;\n        const style = this.italic ? FontStyle.ITALIC : FontStyle.NORMAL;\n        // Use the same key format as SVGContext.\n        this.cacheKey = `${family}%${size}%${weight}%${style}`;\n    }\n    /**\n     * The glyphs table is indexed by the character (e.g., 'C', '@').\n     * See: robotoslab_glyphs.ts & petalumascript_glyphs.ts.\n     */\n    getGlyphMetrics(character) {\n        if (this.glyphs[character]) {\n            return this.glyphs[character];\n        }\n        else {\n            return this.glyphs[this.maxSizeGlyph];\n        }\n    }\n    get maxHeight() {\n        const metrics = this.getGlyphMetrics(this.maxSizeGlyph);\n        return (metrics.ha / this.resolution) * this.fontSizeInPixels;\n    }\n    /**\n     * Retrieve the character's advanceWidth as a fraction of an `em` unit.\n     * For the space character ' ' as defined in the:\n     *   petalumascript_glyphs.ts: 250 advanceWidth in the 1000 unitsPerEm font returns 0.25.\n     *   robotoslab_glyphs.ts:     509 advanceWidth in the 2048 unitsPerEm font returns 0.2485.\n     */\n    getWidthForCharacterInEm(c) {\n        var _a;\n        const metrics = this.getGlyphMetrics(c);\n        if (!metrics) {\n            // An arbitrary number, close to the `em` width of the '#' and '5' characters in PetalumaScript.\n            return 0.65;\n        }\n        else {\n            const advanceWidth = (_a = metrics.advanceWidth) !== null && _a !== void 0 ? _a : 0;\n            return advanceWidth / this.resolution;\n        }\n    }\n    /**\n     * Retrieve the total width of `text` in `em` units.\n     */\n    getWidthForTextInEm(text) {\n        const key = this.cacheKey;\n        // Get the cache for this specific font family, size, weight, style combination.\n        // The cache contains previously computed widths for different `text` strings.\n        let cachedWidths = textWidthCache[key];\n        if (cachedWidths === undefined) {\n            cachedWidths = {};\n            textWidthCache[key] = cachedWidths;\n        }\n        let width = cachedWidths[text];\n        if (width === undefined) {\n            width = 0;\n            for (let i = 0; i < text.length; ++i) {\n                width += this.getWidthForCharacterInEm(text[i]);\n            }\n            cachedWidths[text] = width;\n        }\n        return width;\n    }\n    /** The width of the text (in `em`) is scaled by the font size (in `px`). */\n    getWidthForTextInPx(text) {\n        return this.getWidthForTextInEm(text) * this.fontSizeInPixels;\n    }\n    /**\n     * @param size in pt.\n     */\n    setFontSize(size) {\n        this.size = size;\n        // The width cache key depends on the current font size.\n        this.updateCacheKey();\n        return this;\n    }\n    /** `this.size` is specified in points. Convert to pixels. */\n    get fontSizeInPixels() {\n        return this.size * Font.scaleToPxFrom.pt;\n    }\n    getResolution() {\n        return this.resolution;\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextFormatter.DEBUG` to `true`. */\nTextFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TextFormatter } from './textformatter';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('Vex.Flow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nexport class Annotation extends Modifier {\n    /**\n     * Annotations inherit from `Modifier` and is positioned correctly when\n     * in a `ModifierContext`.\n     * Create a new `Annotation` with the string `text`.\n     */\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        // warning: the default in the constructor is TOP, but in the factory the default is BOTTOM.\n        // this is to support legacy application that may expect this.\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n        this.resetFont();\n        // The default width is calculated from the text.\n        this.setWidth(Tables.textWidth(text));\n    }\n    /** Annotations category string. */\n    static get CATEGORY() {\n        return 'Annotation';\n    }\n    /** Arrange annotations within a `ModifierContext` */\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            const textFormatter = TextFormatter.create(annotation.textFont);\n            // Text height is expressed in fractional stave spaces.\n            const textLines = (5 + textFormatter.maxHeight) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (note instanceof TabNote) {\n                if (note.render_options.draw_stem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (note instanceof StemmableNote) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            // Get the text width from the font metrics.\n            const textWidth = textFormatter.getWidthForTextInPx(annotation.text);\n            width = Math.max(width, textWidth);\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (note instanceof TabNote) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.top_text_line + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.top_text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.top_text_line);\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (note instanceof TabNote) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.text_line + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.text_line);\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.text_line);\n            }\n        }\n        state.left_shift += width / 2;\n        state.right_shift += width / 2;\n        return true;\n    }\n    /**\n     * Set vertical position of text (above or below stave).\n     * @param just value in `AnnotationVerticalJustify`.\n     */\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    /**\n     * Get horizontal justification.\n     */\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    /**\n     * Set horizontal justification.\n     * @param justification value in `Annotation.Justify`.\n     */\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    /** Render text beside the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const textFormatter = TextFormatter.create(this.textFont);\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        const classString = Object.keys(this.getAttribute('classes')).join(' ');\n        ctx.openGroup(classString, this.getAttribute('id'));\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText(this.text).width;\n        const text_height = textFormatter.maxHeight + 2;\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - text_width;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - text_width / 2;\n        } /* CENTER_STEM */\n        else {\n            x = note.getStemX() - text_width / 2;\n        }\n        let stem_ext = {};\n        let spacing = 0;\n        const has_stem = note.hasStem();\n        const stave = note.checkStave();\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        if (has_stem) {\n            stem_ext = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            // Use the largest (lowest) Y value\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE + text_height;\n            if (has_stem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stem_ext.topY + text_height + spacing * this.text_line);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.text_line) - 1;\n            const yb = stave.getYForBottomText(this.text_line);\n            y = yt + (yb - yt) / 2 + text_height / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            y = note.getYs()[0] - (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (has_stem && stemDirection === Stem.UP) {\n                // If the stem is above the stave already, go with default line width vs. actual\n                // since the lines between don't really matter.\n                spacing = stem_ext.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stem_ext.topY - spacing * (this.text_line + 1));\n            }\n        } /* CENTER_STEM */\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        ctx.fillText(this.text, x, y);\n        ctx.closeGroup();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\nAnnotation.DEBUG = false;\nAnnotation.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n/** Text annotations can be positioned and justified relative to the note. */\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n// MIT License\nimport { Glyph } from './glyph';\nimport { isGraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { isStaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { isTabNote } from './tabnote';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('Vex.Flow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\n// This includes both staff and ledger lines\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    // Initially, snap to nearest staff line or space\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\n// Helper function for checking if a Note object is either a StaveNote or a GraceNote.\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nfunction getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nfunction getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\n/**\n * Get the initial offset of the articulation from the y value of the starting position.\n * This is required because the top/bottom text positions already have spacing applied to\n * provide a \"visually pleasant\" default position. However the y values provided from\n * the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n * normalizes this asymmetry.\n * @param note\n * @param position\n * @returns\n */\nfunction getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            // this amount is larger than the stem-tip offset because we start from\n            // the center of the notehead\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.ts` for usage examples.\n */\nexport class Articulation extends Modifier {\n    /**\n     * Create a new articulation.\n     * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts`\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.position = BELOW;\n        this.render_options = {\n            font_scale: 38,\n        };\n        this.reset();\n    }\n    /** Articulations category string. */\n    static get CATEGORY() {\n        return 'Articulation';\n    }\n    /**\n     * FIXME:\n     * Most of the complex formatting logic (ie: snapping to space) is\n     * actually done in .render(). But that logic belongs in this method.\n     *\n     * Unfortunately, this isn't possible because, by this point, stem lengths\n     * have not yet been finalized. Finalized stem lengths are required to determine the\n     * initial position of any stem-side articulation.\n     *\n     * This indicates that all objects should have their stave set before being\n     * formatted. It can't be an optional if you want accurate vertical positioning.\n     * Consistently positioned articulations that play nice with other modifiers\n     * won't be possible until we stop relying on render-time formatting.\n     *\n     * Ideally, when this function has completed, the vertical articulation positions\n     * should be ready to render without further adjustment. But the current state\n     * is far from this ideal.\n     */\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), defined(articulation.glyph.getMetrics().height) / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            // Decide if we need to consider beam direction in placement.\n            if (note instanceof StemmableNote) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.top_text_line, ABOVE);\n                const curTop = noteLine + state.top_text_line + 0.5;\n                // If articulation must be above stave, add lines between note and stave top\n                if (!articulation.articulation.between_lines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.top_text_line);\n                state.top_text_line += increment;\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.text_line, BELOW);\n                const curBottom = noteLine + state.text_line + 0.5;\n                // if articulation must be below stave, add lines from note to stave bottom\n                if (!articulation.articulation.between_lines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.text_line);\n                state.text_line += increment;\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        state.left_shift += width / 2;\n        state.right_shift += width / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(0, artic));\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        const articulation = defined(this.articulation, 'ArgumentError', `Articulation not found: ${this.type}`);\n        const code = (this.position === ABOVE ? articulation.aboveCode : articulation.belowCode) || articulation.code;\n        this.glyph = new Glyph(code !== null && code !== void 0 ? code : '', this.render_options.font_scale);\n        this.setWidth(defined(this.glyph.getMetrics().width));\n    }\n    /** Render articulation in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, glyph, text_line: textLine } = this;\n        const canSitBetweenLines = this.articulation.between_lines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        // Articulations are centered over/under the note head.\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        const padding = Tables.currentMusicFont().lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n        let y = {\n            [ABOVE]: () => {\n                glyph.setOrigin(0.5, 1);\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                glyph.setOrigin(0.5, 0);\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                glyph.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + padding * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        glyph.render(ctx, x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { TabNote } from './tabnote';\nimport { TextFormatter } from './textformatter';\nimport { RuntimeError } from './util';\n/** Bend implements tablature bends. */\nexport class Bend extends Modifier {\n    /**\n     * Example of a phrase:\n     * ```\n     *    [{\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"half\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"1 1/2\"\n     *     width: 8;\n     *   }]\n     * ```\n     * @param text text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n     * @param release if true, render a release. (DEPRECATED)\n     * @param phrase if set, ignore \"text\" and \"release\", and use the more sophisticated phrase specified\n     */\n    constructor(text, release = false, phrase) {\n        super();\n        this.text = text;\n        this.x_shift = 0;\n        this.release = release;\n        this.tap = '';\n        this.resetFont();\n        this.render_options = {\n            line_width: 1.5,\n            line_style: '#777777',\n            bend_width: 8,\n            release_width: 8,\n        };\n        if (phrase) {\n            this.phrase = phrase;\n        }\n        else {\n            // Backward compatibility\n            this.phrase = [{ type: Bend.UP, text: this.text }];\n            if (this.release)\n                this.phrase.push({ type: Bend.DOWN, text: '' });\n        }\n        this.updateWidth();\n    }\n    static get CATEGORY() {\n        return 'Bend';\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    // Arrange bends in `ModifierContext`\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let last_width = 0;\n        // Format Bends\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (note instanceof TabNote) {\n                const stringPos = note.leastString() - 1;\n                if (state.top_text_line < stringPos) {\n                    state.top_text_line = stringPos;\n                }\n            }\n            bend.setXShift(last_width);\n            last_width = bend.getWidth();\n            bend.setTextLine(state.top_text_line);\n        }\n        state.right_shift += last_width;\n        state.top_text_line += 1;\n        return true;\n    }\n    /** Set horizontal shift in pixels. */\n    setXShift(value) {\n        this.x_shift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    /** Get text provided in the constructor. */\n    getText() {\n        return this.text;\n    }\n    getTextHeight() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        return textFormatter.maxHeight;\n    }\n    /** Recalculate width. */\n    updateWidth() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        const measureText = (text) => {\n            return textFormatter.getWidthForTextInPx(text);\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additional_width = bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n                bend.width = Math.max(additional_width, measureText(bend.text)) + 3;\n                bend.draw_width = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.x_shift);\n        return this;\n    }\n    /** Draw the bend on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const x_shift = this.x_shift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        // this.text_line is relative to top string in the group.\n        const bend_height = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) + 3;\n        const annotation_y = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cp_x = x + width;\n            const cp_y = y;\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderRelease = (x, y, width, height) => {\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y); // tip of the arrow\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const render_x = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, render_x, annotation_y);\n            ctx.restore();\n        };\n        let last_bend = undefined;\n        let last_bend_draw_width = 0;\n        let last_drawn_width = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.draw_width)\n                bend.draw_width = 0;\n            if (i === 0)\n                bend.draw_width += x_shift;\n            last_drawn_width = bend.draw_width + last_bend_draw_width - (i === 1 ? x_shift : 0);\n            if (bend.type === Bend.UP) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderArrowHead(start.x, bend_height, +1);\n                }\n                renderBend(start.x, start.y, last_drawn_width, bend_height);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (last_bend && last_bend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (!last_bend) {\n                    last_drawn_width = bend.draw_width;\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n            }\n            renderText(start.x + last_drawn_width, bend.text);\n            last_bend = bend;\n            last_bend_draw_width = bend.draw_width;\n            last_bend.x = start.x;\n            start.x += last_drawn_width;\n        }\n        if (!last_bend || last_bend.x == undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        // Final arrowhead and text\n        if (last_bend.type === Bend.UP) {\n            renderArrowHead(last_bend.x + last_drawn_width, bend_height, +1);\n        }\n        else if (last_bend.type === Bend.DOWN) {\n            renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n        }\n    }\n}\n/** Default text font. */\nBend.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author: Aaron (@AaronDavidNewman)\n//\n// This implements chord symbols above/below a chord.\n// Chord symbols are modifiers that can be attached to notes.\n// They can contain multiple 'blocks' which represent text or\n// glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.ts` for usage examples.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('Vex.Flow.ChordSymbol', args);\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolTypes;\n(function (SymbolTypes) {\n    SymbolTypes[SymbolTypes[\"GLYPH\"] = 1] = \"GLYPH\";\n    SymbolTypes[SymbolTypes[\"TEXT\"] = 2] = \"TEXT\";\n    SymbolTypes[SymbolTypes[\"LINE\"] = 3] = \"LINE\";\n})(SymbolTypes || (SymbolTypes = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\n/**\n * ChordSymbol is a modifier that creates a chord symbol above/below a chord.\n * As a modifier, it is attached to an existing note.\n */\nexport class ChordSymbol extends Modifier {\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.useKerning = true;\n        this.reportWidth = true;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return 'ChordSymbol';\n    }\n    static get superSubRatio() {\n        return ChordSymbol.metrics.global.superSubRatio;\n    }\n    /** Currently unused: Globally turn off text formatting, if the built-in formatting does not work for your font. */\n    static set NO_TEXT_FORMAT(val) {\n        ChordSymbol.noFormat = val;\n    }\n    static get NO_TEXT_FORMAT() {\n        return ChordSymbol.noFormat;\n    }\n    // eslint-disable-next-line\n    static getMetricForGlyph(glyphCode) {\n        if (ChordSymbol.metrics[glyphCode]) {\n            return ChordSymbol.metrics[glyphCode];\n        }\n        return undefined;\n    }\n    static get engravingFontResolution() {\n        return Tables.currentMusicFont().getResolution();\n    }\n    static get spacingBetweenBlocks() {\n        return ChordSymbol.metrics.global.spacing / ChordSymbol.engravingFontResolution;\n    }\n    static getWidthForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0.65; // probably should do something here.\n        }\n        return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n    }\n    static getYShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return metric.yOffset / ChordSymbol.engravingFontResolution;\n    }\n    static getXShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n    }\n    static get superscriptOffset() {\n        return ChordSymbol.metrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get subscriptOffset() {\n        return ChordSymbol.metrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get kerningOffset() {\n        return ChordSymbol.metrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n    }\n    // eslint-disable-next-line\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.chordSymbol;\n    }\n    static get lowerKerningText() {\n        // For example, see: `bravura_metrics.ts`\n        // BravuraMetrics.glyphs.chordSymbol.global.lowerKerningText, which returns an array of letters.\n        // ['D', 'F', 'P', 'T', 'V', 'Y']\n        return ChordSymbol.metrics.global.lowerKerningText;\n    }\n    static get upperKerningText() {\n        return ChordSymbol.metrics.global.upperKerningText;\n    }\n    static isSuperscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    static isSubscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n    /**\n     * Estimate the width of the whole chord symbol, based on the sum of the widths of the individual blocks.\n     * Estimate how many lines above/below the staff we need.\n     */\n    static format(symbols, state) {\n        var _a;\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let nonSuperWidth = 0;\n        const reportedWidths = [];\n        for (const symbol of symbols) {\n            const fontSize = Font.convertSizeToPointValue((_a = symbol.textFont) === null || _a === void 0 ? void 0 : _a.size);\n            const fontAdj = Font.scaleSize(fontSize, 0.05);\n            const glyphAdj = fontAdj * 2;\n            let lineSpaces = 1;\n            let vAlign = false;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = ChordSymbol.isSuperscript(block);\n                const sub = ChordSymbol.isSubscript(block);\n                const superSubScale = sup || sub ? ChordSymbol.superSubRatio : 1;\n                const adj = block.symbolType === SymbolTypes.GLYPH ? glyphAdj * superSubScale : fontAdj * superSubScale;\n                // If there are super/subscripts, they extend beyond the line so\n                // assume they take up 2 lines\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                // If there is a symbol-specific offset, add it but consider font\n                // size since font and glyphs will be interspersed.\n                const fontSize = symbol.textFormatter.fontSizeInPixels;\n                const superSubFontSize = fontSize * superSubScale;\n                if (block.symbolType === SymbolTypes.GLYPH && block.glyph !== undefined) {\n                    block.width = ChordSymbol.getWidthForGlyph(block.glyph) * superSubFontSize;\n                    block.yShift += ChordSymbol.getYShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.xShift += ChordSymbol.getXShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.glyph.scale = block.glyph.scale * adj;\n                }\n                else if (block.symbolType === SymbolTypes.TEXT) {\n                    block.width = block.width * superSubFontSize;\n                    block.yShift += symbol.getYOffsetForText(block.text) * adj;\n                }\n                if (block.symbolType === SymbolTypes.GLYPH &&\n                    block.glyph !== undefined &&\n                    block.glyph.code === ChordSymbol.glyphs.over.code) {\n                    lineSpaces = 2;\n                }\n                block.width += ChordSymbol.spacingBetweenBlocks * fontSize * superSubScale;\n                // If a subscript immediately  follows a superscript block, try to\n                // overlay them.\n                if (sup && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (!ChordSymbol.isSuperscript(prev)) {\n                        nonSuperWidth = width;\n                    }\n                }\n                if (sub && nonSuperWidth > 0) {\n                    vAlign = true;\n                    // slide the symbol over so it lines up with superscript\n                    block.xShift = block.xShift + (nonSuperWidth - width);\n                    width = nonSuperWidth;\n                    nonSuperWidth = 0;\n                    // If we have vertically lined up, turn kerning off.\n                    symbol.setEnableKerning(false);\n                }\n                if (!sup && !sub) {\n                    nonSuperWidth = 0;\n                }\n                block.vAlign = vAlign;\n                width += block.width;\n            }\n            // make kerning adjustments after computing super/subscripts\n            symbol.updateKerningAdjustments();\n            symbol.updateOverBarAdjustments();\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.top_text_line);\n                state.top_text_line += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.text_line + 1);\n                state.text_line += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth()) {\n                reportedWidths.push(width);\n            }\n            else {\n                reportedWidths.push(0);\n            }\n        }\n        width = reportedWidths.reduce((a, b) => a + b, 0);\n        state.left_shift += width / 2;\n        state.right_shift += width / 2;\n        return true;\n    }\n    /**\n     * Default text font.\n     * Choose a font family that works well with the current music engraving font.\n     * @override `Element.TEXT_FONT`.\n     */\n    static get TEXT_FONT() {\n        let family = 'Roboto Slab, Times, serif';\n        if (Tables.currentMusicFont().getName() === 'Petaluma') {\n            // Fixes Issue #1180\n            family = 'PetalumaScript, Arial, sans-serif';\n        }\n        return {\n            family,\n            size: 12,\n            weight: FontWeight.NORMAL,\n            style: FontStyle.NORMAL,\n        };\n    }\n    /**\n     * The offset is specified in `em`. Scale this value by the font size in pixels.\n     */\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    updateOverBarAdjustments() {\n        const barIndex = this.symbolBlocks.findIndex(({ symbolType, glyph }) => symbolType === SymbolTypes.GLYPH && glyph !== undefined && glyph.code === 'csymDiagonalArrangementSlash');\n        if (barIndex < 0) {\n            return;\n        }\n        const bar = this.symbolBlocks[barIndex];\n        const xoff = bar.width / 4;\n        const yoff = 0.25 * this.textFormatter.fontSizeInPixels;\n        let symIndex = 0;\n        for (symIndex === 0; symIndex < barIndex; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift + xoff;\n            symbol.yShift = symbol.yShift - yoff;\n        }\n        for (symIndex = barIndex + 1; symIndex < this.symbolBlocks.length; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift - xoff;\n            symbol.yShift = symbol.yShift + yoff;\n        }\n    }\n    updateKerningAdjustments() {\n        let accum = 0;\n        for (let j = 0; j < this.symbolBlocks.length; ++j) {\n            const symbol = this.symbolBlocks[j];\n            accum += this.getKerningAdjustment(j);\n            symbol.xShift += accum;\n        }\n    }\n    /** Do some basic kerning so that letter chords like 'A' don't have the extensions hanging off to the right. */\n    getKerningAdjustment(j) {\n        if (!this.useKerning) {\n            return 0;\n        }\n        const currSymbol = this.symbolBlocks[j];\n        const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : undefined;\n        let adjustment = 0;\n        // Move things into the '/' over bar\n        if (currSymbol.symbolType === SymbolTypes.GLYPH &&\n            currSymbol.glyph !== undefined &&\n            currSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += currSymbol.glyph.metrics.x_shift;\n        }\n        if (prevSymbol !== undefined &&\n            prevSymbol.symbolType === SymbolTypes.GLYPH &&\n            prevSymbol.glyph !== undefined &&\n            prevSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += prevSymbol.glyph.metrics.x_shift;\n        }\n        // For superscripts that follow a letter without much top part, move it to the left slightly\n        let preKernUpper = false;\n        let preKernLower = false;\n        if (prevSymbol !== undefined && prevSymbol.symbolType === SymbolTypes.TEXT) {\n            preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n            preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n        }\n        const kerningOffsetPixels = ChordSymbol.kerningOffset * this.textFormatter.fontSizeInPixels;\n        // TODO: adjust kern for font size.\n        // Where should this constant live?\n        if (preKernUpper && currSymbol.symbolModifier === SymbolModifiers.SUPERSCRIPT) {\n            adjustment += kerningOffsetPixels;\n        }\n        if (preKernLower && currSymbol.symbolType === SymbolTypes.TEXT) {\n            if (currSymbol.text[0] >= 'a' && currSymbol.text[0] <= 'z') {\n                adjustment += kerningOffsetPixels / 2;\n            }\n            if (ChordSymbol.upperKerningText.some((xx) => xx === (prevSymbol === null || prevSymbol === void 0 ? void 0 : prevSymbol.text[prevSymbol.text.length - 1]))) {\n                adjustment += kerningOffsetPixels / 2;\n            }\n        }\n        return adjustment;\n    }\n    /**\n     * ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n     * Each block can have its own vertical orientation.\n     */\n    // eslint-disable-next-line\n    getSymbolBlock(params = {}) {\n        var _a, _b, _c;\n        const symbolType = (_a = params.symbolType) !== null && _a !== void 0 ? _a : SymbolTypes.TEXT;\n        const symbolBlock = {\n            text: (_b = params.text) !== null && _b !== void 0 ? _b : '',\n            symbolType,\n            symbolModifier: (_c = params.symbolModifier) !== null && _c !== void 0 ? _c : SymbolModifiers.NONE,\n            xShift: 0,\n            yShift: 0,\n            vAlign: false,\n            width: 0,\n        };\n        // Note: symbol widths are resolution and font-independent.\n        // We convert to pixel values when we know what the font is.\n        if (symbolType === SymbolTypes.GLYPH && typeof params.glyph === 'string') {\n            const glyphArgs = ChordSymbol.glyphs[params.glyph];\n            const glyphPoints = 20;\n            symbolBlock.glyph = new Glyph(glyphArgs.code, glyphPoints, { category: 'chordSymbol' });\n            // Beware: glyph.metrics is not the same as glyph.getMetrics() !\n            // rv.glyph.point = rv.glyph.point * rv.glyph.metrics.scale;\n            // rv.width = rv.glyph.getMetrics().width;\n            // don't set yShift here, b/c we need to do it at formatting time after the font is set.\n        }\n        else if (symbolType === SymbolTypes.TEXT) {\n            symbolBlock.width = this.textFormatter.getWidthForTextInEm(symbolBlock.text);\n        }\n        else if (symbolType === SymbolTypes.LINE) {\n            symbolBlock.width = params.width;\n        }\n        return symbolBlock;\n    }\n    /** Add a symbol to this chord, could be text, glyph or line. */\n    // eslint-disable-next-line\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    // ### Convenience functions for creating different types of chord symbol parts.\n    /** Add a text block. */\n    // eslint-disable-next-line\n    addText(text, parameters = {}) {\n        const symbolType = SymbolTypes.TEXT;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text, symbolType }));\n    }\n    /** Add a text block with superscript modifier. */\n    addTextSuperscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a text block with subscript modifier. */\n    addTextSubscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a glyph block with superscript modifier. */\n    addGlyphSuperscript(glyph) {\n        const symbolType = SymbolTypes.GLYPH;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ glyph, symbolType, symbolModifier });\n    }\n    /** Add a glyph block. */\n    // eslint-disable-next-line\n    addGlyph(glyph, params = {}) {\n        const symbolType = SymbolTypes.GLYPH;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { glyph, symbolType }));\n    }\n    /**\n     * Add a glyph for each character in 'text'. If the glyph is not available, use text from the font.\n     * e.g. `addGlyphOrText('(+5#11)')` will use text for the '5' and '11', and glyphs for everything else.\n     */\n    // eslint-disable-next-line\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            if (ChordSymbol.glyphs[char]) {\n                if (str.length > 0) {\n                    this.addText(str, params);\n                    str = '';\n                }\n                this.addGlyph(char, params);\n            }\n            else {\n                // Collect consecutive characters with no glyphs.\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    /** Add a line of the given width, used as a continuation of the previous symbol in analysis, or lyrics, etc. */\n    // eslint-disable-next-line\n    addLine(width, params = {}) {\n        const symbolType = SymbolTypes.LINE;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { symbolType, width }));\n    }\n    /**\n     * Set the chord symbol's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     *\n     * @override See: Element.\n     */\n    setFont(f, size, weight, style) {\n        super.setFont(f, size, weight, style);\n        this.textFormatter = TextFormatter.create(this.textFont);\n        return this;\n    }\n    setEnableKerning(val) {\n        this.useKerning = val;\n        return this;\n    }\n    /** Set vertical position of text (above or below stave). */\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    /** Set horizontal justification. */\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    getWidth() {\n        let width = 0;\n        this.symbolBlocks.forEach((symbol) => {\n            width += symbol.vAlign ? 0 : symbol.width;\n        });\n        return width;\n    }\n    getYOffsetForText(text) {\n        var _a;\n        let acc = 0;\n        let i = 0;\n        for (i = 0; i < text.length; ++i) {\n            const metrics = this.textFormatter.getGlyphMetrics(text[i]);\n            if (metrics) {\n                const yMax = (_a = metrics.y_max) !== null && _a !== void 0 ? _a : 0;\n                acc = yMax < acc ? yMax : acc;\n            }\n        }\n        const resolution = this.textFormatter.getResolution();\n        return i > 0 ? -1 * (acc / resolution) : 0;\n    }\n    /** Render text and glyphs above/below the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        const classString = Object.keys(this.getAttribute('classes')).join(' ');\n        ctx.openGroup(classString, this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.textFont);\n        let y;\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            // HACK: We need to compensate for the text's height since its origin is bottom-right.\n            y = stave.getYForBottomText(this.text_line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stem_base = note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n                y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n            }\n        }\n        else {\n            // (this.vertical === VerticalJustify.TOP)\n            y = Math.min(stave.getYForTopText(this.text_line), note.getYs()[0] - 10);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            // HorizontalJustify.CENTER_STEM\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', this.textFormatter, x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            const isSuper = ChordSymbol.isSuperscript(symbol);\n            const isSub = ChordSymbol.isSubscript(symbol);\n            let curY = y;\n            L('shift was ', symbol.xShift, symbol.yShift);\n            L('curY pre sub ', curY);\n            if (isSuper) {\n                curY += this.superscriptOffset;\n            }\n            if (isSub) {\n                curY += this.subscriptOffset;\n            }\n            L('curY sup/sub ', curY);\n            if (symbol.symbolType === SymbolTypes.TEXT) {\n                if (isSuper || isSub) {\n                    ctx.save();\n                    if (this.textFont) {\n                        const { family, size, weight, style } = this.textFont;\n                        const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n                        ctx.setFont(family, smallerFontSize, weight, style);\n                    }\n                }\n                // TODO???\n                // We estimate the text width, fill it in with the empirical value so the formatting is even.\n                // const textDim = ctx.measureText(symbol.text);\n                // symbol.width = textDim.width;\n                L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                ctx.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                if (isSuper || isSub) {\n                    ctx.restore();\n                }\n            }\n            else if (symbol.symbolType === SymbolTypes.GLYPH && symbol.glyph) {\n                curY += symbol.yShift;\n                L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n                symbol.glyph.render(ctx, x + symbol.xShift, curY);\n            }\n            else if (symbol.symbolType === SymbolTypes.LINE) {\n                L('Rendering Line : ', symbol.width, x, curY);\n                ctx.beginPath();\n                ctx.setLineWidth(1); // ?\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + symbol.width, curY);\n                ctx.stroke();\n            }\n            x += symbol.width;\n            if (symbol.vAlign) {\n                x += symbol.xShift;\n            }\n        });\n        ctx.closeGroup();\n        ctx.restore();\n    }\n}\nChordSymbol.DEBUG = false;\n// Chord symbols can be positioned and justified relative to the note.\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\n// Glyph data\nChordSymbol.glyphs = {\n    diminished: {\n        code: 'csymDiminished',\n    },\n    dim: {\n        code: 'csymDiminished',\n    },\n    halfDiminished: {\n        code: 'csymHalfDiminished',\n    },\n    '+': {\n        code: 'csymAugmented',\n    },\n    augmented: {\n        code: 'csymAugmented',\n    },\n    majorSeventh: {\n        code: 'csymMajorSeventh',\n    },\n    minor: {\n        code: 'csymMinor',\n    },\n    '-': {\n        code: 'csymMinor',\n    },\n    '(': {\n        code: 'csymParensLeftTall',\n    },\n    leftParen: {\n        code: 'csymParensLeftTall',\n    },\n    ')': {\n        code: 'csymParensRightTall',\n    },\n    rightParen: {\n        code: 'csymParensRightTall',\n    },\n    leftBracket: {\n        code: 'csymBracketLeftTall',\n    },\n    rightBracket: {\n        code: 'csymBracketRightTall',\n    },\n    leftParenTall: {\n        code: 'csymParensLeftVeryTall',\n    },\n    rightParenTall: {\n        code: 'csymParensRightVeryTall',\n    },\n    '/': {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    over: {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    '#': {\n        code: 'accidentalSharp',\n    },\n    b: {\n        code: 'accidentalFlat',\n    },\n};\nChordSymbol.symbolTypes = SymbolTypes;\nChordSymbol.symbolModifiers = SymbolModifiers;\n/** Currently unused. */\nChordSymbol.noFormat = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { defined, RuntimeError } from './util';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n    constructor(time, options) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = Object.assign({ softmaxFactor: 100 }, options);\n        // Convert the `time` string into a VoiceTime object if necessary.\n        let voiceTime;\n        if (typeof time === 'string') {\n            // Time signature shortcut: \"4/4\", \"3/8\", etc.\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    num_beats: parseInt(match[1]),\n                    beat_value: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        // Default time signature is 4/4.\n        this.time = Object.assign({ num_beats: 4, beat_value: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        // Recalculate total ticks.\n        this.totalTicks = new Fraction(this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    static get CATEGORY() {\n        return 'Voice';\n    }\n    /**\n     * Modes allow the addition of ticks in three different ways:\n     * - STRICT: This is the default. Ticks must fill the voice.\n     * - SOFT: Ticks can be added without restrictions.\n     * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n     */\n    static get Mode() {\n        return VoiceMode;\n    }\n    /** Get the total ticks in the voice. */\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    /** Get the total ticks used in the voice by all the tickables. */\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    /** Get the largest width of all the tickables. */\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    /** Get the tick count for the shortest tickable */\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    /** Get the tickables in the voice. */\n    getTickables() {\n        return this.tickables;\n    }\n    /** Get the voice mode. */\n    getMode() {\n        return this.mode;\n    }\n    /**\n     * Set the voice mode.\n     * @param mode value from `VoiceMode`\n     */\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    /** Get the resolution multiplier for the voice. */\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    /** Get the actual tick resolution for the voice. */\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    /** Set the voice's stave. */\n    setStave(stave) {\n        this.stave = stave;\n        // Reset the bounding box so we can reformat.\n        this.boundingBox = undefined;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    /** Get the bounding box for the voice. */\n    getBoundingBox() {\n        if (!this.boundingBox) {\n            const stave = this.checkStave();\n            let boundingBox = undefined;\n            for (let i = 0; i < this.tickables.length; ++i) {\n                const tickable = this.tickables[i];\n                tickable.setStave(stave);\n                const bb = tickable.getBoundingBox();\n                if (bb) {\n                    boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n                }\n            }\n            this.boundingBox = boundingBox;\n        }\n        return this.boundingBox;\n    }\n    /** Set the voice mode to strict or soft. */\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    /** Determine if the voice is complete according to the voice mode. */\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * We use softmax to layout the tickables proportional to the exponent of\n     * their duration. The softmax factor is used to determine the 'linearness' of\n     * the layout.\n     *\n     * The softmax of all the tickables in this voice should sum to 1.\n     */\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        return this;\n    }\n    /**\n     * Calculate the sum of the exponents of all the ticks in this voice to use\n     * as the denominator of softmax.\n     */\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = this.tickables.map(exp).reduce((a, b) => a + b, 0);\n        return this.expTicksUsed;\n    }\n    /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    /** Add a tickable to the voice. */\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            // Update the total ticks for this line.\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0; // reset\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            // Track the smallest tickable for formatting.\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            // Expand total ticks using denominator from ticks used.\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        // Add the tickable to the line.\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    /** Add an array of tickables to the voice. */\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    /** Preformat the voice by applying the voice's stave to each note. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /**\n     * Render the voice onto the canvas `context` and an optional `stave`.\n     * If `stave` is omitted, it is expected that the notes have staves\n     * already set.\n     *\n     * This method also calculates the voice's boundingBox while drawing\n     * the notes. Note the similarities with this.getBoundingBox().\n     */\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        let boundingBox = undefined;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            // Set the stave if provided.\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            const bb = tickable.getBoundingBox();\n            if (bb) {\n                boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n            }\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n        this.boundingBox = boundingBox;\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier } from './modifier';\nimport { RuntimeError } from './util';\nexport class FretHandFinger extends Modifier {\n    constructor(finger) {\n        super();\n        this.finger = finger;\n        this.width = 7;\n        this.position = Modifier.Position.LEFT; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return 'FretHandFinger';\n    }\n    // Arrange fingerings inside a ModifierContext.\n    static format(nums, state) {\n        const { left_shift, right_shift } = state;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (right_shift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prev_note = note;\n            }\n            nums_list.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort fingernumbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = left_shift + shiftL;\n                numShiftR = right_shift + shiftR;\n            }\n            const numWidth = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift + numShiftL);\n                num_shift = left_shift + numWidth; // spacing\n                xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                num_shift = shiftRight + numWidth; // spacing\n                xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.left_shift += xWidthL;\n        state.right_shift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(index, fingering));\n    }\n    setFretHandFinger(finger) {\n        this.finger = finger;\n        return this;\n    }\n    getFretHandFinger() {\n        return this.finger;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let dot_y = start.y + this.y_shift + this.y_offset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dot_x -= 4;\n                dot_y -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dot_x -= 2;\n                dot_y += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        ctx.save();\n        ctx.setFont(this.textFont);\n        ctx.fillText('' + this.finger, dot_x, dot_y);\n        ctx.restore();\n    }\n}\nFretHandFinger.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Voice } from './voice';\nexport class NoteSubGroup extends Modifier {\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    static get CATEGORY() {\n        return 'NoteSubGroup';\n    }\n    // Arrange groups inside a `ModifierContext`\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.left_shift += width;\n        return true;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\nimport { Fraction } from './fraction';\nimport { RuntimeError } from './util';\n/**\n * TickContext formats abstract tickable objects, such as notes, chords, tabs, etc.\n */\nexport class TickContext {\n    constructor(options) {\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = options && options.tickID ? options.tickID : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined; // Biggest tickable\n        this.minTicks = undefined; // this can remian null if all tickables have ignore_ticks\n        this.minTickable = undefined;\n        this.padding = 1; // padding on each side (width += padding * 2)\n        this.x = 0;\n        this.xBase = 0; // base x position without xOffset\n        this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n        this.tickables = []; // Notes, tabs, chords, lyrics.\n        this.tickablesByVoice = {}; // Tickables indexed by voice number\n        // Formatting metrics\n        this.notePx = 0; // width of widest note in this context\n        this.glyphPx = 0; // width of glyph (note head)\n        this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n        this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n        this.modLeftPx = 0; // Left modifier pixels\n        this.modRightPx = 0; // Right modifier pixels\n        this.totalLeftPx = 0; // Total left pixels\n        this.totalRightPx = 0; // Total right pixels\n        this.tContexts = []; // Parent array of tick contexts\n        this.width = 0;\n        this.formatterMetrics = {\n            // The freedom of a tickcontext is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    } // use of xBase and xOffset is optional, avoids offset creep\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    /**\n     * Introduced on 2020-04-17 as getTickablesForVoice(voiceIndex).\n     *   https://github.com/0xfe/vexflow/blame/dc97b0cc5bb93171c0038638c34362dc958222ca/src/tickcontext.js#L63\n     * Renamed on 2021-08-05 to getTickableForVoice(voiceIndex). Method renamed to singular, since it returns one Tickable.\n     */\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    /** Gets widths context, note and left/right modifiers for formatting. */\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks == null) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex || 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            // Maintain max displaced head pixels from all tickables in the context\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            // Maintain the widest note for all tickables in the context\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            // Maintain the widest note head\n            this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth || 0);\n            // Total modifier shift\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            // Total shift\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            // Recalculate the tick context total width\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { isTabNote } from './tabnote';\nimport { TickContext } from './tickcontext';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('Vex.Flow.Ornament', args);\n}\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nexport class Ornament extends Modifier {\n    /**\n     * Create a new ornament of type `type`, which is an entry in\n     * `Vex.Flow.ornamentCodes` in `tables.ts`.\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.delayed = false;\n        this.render_options = {\n            font_scale: 38,\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        this.ornament = Tables.ornamentCodes(this.type);\n        // new ornaments have their origin at the origin, and have more specific\n        // metrics.  Legacy ornaments do some\n        // x scaling, and have hard-coded metrics\n        const metrics = this.getMetrics();\n        // some jazz ornaments are above or below depending on stem direction.\n        this.adjustForStemDirection = false;\n        // some jazz ornaments like falls are supposed to overlap with future bars\n        // and so we report a different width than they actually take up.\n        this.reportedWidth = metrics && metrics.reportedWidth ? metrics.reportedWidth : 0;\n        this.stemUpYOffset = metrics && metrics.stemUpYOffset ? metrics.stemUpYOffset : 0;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        if (!this.ornament) {\n            throw new RuntimeError('ArgumentError', `Ornament not found: '${this.type}'`);\n        }\n        this.x_shift = metrics ? metrics.xOffset : 0;\n        this.y_shift = metrics ? metrics.yOffset : 0;\n        this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, {\n            category: `ornament.${this.ornament.code}`,\n        });\n        // Is this a jazz ornament that goes between this note and the next note.\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n        // happen if I don't set it.\n        if (!metrics) {\n            this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n        }\n    }\n    /** Ornaments category string. */\n    static get CATEGORY() {\n        return 'Ornament';\n    }\n    /** Arrange ornaments inside `ModifierContext` */\n    static format(ornaments, state) {\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0; // width is used by ornaments, which are always centered on the note head\n        let right_shift = state.right_shift; // jazz ornaments calculate r/l shift separately\n        let left_shift = state.left_shift;\n        let yOffset = 0;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n                ornament.x_shift += right_shift + 2;\n            }\n            if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n                ornament.x_shift -= left_shift + 2;\n            }\n            if (ornament.reportedWidth && ornament.x_shift < 0) {\n                left_shift += ornament.reportedWidth;\n            }\n            else if (ornament.reportedWidth && ornament.x_shift > 0) {\n                right_shift += ornament.reportedWidth;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n            }\n            // articulations above/below the line can be stacked.\n            if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n                // Unfortunately we don't know the stem direction.  So we base it\n                // on the line number, but also allow it to be overridden.\n                const ornamentNote = defined(ornament.note, 'NoAttachedNote');\n                if (ornamentNote.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n                    state.top_text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset -= ornament.glyph.bbox.getH();\n                }\n                else {\n                    state.text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset += ornament.glyph.bbox.getH();\n                }\n            }\n            else {\n                if (ornament.getPosition() === Modifier.Position.ABOVE) {\n                    ornament.setTextLine(state.top_text_line);\n                    state.top_text_line += increment;\n                }\n                else {\n                    ornament.setTextLine(state.text_line);\n                    state.text_line += increment;\n                }\n            }\n        }\n        // Note: 'legit' ornaments don't consider other modifiers when calculating their\n        // X position, but jazz ornaments sometimes need to.\n        state.left_shift = left_shift + width / 2;\n        state.right_shift = right_shift + width / 2;\n        return true;\n    }\n    /**\n     * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n     * these are generally on the top of the staff.\n     */\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    /**\n     * ornamentAttack indicates something that happens in the attach, placed before the note and\n     * any accidentals\n     */\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    /**\n     * The ornament is aligned based on the note head, but without regard to whether the\n     * stem goes up or down.\n     */\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n    }\n    /**\n     * An ornament that happens on the release of the note, generally placed after the\n     * note and overlapping the next beat/measure..\n     */\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    /** ornamentArticulation goes above/below the note based on space availablity */\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    /**\n     * Legacy ornaments have hard-coded metrics.  If additional ornament types are\n     * added, get their metrics here.\n     */\n    // eslint-disable-next-line\n    getMetrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.jazzOrnaments[this.ornament.code];\n    }\n    /** Set whether the ornament is to be delayed. */\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    /** Set the upper accidental for the ornament. */\n    setUpperAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalUpper = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalUpper.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Set the lower accidental for the ornament. */\n    setLowerAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalLower = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalLower.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Render ornament in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDir = note.getStemDirection();\n        const stave = note.checkStave();\n        const classString = Object.keys(this.getAttribute('classes')).join(' ');\n        ctx.openGroup(classString, this.getAttribute('id'));\n        // Get stem extents\n        const stemExtents = note.checkStem().getExtents();\n        let y = stemDir === Stem.DOWN ? stemExtents.baseY : stemExtents.topY;\n        // TabNotes don't have stems attached to them. Tab stems are rendered outside the stave.\n        if (isTabNote(note)) {\n            if (note.hasStem()) {\n                if (stemDir === Stem.DOWN) {\n                    y = stave.getYForTopText(this.text_line);\n                }\n            }\n            else {\n                // Without a stem\n                y = stave.getYForTopText(this.text_line);\n            }\n        }\n        const isPlacedOnNoteheadSide = stemDir === Stem.DOWN;\n        const spacing = stave.getSpacingBetweenLines();\n        let lineSpacing = 1;\n        // Beamed stems are longer than quarter note stems, adjust accordingly\n        if (!isPlacedOnNoteheadSide && note.hasBeam()) {\n            lineSpacing += 0.5;\n        }\n        const totalSpacing = spacing * (this.text_line + lineSpacing);\n        const glyphYBetweenLines = y - totalSpacing;\n        // Get initial coordinates for the modifier position\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        // If the ornament is aligned with the note head, don't consider the stave y\n        // but use the 'natural' modifier y\n        let glyphY = this.ornamentAlignWithNoteHead\n            ? start.y\n            : Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n        glyphY += this.y_shift;\n        // Ajdust x position if ornament is delayed\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = glyphX - (stave.getX() - 10);\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                delayXShift += this.glyph.getMetrics().width / 2;\n                const nextContext = TickContext.getNextContext(note.getTickContext());\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - startX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.render(ctx, glyphX, glyphY);\n            glyphY -= this.accidentalLower.getMetrics().height;\n            glyphY -= this.render_options.accidentalLowerPadding;\n        }\n        if (this.stemUpYOffset && note.hasStem() && note.getStemDirection() === 1) {\n            glyphY += this.stemUpYOffset;\n        }\n        if (note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            glyphY = note.checkStave().getBoundingBox().getY() + 40;\n        }\n        this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n        if (this.accidentalUpper) {\n            glyphY -= this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding;\n            this.accidentalUpper.render(ctx, glyphX, glyphY);\n        }\n        ctx.closeGroup();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\nOrnament.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Rodrigo Vilar\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\n/** Parenthesis implements parenthesis modifiers for notes. */\nexport class Parenthesis extends Modifier {\n    /**\n     * Constructor\n     *\n     * @param position Modifier.Position.LEFT (default) or Modifier.Position.RIGHT\n     */\n    constructor(position) {\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n    }\n    static get CATEGORY() {\n        return 'Parenthesis';\n    }\n    /** Add parentheses to the notes. */\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(i, new Parenthesis(ModifierPosition.LEFT));\n                note.addModifier(i, new Parenthesis(ModifierPosition.RIGHT));\n            }\n        }\n    }\n    /** Arrange parentheses inside a ModifierContext. */\n    static format(parentheses, state) {\n        const { right_shift, left_shift } = state;\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            const props = note.getKeyProps()[index];\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = (props.displaced ? note.getRightDisplacedHeadPx() : 0) + right_shift;\n                x_widthR += shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = (props.displaced ? note.getLeftDisplacedHeadPx() : 0) + left_shift;\n                x_widthL += shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    /** Set the associated note. */\n    setNote(note) {\n        this.note = note;\n        this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n        if (note.getCategory() === 'GraceNote') {\n            this.point = Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.point');\n            this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.width'));\n        }\n        return this;\n    }\n    /** Render the parenthesis. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        const x = start.x + this.x_shift;\n        const y = start.y + this.y_shift;\n        if (this.position == Modifier.Position.RIGHT) {\n            Glyph.renderGlyph(ctx, x + 1, y, this.point, 'noteheadParenthesisRight', {\n                category: `noteHead.standard.noteheadParenthesisRight`,\n            });\n        }\n        else if (this.position == Modifier.Position.LEFT) {\n            Glyph.renderGlyph(ctx, x - 2, y, this.point, 'noteheadParenthesisLeft', {\n                category: `noteHead.standard.noteheadParenthesisLeft`,\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n//\n// Utilities for working with Web APIs.\n// See: https://developer.mozilla.org/en-US/docs/Web/API\nimport { globalObject } from './util';\n// eslint-disable-next-line\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLCanvasElement class,\n    (typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        // OR it's pretending to be a <canvas> element. Good enough!\n        // Do not rely on .tagName, because node-canvas doesn't provide a tagName.\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\n// eslint-disable-next-line\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLDivElement class.\n    (typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        // OR it's pretending to be a <div>. See: svgcontext.ts.\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { RenderContext } from './rendercontext';\nimport { globalObject, warn } from './util';\nimport { isHTMLCanvas } from './web';\n/**\n * A rendering context for the Canvas backend. This class serves as a proxy for the\n * underlying CanvasRenderingContext2D object, part of the browser's API.\n */\nexport class CanvasContext extends RenderContext {\n    constructor(context) {\n        super();\n        /** Height of one line of text (in pixels). */\n        this.textHeight = 0;\n        this.context2D = context;\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n    }\n    /**\n     * Ensure that width and height do not exceed the browser limit.\n     * @returns array of [width, height] clamped to the browser limit.\n     */\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    /**\n     * Set all pixels to transparent black rgba(0,0,0,0).\n     */\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // eslint-disable-next-line\n    openGroup(cls, id, attrs) {\n        // Containers not implemented.\n    }\n    closeGroup() {\n        // Containers not implemented.\n    }\n    // eslint-disable-next-line\n    add(child) {\n        // Containers not implemented.\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    /** CanvasContext ignores `setBackgroundFillStyle()`. */\n    // eslint-disable-next-line\n    setBackgroundFillStyle(style) {\n        // DO NOTHING\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        // CanvasRenderingContext2D does not scale the shadow blur by the current\n        // transform, so we have to do it manually. We assume uniform scaling\n        // (though allow for rotation) because the blur can only be scaled\n        // uniformly anyway.\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height) {\n        const canvas = this.context2D.canvas;\n        const devicePixelRatio = globalObject().devicePixelRatio || 1;\n        // Scale the canvas size by the device pixel ratio clamping to the maximum supported size.\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * devicePixelRatio, height * devicePixelRatio);\n        // Divide back down by the pixel ratio and convert to integers.\n        width = (width / devicePixelRatio) | 0;\n        height = (height / devicePixelRatio) | 0;\n        canvas.width = width * devicePixelRatio;\n        canvas.height = height * devicePixelRatio;\n        // The canvas could be an instance of either HTMLCanvasElement or an OffscreenCanvas.\n        // Only HTMLCanvasElement has a style attribute.\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(devicePixelRatio, devicePixelRatio);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    /**\n     * Set the pixels in a rectangular area to transparent black rgba(0,0,0,0).\n     */\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        // Return x, y, width & height in the same manner as svg getBBox\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Gregory Ristow (2015)\nimport { Font, FontStyle, FontWeight } from './font';\nimport { RenderContext } from './rendercontext';\nimport { normalizeAngle, prefix, RuntimeError } from './util';\n/** For a particular element type (e.g., rect), we will not apply certain presentation attributes. */\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\nclass MeasureTextCache {\n    constructor() {\n        // The cache is keyed first by the text string, then by the font attributes\n        // joined together.\n        this.cache = {};\n    }\n    lookup(text, svg, attributes) {\n        let entries = this.cache[text];\n        if (entries === undefined) {\n            entries = {};\n            this.cache[text] = entries;\n        }\n        const family = attributes['font-family'];\n        const size = attributes['font-size'];\n        const weight = attributes['font-weight'];\n        const style = attributes['font-style'];\n        const key = `${family}%${size}%${weight}%${style}`;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = this.measureImpl(text, svg, attributes);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n    measureImpl(text, svg, attributes) {\n        let txt = this.txt;\n        if (!txt) {\n            // Create the SVG text element that will be used to measure text in the event\n            // of a cache miss.\n            txt = document.createElementNS(SVG_NS, 'text');\n            this.txt = txt;\n        }\n        txt.textContent = text;\n        txt.setAttributeNS(null, 'font-family', attributes['font-family']);\n        txt.setAttributeNS(null, 'font-size', attributes['font-size']);\n        txt.setAttributeNS(null, 'font-style', attributes['font-style']);\n        txt.setAttributeNS(null, 'font-weight', attributes['font-weight']);\n        svg.appendChild(txt);\n        const bbox = txt.getBBox();\n        svg.removeChild(txt);\n        return { x: bbox.x, y: bbox.y, width: bbox.width, height: bbox.height };\n    }\n}\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nexport class SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        this.width = 0;\n        this.height = 0;\n        this.backgroundFillStyle = 'white';\n        /** Formatted as CSS font shorthand (e.g., 'italic bold 12pt Arial') */\n        this.fontCSSString = '';\n        this.element = element;\n        // Create a SVG element and add it to the container element.\n        const svg = this.create('svg');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        this.lineWidth = 1.0;\n        const defaultFontAttributes = {\n            'font-family': Font.SANS_SERIF,\n            'font-size': Font.SIZE + 'pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scale: { x: 1, y: 1 } }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 0.3, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black' }, defaultFontAttributes);\n        this.shadow_attributes = {\n            width: 0,\n            color: 'black',\n        };\n        this.state_stack = [];\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    // Allow grouping elements in containers for interactivity.\n    openGroup(cls, id, attrs) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        if (attrs && attrs.pointerBBox) {\n            group.setAttribute('pointer-events', 'bounding-box');\n        }\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    /**\n     * Used to set the fill color for `clearRect()`. This allows us to simulate\n     * cutting a \"hole\" into the SVG drawing.\n     */\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.shadow_attributes.color = color;\n        return this;\n    }\n    /**\n     * @param blur A non-negative float specifying the level of shadow blur, where 0\n     *             represents no blur and larger numbers represent increasingly more blur.\n     * @returns this\n     */\n    setShadowBlur(blur) {\n        this.shadow_attributes.width = blur;\n        return this;\n    }\n    /**\n     * @param width\n     * @returns this\n     */\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n        return this;\n    }\n    /**\n     * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n     * @returns this\n     *\n     * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n     */\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    /**\n     * @param capType\n     * @returns this\n     */\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    // ### Sizing & Scaling Methods:\n    // TODO (GCR): See note at scale() -- separate our internal\n    // conception of pixel-based width/height from the style.width\n    // and style.height properties eventually to allow users to\n    // apply responsive sizing attributes to the SVG.\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scale.x, this.state.scale.y);\n        return this;\n    }\n    scale(x, y) {\n        // uses viewBox to scale\n        // TODO (GCR): we may at some point want to distinguish the\n        // style.width / style.height properties that are applied to\n        // the SVG object from our internal conception of the SVG\n        // width/height.  This would allow us to create automatically\n        // scaling SVG's that filled their containers, for instance.\n        //\n        // As this isn't implemented in Canvas contexts,\n        // I've left as is for now, but in using the viewBox to\n        // handle internal scaling, am trying to make it possible\n        // for us to eventually move in that direction.\n        this.state.scale = { x, y };\n        const visibleWidth = this.width / x;\n        const visibleHeight = this.height / y;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    /**\n     * 1 arg: string in the \"x y w h\" format\n     * 4 args: x:number, y:number, w:number, h:number\n     */\n    setViewBox(viewBox_or_minX, minY, width, height) {\n        if (typeof viewBox_or_minX === 'string') {\n            this.svg.setAttribute('viewBox', viewBox_or_minX);\n        }\n        else {\n            const viewBoxString = viewBox_or_minX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    // ### Drawing helper methods:\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    // ### Shape & Path Methods:\n    clear() {\n        // Clear the SVG by removing all inner children.\n        // (This approach is usually slightly more efficient\n        // than removing the old SVG & adding a new one to\n        // the container element, since it does not cause the\n        // container to resize twice.  Also, the resize\n        // triggered by removing the entire SVG can trigger\n        // a touchcancel event when the element resizes away\n        // from a touch point.)\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n        // Replace the viewbox attribute we just removed.\n        this.scale(this.state.scale.x, this.state.scale.y);\n    }\n    // ## Rectangles:\n    rect(x, y, width, height, attributes) {\n        // Avoid invalid negative height attributes by flipping the rectangle on its head:\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.lineWidth, stroke: 'black' };\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        // Currently this fills a rect with the backgroundFillStyle, rather\n        // than \"cut a hole\" into the existing shapes.\n        //\n        // Since tabNote seems to be the only module that makes use of this\n        // it may be worth creating a separate tabStave that would\n        // draw lines around locations of tablature fingering.\n        this.rect(x, y, width, height, { 'stroke-width': 0, fill: this.backgroundFillStyle });\n        return this;\n    }\n    // ## Paths:\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        const x0 = x + radius * Math.cos(startAngle);\n        const y0 = y + radius * Math.sin(startAngle);\n        // Handle the edge case where arc length is greater than or equal to\n        // the circle's circumference:\n        //   https://html.spec.whatwg.org/multipage/canvas.html#ellipse-method-steps\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI)) {\n            const x1 = x + radius * Math.cos(startAngle + Math.PI);\n            const y1 = y + radius * Math.sin(startAngle + Math.PI);\n            // There's no way to specify a completely circular arc in SVG so we have to\n            // use two semi-circular arcs.\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            const x1 = x + radius * Math.cos(endAngle);\n            const y1 = y + radius * Math.sin(endAngle);\n            startAngle = normalizeAngle(startAngle);\n            endAngle = normalizeAngle(endAngle);\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    getShadowStyle() {\n        const sa = this.shadow_attributes;\n        // A CSS drop-shadow filter blur looks different than a canvas shadowBlur\n        // of the same radius, so we scale the drop-shadow radius here to make it\n        // look close to the canvas shadow.\n        return `filter: drop-shadow(0 0 ${sa.width / 1.5}px ${sa.color})`;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', 'stroke-width': this.lineWidth, d: this.path });\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    // ## Text Methods:\n    measureText(text) {\n        return SVGContext.measureTextCache.lookup(text, this.svg, this.attributes);\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    // TODO: State should be deep-copied.\n    save() {\n        this.state_stack.push({\n            state: {\n                'font-family': this.state['font-family'],\n                'font-weight': this.state['font-weight'],\n                'font-style': this.state['font-style'],\n                'font-size': this.state['font-size'],\n                scale: this.state.scale,\n            },\n            attributes: {\n                'font-family': this.attributes['font-family'],\n                'font-weight': this.attributes['font-weight'],\n                'font-style': this.attributes['font-style'],\n                'font-size': this.attributes['font-size'],\n                fill: this.attributes.fill,\n                stroke: this.attributes.stroke,\n                'stroke-width': this.attributes['stroke-width'],\n                'stroke-dasharray': this.attributes['stroke-dasharray'],\n            },\n            shadow_attributes: {\n                width: this.shadow_attributes.width,\n                color: this.shadow_attributes.color,\n            },\n            lineWidth: this.lineWidth,\n        });\n        return this;\n    }\n    // TODO: State should be deep-restored.\n    restore() {\n        const savedState = this.state_stack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state['font-family'] = state.state['font-family'];\n            this.state['font-weight'] = state.state['font-weight'];\n            this.state['font-style'] = state.state['font-style'];\n            this.state['font-size'] = state.state['font-size'];\n            this.state.scale = state.state.scale;\n            this.attributes['font-family'] = state.attributes['font-family'];\n            this.attributes['font-weight'] = state.attributes['font-weight'];\n            this.attributes['font-style'] = state.attributes['font-style'];\n            this.attributes['font-size'] = state.attributes['font-size'];\n            this.attributes.fill = state.attributes.fill;\n            this.attributes.stroke = state.attributes.stroke;\n            this.attributes['stroke-width'] = state.attributes['stroke-width'];\n            this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n            this.shadow_attributes.width = state.shadow_attributes.width;\n            this.shadow_attributes.color = state.shadow_attributes.color;\n            this.lineWidth = state.lineWidth;\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900). It is inserted\n     *               into the font-weight attribute (e.g., font-weight=\"bold\")\n     * @param style is a string (e.g., 'italic', 'normal') that is inserted into the\n     *              font-style attribute (e.g., font-style=\"italic\")\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.fontCSSString;\n    }\n}\nSVGContext.measureTextCache = new MeasureTextCache();\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { CanvasContext } from './canvascontext';\nimport { RenderContext } from './rendercontext';\nimport { SVGContext } from './svgcontext';\nimport { RuntimeError } from './util';\nimport { isHTMLCanvas, isHTMLDiv } from './web';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\n// End of line types\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\n/**\n * Support Canvas & SVG rendering contexts.\n */\nexport class Renderer {\n    constructor(arg0, arg1) {\n        if (arg0 instanceof RenderContext) {\n            // The user has provided what looks like a RenderContext, let's just use it.\n            // TODO(tommadams): RenderContext is an interface, can we introduce a context base class\n            // to make this check more robust?\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                // The backend must be specified if the render context isn't directly provided.\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 == 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            // Verify backend and create context\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d');\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    // Draw a dashed line (horizontal, vertical or diagonal\n    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n    // setting the second number to 0 draws a solid line.\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\n// Used by vexflow_test_helpers.ts\n// Should this be private?\n// Can we do this in a cleaner way?\nRenderer.lastContext = undefined;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\nimport { Element } from './element';\nimport { defined } from './util';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    constructor() {\n        super();\n        this.width = 0;\n        this.x = 0;\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    static get CATEGORY() {\n        return 'StaveModifier';\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    placeGlyphOnLine(glyph, stave, line, customShift = 0) {\n        glyph.setYShift(stave.getYForLine(line !== null && line !== void 0 ? line : 0) - stave.getYForGlyphs() + customShift);\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier } from './modifier';\nimport { Renderer } from './renderer';\nimport { isStaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { isStemmableNote } from './stemmablenote';\nimport { RuntimeError } from './util';\nexport class StringNumber extends Modifier {\n    constructor(number) {\n        super();\n        this.string_number = number;\n        this.setWidth(20); // ???\n        this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.dashed = true; // true - draw dashed extension  false - no extension\n        this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n        this.radius = 8;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return 'StringNumber';\n    }\n    // ## Static Methods\n    // Arrange string numbers inside a `ModifierContext`\n    static format(nums, state) {\n        const left_shift = state.left_shift;\n        const right_shift = state.right_shift;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shift_left = 0;\n        let shift_right = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shift_left = Math.max(note.getLeftDisplacedHeadPx(), shift_left);\n                    }\n                    if (right_shift === 0) {\n                        shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n                    }\n                }\n                prev_note = note;\n            }\n            nums_list.push({\n                pos,\n                note,\n                num,\n                line: props.line,\n                shiftL: shift_left,\n                shiftR: shift_right,\n            });\n        }\n        // Sort string numbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let num_shiftR = 0;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        let last_line = null;\n        let last_note = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const note = nums_list[i].note;\n            const pos = nums_list[i].pos;\n            const num = nums_list[i].num;\n            const line = nums_list[i].line;\n            const shiftR = nums_list[i].shiftR;\n            // Reset the position of the string number every line.\n            if (line !== last_line || note !== last_note) {\n                num_shiftR = right_shift + shiftR;\n            }\n            const num_width = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift);\n                num_shift = shift_left + num_width; // spacing\n                x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(num_shiftR);\n                num_shift += num_width; // spacing\n                x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n            }\n            last_line = line;\n            last_note = note;\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.string_number = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.last_note = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const line_space = note.checkStave().getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let dot_y = start.y + this.y_shift + this.y_offset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n            case Modifier.Position.BELOW: {\n                const stem_ext = note.getStemExtents();\n                let top = stem_ext.topY;\n                let bottom = stem_ext.baseY + 2;\n                if (note.getStemDirection() === Stem.DOWN) {\n                    top = stem_ext.baseY;\n                    bottom = stem_ext.topY - 2;\n                }\n                if (this.position === Modifier.Position.ABOVE) {\n                    dot_y = note.hasStem() ? top - line_space * 1.75 : start.y - line_space * 1.75;\n                }\n                else {\n                    dot_y = note.hasStem() ? bottom + line_space * 1.5 : start.y + line_space * 1.75;\n                }\n                dot_y += this.y_shift + this.y_offset;\n                break;\n            }\n            case Modifier.Position.LEFT:\n                dot_x -= this.radius / 2 + 5;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += this.radius / 2 + 6;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        ctx.save();\n        ctx.beginPath();\n        ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n        ctx.setLineWidth(1.5);\n        ctx.stroke();\n        ctx.setFont(this.textFont);\n        const x = dot_x - ctx.measureText(this.string_number).width / 2;\n        ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n        const lastNote = this.last_note;\n        if (isStemmableNote(lastNote)) {\n            // Only StemmableNote objects have getStemX().\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n        ctx.restore();\n    }\n}\nStringNumber.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { isNote } from './note';\nimport { isStaveNote } from './stavenote';\nimport { isTabNote } from './tabnote';\nimport { RuntimeError } from './util';\nexport class Stroke extends Modifier {\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ all_voices: true }, options);\n        // multi voice - span stroke across all voices if true\n        this.all_voices = this.options.all_voices;\n        // multi voice - end note of stroke, set in draw()\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            font_scale: 38,\n        };\n        this.resetFont();\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    static get CATEGORY() {\n        return 'Stroke';\n    }\n    // Arrange strokes inside `ModifierContext`\n    static format(strokes, state) {\n        const left_shift = state.left_shift;\n        const stroke_spacing = 0;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                // Only StaveNote objects have getKeyProps().\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                // Only TabNote objects have getPositions().\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = left_shift;\n        // There can only be one stroke .. if more than one, they overlay each other\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n        }, 0);\n        state.left_shift += xShift;\n        return true;\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.note_end = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let ys = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const line_space = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                // Only Note objects have getYs().\n                // note is an instance of either StaveNote or TabNote.\n                ys = note.getYs();\n                for (let n = 0; n < ys.length; n++) {\n                    if (this.note === notes[i] || this.all_voices) {\n                        topY = Math.min(topY, ys[n]);\n                        botY = Math.max(botY, ys[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrow_shift_x = 0;\n        let arrow_y = 0;\n        let text_shift_x = 0;\n        let text_y = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                arrow_y = topY - line_space / 2 + 10;\n                botY += line_space / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = 0.5;\n                arrow_y = botY + line_space / 2;\n                topY -= line_space / 2;\n                break;\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASQUEDO_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                text_shift_x = this.x_shift + arrow_shift_x - 2;\n                if (isStaveNote(note)) {\n                    topY += 1.5 * line_space;\n                    if ((botY - topY) % 2 !== 0) {\n                        botY += 0.5 * line_space;\n                    }\n                    else {\n                        botY += line_space;\n                    }\n                    arrow_y = topY - line_space;\n                    text_y = botY + line_space + 2;\n                }\n                else {\n                    topY += 1.5 * line_space;\n                    botY += line_space;\n                    arrow_y = topY - 0.75 * line_space;\n                    text_y = botY + 0.25 * line_space;\n                }\n                break;\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASQUEDO_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = -4;\n                text_shift_x = this.x_shift + arrow_shift_x - 1;\n                if (isStaveNote(note)) {\n                    arrow_y = line_space / 2;\n                    topY += 0.5 * line_space;\n                    if ((botY - topY) % 2 === 0) {\n                        botY += line_space / 2;\n                    }\n                    arrow_y = botY + 0.5 * line_space;\n                    text_y = topY - 1.25 * line_space;\n                }\n                else {\n                    topY += 0.25 * line_space;\n                    botY += 0.5 * line_space;\n                    arrow_y = botY + 0.25 * line_space;\n                    text_y = topY - line_space;\n                }\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY += 0.5 * line_space;\n                botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        let strokeLine = 'straight';\n        // Draw the stroke\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n        }\n        else {\n            strokeLine = 'wiggly';\n            if (isStaveNote(note)) {\n                for (let i = topY; i <= botY; i += line_space) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n            }\n            else {\n                let i;\n                for (i = topY; i <= botY; i += 10) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n                if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n                    text_y = i + 0.25 * line_space;\n                }\n            }\n        }\n        if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n            return; // skip drawing arrow heads or text\n        }\n        // Draw the arrow head\n        Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n            category: `stroke.${arrow}.${strokeLine}`,\n        });\n        // Draw the rasquedo \"R\"\n        if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText('R', x + text_shift_x, text_y);\n            ctx.restore();\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n};\nStroke.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Bend } from './bend';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.render_options = {\n            harsh: false,\n            vibrato_width: 20,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n        };\n        this.setVibratoWidth(this.render_options.vibrato_width);\n    }\n    static get CATEGORY() {\n        return 'Vibrato';\n    }\n    /** Arrange vibratos inside a `ModifierContext`. */\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        // Vibratos are always on top.\n        let text_line = state.top_text_line;\n        let width = 0;\n        let shift = state.right_shift - 7;\n        // If there's a bend, drop the text line\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            text_line = text_line - (bendHeight + 1);\n        }\n        else {\n            state.top_text_line += 1;\n        }\n        // Format Vibratos\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(text_line);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.right_shift += width;\n        return true;\n    }\n    /** Set harsh vibrato. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Set vibrato width in pixels. */\n    setVibratoWidth(width) {\n        this.render_options.vibrato_width = width;\n        this.setWidth(width);\n        return this;\n    }\n    /** Draw the vibrato on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x + this.x_shift;\n        const vy = note.getYForTopText(this.text_line) + 2;\n        Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n    }\n    /**\n     * Static rendering method that can be called from\n     * other classes (e.g. VibratoBracket).\n     */\n    static renderVibrato(ctx, x, y, opts) {\n        const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n        const num_waves = vibrato_width / wave_width;\n        ctx.beginPath();\n        let i;\n        if (harsh) {\n            ctx.moveTo(x, y + wave_girth + 1);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x + wave_width, y - wave_height / 2);\n                x += wave_width;\n                ctx.lineTo(x + wave_width, y + wave_height / 2);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n                ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n        else {\n            ctx.moveTo(x, y + wave_girth);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n                x += wave_width;\n                ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n                ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.)\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Bend } from './bend';\nimport { ChordSymbol } from './chordsymbol';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { StaveNote } from './stavenote';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { log, RuntimeError } from './util';\nimport { Vibrato } from './vibrato';\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('Vex.Flow.ModifierContext', args);\n}\nexport class ModifierContext {\n    constructor() {\n        this.preFormatted = false;\n        this.postFormatted = false;\n        // Current members\n        this.members = {};\n        // Formatting data.\n        this.width = 0;\n        this.spacing = 0;\n        this.state = {\n            left_shift: 0,\n            right_shift: 0,\n            text_line: 0,\n            top_text_line: 0,\n        };\n        // Add new members to this array. The ordering is significant -- lower\n        // members are formatted and rendered before higher ones.\n        this.PREFORMAT = [\n            StaveNote,\n            Parenthesis,\n            Dot,\n            FretHandFinger,\n            Accidental,\n            Stroke,\n            GraceNoteGroup,\n            NoteSubGroup,\n            StringNumber,\n            Articulation,\n            Ornament,\n            Annotation,\n            ChordSymbol,\n            Bend,\n            Vibrato,\n        ];\n        // If post-formatting is required for an element, add it to this array.\n        this.POSTFORMAT = [StaveNote];\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    /**\n     * this.members maps CATEGORY strings to arrays of Tickable | Modifier | StaveNote | TabNote.\n     * Here we add a new member to this.members, and create a new array if needed.\n     * @param member\n     * @returns this\n     */\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    /**\n     * @deprecated\n     */\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        return this.members[category];\n    }\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.left_shift;\n    }\n    getRightShift() {\n        return this.state.right_shift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.left_shift + this.state.right_shift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.PREFORMAT.forEach((member) => {\n            L('Preformatting ModifierContext: ', member.CATEGORY);\n            member.format(this.getMembers(member.CATEGORY), this.state, this);\n        });\n        // Update width of this member context\n        this.width = this.state.left_shift + this.state.right_shift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        this.POSTFORMAT.forEach((member) => {\n            L('Postformatting ModifierContext: ', member.CATEGORY);\n            member.postFormat(this.getMembers(member.CATEGORY));\n        });\n    }\n}\nModifierContext.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n// MIT License\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('Vex.Flow.Clef', args);\n}\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nexport class Clef extends StaveModifier {\n    /** Create a new clef. */\n    constructor(type, size, annotation) {\n        super();\n        /**\n         * The attribute `clef` must be a key from\n         * `Clef.types`\n         */\n        this.clef = Clef.types['treble'];\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        this.setWidth(Tables.currentMusicFont().lookupMetric(`clef.${this.size}.width`));\n        L('Creating clef:', type);\n    }\n    static get CATEGORY() {\n        return 'Clef';\n    }\n    /**\n     * Every clef name is associated with a glyph code from the font file\n     * and a default stave line number.\n     */\n    static get types() {\n        return {\n            treble: {\n                code: 'gClef',\n                line: 3,\n                point: 0,\n            },\n            bass: {\n                code: 'fClef',\n                line: 1,\n                point: 0,\n            },\n            alto: {\n                code: 'cClef',\n                line: 2,\n                point: 0,\n            },\n            tenor: {\n                code: 'cClef',\n                line: 1,\n                point: 0,\n            },\n            percussion: {\n                code: 'restMaxima',\n                line: 2,\n                point: 0,\n            },\n            soprano: {\n                code: 'cClef',\n                line: 4,\n                point: 0,\n            },\n            'mezzo-soprano': {\n                code: 'cClef',\n                line: 3,\n                point: 0,\n            },\n            'baritone-c': {\n                code: 'cClef',\n                line: 0,\n                point: 0,\n            },\n            'baritone-f': {\n                code: 'fClef',\n                line: 2,\n                point: 0,\n            },\n            subbass: {\n                code: 'fClef',\n                line: 0,\n                point: 0,\n            },\n            french: {\n                code: 'gClef',\n                line: 4,\n                point: 0,\n            },\n            tab: {\n                code: '6stringTabClef',\n                point: 0,\n            },\n        };\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef = Clef.types[type];\n        if (size === undefined) {\n            this.size = 'default';\n        }\n        else {\n            this.size = size;\n        }\n        const musicFont = Tables.currentMusicFont();\n        this.clef.point = musicFont.lookupMetric(`clef.${this.size}.point`, 0);\n        this.glyph = new Glyph(this.clef.code, this.clef.point, {\n            category: `clef.${this.clef.code}.${this.size}`,\n        });\n        // If an annotation, such as 8va, is specified, add it to the Clef object.\n        if (annotation !== undefined) {\n            const code = musicFont.lookupMetric(`clef.annotations.${annotation}.smuflCode`);\n            const point = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.point`);\n            const line = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.line`);\n            const x_shift = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.shiftX`);\n            this.annotation = { code, point, line, x_shift };\n            this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n            this.attachment.metrics.x_max = 0;\n            this.attachment.setXShift(this.annotation.x_shift);\n        }\n        else {\n            this.annotation = undefined;\n        }\n        return this;\n    }\n    /** Get clef width. */\n    getWidth() {\n        if (this.type === 'tab') {\n            defined(this.stave, 'ClefError', \"Can't get width without stave.\");\n        }\n        return this.width;\n    }\n    /** Set associated stave. */\n    setStave(stave) {\n        this.stave = stave;\n        if (this.type === 'tab') {\n            const glyph = defined(this.glyph, 'ClefError', \"Can't set stave without glyph.\");\n            const numLines = this.stave.getNumLines();\n            const musicFont = Tables.currentMusicFont();\n            const point = musicFont.lookupMetric(`clef.lineCount.${numLines}.point`);\n            const shiftY = musicFont.lookupMetric(`clef.lineCount.${numLines}.shiftY`);\n            glyph.setPoint(point);\n            glyph.setYShift(shiftY);\n        }\n        return this;\n    }\n    /** Render clef. */\n    draw() {\n        const glyph = defined(this.glyph, 'ClefError', \"Can't draw clef without glyph.\");\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('clef', this.getAttribute('id'));\n        glyph.setStave(stave);\n        glyph.setContext(ctx);\n        if (this.clef.line !== undefined) {\n            this.placeGlyphOnLine(glyph, stave, this.clef.line);\n        }\n        glyph.renderToStave(this.x);\n        if (this.annotation !== undefined && this.attachment !== undefined) {\n            this.placeGlyphOnLine(this.attachment, stave, this.annotation.line);\n            this.attachment.setStave(stave);\n            this.attachment.setContext(ctx);\n            this.attachment.renderToStave(this.x);\n        }\n        ctx.closeGroup();\n    }\n}\n/** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\nClef.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { defined } from './util';\nexport class KeySignature extends StaveModifier {\n    // Create a new Key Signature based on a `key_spec`\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n        this.glyphs = [];\n        this.xPositions = []; // relative to this.x\n        this.paddingForced = false;\n    }\n    static get CATEGORY() {\n        return 'KeySignature';\n    }\n    // Add an accidental glyph to the `KeySignature` instance which represents\n    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n    // spacing will be included in the glyph's position\n    convertToGlyph(acc, nextAcc) {\n        const accGlyphData = Tables.accidentalCodes(acc.type);\n        const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n        // Determine spacing between current accidental and the next accidental\n        let extraWidth = 1;\n        if (acc.type === 'n' && nextAcc) {\n            const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n            if (spacing) {\n                const isAbove = nextAcc.line >= acc.line;\n                extraWidth = isAbove ? spacing.above : spacing.below;\n            }\n        }\n        // Place the glyph on the stave\n        this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n        this.glyphs.push(glyph);\n        const xPosition = this.xPositions[this.xPositions.length - 1];\n        const glyphWidth = glyph.getMetrics().width + extraWidth;\n        // Store the next accidental's x position\n        this.xPositions.push(xPosition + glyphWidth);\n        // Expand size of key signature\n        this.width += glyphWidth;\n    }\n    // Cancel out a key signature provided in the `spec` parameter. This will\n    // place appropriate natural accidentals before the key signature.\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        // Get the accidental list for the cancelled key signature\n        const cancel_accList = Tables.keySignature(spec);\n        // If the cancelled key has a different accidental type, ie: # vs b\n        const different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n        // Determine how many naturals needed to add\n        const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n        // Return if no naturals needed\n        if (naturals < 1)\n            return undefined;\n        // Get the line position for each natural\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!different_types) {\n                index = cancel_accList.length - naturals + i;\n            }\n            const acc = cancel_accList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        // Combine naturals with main accidental list for the key signature\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancel_accList[0].type,\n        };\n    }\n    // Deprecated\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    // Apply the accidental staff line placement based on the `clef` and\n    // the  accidental `type` for the key signature ('# or 'b').\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0; // if clef === \"treble\"\n        let customLines; // when clef doesn't follow treble key sig shape\n        switch (clef) {\n            // Treble & Subbass both have offsets of 0, so are not included.\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        // If there's a special case, assign those lines/spaces:\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    // Alter the accidentals of a key spec one by one.\n    // Each alteration is a new accidental that replaces the\n    // original accidental (or the canceled one).\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        const stave = this.checkStave();\n        this.width = 0;\n        this.glyphs = [];\n        this.xPositions = [0]; // initialize with initial x position\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n            }\n        }\n        this.formatted = true;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.glyphs.length; i++) {\n            const glyph = this.glyphs[i];\n            const x = this.x + this.xPositions[i];\n            glyph.setStave(stave);\n            glyph.setContext(ctx);\n            glyph.renderToStave(x);\n        }\n        ctx.closeGroup();\n    }\n}\n// Space between natural and following accidental depending\n// on vertical position\nKeySignature.accidentalSpacing = {\n    '#': {\n        above: 6,\n        below: 4,\n    },\n    b: {\n        above: 4,\n        below: 7,\n    },\n    n: {\n        above: 4,\n        below: 1,\n    },\n    '##': {\n        above: 6,\n        below: 4,\n    },\n    bb: {\n        above: 4,\n        below: 7,\n    },\n    db: {\n        above: 4,\n        below: 7,\n    },\n    d: {\n        above: 4,\n        below: 7,\n    },\n    bbs: {\n        above: 4,\n        below: 7,\n    },\n    '++': {\n        above: 6,\n        below: 4,\n    },\n    '+': {\n        above: 6,\n        below: 4,\n    },\n    '+-': {\n        above: 6,\n        below: 4,\n    },\n    '++-': {\n        above: 6,\n        below: 4,\n    },\n    bs: {\n        above: 4,\n        below: 10,\n    },\n    bss: {\n        above: 4,\n        below: 10,\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { isCategory } from './typeguard';\nexport const isBarline = (obj) => isCategory(obj, Barline);\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    static get CATEGORY() {\n        return 'Barline';\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    // Draw barlines\n    draw(stave) {\n        stave.checkContext();\n        this.setRendered();\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                // If the barline is shifted over (in front of clef/time/key)\n                // Draw vertical bar at the beginning.\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n    }\n    drawVerticalBar(stave, x, double_bar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (double_bar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let x_shift = 3;\n        if (!begin) {\n            x_shift = -5;\n        }\n        staveCtx.fillRect(x + x_shift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dot_radius = 2;\n        // Shift dots left or right\n        if (begin) {\n            x_shift += 4;\n        }\n        else {\n            x_shift -= 4;\n        }\n        const dot_x = x + x_shift + dot_radius / 2;\n        // calculate the y offset based on number of stave lines\n        let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dot_y = topY + y_offset + dot_radius / 2;\n        // draw the top repeat dot\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        // draw the bottom repeat dot\n        dot_y += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { RuntimeError } from './util';\nexport var Justification;\n(function (Justification) {\n    Justification[Justification[\"LEFT\"] = 1] = \"LEFT\";\n    Justification[Justification[\"CENTER\"] = 2] = \"CENTER\";\n    Justification[Justification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(Justification || (Justification = {}));\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nexport class TextNote extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.text = noteStruct.text || '';\n        this.superscript = noteStruct.superscript;\n        this.subscript = noteStruct.subscript;\n        this.setFont(noteStruct.font);\n        this.line = noteStruct.line || 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignore_ticks = noteStruct.ignore_ticks || false;\n        this.justification = Justification.LEFT;\n        // Determine and set initial note width. Note that the text width is\n        // an approximation and isn't very accurate. The only way to accurately\n        // measure the length of text is with `CanvasRenderingContext2D.measureText()`.\n        if (noteStruct.glyph) {\n            const struct = TextNote.GLYPHS[noteStruct.glyph];\n            if (!struct)\n                throw new RuntimeError('Invalid glyph type: ' + noteStruct.glyph);\n            this.glyph = new Glyph(struct.code, 40, { category: 'textNote' });\n            this.setWidth(this.glyph.getMetrics().width);\n        }\n        else {\n            this.glyph = undefined;\n        }\n    }\n    static get CATEGORY() {\n        return 'TextNote';\n    }\n    static get Justification() {\n        return Justification;\n    }\n    /** Glyph data. */\n    static get GLYPHS() {\n        return {\n            segno: {\n                code: 'segno',\n            },\n            tr: {\n                code: 'ornamentTrill',\n            },\n            mordent: {\n                code: 'ornamentMordent',\n            },\n            mordent_upper: {\n                code: 'ornamentShortTrill',\n            },\n            mordent_lower: {\n                code: 'ornamentMordent',\n            },\n            f: {\n                code: 'dynamicForte',\n            },\n            p: {\n                code: 'dynamicPiano',\n            },\n            m: {\n                code: 'dynamicMezzo',\n            },\n            s: {\n                code: 'dynamicSforzando',\n            },\n            z: {\n                code: 'dynamicZ',\n            },\n            coda: {\n                code: 'coda',\n            },\n            pedal_open: {\n                code: 'keyboardPedalPed',\n            },\n            pedal_close: {\n                code: 'keyboardPedalUp',\n            },\n            caesura_straight: {\n                code: 'caesura',\n            },\n            caesura_curved: {\n                code: 'caesuraCurved',\n            },\n            breath: {\n                code: 'breathMarkComma',\n            },\n            tick: {\n                code: 'breathMarkTick',\n            },\n            turn: {\n                code: 'ornamentTurn',\n            },\n            turn_inverted: {\n                code: 'ornamentTurnSlash',\n            },\n        };\n    }\n    /** Set the horizontal justification of the TextNote. */\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.smooth) {\n            this.setWidth(0);\n        }\n        else {\n            if (this.glyph) {\n                // Width already set.\n            }\n            else {\n                const ctx = this.checkContext();\n                ctx.setFont(this.textFont);\n                this.setWidth(ctx.measureText(this.text).width);\n            }\n        }\n        if (this.justification === Justification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === Justification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        // We reposition to the center of the note head\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    /**\n     * Renders the TextNote.\n     * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        // Reposition to center of note head\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        // Align based on tick-context width.\n        const width = this.getWidth();\n        if (this.justification === Justification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === Justification.RIGHT) {\n            x -= width;\n        }\n        let y;\n        if (this.glyph) {\n            y = stave.getYForLine(this.line + -3);\n            this.glyph.render(ctx, x, y);\n        }\n        else {\n            y = stave.getYForLine(this.line + -3);\n            this.applyStyle(ctx);\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, x, y);\n            const height = ctx.measureText(this.text).height;\n            // We called this.setFont(...) in the constructor, so we know this.textFont is available.\n            // eslint-disable-next-line\n            const { family, size, weight, style } = this.textFont;\n            // Scale the font size by 1/1.3.\n            const smallerFontSize = Font.scaleSize(size, 0.769231);\n            if (this.superscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.superscript, x + this.width + 2, y - height / 2.2);\n            }\n            if (this.subscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.subscript, x + this.width + 2, y + height / 2.2 - 1);\n            }\n            this.restoreStyle(ctx);\n        }\n    }\n}\nTextNote.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 12,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nexport class Volta extends StaveModifier {\n    constructor(type, number, x, y_shift) {\n        super();\n        this.volta = type;\n        this.x = x;\n        this.y_shift = y_shift;\n        this.number = number;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return 'Volta';\n    }\n    static get type() {\n        return VoltaType;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x; // don't include x (offset) for width\n        const top_y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        const vert_height = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.volta) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            default:\n                break;\n        }\n        // If the beginning of a volta, draw measure number\n        if (this.volta === VoltaType.BEGIN || this.volta === VoltaType.BEGIN_END) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n            ctx.restore();\n        }\n        ctx.fillRect(this.x + x, top_y, width, 1);\n        return this;\n    }\n}\nVolta.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\nimport { Tables } from './tables';\nexport class Repetition extends StaveModifier {\n    constructor(type, x, y_shift) {\n        super();\n        this.symbol_type = type;\n        this.x = x;\n        this.x_shift = 0;\n        this.y_shift = y_shift;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return 'Repetition';\n    }\n    setShiftX(x) {\n        this.x_shift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        this.setRendered();\n        switch (this.symbol_type) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSignoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSignoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.default.offsetY'), 40, 'coda', { category: 'coda' });\n        return this;\n    }\n    drawSignoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.default.offsetY'), 30, 'segno', { category: 'segno' });\n        return this;\n    }\n    drawSymbolText(stave, x, text, draw_coda) {\n        const ctx = stave.checkContext();\n        ctx.save();\n        ctx.setFont(this.textFont);\n        let text_x = 0;\n        let symbol_x = 0;\n        const modifierWidth = stave.getNoteStartX() - this.x;\n        switch (this.symbol_type) {\n            // To the left with symbol\n            case Repetition.type.CODA_LEFT:\n                // Offset Coda text to right of stave beginning\n                text_x = this.x + stave.getVerticalBarWidth();\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.default.offsetSymbol');\n                break;\n            // To the right without symbol\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.default.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width;\n                break;\n            // To the right with symbol\n            default:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.default.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.default.offsetSymbol');\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.default.offsetSymbol');\n                break;\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) +\n            this.y_shift +\n            Tables.currentMusicFont().lookupMetric('staveRepetition.default.offsetY');\n        if (draw_coda) {\n            Glyph.renderGlyph(ctx, symbol_x, y, 40, 'coda', { category: 'coda' });\n        }\n        ctx.fillText(text, text_x, y + 5);\n        ctx.restore();\n        return this;\n    }\n}\nRepetition.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13, // To Coda at end of stave\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nexport class StaveSection extends StaveModifier {\n    constructor(section, x, shift_y) {\n        super();\n        this.setWidth(16);\n        this.section = section;\n        this.x = x;\n        this.shift_x = 0;\n        this.shift_y = shift_y;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return 'StaveSection';\n    }\n    setStaveSection(section) {\n        this.section = section;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const paddingX = 2;\n        const paddingY = 2;\n        const rectWidth = 2;\n        const textMeasurements = ctx.measureText(this.section);\n        const textWidth = textMeasurements.width;\n        const textHeight = textMeasurements.height;\n        const width = textWidth + 2 * paddingX; // add left & right padding\n        const height = textHeight + 2 * paddingY; // add top & bottom padding\n        //  Seems to be a good default y\n        const y = stave.getYForTopText(2) + this.shift_y;\n        const x = this.x + shift_x;\n        ctx.beginPath();\n        ctx.setLineWidth(rectWidth);\n        ctx.rect(x, y + textMeasurements.y - paddingY, width, height);\n        ctx.stroke();\n        ctx.fillText(this.section, x + paddingX, y);\n        ctx.restore();\n        return this;\n    }\n}\nStaveSection.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nexport class StaveTempo extends StaveModifier {\n    constructor(tempo, x, shift_y) {\n        super();\n        /** Font size for note. */\n        this.render_options = { glyph_font_scale: 30 };\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.shift_x = 10;\n        this.shift_y = shift_y;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return 'StaveTempo';\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const options = this.render_options;\n        // FIXME: What does the '38' mean? Why 38? Is that supposed to\n        // be the default font size for standard notation?\n        const scale = options.glyph_font_scale / 38;\n        const name = this.tempo.name;\n        const duration = this.tempo.duration;\n        const dots = this.tempo.dots || 0;\n        const bpm = this.tempo.bpm;\n        let x = this.x + this.shift_x + shift_x;\n        const y = stave.getYForTopText(1) + this.shift_y;\n        ctx.save();\n        if (name) {\n            ctx.setFont(this.textFont);\n            ctx.fillText(name, x, y);\n            x += ctx.measureText(name).width;\n        }\n        if (duration && bpm) {\n            // Override the weight and style.\n            ctx.setFont(Object.assign(Object.assign({}, this.textFont), { weight: 'normal', style: 'normal' }));\n            if (name) {\n                x += ctx.measureText(' ').width;\n                ctx.fillText('(', x, y);\n                x += ctx.measureText('(').width;\n            }\n            const code = Tables.getGlyphProps(duration);\n            x += 3 * scale;\n            Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n            x += code.getWidth() * scale;\n            // Draw stem and flags\n            if (code.stem) {\n                let stem_height = 30;\n                if (code.beam_count)\n                    stem_height += 3 * (code.beam_count - 1);\n                stem_height *= scale;\n                const y_top = y - stem_height;\n                ctx.fillRect(x - scale, y_top, scale, stem_height);\n                if (code.flag) {\n                    Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem, {\n                        category: 'flag.staveTempo',\n                    });\n                    if (!dots)\n                        x += 6 * scale;\n                }\n            }\n            // Draw dot\n            for (let i = 0; i < dots; i++) {\n                x += 6 * scale;\n                ctx.beginPath();\n                ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n                ctx.fill();\n            }\n            ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n        }\n        ctx.restore();\n        return this;\n    }\n}\nStaveTempo.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 14,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Justification, TextNote } from './textnote';\nimport { RuntimeError } from './util';\nexport class StaveText extends StaveModifier {\n    constructor(text, position, options = {}) {\n        super();\n        this.setWidth(16);\n        this.text = text;\n        this.position = position;\n        this.options = Object.assign({ shift_x: 0, shift_y: 0, justification: TextNote.Justification.CENTER }, options);\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return 'StaveText';\n    }\n    setStaveText(text) {\n        this.text = text;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText('' + this.text).width;\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - text_width - 24 + this.options.shift_x;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX() + this.options.shift_x;\n                if (this.options.justification === Justification.CENTER) {\n                    x += stave.getWidth() / 2 - text_width / 2;\n                }\n                else if (this.options.justification === Justification.RIGHT) {\n                    x += stave.getWidth() - text_width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2) + this.options.shift_y;\n                }\n                else {\n                    y = stave.getYForBottomText(2) + this.options.shift_y;\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        ctx.fillText('' + this.text, x, y + 4);\n        ctx.restore();\n        return this;\n    }\n}\nStaveText.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Renders time signatures glyphs for staffs\n// This class is used by TimeSignature to render the associated glyphs\nimport { Glyph } from './glyph';\nimport { defined } from './util';\nexport class TimeSignatureGlyph extends Glyph {\n    constructor(timeSignature, topDigits, botDigits, code, point, options) {\n        var _a;\n        super(code, point, options);\n        this.timeSignature = timeSignature;\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        let topWidth = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            let timeSigType = topDigits[i];\n            switch (topDigits[i]) {\n                case '-':\n                    timeSigType = 'Minus';\n                    break;\n                case '+':\n                    timeSigType = botDigits.length > 0 ? 'PlusSmall' : 'Plus';\n                    break;\n                case '(':\n                    timeSigType = botDigits.length > 0 ? 'ParensLeftSmall' : 'ParensLeft';\n                    break;\n                case ')':\n                    timeSigType = botDigits.length > 0 ? 'ParensRightSmall' : 'ParensRight';\n                    break;\n            }\n            const topGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.topGlyphs.push(topGlyph);\n            topWidth += (_a = topGlyph.getMetrics().width) !== null && _a !== void 0 ? _a : 0;\n        }\n        let botWidth = 0;\n        for (let i = 0; i < botDigits.length; ++i) {\n            let timeSigType = botDigits[i];\n            switch (botDigits[i]) {\n                case '+':\n                    timeSigType = 'PlusSmall';\n                    break;\n                case '(':\n                    timeSigType = 'ParensLeftSmall';\n                    break;\n                case ')':\n                    timeSigType = 'ParensRightSmall';\n                    break;\n            }\n            const botGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.botGlyphs.push(botGlyph);\n            botWidth += defined(botGlyph.getMetrics().width);\n        }\n        this.width = Math.max(topWidth, botWidth);\n        this.xMin = this.getMetrics().x_min;\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n        this.reset();\n    }\n    getMetrics() {\n        return {\n            x_min: this.xMin,\n            x_max: this.xMin + this.width,\n            width: this.width,\n        };\n    }\n    renderToStave(x) {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        let start_x = x + this.topStartX;\n        let y = 0;\n        if (this.botGlyphs.length > 0)\n            y = stave.getYForLine(this.timeSignature.topLine);\n        else\n            y = (stave.getYForLine(this.timeSignature.topLine) + stave.getYForLine(this.timeSignature.bottomLine)) / 2;\n        for (let i = 0; i < this.topGlyphs.length; ++i) {\n            const glyph = this.topGlyphs[i];\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + this.x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n        start_x = x + this.botStartX;\n        y = stave.getYForLine(this.timeSignature.bottomLine);\n        for (let i = 0; i < this.botGlyphs.length; ++i) {\n            const glyph = this.botGlyphs[i];\n            this.timeSignature.placeGlyphOnLine(glyph, stave, 0);\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + glyph.getMetrics().x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignatureGlyph } from './timesigglyph';\nimport { defined, RuntimeError } from './util';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    if (numbers.length !== 2 && numbers[0] !== '+' && numbers[0] !== '-') {\n        throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`);\n    }\n    numbers.forEach((number) => {\n        // Characters consisting in number 0..9, '+', '-', '(' or ')'\n        if (/^[0-9+\\-()]+$/.test(number) == false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\nexport class TimeSignature extends StaveModifier {\n    constructor(timeSpec = '4/4', customPadding = 15, validate_args = true) {\n        super();\n        this.validate_args = validate_args;\n        const padding = customPadding;\n        const musicFont = Tables.currentMusicFont();\n        this.point = musicFont.lookupMetric('digits.point');\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.topLine = 2 + fontLineShift;\n        this.bottomLine = 4 + fontLineShift;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.info = this.parseTimeSpec(timeSpec);\n        this.setWidth(defined(this.info.glyph.getMetrics().width));\n        this.setPadding(padding);\n    }\n    static get CATEGORY() {\n        return 'TimeSignature';\n    }\n    static get glyphs() {\n        return {\n            C: {\n                code: 'timeSigCommon',\n                point: 40,\n                line: 2,\n            },\n            'C|': {\n                code: 'timeSigCutCommon',\n                point: 40,\n                line: 2,\n            },\n        };\n    }\n    parseTimeSpec(timeSpec) {\n        var _a, _b;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const { line, code, point } = TimeSignature.glyphs[timeSpec];\n            return {\n                line,\n                num: false,\n                glyph: new Glyph(code, point),\n            };\n        }\n        if (this.validate_args) {\n            assertIsValidTimeSig(timeSpec);\n        }\n        const parts = timeSpec.split('/');\n        return {\n            num: true,\n            glyph: this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : ''),\n        };\n    }\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        return new TimeSignatureGlyph(this, topDigits, botDigits, 'timeSig0', this.point);\n    }\n    getInfo() {\n        return this.info;\n    }\n    setTimeSig(timeSpec) {\n        this.info = this.parseTimeSpec(timeSpec);\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        this.info.glyph.setStave(stave);\n        this.info.glyph.setContext(ctx);\n        this.placeGlyphOnLine(this.info.glyph, stave, this.info.line);\n        this.info.glyph.renderToStave(this.x);\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { KeySignature } from './keysignature';\nimport { Barline, BarlineType, isBarline } from './stavebarline';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { Volta } from './stavevolta';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { RuntimeError } from './util';\n// Used by Stave.format() to sort the modifiers at the beginning and end of a stave.\n// The keys (computed property names) match the CATEGORY property in the\n// Barline, Clef, KeySignature, TimeSignature classes.\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nexport class Stave extends Element {\n    constructor(x, y, width, options) {\n        super();\n        // Initialized by the constructor via this.resetLines().\n        this.height = 0;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.start_x = x + 5;\n        this.end_x = x + width;\n        this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.resetFont();\n        this.options = Object.assign({ vertical_bar_width: 10, num_lines: 5, fill_style: '#999999', left_bar: true, right_bar: true, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, space_above_staff_ln: 4, space_below_staff_ln: 4, top_text_position: 1, bottom_text_position: 4, line_config: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 1.4 };\n        this.resetLines();\n        // beg bar\n        this.addModifier(new Barline(this.options.left_bar ? BarlineType.SINGLE : BarlineType.NONE));\n        // end bar\n        this.addEndModifier(new Barline(this.options.right_bar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    static get CATEGORY() {\n        return 'Stave';\n    }\n    // This is the sum of the padding that normally goes on left + right of a stave during\n    // drawing. Used to size staves correctly with content width.\n    static get defaultPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.padding') + musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    // Right padding, used by system if startX is already determined.\n    static get rightPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    /** Set default style for ledger lines. */\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    /** Get default style for ledger lines. */\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacing_between_lines_px * spacing;\n    }\n    resetLines() {\n        this.options.line_config = [];\n        for (let i = 0; i < this.options.num_lines; i++) {\n            this.options.line_config.push({ visible: true });\n        }\n        this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n        this.options.bottom_text_position = this.options.num_lines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.start_x = x;\n        const begBarline = this.modifiers[0];\n        begBarline.setX(this.start_x - begBarline.getWidth());\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.start_x;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.end_x;\n    }\n    getTieStartX() {\n        return this.start_x;\n    }\n    getTieEndX() {\n        return this.end_x;\n    }\n    getX() {\n        return this.x;\n    }\n    getNumLines() {\n        return this.options.num_lines;\n    }\n    setNumLines(n) {\n        this.options.num_lines = n;\n        this.resetLines();\n        return this;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    getY() {\n        return this.y;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0) - Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    getBottomLineBottomY() {\n        return this.getYForLine(this.getNumLines() - 1) + Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.start_x += shift;\n        this.end_x += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.end_x = this.x + width;\n        // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n        // this.modifiers[1].setX(this.end_x);\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    getStyle() {\n        return Object.assign({ fillStyle: this.options.fill_style, strokeStyle: this.options.fill_style, lineWidth: Tables.STAVE_LINE_THICKNESS }, this.style);\n    }\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    /**\n     * Gets the pixels to shift from the beginning of the stave\n     * following the modifier at the provided index\n     * @param  {Number} index The index from which to determine the shift\n     * @return {Number}       The amount of pixels shifted\n     */\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let start_x = this.start_x - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n            start_x -= begBarline.getWidth();\n        }\n        return start_x;\n    }\n    /** Coda & Segno Symbol functions */\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    // Volta functions\n    setVoltaType(type, number_t, y) {\n        this.modifiers.push(new Volta(type, number_t, this.x, y));\n        return this;\n    }\n    // Section functions\n    setSection(section, y, xOffset = 0, fontSize) {\n        const staveSection = new StaveSection(section, this.x + xOffset, y);\n        if (fontSize)\n            staveSection.setFontSize(fontSize);\n        this.modifiers.push(staveSection);\n        return this;\n    }\n    // Tempo functions\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    // Text functions\n    setText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacing_between_lines_px;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n        return score_bottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.num_lines);\n    }\n    // This returns\n    /** @returns the y for the *center* of a staff line */\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        // Does the reverse of getYForLine - somewhat dumb and just calls\n        // getYForLine until the right value is reaches\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.top_text_position);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottom_text_position + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    // This method adds a stave modifier to the stave. Note that the first two\n    // modifiers (BarLines) are automatically added upon construction.\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    // Bar Line functions\n    setBegBarType(type) {\n        // Only valid bar types at beginning of stave is none, single or begin repeat\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        // Repeat end not valid at end of stave\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a key signature to the stave.\n     *\n     * Example:\n     * `stave.addKeySignature('Db');`\n     * @param keySpec new key specification `[A-G][b|#]?`\n     * @param cancelKeySpec\n     * @param position\n     * @returns\n     */\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    /**\n     * Add a clef to the stave.\n     *\n     * Example:\n     *\n     * stave.addClef('treble')\n     * @param clef clef (treble|bass|...) see {@link Clef.types}\n     * @param size\n     * @param annotation\n     * @param position\n     * @returns\n     */\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a time signature to the stave\n     *\n     * Example:\n     *\n     * `stave.addTimeSignature('4/4');`\n     * @param timeSpec time signature specification `(C\\||C|\\d\\/\\d)`\n     * @param customPadding\n     * @param position\n     * @returns\n     */\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    // Deprecated\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    /**\n     * @param position\n     * @param category\n     * @returns array of StaveModifiers that match the provided position and category.\n     */\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            // A category was provided.\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            // A position was provided.\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            // Both position and category were provided!\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    /**\n     * Use the modifier's `getCategory()` as a key for the `order` array.\n     * The retrieved value is used to sort modifiers from left to right (0 to to 3).\n     */\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.start_x = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = layoutMetrics.xMax || 0;\n                    widths.paddingRight = layoutMetrics.paddingRight || 0;\n                }\n                widths.left = -layoutMetrics.xMin || 0;\n                widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    /**\n     * All drawing functions below need the context to be set.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const num_lines = this.options.num_lines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        // Render lines\n        for (let line = 0; line < num_lines; line++) {\n            y = this.getYForLine(line);\n            this.applyStyle();\n            if (this.options.line_config[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + width, y);\n                ctx.stroke();\n            }\n            this.restoreStyle();\n        }\n        // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            // Only draw modifier if it has a draw function\n            if (typeof modifier.draw === 'function') {\n                modifier.applyStyle(ctx);\n                modifier.draw(this, this.getModifierXShift(i));\n                modifier.restoreStyle(ctx);\n            }\n        }\n        // Render measure numbers\n        if (this.measure > 0) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n            ctx.restore();\n        }\n        ctx.closeGroup();\n        return this;\n    }\n    getVerticalBarWidth() {\n        return this.options.vertical_bar_width;\n    }\n    /**\n     * Get the current configuration for the Stave.\n     * @return {Array} An array of configuration objects.\n     */\n    getConfigForLines() {\n        return this.options.line_config;\n    }\n    /**\n     * Configure properties of the lines in the Stave\n     * @param line_number The index of the line to configure.\n     * @param line_config An configuration object for the specified line.\n     * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n     *   range of the number of lines specified in the constructor.\n     */\n    setConfigForLine(line_number, line_config) {\n        if (line_number >= this.options.num_lines || line_number < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (line_config.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof line_config.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.line_config[line_number] = line_config;\n        return this;\n    }\n    /**\n     * Set the staff line configuration array for all of the lines at once.\n     * @param lines_configuration An array of line configuration objects.  These objects\n     *   are of the same format as the single one passed in to setLineConfiguration().\n     *   The caller can set null for any line config entry if it is desired that the default be used\n     * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n     *   exactly the same number of elements as the num_lines configuration object set in\n     *   the constructor.\n     */\n    setConfigForLines(lines_configuration) {\n        if (lines_configuration.length !== this.options.num_lines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        // Make sure the defaults are present in case an incomplete set of\n        //  configuration options were supplied.\n        // eslint-disable-next-line\n        for (const line_config in lines_configuration) {\n            // Allow '{}' to be used if the caller just wants the default for a particular node.\n            if (lines_configuration[line_config].visible == undefined) {\n                lines_configuration[line_config] = this.options.line_config[line_config];\n            }\n            this.options.line_config[line_config] = Object.assign(Object.assign({}, this.options.line_config[line_config]), lines_configuration[line_config]);\n        }\n        this.options.line_config = lines_configuration;\n        return this;\n    }\n}\nStave.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 8,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let x_shift = 3;\n    let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    const thickLineOffset = 2; // For aesthetics\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        x_shift = -5; // Flips the side of the thin line\n        variableWidth = 3;\n    }\n    // Thin line\n    ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n/** StaveConnector implements the connector lines between staves of a system. */\nexport class StaveConnector extends Element {\n    constructor(top_stave, bottom_stave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.width = 3;\n        this.top_stave = top_stave;\n        this.bottom_stave = bottom_stave;\n        this.type = StaveConnector.type.DOUBLE;\n        this.resetFont();\n        // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n        // 2. Offset BRACE type not to overlap with another StaveConnector\n        this.x_shift = 0;\n        this.texts = [];\n    }\n    static get CATEGORY() {\n        return 'StaveConnector';\n    }\n    /**\n     * Set type.\n     * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n     */\n    setType(type) {\n        type = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n            this.type = type;\n        }\n        return this;\n    }\n    /** Set optional associated Text. */\n    setText(text, options = {}) {\n        this.texts.push({\n            content: text,\n            options: Object.assign({ shift_x: 0, shift_y: 0 }, options),\n        });\n        return this;\n    }\n    setXShift(x_shift) {\n        if (typeof x_shift !== 'number') {\n            throw new RuntimeError('InvalidType', 'x_shift must be a Number');\n        }\n        this.x_shift = x_shift;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render connector and associated text. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.top_stave.getYForLine(0);\n        let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n        let width = this.width;\n        let topX = this.top_stave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.top_stave.getX() + this.top_stave.getWidth();\n        }\n        let attachment_height = botY - topY;\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= this.width + 2;\n                topY -= this.thickness;\n                attachment_height += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                // May need additional code to draw brace\n                const x1 = this.top_stave.getX() - 2 + this.x_shift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachment_height / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachment_height;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachment_height;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachment_height;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachment_height;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachment_height;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachment_height;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachment_height = botY - topY;\n                Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n                Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n                topX -= this.width + 2;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachment_height -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachment_height);\n        }\n        // If the connector is a thin double barline, draw the paralell line\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachment_height);\n        }\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        // Add stave connector text\n        for (let i = 0; i < this.texts.length; i++) {\n            const text = this.texts[i];\n            const text_width = ctx.measureText('' + text.content).width;\n            const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n            const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n            ctx.fillText('' + text.content, x, y + 4);\n        }\n        ctx.restore();\n    }\n}\nStaveConnector.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n/**\n * SINGLE_LEFT and SINGLE are the same value for compatibility\n * with older versions of vexflow which didn't have right sided\n * stave connectors.\n */\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\n/**\n * Connector type:\n * * \"singleRight\"\n * * \"singleLeft\"\n * * \"single\"\n * * \"double\"\n * * \"brace\"\n * * \"bracket\"\n * * \"boldDoubleLeft\"\n * * \"boldDoubleRight\"\n * * \"thinDouble\"\n * * \"none\"\n */\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Beam } from './beam';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { ModifierContext } from './modifiercontext';\nimport { isNote } from './note';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { isStaveNote } from './stavenote';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { defined, log, midLine, RuntimeError } from './util';\nimport { Voice } from './voice';\n// Helper function\nconst sumArray = (arr) => arr.reduce((a, b) => a + b, 0);\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts(voices, makeContext, addToContext) {\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    // Initialize tick maps.\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach((voice, voiceIndex) => {\n        // Use resolution multiplier as denominator so that no additional expansion\n        // of fractional tick values is needed.\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            // If we have no tick context for this tick, create one.\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                // Maintain a list of unique integerTicks.\n                tickList.push(integerTicks);\n            }\n            // Add this tickable to the TickContext.\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('Vex.Flow.Formatter', args);\n}\n/**\n * Get the rest line number of the next non-rest note(s).\n * @param notes array of Notes\n * @param currRestLine\n * @param currNoteIndex current note index\n * @param compare if true, return the midpoint between the current rest line and the next rest line\n * @returns a line number, which determines the vertical position of a rest.\n */\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    // If no valid next note group, nextRestLine is same as current.\n    let nextRestLine = currRestLine;\n    // Start with the next note and keep going until we find a valid non-rest note group.\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    // Locate the mid point between two lines.\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nexport class Formatter {\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: 100, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        // Minimum width required to render all the notes in the voices.\n        this.minTotalWidth = 0;\n        // This is set to `true` after `minTotalWidth` is calculated.\n        this.hasMinTotalWidth = false;\n        // Arrays of tick and modifier contexts.\n        this.tickContexts = undefined;\n        this.modifierContexts = undefined;\n        // Gaps between contexts, for free movement of notes post\n        // formatting.\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    /**\n     * Helper function to layout \"notes\" one after the other without\n     * regard for proportions. Useful for tests and debugging.\n     */\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tick = new TickContext().addTickable(note).preFormat();\n            const metrics = tick.getMetrics();\n            tick.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    /** Helper function to plot formatter debug info. */\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        options = Object.assign({ stavePadding: Tables.currentMusicFont().lookupMetric('stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    /**\n     * Helper function to format and draw a single voice. Returns a bounding\n     * box for the notation.\n     * @param ctx  the rendering context\n     * @param stave the stave to which to draw (`Stave` or `TabStave`)\n     * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n     * @param params one of below:\n     *    * Setting `autobeam` only `(context, stave, notes, true)` or\n     *      `(ctx, stave, notes, {autobeam: true})`\n     *    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n     *    * Setting both a struct is needed `(context, stave, notes, {\n     *      autobeam: true, align_rests: true})`\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            auto_beam: false,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.auto_beam = params;\n        }\n        // Start by creating a voice and adding all the notes to it.\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Then create beams, if requested.\n        const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n        // Instantiate a `Formatter` and format the notes.\n        new Formatter()\n            .joinVoices([voice]) // , { align_rests: options.align_rests })\n            .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n        // Render the voice and beams to the stave.\n        voice.setStave(stave).draw(ctx, stave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Return the bounding box of the voice.\n        return voice.getBoundingBox();\n    }\n    /**\n     * Helper function to format and draw aligned tab and stave notes in two\n     * separate staves.\n     * @param ctx the rendering context\n     * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n     * @param stave a `Stave` instance on which to render `Note`s.\n     * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n     * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n     * @param autobeam automatically generate beams.\n     * @param params a configuration object:\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n        let opts = {\n            auto_beam: autobeam,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.auto_beam = params;\n        }\n        // Create a `4/4` voice for `notes`.\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Create a `4/4` voice for `tabnotes`.\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        // Then create beams, if requested.\n        const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n        // Instantiate a `Formatter` and align tab and stave notes.\n        new Formatter()\n            .joinVoices([notevoice]) // , { align_rests: opts.align_rests })\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n        // Render voices and beams to staves.\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Draw a connector between tab and note staves.\n        new StaveConnector(stave, tabstave).setContext(ctx).draw();\n    }\n    /**\n     * Automatically set the vertical position of rests based on previous/next note positions.\n     * @param tickables an array of Tickables.\n     * @param alignAllNotes If `false`, only align rests that are within a group of beamed notes.\n     * @param alignTuplets If `false`, ignores tuplets.\n     */\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                // If activated rests not on default can be rendered as specified.\n                const position = currTickable.getGlyph().position.toUpperCase();\n                if (position !== 'R/4' && position !== 'B/4') {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    // Align rests with previous/next notes.\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        // If previous tickable is a rest, use its line number.\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                // Get the rest line for next valid non-rest note group.\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    /**\n     * Find all the rests in each of the `voices` and align them to neighboring notes.\n     *\n     * @param voices\n     * @param alignAllNotes If `false`, only align rests within beamed groups of notes. If `true`, align all rests.\n     */\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    /**\n     * Estimate the width required to render 'voices'.  This is done by:\n     * 1. Sum the widths of all the tick contexts\n     * 2. Estimate the padding.\n     * The latter is done by calculating the padding 3 different ways, and taking the\n     * greatest value:\n     * 1. the padding required for unaligned notes in different voices\n     * 2. the padding based on the stddev of the tickable widths\n     * 3. the padding based on the stddev of the tickable durations.\n     *\n     * The last 2 quantities estimate a 'width entropy', where notes might need more\n     * room than the proportional formatting gives them.  A measure of all same duration\n     * and width will need no extra padding, and all these quantities will be\n     * zero in that case.\n     *\n     * @param voices the voices that contain the notes\n     * @returns the estimated width in pixels\n     */\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Tables.currentMusicFont().lookupMetric('stave.unalignedNotePadding');\n        // Calculate additional padding based on 3 methods:\n        // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        // Cache results.\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        // Create tick contexts if not already created.\n        if (!this.tickContexts) {\n            if (!voices) {\n                throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n            }\n            this.createTickContexts(voices);\n        }\n        // eslint-disable-next-line\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        // Go through each tick context and calculate total width,\n        // and also accumulate values used in padding hints\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            // If this TC doesn't have all the voices on it, it's unaligned.\n            // so increment the unaligned padding accumulator\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            // Calculate the 'width entropy' over all the Tickables.\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        // Find max of 3 methods pad the width with that\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    /**\n     * Get minimum width required to render all voices. Either `format` or\n     * `preCalculateMinTotalWidth` must be called before this method.\n     */\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    /** Calculate the resolution multiplier for `voices`. */\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    /** Create a `ModifierContext` for each tick in `voices`. */\n    createModifierContexts(voices) {\n        const fn = (tickable, context) => tickable.addToModifierContext(context);\n        const contexts = createContexts(voices, () => new ModifierContext(), fn);\n        this.modifierContexts = contexts;\n        return contexts;\n    }\n    /**\n     * Create a `TickContext` for each tick in `voices`. Also calculate the\n     * total number of ticks in voices.\n     */\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    /**\n     * This is the core formatter logic. Format voices and justify them\n     * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n     * that can't retreive widths without a canvas. This method sets the `x` positions\n     * of all the tickables/notes in the formatter.\n     */\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        // Initialize context maps.\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        // Reset loss history for evaluator.\n        this.lossHistory = [];\n        // If voices and a stave were provided, set the Stave for each voice\n        // and preFormat to apply Y values to the notes;\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        // Now distribute the ticks to each tick context, and assign them their\n        // own X positions.\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        // Pass 1: Give each note maximum width requested by context.\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            // Make sure that all tickables in this context have calculated their\n            // space requirements.\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            // Calculate shift for the next tick.\n            shift = width - metrics.totalLeftPx;\n        });\n        // Use softmax based on all notes across all staves. (options.globalSoftmax)\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        // No justification needed. End formatting.\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        // Start justification. Subtract the right extra pixels of the final context because the formatter\n        // justifies based on the context's X position, which is the left-most part of the note head.\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n        // the softmax of the ticks.\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    // Go through each tickable and search backwards for another tickable\n                    // in the same voice. If found, use that duration (ticks) to calculate\n                    // the expected distance.\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        // Look for matching voices between tick contexts.\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            // Found matching voices, get largest duration\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                // Calculate the limits of the shift based on modifiers, etc.\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                // Don't allow shifting if notes in the same voice can collide\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n                            // so that two different tick contexts don't align across staves.\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            // Calculate the expected distance of the current context from the last matching tickable. The\n                            // distance is scaled down by the softmax for the voice.\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            // Distribute ticks to the contexts based on the calculated distance error.\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                // Move center aligned tickables to middle\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const musicFont = Tables.currentMusicFont();\n        const configMinPadding = musicFont.lookupMetric('stave.endPaddingMin');\n        const configMaxPadding = musicFont.lookupMetric('stave.endPaddingMax');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        // Calculate right justification by finding max of (configured value, min distance between tickables)\n        // so measures with lots of white space use it evenly, and crowded measures use at least the configured\n        // space.\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        // Just one context. Done formatting.\n        if (contextList.length === 1)\n            return 0;\n        // right justify to either the configured padding, or the min distance between notes, whichever is greatest.\n        // This * 2 keeps the existing formatting unless there is 'a lot' of extra whitespace, which won't break\n        // existing visual regression tests.\n        const paddingMax = configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n        const paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        // Adjust justification width until the right margin is as close as possible to the calculated padding,\n        // without going over\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    /** Calculate the total cost of this formatting decision. */\n    evaluate() {\n        if (!this.tickContexts)\n            return 0;\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        // Calculate available slack per tick context. This works out how much freedom\n        // to move a context has in either direction, without affecting other notes.\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            // Calculate X position of right edge of previous note\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            // Calculate X position of left edge of current note\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            // Tell the tick contexts how much they can reposition themselves.\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        // Calculate mean distance in each voice for each duration type, then calculate\n        // how far each note is from the mean.\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1 };\n            }\n            else {\n                stats.count += 1;\n                stats.mean = (stats.mean + space) / 2;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        // Calculate how much each note deviates from the mean. Loss function is square\n        // root of the sum of squared deviations.\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    /**\n     * Run a single iteration of rejustification. At a high level, this method calculates\n     * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n     * attempt to reduce the cost. You can call this method multiple times until it finds\n     * and oscillates around a global minimum.\n     * @param alpha the \"learning rate\" for the formatter. It determines how much of a shift\n     * the formatter should make based on its cost function.\n     */\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n        // on adjacent tickcontexts.\n        function move(current, shift, prev, next) {\n            current.setX(current.getX() + shift);\n            current.getFormatterMetrics().freedom.left += shift;\n            current.getFormatterMetrics().freedom.right -= shift;\n            if (prev)\n                prev.getFormatterMetrics().freedom.right += shift;\n            if (next)\n                next.getFormatterMetrics().freedom.left -= shift;\n        }\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            move(context, shift, prevContext, nextContext);\n            const cost = -sumArray(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    /**\n     * This is the top-level call for all formatting logic completed\n     * after `x` *and* `y` values have been computed for the notes\n     * in the voices.\n     */\n    postFormat() {\n        const postFormatContexts = (contexts) => contexts.list.forEach((tick) => contexts.map[tick].postFormat());\n        if (this.modifierContexts)\n            postFormatContexts(this.modifierContexts);\n        if (this.tickContexts)\n            postFormatContexts(this.tickContexts);\n        return this;\n    }\n    /**\n     * Take all `voices` and create `ModifierContext`s out of them. This tells\n     * the formatters that the voices belong on a single stave.\n     */\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    /**\n     * Align rests in voices, justify the contexts, and position the notes\n     * so voices are aligned and ready to render onto the stave. This method\n     * mutates the `x` positions of all tickables in `voices`.\n     *\n     * Voices are full justified to fit in `justifyWidth` pixels.\n     *\n     * Set `options.context` to the rendering context. Set `options.align_rests`\n     * to true to enable rest alignment.\n     */\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ align_rests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.align_rests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        // Only postFormat if a stave was supplied for y value formatting\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    // This method is just like `format` except that the `justifyWidth` is inferred from the `stave`.\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        // eslint-disable-next-line\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { defined, RuntimeError } from './util';\nexport class Tuplet extends Element {\n    constructor(notes, options = {}) {\n        super();\n        this.numerator_glyphs = [];\n        this.denom_glyphs = [];\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.options = options;\n        this.notes = notes;\n        this.num_notes = this.options.num_notes != undefined ? this.options.num_notes : notes.length;\n        // We accept beats_occupied, but warn that it's deprecated:\n        // the preferred property name is now notes_occupied.\n        if (this.options.beats_occupied) {\n            this.beatsOccupiedDeprecationWarning();\n        }\n        this.notes_occupied = this.options.notes_occupied || this.options.beats_occupied || 2;\n        if (this.options.bracketed != undefined) {\n            this.bracketed = this.options.bracketed;\n        }\n        else {\n            this.bracketed = notes.some((note) => !note.hasBeam());\n        }\n        this.ratioed =\n            this.options.ratioed != undefined ? this.options.ratioed : Math.abs(this.notes_occupied - this.num_notes) > 1;\n        this.point = Tables.currentMusicFont().lookupMetric('digits.tupletPoint');\n        this.y_pos = 16;\n        this.x_pos = 100;\n        this.width = 200;\n        this.setTupletLocation(this.options.location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    static get CATEGORY() {\n        return 'Tuplet';\n    }\n    static get LOCATION_TOP() {\n        return 1;\n    }\n    static get LOCATION_BOTTOM() {\n        return -1;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.tuplet;\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    /**\n     * Set whether or not the bracket is drawn.\n     */\n    setBracketed(bracketed) {\n        this.bracketed = !!bracketed;\n        return this;\n    }\n    /**\n     * Set whether or not the ratio is shown.\n     */\n    setRatioed(ratioed) {\n        this.ratioed = !!ratioed;\n        return this;\n    }\n    /**\n     * Set the tuplet indicator to be displayed either on the top or bottom of the stave.\n     */\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            // eslint-disable-next-line\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.num_notes;\n    }\n    beatsOccupiedDeprecationWarning() {\n        // eslint-disable-next-line\n        console.warn('beats_occupied has been deprecated as an option for tuplets. Please use notes_occupied instead.', 'Calls to getBeatsOccupied / setBeatsOccupied should now be routed to getNotesOccupied / setNotesOccupied.', 'The old methods will be removed in VexFlow 5.0.');\n    }\n    getBeatsOccupied() {\n        this.beatsOccupiedDeprecationWarning();\n        return this.getNotesOccupied();\n    }\n    setBeatsOccupied(beats) {\n        this.beatsOccupiedDeprecationWarning();\n        return this.setNotesOccupied(beats);\n    }\n    getNotesOccupied() {\n        return this.notes_occupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.notes_occupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        this.numerator_glyphs = [];\n        let n = this.num_notes;\n        while (n >= 1) {\n            this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n        this.denom_glyphs = [];\n        n = this.notes_occupied;\n        while (n >= 1) {\n            this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n    }\n    // determine how many tuplets are nested within this tuplet\n    // on the same side (above/below), to calculate a y\n    // offset for this tuplet:\n    getNestedTupletCount() {\n        const location = this.location;\n        const first_note = this.notes[0];\n        let maxTupletCount = countTuplets(first_note, location);\n        let minTupletCount = countTuplets(first_note, location);\n        // Count the tuplets that are on the same side (above/below)\n        // as this tuplet:\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    // determine the y position of the tuplet:\n    getYPosition() {\n        // offset the tuplet for any nested tuplets between\n        // it and the notes:\n        const nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n        // offset the tuplet for any manual y_offset:\n        const y_offset = this.options.y_offset || 0;\n        // now iterate through the notes and find our highest\n        // or lowest locations, to form a base y_pos\n        const first_note = this.notes[0];\n        let y_pos;\n        if (this.location === Tuplet.LOCATION_TOP) {\n            y_pos = first_note.checkStave().getYForLine(0) - Tuplet.metrics.topModifierOffset;\n            // check modifiers above note to see if they will collide with tuplet beam\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().top_text_line);\n                }\n                const modY = note.getYForTopText(modLines) - Tuplet.metrics.noteHeadOffset;\n                if (note.hasStem() || note.isRest()) {\n                    const top_y = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tuplet.metrics.stemOffset\n                        : note.getStemExtents().baseY - Tuplet.metrics.noteHeadOffset;\n                    y_pos = Math.min(top_y, y_pos);\n                    if (modLines > 0) {\n                        y_pos = Math.min(modY, y_pos);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = Tuplet.metrics.bottomLine; // tuplet default on line 4\n            // check modifiers below note to see if they will collide with tuplet beam\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().text_line + 1);\n                }\n            });\n            y_pos = first_note.checkStave().getYForLine(lineCheck) + Tuplet.metrics.noteHeadOffset;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + Tuplet.metrics.noteHeadOffset\n                        : this.notes[i].getStemExtents().topY + Tuplet.metrics.stemOffset;\n                    if (bottom_y > y_pos) {\n                        y_pos = bottom_y;\n                    }\n                }\n            }\n        }\n        return y_pos + nested_tuplet_y_offset + y_offset;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        // determine x value of left bound of tuplet\n        const first_note = this.notes[0];\n        const last_note = this.notes[this.notes.length - 1];\n        if (!this.bracketed) {\n            this.x_pos = first_note.getStemX();\n            this.width = last_note.getStemX() - this.x_pos;\n        }\n        else {\n            this.x_pos = first_note.getTieLeftX() - 5;\n            this.width = last_note.getTieRightX() - this.x_pos + 5;\n        }\n        // determine y value for tuplet\n        this.y_pos = this.getYPosition();\n        const addGlyphWidth = (width, glyph) => width + defined(glyph.getMetrics().width);\n        // calculate total width of tuplet notation\n        let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n        if (this.ratioed) {\n            width = this.denom_glyphs.reduce(addGlyphWidth, width);\n            width += this.point * 0.32;\n        }\n        const notation_center_x = this.x_pos + this.width / 2;\n        const notation_start_x = notation_center_x - width / 2;\n        // draw bracket if the tuplet is not beamed\n        if (this.bracketed) {\n            const line_width = this.width / 2 - width / 2 - 5;\n            // only draw the bracket if it has positive length\n            if (line_width > 0) {\n                ctx.fillRect(this.x_pos, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n                ctx.fillRect(this.x_pos + this.width, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n            }\n        }\n        // draw numerator glyphs\n        const shiftY = Tables.currentMusicFont().lookupMetric('digits.shiftY', 0);\n        let x_offset = 0;\n        this.numerator_glyphs.forEach((glyph) => {\n            glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n            x_offset += defined(glyph.getMetrics().width);\n        });\n        // display colon and denominator if the ratio is to be shown\n        if (this.ratioed) {\n            const colon_x = notation_start_x + x_offset + this.point * 0.16;\n            const colon_radius = this.point * 0.06;\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n            ctx.closePath();\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n            ctx.closePath();\n            ctx.fill();\n            x_offset += this.point * 0.32;\n            this.denom_glyphs.forEach((glyph) => {\n                glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n                x_offset += defined(glyph.getMetrics().width);\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { isStaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { isTabNote } from './tabnote';\nimport { Tuplet } from './tuplet';\nimport { RuntimeError } from './util';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nconst BEAM_LEFT = 'L';\nconst BEAM_RIGHT = 'R';\nconst BEAM_BOTH = 'B';\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n    constructor(notes, auto_stem = false) {\n        super();\n        this.slope = 0;\n        this.y_shift = 0;\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        // Validate beam line, direction and ticks.\n        this.ticks = notes[0].getIntrinsicTicks();\n        if (this.ticks >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i; // shared iterator\n        let note;\n        this.stem_direction = Stem.UP;\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (note.hasStem()) {\n                this.stem_direction = note.getStemDirection();\n                break;\n            }\n        }\n        let stem_direction = this.stem_direction;\n        // Figure out optimal stem direction based on given notes\n        if (auto_stem && isStaveNote(notes[0])) {\n            stem_direction = calculateStemDirection(notes);\n        }\n        else if (auto_stem && isTabNote(notes[0])) {\n            // Auto Stem TabNotes\n            const stem_weight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        // Apply stem directions and attach beam to notes\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (auto_stem) {\n                note.setStemDirection(stem_direction);\n                this.stem_direction = stem_direction;\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        this.beam_count = this.getBeamCount();\n        this.break_on_indices = [];\n        this.render_options = {\n            beam_width: 5,\n            max_slope: 0.25,\n            min_slope: -0.25,\n            slope_iterations: 20,\n            slope_cost: 100,\n            show_stemlets: false,\n            stemlet_extension: 7,\n            partial_beam_length: 10,\n            flat_beams: false,\n            min_flat_beam_offset: 15,\n        };\n    }\n    static get CATEGORY() {\n        return 'Beam';\n    }\n    /** Get the direction of the beam */\n    getStemDirection() {\n        return this.stem_direction;\n    }\n    /**\n     * Get the default beam groups for a provided time signature.\n     * Attempt to guess if the time signature is not found in table.\n     * Currently this is fairly naive.\n     */\n    static getDefaultBeamGroups(time_sig) {\n        if (!time_sig || time_sig === 'c') {\n            time_sig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[time_sig];\n        if (groups === undefined) {\n            // If no beam groups found, naively determine\n            // the beam groupings from the time signature\n            const beatTotal = parseInt(time_sig.split('/')[0], 10);\n            const beatValue = parseInt(time_sig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    /**\n     * A helper function to automatically build basic beams for a voice. For more\n     * complex auto-beaming use `Beam.generateBeams()`.\n     * @param voice the voice to generate the beams for\n     * @param stem_direction a stem direction to apply to the entire voice\n     * @param groups an array of `Fraction` representing beat groupings for the beam\n     */\n    static applyAndGetBeams(voice, stem_direction, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stem_direction });\n    }\n    /**\n     * A helper function to autimatically build beams for a voice with\n     * configuration options.\n     *\n     * Example configuration object:\n     *\n     * ```\n     * config = {\n     *   groups: [new Vex.Flow.Fraction(2, 8)],\n     *   stem_direction: -1,\n     *   beam_rests: true,\n     *   beam_middle_only: true,\n     *   show_stemlets: false\n     * };\n     * ```\n     * @param notes an array of notes to create the beams for\n     * @param config the configuration object\n     * @param config.stem_direction set to apply the same direction to all notes\n     * @param config.beam_rests set to `true` to include rests in the beams\n     * @param config.beam_middle_only set to `true` to only beam rests in the middle of the beat\n     * @param config.show_stemlets set to `true` to draw stemlets for rests\n     * @param config.maintain_stem_directions set to `true` to not apply new stem directions\n     * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n     *\n     */\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        // Convert beam groups to tick amounts\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(vf_notes) {\n            return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            // number of ticks in current group\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return; // Ignore untickables (like bar notes)\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                // Double the amount of ticks in a group, if it's an unbeamable tuplet\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                // If the note that was just added overflows the group tick total\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    // If the overflow note can be beamed, start the next group\n                    // with it. Unbeamable notes leave the group overflowed.\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    // We have overflown, so we're going to next tick group. As we might have\n                    // overflown by more than 1 group, we need to go forward as many times as\n                    // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n                    // in current groups as we go forward.\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            // Adds any remainder notes beam\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        // Splits up groups by Rest\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beam_rests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    // Determine if the group should be broken at this note\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        // Add current group\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        // Start a new group. Include the current note if the group\n                        // was broken up by stem direction, as that note needs to start\n                        // the next group of notes\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        // Add note to group\n                        tempGroup.push(note);\n                    }\n                });\n                // If there is a remaining group, add it as well\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintain_stem_directions) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stem_direction) {\n                        stemDirection = config.stem_direction;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        // Get all of the tuplets in all of the note groups\n        function getTuplets() {\n            const uniqueTuplets = [];\n            // Go through all of the note groups and inspect for tuplets\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        // Using closures to store the variables throughout the various functions\n        // IMO Keeps it this process lot cleaner - but not super consistent with\n        // the rest of the API's style - Silverwolf90 (Cyril)\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        // Get the notes to be beamed\n        const beamedNoteGroups = getBeamGroups();\n        // Get the tuplets in order to format them accurately\n        const allTuplets = getTuplets();\n        // Create a Vex.Flow.Beam from each group of notes to be beamed\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.show_stemlets) {\n                beam.render_options.show_stemlets = true;\n            }\n            if (config.secondary_breaks) {\n                beam.render_options.secondary_break_ticks = Tables.durationToTicks(config.secondary_breaks);\n            }\n            if (config.flat_beams === true) {\n                beam.render_options.flat_beams = true;\n                beam.render_options.flat_beam_offset = config.flat_beam_offset;\n            }\n            beams.push(beam);\n        });\n        // Reformat tuplets\n        allTuplets.forEach((tuplet) => {\n            // Set the tuplet location based on the stem direction\n            const direction = tuplet.notes[0].stem_direction === Stem.DOWN ? Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n            tuplet.setTupletLocation(direction);\n            // If any of the notes in the tuplet are not beamed, draw a bracket.\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    /** Get the notes in this beam. */\n    getNotes() {\n        return this.notes;\n    }\n    /** Get the max number of beams in the set of notes. */\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyph().beam_count);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    /** Set which note `indices` to break the secondary beam at. */\n    breakSecondaryAt(indices) {\n        this.break_on_indices = indices;\n        return this;\n    }\n    /** Return the y coordinate for linear function. */\n    getSlopeY(x, first_x_px, first_y_px, slope) {\n        return first_y_px + (x - first_x_px) * slope;\n    }\n    /** Calculate the best possible slope for the provided notes. */\n    calculateSlope() {\n        const { notes, stem_direction: stemDirection, render_options: { max_slope, min_slope, slope_iterations, slope_cost }, } = this;\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (max_slope - min_slope) / slope_iterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        // iterate through slope values to find best weighted fit\n        for (let slope = min_slope; slope <= max_slope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            // iterate through notes, calculating y shift and stem extension\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    // beam needs to be shifted up to accommodate note\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        // beam overshoots note, account for the difference\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            // most engraving books suggest aiming for a slope about half the angle of the\n            // difference between the first and last notes' stem length;\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            // This tries to align most beams to something closer to the idealSlope, but\n            // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n            const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n            // update state when a more ideal slope is found\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        this.y_shift = yShift;\n    }\n    /** Calculate a slope and y-shift for flat beams. */\n    calculateFlatSlope() {\n        const { notes, stem_direction, render_options: { beam_width, min_flat_beam_offset, flat_beam_offset }, } = this;\n        // If a flat beam offset has not yet been supplied or calculated,\n        // generate one based on the notes in this particular note group\n        let total = 0;\n        let extremeY = 0; // Store the highest or lowest note here\n        let extremeBeamCount = 0; // The beam count of the extreme note\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            // Total up all of the offsets so we can average them out later\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            // Store the highest (stems-up) or lowest (stems-down) note so the\n            //  offset can be adjusted in case the average isn't enough\n            if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        // Average the offsets to try and come up with a reasonable one that\n        //  works for all of the notes in the beam group.\n        let offset = total / notes.length;\n        // In case the average isn't long enough, add or subtract some more\n        //  based on the highest or lowest note (again, based on the stem\n        //  direction). This also takes into account the added height due to\n        //  the width of the beams.\n        const beamWidth = beam_width * 1.5;\n        const extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n        const newOffset = extremeY + extremeTest * -stem_direction;\n        if (stem_direction === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stem_direction === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flat_beam_offset) {\n            // Set the offset for the group based on the calculations above.\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        // for flat beams, the slope and y_shift are simply 0\n        this.slope = 0;\n        this.y_shift = 0;\n    }\n    /** Return the Beam y offset. */\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        // For flat beams, set the first and last Y to the offset, rather than\n        //  using the note's stem extents.\n        if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n            beamY = this.render_options.flat_beam_offset;\n        }\n        return beamY;\n    }\n    /**\n     * Create new stems for the notes in the beam, so that each stem\n     * extends into the beams.\n     */\n    applyStemExtensions() {\n        const { notes, slope, y_shift, stem_direction, beam_count, render_options: { show_stemlets, stemlet_extension, beam_width }, } = this;\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = stem_direction === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                stem.setExtension(preBeamExtension + beamExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && show_stemlets) {\n                    const beamWidth = beam_width;\n                    const totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n                }\n            }\n        }\n    }\n    /** Return upper level beam direction. */\n    lookupBeamDirection(duration, prev_tick, tick, next_tick) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const lookup_duration = `${Tables.durationToNumber(duration) / 2}`;\n        const prev_note_gets_beam = prev_tick < Tables.durationToTicks(lookup_duration);\n        const next_note_gets_beam = next_tick < Tables.durationToTicks(lookup_duration);\n        const note_gets_beam = tick < Tables.durationToTicks(lookup_duration);\n        if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_BOTH;\n        }\n        else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n            return BEAM_LEFT;\n        }\n        else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick);\n    }\n    /** Get the x coordinates for the beam lines of specific `duration`. */\n    getBeamLines(duration) {\n        const tick_of_duration = Tables.durationToTicks(duration);\n        let beam_started = false;\n        const beam_lines = [];\n        let current_beam = undefined;\n        const partial_beam_length = this.render_options.partial_beam_length;\n        let previous_should_break = false;\n        let tick_tally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            // See if we need to break secondary beams on this note.\n            const ticks = note.getTicks().value();\n            tick_tally += ticks;\n            let should_break = false;\n            // 8th note beams are always drawn.\n            if (parseInt(duration, 10) >= 8) {\n                // First, check to see if any indices were set up through breakSecondaryAt()\n                should_break = this.break_on_indices.indexOf(i) !== -1;\n                // If the secondary breaks were auto-configured in the render options,\n                //  handle that as well.\n                if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n                    tick_tally = 0;\n                    should_break = true;\n                }\n            }\n            const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n            const stem_x = note.getStemX() - Stem.WIDTH / 2;\n            // Check to see if the next note in the group will get a beam at this\n            //  level. This will help to inform the partial beam logic below.\n            const prev_note = this.notes[i - 1];\n            const next_note = this.notes[i + 1];\n            const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n            const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n            const beam_alone = prev_note && next_note && note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            if (note_gets_beam) {\n                // This note gets a beam at the current level\n                if (beam_started) {\n                    // We're currently in the middle of a beam. Just continue it on to\n                    //  the stem X of the current note.\n                    current_beam = beam_lines[beam_lines.length - 1];\n                    current_beam.end = stem_x;\n                    // If a secondary beam break is set up, end the beam right now.\n                    if (should_break) {\n                        beam_started = false;\n                        if (next_note && !next_note_gets_beam && current_beam.end === undefined) {\n                            // This note gets a beam,.but the next one does not. This means\n                            //  we need a partial pointing right.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                }\n                else {\n                    // No beam started yet. Start a new one.\n                    current_beam = { start: stem_x, end: undefined };\n                    beam_started = true;\n                    if (beam_alone) {\n                        // previous and next beam exists and does not get a beam but current gets it.\n                        const prev_tick = prev_note.getIntrinsicTicks();\n                        const next_tick = next_note.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                        else {\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                    }\n                    else if (!next_note_gets_beam) {\n                        // The next note doesn't get a beam. Draw a partial.\n                        if ((previous_should_break || i === 0) && next_note) {\n                            // This is the first note (but not the last one), or it is\n                            //  following a secondary break. Draw a partial to the right.\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                        else {\n                            // By default, draw a partial to the left.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                    else if (should_break) {\n                        // This note should have a secondary break after it. Even though\n                        //  we just started a beam, it needs to end immediately.\n                        current_beam.end = current_beam.start - partial_beam_length;\n                        beam_started = false;\n                    }\n                    beam_lines.push(current_beam);\n                }\n            }\n            else {\n                // The current note does not get a beam.\n                beam_started = false;\n            }\n            // Store the secondary break flag to inform the partial beam logic in\n            //  the next iteration of the loop.\n            previous_should_break = should_break;\n        }\n        // Add a partial beam pointing left if this is the last note in the group\n        const last_beam = beam_lines[beam_lines.length - 1];\n        if (last_beam && last_beam.end === undefined) {\n            last_beam.end = last_beam.start - partial_beam_length;\n        }\n        return beam_lines;\n    }\n    /** Render the stems for each note. */\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                stem.setContext(ctx).draw();\n            }\n        }, this);\n    }\n    // Render the beam lines\n    drawBeamLines(ctx) {\n        const valid_beam_durations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.render_options.beam_width * this.stem_direction;\n        // Draw the beams.\n        for (let i = 0; i < valid_beam_durations.length; ++i) {\n            const duration = valid_beam_durations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beam_line = beamLines[j];\n                const startBeamX = beam_line.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beam_line.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    /** Pre-format the beam. */\n    preFormat() {\n        return this;\n    }\n    /**\n     * Post-format the beam. This can only be called after\n     * the notes in the beam have both `x` and `y` values. ie: they've\n     * been formatted and have staves.\n     */\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        // Calculate a smart slope if we're not forcing the beams to be flat.\n        if (isTabNote(this.notes[0]) || this.render_options.flat_beams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    /** Render the beam to the canvas context */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (this.unbeamable)\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        this.drawStems(ctx);\n        this.applyStyle();\n        this.drawBeamLines(ctx);\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Element } from './element';\nimport { RuntimeError } from './util';\nexport class StaveTie extends Element {\n    /**\n     * @param notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.render_options = {\n            cp1: 8,\n            cp2: 12,\n            text_shift_x: 0,\n            first_x_shift: 0,\n            last_x_shift: 0,\n            y_shift: 7,\n            tie_spacing: 0,\n        };\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return 'StaveTie';\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    /**\n     * Set the notes to attach this tie to.\n     *\n     * @param {!Object} notes The notes to tie up.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices) {\n            notes.first_indices = [0];\n        }\n        if (!notes.last_indices) {\n            notes.last_indices = [0];\n        }\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indices.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.notes.first_note || !this.notes.last_note;\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.render_options.cp1;\n        let cp2 = this.render_options.cp2;\n        if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n            cp1 = 2;\n            cp2 = 8;\n        }\n        const first_x_shift = this.render_options.first_x_shift;\n        const last_x_shift = this.render_options.last_x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        // setNotes(...) verified that first_indices and last_indices are not undefined.\n        // As a result, we use the ! non-null assertion operator here.\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        // eslint-disable-next-line\n        const last_indices = this.notes.last_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n            const first_y_px = params.first_ys[first_indices[i]] + y_shift;\n            const last_y_px = params.last_ys[last_indices[i]] + y_shift;\n            if (isNaN(first_y_px) || isNaN(last_y_px)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n            }\n            const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n            const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n            ctx.beginPath();\n            ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n            ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n            ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n            ctx.closePath();\n            ctx.fill();\n        }\n    }\n    renderText(first_x_px, last_x_px) {\n        var _a, _b, _c;\n        if (!this.text)\n            return;\n        const ctx = this.checkContext();\n        let center_x = (first_x_px + last_x_px) / 2;\n        center_x -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.first_note) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.last_note) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n            ctx.restore();\n        }\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.notes.first_note;\n        const last_note = this.notes.last_note;\n        // Provide some default values so the compiler doesn't complain.\n        let first_x_px = 0;\n        let last_x_px = 0;\n        let first_ys = [0];\n        let last_ys = [0];\n        let stem_direction = 0;\n        if (first_note) {\n            first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n            stem_direction = first_note.getStemDirection();\n            first_ys = first_note.getYs();\n        }\n        else if (last_note) {\n            const stave = last_note.checkStave();\n            first_x_px = stave.getTieStartX();\n            first_ys = last_note.getYs();\n            this.notes.first_indices = this.notes.last_indices;\n        }\n        if (last_note) {\n            last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n            stem_direction = last_note.getStemDirection();\n            last_ys = last_note.getYs();\n        }\n        else if (first_note) {\n            const stave = first_note.checkStave();\n            last_x_px = stave.getTieEndX();\n            last_ys = first_note.getYs();\n            this.notes.last_indices = this.notes.first_indices;\n        }\n        if (this.direction) {\n            stem_direction = this.direction;\n        }\n        this.renderTie({\n            first_x_px,\n            last_x_px,\n            first_ys,\n            last_ys,\n            direction: stem_direction,\n        });\n        this.renderText(first_x_px, last_x_px);\n        return true;\n    }\n}\n/** Default text font. */\nStaveTie.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// / [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { StaveTie } from './stavetie';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return 'TabTie';\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    /**\n     * @param notes is a struct that has:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super(notes, text);\n        this.render_options.cp1 = 9;\n        this.render_options.cp2 = 11;\n        this.render_options.y_shift = 3;\n        this.direction = -1; // Tab tie's are always face up.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\nimport { Beam } from './beam';\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { isStaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { Tables } from './tables';\nimport { TabTie } from './tabtie';\nimport { isCategory } from './typeguard';\nimport { log } from './util';\nimport { Voice } from './voice';\nexport const isGraceNoteGroup = (obj) => isCategory(obj, GraceNoteGroup);\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('Vex.Flow.GraceNoteGroup', args);\n}\n/** GraceNoteGroup is used to format and render grace notes. */\nexport class GraceNoteGroup extends Modifier {\n    //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n    constructor(grace_notes, show_slur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.grace_notes = grace_notes;\n        this.width = 0;\n        this.show_slur = show_slur;\n        this.slur = undefined;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.render_options = {\n            slur_y_shift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.grace_notes);\n        return this;\n    }\n    static get CATEGORY() {\n        return 'GraceNoteGroup';\n    }\n    /** Arranges groups inside a `ModifierContext`. */\n    static format(gracenote_groups, state) {\n        const group_spacing_stave = 4;\n        const group_spacing_tab = 0;\n        if (!gracenote_groups || gracenote_groups.length === 0)\n            return false;\n        const group_list = [];\n        let prev_note = null;\n        let shiftL = 0;\n        for (let i = 0; i < gracenote_groups.length; ++i) {\n            const gracenote_group = gracenote_groups[i];\n            const note = gracenote_group.getNote();\n            const is_stavenote = isStaveNote(note);\n            const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n            if (is_stavenote && note !== prev_note) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prev_note = note;\n            }\n            group_list.push({ shift: shiftL, gracenote_group, spacing });\n        }\n        // If first note left shift in case it is displaced\n        let group_shift = group_list[0].shift;\n        let formatWidth;\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            gracenote_group.preFormat();\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            group_shift = Math.max(formatWidth, group_shift);\n        }\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n        }\n        state.left_shift += group_shift;\n        return true;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(grace_notes) {\n        grace_notes = grace_notes || this.grace_notes;\n        if (grace_notes.length > 1) {\n            const beam = new Beam(grace_notes);\n            beam.render_options.beam_width = 3;\n            beam.render_options.partial_beam_length = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    getGraceNotes() {\n        return this.grace_notes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n        // Draw grace notes.\n        this.grace_notes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n        // Draw beams.\n        this.beams.forEach((beam) => beam.setContext(ctx).draw());\n        if (this.show_slur) {\n            // Create and draw slur.\n            const is_stavenote = isStaveNote(note);\n            const TieClass = is_stavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                last_note: this.grace_notes[0],\n                first_note: note,\n                first_indices: [0],\n                last_indices: [0],\n            });\n            this.slur.render_options.cp2 = 12;\n            this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n            this.slur.setContext(ctx).draw();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { RuntimeError } from './util';\n/** Music implements some standard music theory routines. */\nexport class Music {\n    /** Number of an canonical notes (12). */\n    static get NUM_TONES() {\n        return this.canonical_notes.length;\n    }\n    /** Names of root notes ('c', 'd',...) */\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    /** Values of the root notes.*/\n    static get root_values() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    /** Indices of the root notes.*/\n    static get root_indices() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    /** Names of canonical notes ('c', 'c#', 'd',...). */\n    static get canonical_notes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n    static get diatonic_intervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    /** NoteAccidental associated to diatonic intervals. */\n    static get diatonic_accidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    /** Semitones shift associated to intervals .*/\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    /** Semitones shifts associated with scales. */\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    /** Scales associated with m (minor) and M (major). */\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    /** Accidentals abbreviations. */\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    /** Note values. */\n    static get noteValues() {\n        return {\n            c: { root_index: 0, int_val: 0 },\n            cn: { root_index: 0, int_val: 0 },\n            'c#': { root_index: 0, int_val: 1 },\n            'c##': { root_index: 0, int_val: 2 },\n            cb: { root_index: 0, int_val: 11 },\n            cbb: { root_index: 0, int_val: 10 },\n            d: { root_index: 1, int_val: 2 },\n            dn: { root_index: 1, int_val: 2 },\n            'd#': { root_index: 1, int_val: 3 },\n            'd##': { root_index: 1, int_val: 4 },\n            db: { root_index: 1, int_val: 1 },\n            dbb: { root_index: 1, int_val: 0 },\n            e: { root_index: 2, int_val: 4 },\n            en: { root_index: 2, int_val: 4 },\n            'e#': { root_index: 2, int_val: 5 },\n            'e##': { root_index: 2, int_val: 6 },\n            eb: { root_index: 2, int_val: 3 },\n            ebb: { root_index: 2, int_val: 2 },\n            f: { root_index: 3, int_val: 5 },\n            fn: { root_index: 3, int_val: 5 },\n            'f#': { root_index: 3, int_val: 6 },\n            'f##': { root_index: 3, int_val: 7 },\n            fb: { root_index: 3, int_val: 4 },\n            fbb: { root_index: 3, int_val: 3 },\n            g: { root_index: 4, int_val: 7 },\n            gn: { root_index: 4, int_val: 7 },\n            'g#': { root_index: 4, int_val: 8 },\n            'g##': { root_index: 4, int_val: 9 },\n            gb: { root_index: 4, int_val: 6 },\n            gbb: { root_index: 4, int_val: 5 },\n            a: { root_index: 5, int_val: 9 },\n            an: { root_index: 5, int_val: 9 },\n            'a#': { root_index: 5, int_val: 10 },\n            'a##': { root_index: 5, int_val: 11 },\n            ab: { root_index: 5, int_val: 8 },\n            abb: { root_index: 5, int_val: 7 },\n            b: { root_index: 6, int_val: 11 },\n            bn: { root_index: 6, int_val: 11 },\n            'b#': { root_index: 6, int_val: 0 },\n            'b##': { root_index: 6, int_val: 1 },\n            bb: { root_index: 6, int_val: 10 },\n            bbb: { root_index: 6, int_val: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonical_notes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonic_intervals.length;\n    }\n    /** Return root and accidental associated to a note. */\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    /** Return root, accidental and type associated to a key. */\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            // Unspecified type implies major\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    /** Note value associated to a note name. */\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.int_val;\n    }\n    /** Interval value associated to an interval name. */\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    /** Canonical note name associated to a value. */\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonical_notes[noteValue];\n    }\n    /** Interval name associated to a value. */\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonic_intervals[intervalValue];\n    }\n    /**\n     * Given a note, interval, and interval direction, produce the relative note.\n     */\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    /**\n     * Given a root and note value, produce the relative note name.\n     */\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            // Possibly wrap around. (Add +1 for modulo operator)\n            const reverse_interval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverse_interval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverse_interval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    /**\n     * Return scale tones, given intervals. Each successive interval is\n     * relative to the previous one, e.g., Major Scale:\n     *\n     *   TTSTTTS = [2,2,1,2,2,2,1]\n     *\n     * When used with key = 0, returns C scale (which is isomorphic to\n     * interval list).\n     */\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    /**\n     * Return the interval of a note, given a diatonic scale.\n     * e.g., given the scale C, and the note E, returns M3.\n     */\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    /**\n     * Create a scale map that represents the pitch state for a\n     * `keySignature`. For example, passing a `G` to `keySignature` would\n     * return a scale map with every note naturalized except for `F` which\n     * has an `F#` state.\n     */\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.root_indices[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { isGraceNote } from './gracenote';\nimport { isGraceNoteGroup } from './gracenotegroup';\nimport { Modifier } from './modifier';\nimport { Music } from './music';\nimport { isStaveNote } from './stavenote';\nimport { Tables } from './tables';\nimport { isCategory } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('Vex.Flow.Accidental', args);\n}\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.ts` for usage examples.\n */\nexport class Accidental extends Modifier {\n    /**\n     * Create accidental.\n     * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n     * For example: `#`, `##`, `b`, `n`, etc.\n     */\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            // Font size for glyphs\n            font_scale: 38,\n            // Padding between accidental and parentheses on each side\n            parenLeftPadding: 2,\n            parenRightPadding: 2,\n        };\n        this.accidental = Tables.accidentalCodes(this.type);\n        defined(this.accidental, 'ArgumentError', `Unknown accidental type: ${type}`);\n        // Cautionary accidentals have parentheses around them\n        this.cautionary = false;\n        this.reset();\n    }\n    /** Accidentals category string. */\n    static get CATEGORY() {\n        return 'Accidental';\n    }\n    /** Arrange accidentals inside a ModifierContext. */\n    static format(accidentals, state) {\n        // If there are no accidentals, no need to format their positions.\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const musicFont = Tables.currentMusicFont();\n        const noteheadAccidentalPadding = musicFont.lookupMetric('accidental.noteheadAccidentalPadding');\n        const leftShift = state.left_shift + noteheadAccidentalPadding;\n        const accidentalSpacing = musicFont.lookupMetric('accidental.accidentalSpacing');\n        const additionalPadding = musicFont.lookupMetric('accidental.leftPadding'); // padding to the left of all accidentals\n        const accList = [];\n        let prevNote = undefined;\n        let shiftL = 0;\n        // First determine the accidentals' Y positions from the note.keys\n        for (let i = 0; i < accidentals.length; ++i) {\n            const acc = accidentals[i];\n            const note = acc.getNote();\n            const stave = note.getStave();\n            const index = acc.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n            }\n            else {\n                accList.push({ line: props.line, shift: shiftL, acc });\n            }\n        }\n        // Sort accidentals by line number.\n        accList.sort((a, b) => b.line - a.line);\n        // FIXME: Confusing name. Each object in this array has a property called `line`.\n        // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n        const lineList = [];\n        // amount by which all accidentals must be shifted right or left for\n        // stem flipping, notehead shifting concerns.\n        let accShift = 0;\n        let previousLine = undefined;\n        // Create an array of unique line numbers (lineList) from accList\n        for (let i = 0; i < accList.length; i++) {\n            const acc = accList[i];\n            // if this is the first line, or a new line, add a lineList\n            if (previousLine === undefined || previousLine !== acc.line) {\n                lineList.push({\n                    line: acc.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                });\n            }\n            // if this accidental is not a flat, the accidental needs 3.0 lines lower\n            // clearance instead of 2.5 lines for b or bb.\n            // FIXME: Naming could use work. acc.acc is very awkward\n            if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n                lineList[lineList.length - 1].flatLine = false;\n            }\n            // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n            if (acc.acc.type !== '##') {\n                lineList[lineList.length - 1].dblSharpLine = false;\n            }\n            // Track how many accidentals are on this line:\n            lineList[lineList.length - 1].numAcc++;\n            // Track the total x_offset needed for this line which will be needed\n            // for formatting lines w/ multiple accidentals:\n            // width = accidental width + universal spacing between accidentals\n            lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n            // if this accShift is larger, use it to keep first column accidentals in the same line\n            accShift = acc.shift > accShift ? acc.shift : accShift;\n            previousLine = acc.line;\n        }\n        // ### Place Accidentals in Columns\n        //\n        // Default to a classic triangular layout (middle accidental farthest left),\n        // but follow exceptions as outlined in G. Read's _Music Notation_ and\n        // Elaine Gould's _Behind Bars_.\n        //\n        // Additionally, this implements different vertical collision rules for\n        // flats (only need 2.5 lines clearance below) and double sharps (only\n        // need 2.5 lines of clearance above or below).\n        //\n        // Classic layouts and exception patterns are found in the 'tables.js'\n        // in 'Tables.accidentalColumnsTable'\n        //\n        // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n        // using as few columns as possible for the verticle structure.\n        //\n        // TODO (?): Allow column to be specified for an accidental at run-time?\n        let totalColumns = 0;\n        // establish the boundaries for a group of notes with clashing accidentals:\n        for (let i = 0; i < lineList.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n                // if this note conflicts with the next:\n                if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n                    // include the next note in the group:\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            // Gets an a line from the `lineList`, relative to the current group\n            const getGroupLine = (index) => lineList[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n            // Set columns for the lines in this group:\n            const groupLength = groupEnd - groupStart + 1;\n            // Set the accidental column for each line of the group\n            let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'second_on_bottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spaced_out_tetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spaced_out_pentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'very_spaced_out_pentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spaced_out_hexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'very_spaced_out_hexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            // If the group contains seven members or more, use ascending parallel lines\n            // of accidentals, using as few columns as possible while avoiding collisions.\n            if (groupLength >= 7) {\n                // First, determine how many columns to use:\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < lineList.length; line++) {\n                        if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                // Then, assign a column to each line of accidentals\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                // If the group contains fewer than seven members, use the layouts from\n                // the Tables.accidentalColumnsTable (See: tables.ts).\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            // Increment i to the last note that was set, so that if a lower set of notes\n            // does not conflict at all with this group, it can have its own classic shape.\n            i = groupEnd;\n        }\n        // ### Convert Columns to x_offsets\n        //\n        // This keeps columns aligned, even if they have different accidentals within them\n        // which sometimes results in a larger x_offset than is an accidental might need\n        // to preserve the symmetry of the accidental shape.\n        //\n        // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n        // music with complex chord clusters.\n        //\n        // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n        // parallel columns.\n        // track each column's max width, which will be used as initial shift of later columns:\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = accShift + leftShift;\n        columnXOffsets[0] = accShift + leftShift;\n        // Fill columnWidths with widest needed x-space;\n        // this is what keeps the columns parallel.\n        lineList.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            // this column's offset = this column's width + previous column's offset\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        // Set the xShift for each accidental according to column offsets:\n        let accCount = 0;\n        lineList.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            // handle all of the accidentals on a given line:\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth;\n                accList[accCount].acc.setXShift(xShift);\n                // keep track of the width of accidentals we've added so far, so that when\n                // we loop, we add space for them.\n                lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        // update the overall layout with the full width of the accidental shapes:\n        state.left_shift += totalShift + additionalPadding;\n    }\n    /** Helper function to determine whether two lines of accidentals collide vertically */\n    static checkCollision(line1, line2) {\n        let clearance = line2.line - line1.line;\n        let clearanceRequired = 3;\n        // But less clearance is required for certain accidentals: b, bb and ##.\n        if (clearance > 0) {\n            // then line 2 is on top\n            clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n            if (line1.dblSharpLine)\n                clearance -= 0.5;\n        }\n        else {\n            // line 1 is on top\n            clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n            if (line2.dblSharpLine)\n                clearance -= 0.5;\n        }\n        const collision = Math.abs(clearance) < clearanceRequired;\n        L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n        return collision;\n    }\n    /**\n     * Use this method to automatically apply accidentals to a set of `voices`.\n     * The accidentals will be remembered between all the voices provided.\n     * Optionally, you can also provide an initial `keySignature`.\n     */\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        // Sort the tickables in each voice by their tick position in the voice.\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        // Default key signature is C major.\n        if (!keySignature)\n            keySignature = 'C';\n        // Get the scale map, which represents the current state of each pitch.\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            // Array to store all pitches that modified accidental states\n            // at this tick position\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                // Only StaveNote implements .addModifier(), which is used below.\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                // Go through each key and determine if an accidental should be applied.\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    // Force a natural for every key without an accidental\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    // Determine if the current pitch has the same accidental\n                    // as the scale state\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    // Determine if an identical pitch in the chord already\n                    // modified the accidental state\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    // Remove accidentals\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isCategory(modifier, Accidental) &&\n                            modifier.type == accidentalString &&\n                            modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    // Add the accidental to the StaveNote\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        // Modify the scale map so that the root pitch has an\n                        // updated state\n                        scaleMap[key.root + octave] = pitch;\n                        // Create the accidental\n                        const accidental = new Accidental(accidentalString);\n                        // Attach the accidental to the StaveNote\n                        staveNote.addModifier(keyIndex, accidental);\n                        // Add the pitch to list of pitches that modified accidentals\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                // process grace notes\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    reset() {\n        const fontScale = this.render_options.font_scale;\n        this.glyph = new Glyph(this.accidental.code, fontScale);\n        this.glyph.setOriginX(1.0);\n        if (this.cautionary) {\n            this.parenLeft = new Glyph(Tables.accidentalCodes('{').code, fontScale);\n            this.parenRight = new Glyph(Tables.accidentalCodes('}').code, fontScale);\n            this.parenLeft.setOriginX(1.0);\n            this.parenRight.setOriginX(1.0);\n        }\n    }\n    /** Get width in pixels. */\n    getWidth() {\n        if (this.cautionary) {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            const parenWidth = parenLeft.getMetrics().width +\n                parenRight.getMetrics().width +\n                this.render_options.parenLeftPadding +\n                this.render_options.parenRightPadding;\n            return this.glyph.getMetrics().width + parenWidth;\n        }\n        else {\n            return this.glyph.getMetrics().width;\n        }\n    }\n    /** Attach this accidental to `note`, which must be a `StaveNote`. */\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        // Accidentals attached to grace notes are rendered smaller.\n        if (isGraceNote(note)) {\n            this.render_options.font_scale = 25;\n            this.reset();\n        }\n        return this;\n    }\n    /** If called, draws parenthesis around accidental. */\n    setAsCautionary() {\n        this.cautionary = true;\n        this.render_options.font_scale = 28;\n        this.reset();\n        return this;\n    }\n    /** Render accidental onto canvas. */\n    draw() {\n        const { type, position, index, cautionary, x_shift, y_shift, glyph, render_options: { parenLeftPadding, parenRightPadding }, } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // Figure out the start `x` and `y` coordinates for note and index.\n        const start = note.getModifierStartXY(position, index);\n        let accX = start.x + x_shift;\n        const accY = start.y + y_shift;\n        L('Rendering: ', type, accX, accY);\n        if (!cautionary) {\n            glyph.render(ctx, accX, accY);\n        }\n        else {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            // Render the accidental in parentheses.\n            parenRight.render(ctx, accX, accY);\n            accX -= parenRight.getMetrics().width;\n            accX -= parenRightPadding;\n            accX -= this.accidental.parenRightPaddingAdjustment;\n            glyph.render(ctx, accX, accY);\n            accX -= glyph.getMetrics().width;\n            accX -= parenLeftPadding;\n            parenLeft.render(ctx, accX, accY);\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\nAccidental.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('Vex.Flow.BarNote', args);\n}\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.ts` for usage examples.\n */\nexport class BarNote extends Note {\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        // Tell the formatter that bar notes have no duration.\n        this.ignore_ticks = true;\n        this.setType(type);\n    }\n    static get CATEGORY() {\n        return 'BarNote';\n    }\n    /** Get the type of bar note.*/\n    getType() {\n        return this.type;\n    }\n    /** Set the type of bar note. */\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        // Set width to width of relevant `Barline`.\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    /** Overridden to ignore. */\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render note to stave. */\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        if (this.style)\n            this.applyStyle(ctx);\n        const barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.draw(this.checkStave());\n        if (this.style)\n            this.restoreStyle(ctx);\n        this.setRendered();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\nBarNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n// MIT License\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n    constructor(type, size, annotation) {\n        super({ duration: 'b' });\n        this.type = type;\n        this.clef_obj = new Clef(type, size, annotation);\n        this.clef = this.clef_obj.clef;\n        this.glyph = new Glyph(this.clef.code, this.clef.point);\n        this.setWidth(this.glyph.getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return 'ClefNote';\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef_obj = new Clef(type, size, annotation);\n        this.clef = this.clef_obj.clef;\n        this.glyph = new Glyph(this.clef.code, this.clef.point);\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    /** Get associated clef. */\n    getClef() {\n        return this.clef;\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.glyph.setContext(this.getContext());\n        return this;\n    }\n    /** Get bounding box. */\n    getBoundingBox() {\n        return super.getBoundingBox();\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render clef note. */\n    draw() {\n        var _a;\n        const stave = this.checkStave();\n        if (!this.glyph.getContext()) {\n            this.glyph.setContext(this.getContext());\n        }\n        this.setRendered();\n        const abs_x = this.getAbsoluteX();\n        this.glyph.setStave(stave);\n        this.glyph.setYShift(stave.getYForLine((_a = this.clef.line) !== null && _a !== void 0 ? _a : 0) - stave.getYForGlyphs());\n        this.glyph.renderToStave(abs_x);\n        // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n        if (this.clef_obj.annotation !== undefined) {\n            const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n            if (!attachment.getContext()) {\n                attachment.setContext(this.getContext());\n            }\n            attachment.setStave(stave);\n            attachment.setYShift(stave.getYForLine(this.clef_obj.annotation.line) - stave.getYForGlyphs());\n            attachment.setXShift(this.clef_obj.annotation.x_shift);\n            attachment.renderToStave(abs_x);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('Vex.Flow.Crescendo', args);\n}\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n    const begin_x = params.begin_x;\n    const end_x = params.end_x;\n    const y = params.y;\n    const half_height = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(begin_x, y - half_height);\n        ctx.lineTo(end_x, y);\n        ctx.lineTo(begin_x, y + half_height);\n    }\n    else {\n        ctx.moveTo(end_x, y - half_height);\n        ctx.lineTo(begin_x, y);\n        ctx.lineTo(end_x, y + half_height);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nexport class Crescendo extends Note {\n    // Initialize the crescendo's properties\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.options = {\n            // Extensions to the length of the crescendo on either side\n            extend_left: 0,\n            extend_right: 0,\n            // Vertical shift\n            y_shift: 0,\n        };\n        // Whether the object is a decrescendo\n        this.decrescendo = false;\n        // The staff line to be placed on\n        this.line = noteStruct.line || 0;\n        // The height at the open end of the cresc/decresc\n        this.height = 15;\n    }\n    /** Crescendo category string. */\n    static get CATEGORY() {\n        return 'Crescendo';\n    }\n    // Set the line to center the element on\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Set the full height at the open end\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    // Set whether the sign should be a descresendo by passing a bool\n    // to `decresc`\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    // Preformat the note\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    // Render the Crescendo object onto the canvas\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tick_context = this.getTickContext();\n        const next_context = TickContext.getNextContext(tick_context);\n        const begin_x = this.getAbsoluteX();\n        const end_x = next_context ? next_context.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n        renderHairpin(ctx, {\n            begin_x: begin_x - this.options.extend_left,\n            end_x: end_x + this.options.extend_right,\n            y: y + this.options.y_shift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\nimport { Element } from './element';\nimport { RuntimeError } from './util';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    // from: Start note\n    // to: End note\n    // options:\n    //    cps: List of control points\n    //    x_shift: pixels to shift\n    //    y_shift: pixels to shift\n    constructor(from, to, options) {\n        super();\n        this.render_options = Object.assign({ thickness: 2, x_shift: 0, y_shift: 10, position: CurvePosition.NEAR_HEAD, position_end: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ] }, options);\n        this.from = from;\n        this.to = to;\n    }\n    static get CATEGORY() {\n        return 'Curve';\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        const ctx = this.checkContext();\n        const x_shift = this.render_options.x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        const first_x = params.first_x + x_shift;\n        const first_y = params.first_y + y_shift;\n        const last_x = params.last_x - x_shift;\n        const last_y = params.last_y + y_shift;\n        const thickness = this.render_options.thickness;\n        const cps = this.render_options.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const cp_spacing = (last_x - first_x) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(first_x, first_y);\n        ctx.bezierCurveTo(first_x + cp_spacing + cp0x, first_y + cp0y * params.direction, last_x - cp_spacing + cp1x, last_y + cp1y * params.direction, last_x, last_y);\n        ctx.bezierCurveTo(last_x - cp_spacing + cp1x, last_y + (cp1y + thickness) * params.direction, first_x + cp_spacing + cp0x, first_y + (cp0y + thickness) * params.direction, first_x, first_y);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.from;\n        const last_note = this.to;\n        let first_x;\n        let last_x;\n        let first_y;\n        let last_y;\n        let stem_direction = 0;\n        let metric = 'baseY';\n        let end_metric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.render_options.position);\n        const position_end = getPosition(this.render_options.position_end);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            end_metric = 'topY';\n        }\n        if (position_end === CurvePosition.NEAR_HEAD) {\n            end_metric = 'baseY';\n        }\n        else if (position_end === CurvePosition.NEAR_TOP) {\n            end_metric = 'topY';\n        }\n        if (first_note) {\n            first_x = first_note.getTieRightX();\n            stem_direction = first_note.getStemDirection();\n            first_y = first_note.getStemExtents()[metric];\n        }\n        else {\n            const stave = last_note.checkStave();\n            first_x = stave.getTieStartX();\n            first_y = last_note.getStemExtents()[metric];\n        }\n        if (last_note) {\n            last_x = last_note.getTieLeftX();\n            stem_direction = last_note.getStemDirection();\n            last_y = last_note.getStemExtents()[end_metric];\n        }\n        else {\n            const stave = first_note.checkStave();\n            last_x = stave.getTieEndX();\n            last_y = first_note.getStemExtents()[end_metric];\n        }\n        this.renderCurve({\n            first_x,\n            last_x,\n            first_y,\n            last_y,\n            direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('Vex.Flow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString; // string\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches); // nested array\n}\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n    // For an example of a simple grammar, take a look at tests/parser_tests.ts or\n    // the EasyScore grammar in easyscore.ts.\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Parse `line` using current grammar. Returns `{success: true}` if the\n    // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n    // where `errorPos` is the location of the error in the string.\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Look for `token` in this.line[this.pos], and return success\n    // if one is found. `token` is specified as a regular expression.\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n    // set, then return success even if the token is not found, but reset\n    // the position before exiting.\n    // TODO: expectOne(...) is never called with the `maybe` parameter.\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        // Execute all sub rules in sequence.\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                // If `rule.or` is set, then return success if any one\n                // of the subrules match, else all subrules must match.\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n    // then a failed match is also a success (but the position is reset).\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    // Execute the rule produced by the provided `rules` function. This\n    // offloads to one of the above matchers and consolidates the results. It is also\n    // responsible for executing any code triggered by the rule (in `rule.run`.)\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        // Get rule from Grammar class.\n        // expect(...) handles both lexing & parsing:\n        // - lexer rules produce tokens.\n        // - parser rules produce expressions which may trigger code via the\n        //   { run: () => ... } trigger functions in easyscore.ts.\n        //   These functions build the VexFlow objects that are displayed on screen.\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            // A lexer rule has a `token` property.\n            // Base case: parse the regex and throw an error if the\n            // line doesn't match.\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                // Token match! Update position and throw away parsed portion\n                // of string.\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            // A parser rule has an `expect` property.\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        // If there's a trigger attached to this rule, then run it.\n        // Make the matches accessible through `state.matches` in the\n        // `run: (state) => ...` trigger.\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Articulation } from './articulation';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Music } from './music';\nimport { Parser } from './parser';\nimport { Stem } from './stem';\nimport { defined, log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('Vex.Flow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                // eslint-disable-next-line\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    // notes is an array with 3 entries\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n); // n => [string, string | null, string]\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n        // e.g., auto | up | down\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        // e.g., treble | bass\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        // Create a string[] that will be assigned to the .keys property of the StaveNote.\n        // Each string in the array represents a note pitch and is of the form: {NoteName}{Accidental}/{Octave}\n        // Only standard accidentals are included in the .keys property. Microtonal accidentals are not included.\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const auto_stem = stem === 'auto'; // StaveNoteStruct expects the underscore & lowercase.\n        // Build a GhostNote or StaveNote using the information we gathered.\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) == 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, auto_stem });\n        if (!auto_stem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        // Attach accidentals.\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(index, accidental);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        // Attach dots.\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\n// Used by setClass() below.\nconst commaSeparatedRegex = /\\s*,\\s*/;\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\n/**\n * EasyScore implements a parser for a simple language to generate VexFlow objects.\n */\nexport class EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Set the score defaults.\n     * clef must be set appropriately to avoid errors when adding Staves.\n     * @param defaults.clef default clef ( treble | bass ...) see {@link Clef.types}\n     * @param defaults.time default time signature ( 4/4 | 9/8 ...)\n     * @param defaults.stem default stem arrangement (auto | up | down)\n     * @returns this\n     */\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    /**\n     * @param options.factory is required.\n     * @returns this\n     */\n    setOptions(options) {\n        var _a, _b;\n        // eslint-disable-next-line\n        const factory = options.factory; // ! operator, because options.factory was set in Factory.EasyScore().\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\nimport { Annotation } from './annotation';\nimport { StemmableNote } from './stemmablenote';\nimport { RuntimeError } from './util';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return 'GhostNote';\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            // Preserve backwards-compatibility\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        // Note properties\n        this.setWidth(0);\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        // Draw Annotations\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (modifier instanceof Annotation) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Note } from './note';\nexport class GlyphNote extends Note {\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        // Note properties\n        this.ignore_ticks = this.options.ignoreTicks;\n        if (glyph) {\n            this.setGlyph(glyph);\n        }\n    }\n    static get CATEGORY() {\n        return 'GlyphNote';\n    }\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    getBoundingBox() {\n        return this.glyph.getBoundingBox();\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        ctx.openGroup('modifiers');\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n        ctx.closeGroup();\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        // Context is set when setStave is called on Note\n        const glyph = this.glyph;\n        if (!glyph.getContext()) {\n            glyph.setContext(ctx);\n        }\n        glyph.setStave(stave);\n        glyph.setYShift(stave.getYForLine(this.options.line) - stave.getYForGlyphs());\n        const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        glyph.renderToStave(x);\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\nimport { KeySignature } from './keysignature';\nimport { Note } from './note';\nexport class KeySigNote extends Note {\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return 'KeySigNote';\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.draw();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests.\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { isBarline } from './stavebarline';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { defined } from './util';\nlet semibreve_rest;\nfunction get_semibreve_rest() {\n    if (!semibreve_rest) {\n        const noteHead = new NoteHead({ duration: 'w', note_type: 'r' });\n        semibreve_rest = {\n            glyph_font_scale: noteHead.render_options.glyph_font_scale,\n            glyph_code: noteHead.glyph_code,\n            width: noteHead.getWidth(),\n        };\n    }\n    return semibreve_rest;\n}\nexport class MultiMeasureRest extends Element {\n    /**\n     *\n     * @param number_of_measures Number of measures.\n     * @param options The options object.\n     */\n    constructor(number_of_measures, options) {\n        super();\n        this.xs = { left: NaN, right: NaN };\n        this.hasPaddingLeft = false;\n        this.hasPaddingRight = false;\n        this.hasLineThickness = false;\n        this.hasSymbolSpacing = false;\n        this.number_of_measures = number_of_measures;\n        // Keep track of whether these four options were provided.\n        this.hasPaddingLeft = typeof options.padding_left === 'number';\n        this.hasPaddingRight = typeof options.padding_right === 'number';\n        this.hasLineThickness = typeof options.line_thickness === 'number';\n        this.hasSymbolSpacing = typeof options.symbol_spacing === 'number';\n        const musicFont = Tables.currentMusicFont();\n        this.render_options = Object.assign({ use_symbols: false, show_number: true, number_line: -0.5, number_glyph_point: musicFont.lookupMetric('digits.point'), line: 2, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, serif_thickness: 2, semibreve_rest_glyph_scale: Tables.NOTATION_FONT_SCALE, padding_left: 0, padding_right: 0, line_thickness: 5, symbol_spacing: 0 }, options);\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.render_options.number_line += fontLineShift;\n    }\n    static get CATEGORY() {\n        return 'MultiMeasureRest';\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right, spacingBetweenLines) {\n        const options = this.render_options;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let lineThicknessHalf;\n        if (this.hasLineThickness) {\n            lineThicknessHalf = options.line_thickness * 0.5;\n        }\n        else {\n            lineThicknessHalf = spacingBetweenLines * 0.25;\n        }\n        const serifThickness = options.serif_thickness;\n        const top = y - spacingBetweenLines;\n        const bot = y + spacingBetweenLines;\n        const leftIndented = left + serifThickness;\n        const rightIndented = right - serifThickness;\n        const lineTop = y - lineThicknessHalf;\n        const lineBottom = y + lineThicknessHalf;\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(left, top);\n        ctx.lineTo(leftIndented, top);\n        ctx.lineTo(leftIndented, lineTop);\n        ctx.lineTo(rightIndented, lineTop);\n        ctx.lineTo(rightIndented, top);\n        ctx.lineTo(right, top);\n        ctx.lineTo(right, bot);\n        ctx.lineTo(rightIndented, bot);\n        ctx.lineTo(rightIndented, lineBottom);\n        ctx.lineTo(leftIndented, lineBottom);\n        ctx.lineTo(leftIndented, bot);\n        ctx.lineTo(left, bot);\n        ctx.closePath();\n        ctx.fill();\n    }\n    drawSymbols(stave, ctx, left, right, spacingBetweenLines) {\n        const n4 = Math.floor(this.number_of_measures / 4);\n        const n = this.number_of_measures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.render_options;\n        // FIXME: TODO: invalidate semibreve_rest at the appropriate time\n        // (e.g., if the system font settings are changed).\n        semibreve_rest = undefined;\n        const rest = get_semibreve_rest();\n        const rest_scale = options.semibreve_rest_glyph_scale;\n        const rest_width = rest.width * (rest_scale / rest.glyph_font_scale);\n        const glyphs = {\n            2: {\n                width: rest_width * 0.5,\n                height: spacingBetweenLines,\n            },\n            1: {\n                width: rest_width,\n            },\n        };\n        /* 10: normal spacingBetweenLines */\n        const spacing = this.hasSymbolSpacing ? options.symbol_spacing : 10;\n        const width = n4 * glyphs[2].width + n2 * glyphs[2].width + n1 * glyphs[1].width + (n4 + n2 + n1 - 1) * spacing;\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        const yBottom = stave.getYForLine(line + 1);\n        ctx.save();\n        ctx.setStrokeStyle('none');\n        ctx.setLineWidth(0);\n        for (let i = 0; i < n4; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n2; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n1; ++i) {\n            Glyph.renderGlyph(ctx, x, yTop, rest_scale, rest.glyph_code);\n            x += glyphs[1].width + spacing;\n        }\n        ctx.restore();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        // FIXME: getNoteStartX() returns x + 5(barline width)\n        //        getNoteEndX() returns x + width(no barline width)\n        // See Stave constructor. How do we fix this?\n        // Here, we subtract the barline width.\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.render_options;\n        if (this.hasPaddingLeft) {\n            left = stave.getX() + options.padding_left;\n        }\n        if (this.hasPaddingRight) {\n            right = stave.getX() + stave.getWidth() - options.padding_right;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        const spacingBetweenLines = options.spacing_between_lines_px;\n        if (options.use_symbols) {\n            this.drawSymbols(stave, ctx, left, right, spacingBetweenLines);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right, spacingBetweenLines);\n        }\n        if (options.show_number) {\n            const timeSpec = '/' + this.number_of_measures;\n            const timeSig = new TimeSignature(timeSpec, 0, false);\n            timeSig.point = options.number_glyph_point;\n            timeSig.setTimeSig(timeSpec);\n            timeSig.setStave(stave);\n            timeSig.setX(left + (right - left) * 0.5 - timeSig.getInfo().glyph.getMetrics().width * 0.5);\n            timeSig.bottomLine = options.number_line;\n            timeSig.setContext(ctx).draw();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('Vex.Flow.PedalMarking', args);\n}\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name, context, x, y, point) {\n    const glyph_data = PedalMarking.GLYPHS[name];\n    const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n    glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nexport class PedalMarking extends Element {\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        // Custom text for the release/depress markings\n        this.custom_depress_text = '';\n        this.custom_release_text = '';\n        this.resetFont();\n        this.render_options = {\n            bracket_height: 10,\n            text_margin_right: 6,\n            bracket_line_width: 1,\n            color: 'black',\n        };\n    }\n    static get CATEGORY() {\n        return 'PedalMarking';\n    }\n    /**\n     * Create a sustain pedal marking. Returns the defaults PedalMarking.\n     * Which uses the traditional \"Ped\" and \"*\"\" markings.\n     */\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    /** Create a sostenuto pedal marking */\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    /** Create an una corda pedal marking */\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    /** Set pedal type. */\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    /**\n     * Set custom text for the `depress`/`release` pedal markings. No text is\n     * set if the parameter is falsy.\n     */\n    setCustomText(depress, release) {\n        this.custom_depress_text = depress || '';\n        this.custom_release_text = release || '';\n        return this;\n    }\n    /** Set the staff line to render the markings on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Draw the bracket based pedal markings. */\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        let prev_x;\n        let prev_y;\n        // Iterate through each note\n        this.notes.forEach((note, index, notes) => {\n            // Each note triggers the opposite pedal action\n            is_pedal_depressed = !is_pedal_depressed;\n            // Get the initial coordinates for the note\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            // Throw if current note is positioned before the previous note\n            if (x < prev_x) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            // Determine if the previous or next note are the same\n            // as the current note. We need to keep track of this for\n            // when adjustments are made for the release+depress action\n            const next_is_same = notes[index + 1] === note;\n            const prev_is_same = notes[index - 1] === note;\n            let x_shift = 0;\n            const point = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n            if (is_pedal_depressed) {\n                // Adjustment for release+depress\n                x_shift = prev_is_same ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n                    // For MIXED style, start with text instead of bracket\n                    if (this.custom_depress_text) {\n                        // If we have custom text, use instead of the default \"Ped\" glyph\n                        const text_width = ctx.measureText(this.custom_depress_text).width;\n                        ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                        x_shift = text_width / 2 + this.render_options.text_margin_right;\n                    }\n                    else {\n                        // Render the Ped glyph in position\n                        drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                        x_shift = 20 + this.render_options.text_margin_right;\n                    }\n                }\n                else {\n                    // Draw start bracket\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.render_options.bracket_height);\n                    ctx.lineTo(x + x_shift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                // Adjustment for release+depress\n                x_shift = next_is_same ? -5 : 0;\n                // Draw end bracket\n                ctx.beginPath();\n                ctx.moveTo(prev_x, prev_y);\n                ctx.lineTo(x + x_shift, y);\n                ctx.lineTo(x, y - this.render_options.bracket_height);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            // Store previous coordinates\n            prev_x = x + x_shift;\n            prev_y = y;\n        });\n    }\n    /**\n     * Draw the text based pedal markings. This defaults to the traditional\n     * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n     */\n    drawText() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        // Iterate through each note, placing glyphs or custom text accordingly\n        this.notes.forEach((note) => {\n            is_pedal_depressed = !is_pedal_depressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            const point = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n            let text_width = 0;\n            if (is_pedal_depressed) {\n                if (this.custom_depress_text) {\n                    text_width = ctx.measureText(this.custom_depress_text).width;\n                    ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                }\n            }\n            else {\n                if (this.custom_release_text) {\n                    text_width = ctx.measureText(this.custom_release_text).width;\n                    ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_release', ctx, x, y, point);\n                }\n            }\n        });\n    }\n    /** Render the pedal marking in position on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setStrokeStyle(this.render_options.color);\n        ctx.setFillStyle(this.render_options.color);\n        ctx.setFont(this.textFont);\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.render_options.bracket_line_width);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\nPedalMarking.DEBUG = false;\nPedalMarking.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n/** Glyph data */\nPedalMarking.GLYPHS = {\n    pedal_depress: {\n        code: 'keyboardPedalPed',\n        x_shift: -10,\n        y_shift: 0,\n    },\n    pedal_release: {\n        code: 'keyboardPedalUp',\n        x_shift: -2,\n        y_shift: 3,\n    },\n};\n/** Pedal type as number. */\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\n/** Pedal type as string. */\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { Tables } from './tables';\n// Map `type` to SMuFL glyph code.\nconst CODES = {\n    '1': 'repeat1Bar',\n    '2': 'repeat2Bars',\n    '4': 'repeat4Bars',\n    slash: 'repeatBarSlash',\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return 'RepeatNote';\n    }\n    constructor(type, noteStruct, options) {\n        super(undefined, Object.assign({ duration: 'q', align_center: type !== 'slash' }, noteStruct), options);\n        const glyphCode = CODES[type] || 'repeat1Bar';\n        const glyph = new Glyph(glyphCode, Tables.currentMusicFont().lookupMetric('repeatNote.point', 40), {\n            category: 'repeatNote',\n        });\n        this.setGlyph(glyph);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nexport class StaveLine extends Element {\n    // Initialize the StaveLine with the given `notes`.\n    //\n    // `notes` is a struct that has:\n    //\n    //  ```\n    //  {\n    //    first_note: Note,\n    //    last_note: Note,\n    //    first_indices: [n1, n2, n3],\n    //    last_indices: [n1, n2, n3]\n    //  }\n    //  ```\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.resetFont();\n        this.render_options = {\n            // Space to add to the left or the right\n            padding_left: 4,\n            padding_right: 3,\n            // The width of the line in pixels\n            line_width: 1,\n            // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n            line_dash: undefined,\n            // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n            rounded_end: true,\n            // The color of the line and arrowheads\n            color: undefined,\n            // Flags to draw arrows on each end of the line\n            draw_start_arrow: false,\n            draw_end_arrow: false,\n            // The length of the arrowhead sides\n            arrowhead_length: 10,\n            // The angle of the arrowhead\n            arrowhead_angle: Math.PI / 8,\n            // The position of the text\n            text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n            text_justification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    static get CATEGORY() {\n        return 'StaveLine';\n    }\n    // The the annotation for the `StaveLine`\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    // Set the notes for the `StaveLine`\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices)\n            notes.first_indices = [0];\n        if (!notes.last_indices)\n            notes.last_indices = [0];\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indices.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.first_indices = notes.first_indices;\n        this.last_note = notes.last_note;\n        this.last_indices = notes.last_indices;\n        return this;\n    }\n    // Apply the style of the `StaveLine` to the context\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const render_options = this.render_options;\n        if (render_options.line_dash) {\n            ctx.setLineDash(render_options.line_dash);\n        }\n        if (render_options.line_width) {\n            ctx.setLineWidth(render_options.line_width);\n        }\n        if (render_options.rounded_end) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    // Apply the text styling to the context\n    applyFontStyle() {\n        const ctx = this.checkContext();\n        ctx.setFont(this.textFont);\n        const render_options = this.render_options;\n        const color = render_options.color;\n        if (color) {\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n        }\n    }\n    // Helper function to draw a line with arrow heads\n    drawArrowLine(ctx, pt1, pt2) {\n        const both_arrows = this.render_options.draw_start_arrow && this.render_options.draw_end_arrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        // For ends with arrow we actually want to stop before we get to the arrow\n        // so that wide lines won't put a flat end on the arrow.\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.render_options.arrowhead_length / 3) / distance;\n        let end_x;\n        let end_y;\n        let start_x;\n        let start_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            end_x = Math.round(x1 + (x2 - x1) * ratio);\n            end_y = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            end_x = x2;\n            end_y = y2;\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            start_x = x1 + (x2 - x1) * (1 - ratio);\n            start_y = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            start_x = x1;\n            start_y = y1;\n        }\n        if (this.render_options.color) {\n            ctx.setStrokeStyle(this.render_options.color);\n            ctx.setFillStyle(this.render_options.color);\n        }\n        // Draw the shaft of the arrow\n        ctx.beginPath();\n        ctx.moveTo(start_x, start_y);\n        ctx.lineTo(end_x, end_y);\n        ctx.stroke();\n        ctx.closePath();\n        // calculate the angle of the line\n        const line_angle = Math.atan2(y2 - y1, x2 - x1);\n        // h is the line length of a side of the arrow head\n        const h = Math.abs(this.render_options.arrowhead_length / Math.cos(this.render_options.arrowhead_angle));\n        let angle1;\n        let angle2;\n        let top_x;\n        let top_y;\n        let bottom_x;\n        let bottom_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            angle1 = line_angle + Math.PI + this.render_options.arrowhead_angle;\n            top_x = x2 + Math.cos(angle1) * h;\n            top_y = y2 + Math.sin(angle1) * h;\n            angle2 = line_angle + Math.PI - this.render_options.arrowhead_angle;\n            bottom_x = x2 + Math.cos(angle2) * h;\n            bottom_y = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            angle1 = line_angle + this.render_options.arrowhead_angle;\n            top_x = x1 + Math.cos(angle1) * h;\n            top_y = y1 + Math.sin(angle1) * h;\n            angle2 = line_angle - this.render_options.arrowhead_angle;\n            bottom_x = x1 + Math.cos(angle2) * h;\n            bottom_y = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n        }\n    }\n    // Renders the `StaveLine` on the context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const first_note = this.first_note;\n        const last_note = this.last_note;\n        const render_options = this.render_options;\n        ctx.save();\n        this.applyLineStyle();\n        // Cycle through each set of indices and draw lines\n        let start_position = { x: 0, y: 0 };\n        let end_position = { x: 0, y: 0 };\n        this.first_indices.forEach((first_index, i) => {\n            const last_index = this.last_indices[i];\n            // Get initial coordinates for the start/end of the line\n            start_position = first_note.getModifierStartXY(2, first_index);\n            end_position = last_note.getModifierStartXY(1, last_index);\n            const upwards_slope = start_position.y > end_position.y;\n            // Adjust `x` coordinates for modifiers\n            start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n            end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n            // Adjust first `x` coordinates for displacements\n            const notehead_width = first_note.getGlyph().getWidth();\n            const first_displaced = first_note.getKeyProps()[first_index].displaced;\n            if (first_displaced && first_note.getStemDirection() === 1) {\n                start_position.x += notehead_width + render_options.padding_left;\n            }\n            // Adjust last `x` coordinates for displacements\n            const last_displaced = last_note.getKeyProps()[last_index].displaced;\n            if (last_displaced && last_note.getStemDirection() === -1) {\n                end_position.x -= notehead_width + render_options.padding_right;\n            }\n            // Adjust y position better if it's not coming from the center of the note\n            start_position.y += upwards_slope ? -3 : 1;\n            end_position.y += upwards_slope ? 2 : 0;\n            this.drawArrowLine(ctx, start_position, end_position);\n        });\n        ctx.restore();\n        // Determine the x coordinate where to start the text\n        const text_width = ctx.measureText(this.text).width;\n        const justification = render_options.text_justification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = start_position.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const delta_x = end_position.x - start_position.x;\n            const center_x = delta_x / 2 + start_position.x;\n            x = center_x - text_width / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = end_position.x - text_width;\n        }\n        // Determine the y value to start the text\n        let y = 0;\n        const vertical_position = render_options.text_position_vertical;\n        if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n            y = first_note.checkStave().getYForTopText();\n        }\n        else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = first_note.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        // Draw the text\n        ctx.save();\n        this.applyFontStyle();\n        ctx.fillText(this.text, x, y);\n        ctx.restore();\n        return this;\n    }\n}\n/** Default text font. */\nStaveLine.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n// Text Positioning\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = {\n    LEFT: 1,\n    CENTER: 2,\n    RIGHT: 3,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\nimport { Stave } from './stave';\nimport { RuntimeError } from './util';\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.parts = [];\n    }\n    static get CATEGORY() {\n        return 'System';\n    }\n    /** Set formatting options. */\n    setOptions(options = {}) {\n        var _a;\n        this.factory = (_a = options.factory) !== null && _a !== void 0 ? _a : new Factory({ renderer: { elementId: null, width: 0, height: 0 } });\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    /**\n     * Add connector between staves.\n     * @param type see {@link StaveConnector.typeString}\n     */\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            top_stave: this.parts[0].stave,\n            bottom_stave: this.parts[this.parts.length - 1].stave,\n            type,\n        });\n        return this.connector;\n    }\n    /**\n     * Add stave to the system.\n     *\n     * Examples:\n     *\n     *  (one voice)\n     *\n     * `system.addStave({voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]});`\n     *\n     *  (two voices)\n     *\n     * `system.addStave({voices: [`\n     *\n     *  `score.voice(score.notes('C#5/q, B4, A4, G#4', {stem: 'up'})),`\n     *\n     *  `score.voice(score.notes('C#4/h, C#4', {stem: 'down'}))]});`\n     */\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ left_bar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ stave, \n            /* voices: [], */\n            spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => voice\n            .setContext(ctx)\n            .setStave(stave)\n            .getTickables()\n            .forEach((tickable) => tickable.setStave(stave)));\n        this.parts.push(p);\n        return stave;\n    }\n    /** Format the system. */\n    format() {\n        const options_details = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(options_details);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        let allVoices = [];\n        const debugNoteMetricsYs = [];\n        // Join the voices for each stave.\n        this.parts.forEach((part) => {\n            y = y + part.stave.space(part.spaceAbove);\n            part.stave.setY(y);\n            if (this.options.autoWidth) {\n                part.voices.forEach((voice) => {\n                    formatter.joinVoices([voice]);\n                });\n            }\n            else {\n                formatter.joinVoices(part.voices);\n            }\n            y = y + part.stave.space(part.spaceBelow);\n            y = y + part.stave.space(this.options.spaceBetweenStaves);\n            if (part.debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n                y += 15;\n            }\n            allVoices = allVoices.concat(part.voices);\n            startX = Math.max(startX, part.stave.getNoteStartX());\n        });\n        // Update the start position of all staves.\n        this.parts.forEach((part) => part.stave.setNoteStartX(startX));\n        if (this.options.autoWidth) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(allVoices);\n            this.parts.forEach((part) => {\n                part.stave.setWidth(justifyWidth + Stave.rightPadding + (startX - this.options.x));\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - this.options.x\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        formatter.format(allVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(options_details);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        this.boundingBox = new BoundingBox(this.options.x, this.options.y, this.options.width, this.lastY - this.options.y);\n    }\n    /** Render the system. */\n    draw() {\n        // Render debugging information, if requested.\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            d.voice.getTickables().forEach((tickable) => Note.plotMetrics(ctx, tickable, d.y));\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Stave } from './stave';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return 'TabStave';\n    }\n    constructor(x, y, width, options) {\n        const tab_options = Object.assign({ spacing_between_lines_px: 13, num_lines: 6, top_text_position: 1 }, options);\n        super(x, y, width, tab_options);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    // Deprecated\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// This file implements `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Renderer } from './renderer';\nimport { Tables } from './tables';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nexport class TextBracket extends Element {\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.text = text;\n        this.superscript = superscript;\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.resetFont();\n        this.render_options = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            line_width: 1,\n            show_bracket: true,\n            bracket_height: 8,\n            // In the BOTTOM position, the bracket line can extend\n            // under the superscript.\n            underline_superscript: true,\n        };\n    }\n    static get CATEGORY() {\n        return 'TextBracket';\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    /**\n     * @deprecated Use `TextBracket.Position` instead.\n     */\n    static get Positions() {\n        L('Positions is deprecated, use TextBracketPosition instead.');\n        return TextBracketPosition;\n    }\n    /**\n     * @deprecated Use `TextBracket.PositionString` instead.\n     */\n    static get PositionsString() {\n        L('PositionsString is deprecated, use PositionString instead.');\n        return TextBracket.PositionString;\n    }\n    /**\n     * Apply the text backet styling to the provided context.\n     * @param ctx\n     * @returns this\n     */\n    applyStyle(ctx) {\n        ctx.setFont(this.font);\n        const options = this.render_options;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.line_width);\n        return this;\n    }\n    // Set whether the bracket line should be `dashed`. You can also\n    // optionally set the `dash` pattern by passing in an array of numbers\n    setDashed(dashed, dash) {\n        this.render_options.dashed = dashed;\n        if (dash)\n            this.render_options.dash = dash;\n        return this;\n    }\n    // Set the rendering `context` for the octave bracket\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Draw the octave bracket on the rendering context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        // Get the preliminary start and stop coordintates for the bracket\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracket_height = this.render_options.bracket_height * this.position;\n        ctx.save();\n        this.applyStyle(ctx);\n        // Draw text\n        ctx.fillText(this.text, start.x, start.y);\n        // Get the width and height for the octave number\n        const main_measure = ctx.measureText(this.text);\n        const main_width = main_measure.width;\n        const main_height = main_measure.height;\n        // Calculate the y position for the super script\n        const super_y = start.y - main_height / 2.5;\n        // We called this.resetFont() in the constructor, so we know this.textFont is available.\n        // eslint-disable-next-line\n        const { family, size, weight, style } = this.textFont;\n        // To draw the superscript, we scale the font size by 1/1.4.\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n        // Determine width and height of the superscript\n        const super_measure = ctx.measureText(this.superscript);\n        const super_width = super_measure.width;\n        const super_height = super_measure.height;\n        // Setup initial coordinates for the bracket line\n        let start_x = start.x;\n        let line_y = super_y;\n        const end_x = stop.x + this.stop.getGlyph().getWidth();\n        // Adjust x and y coordinates based on position\n        if (this.position === TextBracketPosition.TOP) {\n            start_x += main_width + super_width + 5;\n            line_y -= super_height / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            line_y += super_height / 2.7;\n            start_x += main_width + 2;\n            if (!this.render_options.underline_superscript) {\n                start_x += super_width;\n            }\n        }\n        if (this.render_options.dashed) {\n            // Main line\n            Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n            // Ending Bracket\n            if (this.render_options.show_bracket) {\n                Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(start_x, line_y);\n            // Main line\n            ctx.lineTo(end_x, line_y);\n            if (this.render_options.show_bracket) {\n                // Ending bracket\n                ctx.lineTo(end_x, line_y + bracket_height);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n}\nTextBracket.DEBUG = false;\nTextBracket.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 15,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('Vex.Flow.TextDynamics', args);\n}\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nexport class TextDynamics extends Note {\n    /**\n     * Create the dynamics marking.\n     *\n     * A `TextDynamics` object inherits from `Note` so that it can be formatted\n     * within a `Voice`.\n     *\n     * @param noteStruct an object that contains a `duration` property and a\n     * `sequence` of letters that represents the letters to render.\n     */\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.sequence = (noteStruct.text || '').toLowerCase();\n        this.line = noteStruct.line || 0;\n        this.glyphs = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { glyph_font_size: 40 });\n        L('New Dynamics Text: ', this.sequence);\n    }\n    static get CATEGORY() {\n        return 'TextDynamics';\n    }\n    /** The glyph data for each dynamics letter. */\n    static get GLYPHS() {\n        return {\n            f: {\n                code: 'dynamicForte',\n                width: 12,\n            },\n            p: {\n                code: 'dynamicPiano',\n                width: 14,\n            },\n            m: {\n                code: 'dynamicMezzo',\n                width: 17,\n            },\n            s: {\n                code: 'dynamicSforzando',\n                width: 10,\n            },\n            z: {\n                code: 'dynamicZ',\n                width: 12,\n            },\n            r: {\n                code: 'dynamicRinforzando',\n                width: 12,\n            },\n        };\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Preformat the dynamics text. */\n    preFormat() {\n        let total_width = 0;\n        // length of this.glyphs must be <=\n        // length of this.sequence, so if we're formatted before\n        // create new glyphs.\n        this.glyphs = [];\n        // Iterate through each letter\n        this.sequence.split('').forEach((letter) => {\n            // Get the glyph data for the letter\n            const glyph_data = TextDynamics.GLYPHS[letter];\n            if (!glyph_data)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            const size = defined(this.render_options.glyph_font_size);\n            const glyph = new Glyph(glyph_data.code, size, { category: 'textNote' });\n            // Add the glyph\n            this.glyphs.push(glyph);\n            total_width += glyph_data.width;\n        });\n        // Store the width of the text\n        this.setWidth(total_width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the dynamics text on the rendering context. */\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        let letter_x = x;\n        this.glyphs.forEach((glyph, index) => {\n            const current_letter = this.sequence[index];\n            glyph.render(this.checkContext(), letter_x, y);\n            letter_x += TextDynamics.GLYPHS[current_letter].width;\n        });\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\nTextDynamics.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nexport class TimeSigNote extends Note {\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        const timeSignature = new TimeSignature(timeSpec, customPadding);\n        this.timeSigInfo = timeSignature.getInfo();\n        this.setWidth(this.timeSigInfo.glyph.getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return 'TimeSigNote';\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (!this.timeSigInfo.glyph.getContext()) {\n            this.timeSigInfo.glyph.setContext(ctx);\n        }\n        this.timeSigInfo.glyph.setStave(stave);\n        this.timeSigInfo.glyph.setYShift(stave.getYForLine(2) - stave.getYForGlyphs());\n        this.timeSigInfo.glyph.renderToStave(this.getAbsoluteX());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n// MIT License\nimport { Element } from './element';\nimport { log } from './util';\nimport { Vibrato } from './vibrato';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('Vex.Flow.VibratoBracket', args);\n}\n/** `VibratoBracket` renders vibrato effect between two notes. */\nexport class VibratoBracket extends Element {\n    /**\n     * Either the stop or start note must be set, or both of them.\n     * An undefined value for the start or stop note indicates that the vibrato\n     * is drawn from the beginning or until the end of the stave accordingly.\n     */\n    constructor(bracket_data) {\n        super();\n        if (bracket_data.start)\n            this.start = bracket_data.start;\n        if (bracket_data.stop)\n            this.stop = bracket_data.stop;\n        this.line = 1;\n        this.render_options = {\n            harsh: false,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n            vibrato_width: 0,\n        };\n    }\n    static get CATEGORY() {\n        return 'VibratoBracket';\n    }\n    /** Set line position of the vibrato bracket. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Set harsh vibrato bracket. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Draw the vibrato bracket on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        // If start note is not set then vibrato will be drawn\n        // from the beginning of the stave\n        const start_x = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        // If stop note is not set then vibrato will be drawn\n        // until the end of the stave\n        const stop_x = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.render_options.vibrato_width = stop_x - start_x;\n        L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n        Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\nVibratoBracket.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { ChordSymbol } from './chordsymbol';\nimport { ClefNote } from './clefnote';\nimport { Curve } from './curve';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { KeySigNote } from './keysignote';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { NoteSubGroup } from './notesubgroup';\nimport { PedalMarking } from './pedalmarking';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StringNumber } from './stringnumber';\nimport { System } from './system';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSigNote } from './timesignote';\nimport { Tuplet } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nimport { isHTMLCanvas } from './web';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('Vex.Flow.Factory', args);\n}\n/**\n * Factory implements a high level API around VexFlow.\n */\nexport class Factory {\n    /**\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});`\n     */\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n            font: Factory.TEXT_FONT,\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Static simplified function to access constructor without providing FactoryOptions\n     *\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = Vex.Flow.Factory.newFromElementId('boo', 1200, 600 );`\n     */\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined; // current stave\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId == null) {\n            return;\n        }\n        if (elementId == '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            // We use a custom type check here, because node-canvas mimics canvas,\n            // but is not an instance of window.HTMLCanvasElement.\n            // In fact, `window` might be undefined here.\n            // See: https://www.npmjs.com/package/canvas\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    /** Return pixels from current stave spacing. */\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center', kerning: true, reportWidth: true }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        chordSymbol.setEnableKerning(p.kerning);\n        chordSymbol.setReportWidth(p.reportWidth);\n        // There is a default font based on the engraving font.  Only set then\n        // font if it is specific, else use the default\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        const p = Object.assign({ type: 'a.', position: 'above' }, params);\n        const articulation = new Articulation(p.type);\n        articulation.setPosition(p.position);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.number_of_measures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time, p.options);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.harsh)\n            vibratoBracket.setHarsh(params.options.harsh);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    /**\n     * Creates EasyScore. Normally the first step after constructing a Factory. For example:\n     * ```\n     * const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});\n     * const score: EasyScore = vf.EasyScore();\n     * ```\n     * @param options.factory optional instance of Factory\n     * @param options.builder instance of Builder\n     * @param options.commitHooks function to call after a note element is created\n     * @param options.throwOnError throw error in case of parsing error\n     */\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    /** Render the score. */\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).draw());\n        this.voices.forEach((v) => v.setContext(ctx).draw());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).draw();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).draw());\n        this.reset();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`. */\nFactory.DEBUG = false;\n/** Default text font. */\nFactory.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Author: Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either crescendo or decrescendo.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { RuntimeError } from './util';\nexport class StaveHairpin extends Element {\n    /**\n     * Create a new hairpin from the specified notes.\n     *\n     * @param {!Object} notes The notes to tie up.\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     * @param {!Object} type The type of hairpin\n     */\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.render_options = {\n            height: 10,\n            y_shift: 0,\n            left_shift_px: 0,\n            right_shift_px: 0,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n    }\n    static get CATEGORY() {\n        return 'StaveHairpin';\n    }\n    /* Helper function to convert ticks into pixels.\n     * Requires a Formatter with voices joined and formatted (to\n     * get pixels per tick)\n     *\n     * options is struct that has:\n     *\n     *  {\n     *   height: px,\n     *   y_shift: px,         // vertical offset\n     *   left_shift_ticks: 0, // left horizontal offset expressed in ticks\n     *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n     *  }\n     *\n     **/\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt == null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const l_shift_px = ppt * ((_a = options.left_shift_ticks) !== null && _a !== void 0 ? _a : 0);\n        const r_shift_px = ppt * ((_b = options.right_shift_ticks) !== null && _b !== void 0 ? _b : 0);\n        const hairpin_options = {\n            height: options.height,\n            y_shift: options.y_shift,\n            left_shift_px: l_shift_px,\n            right_shift_px: r_shift_px,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n        new StaveHairpin({\n            first_note: notes.first_note,\n            last_note: notes.last_note,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpin_options)\n            .setPosition(position)\n            .draw();\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        if (options.height != null &&\n            options.y_shift != null &&\n            options.left_shift_px != null &&\n            options.right_shift_px != null) {\n            this.render_options = options;\n        }\n        return this;\n    }\n    /**\n     * Set the notes to attach this hairpin to.\n     *\n     * @param {!Object} notes The start and end notes.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.last_note = notes.last_note;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.render_options.y_shift + 20;\n        let y_shift = params.first_y;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            y_shift = params.first_y - params.staff_height;\n        }\n        const l_shift = this.render_options.left_shift_px;\n        const r_shift = this.render_options.right_shift_px;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.first_note;\n        const lastNote = this.last_note;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            first_x: start.x,\n            last_x: end.x,\n            first_y: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            last_y: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staff_height: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { TabTie } from './tabtie';\nimport { RuntimeError } from './util';\nexport class TabSlide extends TabTie {\n    /**\n     * @param notes is a struct of the form:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     * @param notes.first_note the starting note of the slide\n     * @param notes.last_note the ending note of the slide\n     * @param notes.first_indices specifies which string + fret positions of the TabNote are used in this slide. zero indexed.\n     * @param notes.last_indices currently unused. we assume it's the same as first_indices.\n     *\n     * @param direction TabSlide.SLIDE_UP or TabSlide.SLIDE_DOWN\n     */\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        // Determine the direction automatically if it is not provided.\n        if (!direction) {\n            let first_fret = notes.first_note.getPositions()[0].fret;\n            if (typeof first_fret === 'string') {\n                first_fret = parseInt(first_fret, 10);\n            }\n            let last_fret = notes.last_note.getPositions()[0].fret;\n            if (typeof last_fret === 'string') {\n                last_fret = parseInt(last_fret, 10);\n            }\n            // If either of the frets are 'X', parseInt() above will return NaN.\n            // Choose TabSlide.SLIDE_UP by default.\n            if (isNaN(first_fret) || isNaN(last_fret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = first_fret > last_fret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.render_options.cp1 = 11;\n        this.render_options.cp2 = 14;\n        this.render_options.y_shift = 0.5;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return 'TabSlide';\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const first_x_px = params.first_x_px;\n        const first_ys = params.first_ys;\n        const last_x_px = params.last_x_px;\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const slide_y = first_ys[first_indices[i]] + this.render_options.y_shift;\n            if (isNaN(slide_y)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(first_x_px, slide_y + 3 * direction);\n            ctx.lineTo(last_x_px, slide_y - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\nTabSlide.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n    /**\n     * Constructor.\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        // Default to standard tuning.\n        this.setTuning(tuningString);\n    }\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n        };\n    }\n    /** Return the note number associated to the note string. */\n    noteToInteger(noteString) {\n        return Tables.keyProperties(noteString).int_value;\n    }\n    /**\n     * Set tuning identified by tuning name (eg. 'dagdad')\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    /** Return the note number associated with a tablature string. */\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    /** Return the note number associated with a tablature string and fret. */\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    /** Return the note string associated with tablature string and fret. */\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { CanvasContext } from './canvascontext';\nimport { ChordSymbol } from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { Repetition } from './staverepetition';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Volta } from './stavevolta';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { SVGContext } from './svgcontext';\nimport { System } from './system';\nimport { Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextFormatter } from './textformatter';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { DATE, ID, VERSION } from './version';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nexport class Flow {\n    static get BUILD() {\n        return {\n            /** version number. */\n            VERSION: VERSION,\n            /** git commit ID that this library was built from. */\n            ID: ID,\n            /** The date when this library was compiled. */\n            DATE: DATE,\n        };\n    }\n    static get Flow() {\n        // This (circular reference) provides a handy shortcut for importing VexFlow via `require()`.\n        // For example:\n        // const Vex = require('vexflow');\n        // const { Flow, Stave, StaveNote, Formatter, Renderer } = Vex.Flow;\n        return Flow;\n    }\n    // ... more to come ...\n    /**\n     * Examples:\n     * ```\n     * Vex.Flow.setMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Bravura', 'Gonville');\n     * ```\n     *\n     * **CASE 1**: You are using `vexflow.js`, which includes all music fonts (Bravura, Gonville, Petaluma, Custom).\n     * In this case, calling this method is optional, since VexFlow already defaults to a music font stack of:\n     * 'Bravura', 'Gonville', 'Custom'.\n     *\n     * **CASE 2**: You are using `vexflow-bravura.js` or `vexflow-petaluma.js` or `vexflow-gonville.js`,\n     * which includes a single music font. Calling this method is unnecessary.\n     *\n     * **CASE 3**: You are using the light weight `vexflow-core.js` to take advantage of lazy loading for fonts.\n     * In this case, the default music font stack is empty.\n     * Example:\n     * ```\n     * await Vex.Flow.fetchMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Petaluma');\n     * ... (do VexFlow stuff) ...\n     * ```\n     * See `demos/fonts/` for more examples.\n     *\n     * @returns an array of Font objects corresponding to the provided `fontNames`.\n     */\n    static setMusicFont(...fontNames) {\n        // Convert the array of font names into an array of Font objects.\n        const fonts = fontNames.map((fontName) => Font.load(fontName));\n        Tables.MUSIC_FONT_STACK = fonts;\n        Glyph.CURRENT_CACHE_KEY = fontNames.join(',');\n        return fonts;\n    }\n    /**\n     * Used with vexflow-core which supports dynamic font loading.\n     */\n    // eslint-disable-next-line\n    static fetchMusicFont(fontName, fontModuleOrPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The default implementation does nothing.\n            // See vexflow-core.ts for the implementation that vexflow-core.js uses.\n        });\n    }\n    static getMusicFont() {\n        const fonts = Tables.MUSIC_FONT_STACK;\n        return fonts.map((font) => font.getName());\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return Tables.STAVE_LINE_THICKNESS;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        Tables.STAVE_LINE_THICKNESS = value;\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get accidentalMap() {\n        return Tables.accidentalMap;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    // eslint-disable-next-line\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nFlow.Accidental = Accidental;\nFlow.Annotation = Annotation;\nFlow.Articulation = Articulation;\nFlow.Barline = Barline;\nFlow.BarNote = BarNote;\nFlow.Beam = Beam;\nFlow.Bend = Bend;\nFlow.BoundingBox = BoundingBox;\nFlow.BoundingBoxComputation = BoundingBoxComputation;\nFlow.CanvasContext = CanvasContext;\nFlow.ChordSymbol = ChordSymbol;\nFlow.Clef = Clef;\nFlow.ClefNote = ClefNote;\nFlow.Crescendo = Crescendo;\nFlow.Curve = Curve;\nFlow.Dot = Dot;\nFlow.EasyScore = EasyScore;\nFlow.Element = Element;\nFlow.Factory = Factory;\nFlow.Font = Font;\nFlow.Formatter = Formatter;\nFlow.Fraction = Fraction;\nFlow.FretHandFinger = FretHandFinger;\nFlow.GhostNote = GhostNote;\nFlow.Glyph = Glyph;\nFlow.GlyphNote = GlyphNote;\nFlow.GraceNote = GraceNote;\nFlow.GraceNoteGroup = GraceNoteGroup;\nFlow.GraceTabNote = GraceTabNote;\nFlow.KeyManager = KeyManager;\nFlow.KeySignature = KeySignature;\nFlow.KeySigNote = KeySigNote;\nFlow.Modifier = Modifier;\nFlow.ModifierContext = ModifierContext;\nFlow.MultiMeasureRest = MultiMeasureRest;\nFlow.Music = Music;\nFlow.Note = Note;\nFlow.NoteHead = NoteHead;\nFlow.NoteSubGroup = NoteSubGroup;\nFlow.Ornament = Ornament;\nFlow.Parenthesis = Parenthesis;\nFlow.Parser = Parser;\nFlow.PedalMarking = PedalMarking;\nFlow.Registry = Registry;\nFlow.RenderContext = RenderContext;\nFlow.Renderer = Renderer;\nFlow.RepeatNote = RepeatNote;\nFlow.Repetition = Repetition;\nFlow.Stave = Stave;\nFlow.StaveConnector = StaveConnector;\nFlow.StaveHairpin = StaveHairpin;\nFlow.StaveLine = StaveLine;\nFlow.StaveModifier = StaveModifier;\nFlow.StaveNote = StaveNote;\nFlow.StaveTempo = StaveTempo;\nFlow.StaveText = StaveText;\nFlow.StaveTie = StaveTie;\nFlow.Stem = Stem;\nFlow.StringNumber = StringNumber;\nFlow.Stroke = Stroke;\nFlow.SVGContext = SVGContext;\nFlow.System = System;\nFlow.TabNote = TabNote;\nFlow.TabSlide = TabSlide;\nFlow.TabStave = TabStave;\nFlow.TabTie = TabTie;\nFlow.TextBracket = TextBracket;\nFlow.TextDynamics = TextDynamics;\nFlow.TextFormatter = TextFormatter;\nFlow.TextNote = TextNote;\nFlow.TickContext = TickContext;\nFlow.TimeSignature = TimeSignature;\nFlow.TimeSigNote = TimeSigNote;\nFlow.Tremolo = Tremolo;\nFlow.Tuning = Tuning;\nFlow.Tuplet = Tuplet;\nFlow.Vibrato = Vibrato;\nFlow.VibratoBracket = VibratoBracket;\nFlow.Voice = Voice;\nFlow.Volta = Volta;\n// enums need to be exported too!\nFlow.BarlineType = BarlineType;\nFlow.ModifierPosition = ModifierPosition;\n","export const VERSION = '4.0.1-alpha.0';\nexport const ID = '935fecc1f37e4fd8ef8c3526c045e322fb744e56';\nexport const DATE = '2022-01-24T03:40:57.369Z';\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { TabNote } from './tabnote';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return 'GraceTabNote';\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // vertical shift from stave line\n            y_shift: 0.3, \n            // grace glyph scale\n            scale: 0.6, \n            // grace tablature font\n            font: `7.5pt ${Font.SANS_SERIF}` });\n        this.updateWidth();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\nimport { Music } from './music';\nimport { RuntimeError } from './util';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const is_supported_type = Music.scaleTypes[this.keyParts.type];\n        if (!is_supported_type) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.root_indices[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        // First look for matching note in our altered scale\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in our altered scale\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote != null) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in the original scale\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote != null) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        // Then try to unmodify a currently modified note.\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        // Last resort -- shitshoot\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n// MIT License\nimport { Glyph } from './glyph';\nimport { GraceNote, isGraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n    /**\n     * @param num number of bars\n     */\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.code = 'tremolo1';\n        // big strokes scales initialised to 1 (no scale)\n        this.y_spacing_scale = 1;\n        this.extra_stroke_scale = 1;\n    }\n    static get CATEGORY() {\n        return 'Tremolo';\n    }\n    /** Draw the tremolo on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let x = start.x;\n        const gn = isGraceNote(note);\n        const scale = gn ? GraceNote.SCALE : 1;\n        const category = `tremolo.${gn ? 'grace' : 'default'}`;\n        const musicFont = Tables.currentMusicFont();\n        let y_spacing = musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n        // add y_spacing_scale for big strokes (#1258)\n        y_spacing *= this.y_spacing_scale;\n        const height = this.num * y_spacing;\n        let y = note.getStemExtents().baseY - height;\n        if (stemDirection < 0) {\n            y += musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n        }\n        else {\n            y += musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n        }\n        const fontScale = musicFont.lookupMetric(`${category}.point`);\n        x += musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n        for (let i = 0; i < this.num; ++i) {\n            Glyph.renderGlyph(ctx, x, y, fontScale, this.code, { category, scale: this.extra_stroke_scale });\n            y += y_spacing;\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Utility methods used by the rest of the VexFlow codebase.\nimport { Flow } from './flow';\nimport { log, RuntimeError } from './util';\nexport class Vex {\n    // Users of `Vex.forEach(a, fn)` should use `Array.prototype.forEach()` instead.\n    // static forEach<T>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => void) {\n    //   arr.forEach(callbackFn);\n    // }\n    /**\n     * Take `arr` and return a new list consisting of the sorted, unique,\n     * contents of arr. Does not modify `arr`.\n     */\n    // eslint-disable-next-line\n    static sortAndUnique(arr, cmp, eq) {\n        if (arr.length > 1) {\n            const newArr = [];\n            let last;\n            arr.sort(cmp);\n            for (let i = 0; i < arr.length; ++i) {\n                if (i === 0 || !eq(arr[i], last)) {\n                    newArr.push(arr[i]);\n                }\n                last = arr[i];\n            }\n            return newArr;\n        }\n        else {\n            return arr;\n        }\n    }\n    /** Check if array `arr` contains `obj`. */\n    // eslint-disable-next-line\n    static contains(arr, obj) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n    // Get the 2D Canvas context from DOM element `canvas_sel`.\n    static getCanvasContext(canvasSelector) {\n        if (!canvasSelector) {\n            throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvasSelector);\n        }\n        const canvas = document.getElementById(canvasSelector);\n        if (!(canvas && canvas.getContext)) {\n            throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n        }\n        return canvas.getContext('2d');\n    }\n    /** Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds. */\n    // eslint-disable-next-line\n    static benchmark(s, f) {\n        const start_time = new Date().getTime();\n        f();\n        const elapsed = new Date().getTime() - start_time;\n        log(s, elapsed + 'ms');\n    }\n    // Get stack trace.\n    static stackTrace() {\n        const err = new Error();\n        return err.stack;\n    }\n}\nVex.Flow = Flow;\n","export const CustomFont = {\n    resolution: 1000,\n    fontFamily: 'VexFlowCustom',\n    glyphs: {\n        noteheadSquareWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 386,\n            o: 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 ',\n        },\n        noteheadSquareBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 386,\n            o: 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 ',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: -171.5,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalBakiyeFlat: {\n            x_min: -176.9375,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: -1.359375,\n            x_max: 255.890625,\n            ha: 261,\n            o: 'm 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 ',\n        },\n        accidentalKoron: {\n            x_min: -20,\n            x_max: 320,\n            ha: 257,\n            o: 'm -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 ',\n        },\n        accidentalSori: {\n            x_min: -10.890625,\n            x_max: 299.4375,\n            ha: 294,\n            o: 'm 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 ',\n        },\n        vexAccidentalMicrotonal2: {\n            x_min: -1.359375,\n            x_max: 386.5625,\n            ha: 394,\n            o: 'm 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 ',\n        },\n        vexAccidentalMicrotonal3: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z ',\n        },\n        vexAccidentalMicrotonal4: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z ',\n        },\n        vexNoteHeadRectBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 ',\n        },\n        vexNoteHeadRectWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100',\n        },\n    },\n};\n","export const CustomMetrics = {\n    name: 'VexFlowCustom',\n    smufl: false,\n    glyphs: {},\n};\n","export const PetalumaFont = {\n    glyphs: {\n        bracketTop: {\n            x_min: 0,\n            x_max: 508,\n            y_min: 0,\n            y_max: 370,\n            ha: 370,\n            o: 'm 22 0 b 122 0 55 1 89 0 l 157 0 b 713 376 425 0 622 137 b 732 467 724 406 732 436 b 726 514 732 482 730 498 b 711 533 723 528 719 533 b 693 526 707 533 700 530 b 674 498 683 520 678 508 b 635 406 662 467 652 435 b 310 164 560 281 458 193 b 154 151 258 154 206 151 b 39 154 117 151 78 154 b 1 120 17 154 4 145 b 0 84 0 108 0 96 b 0 20 0 63 1 40 b 22 0 0 4 7 0 z',\n        },\n        bracketBottom: {\n            x_min: 0,\n            x_max: 496,\n            y_min: -393,\n            y_max: 0,\n            ha: 393,\n            o: 'm 696 -566 b 711 -539 713 -566 708 -549 b 714 -521 713 -533 714 -527 b 713 -508 714 -517 713 -513 b 661 -327 706 -445 688 -384 b 392 -42 603 -203 513 -109 b 206 0 331 -7 266 0 b 160 -1 190 0 174 -1 b 26 -1 107 -1 66 -3 b 0 -19 12 -1 0 -4 l 0 -23 b 3 -50 1 -32 3 -42 b 1 -86 3 -62 1 -73 b 4 -118 1 -96 1 -108 b 45 -151 10 -145 23 -154 b 180 -143 89 -144 135 -145 b 621 -419 392 -135 523 -236 b 662 -539 641 -456 655 -497 b 696 -566 667 -557 680 -566 z',\n        },\n        barlineTick: {\n            x_min: 0,\n            x_max: 56.036101509664164,\n            y_min: 876.905249806889,\n            y_max: 1121.5430338167066,\n            ha: 244.63778400981766,\n            o: 'm 42 1263 b 66 1287 62 1261 66 1272 b 81 1583 65 1387 72 1485 b 35 1614 82 1610 53 1610 b 14 1591 17 1619 16 1604 b 0 1408 7 1525 0 1459 l 0 1292 b 42 1263 1 1263 23 1266 z',\n        },\n        breathMarkTick: {\n            x_min: 0,\n            x_max: 568,\n            y_min: 0,\n            y_max: 621,\n            ha: 621,\n            o: 'm 258 0 b 278 39 276 0 274 24 b 279 56 279 45 279 50 l 279 73 b 278 117 279 88 278 102 b 281 148 278 127 279 138 b 536 600 312 330 387 487 b 744 719 600 651 670 690 b 815 779 775 730 808 740 b 818 824 818 793 818 808 b 815 868 818 838 818 852 b 796 894 814 881 808 894 b 779 888 791 894 786 893 b 719 864 760 878 739 871 b 372 602 580 806 459 724 b 229 252 298 498 251 383 b 220 268 225 262 222 264 b 209 302 217 279 213 291 b 75 527 181 387 143 467 b 16 563 58 543 39 573 b 0 539 3 557 0 549 b 12 492 0 524 9 507 b 56 400 19 459 22 425 b 163 269 104 367 138 323 b 238 36 197 194 216 115 b 258 0 242 22 243 0 z',\n        },\n        segno: {\n            x_min: 0,\n            x_max: 798,\n            y_min: -65,\n            y_max: 806,\n            ha: 871,\n            o: 'm 16 -94 b 66 -69 39 -92 53 -85 b 177 59 102 -26 138 17 b 543 456 298 192 420 324 b 726 300 615 420 680 373 b 753 217 744 271 753 243 b 655 112 753 170 719 131 b 599 104 636 107 618 104 b 461 173 544 104 495 128 b 432 190 454 183 444 190 b 409 179 425 190 418 187 b 359 118 390 160 373 141 b 341 72 347 101 341 86 b 373 24 341 56 351 40 b 409 6 384 17 396 10 b 550 -13 454 -12 501 -14 b 599 -6 566 -12 583 -10 b 864 213 720 27 806 104 b 886 300 878 242 886 271 b 857 395 886 331 877 363 b 799 467 840 420 821 445 b 648 572 755 513 704 546 b 1110 1083 802 743 955 914 b 1140 1129 1123 1097 1136 1110 b 1149 1148 1142 1135 1149 1142 b 1145 1153 1149 1149 1148 1152 b 1123 1161 1139 1158 1130 1161 b 1109 1156 1119 1161 1113 1159 b 1089 1138 1102 1151 1094 1145 b 946 988 1040 1089 989 1041 b 595 602 834 855 711 732 l 590 598 l 549 615 b 432 793 462 647 432 723 b 534 888 432 851 474 888 b 671 834 588 888 631 864 b 710 818 684 824 696 818 b 724 821 714 818 719 819 b 809 883 757 834 788 852 b 816 901 814 890 816 896 b 802 923 816 910 812 916 b 706 984 770 945 742 971 b 593 1011 668 998 631 1011 b 516 991 567 1011 541 1005 b 333 799 433 949 380 876 b 302 693 312 765 302 729 b 330 589 302 658 311 624 b 469 488 360 533 415 511 b 485 482 475 487 480 485 b 266 249 412 405 338 327 b 121 88 217 196 170 141 b 9 -65 78 40 37 -7 b 0 -85 4 -72 0 -79 b 16 -94 0 -91 4 -94 z m 861 536 b 927 575 890 539 909 557 b 965 628 952 598 965 613 b 926 680 965 644 952 658 b 865 713 900 701 883 713 b 805 667 845 713 828 698 b 768 611 791 649 770 631 b 812 564 766 589 798 582 b 861 536 824 550 840 537 z m 251 350 b 363 436 285 348 353 403 b 354 456 366 448 360 452 b 271 518 327 477 298 497 b 243 528 261 526 252 528 b 210 513 232 528 222 523 b 157 454 190 494 176 472 b 141 428 147 444 141 436 b 158 406 141 420 147 413 b 216 361 180 393 197 376 b 245 350 225 356 235 350 z',\n        },\n        coda: {\n            x_min: 0,\n            x_max: 1380,\n            y_min: -196,\n            y_max: 1037,\n            ha: 1233,\n            o: 'm 1028 -282 b 1057 -245 1045 -282 1053 -261 b 1060 -203 1060 -232 1060 -217 b 1063 9 1060 -132 1061 -62 b 1390 194 1192 22 1303 81 b 1531 543 1467 298 1512 415 b 1532 556 1531 547 1532 552 b 1904 559 1656 557 1780 559 b 1950 582 1920 559 1941 569 b 1987 674 1970 609 1987 638 b 1984 698 1987 681 1986 690 b 1950 700 1973 698 1961 700 l 1941 700 l 1545 696 b 1535 776 1545 723 1541 749 b 1103 1113 1477 996 1326 1107 b 1080 1115 1096 1115 1087 1115 b 1081 1322 1080 1184 1080 1253 b 1079 1467 1083 1371 1081 1418 b 1061 1493 1079 1476 1080 1493 l 1060 1493 b 1028 1467 1044 1490 1031 1485 b 1020 1403 1025 1446 1020 1424 b 1017 1110 1020 1305 1018 1208 l 962 1106 b 569 914 808 1087 671 1035 b 451 683 510 844 472 766 l 161 678 b 118 680 148 678 132 680 b 79 670 101 680 86 678 b 0 544 48 636 29 592 l 37 544 l 429 549 b 428 518 428 539 428 528 b 488 285 428 435 458 360 b 681 81 526 192 593 124 b 946 9 763 40 854 19 b 1008 6 966 7 988 6 b 1005 -137 1008 -42 1005 -89 b 1012 -243 1005 -173 1005 -209 b 1028 -282 1015 -258 1011 -282 z m 1074 690 b 1079 935 1077 772 1077 852 b 1326 855 1166 932 1250 909 b 1446 694 1385 814 1426 759 b 1269 693 1387 694 1328 693 b 1074 690 1204 693 1139 691 z m 577 684 b 766 874 618 763 678 828 b 989 932 837 912 913 923 b 1015 933 998 932 1007 933 b 1014 822 1015 896 1014 860 b 1011 688 1012 791 1012 743 z m 1067 184 b 1071 553 1070 307 1068 429 b 1439 556 1194 553 1316 554 b 1437 554 1439 554 1437 554 b 1341 337 1413 478 1387 402 b 1119 192 1286 261 1211 212 b 1067 184 1102 189 1084 186 z m 1008 180 b 660 264 886 181 770 212 b 524 471 570 305 524 374 b 528 524 524 488 526 505 l 533 549 b 792 552 619 550 706 550 b 1009 553 865 553 937 552 b 1008 180 1009 428 1008 288 z',\n        },\n        gClef: {\n            x_min: 0,\n            x_max: 664,\n            y_min: -559,\n            y_max: 1009,\n            ha: 1568,\n            o: 'm 343 -805 b 366 -801 350 -805 357 -804 b 409 -773 383 -795 397 -786 b 582 -328 528 -648 577 -497 b 583 -294 582 -315 583 -294 b 612 -279 583 -294 603 -282 b 747 -197 660 -256 706 -230 b 949 143 857 -109 920 10 b 956 206 955 164 956 186 b 791 384 956 297 906 363 b 704 393 762 390 733 393 b 498 336 632 393 563 374 b 481 325 490 331 481 325 l 444 465 b 442 485 442 472 442 485 b 609 880 442 485 589 746 b 619 996 616 919 619 958 b 613 1084 619 1027 618 1056 b 534 1387 599 1188 560 1286 b 482 1453 527 1417 517 1453 b 422 1407 456 1453 438 1428 b 305 1063 348 1305 312 1188 b 304 1002 304 1043 304 1022 b 338 654 304 886 323 769 b 343 629 338 645 341 636 b 144 356 278 537 206 451 b 23 144 101 288 53 220 b 0 20 7 107 0 63 b 82 -210 0 -69 30 -160 b 207 -288 112 -239 160 -271 b 410 -328 274 -312 340 -328 b 474 -324 431 -328 452 -327 l 491 -321 b 491 -341 491 -321 492 -334 b 402 -585 475 -428 454 -513 b 294 -668 374 -622 348 -664 b 271 -693 278 -670 271 -680 b 274 -708 271 -698 272 -703 b 302 -775 282 -730 292 -753 b 343 -805 311 -795 325 -805 z m 400 717 b 382 922 389 786 382 854 b 481 1286 382 1047 408 1169 b 507 1125 498 1233 507 1179 b 500 1040 507 1097 504 1068 b 400 717 481 927 455 818 z m 252 -135 b 196 -121 232 -134 215 -127 b 117 -69 158 -108 127 -94 b 111 -32 112 -58 111 -45 b 117 19 111 -16 114 1 b 130 56 118 27 127 52 b 324 337 186 156 253 246 l 384 416 l 395 384 b 416 291 406 348 416 291 b 350 213 416 291 376 239 b 243 -42 278 143 243 55 b 251 -117 243 -66 246 -91 b 252 -135 252 -122 252 -127 z m 563 -91 b 510 168 552 3 530 78 b 513 192 508 179 508 186 b 624 202 550 199 586 202 b 730 192 660 202 694 199 b 850 141 773 183 816 176 b 858 134 852 138 855 135 b 595 -121 801 19 716 -68 l 569 -131 z m 410 -160 b 311 -147 360 -160 311 -147 b 307 -98 311 -147 307 -127 b 314 -33 307 -79 308 -56 b 429 131 328 36 377 85 b 441 138 433 135 438 138 b 449 122 446 138 448 132 b 490 -131 462 37 484 -46 b 490 -153 491 -140 490 -153 b 410 -160 490 -153 452 -163 z',\n        },\n        cClef: {\n            x_min: 0,\n            x_max: 731,\n            y_min: -543,\n            y_max: 543,\n            ha: 1086,\n            o: 'm 131 -782 b 141 -755 138 -782 140 -773 b 147 -490 143 -667 145 -577 b 160 207 150 -258 153 -24 b 168 618 164 344 158 481 b 81 768 173 690 132 732 b 45 782 66 778 55 782 b 3 740 26 782 13 768 b 0 724 1 736 0 730 l 1 710 b 4 596 4 672 4 634 l 4 382 b 9 102 4 288 4 196 b 17 -301 13 -32 10 -166 l 17 -672 b 50 -736 17 -701 27 -720 b 109 -772 69 -749 91 -759 b 131 -782 120 -778 127 -782 z m 615 -770 b 881 -684 710 -770 801 -739 b 1020 -395 986 -612 1020 -510 b 1017 -334 1020 -374 1018 -354 b 769 -62 1007 -209 896 -75 b 746 -60 762 -60 755 -60 b 639 -73 710 -60 675 -69 b 524 -109 598 -79 560 -92 b 528 -36 526 -85 528 -60 b 527 -4 528 -26 528 -14 b 528 39 527 10 528 24 b 526 99 528 59 527 79 b 592 94 549 95 570 94 b 648 99 611 94 629 95 b 912 157 744 94 844 117 b 1053 377 1009 215 1053 284 b 1050 425 1053 393 1053 409 b 914 665 1037 521 986 602 b 717 753 855 717 791 753 b 626 734 688 753 658 747 l 462 665 b 347 500 374 628 347 580 b 350 449 347 484 348 468 b 392 419 353 428 367 416 b 492 438 425 425 459 428 b 541 498 524 448 541 468 b 540 514 541 503 541 508 b 537 546 537 524 537 536 b 573 639 537 580 550 611 b 606 657 582 649 593 657 l 609 657 b 716 622 647 652 684 647 b 834 372 801 556 834 469 b 831 323 834 356 832 338 b 743 187 825 266 795 217 b 710 176 732 180 720 176 b 694 179 704 176 700 177 b 527 223 638 193 582 206 b 495 229 516 228 505 229 b 454 220 481 229 468 225 b 395 189 432 213 415 200 b 363 180 384 186 374 181 b 348 168 356 179 348 176 b 340 161 343 167 340 164 b 347 150 340 157 343 154 b 356 147 348 148 353 147 b 364 92 361 130 363 111 b 369 -37 367 49 369 6 b 363 -154 369 -76 367 -115 b 357 -236 360 -183 357 -210 b 376 -264 357 -253 361 -259 b 456 -289 402 -284 429 -289 b 521 -282 478 -289 500 -285 b 549 -255 537 -279 546 -271 b 598 -177 556 -225 577 -202 b 622 -164 605 -168 613 -164 b 636 -167 626 -164 631 -166 b 749 -225 678 -177 714 -199 b 848 -405 814 -276 848 -337 b 824 -507 848 -436 840 -471 b 657 -657 792 -582 730 -625 b 608 -668 638 -664 622 -668 b 534 -602 572 -668 547 -645 b 513 -575 530 -589 523 -575 b 507 -576 510 -575 508 -575 b 478 -582 497 -580 488 -582 b 405 -570 454 -582 428 -570 b 389 -572 399 -570 395 -570 l 363 -572 b 321 -575 348 -572 333 -569 l 321 631 b 323 662 323 641 323 652 b 315 716 323 681 321 698 b 304 736 314 723 317 736 l 302 736 b 281 716 294 734 285 729 b 275 665 276 700 275 683 l 275 382 b 276 99 275 288 275 193 b 279 -170 278 10 276 -81 b 284 -399 282 -246 284 -323 b 282 -629 284 -475 282 -553 b 289 -721 282 -660 289 -690 b 300 -736 289 -727 291 -736 b 312 -724 307 -736 310 -730 b 321 -667 323 -706 321 -687 l 321 -632 l 328 -644 l 340 -657 b 510 -757 386 -707 445 -740 b 615 -770 546 -766 580 -770 z',\n        },\n        fClef: {\n            x_min: 0,\n            x_max: 776,\n            y_min: -496,\n            y_max: 216,\n            ha: 712,\n            o: 'm 402 -706 b 804 -405 592 -678 716 -566 b 876 -53 861 -298 874 -183 b 868 33 876 -32 873 1 b 560 311 845 217 723 311 b 524 310 549 311 536 311 b 131 134 373 297 239 242 b 17 -29 84 86 37 39 b 9 -89 12 -50 9 -71 b 112 -238 9 -154 43 -206 b 124 -243 117 -239 120 -242 b 186 -261 145 -255 166 -261 b 268 -228 215 -261 242 -249 b 351 -59 325 -181 351 -124 b 343 10 351 -36 348 -13 b 340 36 341 19 340 27 b 409 105 340 75 363 102 b 441 107 420 107 431 107 b 624 36 510 107 573 86 b 744 -200 688 -27 724 -109 b 747 -230 747 -210 747 -222 b 717 -323 747 -264 736 -292 b 608 -445 688 -370 654 -410 b 307 -541 518 -513 415 -541 l 213 -541 b 39 -521 154 -541 96 -539 b 0 -552 17 -514 0 -531 b 1 -564 0 -556 0 -560 b 17 -611 6 -580 10 -596 b 101 -694 35 -648 50 -684 b 288 -714 164 -707 225 -714 b 402 -706 325 -714 363 -711 z m 1018 92 b 1080 118 1041 91 1068 96 b 1117 219 1099 150 1117 180 b 1113 252 1117 229 1116 240 b 1045 288 1102 297 1068 276 b 1017 262 1028 297 1024 274 b 984 124 989 220 996 170 b 1008 91 979 108 986 91 z m 972 -281 b 1070 -148 1024 -279 1070 -210 b 1025 -105 1070 -105 1045 -112 b 989 -127 1004 -96 998 -114 b 949 -249 963 -164 963 -209 b 969 -281 943 -265 949 -281 z',\n        },\n        unpitchedPercussionClef1: {\n            x_min: 0,\n            x_max: 379.13761966945304,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 481 -360 b 507 -357 491 -360 500 -360 b 546 -295 541 -346 547 -325 b 536 79 543 -170 540 -46 b 523 311 533 157 534 235 b 475 359 518 340 508 359 b 425 360 459 359 442 360 b 400 359 416 360 409 360 b 337 294 348 353 340 347 l 337 -73 b 336 -264 337 -137 337 -200 b 343 -294 336 -274 338 -284 b 481 -360 359 -330 431 -360 z m 144 -341 b 207 -320 167 -341 189 -331 b 217 -301 215 -315 217 -308 b 210 -262 217 -289 210 -275 b 228 187 212 -112 209 37 b 228 287 228 220 229 253 b 174 353 228 336 222 343 b 120 359 157 357 138 359 b 48 357 96 359 72 356 b 17 323 29 357 19 344 b 7 120 16 255 9 187 b 6 -109 6 43 6 -33 l 6 -204 b 0 -251 6 -220 0 -235 b 3 -269 0 -256 0 -262 b 127 -340 24 -330 79 -328 b 144 -341 132 -341 138 -341 z',\n        },\n        '6stringTabClef': {\n            x_min: 0,\n            x_max: 438,\n            y_min: -768,\n            y_max: 767,\n            ha: 1535,\n            o: 'm 369 438 b 374 439 370 438 372 438 b 384 462 383 444 384 452 l 384 474 b 390 697 386 547 390 622 b 373 1002 390 799 390 901 l 533 1002 b 560 1001 541 1004 552 1001 b 573 1007 567 1001 572 1002 b 546 1050 579 1025 559 1038 b 536 1056 543 1053 539 1053 b 324 1104 472 1102 397 1104 b 72 1090 238 1104 154 1099 b 55 1093 66 1090 60 1092 b 37 1073 46 1093 37 1089 b 60 1045 37 1061 48 1051 b 203 1001 105 1022 151 1001 b 233 1004 213 1001 223 1002 b 246 1005 238 1004 243 1005 b 272 975 264 1005 272 996 l 272 965 b 258 596 264 842 265 719 b 315 474 253 540 272 504 l 343 455 b 369 438 351 448 357 438 z m 114 -320 b 127 -304 120 -320 124 -315 b 171 -174 141 -261 158 -219 b 222 -135 179 -147 196 -137 b 426 -122 289 -131 359 -128 b 498 -164 462 -120 482 -127 b 628 -301 521 -226 575 -264 b 631 -288 631 -295 631 -291 b 628 -269 631 -281 629 -276 b 569 -134 616 -220 589 -179 b 408 225 514 -14 462 107 b 314 357 384 274 351 318 b 278 380 298 372 288 379 b 251 351 268 380 261 372 b 4 -209 156 171 75 -17 b 0 -228 1 -215 0 -222 b 19 -258 0 -240 7 -249 b 102 -314 45 -279 75 -294 b 114 -320 107 -318 111 -320 z m 425 6 b 360 20 403 17 382 20 b 274 14 331 20 302 14 l 246 14 l 340 206 b 425 6 369 137 395 75 z m 245 -1106 b 281 -1104 256 -1106 269 -1106 b 511 -888 400 -1094 511 -1035 b 454 -688 511 -814 504 -744 b 448 -678 449 -685 448 -681 b 454 -667 448 -675 449 -671 b 504 -497 503 -619 507 -559 b 324 -288 500 -383 436 -308 b 295 -287 314 -287 304 -287 l 282 -287 b 115 -330 223 -287 168 -307 b 94 -366 102 -336 94 -348 l 94 -370 b 96 -435 96 -392 96 -413 b 73 -858 89 -576 71 -717 b 78 -919 73 -878 78 -899 b 72 -950 78 -930 76 -940 b 63 -992 66 -965 63 -978 b 66 -1015 63 -999 65 -1008 b 173 -1104 84 -1106 84 -1106 b 245 -1106 197 -1104 220 -1104 z m 161 -622 b 147 -618 156 -622 151 -621 b 140 -600 141 -612 140 -606 b 144 -564 140 -589 144 -575 b 143 -554 144 -560 144 -557 l 143 -546 b 220 -451 144 -467 143 -465 b 278 -445 239 -446 259 -444 b 418 -497 328 -445 376 -461 b 429 -516 426 -504 429 -510 b 415 -533 429 -521 423 -527 b 219 -608 357 -579 287 -590 b 215 -609 217 -608 216 -609 b 161 -622 197 -609 177 -622 z m 154 -953 b 130 -933 135 -953 130 -948 l 130 -865 l 128 -865 b 135 -788 130 -838 124 -808 b 203 -769 145 -769 180 -776 b 259 -762 223 -765 242 -762 b 441 -852 330 -762 386 -805 b 449 -867 446 -858 449 -863 b 436 -884 449 -874 444 -878 b 318 -942 402 -914 363 -935 b 154 -953 264 -950 209 -953 z',\n        },\n        timeSig0: {\n            x_min: 20,\n            x_max: 513,\n            y_min: -358.159536277652,\n            y_max: 359,\n            ha: 717.159536277652,\n            o: 'm 341 -516 b 420 -510 367 -516 395 -514 b 675 -338 533 -494 622 -448 b 737 -92 716 -256 734 -171 b 739 -35 739 -73 739 -53 b 680 305 739 86 720 207 b 400 517 622 449 537 517 b 337 514 380 517 359 517 b 289 507 321 511 305 513 b 91 317 192 477 127 412 b 29 9 50 212 29 108 b 217 -458 29 -157 88 -312 b 341 -516 251 -494 291 -518 z m 412 -452 b 359 -425 393 -452 376 -444 b 187 14 242 -301 179 -158 b 268 334 193 127 212 235 b 387 448 295 383 330 428 b 406 452 395 451 400 452 b 428 444 413 452 420 449 b 517 324 471 413 497 372 b 586 -29 560 222 586 86 b 556 -271 586 -112 585 -193 b 468 -422 536 -327 508 -377 b 412 -452 449 -442 431 -452 z',\n        },\n        timeSig1: {\n            x_min: 20,\n            x_max: 283,\n            y_min: -364,\n            y_max: 366,\n            ha: 730,\n            o: 'm 264 -524 b 357 -510 297 -524 325 -516 b 374 -490 369 -508 374 -501 b 380 -438 376 -472 380 -455 l 406 246 b 408 301 408 265 408 282 b 400 445 408 348 405 396 b 288 527 395 491 338 527 b 253 520 276 527 264 526 b 240 508 249 517 245 513 b 49 409 192 445 127 413 b 29 396 33 408 29 403 b 32 380 29 392 30 386 b 59 363 36 366 49 364 b 164 348 95 356 130 348 b 222 357 183 348 203 351 b 238 361 228 360 233 360 b 252 334 248 361 252 353 b 243 59 252 242 249 150 b 219 -490 229 -124 233 -307 b 264 -524 217 -516 232 -524 z',\n        },\n        timeSig2: {\n            x_min: 20,\n            x_max: 660.4636303241031,\n            y_min: -378.7201231608281,\n            y_max: 382,\n            ha: 760.720123160828,\n            o: 'm 99 -543 b 130 -533 111 -550 121 -540 b 255 -448 168 -501 213 -475 b 338 -425 282 -431 310 -425 b 392 -431 356 -425 374 -426 b 485 -462 423 -438 454 -451 b 648 -497 540 -482 595 -497 b 834 -441 711 -497 773 -480 b 950 -242 906 -395 958 -334 b 942 -210 950 -230 950 -215 b 912 -220 932 -204 920 -213 b 861 -264 894 -235 877 -248 b 775 -317 835 -289 808 -305 b 675 -334 742 -328 708 -334 b 510 -295 619 -334 563 -318 b 372 -264 465 -278 420 -264 b 305 -272 350 -264 328 -266 b 331 -242 318 -256 324 -249 b 490 -73 386 -187 438 -131 b 675 340 595 43 664 180 b 677 369 677 350 677 360 b 556 536 677 461 638 508 b 468 550 526 546 497 550 b 297 508 409 550 353 533 b 111 354 220 475 168 412 b 29 197 65 308 29 261 b 32 164 29 187 29 176 b 29 140 33 157 29 147 b 43 125 29 132 32 125 b 73 147 55 125 65 138 b 86 163 79 153 82 158 b 238 320 134 219 183 272 b 425 389 292 367 360 389 b 575 341 480 389 531 373 b 606 298 590 330 606 317 b 600 278 606 292 603 285 b 501 107 576 217 544 158 b 304 -104 439 33 372 -35 b 111 -356 230 -180 167 -265 b 84 -446 92 -386 84 -415 b 86 -481 84 -458 85 -469 b 88 -514 88 -491 88 -503 b 99 -543 89 -526 91 -537 z',\n        },\n        timeSig3: {\n            x_min: 19.824321427094187,\n            x_max: 540,\n            y_min: -392,\n            y_max: 392,\n            ha: 784,\n            o: 'm 216 -540 b 354 -564 264 -556 310 -564 b 605 -465 445 -564 530 -530 b 729 -161 697 -383 729 -275 b 724 -82 729 -135 727 -108 b 589 95 716 -1 670 62 b 523 114 567 102 546 108 b 750 418 606 213 677 315 b 778 503 769 444 778 472 b 773 540 778 514 776 527 b 750 564 769 557 762 564 b 736 562 746 564 742 563 b 641 552 704 553 672 552 b 402 554 562 552 481 554 l 346 554 b 84 546 258 554 170 554 b 36 501 55 543 40 531 b 29 412 30 472 32 442 b 52 384 27 393 32 384 l 56 384 b 210 392 107 389 158 392 l 602 392 b 354 108 523 285 445 192 b 246 -65 300 58 246 12 b 252 -108 246 -78 248 -92 l 252 -111 b 264 -141 251 -122 251 -135 b 291 -132 274 -145 284 -140 b 425 -72 328 -95 377 -84 b 475 -65 442 -68 459 -65 b 592 -108 517 -65 557 -79 b 645 -179 615 -125 645 -147 b 642 -194 645 -184 644 -189 b 485 -376 616 -278 569 -344 b 361 -399 444 -392 402 -399 b 151 -340 289 -399 219 -376 b 88 -275 122 -323 98 -310 b 71 -249 86 -268 85 -249 b 63 -251 68 -249 66 -249 b 36 -288 48 -255 36 -266 b 55 -423 33 -336 45 -377 b 101 -482 60 -448 78 -468 b 216 -540 138 -504 174 -526 z',\n        },\n        timeSig4: {\n            x_min: 20,\n            x_max: 633.0785282750762,\n            y_min: -489.59088556716864,\n            y_max: 491.18559127100053,\n            ha: 980.7764768381692,\n            o: 'm 608 -704 b 641 -684 622 -708 634 -696 b 667 -602 660 -660 662 -631 b 685 -190 683 -465 680 -327 l 685 -176 b 831 -127 736 -166 783 -148 b 912 0 901 -94 913 -76 b 886 53 912 36 904 52 b 848 40 877 53 864 49 l 838 36 b 687 -13 789 14 739 -3 b 681 177 687 50 684 114 b 672 338 678 230 677 285 b 654 373 671 350 672 373 b 622 340 636 373 624 361 b 615 262 621 314 613 288 b 619 -22 616 167 619 72 b 569 -22 602 -23 585 -23 b 305 -3 481 -16 395 -1 b 210 -9 274 -3 242 -4 b 301 163 242 52 268 108 b 513 552 377 288 459 412 b 536 652 526 585 536 618 b 533 683 536 662 534 672 b 520 707 531 691 531 707 b 487 693 508 708 494 704 b 474 668 482 684 477 677 b 384 490 454 603 418 547 b 253 281 343 419 295 351 b 73 -13 194 181 145 78 b 29 -108 50 -42 29 -72 b 37 -147 29 -121 32 -134 b 50 -186 43 -160 50 -173 b 68 -216 52 -207 56 -215 b 92 -207 73 -216 82 -213 b 288 -166 156 -180 220 -166 b 556 -186 377 -166 467 -180 b 586 -189 566 -187 576 -187 b 616 -186 596 -189 606 -189 b 606 -432 613 -268 612 -350 b 596 -625 603 -495 596 -559 b 598 -670 596 -641 596 -655 b 608 -704 598 -683 596 -700 z',\n        },\n        timeSig5: {\n            x_min: 19.663871085403297,\n            x_max: 583,\n            y_min: -389,\n            y_max: 389,\n            ha: 778,\n            o: 'm 132 -536 b 249 -560 168 -553 209 -559 b 507 -462 351 -560 454 -514 b 677 -183 588 -384 642 -289 b 694 -85 688 -150 694 -117 b 540 138 694 12 642 94 b 422 173 501 154 462 167 b 400 187 408 174 400 177 b 405 202 400 190 402 196 b 428 284 416 228 426 255 b 469 312 431 307 442 312 b 757 372 569 312 662 343 b 840 490 821 392 840 432 b 812 560 840 540 834 560 b 763 546 801 560 785 556 b 757 543 762 546 759 544 b 465 484 665 505 570 484 b 396 484 452 484 425 487 b 353 454 377 482 366 474 b 281 300 323 405 304 351 b 245 164 262 255 245 212 b 246 144 245 158 246 151 b 233 63 249 115 243 89 b 225 35 228 50 225 40 b 264 14 225 22 236 19 b 445 -26 325 7 387 0 b 569 -151 501 -52 547 -89 b 575 -180 573 -161 575 -170 b 527 -275 575 -217 547 -245 b 347 -367 484 -334 419 -367 b 261 -351 318 -367 289 -363 b 95 -300 206 -333 154 -307 b 55 -321 73 -297 65 -302 b 29 -468 29 -367 40 -419 b 56 -505 26 -482 36 -500 b 132 -536 82 -514 108 -524 z',\n        },\n        timeSig6: {\n            x_min: 20,\n            x_max: 565,\n            y_min: -363,\n            y_max: 363,\n            ha: 726,\n            o: 'm 390 -518 b 621 -458 469 -507 549 -494 b 814 -134 753 -390 814 -281 b 652 59 814 -16 750 58 b 580 48 629 59 606 55 b 233 -334 392 -9 276 -138 b 115 -228 181 -314 143 -278 b 98 -160 104 -206 98 -183 b 107 -109 98 -144 101 -127 b 167 37 124 -59 145 -12 b 508 340 236 189 347 292 b 575 353 530 347 553 353 b 648 327 600 353 625 346 b 665 320 654 321 661 320 b 687 336 674 320 681 325 b 703 405 697 359 703 382 b 684 472 703 429 697 451 b 593 523 664 504 631 521 b 576 521 588 523 582 523 b 297 403 472 508 380 465 b 115 177 217 344 164 264 b 29 -121 60 82 29 -17 b 53 -278 29 -173 36 -225 b 226 -497 82 -374 131 -454 b 347 -523 265 -514 305 -523 b 390 -518 361 -523 376 -521 z m 351 -357 b 312 -351 337 -356 320 -363 b 325 -315 304 -340 320 -327 b 543 -120 373 -222 448 -158 b 622 -104 570 -108 596 -102 b 717 -132 655 -104 687 -112 b 740 -167 732 -143 740 -153 b 730 -196 740 -176 737 -184 b 563 -321 690 -258 634 -300 b 359 -357 497 -341 428 -354 z',\n        },\n        timeSig7: {\n            x_min: 20.3617407597707,\n            x_max: 592,\n            y_min: -345,\n            y_max: 345,\n            ha: 690,\n            o: 'm 253 -497 b 318 -485 276 -497 297 -487 b 366 -441 348 -482 360 -468 b 487 -104 390 -323 433 -210 b 835 403 580 82 701 246 b 852 436 847 416 852 428 b 815 467 852 451 840 461 b 762 474 798 471 779 474 b 674 445 732 474 701 465 b 603 410 652 431 628 420 b 383 360 533 379 459 360 b 200 435 315 360 249 382 b 88 494 168 469 131 485 b 66 497 81 495 73 497 b 33 484 52 497 39 492 b 50 436 22 469 39 451 b 295 310 114 360 199 324 b 406 301 331 304 369 301 b 593 324 468 301 530 308 b 585 307 589 314 588 310 b 265 -249 451 137 338 -46 b 207 -442 242 -312 223 -377 b 204 -462 206 -449 204 -456 b 253 -497 204 -487 220 -497 z',\n        },\n        timeSig8: {\n            x_min: 20,\n            x_max: 504.15101530718516,\n            y_min: -428,\n            y_max: 428,\n            ha: 856,\n            o: 'm 265 -616 b 289 -615 274 -616 281 -616 b 710 -271 492 -592 657 -485 b 726 -148 721 -229 727 -187 b 585 108 726 -48 687 42 b 572 127 576 114 573 120 b 576 144 572 132 575 138 b 598 301 590 196 598 249 b 586 413 598 338 593 376 b 356 616 559 531 467 616 b 233 582 317 616 275 606 b 29 233 101 505 29 384 b 104 9 29 153 46 72 b 189 -48 127 -16 160 -27 b 92 -158 141 -73 114 -114 b 37 -343 63 -217 50 -279 b 33 -390 35 -359 33 -374 b 265 -616 33 -524 148 -616 z m 258 105 b 124 148 215 105 167 117 b 96 196 105 163 96 177 b 99 217 96 202 96 209 b 197 384 120 281 151 337 b 350 451 242 429 297 451 b 516 364 412 451 472 422 b 530 331 523 354 530 343 l 530 327 l 530 320 b 468 151 520 261 507 200 b 419 122 455 135 442 125 b 258 105 370 117 320 105 z m 328 -438 b 158 -276 233 -436 160 -359 b 166 -239 158 -264 161 -252 b 230 -157 176 -203 202 -179 b 367 -72 274 -125 320 -98 b 448 -49 396 -56 423 -49 b 562 -118 491 -49 528 -72 b 611 -251 590 -157 611 -199 b 569 -341 611 -288 595 -318 b 328 -438 500 -402 416 -432 z',\n        },\n        timeSig9: {\n            x_min: 20,\n            x_max: 494,\n            y_min: -421,\n            y_max: 421,\n            ha: 842,\n            o: 'm 235 -606 b 361 -564 275 -606 318 -593 b 619 -229 487 -482 566 -366 b 706 127 664 -114 694 4 b 711 233 708 163 711 197 b 700 346 711 271 708 308 b 389 606 658 517 530 606 b 351 605 376 606 364 606 b 56 272 171 586 56 441 b 96 98 56 216 69 156 b 334 -53 144 -3 238 -53 b 544 36 408 -53 484 -24 b 652 176 586 78 622 124 b 631 71 645 141 639 105 b 467 -302 599 -63 562 -196 b 271 -442 412 -364 354 -422 b 225 -448 255 -446 239 -448 b 95 -305 148 -448 98 -395 b 89 -255 95 -288 94 -271 b 73 -233 86 -246 85 -233 b 52 -248 65 -233 56 -239 b 29 -317 42 -271 30 -291 b 49 -448 29 -361 40 -405 b 235 -606 69 -541 144 -606 z m 340 104 b 144 209 264 108 194 141 b 127 258 132 225 127 240 b 137 297 127 271 130 284 b 366 449 184 396 269 449 b 517 408 415 449 467 436 b 595 348 546 392 572 372 b 616 305 608 336 616 321 b 609 281 616 298 613 289 b 340 104 557 184 477 104 z',\n        },\n        timeSigCommon: {\n            x_min: 20,\n            x_max: 585,\n            y_min: -298,\n            y_max: 294.49658092772603,\n            ha: 592.496580927726,\n            o: 'm 444 -405 b 829 -45 626 -346 740 -207 b 842 26 842 -23 842 1 b 821 58 842 39 841 58 b 795 40 811 58 802 48 b 765 3 785 29 773 16 b 469 -223 690 -104 596 -183 b 354 -242 431 -235 392 -242 b 180 -177 292 -242 235 -223 b 135 -99 154 -157 140 -131 b 132 -59 134 -85 132 -72 b 141 7 132 -37 135 -16 b 449 274 189 160 297 243 b 477 278 459 276 468 276 b 546 203 517 278 539 253 b 517 157 550 177 533 166 b 485 143 507 153 497 143 l 482 143 b 467 148 478 143 472 144 b 374 183 438 170 406 181 b 264 118 333 183 292 161 b 238 48 246 92 238 69 b 261 -9 238 29 245 10 b 383 -73 287 -39 337 -73 b 412 -68 392 -73 402 -72 b 631 164 526 -27 586 59 b 649 252 644 193 649 222 b 636 328 649 278 645 304 b 504 423 615 400 579 429 b 242 318 408 415 317 387 b 29 -158 104 190 29 33 b 30 -176 29 -164 29 -170 b 115 -364 42 -246 52 -315 b 307 -429 177 -410 240 -429 b 444 -405 351 -429 397 -420 z',\n        },\n        timeSigCutCommon: {\n            x_min: 20,\n            x_max: 695,\n            y_min: -687.0379164869064,\n            y_max: 687,\n            ha: 1374.0379164869064,\n            o: 'm 564 -989 b 595 -945 585 -991 589 -963 l 599 -922 b 605 -628 600 -824 603 -726 l 609 -399 b 878 -251 706 -363 798 -320 b 996 -85 932 -204 976 -153 b 1001 -63 998 -78 1001 -71 b 989 -46 1001 -56 998 -49 b 978 -43 985 -45 982 -43 b 950 -59 968 -43 959 -49 b 733 -216 894 -132 815 -177 b 611 -259 694 -235 652 -249 b 616 -20 612 -179 615 -99 b 680 29 642 -7 665 9 b 698 43 685 36 690 40 b 870 251 792 82 840 160 b 877 294 874 265 877 279 b 818 410 877 338 855 382 b 683 458 779 442 730 448 b 625 468 664 462 644 465 l 625 514 b 638 958 626 662 636 811 b 626 989 638 979 635 989 b 603 981 621 989 613 986 b 422 840 534 945 481 888 b 412 805 412 832 413 818 b 426 713 410 773 420 743 b 445 678 429 690 435 678 b 474 691 452 678 461 683 b 563 755 503 710 530 732 b 564 724 564 740 564 733 b 559 469 563 639 560 554 b 462 454 526 469 494 464 b 112 143 302 399 199 281 b 33 -94 66 71 45 -10 b 29 -148 30 -112 29 -131 b 105 -351 29 -223 52 -291 b 359 -455 171 -426 258 -451 b 517 -431 409 -451 464 -446 l 539 -422 l 539 -477 b 533 -739 536 -563 539 -651 b 530 -824 531 -768 530 -795 b 546 -948 530 -865 533 -907 b 564 -989 552 -962 543 -989 z m 410 -288 b 193 -197 328 -288 253 -264 b 141 -60 160 -161 141 -108 b 157 6 141 -35 147 -12 b 259 158 189 58 217 112 b 438 291 311 215 364 266 b 528 305 468 301 498 305 b 554 304 537 305 546 304 b 553 212 554 274 554 242 b 426 115 498 199 446 164 b 416 68 419 99 416 84 b 425 12 416 49 420 30 b 474 -39 432 -17 448 -32 b 513 -43 487 -42 498 -43 b 547 -40 524 -43 536 -42 l 543 -272 b 461 -285 516 -278 488 -281 b 410 -288 444 -287 426 -288 z m 694 197 b 668 203 685 197 677 199 b 621 216 654 210 638 215 b 622 294 622 242 622 268 b 706 268 651 287 678 278 b 746 235 721 261 734 249 b 752 222 749 230 752 226 b 743 213 752 219 749 215 b 694 197 727 206 711 197 z',\n        },\n        timeSigPlus: {\n            x_min: 0,\n            x_max: 661,\n            y_min: -358,\n            y_max: 358,\n            ha: 716,\n            o: 'm 605 -516 b 629 -490 624 -516 629 -507 b 628 -475 629 -485 628 -481 b 613 -131 624 -405 616 -174 b 612 -96 612 -114 612 -96 l 647 -98 b 897 -115 730 -99 814 -109 b 940 -89 919 -117 935 -109 b 952 -24 946 -69 952 -46 b 948 9 952 -14 950 -3 b 912 39 942 26 933 37 b 609 60 822 48 609 60 b 616 392 609 60 608 291 b 567 488 619 436 605 467 b 511 516 550 498 531 514 b 498 511 507 516 503 514 b 478 446 475 501 480 469 b 467 150 474 348 469 249 b 465 59 465 121 465 59 l 372 49 b 73 14 272 36 173 24 b 49 13 65 13 56 13 b 0 -33 9 13 0 6 b 60 -141 0 -117 6 -140 b 112 -135 73 -141 91 -140 b 413 -102 213 -125 314 -112 b 464 -98 441 -99 464 -98 l 464 -145 b 477 -456 464 -249 468 -353 b 526 -510 478 -488 491 -507 b 589 -513 546 -511 569 -510 b 605 -516 595 -514 600 -516 z',\n        },\n        timeSigPlusSmall: {\n            x_min: 0,\n            x_max: 418,\n            y_min: -197,\n            y_max: 199,\n            ha: 396,\n            o: 'm 301 -284 b 330 -238 320 -284 324 -255 b 348 -46 350 -176 341 -111 b 374 -20 351 -27 356 -23 b 481 -17 409 -16 445 -17 b 566 -9 510 -17 537 -16 b 602 3 579 -7 602 -16 b 566 29 602 19 582 24 b 526 33 553 32 539 33 b 384 39 478 36 432 39 b 356 62 363 39 356 42 l 356 68 b 359 177 359 104 359 141 l 359 251 b 341 287 359 264 361 285 b 311 255 324 287 314 272 b 310 228 311 246 310 236 l 301 69 b 275 39 301 49 295 39 l 271 39 b 210 40 251 40 230 40 b 167 39 196 40 181 40 b 89 40 141 37 115 40 b 24 30 68 40 46 37 b 0 17 17 27 0 30 l 0 13 b 27 -17 3 0 7 -13 b 91 -22 49 -22 71 -22 b 153 -22 115 -22 137 -20 l 275 -22 b 295 -40 289 -22 295 -27 l 295 -48 b 288 -235 288 -109 287 -171 b 287 -264 288 -243 287 -253 b 301 -284 287 -275 289 -284 z',\n        },\n        timeSigMinus: {\n            x_min: 0,\n            x_max: 662,\n            y_min: -54,\n            y_max: 55,\n            ha: 109,\n            o: 'm 39 -78 b 49 -76 42 -78 45 -76 b 452 -75 94 -75 272 -75 b 861 -76 632 -75 814 -76 b 953 -20 927 -79 953 -66 b 948 27 953 -7 950 9 b 946 37 948 30 948 35 b 896 79 940 63 929 79 b 471 78 827 78 648 78 l 42 78 b 0 37 14 78 0 69 b 23 -66 0 0 17 -32 b 39 -78 24 -75 32 -76 z',\n        },\n        timeSigParensRight: {\n            x_min: 0,\n            x_max: 274.26483738379414,\n            y_min: -722.6326530612245,\n            y_max: 725,\n            ha: 1447.6326530612246,\n            o: 'm 37 -1038 b 69 -1031 48 -1044 59 -1038 b 88 -1015 76 -1027 82 -1021 b 164 -886 120 -976 147 -933 b 333 -351 233 -711 292 -534 b 395 118 366 -204 399 -59 b 389 245 392 144 392 194 b 120 996 369 521 265 766 b 68 1044 99 1030 84 1044 b 19 988 50 1044 36 1024 b 0 922 7 965 0 945 b 20 858 0 901 6 881 b 259 215 141 660 236 449 b 271 -1 266 143 271 71 b 252 -239 271 -82 265 -161 b 148 -667 228 -384 183 -524 b 39 -1009 120 -785 66 -893 b 33 -1031 37 -1017 33 -1024 b 37 -1038 33 -1034 35 -1037 z',\n        },\n        timeSigParensRightSmall: {\n            x_min: 0,\n            x_max: 154.4025307335204,\n            y_min: -422,\n            y_max: 422,\n            ha: 844,\n            o: 'm 43 -608 b 60 -598 48 -608 53 -605 b 117 -511 82 -572 102 -543 b 222 23 193 -350 219 -177 b 213 166 225 55 216 109 b 115 531 206 294 174 416 b 45 603 99 562 76 588 b 30 608 39 606 35 608 b 10 598 23 608 17 603 b 0 546 3 590 0 570 b 23 451 0 507 9 458 b 102 351 66 429 84 390 b 167 42 150 252 167 148 b 163 -49 167 12 166 -19 b 35 -449 151 -192 121 -330 b 14 -504 22 -467 14 -485 b 17 -527 14 -511 16 -520 l 30 -590 b 43 -608 33 -603 37 -608 z',\n        },\n        timeSigParensLeft: {\n            x_min: 0.5555555555555556,\n            x_max: 399.6216117372966,\n            y_min: -728,\n            y_max: 728,\n            ha: 1456,\n            o: 'm 562 -1048 b 573 -1043 566 -1048 570 -1047 b 553 -988 582 -1025 564 -1004 b 472 -884 527 -952 497 -920 b 210 -354 366 -717 275 -541 b 148 -6 170 -240 148 -124 b 160 148 148 45 153 96 b 315 678 189 331 242 508 b 431 901 350 755 380 834 b 459 950 451 926 461 939 b 435 995 459 962 451 972 b 364 1048 405 1034 383 1048 b 305 996 343 1048 325 1028 b 127 624 226 881 174 753 b 1 30 56 432 9 235 b 1 -32 1 9 0 -12 b 180 -629 13 -245 92 -438 b 363 -936 230 -739 298 -835 b 526 -1041 402 -995 448 -1041 b 562 -1048 537 -1040 552 -1048 z',\n        },\n        timeSigParensLeftSmall: {\n            x_min: 0,\n            x_max: 173.45497224367904,\n            y_min: -405,\n            y_max: 404,\n            ha: 809,\n            o: 'm 197 -583 b 222 -553 212 -582 219 -566 b 229 -497 226 -534 229 -516 b 213 -425 229 -472 225 -448 b 102 -177 173 -344 132 -262 b 62 30 78 -111 58 -42 b 91 183 66 82 75 134 b 215 426 118 271 156 356 b 249 552 246 465 252 505 b 230 582 249 563 246 582 b 197 563 219 582 206 576 b 71 356 144 500 105 429 b 0 50 26 259 3 158 b 13 -112 4 -3 7 -58 b 176 -559 29 -275 105 -416 b 196 -583 180 -569 186 -583 z',\n        },\n        noteheadDoubleWhole: {\n            x_min: -0.4444444444444444,\n            x_max: 614.1875,\n            y_min: -223.03296670127517,\n            y_max: 223,\n            ha: 446.0329667012752,\n            o: 'm 35 -321 b 62 -266 58 -318 58 -288 l 62 -194 b 63 50 62 -114 63 -32 b 60 189 63 96 63 143 b 43 300 59 226 60 265 b 29 321 40 308 39 321 l 26 321 b 0 292 13 318 0 310 b 0 248 0 278 -1 262 b 6 147 4 215 6 181 b 4 48 6 114 4 81 b 6 0 4 32 6 16 b 7 -36 7 -12 7 -24 l 7 -52 b 6 -156 7 -86 6 -121 b 19 -275 6 -196 9 -236 b 35 -321 23 -291 16 -323 z m 847 -314 b 871 -288 860 -315 867 -300 b 884 -187 881 -255 886 -222 b 876 115 878 -86 876 14 b 877 255 876 161 876 209 b 868 291 877 268 873 279 b 855 304 867 301 863 304 b 844 301 852 304 848 304 b 822 265 825 292 822 278 b 824 251 822 259 822 255 b 822 170 822 225 822 197 l 822 -20 b 835 -284 827 -86 825 -186 b 847 -314 837 -295 835 -311 z m 757 -291 b 793 -171 796 -255 792 -212 b 795 -49 795 -131 795 -91 b 786 207 795 36 791 121 b 779 240 786 217 783 229 b 766 258 776 246 776 258 b 762 256 765 258 763 256 b 739 236 752 253 740 252 b 733 177 737 216 732 197 b 737 20 737 125 739 73 l 737 -107 b 740 -202 737 -138 739 -170 b 757 -291 740 -230 743 -261 z m 128 -261 b 144 -251 135 -264 141 -256 b 158 -203 156 -236 157 -220 b 161 -137 161 -181 161 -158 b 157 30 161 -81 157 -26 b 158 76 157 45 157 60 l 158 101 b 156 225 158 141 158 183 b 137 253 156 235 154 253 l 134 253 b 109 222 120 251 109 242 b 104 91 108 179 104 134 b 108 -58 104 42 109 -9 b 107 -105 108 -73 108 -89 b 105 -127 107 -112 107 -120 b 118 -245 105 -167 114 -204 b 128 -261 118 -252 121 -259 z m 488 -242 b 693 -79 595 -249 685 -166 l 693 -55 b 690 0 693 -36 691 -17 b 540 187 684 84 621 164 b 449 200 508 196 480 200 b 210 104 363 200 282 163 b 186 56 196 92 186 76 b 207 -82 186 9 192 -37 b 300 -204 225 -132 248 -181 b 488 -242 356 -229 415 -240 z m 490 -88 b 449 -86 477 -88 464 -88 b 287 -56 399 -85 341 -78 b 258 -33 275 -52 258 -48 b 282 -7 258 -20 272 -13 b 458 43 340 23 399 43 b 580 14 497 43 537 35 b 618 -20 606 1 619 -9 b 592 -58 618 -30 609 -42 b 490 -88 562 -82 528 -88 z',\n        },\n        noteheadWhole: {\n            x_min: 0,\n            x_max: 380.16649762501584,\n            y_min: -186.17102907059297,\n            y_max: 165,\n            ha: 351.17102907059297,\n            o: 'm 547 40 b 223 -268 543 -151 367 -259 b 102 -233 180 -271 143 -248 l 62 -216 b 0 -127 22 -197 0 -166 b 6 -91 0 -115 1 -104 b 122 141 33 -9 69 71 b 327 238 170 204 249 238 b 514 158 397 238 467 212 b 547 40 544 125 549 84 z m 248 -107 b 384 -63 295 -102 341 -88 b 426 -23 402 -53 415 -40 b 435 3 432 -14 435 -6 b 413 32 435 14 428 24 b 301 73 376 49 343 73 b 272 69 291 73 282 72 b 121 -35 207 53 157 20 b 111 -58 117 -42 111 -50 b 125 -75 111 -65 115 -71 b 248 -107 164 -89 202 -107 z',\n        },\n        noteheadHalf: {\n            x_min: 0,\n            x_max: 334,\n            y_min: -174,\n            y_max: 175,\n            ha: 349,\n            o: 'm 480 56 b 167 -251 478 -115 331 -251 b 94 -242 143 -251 118 -248 b 9 -141 43 -229 20 -192 b 0 -68 3 -115 0 -91 b 284 249 0 95 127 200 b 304 252 289 251 297 252 b 481 78 374 252 481 170 b 480 56 481 71 481 63 z m 213 -102 b 399 6 274 -81 341 -48 b 402 17 400 7 402 13 b 399 27 402 22 400 26 b 311 94 373 53 353 88 b 292 95 305 95 300 95 b 130 27 230 95 181 55 b 69 -62 98 9 62 -29 b 161 -98 76 -98 128 -91 b 213 -102 174 -101 186 -101 z',\n        },\n        noteheadBlack: {\n            x_min: 0,\n            x_max: 334.04644433966797,\n            y_min: -164,\n            y_max: 164,\n            ha: 328,\n            o: 'm 112 -233 b 141 -236 122 -235 131 -236 b 481 104 279 -236 485 -48 b 403 222 477 141 478 192 b 334 236 382 232 359 236 b 1 -59 180 236 13 59 b 0 -85 1 -68 0 -76 b 112 -233 0 -157 32 -215 z',\n        },\n        noteheadXWhole: {\n            x_min: 0,\n            x_max: 506,\n            y_min: -143.0823320899293,\n            y_max: 144,\n            ha: 287.0823320899293,\n            o: 'm 53 -206 b 219 -163 117 -207 170 -196 b 314 -102 249 -141 282 -122 b 377 -63 334 -89 356 -76 b 514 -161 422 -96 468 -128 b 576 -196 534 -174 552 -196 b 589 -193 580 -196 585 -196 b 688 -174 625 -194 657 -181 b 711 -158 698 -171 711 -173 b 696 -143 711 -151 701 -147 b 503 -9 632 -98 567 -52 l 485 4 b 704 145 559 49 634 95 b 729 164 711 150 729 151 l 729 168 b 696 196 726 183 710 193 b 621 207 671 202 645 207 b 528 177 589 207 557 200 b 373 76 480 140 426 108 b 246 164 330 104 287 132 b 122 206 207 193 167 203 b 66 192 102 207 72 207 b 99 147 58 173 85 158 b 274 14 157 102 215 58 b 16 -164 184 -42 96 -98 b 0 -179 12 -168 0 -170 b 1 -183 0 -180 0 -183 b 26 -204 6 -193 12 -204 b 53 -206 37 -206 49 -206 z m 611 -177 b 376 -9 530 -118 452 -63 l 164 -143 b 104 -164 147 -154 130 -164 b 82 -161 96 -164 89 -164 b 230 -65 137 -125 183 -95 l 347 12 b 327 26 341 16 334 22 l 196 121 b 163 147 184 128 173 137 b 140 173 154 154 140 163 b 143 180 140 176 141 177 b 179 166 154 194 167 174 l 372 27 l 566 153 b 613 171 580 161 596 170 b 635 160 624 171 635 174 b 621 147 635 153 626 150 l 429 24 b 400 6 419 19 409 13 b 569 -117 456 -35 513 -75 b 611 -177 588 -130 608 -143 z',\n        },\n        noteheadXHalf: {\n            x_min: 0,\n            x_max: 421,\n            y_min: -145.51844828189743,\n            y_max: 151,\n            ha: 296.51844828189746,\n            o: 'm 490 -209 b 539 -207 505 -207 521 -207 b 606 -209 560 -207 583 -209 b 598 -196 602 -203 600 -199 l 406 -19 l 540 130 b 547 144 546 135 547 140 b 536 156 547 148 543 153 b 488 192 518 166 503 176 b 416 217 471 209 444 217 b 323 180 380 217 344 204 l 264 115 b 239 138 256 122 248 131 b 33 197 180 196 108 200 b 3 186 23 197 6 193 b 19 154 -1 174 10 163 b 171 12 69 107 120 59 b 19 -157 120 -45 69 -101 b 0 -177 14 -163 0 -166 b 1 -181 0 -179 0 -180 b 39 -203 9 -197 22 -203 l 186 -203 b 197 -202 190 -202 193 -200 l 213 -202 b 262 -180 228 -202 246 -199 l 314 -122 b 490 -209 363 -170 412 -216 z m 435 -148 b 291 -30 379 -112 337 -69 l 213 -118 b 190 -137 207 -125 202 -137 b 145 -111 173 -130 154 -127 b 160 -79 137 -98 151 -88 b 238 16 184 -48 212 -16 b 141 99 204 43 173 72 l 124 117 b 115 132 121 121 115 127 b 118 137 115 134 117 137 b 141 132 127 147 135 138 l 253 36 b 347 150 285 75 315 112 b 370 164 354 160 363 163 b 403 145 382 164 393 156 b 416 127 412 140 416 132 b 405 102 416 118 412 111 l 307 -10 b 413 -105 343 -42 379 -73 b 435 -148 425 -115 436 -125 z',\n        },\n        noteheadXBlack: {\n            x_min: 0,\n            x_max: 289,\n            y_min: -156,\n            y_max: 157,\n            ha: 313,\n            o: 'm 23 -225 b 69 -204 40 -223 56 -219 b 137 -131 92 -180 115 -157 l 209 -50 b 377 -197 264 -101 321 -148 b 403 -210 384 -203 393 -210 l 408 -210 b 416 -192 416 -207 416 -199 l 416 -186 b 403 -148 416 -171 413 -158 b 344 -81 384 -125 367 -101 b 252 -1 312 -55 282 -29 b 377 157 297 49 340 101 b 402 202 387 170 402 187 b 395 217 402 207 400 213 b 376 226 389 223 382 226 b 334 192 360 226 346 204 b 206 42 289 143 248 94 b 96 161 167 81 131 120 b 60 193 86 174 76 189 b 33 206 52 196 42 206 b 22 199 29 206 26 204 b 10 173 14 190 10 181 b 22 147 10 166 14 157 b 148 7 62 98 104 52 b 164 -7 154 1 158 -3 b 10 -189 111 -66 55 -122 b 0 -212 6 -197 0 -203 b 1 -217 0 -213 0 -216 b 23 -225 4 -226 14 -222 z',\n        },\n        noteheadCircleX: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -179,\n            y_max: 175.12551922594866,\n            ha: 354.12551922594866,\n            o: 'm 99 -210 b 236 -258 137 -242 186 -258 b 418 -183 305 -258 374 -230 b 495 33 475 -120 495 -48 b 494 66 495 45 494 55 b 302 252 487 183 405 256 b 181 243 262 249 222 248 b 46 171 128 236 79 219 b 0 19 14 127 0 73 b 99 -210 0 -68 35 -156 z m 245 42 l 124 156 b 200 176 145 166 170 173 b 337 183 245 181 291 184 b 377 176 351 183 364 180 b 245 42 333 131 288 86 z m 392 -99 l 285 3 l 400 121 b 418 154 409 131 418 140 b 465 50 448 130 465 94 b 405 -112 462 -17 439 -73 z m 89 -120 b 48 0 56 -82 48 -42 b 89 112 48 35 59 76 b 109 101 96 111 102 108 l 210 7 l 187 -17 b 89 -120 151 -53 125 -82 z m 176 -183 b 127 -163 158 -179 141 -171 l 252 -32 l 372 -144 b 233 -189 334 -173 285 -189 b 176 -183 215 -189 196 -187 z',\n        },\n        noteheadTriangleUpWhole: {\n            x_min: 0,\n            x_max: 366,\n            y_min: -145,\n            y_max: 138,\n            ha: 283,\n            o: 'm 504 -209 b 527 -199 520 -209 527 -206 b 520 -180 527 -193 524 -187 b 459 -94 501 -151 480 -122 b 279 170 400 -6 341 82 b 242 199 266 190 253 199 b 206 167 230 199 219 189 b 10 -145 140 63 76 -42 b 0 -171 3 -156 0 -164 b 23 -200 0 -183 9 -192 b 55 -209 33 -206 45 -209 z m 202 -161 b 176 -137 183 -163 176 -156 b 187 -62 176 -111 179 -86 b 253 95 206 -10 228 42 b 337 -132 307 24 334 -49 b 311 -161 338 -153 334 -161 b 256 -160 294 -161 275 -160 b 202 -161 238 -160 220 -161 z',\n        },\n        noteheadTriangleUpHalf: {\n            x_min: 0,\n            x_max: 341.0833130378007,\n            y_min: -159,\n            y_max: 159,\n            ha: 318,\n            o: 'm 458 -226 b 478 -229 462 -223 469 -229 b 490 -222 482 -229 487 -228 b 477 -184 495 -207 484 -196 b 281 176 410 -65 346 56 b 238 225 269 194 261 213 b 225 229 232 226 228 228 b 209 215 217 229 213 225 b 4 -153 141 92 73 -30 b 0 -170 1 -158 0 -164 b 12 -189 0 -177 4 -183 b 66 -215 27 -202 43 -213 b 458 -226 194 -217 323 -222 z m 151 -167 b 298 75 204 -89 240 -1 b 301 82 300 76 301 79 l 357 -22 b 344 -43 353 -27 350 -37 b 285 -163 317 -79 312 -127 b 278 -170 282 -166 279 -167 z',\n        },\n        noteheadTriangleUpBlack: {\n            x_min: 0,\n            x_max: 346,\n            y_min: -149,\n            y_max: 149,\n            ha: 298,\n            o: 'm 481 -215 b 498 -209 487 -215 492 -215 b 482 -173 498 -194 488 -184 l 284 173 b 259 202 278 184 269 194 b 229 215 248 210 238 215 b 196 189 216 215 206 206 l 13 -150 b 3 -168 9 -156 6 -163 b 0 -180 1 -173 0 -177 b 12 -197 0 -187 4 -193 b 63 -213 29 -206 45 -213 b 481 -215 203 -213 343 -215 z',\n        },\n        noteheadDiamondWhole: {\n            x_min: 0,\n            x_max: 271,\n            y_min: -132,\n            y_max: 132,\n            ha: 264,\n            o: 'm 230 -177 b 256 -190 240 -186 249 -190 b 281 -173 265 -190 272 -184 b 382 -29 314 -124 347 -76 b 390 -10 387 -22 390 -14 b 376 12 390 -3 386 4 b 173 177 308 66 240 121 b 144 190 166 183 160 190 b 98 153 127 186 112 170 b 13 40 69 115 42 76 b 0 13 4 29 0 20 b 22 -19 0 3 7 -9 b 230 -177 92 -69 163 -122 z m 279 -128 b 261 -122 274 -134 266 -127 l 66 30 b 56 45 59 35 56 39 b 62 56 56 48 59 52 b 122 122 91 101 105 122 b 194 76 138 122 158 107 l 320 -26 b 336 -50 325 -32 336 -35 b 279 -128 318 -75 300 -102 z',\n        },\n        noteheadDiamondHalf: {\n            x_min: 0,\n            x_max: 295,\n            y_min: -148,\n            y_max: 148,\n            ha: 296,\n            o: 'm 228 -207 b 245 -213 235 -210 240 -213 b 264 -203 252 -213 258 -210 b 415 -46 314 -150 364 -98 b 425 -27 420 -40 425 -35 b 416 -10 425 -22 422 -16 b 217 200 350 60 284 131 b 194 213 212 207 204 213 b 170 196 181 213 177 203 b 14 33 118 143 68 86 b 0 7 4 23 0 16 b 17 -20 0 -1 6 -10 b 118 -114 52 -50 82 -85 b 228 -207 156 -144 184 -184 z m 209 -157 b 134 -69 177 -138 141 -115 b 130 -26 131 -55 130 -40 b 215 148 130 42 160 99 b 225 156 217 151 220 156 b 230 153 226 156 228 156 b 323 -26 276 104 321 55 b 298 -75 324 -42 315 -59 b 265 -109 287 -86 276 -99 b 209 -157 245 -125 228 -167 z',\n        },\n        noteheadDiamondBlack: {\n            x_min: 0,\n            x_max: 310,\n            y_min: -146,\n            y_max: 146,\n            ha: 292,\n            o: 'm 266 -210 b 289 -194 278 -209 284 -200 b 406 -76 330 -156 367 -115 b 446 -23 433 -49 446 -36 b 412 29 446 -10 435 3 b 405 36 409 30 408 33 b 252 196 354 89 304 143 b 225 210 243 204 235 210 b 204 202 219 210 212 209 b 10 24 141 141 75 82 b 0 9 4 19 0 14 b 9 -6 0 4 3 0 l 232 -192 b 266 -210 242 -200 256 -204 z',\n        },\n        noteheadSquareWhite: {\n            x_min: 0,\n            x_max: 350,\n            y_min: -131,\n            y_max: 131,\n            ha: 262,\n            o: 'm 468 -189 b 485 -187 474 -189 480 -189 b 500 -176 495 -187 500 -183 b 498 -168 500 -174 498 -171 b 497 -166 498 -167 497 -167 l 498 -164 b 504 -154 503 -163 504 -158 b 503 -138 504 -150 503 -144 l 503 -135 l 503 -94 b 492 66 500 -45 494 10 b 488 135 492 89 488 112 b 484 150 488 141 485 145 b 482 154 482 151 482 153 b 429 189 472 177 456 189 b 53 184 304 186 179 186 l 39 184 b 33 181 36 183 35 183 b 12 160 20 181 12 177 b 0 -109 9 71 4 -19 b 19 -137 0 -125 7 -134 b 23 -151 19 -141 20 -145 b 85 -187 37 -173 55 -187 b 468 -189 212 -187 340 -187 z m 246 -125 l 63 -125 b 66 -111 65 -122 66 -117 b 73 72 69 -50 71 10 l 73 130 b 88 128 78 128 82 128 b 148 130 108 130 128 130 b 271 128 190 130 230 128 l 271 130 l 420 130 b 428 20 425 92 425 56 l 436 -127 l 246 -127 z',\n        },\n        noteheadSquareBlack: {\n            x_min: 0,\n            x_max: 342,\n            y_min: -129.98961937716263,\n            y_max: 132.44444444444446,\n            ha: 262.4340638216071,\n            o: 'm 217 190 b 439 186 304 190 372 190 b 467 180 448 184 458 183 b 492 145 484 176 492 167 b 490 -124 490 56 490 -33 b 488 -141 490 -130 488 -135 b 456 -170 488 -163 478 -168 b 118 -183 344 -176 230 -181 b 29 -184 89 -183 60 -192 b 0 -148 4 -180 0 -168 b 1 29 1 -89 1 -30 l 1 156 b 36 190 3 187 4 190 b 217 190 102 192 168 190 z',\n        },\n        noteheadParenthesis: {\n            x_min: -70.190112022022,\n            x_max: 329,\n            y_min: -196,\n            y_max: 201,\n            ha: 397,\n            o: 'm 344 -279 b 382 -262 361 -288 370 -272 b 405 -233 390 -255 399 -245 b 474 9 455 -158 468 -73 b 416 228 474 78 448 174 b 364 282 403 249 387 271 b 344 289 359 285 350 288 b 331 279 338 289 333 287 b 325 248 328 269 325 258 b 338 225 325 238 328 229 b 412 138 379 207 396 174 b 445 1 433 92 445 45 b 346 -217 445 -81 410 -154 b 336 -252 340 -223 336 -238 b 344 -279 336 -265 338 -276 z m 19 -274 b 35 -282 24 -279 30 -281 b 49 -265 42 -282 46 -275 b 52 -243 50 -256 52 -249 b 36 -210 52 -230 49 -220 b -60 -59 -16 -173 -35 -114 b -73 9 -69 -39 -73 -16 b 33 223 -73 92 -24 189 b 50 265 43 229 50 249 b 33 288 50 278 46 289 b 4 272 23 288 14 275 b -9 261 0 269 -4 265 b -101 23 -58 193 -105 124 b -37 -206 -104 -52 -75 -130 b 19 -274 -23 -232 -6 -255 z',\n        },\n        noteheadParenthesisRight: {\n            x_min: -30,\n            x_max: 82,\n            y_min: -199.08429092881173,\n            y_max: 206,\n            ha: 405.0842909288117,\n            o: 'm -17 -282 b 24 -264 -6 -297 12 -272 b 60 -219 40 -253 52 -236 b 117 1 96 -150 112 -75 b 118 16 118 6 118 12 b 109 73 118 36 112 55 b 4 279 99 154 68 226 b -23 297 -4 287 -13 297 b -37 289 -27 297 -32 294 b -43 266 -42 285 -43 276 b -32 225 -43 251 -37 229 b 84 -7 48 170 84 82 b 32 -184 84 -69 65 -132 b -10 -222 22 -200 4 -209 b -24 -258 -20 -232 -24 -245 b -17 -282 -24 -266 -22 -276 z',\n        },\n        noteheadParenthesisLeft: {\n            x_min: 0,\n            x_max: 106,\n            y_min: -197,\n            y_max: 197,\n            ha: 394,\n            o: 'm 134 -284 b 138 -281 135 -284 137 -284 b 145 -268 144 -278 145 -274 l 144 -253 b 107 -180 138 -225 121 -204 b 42 13 71 -120 42 -56 b 49 73 42 32 43 52 b 137 210 62 128 95 171 b 153 255 147 219 153 239 b 145 278 153 265 151 274 b 130 284 140 281 135 284 b 98 259 117 284 108 268 b 0 37 35 203 1 131 b 118 -268 9 -69 53 -173 b 134 -284 121 -274 127 -284 z',\n        },\n        augmentationDot: {\n            x_min: 0,\n            x_max: 96,\n            y_min: -57,\n            y_max: 57,\n            ha: 114,\n            o: 'm 13 -82 b 16 -81 14 -82 14 -82 b 105 -73 46 -76 75 -76 b 131 -48 121 -72 131 -60 b 138 26 134 -24 138 0 b 137 48 138 33 138 40 b 108 82 134 71 125 82 b 95 81 104 82 99 82 b 33 71 75 78 53 75 b 4 46 20 68 6 62 b 0 -66 1 9 0 -29 b 13 -82 0 -73 1 -82 z',\n        },\n        tremolo1: {\n            x_min: -158,\n            x_max: 156.19381479578487,\n            y_min: -88,\n            y_max: 88,\n            ha: 176,\n            o: 'm -206 -127 b -194 -125 -203 -127 -199 -127 b 173 -36 -72 -94 50 -65 b 220 16 202 -29 215 -12 b 225 50 223 30 225 45 b 216 107 226 76 222 91 b 194 127 210 120 204 127 b 183 124 192 127 189 127 l -192 33 b -226 -9 -213 27 -222 14 b -228 -32 -226 -16 -228 -23 b -222 -108 -228 -58 -222 -82 b -206 -127 -222 -120 -217 -127 z',\n        },\n        flag8thUp: {\n            x_min: 0,\n            x_max: 261,\n            y_min: -819,\n            y_max: 0,\n            ha: 819,\n            o: 'm 265 -1171 b 351 -1035 301 -1130 336 -1087 b 376 -867 369 -979 376 -923 b 367 -755 376 -829 373 -792 b 233 -422 350 -632 311 -520 b 131 -291 199 -379 166 -334 b 65 -125 91 -239 66 -192 b 62 -75 65 -112 62 -91 b 42 0 62 -49 52 -24 l 35 0 b 0 -63 6 -13 0 -36 l 0 -144 b 96 -445 0 -255 29 -356 b 177 -547 124 -478 150 -514 b 308 -831 246 -629 298 -721 b 317 -890 310 -851 317 -871 b 311 -919 317 -900 315 -910 b 256 -1005 297 -950 282 -984 b 228 -1068 233 -1024 228 -1045 b 230 -1106 228 -1080 229 -1093 b 240 -1162 232 -1125 239 -1143 b 251 -1179 242 -1174 246 -1179 b 265 -1171 255 -1179 259 -1176 z',\n        },\n        flag8thDown: {\n            x_min: 0,\n            x_max: 261,\n            y_min: 0,\n            y_max: 819,\n            ha: 819,\n            o: 'm 265 1171 b 251 1179 259 1176 255 1179 b 240 1162 246 1179 242 1174 b 230 1106 239 1143 232 1125 b 228 1068 229 1093 228 1080 b 256 1005 228 1045 233 1024 b 311 919 282 984 297 950 b 317 890 315 910 317 900 b 308 831 317 871 310 851 b 177 547 298 721 246 629 b 96 445 150 514 124 478 b 0 144 29 356 0 255 l 0 63 b 35 0 0 36 6 13 l 42 0 b 62 75 52 24 62 49 b 59 117 62 91 59 104 b 131 291 60 183 91 239 b 233 422 166 334 199 379 b 367 755 311 520 350 632 b 376 867 373 792 376 829 b 351 1035 376 923 369 979 b 265 1171 336 1087 301 1130 z',\n        },\n        flag16thUp: {\n            x_min: 0,\n            x_max: 327.1591498636094,\n            y_min: -819.3972596310256,\n            y_max: 0,\n            ha: 819.3972596310256,\n            o: 'm 415 -1179 b 435 -1168 423 -1182 429 -1174 b 451 -1138 442 -1159 446 -1149 b 465 -1020 464 -1102 467 -1064 b 461 -962 464 -1004 464 -984 b 471 -821 467 -916 472 -870 b 465 -721 472 -791 467 -756 b 415 -520 459 -651 441 -585 b 200 -245 370 -408 284 -327 b 96 -114 160 -206 118 -168 b 75 -24 84 -85 85 -53 b 59 0 72 -16 72 0 b 53 -1 58 0 56 -1 b 27 -32 40 -6 27 -10 b 29 -68 27 -43 29 -55 b 10 -79 20 -69 13 -72 b 1 -109 6 -89 1 -99 b 0 -170 0 -130 0 -148 b 35 -410 0 -252 12 -333 b 258 -793 76 -557 156 -681 b 409 -1158 350 -896 410 -1014 b 415 -1179 409 -1165 405 -1175 z m 413 -816 b 331 -681 392 -769 364 -723 b 145 -420 266 -596 189 -521 b 86 -281 125 -374 102 -330 b 156 -370 105 -312 128 -343 b 318 -539 210 -425 269 -478 b 413 -816 383 -621 420 -713 z',\n        },\n        flag16thDown: {\n            x_min: 0,\n            x_max: 327.1591498636094,\n            y_min: 0,\n            y_max: 819,\n            ha: 819,\n            o: 'm 59 0 b 75 24 72 0 72 16 b 96 114 85 53 84 85 b 200 245 118 168 160 206 b 415 520 284 327 370 408 b 465 721 441 585 459 651 b 471 821 467 756 472 791 b 461 962 472 870 467 916 b 465 1020 464 984 464 1004 b 451 1138 467 1064 464 1102 b 435 1168 446 1149 442 1159 b 418 1179 431 1172 425 1179 l 415 1179 b 408 1169 409 1176 408 1174 b 409 1158 408 1165 409 1161 b 258 793 410 1014 350 896 b 35 410 156 681 76 557 b 0 170 12 333 0 252 l 0 88 b 29 7 0 71 6 23 b 59 0 33 4 58 0 z m 86 281 b 145 420 102 330 125 374 b 331 681 189 521 266 596 b 413 816 364 723 392 769 b 415 791 413 808 415 799 b 318 539 415 698 377 613 b 156 370 269 478 210 425 b 86 281 128 343 105 312 z',\n        },\n        flag32ndUp: {\n            x_min: -0.19862981551275186,\n            x_max: 268.0942440943661,\n            y_min: -849.4710740978672,\n            y_max: 149.0769891455102,\n            ha: 998.5480632433774,\n            o: 'm 323 -1223 b 351 -1198 337 -1227 344 -1210 b 359 -1184 354 -1194 356 -1188 b 386 -999 377 -1122 387 -1060 b 341 -783 386 -927 372 -855 b 330 -736 334 -769 330 -753 b 333 -708 330 -727 330 -717 b 344 -621 340 -678 344 -649 b 341 -579 344 -608 343 -593 b 328 -500 338 -553 328 -526 b 331 -475 328 -491 328 -484 b 347 -370 343 -438 348 -402 b 151 27 348 -212 288 -56 b 53 176 98 59 50 102 b 45 197 53 183 48 192 b 33 215 40 203 40 216 l 30 215 b 6 194 22 212 9 209 b 0 120 3 170 -1 145 b 0 -43 4 65 0 13 b 0 -98 0 -60 1 -79 b 4 -276 0 -157 6 -216 b 7 -456 4 -337 7 -397 b 66 -638 7 -523 22 -585 b 158 -724 94 -671 127 -697 b 318 -1011 246 -801 295 -899 b 321 -1044 321 -1021 321 -1032 b 312 -1152 321 -1080 312 -1116 b 317 -1192 312 -1165 314 -1179 b 323 -1223 320 -1202 311 -1220 z m 285 -376 b 121 -180 249 -289 173 -245 b 91 -105 104 -158 92 -135 b 288 -354 181 -144 288 -269 b 285 -376 288 -363 287 -370 z m 275 -657 b 111 -492 226 -589 163 -547 b 65 -376 78 -456 66 -418 b 71 -323 65 -360 68 -341 b 275 -657 164 -418 265 -504 z',\n        },\n        flag32ndDown: {\n            x_min: -2.800802874905624,\n            x_max: 268.09424409436605,\n            y_min: -169.07698914551014,\n            y_max: 829.4710740978672,\n            ha: 998.5480632433773,\n            o: 'm 323 1194 b 317 1164 311 1191 320 1174 b 312 1123 314 1151 312 1136 b 321 1015 312 1087 321 1051 b 318 982 321 1004 321 992 b 158 696 295 870 246 772 b 66 609 127 668 94 642 b 7 428 22 556 7 494 b 4 248 7 369 4 308 b -1 78 6 187 -10 137 b 0 14 0 59 0 32 l 0 -148 b 6 -223 0 -174 3 -199 b 30 -243 9 -238 22 -240 l 33 -243 b 45 -226 40 -245 40 -232 b 53 -204 48 -220 53 -212 b 151 -56 50 -131 98 -88 b 347 341 288 27 348 183 b 331 446 348 373 343 409 b 328 471 328 455 328 462 b 341 550 328 497 338 524 b 344 592 343 564 344 579 b 333 680 344 621 340 649 b 330 707 330 688 330 698 b 341 755 330 724 334 740 b 386 971 372 827 386 899 b 359 1155 387 1031 377 1093 b 351 1169 356 1159 354 1165 b 323 1194 344 1181 337 1198 z m 275 628 b 71 294 265 475 164 389 b 65 347 68 312 65 331 b 111 464 66 389 78 428 b 275 628 163 518 226 560 z m 285 347 b 288 325 287 341 288 334 b 91 76 288 240 181 115 b 121 151 92 107 104 130 b 285 347 173 216 249 261 z',\n        },\n        flag64thUp: {\n            x_min: -4,\n            x_max: 282,\n            y_min: -823.5430338167067,\n            y_max: 347,\n            ha: 1170.5430338167066,\n            o: 'm 350 -1185 b 380 -1162 364 -1189 374 -1175 b 406 -1022 399 -1119 406 -1071 b 359 -798 406 -945 384 -871 b 348 -756 353 -785 348 -772 b 350 -744 348 -753 350 -749 b 363 -621 356 -704 363 -664 b 360 -580 363 -608 363 -593 b 359 -560 359 -573 359 -567 b 373 -490 359 -536 366 -513 b 393 -346 386 -444 393 -395 b 387 -269 393 -320 390 -294 b 348 -127 382 -219 348 -173 b 351 -104 348 -120 348 -111 b 353 -65 351 -91 353 -78 b 341 37 353 -26 348 6 b 226 215 323 108 278 164 b 86 336 181 258 127 288 b 62 395 72 353 62 370 b 42 481 62 423 55 454 b 27 500 37 488 36 500 b 24 498 26 500 26 500 b -1 480 14 497 1 492 b -6 444 -4 467 -6 455 l -6 435 b -1 341 -1 403 -1 372 l -1 266 b 6 156 -1 230 0 193 b 13 35 12 117 13 75 l 13 -35 b 14 -85 13 -52 14 -68 b 29 -276 19 -150 33 -213 b 20 -448 24 -334 20 -392 b 24 -534 20 -477 22 -505 b 114 -708 30 -605 59 -664 b 197 -780 143 -732 171 -755 b 344 -1153 301 -884 341 -1011 b 343 -1172 344 -1159 343 -1166 b 350 -1185 343 -1176 344 -1182 z m 287 -88 b 62 193 186 -17 79 48 b 229 52 121 144 174 98 b 289 -33 256 29 274 -3 b 295 -56 294 -42 295 -49 b 287 -88 295 -66 292 -76 z m 298 -410 b 118 -235 238 -351 176 -295 b 76 -88 82 -197 78 -147 b 268 -252 137 -153 203 -202 b 330 -360 304 -279 330 -315 b 323 -402 330 -373 327 -387 b 311 -418 318 -413 315 -418 b 298 -410 307 -418 302 -415 z m 300 -691 b 117 -508 243 -616 168 -575 b 82 -408 94 -480 82 -448 b 84 -379 82 -397 82 -387 b 259 -553 135 -451 206 -492 b 301 -667 287 -583 301 -619 b 300 -691 301 -674 301 -683 z',\n        },\n        flag64thDown: {\n            x_min: -5,\n            x_max: 281,\n            y_min: -375,\n            y_max: 795.5430338167066,\n            ha: 1170.5430338167066,\n            o: 'm 348 1145 b 341 1132 343 1142 341 1136 b 343 1113 341 1126 343 1119 b 196 740 340 971 300 844 b 112 668 170 714 141 691 b 23 494 58 624 29 564 b 19 408 20 465 19 436 b 27 236 19 351 23 294 b 13 45 32 173 17 109 b 12 -6 13 27 12 12 l 12 -75 b 4 -196 12 -115 10 -157 b -3 -307 -1 -233 -3 -271 l -3 -382 b -7 -475 -3 -412 -3 -444 l -7 -484 b -3 -520 -7 -495 -6 -507 b 23 -539 0 -533 13 -537 b 26 -540 24 -540 24 -540 b 40 -521 35 -540 36 -528 b 60 -435 53 -494 60 -464 b 85 -376 60 -410 71 -393 b 225 -255 125 -328 180 -298 b 340 -78 276 -204 321 -148 b 351 24 347 -46 351 -14 b 350 63 351 37 350 50 b 347 86 347 71 347 79 b 386 229 347 132 380 179 b 392 305 389 253 392 279 b 372 449 392 354 384 403 b 357 520 364 472 357 495 b 359 540 357 527 357 533 b 361 580 361 553 361 567 b 348 704 361 624 354 664 b 347 716 348 708 347 713 b 357 757 347 732 351 744 b 405 982 383 831 405 904 b 379 1122 405 1031 397 1079 b 348 1145 373 1135 363 1149 z m 298 651 b 300 626 300 642 300 634 b 258 513 300 579 285 543 b 82 338 204 452 134 410 b 81 367 81 347 81 357 b 115 468 81 408 92 439 b 298 651 167 534 242 576 z m 297 370 b 310 377 301 374 305 377 b 321 361 314 377 317 373 b 328 320 325 347 328 333 b 266 212 328 275 302 239 b 75 48 202 161 135 112 b 117 194 76 107 81 157 b 297 370 174 255 236 311 z m 285 48 b 294 16 291 36 294 26 b 288 -7 294 9 292 1 b 228 -92 272 -37 255 -69 b 60 -233 173 -138 120 -184 b 285 48 78 -88 184 -23 z',\n        },\n        flag128thUp: {\n            x_min: 0,\n            x_max: 252,\n            y_min: -804,\n            y_max: 530,\n            ha: 1334,\n            o: 'm 298 -1158 b 328 -1126 312 -1158 320 -1139 b 330 -1116 330 -1123 330 -1119 b 347 -996 343 -1076 347 -1037 b 328 -837 347 -943 338 -890 b 320 -778 324 -816 320 -798 b 330 -733 320 -763 323 -749 b 340 -665 338 -714 337 -688 b 341 -645 340 -660 341 -652 b 333 -534 341 -609 333 -572 b 343 -471 333 -513 334 -492 b 361 -366 356 -436 361 -402 b 331 -202 361 -311 348 -256 b 328 -187 330 -197 328 -193 b 331 -179 328 -184 328 -181 b 363 -55 353 -137 363 -96 b 337 79 363 -12 351 33 b 327 114 333 92 327 104 b 344 144 327 124 331 132 b 359 174 353 150 357 163 b 361 228 360 193 361 210 b 243 517 361 337 325 435 b 147 596 213 546 179 569 b 75 708 111 626 75 655 b 62 744 75 723 68 733 b 50 763 58 752 58 763 b 46 762 49 763 48 762 b 17 742 36 757 22 757 b 0 697 14 726 0 711 b 1 595 0 662 3 631 b 0 469 0 552 0 511 b 1 429 0 456 0 442 b 22 289 6 382 22 337 b 24 128 22 238 24 184 b 22 66 24 108 23 86 b 19 -19 20 37 19 10 b 20 -132 19 -56 20 -95 b 13 -276 20 -180 19 -229 b 9 -359 10 -304 9 -330 b 12 -487 9 -402 12 -445 b 56 -582 12 -526 29 -554 b 197 -742 107 -632 160 -681 b 288 -1100 265 -851 276 -976 b 288 -1122 288 -1107 287 -1115 b 287 -1145 289 -1129 287 -1138 b 298 -1158 287 -1153 288 -1158 z m 304 150 b 75 475 229 256 112 334 b 304 150 233 357 305 287 z m 271 -73 b 127 72 233 -14 179 26 b 81 167 96 98 81 127 b 84 194 81 176 82 184 b 271 -73 148 102 242 39 z m 279 -396 b 132 -223 233 -330 180 -279 b 81 -112 104 -192 81 -156 b 82 -91 81 -105 81 -98 b 279 -396 167 -125 269 -281 z m 249 -609 b 69 -357 197 -520 88 -471 b 249 -609 131 -441 229 -498 z',\n        },\n        flag128thDown: {\n            x_min: -0.8888888888888888,\n            x_max: 252,\n            y_min: -580,\n            y_max: 754,\n            ha: 1334,\n            o: 'm 298 1086 b 287 1073 288 1086 287 1081 b 288 1050 287 1066 289 1057 b 288 1028 287 1043 288 1035 b 197 670 276 904 265 779 b 56 510 160 609 107 560 b 12 415 29 482 12 454 b 9 287 12 373 9 330 b 13 204 9 258 10 232 b 20 60 19 157 20 108 b 19 -53 20 23 19 -16 b 22 -138 19 -82 20 -109 b 24 -200 23 -158 24 -180 b 22 -361 24 -256 22 -310 b 1 -501 22 -409 6 -454 b 0 -541 0 -514 0 -528 b 0 -667 0 -583 -3 -624 b 0 -809 0 -675 -3 -791 b 46 -834 4 -825 36 -829 b 50 -835 48 -834 49 -835 b 62 -816 58 -835 58 -824 b 75 -780 68 -805 75 -795 b 147 -668 75 -727 111 -698 b 243 -589 179 -641 213 -618 b 361 -300 325 -507 361 -409 b 359 -246 361 -282 360 -265 b 344 -216 357 -235 353 -222 b 327 -186 331 -204 327 -196 b 337 -151 327 -176 333 -164 b 363 -17 351 -105 363 -60 b 331 107 363 24 353 65 b 328 115 328 109 328 112 b 331 130 328 121 330 125 b 361 294 348 184 361 239 b 343 399 361 330 356 364 b 333 462 334 420 333 441 b 341 573 333 500 341 537 b 340 593 341 580 340 588 b 330 661 337 616 338 642 b 320 706 323 677 320 691 b 328 765 320 726 324 744 b 347 924 338 818 347 871 b 330 1044 347 965 343 1004 b 328 1054 330 1047 330 1051 b 298 1086 320 1067 312 1086 z m 249 537 b 69 285 229 426 131 369 b 249 537 88 399 197 448 z m 279 324 b 82 19 269 209 167 53 b 81 40 81 26 81 33 b 132 151 81 84 104 120 b 279 324 180 207 233 258 z m 271 1 b 84 -266 242 -111 148 -174 b 81 -239 82 -256 81 -248 b 127 -144 81 -199 96 -170 b 271 1 179 -98 233 -58 z m 304 -222 b 75 -547 305 -359 233 -429 b 304 -222 112 -406 229 -328 z',\n        },\n        accidentalFlat: {\n            x_min: 1,\n            x_max: 209,\n            y_min: -208,\n            y_max: 472,\n            ha: 680,\n            o: 'm 29 -300 b 46 -289 33 -300 39 -297 b 107 -243 65 -274 86 -258 b 301 127 233 -153 301 -30 b 298 186 301 147 301 166 b 190 297 291 256 251 297 b 147 289 177 297 163 294 b 86 265 127 284 107 274 l 85 264 l 85 301 b 91 465 85 356 88 410 b 94 559 91 497 94 527 b 84 651 94 589 91 621 b 66 680 81 661 81 680 l 65 680 b 37 645 49 678 37 665 b 33 523 36 605 32 563 l 33 478 b 26 223 33 393 29 308 b 1 -141 22 101 1 -19 b 17 -287 1 -189 4 -239 b 29 -300 20 -295 23 -300 z m 68 -105 b 76 12 71 -68 72 -29 b 81 107 79 43 81 75 l 86 109 b 171 135 114 121 141 135 b 204 128 181 135 193 132 b 238 92 228 120 239 108 b 230 63 238 84 236 75 b 68 -105 193 -10 132 -59 z',\n        },\n        accidentalNatural: {\n            x_min: 0,\n            x_max: 213.5,\n            y_min: -456,\n            y_max: 462,\n            ha: 918,\n            o: 'm 255 -657 b 281 -624 271 -657 275 -636 b 285 -599 282 -615 285 -608 b 292 -300 288 -500 289 -400 b 289 -161 292 -253 289 -207 b 300 128 292 -65 297 32 b 304 168 300 128 302 150 l 304 173 l 305 190 l 305 199 l 307 225 b 304 259 307 229 310 246 b 272 298 297 274 302 305 b 63 266 204 279 134 272 b 72 514 68 348 72 432 b 71 595 72 541 72 567 b 56 665 71 619 66 642 b 17 579 9 651 17 608 b 3 144 19 433 7 289 b 0 -7 1 94 0 43 b 3 -134 0 -50 1 -92 b 7 -219 3 -163 7 -192 b 35 -251 7 -243 17 -251 b 49 -249 39 -251 43 -251 l 223 -223 l 230 -222 l 230 -359 b 223 -516 230 -410 223 -464 b 236 -619 223 -550 226 -585 b 255 -657 240 -634 236 -657 z m 58 -63 b 55 81 56 -14 53 33 l 56 99 b 85 99 65 99 75 98 b 232 108 134 104 183 107 l 240 109 l 236 66 b 232 -48 235 29 232 -10 b 58 -81 174 -63 115 -73 z',\n        },\n        accidentalSharp: {\n            x_min: -22,\n            x_max: 390,\n            y_min: -384,\n            y_max: 383,\n            ha: 767,\n            o: 'm 202 -553 b 219 -526 213 -552 216 -536 b 226 -471 225 -507 226 -488 b 225 -425 226 -455 225 -441 b 226 -392 225 -415 225 -402 b 233 -305 229 -363 232 -334 l 297 -292 b 331 -469 300 -353 311 -412 b 347 -485 333 -477 338 -485 b 363 -469 356 -487 359 -477 b 374 -418 373 -454 374 -435 b 376 -382 376 -405 376 -393 b 372 -276 376 -347 373 -311 l 455 -259 b 550 -156 534 -243 544 -232 b 550 -109 550 -137 552 -124 b 526 -78 549 -91 541 -78 l 523 -78 b 507 -79 517 -78 513 -78 b 403 -101 474 -88 438 -95 l 379 -105 b 382 -42 380 -85 380 -63 b 384 96 383 4 384 50 b 503 131 425 107 464 118 b 549 173 524 138 543 150 b 562 249 554 199 562 223 b 554 294 562 264 560 279 b 536 315 549 308 544 315 l 533 315 b 517 312 528 315 523 315 b 382 266 472 294 428 279 l 377 344 b 359 531 374 406 372 469 b 348 552 356 539 357 552 l 347 552 l 343 552 b 315 528 331 549 317 544 l 315 501 b 320 249 315 416 318 333 l 243 232 b 239 361 243 275 242 318 b 226 425 238 383 238 403 b 199 359 194 409 199 382 b 193 223 196 312 194 268 b 72 202 153 215 112 209 b 4 118 13 192 4 183 b 10 66 0 102 12 84 b 33 29 7 39 14 30 b 48 32 37 29 42 30 b 187 55 95 39 141 46 l 183 -75 b 176 -145 181 -99 179 -122 b 16 -179 122 -156 69 -166 b -32 -232 -14 -186 -32 -197 b -17 -331 -32 -266 -19 -298 b -1 -356 -17 -347 -13 -354 b 12 -353 1 -356 6 -354 b 167 -320 63 -341 115 -331 b 166 -377 166 -338 166 -357 b 189 -526 166 -428 171 -477 b 202 -553 192 -536 189 -553 z m 240 -132 b 243 -37 242 -101 242 -69 b 245 65 245 -3 245 30 b 315 79 269 69 292 73 b 301 -120 308 13 305 -53 z',\n        },\n        accidentalDoubleSharp: {\n            x_min: 0,\n            x_max: 287,\n            y_min: -159,\n            y_max: 159,\n            ha: 318,\n            o: 'm 84 -229 b 107 -216 91 -229 98 -225 b 200 -125 138 -186 167 -154 b 232 -95 212 -115 222 -105 b 347 -189 271 -125 310 -157 b 370 -200 356 -196 363 -200 b 396 -179 380 -200 389 -192 b 412 -102 410 -154 406 -125 b 377 -27 410 -69 400 -46 l 325 14 b 402 91 350 42 374 68 b 413 127 410 96 413 107 b 382 200 409 148 397 176 b 350 229 370 220 360 229 b 314 210 340 229 328 223 b 274 174 300 199 285 187 b 212 104 252 151 232 128 b 92 187 173 132 132 161 b 78 193 86 192 82 193 b 68 190 75 193 72 193 b 48 179 62 186 53 187 b 40 137 43 168 40 154 b 81 16 40 92 56 32 b 107 -3 89 10 98 4 b 14 -94 76 -32 45 -62 b 0 -124 6 -102 0 -114 b 12 -154 0 -134 3 -144 b 62 -215 26 -176 48 -193 b 84 -229 69 -225 76 -229 z',\n        },\n        accidentalDoubleFlat: {\n            x_min: 0,\n            x_max: 359,\n            y_min: -220,\n            y_max: 446,\n            ha: 666,\n            o: 'm 43 -317 b 72 -301 55 -317 63 -310 b 160 -186 108 -268 134 -226 b 236 -60 186 -145 212 -102 b 233 -131 235 -85 233 -108 b 239 -220 233 -161 235 -190 b 259 -246 240 -233 239 -240 b 301 -228 284 -252 291 -238 b 465 -7 369 -163 416 -85 b 517 173 500 48 517 108 b 451 307 517 229 505 284 b 409 315 436 312 422 315 b 331 287 382 315 356 305 b 311 274 324 282 320 274 l 310 274 l 310 566 b 305 621 310 585 312 603 b 294 642 301 628 305 642 l 292 642 b 264 622 282 641 266 636 b 253 575 259 606 256 590 b 246 418 248 523 246 471 b 248 243 246 360 248 302 l 248 187 b 164 238 220 225 193 238 b 85 213 140 238 112 226 b 84 229 85 220 84 225 b 86 315 85 258 86 287 b 81 528 86 386 82 458 b 71 582 81 547 78 566 b 56 603 66 590 68 603 l 53 603 b 23 580 40 600 26 598 b 19 537 20 566 19 552 b 20 514 19 530 19 521 b 26 390 24 472 26 432 b 14 66 26 282 16 174 b 0 -168 13 -12 0 -91 b 12 -279 0 -206 3 -242 b 30 -314 16 -294 14 -308 b 43 -317 35 -317 39 -317 z m 301 -72 b 302 7 302 -45 302 -19 l 302 86 b 351 158 304 121 321 145 b 383 166 361 163 373 166 b 435 143 402 166 419 157 b 445 127 441 138 445 132 b 441 114 445 122 444 118 b 301 -72 397 49 354 -14 z m 75 -147 b 73 30 75 -86 75 -29 b 118 82 73 62 92 76 b 132 84 124 84 128 84 b 190 52 156 84 174 69 b 193 40 192 49 193 45 b 192 33 193 37 193 35 b 75 -147 157 -30 125 -95 z',\n        },\n        accidentalParensLeft: {\n            x_min: 0,\n            x_max: 130.18934911242604,\n            y_min: -270,\n            y_max: 267.6082500723851,\n            ha: 537.6082500723851,\n            o: 'm 107 -389 b 127 -374 114 -389 120 -384 b 141 -347 132 -367 137 -357 b 151 -294 148 -330 151 -311 b 122 -207 151 -265 141 -236 b 63 -65 94 -164 72 -117 b 59 -10 60 -46 59 -27 b 145 223 59 78 94 153 b 187 354 176 262 189 305 b 177 384 187 364 190 380 b 143 373 166 387 153 383 b 124 354 137 367 130 361 b 0 -35 33 240 0 108 l 0 -92 b 85 -372 4 -193 27 -287 b 107 -389 92 -383 99 -389 z',\n        },\n        accidentalParensRight: {\n            x_min: -0.4444444444444445,\n            x_max: 139,\n            y_min: -275,\n            y_max: 277,\n            ha: 552,\n            o: 'm 58 -396 b 96 -354 75 -396 85 -370 b 200 13 168 -238 200 -111 b 153 268 200 109 184 190 b 49 392 131 320 101 364 b 26 399 40 397 33 399 b 0 366 10 399 0 387 b 0 318 -1 350 0 334 l 0 291 b 27 238 -3 266 7 253 b 143 9 105 180 143 98 b 141 -20 143 -1 143 -10 b 63 -225 135 -92 108 -164 b 36 -307 45 -251 36 -278 b 40 -344 36 -320 37 -331 b 42 -356 42 -347 42 -351 b 58 -396 42 -374 37 -396 z',\n        },\n        accidentalQuarterToneFlatStein: {\n            x_min: 0,\n            x_max: 208,\n            y_min: -240,\n            y_max: 440,\n            ha: 680,\n            o: 'm 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            x_min: 0,\n            x_max: 422,\n            y_min: -240,\n            y_max: 440,\n            ha: 680,\n            o: 'm 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 336 -346 b 353 -336 340 -346 346 -343 b 413 -289 372 -320 393 -304 b 608 81 540 -199 608 -76 b 605 140 608 101 608 120 b 497 251 598 210 557 251 b 454 243 484 251 469 248 b 393 219 433 238 413 228 l 392 217 l 392 255 b 397 419 392 310 395 364 b 400 513 397 451 400 481 b 390 605 400 543 397 575 b 373 634 387 615 387 634 l 372 634 b 344 599 356 632 344 619 b 340 477 343 559 338 517 l 340 432 b 333 177 340 347 336 262 b 308 -187 328 55 308 -65 b 324 -333 308 -235 311 -285 b 336 -346 327 -341 330 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z m 374 -151 b 383 -35 377 -114 379 -75 b 387 60 386 -3 387 29 l 393 63 b 478 89 420 75 448 89 b 511 82 488 89 500 86 b 544 46 534 73 546 62 b 537 17 544 37 543 29 b 374 -151 500 -56 439 -105 z',\n        },\n        accidentalQuarterToneSharpStein: {\n            x_min: 0,\n            x_max: 300,\n            y_min: -338,\n            y_max: 351,\n            ha: 689,\n            o: 'm 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 l 35 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            x_min: -23,\n            x_max: 388,\n            y_min: -373,\n            y_max: 445,\n            ha: 818,\n            o: 'm 114 -537 b 138 -475 137 -518 138 -495 b 147 -292 138 -413 144 -353 b 212 -278 168 -287 190 -282 b 243 -444 215 -333 225 -389 b 261 -467 248 -454 251 -465 b 281 -446 272 -469 276 -455 b 292 -347 292 -416 288 -384 b 288 -262 289 -320 288 -291 l 374 -245 b 376 -311 374 -266 374 -288 b 390 -456 379 -357 379 -405 b 416 -396 412 -436 415 -418 b 423 -287 420 -360 423 -323 b 422 -235 423 -269 423 -252 b 451 -229 432 -233 441 -232 b 547 -98 524 -215 547 -199 l 547 -89 b 521 -49 546 -59 540 -49 b 497 -52 516 -49 507 -49 b 418 -68 469 -56 444 -63 b 423 52 419 -29 422 12 b 426 140 425 81 425 109 b 495 160 449 145 472 153 b 552 219 526 170 546 189 b 559 279 557 240 553 262 b 530 341 559 324 552 341 b 490 331 520 341 507 338 b 432 311 471 324 452 318 b 449 552 436 392 442 471 b 452 588 451 563 452 575 b 446 622 452 599 451 611 b 436 641 444 629 448 641 b 418 628 428 641 420 636 b 409 602 413 621 410 611 b 386 297 396 501 390 399 b 297 274 356 288 327 281 b 291 403 295 317 294 360 b 274 550 288 452 284 501 b 259 569 271 564 265 569 b 240 559 253 569 248 563 b 230 537 232 554 230 546 l 230 488 b 233 369 230 448 232 409 b 236 261 236 333 238 297 b 156 245 210 255 183 251 b 154 396 154 295 154 346 b 150 416 154 403 153 410 b 140 438 145 423 150 438 l 138 438 b 118 413 128 436 118 428 b 112 354 118 393 114 374 b 109 238 109 315 109 276 b 49 226 89 233 69 230 b 3 163 16 222 3 202 b 7 91 3 138 9 114 b 29 62 7 69 13 62 b 39 63 32 62 35 63 b 104 73 60 66 82 71 b 101 -10 104 46 102 17 l 92 -132 l 10 -150 b -33 -204 -19 -157 -33 -170 b -19 -310 -32 -240 -19 -274 b -6 -324 -19 -321 -13 -324 b 6 -323 -1 -324 1 -324 b 82 -307 32 -317 58 -311 b 81 -376 82 -330 81 -353 b 114 -537 81 -431 94 -484 z m 294 -92 b 297 -37 295 -73 295 -56 b 300 49 300 -9 300 20 l 300 108 b 379 127 325 114 353 120 b 374 -76 376 59 374 -9 b 294 -92 347 -82 320 -86 z m 154 -120 b 157 20 154 -73 156 -26 b 158 82 158 40 158 62 b 230 95 183 86 206 89 b 225 0 229 63 226 32 b 217 -107 223 -35 220 -71 z',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: 1.8692317181955784,\n            x_max: 287,\n            y_min: -248,\n            y_max: 432.4720949426819,\n            ha: 680.4720949426819,\n            o: 'm 410 128 b 302 239 403 199 363 239 b 259 232 289 239 275 236 b 199 207 239 226 219 216 l 197 206 l 197 243 l 197 251 b 347 317 248 272 298 295 b 376 347 360 324 372 334 b 389 435 387 376 393 405 b 348 454 384 462 377 465 b 202 387 300 432 251 409 b 203 408 203 395 203 402 l 203 431 b 347 490 252 451 300 469 b 376 517 360 495 372 505 b 389 599 387 546 393 572 b 348 616 384 625 377 628 l 203 556 b 196 593 202 569 199 582 b 179 622 193 603 193 622 l 177 622 b 150 588 161 621 150 608 b 147 533 150 570 148 552 b 29 488 108 517 69 503 b 3 455 12 482 3 472 b 12 353 1 422 9 389 b 145 408 56 372 101 389 b 145 363 145 392 145 377 l 29 315 b 3 281 12 310 3 298 b 12 170 1 245 9 209 l 141 226 b 138 166 140 206 138 186 b 114 -199 134 43 115 -76 b 130 -344 114 -246 117 -297 b 141 -357 132 -353 135 -357 b 158 -347 145 -357 151 -354 b 219 -301 177 -331 199 -315 b 413 69 346 -210 413 -88 b 410 128 413 89 413 108 z m 350 35 b 343 6 350 26 348 17 b 180 -163 308 -69 245 -117 b 189 -46 183 -125 184 -86 b 193 49 192 -14 193 17 l 199 52 b 284 78 226 63 253 78 b 317 71 294 78 305 75 b 350 35 340 62 351 50 z',\n        },\n        accidentalBakiyeFlat: {\n            x_min: 1.8692317181955784,\n            x_max: 287,\n            y_min: -236,\n            y_max: 444,\n            ha: 680,\n            o: 'm 141 -340 b 158 -330 145 -340 151 -337 b 219 -284 177 -314 199 -298 b 413 86 346 -193 413 -71 b 410 145 413 107 413 125 b 302 256 403 216 363 256 b 259 249 289 256 275 253 b 199 225 239 243 219 233 l 197 223 l 197 261 b 199 334 197 285 199 310 b 347 406 249 357 298 382 b 376 439 360 413 372 425 b 390 516 384 465 390 490 b 389 537 390 523 390 530 b 372 564 384 556 382 564 b 348 557 367 564 359 562 b 204 487 300 537 253 510 b 206 518 206 497 206 507 b 196 611 206 549 203 580 b 179 639 193 621 193 639 l 177 639 b 150 605 161 638 150 625 b 145 482 148 564 144 523 l 145 458 b 29 405 107 439 68 420 b 3 366 12 397 3 386 b 12 243 1 325 9 287 b 143 307 56 265 99 285 l 138 183 b 114 -181 134 60 114 -59 b 130 -327 114 -229 117 -279 b 141 -340 132 -336 135 -340 z m 180 -145 b 189 -29 183 -108 184 -69 b 193 66 192 3 193 35 l 199 69 b 284 95 226 81 253 95 b 317 88 294 95 305 92 b 350 52 340 79 351 68 b 343 23 350 43 348 35 b 180 -145 305 -50 245 -99 z',\n        },\n        accidentalKomaSharp: {\n            x_min: 0,\n            x_max: 300,\n            y_min: -338,\n            y_max: 351,\n            ha: 689,\n            o: 'm 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 l 35 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: -0.15206251809627475,\n            x_max: 359,\n            y_min: -420,\n            y_max: 343,\n            ha: 763,\n            o: 'm 236 -605 b 262 -543 256 -583 261 -564 b 269 -423 268 -503 269 -464 b 266 -340 269 -396 268 -367 l 361 -318 b 405 -276 384 -312 399 -298 b 413 -189 412 -248 416 -219 b 395 -164 412 -171 409 -164 b 382 -166 392 -164 387 -164 b 264 -193 343 -176 304 -184 b 269 -102 265 -163 268 -132 b 454 -62 331 -89 392 -78 b 501 -23 477 -58 494 -45 b 517 62 511 6 517 33 b 487 112 517 95 513 112 b 471 111 482 112 477 112 b 274 66 406 95 340 81 b 276 138 275 91 276 114 b 350 154 301 144 325 148 b 402 203 377 160 396 176 b 412 284 408 230 412 258 b 392 311 412 302 406 311 b 372 308 386 311 379 310 b 287 291 343 301 314 297 l 295 405 b 298 441 297 416 298 428 b 292 475 298 452 297 464 b 282 494 289 482 294 494 b 264 481 274 494 266 490 b 255 455 259 474 256 464 b 239 282 248 397 243 340 b 148 268 209 278 179 274 b 62 164 62 252 62 253 l 62 132 b 79 108 60 117 65 108 l 86 108 l 230 130 b 229 92 230 118 229 105 b 228 56 228 79 228 68 b 66 20 173 43 120 32 b 0 -59 6 7 3 1 l 0 -138 b 14 -160 -1 -156 4 -160 b 27 -158 19 -160 23 -160 b 222 -112 92 -141 157 -127 b 220 -203 220 -143 220 -173 b 147 -217 196 -207 171 -213 b 89 -288 92 -228 89 -229 b 95 -347 85 -305 96 -325 b 112 -374 92 -366 98 -374 b 125 -373 117 -374 121 -374 l 220 -351 b 222 -458 220 -386 220 -422 b 236 -605 223 -504 225 -552 z',\n        },\n        accidentalKoron: {\n            x_min: 0,\n            x_max: 303,\n            y_min: -462.4598053473055,\n            y_max: 180,\n            ha: 642.4598053473055,\n            o: 'm 59 -665 b 72 -649 69 -662 72 -657 b 69 -626 72 -642 69 -634 b 69 -622 69 -625 69 -624 l 69 -600 b 55 -156 60 -456 68 -311 b 86 -170 66 -166 76 -170 b 112 -163 95 -170 104 -166 b 390 -35 204 -120 298 -78 b 436 -1 409 -27 436 -27 b 396 46 436 22 413 33 l 382 55 b 46 243 271 121 157 179 b 12 259 29 253 17 259 b 0 219 1 259 0 248 b 3 -372 0 22 3 -176 b 6 -616 3 -454 6 -536 b 59 -665 6 -638 40 -671 z m 55 199 b 363 24 156 141 258 84 b 55 -118 259 -24 160 -69 z',\n        },\n        accidentalSori: {\n            x_min: 0,\n            x_max: 434,\n            y_min: -295,\n            y_max: 325,\n            ha: 620,\n            o: 'm 194 -425 b 196 -409 194 -418 196 -413 b 194 -194 196 -337 196 -266 b 364 -127 251 -171 308 -150 b 361 -321 363 -192 364 -256 b 410 -387 360 -357 373 -377 b 413 -373 412 -382 413 -377 b 418 -114 418 -287 418 -200 l 418 -105 b 595 -35 477 -82 536 -59 b 625 0 612 -27 625 -22 b 593 48 624 23 618 39 l 419 117 b 423 370 419 202 423 285 b 426 403 423 382 426 393 b 418 436 426 415 425 426 b 384 468 409 449 399 468 b 369 448 370 468 369 459 b 369 436 369 444 369 441 l 369 428 l 369 423 b 367 138 369 328 367 233 l 353 143 l 192 207 l 192 367 b 173 406 192 383 184 396 b 151 422 167 413 160 422 b 144 420 148 422 147 422 b 137 403 138 416 137 410 l 137 392 l 137 229 b 33 271 102 243 68 256 b 13 276 26 274 19 276 b 0 262 6 276 0 272 b 35 199 1 239 0 212 l 138 160 b 140 -148 138 58 138 -45 b 56 -181 111 -158 84 -170 b 24 -215 35 -189 24 -199 b 29 -235 24 -220 26 -228 b 49 -253 35 -249 42 -253 b 78 -240 59 -253 69 -243 b 140 -216 98 -233 120 -225 l 140 -356 b 194 -425 140 -406 141 -406 z m 194 -125 b 193 138 194 -37 193 50 b 315 89 233 122 275 107 b 366 71 333 84 350 76 b 364 -58 366 27 366 -16 b 194 -125 308 -81 251 -104 z m 419 49 l 526 7 l 485 -10 l 419 -36 z',\n        },\n        articAccentAbove: {\n            x_min: 0,\n            x_max: 425,\n            y_min: 0,\n            y_max: 326,\n            ha: 326,\n            o: 'm 27 1 b 78 12 46 0 62 6 b 347 112 168 45 253 91 b 521 184 409 128 459 167 b 608 259 557 194 589 220 b 612 274 611 265 612 271 b 598 292 612 281 608 287 b 477 347 559 312 518 331 b 176 465 374 384 275 425 b 156 469 168 468 161 469 b 125 456 145 469 137 465 b 53 370 96 432 78 399 b 45 353 48 363 45 357 b 68 333 45 344 52 337 b 360 225 166 298 262 261 b 192 154 302 203 249 171 b 13 36 120 132 53 105 b 0 13 9 29 0 22 l 0 9 b 16 0 3 1 10 0 l 26 0 b 27 1 27 0 27 0 z',\n        },\n        articAccentBelow: {\n            x_min: 0,\n            x_max: 425,\n            y_min: -326,\n            y_max: 0,\n            ha: 326,\n            o: 'm 26 -469 l 27 -469 b 78 -458 46 -469 62 -464 b 347 -357 168 -426 253 -380 b 521 -285 409 -341 459 -302 b 608 -210 557 -276 589 -249 b 612 -196 611 -204 612 -200 b 598 -179 612 -189 608 -183 b 477 -122 559 -157 518 -138 b 176 -4 374 -85 275 -45 b 156 0 168 -1 161 0 b 125 -13 145 0 137 -4 b 53 -99 96 -37 78 -71 b 45 -117 48 -107 45 -112 b 68 -137 45 -125 52 -132 b 360 -245 166 -171 262 -209 b 192 -315 302 -266 249 -300 b 13 -433 120 -337 53 -366 b 0 -456 9 -442 0 -448 l 0 -461 b 16 -469 3 -468 10 -469 z',\n        },\n        articTenutoAbove: {\n            x_min: 0.35192668236256364,\n            x_max: 471.1238660564107,\n            y_min: 0,\n            y_max: 56,\n            ha: 56,\n            o: 'm 137 0 b 197 1 156 0 179 1 b 409 6 268 1 338 6 b 482 4 432 6 459 6 b 556 0 508 3 534 0 b 651 10 588 0 621 3 b 678 27 662 12 678 10 b 654 59 680 45 672 53 b 511 75 606 73 560 73 b 255 81 426 78 341 81 b 160 79 222 81 193 79 l 36 79 b 1 71 24 78 7 85 b 19 32 -3 56 9 43 b 45 16 26 24 36 20 b 137 0 76 3 108 0 z',\n        },\n        articTenutoBelow: {\n            x_min: 0.35192668236256364,\n            x_max: 471.1238660564107,\n            y_min: -59,\n            y_max: -3,\n            ha: 56,\n            o: 'm 137 -85 b 197 -84 156 -85 179 -84 b 409 -79 268 -84 338 -79 b 482 -81 432 -79 459 -79 b 556 -85 508 -82 534 -85 b 651 -75 588 -85 621 -82 b 678 -58 662 -73 678 -75 b 654 -26 680 -40 672 -32 b 511 -10 606 -12 560 -12 b 255 -4 426 -7 341 -4 b 160 -6 222 -4 193 -6 l 36 -6 b 1 -14 24 -7 7 0 b 19 -53 -3 -29 9 -42 b 45 -69 26 -60 36 -65 b 137 -85 76 -82 108 -85 z',\n        },\n        articStaccatoAbove: {\n            x_min: 1.4151102965496913,\n            x_max: 112,\n            y_min: 0,\n            y_max: 156,\n            ha: 156,\n            o: 'm 98 0 b 132 23 109 0 122 7 b 161 112 150 50 161 79 b 158 148 161 124 161 137 b 125 186 154 167 131 167 b 63 225 117 215 85 216 b 23 197 45 222 30 219 b 3 91 12 163 12 127 b 19 66 0 79 4 69 b 65 27 40 62 53 46 b 98 0 76 9 88 0 z',\n        },\n        articStaccatoBelow: {\n            x_min: 1.4151102965496913,\n            x_max: 112.08403222864916,\n            y_min: -156,\n            y_max: 0,\n            ha: 156,\n            o: 'm 132 -202 b 161 -112 151 -174 163 -145 b 158 -76 161 -101 161 -88 b 125 -39 153 -58 131 -58 b 63 0 115 -10 85 -9 b 23 -27 45 -3 30 -6 b 3 -134 12 -62 10 -98 b 19 -158 0 -145 4 -156 b 65 -197 40 -164 53 -179 b 98 -225 75 -216 88 -225 b 132 -202 109 -225 122 -217 z',\n        },\n        articStaccatissimoAbove: {\n            x_min: 0,\n            x_max: 139,\n            y_min: 0,\n            y_max: 411,\n            ha: 411,\n            o: 'm 104 0 b 144 115 143 29 138 75 b 197 423 158 217 180 320 b 200 454 199 433 200 444 b 181 540 200 482 193 513 b 112 592 167 573 141 592 b 55 567 92 592 72 585 b 0 490 32 546 3 527 l 0 484 b 27 279 14 416 14 347 b 84 20 43 193 52 104 b 96 0 86 13 92 6 z',\n        },\n        articStaccatissimoBelow: {\n            x_min: 0,\n            x_max: 139,\n            y_min: -411,\n            y_max: 0,\n            ha: 411,\n            o: 'm 88 -592 b 145 -567 108 -592 128 -585 b 200 -490 168 -546 197 -527 l 200 -484 b 173 -279 186 -416 186 -347 b 117 -20 157 -193 148 -104 b 104 0 114 -13 108 -6 l 96 0 b 56 -115 58 -29 62 -75 b 3 -423 42 -217 20 -320 b 0 -454 1 -433 0 -444 b 19 -540 0 -482 7 -513 b 88 -592 33 -573 59 -592 z',\n        },\n        articMarcatoAbove: {\n            x_min: 0.04121419527862119,\n            x_max: 396,\n            y_min: 0,\n            y_max: 328.0000000000001,\n            ha: 328.0000000000001,\n            o: 'm 477 0 b 510 13 488 0 500 6 b 570 124 546 40 563 81 b 547 183 570 147 560 166 b 356 422 487 265 405 330 b 346 442 354 429 350 436 l 346 444 b 318 465 340 456 330 464 l 312 469 b 274 449 294 480 284 461 b 242 413 262 438 253 425 b 56 196 177 343 112 274 b 1 56 26 154 13 105 b 27 20 -4 35 9 20 b 42 23 32 20 37 20 b 84 53 59 29 72 39 b 255 269 141 125 193 200 b 275 229 262 255 266 242 b 448 14 324 151 390 86 b 477 0 456 4 467 0 z',\n        },\n        articMarcatoBelow: {\n            x_min: 0,\n            x_max: 395.9587858047214,\n            y_min: -328.0000000000001,\n            y_max: 0,\n            ha: 328.0000000000001,\n            o: 'm 258 -469 b 297 -449 276 -480 287 -461 b 328 -413 308 -438 317 -425 b 514 -196 393 -343 458 -274 b 569 -56 544 -154 557 -105 b 543 -20 575 -35 562 -20 b 528 -23 539 -20 533 -20 b 487 -53 511 -29 498 -39 b 315 -269 429 -125 377 -200 b 295 -229 308 -255 304 -242 b 122 -14 246 -151 180 -86 b 94 0 114 -4 104 0 b 60 -13 82 0 71 -6 b 0 -124 24 -40 7 -81 b 23 -183 0 -147 10 -166 b 215 -422 84 -265 166 -330 b 225 -442 216 -429 220 -436 l 225 -444 b 252 -465 230 -456 240 -464 z',\n        },\n        fermataAbove: {\n            x_min: -0.04550444040404433,\n            x_max: 472,\n            y_min: 2.015071727506986,\n            y_max: 454,\n            ha: 451.984928272493,\n            o: 'm 39 10 b 78 108 66 37 71 73 b 163 311 92 181 111 252 b 284 423 199 353 239 392 b 373 458 312 444 340 454 b 433 431 395 458 410 446 b 603 153 530 361 596 276 b 595 121 603 144 595 131 l 595 88 b 602 50 596 75 589 55 b 639 73 619 43 631 60 b 651 102 645 82 648 92 b 667 194 660 132 662 163 b 680 278 671 222 672 248 b 560 567 680 386 638 481 b 396 654 508 625 452 649 b 291 632 364 654 325 644 b 161 526 235 613 200 566 b 4 249 85 446 26 357 b 4 174 0 222 -3 196 b 10 19 4 124 4 69 b 29 4 12 6 16 0 b 39 10 35 4 33 4 z m 338 37 b 370 40 350 36 357 36 b 380 75 387 40 380 43 b 389 94 382 79 382 85 b 356 132 389 111 374 122 b 269 154 328 147 300 156 b 225 125 252 154 228 157 b 261 48 222 81 232 56 b 338 37 287 40 312 40 z',\n        },\n        fermataBelow: {\n            x_min: -0.310835055998654,\n            x_max: 518.570567335755,\n            y_min: -430,\n            y_max: -0.9161449836506543,\n            ha: 429.08385501634933,\n            o: 'm 344 -615 b 500 -543 402 -602 452 -576 b 713 -253 605 -471 661 -364 b 746 -98 737 -204 750 -153 b 727 -59 744 -82 744 -59 b 688 -88 711 -59 694 -68 b 678 -109 687 -96 683 -102 b 562 -314 648 -183 611 -252 b 387 -439 516 -373 458 -416 b 328 -449 367 -446 347 -449 b 180 -386 274 -449 225 -423 b 69 -179 111 -330 69 -262 b 75 -121 69 -160 71 -141 b 84 -58 78 -101 84 -79 b 82 -39 84 -52 84 -45 b 68 -1 79 -26 82 -4 b 26 -32 49 0 33 -12 b 20 -52 24 -39 22 -45 b 0 -223 9 -107 -3 -161 b 141 -553 1 -348 27 -468 b 304 -619 192 -590 243 -619 b 344 -615 317 -619 330 -618 z m 415 -190 b 435 -157 429 -192 435 -184 b 308 -27 435 -86 379 -27 b 271 -46 287 -27 272 -35 b 269 -69 269 -55 269 -62 b 364 -183 269 -128 302 -170 z',\n        },\n        breathMarkComma: {\n            x_min: 0,\n            x_max: 148,\n            y_min: 0,\n            y_max: 275,\n            ha: 275,\n            o: 'm 120 0 b 187 78 156 20 174 48 b 213 209 206 121 213 164 b 206 294 213 238 210 265 b 140 390 200 337 171 367 b 122 396 134 395 128 396 b 68 382 105 396 85 384 b 46 379 60 382 53 382 b 0 328 12 369 0 357 b 1 311 0 323 1 317 b 30 210 4 275 22 243 b 66 167 39 179 46 167 b 94 171 73 167 82 168 b 143 180 109 174 124 180 b 160 179 148 180 154 180 b 120 66 124 145 120 107 b 120 0 120 45 121 23 z',\n        },\n        breathMarkUpbow: {\n            x_min: 0,\n            x_max: 254,\n            y_min: 0,\n            y_max: 595,\n            ha: 595,\n            o: 'm 233 0 b 256 48 251 14 253 30 b 272 183 264 92 265 138 b 311 455 289 274 295 364 b 350 716 327 541 341 628 b 366 815 354 749 366 782 b 359 857 366 829 363 842 b 327 815 334 852 330 832 b 302 674 315 769 310 721 b 248 357 288 567 269 462 b 225 226 240 314 242 268 b 210 251 212 232 213 243 b 69 721 163 408 117 564 b 32 835 58 760 53 801 b 20 851 29 841 27 851 b 14 850 19 851 16 851 b 0 828 6 847 0 838 l 0 825 b 12 765 1 804 7 785 b 194 125 73 552 132 338 b 233 0 206 84 213 42 z',\n        },\n        caesura: {\n            x_min: 0,\n            x_max: 565.5831864753837,\n            y_min: -0.09016994374947417,\n            y_max: 562.4481112129314,\n            ha: 562.5382811566809,\n            o: 'm 0 76 b 49 122 24 92 37 107 b 444 613 180 287 305 455 b 528 770 484 660 518 708 b 531 792 530 778 531 785 b 524 808 531 799 530 805 b 490 792 513 815 498 802 b 390 683 456 756 420 721 b 48 262 275 543 164 400 b 0 76 0 207 7 145 z m 226 1 b 248 13 238 -4 243 7 l 353 137 b 759 638 490 302 632 464 b 814 805 795 688 819 740 b 779 786 796 805 788 796 b 628 609 724 732 678 668 b 310 242 523 485 416 363 b 217 69 265 190 217 140 b 222 30 217 58 219 45 b 222 23 222 29 220 26 b 220 12 222 20 220 16 b 226 1 220 7 222 3 z',\n        },\n        caesuraCurved: {\n            x_min: 0,\n            x_max: 386,\n            y_min: -10,\n            y_max: 584,\n            ha: 594,\n            o: 'm 180 -14 b 246 14 213 -13 230 0 b 347 144 288 52 315 99 b 526 471 420 246 488 350 b 556 671 546 537 556 603 b 543 798 556 713 553 756 b 504 837 537 822 521 828 b 490 841 500 840 494 841 b 472 832 482 841 477 838 b 406 678 436 785 406 737 b 410 638 406 665 408 652 b 425 511 419 595 425 553 b 315 186 425 395 387 287 b 180 -14 271 122 228 58 z m 14 24 b 49 39 29 24 40 32 b 120 114 76 60 99 85 b 216 276 156 166 184 223 b 317 626 281 384 317 501 b 315 664 317 639 317 651 b 301 773 314 701 311 737 b 262 808 295 795 278 808 b 245 799 256 808 249 805 b 170 641 209 750 170 706 b 171 621 170 634 170 628 b 177 511 176 585 177 549 b 114 229 177 415 160 320 b 0 26 79 161 42 95 b 14 24 6 24 10 24 z',\n        },\n        restMaxima: {\n            x_min: 0,\n            x_max: 366,\n            y_min: -255,\n            y_max: 255,\n            ha: 510,\n            o: 'm 397 -367 b 504 -343 436 -367 468 -347 b 518 -318 516 -341 518 -330 b 527 -30 518 -217 527 -117 b 526 33 527 -7 527 13 l 526 301 b 501 350 526 323 520 341 b 428 367 477 361 452 367 b 374 359 410 367 393 364 b 357 333 361 354 357 347 b 356 91 357 252 356 171 l 356 30 b 340 -307 357 -82 346 -194 b 397 -367 337 -354 350 -367 z m 46 -357 b 58 -356 49 -357 53 -357 b 154 -333 91 -351 121 -338 b 173 -305 168 -330 173 -320 l 173 302 b 132 356 173 330 157 348 b 68 364 112 363 89 364 b 3 304 19 363 1 348 l 3 4 l 0 4 b 1 -302 0 -98 0 -200 b 46 -357 1 -331 16 -357 z',\n        },\n        restDoubleWhole: {\n            x_min: 0,\n            x_max: 122,\n            y_min: 0,\n            y_max: 249,\n            ha: 249,\n            o: 'm 43 0 b 58 1 48 0 52 0 b 124 20 81 6 102 17 b 176 96 173 27 176 58 b 173 220 174 138 173 179 b 176 304 173 248 176 276 b 140 353 176 331 163 346 b 95 359 125 356 111 359 b 32 346 73 359 52 354 b 0 315 20 340 0 337 b 1 243 0 291 1 268 l 1 174 l 4 174 l 4 48 b 43 0 4 16 17 0 z',\n        },\n        restWhole: {\n            x_min: 0.8908513171538642,\n            x_max: 500,\n            y_min: -120,\n            y_max: 14,\n            ha: 134,\n            o: 'm 356 -173 l 356 -171 l 642 -171 b 719 -115 680 -171 717 -145 b 720 -82 719 -104 720 -92 b 711 -20 720 -60 719 -40 b 672 17 704 0 694 10 b 649 20 664 20 657 20 b 605 17 634 20 621 17 b 92 19 433 17 262 17 b 29 7 69 20 49 12 b 9 -17 12 4 9 -6 b 10 -43 9 -26 10 -35 b 1 -84 10 -58 3 -72 b 76 -173 0 -147 7 -173 z',\n        },\n        restHalf: {\n            x_min: 0,\n            x_max: 518.3998530468286,\n            y_min: 0,\n            y_max: 162,\n            ha: 162,\n            o: 'm 98 0 l 556 0 b 665 1 592 0 629 0 b 746 82 720 3 743 29 b 736 174 749 114 740 144 b 670 232 729 215 708 232 b 570 229 636 232 603 229 b 356 233 498 229 426 233 l 73 233 b 0 179 19 233 0 220 b 1 154 0 171 0 164 b 6 95 4 135 6 115 b 98 0 3 27 29 0 z',\n        },\n        restQuarter: {\n            x_min: -0.3784452492533808,\n            x_max: 263,\n            y_min: -415,\n            y_max: 415,\n            ha: 830,\n            o: 'm 151 -596 b 164 -563 163 -589 161 -575 b 160 -546 164 -557 161 -552 b 124 -396 148 -495 135 -446 b 122 -380 122 -390 122 -384 b 199 -255 122 -331 158 -272 b 228 -256 209 -249 217 -253 b 324 -346 274 -271 298 -310 b 353 -369 331 -356 341 -369 b 360 -367 356 -369 357 -369 b 379 -336 373 -361 379 -348 l 377 -325 b 344 -232 372 -292 366 -258 b 249 -58 301 -180 278 -117 b 242 -36 245 -49 242 -42 b 258 -7 242 -26 248 -17 b 328 78 284 20 311 45 b 354 158 344 104 354 131 b 337 216 354 177 350 196 b 213 435 294 288 249 359 b 115 575 189 487 158 536 b 78 598 105 585 92 598 b 59 592 72 598 66 596 b 39 562 45 583 39 572 b 53 527 39 550 45 539 b 168 344 98 469 125 402 b 187 307 181 328 187 317 b 153 269 187 294 176 284 b 62 213 122 252 91 235 b 40 180 48 203 40 192 b 46 158 40 173 43 166 b 99 65 60 125 79 95 b 183 -79 131 20 160 -29 b 156 -86 173 -88 164 -85 b 0 -261 58 -99 -7 -173 b 96 -557 10 -366 49 -464 b 124 -585 102 -569 109 -580 b 145 -598 132 -588 138 -598 b 151 -596 147 -598 150 -598 z',\n        },\n        rest8th: {\n            x_min: 0,\n            x_max: 289,\n            y_min: -260,\n            y_max: 261,\n            ha: 521,\n            o: 'm 164 -374 b 212 -340 190 -373 203 -357 b 276 -190 238 -292 258 -242 b 410 285 333 -36 359 128 b 416 314 413 294 416 304 l 416 321 b 393 354 415 341 410 354 b 382 353 389 354 386 354 b 292 311 347 347 315 333 b 174 225 256 276 216 251 b 157 219 168 222 163 219 b 140 228 151 219 145 222 b 131 246 134 233 131 240 b 135 262 131 252 132 256 b 147 298 141 272 147 285 b 127 367 147 323 154 354 b 94 376 114 373 102 376 b 48 336 75 376 63 363 b 3 181 20 288 12 235 b 0 150 1 170 0 160 b 109 24 0 84 35 24 b 171 36 127 24 148 27 b 289 101 213 52 248 75 b 164 -374 256 -62 193 -213 z',\n        },\n        rest16th: {\n            x_min: 0,\n            x_max: 333,\n            y_min: -328.283950617284,\n            y_max: 244,\n            ha: 572.2839506172841,\n            o: 'm 209 -471 b 246 -458 222 -477 236 -468 b 307 -338 279 -425 300 -384 b 324 -226 312 -301 317 -262 b 428 161 350 -94 386 35 b 480 318 445 215 480 259 b 467 347 480 331 477 341 b 445 351 461 350 454 351 b 408 337 432 351 419 347 b 402 333 405 336 403 334 b 223 215 344 294 294 245 b 236 259 229 233 235 246 b 238 276 238 265 238 271 b 212 338 238 302 226 334 b 193 341 206 340 199 341 b 86 289 156 341 104 317 b 59 180 66 255 59 217 b 156 27 59 76 92 27 b 236 46 179 27 204 35 b 338 101 271 59 298 82 b 289 -49 312 49 302 0 b 196 -122 276 -99 235 -107 b 176 -114 187 -127 176 -127 l 176 -111 b 157 -53 177 -88 164 -72 b 69 -9 141 -7 101 -16 b 17 -48 43 -3 29 -27 b 0 -127 4 -73 0 -99 b 6 -186 0 -147 1 -167 b 82 -294 17 -262 37 -294 b 160 -276 102 -294 128 -289 b 219 -242 181 -268 203 -259 b 236 -230 223 -236 229 -230 b 243 -232 239 -230 240 -230 b 235 -275 248 -246 239 -261 b 202 -456 220 -334 202 -395 b 209 -471 202 -462 203 -468 z',\n        },\n        rest32nd: {\n            x_min: 0,\n            x_max: 347,\n            y_min: -497.5023916875033,\n            y_max: 483,\n            ha: 980.5023916875033,\n            o: 'm 177 -716 b 217 -690 194 -720 209 -704 b 233 -655 225 -680 230 -668 b 292 -390 253 -567 275 -480 b 361 -48 312 -275 336 -161 b 452 400 393 102 422 252 b 497 629 467 477 482 553 b 500 647 498 635 500 641 b 480 691 500 665 492 684 b 464 696 475 694 469 696 b 418 674 448 696 431 685 l 361 626 b 333 611 353 618 343 612 b 308 629 325 611 317 616 b 239 667 292 651 265 661 b 204 670 228 668 216 670 b 86 559 141 670 95 628 b 85 537 86 552 85 544 b 107 416 85 495 95 455 b 161 372 114 389 134 372 b 174 373 166 372 170 372 b 226 383 192 374 209 377 b 387 478 285 402 330 444 b 364 386 379 444 364 415 b 276 271 364 323 320 298 b 265 266 272 268 268 266 b 252 276 261 266 256 269 b 143 333 229 311 186 333 b 107 327 130 333 118 330 b 43 243 62 314 46 291 b 58 145 43 210 52 179 b 150 63 68 92 99 63 b 315 132 213 63 259 98 b 266 -58 297 63 281 4 b 207 -101 259 -91 230 -96 b 186 -66 186 -107 199 -75 b 180 -50 181 -63 183 -55 b 101 -3 160 -23 135 -3 b 9 -66 59 -3 20 -32 b 0 -118 3 -84 0 -101 b 10 -196 0 -144 6 -170 b 104 -287 20 -256 52 -287 b 137 -282 114 -287 125 -287 b 184 -269 151 -281 171 -269 b 196 -275 190 -269 193 -271 b 199 -287 197 -278 199 -282 b 184 -343 199 -304 189 -325 b 181 -348 184 -346 183 -347 b 134 -595 158 -429 131 -508 b 156 -677 134 -624 150 -648 b 177 -716 158 -693 160 -713 z',\n        },\n        rest64th: {\n            x_min: 0,\n            x_max: 428,\n            y_min: -720,\n            y_max: 473.6797408388932,\n            ha: 1193.6797408388932,\n            o: 'm 200 -1037 b 229 -1012 215 -1037 222 -1025 b 238 -984 233 -1004 236 -994 b 282 -780 248 -914 265 -848 b 386 -369 317 -644 354 -507 b 491 104 422 -212 451 -53 b 600 541 528 249 550 399 b 616 629 611 570 616 599 b 600 680 616 648 615 671 b 550 665 586 687 566 677 b 480 618 527 649 501 635 b 464 611 474 613 468 611 b 448 622 458 611 454 615 b 366 662 425 651 397 662 b 331 658 354 662 343 661 b 242 572 285 647 253 619 b 236 528 239 557 236 543 b 266 400 236 484 251 442 b 325 373 274 377 301 373 b 436 409 366 373 403 383 l 494 452 b 474 360 485 416 474 389 b 383 248 474 297 435 269 b 320 328 377 288 351 310 b 276 341 305 337 291 341 b 186 269 235 341 194 311 b 181 230 183 256 181 243 b 187 153 181 204 186 179 b 279 63 192 86 233 63 b 304 65 288 63 295 63 b 416 115 344 72 379 92 b 387 -14 406 69 397 27 b 320 -95 380 -52 369 -86 b 318 -79 320 -89 320 -84 b 223 0 305 -29 271 0 b 122 -81 171 0 135 -30 b 118 -127 120 -96 118 -112 l 118 -196 b 137 -242 118 -215 125 -229 b 209 -275 157 -266 181 -275 b 249 -269 222 -275 235 -274 b 318 -248 272 -264 294 -255 b 281 -390 315 -301 292 -344 b 276 -400 279 -393 279 -397 b 259 -420 272 -408 266 -416 b 246 -429 255 -425 251 -429 b 233 -415 242 -429 238 -426 b 176 -359 225 -389 200 -372 b 121 -346 158 -348 140 -346 b 14 -408 73 -346 27 -370 b 0 -498 4 -438 0 -468 b 6 -564 0 -520 3 -543 b 91 -635 12 -611 45 -635 b 131 -629 104 -635 117 -634 b 223 -590 163 -622 190 -603 b 166 -824 203 -671 189 -747 b 148 -912 157 -852 148 -881 b 156 -955 148 -926 150 -940 b 177 -1008 161 -972 170 -991 b 200 -1037 181 -1020 183 -1037 z',\n        },\n        rest128th: {\n            x_min: 0.6717818579024267,\n            x_max: 491,\n            y_min: -711,\n            y_max: 719,\n            ha: 1430,\n            o: 'm 233 -1015 b 271 -956 256 -1002 266 -981 l 314 -723 b 393 -350 337 -598 366 -474 b 543 312 442 -128 492 91 b 687 841 583 490 635 665 b 707 958 698 880 707 919 b 706 986 707 968 707 976 b 688 1025 704 999 704 1024 b 670 1027 683 1025 677 1027 b 629 1007 655 1027 639 1022 b 559 945 613 981 586 968 b 541 1004 553 968 559 991 b 456 1035 516 1024 488 1035 b 419 1030 444 1035 431 1034 b 344 953 379 1018 353 995 b 340 900 341 936 340 917 b 341 847 340 881 341 864 b 380 779 340 815 354 793 b 464 763 406 765 435 762 b 592 814 510 763 549 786 b 546 660 575 757 556 710 b 480 585 537 619 517 598 b 478 599 480 590 478 595 b 386 678 472 641 428 678 b 294 612 343 678 304 651 b 279 477 282 567 278 521 b 363 395 281 428 317 395 b 380 396 369 395 374 395 b 488 436 416 403 449 419 b 384 233 469 357 468 275 b 359 291 373 252 377 276 b 282 318 337 310 310 318 b 181 264 243 318 203 298 b 154 107 153 216 154 161 b 242 6 154 42 187 6 b 278 10 253 6 265 7 b 408 88 330 22 366 55 b 387 -1 400 56 393 27 b 301 -112 379 -55 354 -94 b 289 -65 297 -95 302 -79 b 219 -32 269 -42 245 -32 b 183 -37 207 -32 196 -35 b 112 -109 144 -46 121 -71 b 105 -219 104 -145 108 -183 b 186 -315 101 -276 134 -315 b 230 -307 199 -315 215 -312 b 324 -256 264 -295 292 -275 b 180 -491 323 -383 266 -471 b 183 -459 180 -480 180 -469 b 184 -442 184 -454 184 -448 l 184 -436 b 135 -369 184 -403 170 -383 b 102 -363 125 -364 114 -363 b 29 -399 73 -363 45 -376 b 1 -556 -4 -448 6 -503 b 109 -670 -4 -625 43 -670 b 140 -667 118 -670 130 -668 b 253 -616 180 -658 213 -638 b 238 -688 248 -644 242 -665 b 192 -959 220 -779 192 -867 b 193 -992 192 -971 192 -981 b 210 -1024 194 -1014 199 -1024 b 233 -1015 216 -1024 223 -1021 z',\n        },\n        dynamicPiano: {\n            x_min: -49,\n            x_max: 326.5019318364244,\n            y_min: -142,\n            y_max: 515,\n            ha: 657,\n            o: 'm -56 -204 b -42 -202 -52 -204 -46 -203 b -19 -194 -35 -202 -26 -197 b 147 -138 35 -170 91 -151 b 249 -58 194 -127 223 -95 b 262 -29 255 -50 262 -39 b 258 -17 262 -24 261 -20 b 232 -7 252 -10 242 -7 b 210 -12 225 -7 217 -9 b 125 -40 184 -23 157 -30 b 183 140 153 19 171 79 b 251 167 207 144 230 153 b 469 518 383 262 480 382 b 357 687 472 626 420 687 b 315 678 344 687 330 684 b 204 600 279 664 240 634 b 210 704 206 635 209 670 b 215 721 212 710 215 716 b 206 733 215 727 212 730 b 180 742 197 736 189 742 b 164 734 176 742 170 740 b 1 575 108 684 36 645 b -7 557 -1 569 -7 563 b -6 553 -7 556 -7 554 b 7 547 -3 547 3 547 l 17 547 b 82 575 43 547 59 567 l 82 452 b 56 46 82 317 81 180 b 17 -66 49 7 46 -36 b -62 -173 -13 -99 -37 -135 b -71 -192 -66 -179 -71 -184 b -68 -199 -71 -193 -69 -196 b -56 -204 -65 -203 -60 -204 z m 196 258 b 197 266 197 261 197 264 b 200 510 200 347 199 429 b 233 543 210 521 222 533 b 281 560 249 554 266 560 b 340 503 310 560 333 540 b 344 461 343 488 344 474 b 321 323 344 413 333 369 b 268 272 315 300 295 281 b 196 258 245 265 220 261 z',\n        },\n        dynamicMezzo: {\n            x_min: -18,\n            x_max: 559,\n            y_min: -50,\n            y_max: 365,\n            ha: 415,\n            o: 'm 43 -71 b 160 19 86 -71 143 -26 b 230 264 189 99 200 184 b 282 363 243 297 259 327 b 287 320 285 347 287 333 b 284 279 287 305 285 292 l 249 -12 b 275 -43 248 -29 245 -43 b 395 45 321 -43 389 3 b 462 271 406 124 436 197 b 523 387 475 310 490 348 l 523 346 b 504 130 521 274 513 202 b 501 81 501 114 501 98 b 510 3 501 55 504 29 b 580 -72 521 -48 543 -72 b 625 -63 593 -72 608 -69 b 789 50 690 -43 744 -3 b 805 72 795 56 805 63 b 798 85 805 76 802 81 b 778 94 792 91 785 94 b 755 85 770 94 763 91 l 693 40 b 675 33 685 36 680 33 b 658 52 668 33 662 39 b 645 144 651 82 645 112 b 658 448 641 246 660 346 b 606 507 658 485 638 507 b 583 504 599 507 592 505 b 495 446 547 497 521 471 b 420 373 471 423 448 399 b 413 458 418 406 418 432 b 361 507 408 490 386 507 b 320 491 347 507 333 501 b 160 307 256 444 207 382 l 160 337 b 174 488 160 387 174 438 b 156 521 174 501 173 513 b 137 526 148 524 143 526 b 109 513 127 526 118 520 b -16 399 66 477 23 439 b -26 383 -20 395 -26 389 l -26 379 b -14 370 -24 372 -20 370 b -6 372 -12 370 -9 372 b 19 376 4 374 12 376 b 36 359 32 376 36 370 b 30 330 36 350 35 341 l 30 323 b 9 -35 23 203 17 85 b 43 -71 6 -65 19 -71 z',\n        },\n        dynamicForte: {\n            x_min: -144,\n            x_max: 311.30112136775,\n            y_min: -115.3876295915697,\n            y_max: 504,\n            ha: 619.3876295915697,\n            o: 'm -101 -166 b 173 76 7 -153 150 -30 b 206 344 192 164 202 253 b 268 338 226 343 246 341 b 384 395 317 333 353 361 b 397 419 393 405 397 412 b 367 442 397 429 387 436 b 350 444 361 444 356 444 b 206 455 302 449 255 454 l 206 474 b 202 540 204 495 202 518 b 209 593 202 557 203 576 b 236 624 215 613 225 624 b 265 612 245 624 253 619 b 308 552 287 596 302 577 b 336 533 312 534 323 533 b 448 611 366 533 444 583 b 399 696 452 648 423 671 b 382 706 395 700 387 703 b 308 726 357 720 333 726 b 207 684 272 726 239 711 b 60 455 135 622 60 560 l 10 455 b -23 448 -1 455 -13 454 b -102 372 -55 426 -76 397 b -109 357 -108 367 -109 361 b -95 347 -109 353 -105 348 b -63 346 -84 346 -73 346 b 0 344 -43 344 -22 344 l 63 344 b 53 186 63 291 59 239 b 23 0 46 124 42 60 b -35 -60 10 -42 -6 -60 b -73 -52 -45 -60 -58 -58 b -91 -48 -79 -49 -85 -48 b -109 -53 -96 -48 -102 -49 b -199 -124 -143 -72 -168 -99 b -207 -137 -203 -128 -207 -132 b -194 -148 -207 -141 -203 -145 b -101 -166 -164 -160 -132 -168 z',\n        },\n        dynamicRinforzando: {\n            x_min: -75,\n            x_max: 322.0960720195126,\n            y_min: -90,\n            y_max: 325,\n            ha: 415,\n            o: 'm 23 -130 b 40 -125 27 -130 33 -128 b 128 -9 81 -114 125 -53 b 145 200 132 62 141 130 b 148 238 147 212 148 225 b 308 321 184 291 245 321 b 363 314 325 321 344 318 b 377 310 369 312 373 310 b 384 311 380 310 382 310 b 464 415 410 317 464 389 b 446 433 465 429 455 429 b 390 445 428 441 409 445 b 305 429 361 445 334 438 b 167 346 252 413 202 393 b 153 325 163 338 158 333 b 148 438 154 363 151 399 b 121 468 147 456 134 468 b 101 458 115 468 108 465 b -63 310 46 409 -16 367 b -108 240 -78 289 -98 271 b 32 330 -50 256 -13 297 b 37 304 37 320 37 312 l 37 292 b 10 -101 27 161 20 30 b 23 -130 9 -120 12 -130 z',\n        },\n        dynamicSforzando: {\n            x_min: 0,\n            x_max: 296,\n            y_min: 0,\n            y_max: 379,\n            ha: 379,\n            o: 'm 151 0 b 174 1 160 0 166 0 b 392 158 272 14 346 71 b 405 207 400 174 405 190 b 359 287 405 236 389 265 b 261 325 328 308 294 315 b 168 413 216 340 181 366 b 166 426 167 418 166 423 b 176 438 166 432 167 436 b 199 441 183 441 190 441 b 310 393 238 441 295 422 b 334 370 317 376 325 370 b 363 386 343 370 353 379 b 422 445 386 402 408 420 b 426 458 425 449 426 454 b 422 469 426 462 425 465 b 274 546 395 518 333 546 b 161 503 232 546 190 531 b 86 405 132 472 108 439 b 71 347 75 387 71 367 b 112 256 71 312 85 279 b 209 215 141 232 176 226 b 284 168 238 206 266 197 b 300 131 291 157 300 144 b 298 120 300 127 298 122 b 278 107 294 109 285 108 b 262 108 271 107 266 108 l 259 108 b 114 157 200 107 156 125 b 96 181 104 163 96 170 l 96 184 b 102 202 96 190 102 196 b 96 209 102 204 101 207 b 63 194 82 215 72 204 b 7 109 42 168 26 138 b 0 86 3 101 0 94 b 13 60 0 78 4 68 b 151 0 53 23 101 0 z',\n        },\n        dynamicZ: {\n            x_min: -42.73880183193087,\n            x_max: 331,\n            y_min: 0,\n            y_max: 328,\n            ha: 328,\n            o: 'm -45 0 b -6 16 -32 0 -17 10 b 3 20 -3 16 0 19 b 144 60 49 48 96 60 b 284 22 190 60 238 46 b 348 4 305 10 327 4 b 461 75 393 4 435 30 b 468 91 464 81 467 86 b 456 104 468 95 465 99 b 287 173 402 131 348 167 b 239 176 271 174 255 176 b 168 174 217 176 194 174 b 367 340 236 236 298 294 b 459 423 402 363 432 392 b 477 454 467 431 475 442 b 474 462 477 456 475 459 b 454 472 469 469 462 472 b 432 468 446 472 439 469 b 356 448 406 461 380 455 b 210 422 307 433 258 422 b 109 442 177 422 144 428 b 94 445 104 444 99 445 b 69 433 85 445 76 442 b 27 390 56 419 39 406 b -9 343 16 373 -17 357 b 63 311 3 320 36 314 l 78 311 b 132 307 95 308 114 307 b 240 314 168 307 203 311 l 193 271 b -37 50 117 196 19 145 b -59 7 -46 36 -69 20 b -45 0 -55 3 -50 0 z',\n        },\n        ornamentTrill: {\n            x_min: 1,\n            x_max: 551,\n            y_min: -18,\n            y_max: 539,\n            ha: 557,\n            o: 'm 321 612 b 190 602 278 605 235 605 l 190 638 b 187 693 190 652 190 667 b 161 776 184 717 193 776 b 137 747 150 776 137 766 b 130 654 135 716 131 685 l 130 596 l 52 588 b 4 539 23 585 7 570 b 1 477 3 530 1 500 b 3 448 1 461 3 448 l 3 452 b 53 432 6 436 23 432 b 134 435 75 432 102 433 b 151 117 138 328 147 223 b 170 13 153 82 157 46 b 209 -26 179 -10 193 -26 b 222 -22 213 -26 217 -24 b 269 -17 233 -16 253 -27 b 343 135 325 19 346 66 b 343 158 343 147 344 147 b 323 192 341 171 337 187 b 291 176 311 194 300 184 l 264 148 b 229 131 261 145 238 131 b 212 170 209 131 213 154 b 194 438 203 259 199 348 l 272 442 b 284 452 276 441 279 441 b 305 462 287 461 295 462 l 312 462 b 346 477 325 462 340 464 b 366 560 357 503 366 531 b 321 612 366 598 356 618 z m 759 588 b 711 560 749 592 733 570 b 588 500 671 541 631 521 b 583 533 586 514 586 524 b 560 576 577 549 577 572 b 517 550 541 582 528 564 b 416 423 482 508 452 462 b 382 353 392 397 384 370 b 387 305 380 341 386 318 b 392 275 389 295 392 285 b 409 243 393 262 393 243 b 431 262 419 243 425 255 b 521 373 459 298 488 333 b 523 354 521 366 523 360 b 520 337 523 346 521 340 b 508 295 513 323 508 310 b 530 102 508 279 524 122 b 549 66 533 88 530 66 b 577 99 563 66 572 84 b 580 131 580 109 580 121 l 580 302 b 600 347 580 318 582 337 b 701 392 632 364 665 384 b 793 518 785 409 793 435 b 759 588 793 559 785 576 z',\n        },\n        ornamentTurn: {\n            x_min: 0,\n            x_max: 574,\n            y_min: 0,\n            y_max: 312,\n            ha: 312,\n            o: 'm 651 0 b 816 132 727 0 796 46 b 827 223 822 163 827 193 b 808 340 827 262 821 301 b 665 449 785 408 729 449 b 636 446 655 449 647 448 b 589 384 600 441 586 422 l 602 300 b 611 285 603 291 605 285 b 621 288 613 285 616 287 b 655 295 632 294 644 295 b 711 284 674 295 693 289 b 773 209 740 275 773 232 b 697 156 773 184 734 160 b 664 154 685 154 675 154 b 579 168 635 154 608 158 b 455 242 533 186 495 213 b 261 400 387 291 331 354 b 160 432 225 422 190 432 b 20 328 98 432 49 392 b 0 229 6 295 0 262 b 30 71 0 176 14 122 b 144 3 43 29 96 3 b 168 6 153 3 160 4 b 248 122 233 20 248 39 b 246 147 248 124 248 135 b 226 177 243 164 239 177 b 206 170 220 177 215 174 b 144 154 186 158 166 154 b 79 170 122 154 101 160 b 53 202 62 179 53 189 b 60 228 53 209 55 217 b 161 281 81 261 120 281 b 183 279 168 281 176 281 b 325 190 243 269 284 229 b 572 16 402 124 475 53 b 651 0 598 6 625 0 z',\n        },\n        ornamentTurnSlash: {\n            x_min: 0,\n            x_max: 574,\n            y_min: -106,\n            y_max: 405,\n            ha: 511,\n            o: 'm 441 -153 b 456 -60 455 -118 456 -89 b 455 81 455 -14 455 33 b 572 14 491 55 530 30 b 651 -1 598 4 625 -1 b 816 131 727 -1 796 45 b 827 222 822 161 827 192 b 808 338 827 261 821 300 b 665 448 785 406 729 448 b 636 445 655 448 647 446 b 589 383 600 439 586 420 l 602 298 b 611 284 603 289 605 284 b 621 287 613 284 616 285 b 655 294 632 292 644 294 b 711 282 674 294 693 288 b 773 207 740 274 773 230 b 697 154 773 183 734 158 b 664 153 685 153 675 153 b 579 167 635 153 608 157 b 455 240 533 183 495 212 b 454 242 455 240 455 242 l 454 337 b 452 488 454 386 452 439 b 433 570 452 517 451 546 b 425 583 431 575 431 583 l 422 583 b 403 566 415 582 408 573 b 402 546 400 560 402 553 l 397 287 b 261 399 353 325 310 366 b 160 431 225 420 190 431 b 20 327 98 431 48 390 b 0 228 6 294 0 261 b 30 69 0 174 14 121 b 144 1 43 27 96 1 b 168 4 153 1 160 3 b 248 121 233 19 248 37 b 246 145 248 122 248 134 b 226 176 243 163 239 176 b 206 168 220 176 215 173 b 144 153 186 157 166 153 b 79 168 122 153 101 158 b 53 200 62 177 53 187 b 60 226 53 207 55 216 b 161 279 79 259 120 279 b 183 278 168 279 176 279 b 325 189 243 266 282 226 b 395 130 348 168 372 148 b 393 71 393 109 393 89 b 441 -153 390 -6 402 -78 z',\n        },\n        ornamentMordent: {\n            x_min: 0,\n            x_max: 700,\n            y_min: 0,\n            y_max: 497,\n            ha: 497,\n            o: 'm 513 0 b 528 39 526 14 527 27 b 531 72 531 50 531 60 b 528 138 531 94 528 117 l 528 347 b 552 359 537 354 544 359 b 579 338 560 359 569 353 b 674 217 609 297 639 255 b 719 190 690 200 704 190 b 759 215 732 190 744 197 b 940 395 815 279 877 337 b 1001 490 968 422 986 455 b 1008 513 1004 495 1008 505 b 1002 524 1008 517 1007 521 b 968 516 994 530 978 524 b 960 508 965 513 963 510 b 798 356 900 464 848 410 b 778 341 791 347 783 341 b 757 354 772 341 765 346 b 661 475 720 392 690 432 b 611 517 644 504 629 517 b 563 498 598 517 583 511 b 527 471 550 490 539 481 l 527 570 b 492 716 526 619 523 671 b 472 677 480 704 472 694 b 465 399 474 585 468 491 b 439 366 456 387 448 376 b 384 320 415 336 399 320 b 330 367 369 320 354 336 b 325 376 328 369 327 373 b 226 490 291 413 265 456 b 189 505 213 500 202 505 b 157 491 177 505 167 500 b 0 229 75 420 0 346 b 1 202 0 220 0 212 b 22 215 12 203 16 209 b 124 327 55 252 89 289 b 147 343 132 337 140 343 b 171 323 156 343 164 336 b 266 197 196 276 232 236 b 337 157 291 170 314 157 b 410 207 361 157 386 174 b 461 274 428 229 444 252 b 462 166 461 238 461 202 b 513 0 465 108 487 55 z',\n        },\n        ornamentShortTrill: {\n            x_min: 0,\n            x_max: 747,\n            y_min: 0,\n            y_max: 243,\n            ha: 243,\n            o: 'm 379 0 b 428 14 395 0 410 4 b 474 56 445 26 461 39 b 552 157 500 89 526 122 b 566 168 556 163 560 168 b 575 157 569 168 572 166 b 664 36 592 107 628 72 b 733 1 685 13 710 1 b 802 35 757 1 780 13 b 1007 249 871 105 940 177 b 1067 324 1028 272 1054 295 b 1076 340 1068 330 1076 334 b 1073 346 1076 341 1076 343 b 1057 350 1068 348 1063 350 b 1047 347 1053 350 1050 350 b 1001 310 1031 336 1015 324 l 857 157 b 844 143 852 153 848 143 b 835 150 841 143 838 144 b 757 242 815 186 780 209 b 685 298 739 268 713 284 b 641 310 670 305 655 310 b 590 288 625 310 608 304 b 497 179 554 256 527 215 b 480 164 490 170 485 164 b 462 179 474 164 469 168 b 372 295 436 220 405 258 b 278 344 346 324 312 344 b 199 310 252 344 226 334 b 92 196 161 274 128 233 b 0 24 46 148 23 89 b 42 48 22 27 32 37 b 156 168 84 85 114 132 b 196 192 174 184 186 192 b 228 158 206 192 215 181 b 312 36 252 114 282 75 b 379 0 331 12 354 0 z',\n        },\n        ornamentTremblement: {\n            x_min: 0,\n            x_max: 982.17691453624,\n            y_min: 0,\n            y_max: 224,\n            ha: 224,\n            o: 'm 0 0 b 63 36 30 12 48 23 b 157 124 94 66 125 94 b 177 135 164 131 170 135 b 196 122 183 135 189 131 b 268 40 217 94 245 68 b 323 6 288 16 304 6 b 369 20 336 6 350 10 b 412 53 384 29 399 40 b 501 145 442 84 472 114 b 523 158 508 154 516 158 b 543 145 528 158 536 154 b 641 45 576 112 608 78 b 698 17 658 27 677 17 b 729 23 708 17 719 20 b 804 65 756 32 780 46 b 904 154 837 95 871 124 b 920 163 910 160 916 163 b 936 153 924 163 930 160 b 1024 60 965 121 996 92 b 1112 13 1053 29 1080 13 b 1184 39 1135 13 1158 22 b 1359 194 1248 84 1305 138 b 1413 301 1388 223 1403 261 b 1404 323 1417 315 1413 323 b 1391 320 1400 323 1395 321 b 1344 294 1375 314 1358 307 b 1224 186 1305 258 1269 216 b 1194 173 1212 179 1202 173 b 1165 193 1184 173 1175 179 b 1096 271 1145 222 1122 248 b 1001 318 1061 302 1031 318 b 903 268 969 318 937 301 b 806 186 871 239 841 210 b 782 174 796 179 789 174 b 756 193 773 174 765 180 b 652 291 729 232 693 266 b 596 308 634 302 615 308 b 530 278 573 308 552 298 l 415 168 b 393 157 408 161 400 157 b 373 171 387 157 380 161 b 305 245 353 197 330 222 b 248 276 285 266 266 278 b 189 245 229 276 210 266 b 81 144 156 209 120 174 b 0 0 33 109 26 56 z',\n        },\n        ornamentPrecompAppoggTrill: {\n            x_min: -0.11067192132025548,\n            x_max: 1066,\n            y_min: -50,\n            y_max: 533.1706452421108,\n            ha: 583.1706452421108,\n            o: 'm 187 -46 b 213 -14 197 -37 204 -26 b 285 151 251 36 266 94 b 304 189 294 177 297 189 b 337 168 311 189 320 181 b 458 33 386 131 415 76 b 495 12 472 19 484 12 b 531 40 508 12 518 22 b 580 168 557 79 569 124 b 622 235 592 213 603 235 b 683 194 636 235 655 222 b 838 26 737 140 791 86 b 919 -33 860 -1 881 -39 b 984 53 960 -27 971 19 b 1022 156 998 86 1008 122 b 1054 190 1032 179 1041 190 b 1089 167 1063 190 1074 183 b 1208 32 1129 122 1171 78 b 1244 10 1221 17 1231 10 b 1273 22 1253 10 1263 14 b 1496 206 1352 78 1427 137 b 1535 310 1526 236 1535 272 b 1531 359 1535 325 1534 343 b 1496 343 1515 360 1506 351 l 1309 192 b 1269 167 1289 176 1279 167 b 1234 199 1260 167 1251 177 b 1122 324 1200 243 1168 289 b 1074 344 1106 337 1089 344 b 1014 301 1051 344 1030 328 b 952 144 985 252 971 197 b 933 121 946 128 940 121 b 910 137 927 121 920 125 b 850 210 888 161 870 186 b 687 369 799 266 750 325 b 631 390 665 383 647 390 b 567 327 602 390 580 369 b 527 199 554 284 543 242 b 508 168 520 179 514 168 b 482 192 503 168 495 177 b 353 328 444 240 405 292 b 312 343 338 338 324 343 b 266 297 292 343 276 327 b 204 125 248 239 232 180 b 143 79 193 102 173 79 b 92 122 117 79 105 102 b 81 154 86 131 84 143 b 48 423 59 242 50 333 b 45 544 46 464 45 504 b 53 730 45 606 48 668 b 40 768 55 744 52 766 b 13 730 19 770 14 747 b 0 514 7 658 -1 586 b 26 122 3 383 6 252 b 75 -36 35 66 40 10 b 134 -72 92 -59 112 -72 b 187 -46 151 -72 170 -63 z',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            x_min: 0,\n            x_max: 1088,\n            y_min: -380,\n            y_max: 252,\n            ha: 632,\n            o: 'm 560 -539 b 439 -481 527 -497 484 -485 b 354 -461 409 -478 380 -477 b 131 -154 236 -389 161 -285 b 124 -98 127 -135 124 -117 b 196 55 124 -40 148 10 b 308 99 230 86 268 99 b 399 81 337 99 367 92 b 514 22 441 66 477 43 b 619 -30 567 -9 590 -30 b 719 17 642 -30 670 -16 b 861 131 769 52 818 88 b 899 150 874 144 887 150 b 936 117 913 150 926 138 b 965 43 948 94 956 68 b 1007 -1 973 24 978 -1 b 1048 30 1025 -1 1037 16 b 1070 65 1057 40 1064 52 b 1110 148 1084 92 1096 121 b 1145 190 1120 164 1120 190 b 1191 153 1169 192 1179 168 b 1256 29 1218 115 1231 68 b 1292 1 1267 10 1277 1 b 1320 10 1300 1 1309 4 b 1369 48 1339 19 1355 33 b 1515 196 1418 96 1464 148 b 1567 343 1558 238 1567 287 b 1555 363 1565 357 1562 363 b 1539 356 1551 363 1547 360 b 1433 268 1502 330 1466 301 b 1335 171 1401 236 1374 199 b 1310 163 1325 166 1318 163 b 1286 183 1302 163 1293 168 b 1218 311 1264 226 1247 272 b 1164 351 1200 337 1182 351 b 1110 308 1146 351 1128 337 b 1031 176 1084 265 1058 219 b 1015 161 1025 166 1021 161 b 999 179 1009 161 1005 167 b 955 279 985 213 973 248 b 913 307 943 300 930 307 b 887 302 904 307 896 305 b 852 281 874 298 863 291 b 693 167 804 236 747 204 b 612 140 667 150 639 140 b 549 157 592 140 570 145 b 403 220 503 181 452 202 b 271 248 360 236 315 248 b 179 229 239 248 209 242 b 0 -29 65 180 0 85 b 9 -104 0 -53 3 -78 b 397 -526 56 -317 183 -464 b 505 -547 432 -536 468 -547 b 560 -539 524 -547 541 -544 z',\n        },\n        ornamentPrecompSlideTrillBach: {\n            x_min: 0,\n            x_max: 1185,\n            y_min: -380,\n            y_max: 465,\n            ha: 845,\n            o: 'm 624 -544 b 642 -528 638 -543 642 -537 b 639 -514 642 -524 642 -520 b 590 -444 629 -487 609 -467 b 523 -413 573 -422 553 -410 b 498 -415 514 -415 507 -415 b 399 -389 464 -415 431 -405 b 89 -157 281 -330 176 -255 b 72 -117 78 -144 72 -131 b 73 -101 72 -111 72 -107 b 187 186 91 3 147 91 b 246 230 200 216 222 230 b 300 209 262 230 281 223 b 456 48 359 163 403 101 b 540 -10 494 10 518 -10 b 625 59 566 -10 589 13 b 690 148 648 88 668 118 b 711 167 697 160 704 167 b 733 153 719 167 724 163 b 844 14 769 105 808 60 b 903 -42 873 -23 886 -42 b 973 -1 919 -42 937 -27 b 1008 33 986 7 996 20 b 1048 81 1021 48 1035 65 b 1050 37 1048 66 1050 52 b 1047 -24 1050 17 1048 -3 b 1038 -275 1038 -108 1040 -192 l 1037 -289 b 1045 -302 1037 -295 1038 -301 b 1068 -284 1056 -304 1064 -292 b 1084 -242 1076 -271 1081 -256 b 1099 -109 1096 -199 1099 -154 b 1106 158 1099 -19 1106 71 b 1128 187 1113 167 1120 177 b 1168 223 1143 212 1155 223 b 1210 193 1179 223 1191 213 b 1220 183 1214 190 1215 186 b 1329 36 1261 138 1292 84 b 1374 7 1345 16 1358 7 b 1411 20 1384 7 1395 12 b 1479 84 1437 37 1459 59 b 1610 235 1521 135 1564 186 b 1706 403 1655 282 1695 334 b 1614 346 1663 400 1637 373 b 1464 170 1564 287 1515 228 b 1440 150 1453 156 1447 150 b 1414 173 1433 150 1426 158 b 1283 336 1371 228 1333 288 b 1220 366 1261 356 1240 366 b 1148 318 1194 366 1169 350 b 1103 255 1133 297 1119 275 b 1097 301 1102 271 1100 285 b 1099 334 1099 312 1099 324 b 1092 428 1099 367 1094 397 b 1071 647 1087 501 1079 575 b 1058 670 1071 657 1071 670 b 1035 648 1047 670 1038 661 b 1018 516 1024 605 1015 560 b 1041 203 1025 412 1037 307 b 1043 180 1041 196 1043 187 b 992 127 1027 161 1009 143 b 965 111 981 117 972 111 b 936 132 955 111 946 120 b 829 268 900 179 867 225 b 760 317 801 301 780 317 b 691 258 739 317 719 297 b 605 147 664 219 641 177 b 589 138 599 141 593 138 b 572 148 583 138 579 141 b 415 317 520 206 467 261 b 327 372 390 343 366 366 b 300 373 317 373 308 373 b 154 295 239 373 190 348 b 55 138 120 243 85 192 b 0 -53 22 79 0 13 b 160 -317 0 -156 49 -252 b 209 -354 177 -327 192 -343 b 510 -531 305 -419 397 -495 b 593 -547 537 -540 564 -547 b 624 -544 603 -547 613 -546 z',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            x_min: 0,\n            x_max: 1003,\n            y_min: -20,\n            y_max: 521,\n            ha: 541,\n            o: 'm 791 -16 b 844 33 812 -3 829 14 b 981 271 900 107 937 190 b 994 288 984 278 985 288 b 1009 269 1004 288 1007 278 b 1077 112 1034 217 1051 163 b 1158 43 1103 62 1129 43 b 1231 69 1179 43 1204 55 b 1348 189 1280 98 1315 143 b 1444 451 1407 271 1444 357 b 1431 547 1444 482 1440 514 b 1188 750 1401 665 1299 750 b 1158 747 1178 750 1168 749 b 1079 684 1119 742 1089 727 b 1063 632 1076 665 1071 648 b 1056 609 1058 622 1056 615 b 1071 599 1056 602 1060 599 b 1086 600 1076 599 1080 600 b 1130 605 1102 603 1116 605 b 1244 569 1171 605 1210 595 b 1349 346 1322 511 1349 433 b 1348 312 1349 334 1349 324 b 1289 197 1345 266 1325 228 b 1238 174 1270 181 1253 174 b 1188 215 1220 174 1202 187 b 1145 308 1172 245 1159 276 b 1096 413 1129 343 1120 382 b 1053 438 1084 431 1068 438 b 1011 413 1038 438 1022 431 b 955 324 989 384 971 354 b 850 127 920 258 886 192 b 838 112 847 121 842 112 b 824 128 828 109 825 121 b 802 193 815 150 809 171 b 730 400 779 264 766 337 b 688 431 719 420 703 431 b 647 403 674 431 660 422 b 606 338 632 383 619 361 b 513 167 575 282 546 223 b 480 122 503 150 498 122 b 452 171 459 122 459 153 b 420 255 442 199 432 228 b 337 408 399 308 380 364 b 276 436 317 428 297 436 b 215 397 253 436 230 423 b 23 72 148 289 81 184 b 0 29 17 59 0 40 b 7 17 0 23 1 20 b 59 58 26 7 46 39 b 190 276 111 127 143 206 b 216 301 202 292 207 301 b 245 279 223 301 232 294 b 311 166 278 248 292 206 b 367 16 331 117 346 65 b 402 -19 377 -7 387 -19 b 438 -4 412 -19 423 -13 b 518 88 474 17 495 55 b 628 284 562 150 592 216 b 657 223 648 266 651 243 b 717 13 677 154 696 84 b 755 -29 726 -16 737 -29 b 791 -16 765 -29 776 -24 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            x_min: 0,\n            x_max: 1246,\n            y_min: -30,\n            y_max: 296.0302860502196,\n            ha: 326.0302860502196,\n            o: 'm 360 -43 b 559 59 445 -43 503 7 b 698 236 615 111 652 179 b 714 248 704 243 710 248 b 727 235 719 248 721 243 l 848 42 b 883 12 860 22 870 12 b 917 32 891 12 903 19 b 946 62 927 42 939 50 b 1037 192 972 108 1009 147 b 1057 210 1044 204 1051 210 b 1076 190 1063 210 1068 203 l 1176 12 b 1215 -19 1188 -9 1201 -19 b 1250 -6 1225 -19 1237 -14 b 1284 27 1264 3 1274 16 b 1380 190 1323 78 1351 135 b 1395 210 1384 197 1385 210 b 1413 190 1405 210 1410 197 b 1508 40 1436 134 1467 85 b 1564 3 1529 14 1547 3 b 1617 32 1580 3 1597 12 b 1767 238 1678 92 1719 167 b 1794 310 1781 259 1791 282 b 1752 294 1776 317 1764 304 b 1656 164 1711 258 1689 206 b 1629 144 1646 151 1637 144 b 1603 161 1620 144 1613 150 b 1502 315 1562 207 1525 258 b 1452 357 1490 344 1470 357 b 1397 320 1431 357 1411 344 b 1316 170 1368 271 1345 219 b 1280 127 1306 154 1303 127 b 1244 171 1256 127 1254 154 b 1145 337 1210 226 1179 282 b 1110 363 1135 354 1122 363 b 1070 338 1097 363 1084 354 b 1050 311 1063 330 1057 320 b 959 181 1017 271 992 223 b 939 167 950 173 945 167 b 920 184 933 167 927 173 b 818 343 887 238 852 291 b 759 395 795 377 778 395 b 701 344 742 395 724 377 b 698 338 700 341 700 340 b 544 154 652 272 605 207 b 412 98 501 117 458 98 b 304 130 377 98 341 108 b 95 373 204 187 144 275 b 58 426 85 393 82 428 b 19 366 26 426 26 389 b 0 307 13 346 0 327 b 4 287 0 300 1 294 b 174 36 49 194 91 102 b 360 -43 230 -9 289 -43 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n            x_min: 0,\n            x_max: 1226,\n            y_min: -237,\n            y_max: 436,\n            ha: 673,\n            o: 'm 1279 -341 b 1293 -252 1293 -307 1295 -278 b 1277 36 1287 -156 1282 -59 l 1273 118 b 1318 176 1289 137 1303 157 b 1349 203 1332 193 1342 203 b 1378 168 1359 203 1367 192 b 1456 35 1401 122 1428 78 b 1511 -12 1476 3 1493 -12 b 1568 23 1526 -12 1544 0 b 1597 53 1578 32 1588 42 b 1705 186 1629 101 1669 143 b 1761 284 1728 216 1751 246 b 1765 300 1763 288 1765 295 b 1763 307 1765 302 1765 305 b 1737 302 1754 311 1744 308 b 1718 287 1729 298 1725 292 b 1598 145 1673 245 1637 194 b 1578 130 1590 135 1584 130 b 1557 147 1571 130 1565 135 b 1447 321 1516 202 1488 265 b 1403 351 1433 341 1417 351 b 1358 323 1388 351 1372 341 b 1269 209 1329 285 1299 248 b 1254 521 1264 314 1259 418 b 1228 616 1253 554 1247 588 b 1218 628 1224 621 1223 628 l 1215 628 b 1201 613 1210 626 1202 619 b 1200 600 1200 609 1200 605 l 1200 586 b 1211 348 1204 507 1207 428 b 1217 166 1214 288 1215 226 b 1202 181 1212 168 1208 174 b 1094 334 1168 233 1130 284 b 1048 366 1079 356 1064 366 b 1004 331 1034 366 1018 354 b 904 154 969 275 930 220 b 873 202 887 171 880 187 b 778 356 845 256 819 311 b 737 379 763 372 750 379 b 698 353 724 379 711 370 l 621 232 b 415 114 570 154 495 114 b 302 138 377 114 340 121 b 73 400 187 192 117 284 b 55 420 69 415 62 420 b 42 410 50 420 45 416 b 0 292 23 373 0 334 b 4 262 0 282 1 272 b 168 39 32 168 92 99 b 359 -26 225 -6 292 -26 b 585 76 446 -26 530 10 b 668 202 616 115 641 160 b 693 228 680 219 687 228 b 720 203 700 228 707 219 b 801 63 752 160 775 111 b 844 7 812 42 818 7 b 910 66 877 6 894 39 b 923 94 916 75 919 85 b 995 219 945 137 968 179 b 1025 184 1009 210 1017 197 b 1119 56 1054 141 1087 98 b 1166 20 1138 32 1152 20 b 1215 50 1181 20 1195 30 b 1221 56 1217 52 1218 55 b 1228 -163 1223 -17 1225 -89 b 1279 -341 1231 -223 1251 -278 z',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            x_min: 0,\n            x_max: 833,\n            y_min: -309,\n            y_max: 319,\n            ha: 628,\n            o: 'm 778 -444 b 801 -445 785 -444 793 -445 b 1037 -338 894 -445 969 -397 b 1200 37 1149 -240 1200 -109 b 1084 406 1200 171 1172 300 b 1024 444 1064 431 1043 444 b 960 390 999 444 978 426 b 841 163 923 314 886 236 b 812 128 832 150 827 128 b 786 167 796 130 793 153 b 660 418 744 251 716 341 b 599 459 639 445 619 459 b 541 410 577 459 557 444 b 439 197 507 340 474 269 b 422 179 435 190 435 179 b 338 393 392 251 379 328 b 275 439 320 423 298 439 b 212 396 253 439 230 425 b 71 219 170 333 128 268 b 0 45 17 173 16 112 b 68 98 32 62 50 78 b 194 264 112 150 153 209 b 230 292 209 282 219 292 b 264 261 240 292 251 282 b 274 242 268 255 269 248 b 346 46 304 179 325 112 b 376 10 351 32 354 10 b 412 35 392 10 403 22 b 452 107 429 56 441 82 b 541 291 481 168 511 230 b 556 307 547 302 552 307 b 573 295 562 307 567 302 b 624 217 595 272 611 246 b 721 1 657 145 685 72 b 755 -27 732 -19 742 -27 b 786 -16 765 -27 775 -24 b 857 73 819 7 840 39 b 952 256 887 134 920 194 b 978 289 963 279 969 289 b 1009 262 985 289 994 281 b 1030 235 1017 253 1024 245 b 1110 -4 1071 161 1099 81 b 1116 -68 1113 -26 1116 -48 b 1009 -243 1116 -140 1090 -200 b 848 -291 956 -272 901 -291 b 730 -261 809 -291 770 -282 b 696 -248 714 -252 703 -248 b 671 -284 684 -248 678 -258 l 662 -312 b 657 -357 658 -330 657 -344 b 744 -439 657 -403 683 -425 z',\n        },\n        brassScoop: {\n            x_min: -0.4444444444444445,\n            x_max: 312,\n            y_min: -390,\n            y_max: 28,\n            ha: 418,\n            o: 'm 0 -562 b 393 -256 171 -504 307 -412 b 449 -39 431 -189 449 -115 b 448 -1 449 -26 449 -14 b 433 40 446 14 448 40 b 408 -3 410 40 412 14 b 396 -66 403 -23 402 -46 b 45 -397 346 -243 209 -337 b 0 -451 13 -409 1 -423 b 0 -562 -1 -485 0 -520 z',\n        },\n        brassDoitMedium: {\n            x_min: -0.32815253965710617,\n            x_max: 476.21251177608565,\n            y_min: -50,\n            y_max: 333.1535583875376,\n            ha: 383.1535583875376,\n            o: 'm 16 -72 b 27 -71 19 -72 23 -72 b 215 -33 89 -56 153 -48 b 521 114 327 -7 435 35 b 685 432 615 199 691 295 b 670 480 684 449 688 475 b 642 441 654 482 648 456 b 403 183 599 321 513 240 b 79 89 301 130 192 105 b 0 -1 -12 76 0 76 b 0 -50 0 -17 1 -33 b 16 -72 0 -65 3 -72 z',\n        },\n        brassFallLipShort: {\n            x_min: 0,\n            x_max: 298,\n            y_min: -344,\n            y_max: 65,\n            ha: 409,\n            o: 'm 396 -495 b 420 -461 412 -487 418 -474 b 429 -382 428 -435 429 -409 b 426 -330 429 -364 428 -347 b 285 -6 410 -209 356 -104 b 98 94 239 59 173 94 b 39 86 79 94 58 92 b 0 49 20 81 0 73 l 0 -52 b 10 -69 0 -62 1 -69 b 20 -68 13 -69 16 -69 b 88 -56 45 -59 66 -56 b 261 -160 156 -56 213 -95 b 396 -495 333 -259 382 -369 z',\n        },\n        brassLiftMedium: {\n            x_min: 0,\n            x_max: 807,\n            y_min: 0,\n            y_max: 838,\n            ha: 838,\n            o: 'm 50 0 b 55 1 52 0 53 0 b 58 23 65 7 59 16 b 55 58 56 36 55 48 b 130 117 55 99 75 112 b 220 213 202 121 220 141 b 315 308 220 289 238 308 l 336 308 b 408 380 393 310 406 321 b 461 452 409 438 416 452 b 485 451 468 452 477 451 b 569 510 531 448 556 464 b 573 543 572 520 572 531 b 657 619 580 605 595 618 b 698 621 670 619 684 619 b 788 700 749 625 778 649 b 798 778 792 726 793 752 b 873 857 806 841 809 845 b 985 950 927 867 973 887 b 1084 1047 1002 1035 1004 1034 b 1162 1128 1133 1056 1162 1087 b 1146 1182 1162 1145 1158 1164 b 1125 1207 1140 1191 1136 1207 l 1122 1207 b 1110 1191 1113 1205 1110 1198 b 1112 1174 1110 1185 1112 1178 b 1048 1110 1109 1126 1096 1113 b 1028 1109 1043 1110 1035 1109 b 939 1022 969 1102 948 1081 b 845 922 929 949 917 936 b 746 812 773 909 753 886 b 744 780 744 802 744 791 b 635 681 737 700 717 683 b 524 583 553 680 536 665 b 439 510 514 520 503 510 b 357 431 377 510 360 492 l 357 406 b 314 364 356 379 343 364 b 238 361 288 364 264 364 b 173 300 202 357 180 334 b 167 245 168 281 167 262 b 105 174 166 192 157 180 b 75 171 95 173 85 171 b 6 112 30 166 14 153 b 0 73 1 98 0 85 b 37 10 0 45 13 26 b 50 0 42 7 46 0 z',\n        },\n        brassFallRoughMedium: {\n            x_min: 0,\n            x_max: 791,\n            y_min: 0,\n            y_max: 819,\n            ha: 819,\n            o: 'm 1117 0 b 1139 101 1129 26 1139 71 b 1138 121 1139 109 1139 115 b 1084 193 1125 171 1110 193 b 1044 183 1073 193 1060 189 b 1022 177 1035 179 1028 177 b 1007 209 1012 177 1008 186 b 876 324 1004 292 959 330 b 799 317 850 321 825 320 b 759 354 772 314 755 320 b 760 373 760 360 760 366 b 759 392 760 379 760 384 b 681 477 753 451 730 477 b 654 474 672 477 664 475 b 606 467 638 471 622 468 b 586 465 599 465 592 465 b 564 481 570 465 564 469 b 569 505 564 487 566 495 b 575 553 572 521 575 537 b 572 585 575 564 573 575 b 481 665 560 657 539 668 b 412 665 458 664 435 665 b 382 690 392 667 382 672 b 383 700 382 693 383 696 b 386 773 387 724 387 749 b 297 858 382 828 351 857 b 229 861 274 858 251 858 b 190 897 207 863 193 871 b 163 1012 186 936 180 976 b 79 1084 145 1050 124 1084 b 66 1083 75 1084 71 1083 b 43 1096 49 1081 43 1087 b 48 1112 43 1100 45 1106 b 53 1130 52 1119 53 1125 b 39 1169 53 1145 45 1158 b 26 1179 36 1175 30 1179 b 16 1171 22 1179 17 1176 b 0 1103 10 1149 0 1126 b 9 1067 0 1092 1 1079 b 91 1021 26 1031 52 1018 b 145 978 122 1024 141 1011 b 156 913 147 956 151 935 b 291 795 170 831 210 795 b 346 768 337 795 346 796 b 344 743 346 760 344 753 b 343 716 344 733 343 724 b 455 600 343 651 390 602 b 505 605 471 599 490 605 b 528 598 514 605 523 603 b 536 579 534 592 536 586 b 524 523 536 562 526 541 b 523 505 524 517 523 511 b 621 405 523 442 560 405 b 639 406 626 405 634 406 b 677 413 652 408 664 410 b 701 416 687 415 696 416 b 721 392 716 416 721 410 b 720 373 721 386 720 380 b 831 255 714 301 759 252 b 897 261 854 255 876 261 b 926 262 909 261 919 262 b 969 197 963 262 965 252 b 971 184 969 193 971 189 b 1031 115 979 137 998 115 b 1071 122 1043 115 1056 118 b 1096 130 1079 125 1086 127 b 1087 59 1094 107 1087 82 b 1117 0 1087 37 1094 17 z',\n        },\n        brassBend: {\n            x_min: 0,\n            x_max: 381,\n            y_min: 0,\n            y_max: 367,\n            ha: 367,\n            o: 'm 298 0 b 472 50 359 0 418 14 b 537 135 501 71 530 92 b 543 216 543 163 543 190 l 543 266 b 544 308 543 281 543 295 b 549 433 546 354 549 395 b 543 507 549 459 547 482 b 533 528 541 516 544 528 b 511 508 524 528 514 520 b 508 478 510 498 508 488 b 504 318 507 425 504 372 b 505 264 504 300 505 282 b 446 181 505 220 484 199 b 294 150 396 160 344 150 b 92 194 226 150 158 167 b 45 269 62 207 45 230 b 46 359 46 300 46 328 b 37 497 46 405 45 451 b 27 523 36 507 37 523 b 4 498 14 524 6 513 b 3 481 3 492 3 487 b 0 409 1 456 0 433 b 4 228 0 348 4 288 b 3 177 4 210 4 194 b 68 53 1 125 20 84 b 200 10 108 27 154 17 b 298 0 233 4 266 0 z',\n        },\n        brassMuteClosed: {\n            x_min: 0,\n            x_max: 274,\n            y_min: 0,\n            y_max: 260,\n            ha: 260,\n            o: 'm 203 0 b 209 1 206 0 207 0 b 216 13 215 4 216 9 l 215 27 l 215 153 b 216 161 216 156 216 158 b 372 164 268 163 318 164 b 395 184 383 164 395 166 l 395 189 b 357 229 392 209 386 229 b 219 228 311 229 265 228 l 223 310 b 209 357 225 328 219 344 b 189 374 203 364 197 374 b 184 373 187 374 186 373 b 177 359 179 372 177 366 l 177 348 l 173 222 l 39 222 b 0 206 12 222 0 219 b 10 174 0 199 3 189 b 46 157 19 157 30 157 b 108 160 68 158 88 160 b 171 161 130 161 150 161 l 167 58 b 184 16 167 40 171 26 b 203 0 192 12 196 0 z',\n        },\n        brassMuteOpen: {\n            x_min: 1,\n            x_max: 313.01193341111656,\n            y_min: 0,\n            y_max: 309,\n            ha: 309,\n            o: 'm 265 0 b 451 189 363 7 452 88 l 451 215 b 348 383 441 285 405 343 b 209 445 288 426 248 445 b 84 379 168 445 132 420 b 69 364 79 373 73 369 b 1 213 30 323 1 275 b 230 0 1 88 94 0 z m 210 62 b 128 73 181 62 154 66 b 40 171 71 91 42 125 b 52 226 40 187 45 206 b 197 374 79 295 130 344 b 228 382 207 380 217 382 b 300 361 252 382 276 370 b 374 308 328 350 353 331 b 410 223 397 284 410 253 b 393 163 410 202 405 181 b 210 62 354 91 288 63 z',\n        },\n        brassFlip: {\n            x_min: 0,\n            x_max: 402,\n            y_min: 0,\n            y_max: 361,\n            ha: 361,\n            o: 'm 579 0 b 511 153 579 68 557 117 b 52 504 359 271 206 387 b 29 520 45 510 39 520 b 20 517 26 520 23 518 b 0 477 3 510 0 494 l 0 125 b 17 20 1 92 1 56 b 40 84 37 40 40 60 b 42 287 40 151 42 219 l 42 363 z',\n        },\n        brassJazzTurn: {\n            x_min: 0,\n            x_max: 646,\n            y_min: 0,\n            y_max: 212,\n            ha: 212,\n            o: 'm 310 0 b 367 33 327 0 344 10 b 389 55 374 40 382 49 b 490 145 423 85 456 114 b 507 154 495 151 501 154 b 524 144 513 154 517 151 b 598 72 547 120 575 98 b 700 24 625 42 662 24 b 765 43 721 24 744 30 b 893 147 812 72 855 105 b 930 212 910 166 923 186 b 912 215 923 213 917 215 b 871 199 896 215 883 209 b 812 153 852 183 832 167 b 789 144 805 148 796 144 b 773 156 782 144 776 147 b 691 251 757 199 720 222 b 603 301 658 282 631 301 b 527 258 580 301 556 288 b 420 156 494 222 455 190 b 399 143 412 147 405 143 b 377 157 392 143 386 147 b 259 282 340 200 300 242 b 219 305 245 298 232 305 b 177 279 204 305 192 297 b 55 127 137 228 95 177 b 0 52 36 104 20 79 b 14 50 6 50 10 50 b 53 66 32 50 45 58 b 115 131 75 88 98 108 b 135 148 124 143 130 148 b 157 132 141 148 148 143 b 252 33 186 96 219 65 b 310 0 275 12 292 0 z',\n        },\n        brassSmear: {\n            x_min: 0,\n            x_max: 334,\n            y_min: 0,\n            y_max: 151,\n            ha: 151,\n            o: 'm 321 0 b 475 125 390 0 436 43 b 481 143 478 131 481 137 b 475 154 481 147 480 151 b 449 148 468 158 458 154 b 395 132 432 137 413 132 b 343 140 377 132 360 137 b 229 194 301 148 266 173 b 168 217 206 209 186 217 b 109 192 148 217 130 209 b 0 26 59 148 32 89 b 59 63 32 29 45 48 b 98 84 72 78 84 84 b 130 73 108 84 118 81 b 213 26 157 58 183 37 b 321 0 255 9 289 0 z',\n        },\n        stringsDownBow: {\n            x_min: 0,\n            x_max: 306,\n            y_min: -0.09607201951262866,\n            y_max: 366,\n            ha: 366.09607201951263,\n            o: 'm 405 0 b 425 17 413 -1 420 9 b 439 66 435 32 439 48 b 441 268 439 137 441 202 b 436 412 441 314 439 361 l 435 413 b 423 469 435 436 431 456 b 344 508 406 501 373 501 b 204 527 298 520 251 527 b 60 498 156 527 108 518 b 7 438 32 485 10 468 l 7 426 b 4 337 7 396 7 367 b 0 140 0 272 0 206 b 1 42 0 107 0 73 b 13 3 1 27 -3 4 b 40 39 29 3 35 24 b 42 53 42 43 40 49 b 49 141 48 84 49 112 b 48 215 49 167 48 192 b 49 252 48 228 48 240 l 49 312 b 130 343 72 331 99 340 b 206 347 156 346 180 347 b 372 314 262 347 318 338 l 390 307 l 390 245 b 390 138 392 212 390 176 b 397 23 390 101 392 62 b 405 0 399 14 393 1 z',\n        },\n        stringsUpBow: {\n            x_min: 0,\n            x_max: 219.2842808242076,\n            y_min: 0,\n            y_max: 489,\n            ha: 489,\n            o: 'm 151 0 b 184 42 170 12 180 26 b 297 554 223 212 261 382 b 315 690 305 598 318 645 b 304 704 315 697 311 704 b 276 670 288 704 282 697 b 157 131 236 490 196 311 l 157 144 b 73 526 134 276 104 396 b 30 677 60 576 52 638 b 13 694 26 684 22 694 b 0 674 9 694 0 691 l 0 671 b 10 603 3 649 6 626 b 105 174 42 461 72 317 b 150 0 117 117 128 58 z',\n        },\n        stringsHarmonic: {\n            x_min: 0,\n            x_max: 191,\n            y_min: 0,\n            y_max: 202,\n            ha: 202,\n            o: 'm 143 0 b 275 122 217 0 275 53 b 127 291 275 206 202 291 b 0 154 63 291 0 222 b 143 0 0 76 71 0 z m 122 68 b 43 105 89 66 59 75 b 39 124 40 111 39 117 b 79 199 39 148 56 180 b 145 226 101 216 122 226 b 199 210 163 226 180 220 b 235 150 223 196 235 173 b 203 92 235 128 225 107 b 122 68 181 76 150 68 z',\n        },\n        pluckedSnapPizzicatoAbove: {\n            x_min: 0,\n            x_max: 201,\n            y_min: 0,\n            y_max: 325,\n            ha: 325,\n            o: 'm 171 0 b 289 99 240 0 289 45 b 258 183 289 130 274 156 b 174 269 236 217 203 240 l 174 408 b 174 429 174 415 176 422 b 131 468 168 451 153 468 b 117 451 120 468 117 461 b 118 429 117 444 118 435 b 115 307 117 389 115 347 b 0 166 59 295 0 223 b 171 0 0 85 89 0 z m 134 55 b 52 131 84 55 52 85 b 115 233 52 179 81 209 b 114 192 114 220 114 206 b 174 120 114 137 114 137 l 174 228 b 233 148 200 207 223 183 b 236 130 235 143 236 135 b 197 72 236 105 223 85 b 134 55 177 60 157 55 z',\n        },\n        pluckedSnapPizzicatoBelow: {\n            x_min: 0,\n            x_max: 211,\n            y_min: 0,\n            y_max: 307,\n            ha: 307,\n            o: 'm 145 7 b 163 0 153 3 158 0 b 173 23 170 0 173 7 l 173 140 l 170 140 l 170 163 l 171 163 b 206 170 179 164 193 166 b 304 287 264 186 304 233 b 281 354 304 308 297 333 b 118 442 240 412 186 439 b 0 324 69 442 0 370 b 115 176 0 266 55 202 l 115 56 b 145 7 114 33 125 19 z m 115 220 b 62 256 92 223 73 230 b 53 292 56 269 53 281 b 78 344 53 311 60 328 b 168 384 105 372 135 384 b 213 376 183 384 199 382 b 253 321 239 366 253 346 b 246 291 253 311 251 301 b 170 226 230 256 203 236 l 170 258 b 148 305 171 278 163 292 b 128 315 143 310 135 315 l 124 315 b 115 301 117 314 115 308 z',\n        },\n        pluckedLeftHandPizzicato: {\n            x_min: 0,\n            x_max: 271,\n            y_min: 0,\n            y_max: 284,\n            ha: 284,\n            o: 'm 213 0 b 223 14 222 0 223 7 b 222 35 223 22 222 29 l 222 176 b 373 170 272 174 323 170 b 390 180 382 170 390 171 l 390 184 b 347 232 386 207 382 232 b 219 238 307 233 266 235 l 219 364 b 171 409 219 395 193 409 b 156 393 160 409 156 402 b 158 370 156 384 158 376 l 158 240 b 16 239 115 240 66 239 b 0 226 7 239 0 238 l 0 223 b 50 179 1 203 29 179 b 158 177 86 179 122 179 l 158 63 b 161 29 158 52 158 40 b 213 0 166 -1 194 1 z',\n        },\n        keyboardPedalPed: {\n            x_min: 0,\n            x_max: 944,\n            y_min: -13,\n            y_max: 550,\n            ha: 563,\n            o: 'm 22 0 b 109 78 53 0 105 46 l 144 333 b 163 376 147 347 140 372 b 364 465 238 390 301 426 b 454 599 416 497 454 540 b 452 618 454 605 454 612 b 320 770 442 694 396 747 b 248 779 295 778 272 779 b 193 778 229 779 212 779 b 160 780 181 778 167 775 b 137 792 153 789 144 791 b 109 789 128 792 118 789 b 7 719 59 789 48 737 b 23 708 16 714 20 708 b 36 710 29 710 33 710 b 53 684 52 710 53 698 l 53 674 b 43 386 53 577 53 482 b 20 164 36 312 30 238 b 1 30 14 120 7 75 b 0 19 0 26 0 22 b 22 0 0 9 4 0 z m 171 425 b 156 442 160 425 156 429 b 157 475 157 452 157 464 b 164 602 161 517 164 560 b 161 698 164 635 163 667 b 184 729 161 720 167 729 l 193 729 b 348 563 278 719 348 641 b 346 539 348 554 347 547 b 171 425 328 459 229 422 z m 979 6 b 1008 13 986 6 995 9 b 1081 101 1047 29 1079 46 b 1116 449 1087 217 1104 333 b 1143 654 1123 518 1133 586 b 1148 685 1145 664 1148 675 b 1140 704 1148 693 1146 700 b 1107 716 1130 713 1119 716 b 1056 706 1092 716 1073 710 b 1037 671 1035 703 1038 685 b 1004 439 1025 595 1014 517 b 986 419 1001 428 999 419 b 979 419 985 419 982 420 b 935 426 965 423 949 425 b 795 376 884 426 838 405 b 664 153 714 323 664 249 b 665 130 664 145 665 138 b 753 29 671 65 704 29 b 815 40 773 29 792 33 b 975 147 873 65 923 101 b 965 45 971 108 968 76 b 979 6 963 17 966 6 z m 393 -17 b 634 145 494 16 579 52 b 638 160 636 151 638 156 b 625 168 638 166 634 168 b 621 167 624 168 622 168 b 524 118 582 164 544 160 b 495 79 517 104 505 92 b 435 33 471 49 452 33 b 380 96 416 33 397 55 b 369 145 373 114 369 131 b 442 225 369 186 395 213 b 468 232 451 228 459 229 b 654 344 539 255 606 285 b 677 395 667 360 677 376 b 672 415 677 402 675 408 b 612 459 661 442 639 455 b 589 461 602 461 592 461 b 348 328 500 461 409 408 b 269 120 302 268 269 199 b 379 -19 269 45 318 -19 b 393 -17 383 -19 389 -19 z m 395 240 b 494 383 418 300 452 344 l 521 405 b 544 419 528 409 536 418 b 554 415 547 419 550 418 b 570 383 564 406 570 396 l 570 379 b 552 331 570 360 562 344 b 395 240 511 285 462 253 z m 827 89 b 792 111 815 89 804 96 b 766 204 775 131 766 158 b 845 360 772 256 799 314 b 871 372 854 369 863 372 b 897 366 880 372 888 369 b 978 279 942 353 963 320 b 976 259 981 272 981 265 b 858 104 942 203 909 147 b 827 89 847 94 837 89 z m 1282 12 b 1336 35 1303 14 1320 23 b 1359 71 1351 45 1359 58 b 1338 102 1359 82 1352 95 b 1254 130 1312 118 1284 130 b 1187 88 1223 130 1202 109 b 1178 65 1182 81 1178 72 b 1195 37 1178 55 1182 45 b 1282 12 1223 23 1253 19 z',\n        },\n        keyboardPedalUp: {\n            x_min: 0,\n            x_max: 436.6015132318337,\n            y_min: 0,\n            y_max: 461,\n            ha: 461,\n            o: 'm 330 0 b 334 1 331 0 333 0 b 340 12 338 4 340 7 l 338 26 b 340 264 338 105 338 184 b 526 95 400 206 461 148 b 559 71 536 88 547 71 b 564 72 560 71 563 71 b 580 121 580 79 580 102 l 580 127 b 543 203 585 158 573 184 b 472 259 518 219 495 238 l 445 285 b 590 292 494 288 541 291 b 622 318 609 294 618 302 b 628 359 625 331 626 346 b 586 402 632 393 621 405 b 464 395 546 399 504 396 l 559 491 b 567 524 567 500 567 510 b 564 543 567 527 567 536 b 539 596 559 563 560 590 b 494 564 521 600 508 577 b 340 413 442 514 390 464 l 340 560 b 287 664 340 600 321 632 b 271 518 274 612 272 566 b 268 445 269 494 269 469 b 117 569 219 488 168 530 b 96 579 109 575 102 579 b 85 560 89 579 85 573 b 124 446 85 518 82 477 b 209 380 153 426 181 403 b 45 374 154 377 99 376 b 0 324 9 374 0 359 b 63 266 0 265 1 265 b 144 272 89 269 117 272 l 196 272 b 108 193 167 246 138 219 b 60 135 76 164 60 151 b 99 73 60 121 73 105 b 104 68 101 72 102 71 b 114 58 107 60 111 58 b 130 66 120 58 124 62 b 259 186 173 107 217 145 b 256 117 259 163 256 140 b 311 13 256 72 271 37 b 330 0 317 10 323 0 z',\n        },\n        pictChokeCymbal: {\n            x_min: 1,\n            x_max: 147,\n            y_min: 0,\n            y_max: 242,\n            ha: 242,\n            o: 'm 79 4 b 207 158 153 32 192 88 b 212 200 210 173 212 187 b 143 336 212 253 187 298 b 98 348 131 344 115 348 b 4 295 60 348 16 327 b 1 276 1 289 1 282 b 9 249 1 266 3 258 b 121 183 35 206 72 183 b 156 186 132 183 144 183 b 26 53 134 115 91 73 b 7 39 13 49 7 45 b 19 20 7 33 12 27 b 59 0 30 9 43 0 b 79 4 65 0 72 1 z',\n        },\n        wiggleArpeggiatoUp: {\n            x_min: -22,\n            x_max: 300,\n            y_min: 0,\n            y_max: 176,\n            ha: 176,\n            o: 'm 173 4 b 196 0 180 1 189 0 b 246 26 215 0 230 9 b 301 117 271 53 285 85 b 312 131 305 125 307 131 b 327 124 315 131 321 128 b 373 86 341 112 353 101 b 412 69 389 75 402 69 b 432 94 425 69 432 79 b 373 181 432 117 413 154 b 235 252 323 216 285 245 b 220 253 229 253 225 253 b 168 215 196 253 181 240 b 111 112 151 180 140 141 b 94 102 105 105 99 102 b 78 111 89 102 84 105 b 0 181 55 135 35 160 b -32 153 -20 194 -32 168 b 0 86 -32 124 -32 109 b 94 36 22 71 73 46 b 173 4 134 16 131 17 z',\n        },\n        arpeggiatoUp: {\n            x_min: 0,\n            x_max: 262,\n            y_min: 0,\n            y_max: 1459,\n            ha: 1459,\n            o: 'm 190 0 b 160 63 187 29 170 45 b 145 108 150 81 145 95 b 183 163 145 128 157 145 b 300 246 222 190 262 216 b 347 318 333 272 347 295 b 301 393 347 341 331 364 b 258 413 289 403 272 408 b 145 449 220 425 183 436 b 117 464 135 452 120 452 b 140 491 115 477 128 484 b 294 593 192 526 243 557 b 330 647 318 611 330 626 b 314 693 330 660 324 675 b 262 736 302 714 285 729 b 170 763 230 744 200 753 b 122 783 153 768 125 768 b 160 831 120 804 143 818 b 288 922 202 861 246 890 b 333 999 318 945 333 972 b 266 1083 333 1032 310 1064 b 189 1115 240 1094 215 1103 b 122 1178 145 1133 122 1153 b 168 1250 122 1200 138 1223 l 180 1257 b 269 1333 210 1283 240 1306 b 305 1405 294 1356 305 1381 b 284 1469 305 1426 298 1447 b 228 1525 269 1492 251 1511 b 183 1600 197 1545 183 1571 b 190 1640 183 1613 184 1626 b 197 1670 193 1650 194 1660 b 272 1735 213 1719 230 1735 b 295 1734 279 1735 287 1735 b 323 1732 305 1732 314 1732 b 350 1731 333 1732 341 1732 b 377 1742 369 1729 377 1732 b 370 1761 377 1747 374 1754 l 301 1898 b 217 2066 274 1954 248 2012 b 186 2101 204 2089 196 2101 b 154 2069 177 2101 167 2091 b 12 1824 105 1987 59 1907 b 0 1787 4 1810 0 1797 b 59 1744 0 1761 20 1745 b 160 1738 92 1744 125 1740 b 145 1692 156 1721 151 1706 b 135 1633 138 1672 135 1652 b 184 1518 135 1591 151 1552 b 229 1475 199 1503 213 1488 b 259 1431 249 1456 259 1444 b 229 1388 259 1420 249 1407 b 151 1325 203 1365 177 1345 b 105 1279 134 1310 118 1296 b 73 1202 84 1251 73 1227 b 108 1123 73 1176 85 1152 b 255 1031 148 1077 199 1051 b 282 1014 274 1025 282 1021 b 262 991 282 1008 275 1001 b 151 914 226 963 189 939 b 79 851 125 896 99 877 b 63 809 69 837 63 824 b 79 769 63 796 68 783 b 202 697 111 729 154 710 b 266 670 225 690 266 688 b 210 622 266 648 232 635 b 82 534 167 593 120 570 b 55 491 63 518 55 505 b 79 448 55 478 63 465 b 255 361 127 395 192 380 b 288 343 269 359 288 357 b 266 312 288 331 275 320 b 144 223 229 278 184 253 b 85 134 104 193 85 166 b 118 53 85 111 96 85 b 190 0 135 29 160 14 z',\n        },\n        arpeggiatoDown: {\n            x_min: 0,\n            x_max: 218,\n            y_min: 0,\n            y_max: 1440,\n            ha: 1440,\n            o: 'm 161 16 b 310 261 210 98 259 180 b 314 275 312 266 314 271 b 302 295 314 282 310 289 b 252 311 287 308 269 311 b 217 310 240 311 229 310 b 190 333 202 310 194 315 b 151 412 186 363 171 389 b 102 501 120 452 102 477 b 150 588 102 524 118 547 b 161 603 154 592 158 598 b 181 661 176 622 181 641 b 173 704 181 675 179 690 b 86 795 156 746 121 770 b 53 829 63 811 53 819 b 78 868 53 840 62 851 b 102 888 85 876 94 883 b 180 956 128 912 156 933 b 216 1028 204 979 216 1002 b 203 1081 216 1044 212 1061 b 115 1171 186 1123 148 1145 b 75 1221 88 1191 75 1207 b 114 1272 75 1237 88 1251 b 173 1308 132 1284 154 1296 b 226 1339 190 1318 209 1328 b 265 1405 253 1359 265 1380 b 258 1447 265 1418 264 1431 b 154 1541 242 1499 199 1521 b 109 1581 124 1555 109 1567 b 141 1627 109 1594 121 1608 b 204 1680 163 1646 184 1662 b 233 1742 223 1699 233 1719 b 226 1777 233 1752 230 1764 b 135 1862 210 1822 173 1840 b 104 1895 114 1875 104 1884 b 118 1930 104 1904 109 1914 b 192 2006 135 1961 161 1986 b 206 2029 203 2013 206 2022 b 192 2064 206 2040 197 2052 b 180 2074 187 2071 184 2074 b 156 2061 171 2074 163 2065 b 84 1983 125 2040 102 2013 b 65 1921 71 1961 65 1941 b 88 1853 65 1899 72 1876 b 171 1784 108 1820 138 1801 b 190 1764 184 1777 190 1770 b 174 1741 190 1757 184 1750 b 107 1683 153 1722 128 1704 b 68 1610 81 1659 68 1636 b 88 1548 68 1591 75 1571 b 177 1470 109 1512 141 1489 b 223 1431 209 1453 223 1443 b 179 1390 223 1420 209 1408 b 128 1361 163 1380 145 1371 b 71 1322 108 1348 88 1338 b 32 1253 45 1300 32 1277 b 48 1198 32 1236 37 1218 b 147 1090 71 1152 108 1120 b 174 1057 166 1076 174 1067 b 153 1022 174 1047 167 1037 b 109 982 140 1008 124 995 b 37 919 85 962 59 942 b 9 860 17 899 9 880 b 26 806 9 844 14 827 b 120 717 50 769 84 740 b 138 691 132 708 138 700 b 130 668 138 684 135 677 b 92 618 118 651 105 635 b 59 531 71 589 59 560 b 84 455 59 507 68 481 b 132 386 98 431 115 408 b 148 341 144 372 148 357 b 144 317 148 333 147 324 b 121 305 140 307 131 305 l 98 305 b 82 304 94 304 88 304 l 32 304 b 0 292 10 304 0 302 b 12 266 0 287 4 279 b 60 164 32 233 46 199 b 127 20 84 117 105 68 b 144 0 132 9 137 0 b 161 16 150 0 154 4 z',\n        },\n        repeat1Bar: {\n            x_min: 0,\n            x_max: 599.1057280164835,\n            y_min: -250,\n            y_max: 175,\n            ha: 425,\n            o: 'm 216 98 b 255 75 236 84 246 75 b 291 104 265 75 274 85 b 323 147 304 117 327 125 b 289 215 323 168 314 184 b 238 252 269 239 253 252 b 187 222 222 252 207 242 b 173 206 183 216 177 212 b 157 170 163 194 157 183 b 174 138 157 160 161 150 b 216 98 189 127 200 109 z m 76 -334 b 181 -285 111 -315 148 -302 b 831 52 396 -168 613 -58 b 863 114 855 63 864 82 b 828 202 855 140 855 176 b 808 213 821 209 815 213 b 793 209 804 213 799 212 l 422 19 b 26 -179 291 -48 164 -124 b 0 -213 10 -186 0 -196 b 3 -232 0 -219 0 -225 b 52 -325 14 -265 37 -294 b 66 -337 55 -331 59 -337 b 76 -334 69 -337 72 -336 z m 769 -360 b 829 -264 779 -360 829 -284 b 769 -176 822 -232 799 -200 b 742 -163 760 -167 750 -163 b 716 -184 733 -163 723 -168 b 683 -228 708 -202 693 -213 b 672 -253 675 -236 672 -245 b 683 -281 672 -262 675 -271 b 752 -353 703 -308 732 -327 b 769 -360 756 -357 763 -360 z',\n        },\n        repeat2Bars: {\n            x_min: 0.008571918423331715,\n            x_max: 775,\n            y_min: -246.92374029115243,\n            y_max: 362.82068246705313,\n            ha: 609.7444227582056,\n            o: 'm 909 412 b 873 351 906 384 893 367 b 436 50 729 249 585 147 l 91 -179 b 62 -174 76 -189 68 -183 b 12 -96 48 -147 24 -125 b 36 -16 -7 -53 -6 -43 b 220 104 96 24 158 65 b 819 507 425 232 624 369 b 881 495 852 530 861 528 b 909 412 899 469 900 439 z m 333 338 b 302 240 330 307 317 274 b 276 235 297 225 287 228 l 233 269 b 203 376 186 307 183 318 b 225 441 212 397 217 419 b 246 454 228 452 232 458 b 333 338 284 441 333 380 z m 1116 228 b 1067 158 1115 192 1092 174 b 910 59 1015 125 963 92 b 478 -240 762 -33 622 -140 b 311 -350 423 -279 366 -314 b 285 -344 298 -360 289 -356 b 239 -258 272 -314 251 -288 b 261 -196 228 -228 235 -210 b 517 -29 348 -144 436 -91 b 1030 321 681 98 861 202 b 1093 307 1060 343 1076 340 b 1116 228 1107 281 1109 252 z m 1070 -105 b 1020 -210 1057 -143 1038 -176 b 998 -210 1014 -219 1004 -215 l 924 -153 b 913 -88 899 -135 897 -112 b 949 -22 926 -66 939 -45 b 998 -7 960 6 976 9 b 1070 -105 1032 -32 1058 -63 z',\n        },\n        repeat4Bars: {\n            x_min: 0,\n            x_max: 1374,\n            y_min: -304,\n            y_max: 304,\n            ha: 608,\n            o: 'm 78 -266 b 92 -258 82 -266 88 -264 b 114 -240 98 -251 107 -246 b 638 107 289 -125 467 -14 b 873 271 716 161 793 216 b 907 337 894 285 906 305 b 887 400 901 354 897 379 b 852 438 877 426 867 438 b 814 420 842 438 829 432 b 135 -33 592 262 366 111 b 12 -121 92 -60 48 -84 b 0 -144 4 -128 0 -135 b 4 -160 0 -148 1 -154 b 63 -255 17 -196 45 -223 b 78 -266 68 -262 72 -266 z m 291 148 b 325 223 302 148 308 170 b 333 256 328 235 330 246 b 264 363 330 305 298 336 b 242 373 255 369 248 373 b 220 347 232 373 225 364 b 202 288 216 327 213 305 b 190 252 193 275 190 262 b 222 200 190 232 202 215 b 291 148 264 170 279 148 z m 815 -367 b 829 -359 819 -367 824 -364 b 851 -343 835 -353 844 -347 b 1375 6 1027 -228 1205 -117 l 1610 170 b 1644 235 1632 184 1643 203 b 1626 300 1639 253 1634 276 b 1590 337 1614 325 1604 337 b 1551 320 1580 337 1567 330 b 873 -135 1329 161 1103 10 b 749 -222 829 -161 785 -184 b 737 -245 742 -230 737 -238 b 742 -261 737 -249 739 -255 b 802 -357 755 -297 782 -325 b 815 -367 805 -363 809 -367 z m 396 -360 b 408 -356 400 -360 403 -359 b 609 -223 471 -307 543 -269 b 896 -19 706 -156 795 -81 b 1164 154 985 37 1074 96 b 1214 223 1189 170 1211 187 b 1176 321 1204 253 1205 292 b 1159 330 1169 327 1165 330 b 1145 324 1155 330 1151 328 b 1048 258 1113 302 1081 278 b 357 -202 809 117 598 -65 b 333 -238 341 -212 333 -223 b 338 -262 333 -245 334 -253 b 384 -350 350 -294 372 -318 b 396 -360 386 -354 390 -360 z m 1162 -438 b 1174 -433 1166 -438 1169 -436 b 1374 -300 1237 -384 1309 -346 b 1660 -96 1470 -233 1561 -158 b 1930 76 1751 -39 1840 19 b 1979 147 1954 92 1977 109 b 1943 243 1968 177 1971 216 b 1924 253 1935 251 1930 253 b 1911 248 1920 253 1915 252 b 1814 181 1878 225 1848 202 b 1123 -279 1575 40 1364 -141 b 1099 -315 1106 -289 1099 -300 b 1103 -338 1099 -321 1100 -330 b 1149 -426 1115 -370 1138 -396 b 1162 -438 1151 -432 1156 -438 z m 1875 -295 b 1882 -291 1878 -295 1879 -294 b 1934 -189 1904 -258 1921 -223 b 1872 -96 1925 -147 1901 -120 b 1840 -78 1858 -84 1848 -78 b 1812 -109 1830 -78 1823 -88 l 1777 -173 b 1770 -199 1773 -181 1770 -190 b 1786 -230 1770 -210 1774 -220 b 1862 -289 1809 -253 1837 -269 b 1875 -295 1865 -292 1871 -295 z',\n        },\n        repeatBarSlash: {\n            x_min: 0,\n            x_max: 630,\n            y_min: -225.19160170741762,\n            y_max: 265.12618221237005,\n            ha: 490.31778391978764,\n            o: 'm 78 -324 b 92 -314 82 -325 88 -321 b 114 -298 96 -307 107 -302 b 638 49 289 -183 467 -72 b 873 215 716 104 792 161 b 907 279 894 229 906 248 b 887 344 901 298 897 321 b 852 382 877 369 867 380 b 814 363 842 383 829 376 b 135 -91 603 192 364 55 b 12 -177 92 -118 45 -137 b 0 -202 4 -186 0 -192 b 4 -217 0 -206 1 -212 b 63 -312 17 -253 42 -284 b 78 -324 68 -318 72 -323 z',\n        },\n        csymDiminished: {\n            x_min: 0,\n            x_max: 506,\n            y_min: -0.011036179317259481,\n            y_max: 500,\n            ha: 500.0110361793173,\n            o: 'm 397 0 b 729 265 576 -1 729 95 b 711 367 729 297 723 331 b 472 670 668 498 586 595 b 315 720 423 701 372 720 b 253 713 295 720 275 719 b 32 514 144 687 75 615 b 0 374 12 468 0 420 b 27 251 0 333 9 292 b 140 117 52 196 92 153 b 397 0 223 52 317 4 z m 340 95 b 132 314 233 84 122 216 b 324 589 145 438 200 539 b 415 611 360 603 389 611 b 544 505 469 611 505 576 b 590 392 564 471 583 432 b 596 343 593 374 596 359 b 340 95 596 210 485 96 z',\n        },\n        csymHalfDiminished: {\n            x_min: -32,\n            x_max: 496,\n            y_min: -33,\n            y_max: 492,\n            ha: 525,\n            o: 'm -29 -48 b 0 -36 -19 -48 -9 -40 b 17 -20 7 -32 12 -24 b 134 94 56 19 95 56 b 372 0 207 43 282 0 b 455 13 397 0 426 4 b 677 258 556 45 671 141 b 678 289 677 268 678 278 b 593 539 678 380 654 467 b 592 541 593 540 592 540 l 684 632 b 713 678 700 647 711 665 b 714 691 714 684 714 688 b 707 704 714 698 711 701 b 691 708 701 707 696 708 b 660 691 680 708 670 701 l 552 585 b 478 634 530 606 507 624 b 361 684 438 648 397 661 b 301 703 341 697 320 703 b 226 677 275 703 251 693 b 27 449 140 618 72 543 b 0 324 9 410 -4 370 b 88 128 -1 243 30 177 b -30 -7 43 86 0 46 b -46 -33 -35 -16 -46 -24 b -42 -42 -46 -36 -45 -39 b -29 -48 -37 -46 -33 -48 z m 141 179 b 121 251 128 200 121 225 b 128 297 121 265 124 281 b 351 575 163 420 248 505 b 377 582 359 579 369 580 b 501 536 422 586 468 567 b 141 179 382 416 261 298 z m 281 105 b 179 137 240 105 206 117 b 210 168 189 147 200 157 l 537 487 b 547 455 541 477 544 467 b 556 370 552 426 556 397 b 429 154 556 274 503 207 b 281 105 384 122 336 105 z',\n        },\n        csymAugmented: {\n            x_min: 0,\n            x_max: 530,\n            y_min: 0,\n            y_max: 539,\n            ha: 539,\n            o: 'm 380 0 b 393 14 384 4 390 9 b 397 46 397 24 397 36 l 397 333 b 736 327 511 331 624 330 b 763 343 755 327 763 333 b 755 361 763 348 760 354 b 635 431 726 402 688 431 l 390 431 l 390 485 b 386 606 392 526 386 566 b 392 664 386 625 387 645 b 395 690 393 672 395 681 b 376 753 395 711 389 734 b 357 776 372 762 369 776 b 350 775 354 776 353 776 b 327 740 337 769 327 759 b 327 621 328 700 327 661 b 330 438 328 559 328 498 l 29 438 b 4 431 20 438 7 442 b 0 413 3 425 0 419 b 7 399 0 408 1 403 b 131 338 45 369 85 340 b 331 334 199 336 265 334 b 333 163 333 276 333 220 b 366 13 333 109 348 63 b 380 0 367 7 374 4 z',\n        },\n        csymMajorSeventh: {\n            x_min: 0,\n            x_max: 593.1050509327923,\n            y_min: 0,\n            y_max: 569,\n            ha: 569,\n            o: 'm 124 1 l 497 27 b 819 50 605 35 711 43 b 854 98 847 52 855 63 b 812 200 845 128 835 166 b 564 585 730 328 648 456 b 435 786 521 652 480 720 b 397 819 419 809 408 819 b 369 792 387 819 379 811 b 7 173 248 585 128 379 b 0 150 3 166 0 158 b 7 128 0 143 3 135 b 89 10 30 86 65 50 b 109 0 95 1 102 0 z m 163 147 b 153 153 158 147 156 148 b 164 179 147 163 158 170 b 426 644 251 334 338 488 b 442 660 432 655 436 660 b 458 645 446 660 452 655 b 727 220 547 503 636 361 b 736 202 732 213 736 206 b 714 190 736 196 730 192 b 179 148 537 177 359 163 b 163 147 174 150 168 147 z',\n        },\n        csymMinor: {\n            x_min: 0,\n            x_max: 481.64484584675915,\n            y_min: 193,\n            y_max: 265.20435472429375,\n            ha: 72.20435472429375,\n            o: 'm 168 278 b 197 279 177 278 187 278 b 431 292 275 287 353 288 l 431 291 b 661 302 508 295 585 300 b 693 311 672 304 688 300 b 674 346 697 324 685 338 b 564 382 641 366 606 384 l 27 360 b 0 347 17 360 1 366 b 19 314 0 333 3 321 b 168 278 66 291 115 278 z',\n        },\n        csymParensLeftTall: {\n            x_min: 0,\n            x_max: 185,\n            y_min: 0,\n            y_max: 1034,\n            ha: 1034,\n            o: 'm 215 0 b 226 17 223 1 223 10 b 229 37 229 24 229 32 b 220 81 229 52 225 66 b 167 203 206 124 181 160 b 86 616 124 338 89 474 b 82 765 85 665 82 716 b 91 886 82 805 84 845 b 245 1319 120 1038 171 1184 b 266 1397 259 1346 266 1371 b 259 1443 266 1411 264 1427 b 226 1489 253 1463 248 1489 b 193 1454 212 1489 203 1467 b 114 1292 158 1404 140 1346 b 0 806 40 1138 0 978 b 3 721 0 779 0 750 b 1 677 1 707 1 693 b 36 418 1 593 16 504 b 144 96 62 307 95 199 b 196 12 158 66 179 39 b 212 0 200 7 204 0 z',\n        },\n        csymParensRightTall: {\n            x_min: -40,\n            x_max: 188.5411603861406,\n            y_min: 0.20204102886728756,\n            y_max: 1058,\n            ha: 1057.7979589711326,\n            o: 'm 30 1 b 63 14 42 -3 55 6 b 122 99 86 40 108 68 b 189 258 145 153 166 204 b 271 667 239 379 268 503 b 246 852 275 708 261 780 b 10 1495 197 1077 128 1295 b -14 1524 4 1505 1 1524 b -16 1522 -14 1524 -16 1524 b -46 1489 -33 1521 -43 1503 b -58 1417 -53 1464 -58 1440 b -36 1335 -58 1390 -52 1364 b 68 1138 0 1270 35 1204 b 163 883 108 1056 137 969 b 206 668 184 814 200 742 b 207 631 207 655 207 642 b 166 426 207 560 192 492 b 46 143 130 330 111 228 b 19 29 19 109 17 69 b 30 1 20 19 24 3 z',\n        },\n        csymBracketLeftTall: {\n            x_min: 0,\n            x_max: 328,\n            y_min: 2,\n            y_max: 807,\n            ha: 805,\n            o: 'm 68 3 b 76 4 71 3 73 3 b 186 13 112 12 150 13 b 240 13 204 13 222 13 l 287 13 b 379 17 317 13 348 13 b 472 121 435 24 472 69 b 467 156 472 132 469 144 b 446 174 462 168 456 174 l 439 174 b 327 166 402 167 364 166 b 265 167 307 166 285 167 l 209 167 b 187 475 199 269 189 372 b 166 985 186 645 187 815 l 377 1002 b 415 1001 389 1002 402 1001 b 456 1027 432 1001 448 1005 b 472 1096 467 1048 472 1073 b 464 1146 472 1113 469 1130 b 439 1162 459 1161 452 1162 b 40 1129 305 1151 173 1139 b 1 1093 17 1128 1 1120 b 0 1009 0 1064 0 1037 b 13 975 0 991 3 981 b 30 670 23 873 30 772 b 29 608 30 649 29 628 l 29 563 b 56 88 29 405 49 246 b 53 22 55 66 55 43 b 68 3 53 12 56 3 z',\n        },\n        csymBracketRightTall: {\n            x_min: 0.8519422934604696,\n            x_max: 306,\n            y_min: -0.17180889215212544,\n            y_max: 829.1037519824849,\n            ha: 829.2755608746371,\n            o: 'm 117 0 b 372 29 203 -3 287 20 l 373 29 b 406 32 383 30 395 30 b 436 60 428 33 432 43 b 441 109 439 76 441 92 b 433 200 441 140 436 170 b 409 696 422 366 409 530 b 416 887 409 763 416 831 b 415 920 416 899 415 910 l 415 1106 b 412 1135 415 1116 415 1126 l 412 1145 b 373 1189 413 1171 408 1192 b 321 1189 356 1189 338 1189 l 215 1189 l 215 1194 l 56 1194 b 6 1153 27 1195 10 1187 b 1 1064 3 1123 4 1093 b 22 1043 0 1050 6 1043 b 84 1044 42 1044 63 1044 b 264 1038 144 1044 203 1040 b 265 958 264 1011 265 985 b 262 845 265 920 264 883 b 259 710 259 801 259 755 b 279 243 259 554 271 399 b 285 170 281 219 284 194 b 95 151 222 161 158 156 b 29 81 27 147 27 147 l 29 73 b 105 0 33 0 33 0 z',\n        },\n        csymParensLeftVeryTall: {\n            x_min: 0,\n            x_max: 116,\n            y_min: 0,\n            y_max: 934.1531437146923,\n            ha: 934.1531437146923,\n            o: 'm 128 0 b 147 17 137 0 144 9 b 167 102 160 45 167 73 b 158 154 167 120 164 137 b 117 307 141 204 130 256 b 63 698 84 435 71 567 b 62 788 62 729 62 757 b 69 916 62 829 63 873 b 109 1172 81 1001 94 1087 b 132 1320 118 1221 137 1269 b 124 1345 131 1329 134 1342 b 96 1332 114 1346 102 1341 b 71 1269 82 1313 75 1292 b 39 1104 59 1214 48 1159 b 0 742 19 988 0 871 b 10 559 3 688 6 624 b 58 226 16 446 33 336 b 112 20 73 157 94 89 b 128 0 115 13 118 0 z',\n        },\n        csymParensRightVeryTall: {\n            x_min: -20,\n            x_max: 111.4332498248095,\n            y_min: -0.07657185734616112,\n            y_max: 1009,\n            ha: 1009.0765718573462,\n            o: 'm -3 0 b 20 22 9 -1 14 12 b 36 56 26 33 32 45 b 99 274 58 128 84 199 b 160 788 135 439 163 605 b 122 1181 164 912 145 1047 b 50 1431 108 1267 86 1351 b 36 1453 48 1439 46 1453 l 35 1453 l 30 1453 b 7 1423 17 1449 7 1440 b 27 1287 9 1377 10 1331 b 96 963 71 1184 85 1074 b 105 818 102 914 105 867 b 91 624 105 753 99 688 b -4 213 72 484 48 344 b -29 101 -19 174 -29 138 b -16 27 -29 76 -24 52 b -3 0 -13 17 -14 3 z',\n        },\n        csymDiagonalArrangementSlash: {\n            x_min: -0.19862981551275186,\n            x_max: 990,\n            y_min: -26.946823529189132,\n            y_max: 1027.5514326488437,\n            ha: 1054.4982561780328,\n            o: 'm 14 -37 b 58 -9 35 -45 46 -22 b 392 333 170 105 279 217 l 765 711 b 1372 1329 968 916 1168 1125 b 1424 1439 1403 1359 1417 1397 b 1426 1457 1424 1444 1426 1450 b 1416 1477 1426 1466 1423 1475 b 1374 1462 1400 1485 1385 1473 b 1181 1269 1309 1397 1246 1331 b 736 831 1031 1122 884 979 b 356 452 609 704 485 576 b 32 132 246 347 143 236 b 0 50 7 109 1 84 b 6 9 -1 37 3 23 b 14 -37 10 -9 0 -32 z',\n        },\n        accidentalNarrowReversedFlat: {\n            x_min: 0,\n            x_max: 208,\n            y_min: -231,\n            y_max: 449,\n            ha: 680,\n            o: 'm 272 -333 b 284 -320 278 -333 281 -328 b 300 -174 297 -272 300 -222 b 275 190 298 -52 279 68 b 268 445 272 275 268 360 l 268 490 b 264 612 269 530 265 572 b 236 647 264 632 252 645 l 235 647 b 217 618 220 647 220 628 b 207 526 210 588 207 556 b 210 432 207 494 210 464 b 216 268 213 377 215 323 l 216 230 l 215 232 b 154 256 194 240 174 251 b 111 264 138 261 124 264 b 3 153 50 264 10 223 b 0 94 0 132 0 114 b 194 -276 0 -63 68 -186 b 255 -323 215 -291 236 -307 b 272 -333 262 -330 268 -333 z m 233 -138 b 71 30 168 -92 105 -45 b 63 59 65 42 63 50 b 96 95 62 75 73 86 b 130 102 108 99 120 102 b 215 76 160 102 187 88 l 220 73 b 225 -22 220 42 222 10 b 233 -138 229 -62 230 -101 z',\n        },\n        accidentalNarrowReversedFlatAndFlat: {\n            x_min: 0,\n            x_max: 335,\n            y_min: -231,\n            y_max: 449,\n            ha: 680,\n            o: 'm 151 490 b 148 612 151 530 150 572 b 132 647 148 632 141 645 b 122 618 124 647 124 628 b 117 526 118 588 117 556 b 118 432 117 494 118 464 b 121 268 120 377 121 323 l 121 232 b 86 256 109 240 98 251 b 62 264 78 261 69 264 b 1 153 29 264 6 223 b 0 94 0 132 0 114 b 109 -276 0 -63 37 -186 b 144 -323 121 -291 132 -307 b 153 -333 147 -330 151 -333 b 160 -320 157 -333 158 -328 b 168 -174 167 -272 168 -222 b 154 190 168 -52 157 68 b 151 445 153 275 151 360 z m 480 153 b 372 264 472 223 432 264 b 328 256 359 264 344 261 b 268 232 308 251 288 240 l 266 230 l 266 268 b 272 432 266 323 269 377 b 275 526 272 464 275 494 b 265 618 275 556 272 588 b 248 647 262 628 262 647 l 246 647 b 219 612 230 645 219 632 b 215 490 217 572 213 530 l 215 445 b 207 190 215 360 210 275 b 183 -174 203 68 183 -52 b 199 -320 183 -222 186 -272 b 210 -333 202 -328 204 -333 b 228 -323 215 -333 220 -330 b 288 -276 246 -307 268 -291 b 482 94 415 -186 482 -63 b 480 153 482 114 482 132 z m 40 30 b 36 59 36 42 36 50 b 55 95 35 75 42 86 b 73 102 60 99 68 102 b 121 76 89 102 105 88 l 124 73 b 127 -22 124 42 125 10 l 131 -138 b 40 30 95 -92 60 -43 z m 419 59 b 412 30 419 50 418 42 b 249 -138 374 -43 314 -92 b 258 -22 252 -101 253 -62 b 262 73 261 10 262 42 l 268 76 b 353 102 295 88 323 102 b 386 95 363 102 374 99 b 419 59 409 86 420 75 z',\n        },\n        accidentalWilsonPlus: {\n            x_min: 0,\n            x_max: 298,\n            y_min: -218,\n            y_max: 218,\n            ha: 436,\n            o: 'm 232 -314 b 236 -301 236 -310 236 -305 l 236 -295 b 243 -52 239 -213 242 -132 l 369 62 b 429 200 413 101 425 147 b 416 243 429 216 428 236 b 383 225 406 251 393 232 l 377 220 b 246 98 336 177 291 138 b 249 242 248 145 246 193 b 225 304 251 265 242 287 b 209 314 220 308 215 314 b 204 312 207 314 206 312 b 196 292 196 310 196 300 b 193 184 194 256 194 220 b 187 48 192 140 190 94 b 46 -72 141 7 94 -32 b 0 -163 13 -98 0 -127 b 1 -187 0 -170 0 -179 b 10 -235 4 -203 6 -219 b 20 -255 12 -242 14 -251 b 36 -245 26 -259 30 -249 b 181 -109 85 -200 132 -154 b 176 -258 180 -158 176 -209 b 232 -314 176 -298 186 -307 z',\n        },\n        accidentalWilsonMinus: {\n            x_min: 0,\n            x_max: 284.2093390143919,\n            y_min: -163,\n            y_max: 163,\n            ha: 326,\n            o: 'm 386 -232 b 409 -163 415 -222 408 -180 b 382 -69 410 -120 408 -89 b 32 228 264 30 141 118 b 17 235 26 233 22 235 b 3 219 9 235 3 228 b 0 157 3 199 0 179 b 29 69 0 125 6 95 b 323 -194 115 -29 222 -111 b 374 -235 338 -206 353 -235 b 386 -232 377 -235 382 -233 z',\n        },\n    },\n    fontFamily: 'Petaluma',\n    resolution: 1000,\n    generatedOn: '2021-12-06T21:04:23.441Z',\n};\n","/**\n * The Petaluma font was created by Steinberg Media.\n * https://github.com/steinbergmedia/petaluma\n */\nexport const PetalumaMetrics = {\n    name: 'Petaluma',\n    smufl: true,\n    stave: {\n        padding: 15,\n        endPaddingMax: 15,\n        endPaddingMin: 7,\n        unalignedNotePadding: 12,\n    },\n    accidental: {\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    clef: {\n        default: {\n            point: 32,\n            width: 26,\n        },\n        small: {\n            point: 26,\n            width: 20,\n        },\n        annotations: {\n            '8va': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 18,\n                    treble: {\n                        line: -1.4,\n                        shiftX: 12,\n                    },\n                },\n                small: {\n                    point: 16,\n                    treble: {\n                        line: -0.2,\n                        shiftX: 8,\n                    },\n                },\n            },\n            '8vb': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 18,\n                    treble: {\n                        line: 6,\n                        shiftX: 10,\n                    },\n                    bass: {\n                        line: 3.5,\n                        shiftX: 1,\n                    },\n                },\n                small: {\n                    point: 16,\n                    treble: {\n                        line: 5.3,\n                        shiftX: 6,\n                    },\n                    bass: {\n                        line: 3.1,\n                        shiftX: 0.5,\n                    },\n                },\n            },\n        },\n        // These may no longer be necessary\n        lineCount: {\n            '8': { point: 55, shiftY: 14 },\n            '7': { point: 47, shiftY: 8 },\n            '6': { point: 32, shiftY: 1 },\n            '5': { point: 30, shiftY: -6 },\n            '4': { point: 23, shiftY: -12 },\n        },\n    },\n    parenthesis: {\n        default: {\n            point: 39,\n            width: 7,\n        },\n        gracenote: {\n            point: (39 * 3) / 5,\n            width: 3,\n        },\n    },\n    pedalMarking: {\n        up: {\n            point: 40,\n        },\n        down: {\n            point: 34,\n        },\n    },\n    // These are for numeric digits, such as in time signatures\n    digits: {\n        // used by timesig\n        shiftLine: -1,\n        point: 22,\n        // used by tuplets\n        tupletPoint: 16,\n        shiftY: -2,\n    },\n    articulation: {\n        articStaccatissimoAbove: {\n            padding: 2,\n        },\n        articStaccatissimoBelow: {\n            padding: 2,\n        },\n    },\n    tremolo: {\n        default: {\n            point: 25,\n            spacing: 5,\n            offsetYStemUp: -5,\n            offsetYStemDown: 5,\n            offsetXStemUp: 13,\n            offsetXStemDown: 1,\n        },\n        grace: {\n            point: 18,\n            spacing: 4,\n            offsetYStemUp: -5,\n            offsetYStemDown: 5,\n            offsetXStemUp: 8,\n            offsetXStemDown: 1,\n        },\n    },\n    staveRepetition: {\n        default: {\n            offsetY: 25,\n            offsetSymbol: 12,\n            spacing: 5,\n        },\n    },\n    noteHead: {\n        displaced: {\n            shiftX: -2,\n        },\n    },\n    stem: {\n        heightAdjustmentForFlag: -3,\n        // These are stem (Y) offsets to the note heads. To shift the\n        // noteheads (x-position) themselves, see glyphs.notehead.custom.\n        noteHead: {\n            noteheadTriangleUpHalf: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpBlack: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpWhole: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXHalf: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXBlack: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXWhole: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadHalf: {\n                offsetYBaseStemDown: 1.8,\n                offsetYBaseStemUp: -1.8,\n            },\n            noteheadBlack: {\n                offsetYBaseStemDown: 2,\n                offsetYBaseStemUp: -2,\n            },\n            noteheadSquareWhite: {\n                offsetYBaseStemDown: -5,\n                offsetYBaseStemUp: 5,\n            },\n        },\n    },\n    // Values under here are used by the Glyph class to reposition and rescale\n    // glyphs based on their category. This should be the first stop for\n    // custom font glyph repositioning.\n    //\n    // The glyph loader first looks up a specific set of settings based on the\n    // glyph code, and if not found, uses the defaults from the category. See\n    // glyphs.textNote for an example of this.\n    //\n    // Details in Glyph.lookupFontMetrics.\n    glyphs: {\n        coda: {\n            point: 20,\n            shiftX: -7,\n            shiftY: 8,\n        },\n        segno: {\n            shiftX: -7,\n        },\n        flag: {\n            shiftX: -0.77,\n            flag16thUp: {\n                shiftX: -0.75,\n            },\n            flag32ndUp: {\n                shiftX: -0.85,\n            },\n            flag64thUp: {\n                shiftX: -1.55,\n            },\n            flag128thUp: {\n                shiftX: -1.3,\n            },\n            flag16thDown: {\n                shiftX: -0.75,\n            },\n            flag32ndDown: {\n                shiftX: -0.76,\n            },\n            flag64thDown: {\n                shiftX: -1.5,\n            },\n            flag128thDown: {\n                shiftX: -1.2,\n            },\n            tabStem: {\n                shiftX: -1.75,\n            },\n            staveTempo: {\n                shiftX: -1,\n            },\n        },\n        clef: {\n            gClef: {\n                default: { scale: 1.1, shiftY: 1 },\n                small: { shiftY: 1.5 },\n            },\n            fClef: {\n                default: { shiftY: -0.5 },\n            },\n        },\n        ornament: {\n            ornamentTurn: {\n                scale: 1.2,\n            },\n            ornamentTurnSlash: {\n                scale: 1.2,\n            },\n        },\n        stroke: {\n            arrowheadBlackDown: {\n                straight: {\n                    shiftX: -4.5,\n                },\n                wiggly: {\n                    shiftX: -1,\n                    shiftY: 1,\n                },\n            },\n            arrowheadBlackUp: {\n                straight: {\n                    shiftX: -0.85,\n                },\n                wiggly: {\n                    shiftX: -1,\n                    shiftY: 1,\n                },\n            },\n        },\n        textNote: {\n            point: 34,\n            breathMarkTick: {\n                point: 36,\n                shiftY: 9,\n            },\n            breathMarkComma: {\n                point: 36,\n            },\n            segno: {\n                point: 30,\n                shiftX: -7,\n                shiftY: 8,\n            },\n            coda: {\n                point: 20,\n                shiftX: -7,\n                shiftY: 8,\n            },\n            ornamentTrill: {\n                shiftX: -10,\n                shiftY: 8,\n            },\n            ornamentMordent: {\n                shiftX: -8,\n            },\n            ornamentShortTrill: {\n                shiftX: -8,\n            },\n        },\n        noteHead: {\n            minPadding: 2,\n            standard: {\n                noteheadBlackStemUp: {\n                    shiftX: 0.5,\n                },\n                noteheadHalfStemUp: {\n                    shiftX: 0.725,\n                },\n                noteheadWholeStemUp: {\n                    shiftX: 1,\n                },\n            },\n            custom: {\n                noteheadCircleXStemUp: {\n                    shiftX: -1,\n                },\n                noteheadCircleXStemDown: {\n                    shiftX: 0.25,\n                },\n                noteheadDiamondHalfStemUp: {\n                    shiftX: 1.5,\n                },\n                noteheadDiamondBlackStemUp: {\n                    shiftX: 1.5,\n                },\n                noteheadDiamondWholeStemUp: {\n                    shiftX: 1,\n                },\n                noteheadXBlackStemUp: {\n                    shiftX: 1,\n                },\n                noteheadXHalfStemUp: {\n                    shiftX: -3,\n                },\n                noteheadXHalfStemDown: {\n                    shiftX: 1,\n                },\n                noteheadXWholeStemUp: {\n                    shiftX: -7,\n                },\n                noteheadXWholeStemDown: {\n                    shiftX: 1,\n                },\n                noteheadSquareWhiteStemDown: {\n                    shiftX: 0.25,\n                },\n                noteheadSquareWhiteStemUp: {\n                    shiftX: -0.75,\n                },\n                noteheadSquareBlackStemUp: {\n                    shiftX: -0.75,\n                },\n                noteheadTriangleUpWholeStemUp: {\n                    shiftX: -0.75,\n                },\n            },\n        },\n        chordSymbol: {\n            global: {\n                superscriptOffset: -400,\n                subscriptOffset: 300,\n                kerningOffset: -150,\n                lowerKerningText: ['D', 'F', 'P', 'T', 'V', 'Y'],\n                upperKerningText: ['L'],\n                spacing: 20,\n                superSubRatio: 0.73,\n            },\n            csymDiminished: {\n                scale: 0.8,\n                leftSideBearing: -95,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymHalfDiminished: {\n                scale: 0.8,\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymAugmented: {\n                scale: 1,\n                leftSideBearing: -25,\n                advanceWidth: 530,\n                yOffset: 0,\n            },\n            csymParensLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 155,\n                yOffset: 150,\n            },\n            csymParensRightTall: {\n                scale: 0.8,\n                leftSideBearing: 40,\n                advanceWidth: 189,\n                yOffset: 150,\n            },\n            csymBracketLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 328,\n                yOffset: 0,\n            },\n            csymBracketRightTall: {\n                scale: 0.8,\n                leftSideBearing: 1,\n                advanceWidth: 600,\n                yOffset: 0,\n            },\n            csymParensLeftVeryTall: {\n                scale: 0.95,\n                leftSideBearing: 0,\n                advanceWidth: 210,\n                yOffset: 250,\n            },\n            csymParensRightVeryTall: {\n                scale: 0.9,\n                leftSideBearing: -100,\n                advanceWidth: 111,\n                yOffset: 250,\n            },\n            csymDiagonalArrangementSlash: {\n                scale: 0.6,\n                leftSideBearing: -1,\n                advanceWidth: 990,\n                yOffset: 0,\n            },\n            csymMinor: {\n                scale: 0.7,\n                leftSideBearing: 0,\n                advanceWidth: 482,\n                yOffset: 0,\n            },\n            csymMajorSeventh: {\n                scale: 0.8,\n                leftSideBearing: 100,\n                yOffset: 0,\n                advanceWidth: 600,\n            },\n            accidentalSharp: {\n                scale: 0.7,\n                leftSideBearing: 0,\n                advanceWidth: 425,\n                yOffset: -422,\n            },\n            accidentalFlat: {\n                scale: 0.8,\n                leftSideBearing: -10,\n                advanceWidth: 228,\n                yOffset: -284,\n            },\n        },\n        jazzOrnaments: {\n            brassScoop: {\n                scale: 1.0,\n                xOffset: -12,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 10,\n            },\n            brassDoitMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassFallLipShort: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassLiftMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 5,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassFallRoughMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 26,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassBend: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -8,\n                stemUpYOffset: 28,\n                reportedWidth: 5,\n            },\n            brassMuteClosed: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -8,\n                stemUpYOffset: 26,\n                reportedWidth: 5,\n            },\n            brassMuteOpen: {\n                scale: 1.0,\n                xOffset: 4,\n                yOffset: -8,\n                stemUpYOffset: 27,\n                reportedWidth: 5,\n            },\n            brassFlip: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassJazzTurn: {\n                scale: 1.0,\n                xOffset: 6,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassSmear: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n        },\n        tuplet: {\n            noteHeadOffset: 20,\n            stemOffset: 10,\n            bottomLine: 4,\n            topModifierOffset: 20,\n        },\n    },\n};\n","export const PetalumaScriptFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 250,\n            y_min: 0,\n            y_max: 500,\n            ha: 500,\n            leftSideBearing: 0,\n            advanceWidth: 250,\n        },\n        '0': {\n            x_min: 33,\n            x_max: 534,\n            y_min: -13,\n            y_max: 751,\n            ha: 764,\n            leftSideBearing: 33,\n            advanceWidth: 570,\n        },\n        '1': {\n            x_min: 48,\n            x_max: 235,\n            y_min: -17,\n            y_max: 734,\n            ha: 751,\n            leftSideBearing: 48,\n            advanceWidth: 286,\n        },\n        '2': {\n            x_min: 56,\n            x_max: 571,\n            y_min: -19,\n            y_max: 741,\n            ha: 760,\n            leftSideBearing: 56,\n            advanceWidth: 626,\n        },\n        '3': {\n            x_min: 50,\n            x_max: 528,\n            y_min: -7,\n            y_max: 731,\n            ha: 738,\n            leftSideBearing: 50,\n            advanceWidth: 589,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 564,\n            y_min: -13,\n            y_max: 743,\n            ha: 756,\n            leftSideBearing: 38,\n            advanceWidth: 614,\n        },\n        '5': {\n            x_min: 42,\n            x_max: 601,\n            y_min: -34,\n            y_max: 743,\n            ha: 777,\n            leftSideBearing: 42,\n            advanceWidth: 648,\n        },\n        '6': {\n            x_min: 47,\n            x_max: 606,\n            y_min: -16,\n            y_max: 743,\n            ha: 759,\n            leftSideBearing: 47,\n            advanceWidth: 667,\n        },\n        '7': {\n            x_min: 47,\n            x_max: 567,\n            y_min: 5,\n            y_max: 739,\n            ha: 734,\n            leftSideBearing: 0,\n            advanceWidth: 615,\n        },\n        '8': {\n            x_min: 40,\n            x_max: 541,\n            y_min: -15,\n            y_max: 752,\n            ha: 767,\n            leftSideBearing: 40,\n            advanceWidth: 585,\n        },\n        '9': {\n            x_min: 40,\n            x_max: 537,\n            y_min: -52,\n            y_max: 736,\n            ha: 788,\n            leftSideBearing: 40,\n            advanceWidth: 592,\n        },\n        '!': {\n            x_min: 49,\n            x_max: 180,\n            y_min: -7,\n            y_max: 761,\n            ha: 768,\n            leftSideBearing: 49,\n            advanceWidth: 230,\n        },\n        '\"': {\n            x_min: 39,\n            x_max: 304,\n            y_min: 596,\n            y_max: 804,\n            ha: 208,\n            leftSideBearing: 39,\n            advanceWidth: 353,\n        },\n        '#': {\n            x_min: 33,\n            x_max: 599,\n            y_min: -8,\n            y_max: 765,\n            ha: 773,\n            leftSideBearing: 33,\n            advanceWidth: 648,\n        },\n        $: {\n            x_min: 53,\n            x_max: 495,\n            y_min: -111,\n            y_max: 823,\n            ha: 934,\n            leftSideBearing: 53,\n            advanceWidth: 560,\n        },\n        '%': {\n            x_min: 35,\n            x_max: 656,\n            y_min: -128,\n            y_max: 808,\n            ha: 936,\n            leftSideBearing: 35,\n            advanceWidth: 711,\n        },\n        '&': {\n            x_min: 53,\n            x_max: 441,\n            y_min: -3,\n            y_max: 753,\n            ha: 756,\n            leftSideBearing: 53,\n            advanceWidth: 500,\n        },\n        \"'\": {\n            x_min: 43,\n            x_max: 161,\n            y_min: 590,\n            y_max: 811,\n            ha: 221,\n            leftSideBearing: 43,\n            advanceWidth: 217,\n        },\n        '(': {\n            x_min: 41,\n            x_max: 311,\n            y_min: -36,\n            y_max: 845,\n            ha: 881,\n            leftSideBearing: 41,\n            advanceWidth: 308,\n        },\n        ')': {\n            x_min: -8,\n            x_max: 257,\n            y_min: -21,\n            y_max: 852,\n            ha: 873,\n            leftSideBearing: -8,\n            advanceWidth: 280,\n        },\n        '*': {\n            x_min: 59,\n            x_max: 539,\n            y_min: 175,\n            y_max: 589,\n            ha: 414,\n            leftSideBearing: 59,\n            advanceWidth: 601,\n        },\n        '+': {\n            x_min: 33,\n            x_max: 361,\n            y_min: 180,\n            y_max: 587,\n            ha: 407,\n            leftSideBearing: 33,\n            advanceWidth: 400,\n        },\n        ',': {\n            x_min: 15,\n            x_max: 176,\n            y_min: -129,\n            y_max: 92,\n            ha: 221,\n            leftSideBearing: 15,\n            advanceWidth: 205,\n        },\n        '-': {\n            x_min: 40,\n            x_max: 380,\n            y_min: 317,\n            y_max: 452,\n            ha: 135,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '.': {\n            x_min: 48,\n            x_max: 185,\n            y_min: -56,\n            y_max: 84,\n            ha: 140,\n            leftSideBearing: 48,\n            advanceWidth: 227,\n        },\n        '/': {\n            x_min: -58,\n            x_max: 654,\n            y_min: -122,\n            y_max: 844,\n            ha: 966,\n            leftSideBearing: -58,\n            advanceWidth: 626,\n        },\n        ':': {\n            x_min: 65,\n            x_max: 225,\n            y_min: 97,\n            y_max: 536,\n            ha: 439,\n            leftSideBearing: 65,\n            advanceWidth: 302,\n        },\n        ';': {\n            x_min: 13,\n            x_max: 295,\n            y_min: -139,\n            y_max: 536,\n            ha: 675,\n            leftSideBearing: 13,\n            advanceWidth: 334,\n        },\n        '<': {\n            x_min: 28,\n            x_max: 438,\n            y_min: -1,\n            y_max: 607,\n            ha: 608,\n            leftSideBearing: 28,\n            advanceWidth: 475,\n        },\n        '=': {\n            x_min: 40,\n            x_max: 383,\n            y_min: 199.9598640852289,\n            y_max: 541,\n            ha: 341.0401359147711,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '>': {\n            x_min: 35,\n            x_max: 421,\n            y_min: 28,\n            y_max: 632,\n            ha: 604,\n            leftSideBearing: 35,\n            advanceWidth: 466,\n        },\n        '?': {\n            x_min: 45,\n            x_max: 548,\n            y_min: -17,\n            y_max: 767,\n            ha: 784,\n            leftSideBearing: 45,\n            advanceWidth: 592,\n        },\n        '@': {\n            x_min: 51,\n            x_max: 730,\n            y_min: -78,\n            y_max: 753,\n            ha: 831,\n            leftSideBearing: 51,\n            advanceWidth: 781,\n        },\n        A: {\n            x_min: 37,\n            x_max: 554,\n            y_min: -4,\n            y_max: 746,\n            ha: 750,\n            leftSideBearing: 37,\n            advanceWidth: 617,\n        },\n        B: {\n            x_min: 37,\n            x_max: 532,\n            y_min: 3,\n            y_max: 783,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 579,\n        },\n        C: {\n            x_min: 37,\n            x_max: 583,\n            y_min: -3,\n            y_max: 775,\n            ha: 778,\n            leftSideBearing: 37,\n            advanceWidth: 623,\n        },\n        D: {\n            x_min: 50,\n            x_max: 530,\n            y_min: -15,\n            y_max: 749,\n            ha: 764,\n            leftSideBearing: 50,\n            advanceWidth: 579,\n        },\n        E: {\n            x_min: 45,\n            x_max: 531,\n            y_min: -1,\n            y_max: 743,\n            ha: 744,\n            leftSideBearing: 45,\n            advanceWidth: 585,\n        },\n        F: {\n            x_min: 45,\n            x_max: 459,\n            y_min: 23,\n            y_max: 727,\n            ha: 704,\n            leftSideBearing: 45,\n            advanceWidth: 510,\n        },\n        G: {\n            x_min: 31,\n            x_max: 577,\n            y_min: -8,\n            y_max: 733,\n            ha: 741,\n            leftSideBearing: 31,\n            advanceWidth: 611,\n        },\n        H: {\n            x_min: 37,\n            x_max: 493,\n            y_min: -22,\n            y_max: 758,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 535,\n        },\n        I: {\n            x_min: 47,\n            x_max: 501,\n            y_min: -3,\n            y_max: 731,\n            ha: 734,\n            leftSideBearing: 47,\n            advanceWidth: 541,\n        },\n        J: {\n            x_min: 33,\n            x_max: 531,\n            y_min: -23,\n            y_max: 725,\n            ha: 748,\n            leftSideBearing: 33,\n            advanceWidth: 573,\n        },\n        K: {\n            x_min: 43,\n            x_max: 505,\n            y_min: -10,\n            y_max: 740,\n            ha: 750,\n            leftSideBearing: 43,\n            advanceWidth: 560,\n        },\n        L: {\n            x_min: 49,\n            x_max: 457,\n            y_min: -2,\n            y_max: 746,\n            ha: 748,\n            leftSideBearing: 49,\n            advanceWidth: 510,\n        },\n        M: {\n            x_min: 35,\n            x_max: 699,\n            y_min: 1,\n            y_max: 744,\n            ha: 743,\n            leftSideBearing: 35,\n            advanceWidth: 743,\n        },\n        N: {\n            x_min: 34,\n            x_max: 533,\n            y_min: -17,\n            y_max: 761,\n            ha: 778,\n            leftSideBearing: 34,\n            advanceWidth: 579,\n        },\n        O: {\n            x_min: 41,\n            x_max: 608,\n            y_min: -5,\n            y_max: 735,\n            ha: 740,\n            leftSideBearing: 41,\n            advanceWidth: 667,\n        },\n        P: {\n            x_min: 53,\n            x_max: 451,\n            y_min: -18,\n            y_max: 735,\n            ha: 753,\n            leftSideBearing: 53,\n            advanceWidth: 497,\n        },\n        Q: {\n            x_min: 40,\n            x_max: 599,\n            y_min: -67,\n            y_max: 744,\n            ha: 811,\n            leftSideBearing: 40,\n            advanceWidth: 648,\n        },\n        R: {\n            x_min: 39,\n            x_max: 487,\n            y_min: 16,\n            y_max: 735,\n            ha: 719,\n            leftSideBearing: 39,\n            advanceWidth: 535,\n        },\n        S: {\n            x_min: 35,\n            x_max: 552,\n            y_min: -47,\n            y_max: 708,\n            ha: 755,\n            leftSideBearing: 35,\n            advanceWidth: 604,\n        },\n        T: {\n            x_min: 26,\n            x_max: 656,\n            y_min: -13,\n            y_max: 718,\n            ha: 731,\n            leftSideBearing: 26,\n            advanceWidth: 705,\n        },\n        U: {\n            x_min: 41,\n            x_max: 518,\n            y_min: -20,\n            y_max: 748,\n            ha: 768,\n            leftSideBearing: 41,\n            advanceWidth: 567,\n        },\n        V: {\n            x_min: 47,\n            x_max: 509,\n            y_min: -26,\n            y_max: 744,\n            ha: 770,\n            leftSideBearing: 47,\n            advanceWidth: 567,\n        },\n        W: {\n            x_min: 44,\n            x_max: 789,\n            y_min: -35,\n            y_max: 720,\n            ha: 755,\n            leftSideBearing: 44,\n            advanceWidth: 833,\n        },\n        X: {\n            x_min: 63,\n            x_max: 635,\n            y_min: -10,\n            y_max: 745,\n            ha: 755,\n            leftSideBearing: 63,\n            advanceWidth: 680,\n        },\n        Y: {\n            x_min: 43,\n            x_max: 503,\n            y_min: -21,\n            y_max: 734,\n            ha: 755,\n            leftSideBearing: 43,\n            advanceWidth: 541,\n        },\n        Z: {\n            x_min: 42,\n            x_max: 584,\n            y_min: -10,\n            y_max: 739,\n            ha: 749,\n            leftSideBearing: 42,\n            advanceWidth: 629,\n        },\n        '[': {\n            x_min: 46,\n            x_max: 346,\n            y_min: -150,\n            y_max: 884,\n            ha: 1034,\n            leftSideBearing: 46,\n            advanceWidth: 291,\n        },\n        '\\\\': {\n            x_min: 20,\n            x_max: 616,\n            y_min: -100,\n            y_max: 797,\n            ha: 897,\n            leftSideBearing: 20,\n            advanceWidth: 645,\n        },\n        ']': {\n            x_min: -76,\n            x_max: 226,\n            y_min: -150,\n            y_max: 881,\n            ha: 1031,\n            leftSideBearing: -76,\n            advanceWidth: 297,\n        },\n        '^': {\n            x_min: 43,\n            x_max: 437,\n            y_min: 517,\n            y_max: 812,\n            ha: 295,\n            leftSideBearing: 43,\n            advanceWidth: 478,\n        },\n        _: {\n            x_min: 29,\n            x_max: 563,\n            y_min: -110,\n            y_max: -1,\n            ha: 109,\n            leftSideBearing: 29,\n            advanceWidth: 598,\n        },\n        '`': {\n            x_min: 54,\n            x_max: 321,\n            y_min: 540,\n            y_max: 747,\n            ha: 207,\n            leftSideBearing: 54,\n            advanceWidth: 368,\n        },\n        a: {\n            x_min: 20,\n            x_max: 447,\n            y_min: -17,\n            y_max: 495,\n            ha: 512,\n            leftSideBearing: 20,\n            advanceWidth: 494,\n        },\n        b: {\n            x_min: 37,\n            x_max: 466,\n            y_min: -27,\n            y_max: 770,\n            ha: 797,\n            leftSideBearing: 37,\n            advanceWidth: 510,\n        },\n        c: {\n            x_min: 35,\n            x_max: 456,\n            y_min: -9,\n            y_max: 507,\n            ha: 516,\n            leftSideBearing: 35,\n            advanceWidth: 460,\n        },\n        d: {\n            x_min: 45,\n            x_max: 520,\n            y_min: -15,\n            y_max: 764,\n            ha: 779,\n            leftSideBearing: 45,\n            advanceWidth: 560,\n        },\n        e: {\n            x_min: 33,\n            x_max: 370,\n            y_min: -5,\n            y_max: 501,\n            ha: 506,\n            leftSideBearing: 33,\n            advanceWidth: 397,\n        },\n        f: {\n            x_min: 35,\n            x_max: 411,\n            y_min: -13,\n            y_max: 695,\n            ha: 708,\n            leftSideBearing: 35,\n            advanceWidth: 453,\n        },\n        g: {\n            x_min: 33,\n            x_max: 551,\n            y_min: -257,\n            y_max: 505,\n            ha: 762,\n            leftSideBearing: 33,\n            advanceWidth: 611,\n        },\n        h: {\n            x_min: 32,\n            x_max: 458,\n            y_min: -29,\n            y_max: 743,\n            ha: 772,\n            leftSideBearing: 32,\n            advanceWidth: 491,\n        },\n        i: {\n            x_min: 45,\n            x_max: 167,\n            y_min: -13,\n            y_max: 631,\n            ha: 644,\n            leftSideBearing: 45,\n            advanceWidth: 220,\n        },\n        j: {\n            x_min: -127,\n            x_max: 261,\n            y_min: -231,\n            y_max: 601,\n            ha: 832,\n            leftSideBearing: -127,\n            advanceWidth: 308,\n        },\n        k: {\n            x_min: 39,\n            x_max: 443,\n            y_min: -3,\n            y_max: 700,\n            ha: 703,\n            leftSideBearing: 39,\n            advanceWidth: 497,\n        },\n        l: {\n            x_min: 58,\n            x_max: 168,\n            y_min: -8,\n            y_max: 686,\n            ha: 694,\n            leftSideBearing: 58,\n            advanceWidth: 227,\n        },\n        m: {\n            x_min: 39,\n            x_max: 688,\n            y_min: -14,\n            y_max: 501,\n            ha: 515,\n            leftSideBearing: 39,\n            advanceWidth: 718,\n        },\n        n: {\n            x_min: 45,\n            x_max: 491,\n            y_min: -32,\n            y_max: 512,\n            ha: 544,\n            leftSideBearing: 45,\n            advanceWidth: 541,\n        },\n        o: {\n            x_min: 41,\n            x_max: 424,\n            y_min: -12,\n            y_max: 493,\n            ha: 505,\n            leftSideBearing: 41,\n            advanceWidth: 447,\n        },\n        p: {\n            x_min: 25,\n            x_max: 529,\n            y_min: -260,\n            y_max: 500,\n            ha: 760,\n            leftSideBearing: 25,\n            advanceWidth: 573,\n        },\n        q: {\n            x_min: 53,\n            x_max: 603,\n            y_min: -235,\n            y_max: 514,\n            ha: 749,\n            leftSideBearing: 53,\n            advanceWidth: 623,\n        },\n        r: {\n            x_min: 32,\n            x_max: 407,\n            y_min: -7,\n            y_max: 492,\n            ha: 499,\n            leftSideBearing: 32,\n            advanceWidth: 460,\n        },\n        s: {\n            x_min: 49,\n            x_max: 416,\n            y_min: -12,\n            y_max: 519,\n            ha: 531,\n            leftSideBearing: 49,\n            advanceWidth: 460,\n        },\n        t: {\n            x_min: 32,\n            x_max: 442,\n            y_min: -5,\n            y_max: 684,\n            ha: 689,\n            leftSideBearing: 32,\n            advanceWidth: 469,\n        },\n        u: {\n            x_min: 41,\n            x_max: 487,\n            y_min: -5,\n            y_max: 507,\n            ha: 512,\n            leftSideBearing: 41,\n            advanceWidth: 510,\n        },\n        v: {\n            x_min: 16,\n            x_max: 441,\n            y_min: -20,\n            y_max: 542,\n            ha: 562,\n            leftSideBearing: 16,\n            advanceWidth: 456,\n        },\n        w: {\n            x_min: 39,\n            x_max: 639,\n            y_min: -22,\n            y_max: 505,\n            ha: 527,\n            leftSideBearing: 39,\n            advanceWidth: 661,\n        },\n        x: {\n            x_min: 15,\n            x_max: 505,\n            y_min: -39,\n            y_max: 539,\n            ha: 578,\n            leftSideBearing: 15,\n            advanceWidth: 541,\n        },\n        y: {\n            x_min: -98,\n            x_max: 501,\n            y_min: -242,\n            y_max: 511,\n            ha: 753,\n            leftSideBearing: -98,\n            advanceWidth: 548,\n        },\n        z: {\n            x_min: 27,\n            x_max: 479,\n            y_min: -3,\n            y_max: 494,\n            ha: 497,\n            leftSideBearing: 27,\n            advanceWidth: 494,\n        },\n        '{': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '|': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '}': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '~': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n    },\n    fontFamily: 'PetalumaScript',\n    resolution: 1000,\n    generatedOn: '2020-06-14T18:33:25.407Z',\n};\n","export const RobotoSlabFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 509,\n            y_min: 0,\n            y_max: 2000,\n            ha: 2000,\n            leftSideBearing: 0,\n            advanceWidth: 509,\n        },\n        '0': {\n            x_min: 121,\n            x_max: 1048,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1168,\n        },\n        '1': {\n            x_min: 117,\n            x_max: 767,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 117,\n            advanceWidth: 844,\n        },\n        '2': {\n            x_min: 75.8474576645637,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 75,\n            advanceWidth: 1131,\n        },\n        '3': {\n            x_min: 74.85365853658536,\n            x_max: 994,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1106,\n        },\n        '4': {\n            x_min: 63,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1187,\n        },\n        '5': {\n            x_min: 96.8448275474953,\n            x_max: 982,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 96,\n            advanceWidth: 1081,\n        },\n        '6': {\n            x_min: 121,\n            x_max: 1067,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1144,\n        },\n        '7': {\n            x_min: 76,\n            x_max: 1060,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: -30,\n            advanceWidth: 1128,\n        },\n        '8': {\n            x_min: 92,\n            x_max: 1039,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 92,\n            advanceWidth: 1131,\n        },\n        '9': {\n            x_min: 84,\n            x_max: 1026,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 84,\n            advanceWidth: 1154,\n        },\n        '!': {\n            x_min: 143,\n            x_max: 340,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 143,\n            advanceWidth: 483,\n        },\n        '\"': {\n            x_min: 166,\n            x_max: 634,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 770,\n        },\n        '#': {\n            x_min: 63,\n            x_max: 1179,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1246,\n        },\n        $: {\n            x_min: 81.92156915727656,\n            x_max: 1012,\n            y_min: -208,\n            y_max: 1693,\n            ha: 1901,\n            leftSideBearing: 81,\n            advanceWidth: 1110,\n        },\n        '%': {\n            x_min: 77,\n            x_max: 1384,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 77,\n            advanceWidth: 1460,\n        },\n        '&': {\n            x_min: 74,\n            x_max: 1242,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1289,\n        },\n        \"'\": {\n            x_min: 166,\n            x_max: 324,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 460,\n        },\n        '(': {\n            x_min: 114,\n            x_max: 650,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 114,\n            advanceWidth: 662,\n        },\n        ')': {\n            x_min: 11,\n            x_max: 547,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 11,\n            advanceWidth: 654,\n        },\n        '*': {\n            x_min: 66,\n            x_max: 893,\n            y_min: 607,\n            y_max: 1456,\n            ha: 849,\n            leftSideBearing: 66,\n            advanceWidth: 958,\n        },\n        '+': {\n            x_min: 73,\n            x_max: 1071,\n            y_min: 146,\n            y_max: 1206,\n            ha: 1060,\n            leftSideBearing: 73,\n            advanceWidth: 1145,\n        },\n        ',': {\n            x_min: 23,\n            x_max: 315,\n            y_min: -311,\n            y_max: 221,\n            ha: 532,\n            leftSideBearing: 23,\n            advanceWidth: 404,\n        },\n        '-': {\n            x_min: 154,\n            x_max: 643,\n            y_min: 538,\n            y_max: 692,\n            ha: 154,\n            leftSideBearing: 154,\n            advanceWidth: 797,\n        },\n        '.': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 202,\n            ha: 202,\n            leftSideBearing: 145,\n            advanceWidth: 493,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 774,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 0,\n            advanceWidth: 824,\n        },\n        ':': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 145,\n            advanceWidth: 419,\n        },\n        ';': {\n            x_min: 53,\n            x_max: 345,\n            y_min: -311,\n            y_max: 1082,\n            ha: 1393,\n            leftSideBearing: 53,\n            advanceWidth: 424,\n        },\n        '<': {\n            x_min: 76,\n            x_max: 892,\n            y_min: 107,\n            y_max: 1013,\n            ha: 906,\n            leftSideBearing: 76,\n            advanceWidth: 1017,\n        },\n        '=': {\n            x_min: 147,\n            x_max: 981,\n            y_min: 407,\n            y_max: 987,\n            ha: 580,\n            leftSideBearing: 147,\n            advanceWidth: 1127,\n        },\n        '>': {\n            x_min: 125,\n            x_max: 980,\n            y_min: 87,\n            y_max: 993,\n            ha: 906,\n            leftSideBearing: 125,\n            advanceWidth: 1060,\n        },\n        '?': {\n            x_min: 65.92660602419838,\n            x_max: 890,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 65,\n            advanceWidth: 953,\n        },\n        '@': {\n            x_min: 84.3592218305664,\n            x_max: 1705.2346925277395,\n            y_min: -453,\n            y_max: 1431,\n            ha: 1884,\n            leftSideBearing: 84,\n            advanceWidth: 1821,\n        },\n        A: {\n            x_min: 70,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 70,\n            advanceWidth: 1533,\n        },\n        B: {\n            x_min: 81,\n            x_max: 1253,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1322,\n        },\n        C: {\n            x_min: 80,\n            x_max: 1174,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1290,\n        },\n        D: {\n            x_min: 81,\n            x_max: 1291,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1356,\n        },\n        E: {\n            x_min: 81,\n            x_max: 1190,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1306,\n        },\n        F: {\n            x_min: 81,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1256,\n        },\n        G: {\n            x_min: 80,\n            x_max: 1226,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1346,\n        },\n        H: {\n            x_min: 81,\n            x_max: 1497,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1578,\n        },\n        I: {\n            x_min: 81,\n            x_max: 604,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 685,\n        },\n        J: {\n            x_min: 60,\n            x_max: 1100,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 60,\n            advanceWidth: 1169,\n        },\n        K: {\n            x_min: 81,\n            x_max: 1427,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1501,\n        },\n        L: {\n            x_min: 81,\n            x_max: 1130,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1210,\n        },\n        M: {\n            x_min: 94,\n            x_max: 1888,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 94,\n            advanceWidth: 1982,\n        },\n        N: {\n            x_min: 83,\n            x_max: 1509,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 83,\n            advanceWidth: 1592,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1281,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 70,\n            advanceWidth: 1351,\n        },\n        P: {\n            x_min: 81,\n            x_max: 1242,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1297,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1348,\n            y_min: -245,\n            y_max: 1477,\n            ha: 1722,\n            leftSideBearing: 70,\n            advanceWidth: 1376,\n        },\n        R: {\n            x_min: 81,\n            x_max: 1285,\n            y_min: 0,\n            y_max: 1455,\n            ha: 1455,\n            leftSideBearing: 81,\n            advanceWidth: 1385,\n        },\n        S: {\n            x_min: 115,\n            x_max: 1116,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 115,\n            advanceWidth: 1206,\n        },\n        T: {\n            x_min: 96,\n            x_max: 1306,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 96,\n            advanceWidth: 1406,\n        },\n        U: {\n            x_min: 70,\n            x_max: 1452,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 70,\n            advanceWidth: 1522,\n        },\n        V: {\n            x_min: 65,\n            x_max: 1443,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1508,\n        },\n        W: {\n            x_min: 72,\n            x_max: 2057,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 72,\n            advanceWidth: 2129,\n        },\n        X: {\n            x_min: 80,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 80,\n            advanceWidth: 1529,\n        },\n        Y: {\n            x_min: 65,\n            x_max: 1396,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1461,\n        },\n        Z: {\n            x_min: 90,\n            x_max: 1107,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 90,\n            advanceWidth: 1197,\n        },\n        '[': {\n            x_min: 157,\n            x_max: 541,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 157,\n            advanceWidth: 573,\n        },\n        '\\\\': {\n            x_min: 36,\n            x_max: 830,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 36,\n            advanceWidth: 841,\n        },\n        ']': {\n            x_min: 23,\n            x_max: 408,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 23,\n            advanceWidth: 552,\n        },\n        '^': {\n            x_min: 71,\n            x_max: 802,\n            y_min: 729,\n            y_max: 1456,\n            ha: 727,\n            leftSideBearing: 71,\n            advanceWidth: 864,\n        },\n        _: {\n            x_min: 119,\n            x_max: 1041,\n            y_min: -154,\n            y_max: 0,\n            ha: 154,\n            leftSideBearing: 119,\n            advanceWidth: 1168,\n        },\n        '`': {\n            x_min: 40,\n            x_max: 456,\n            y_min: 1288,\n            y_max: 1560,\n            ha: 272,\n            leftSideBearing: 40,\n            advanceWidth: 496,\n        },\n        a: {\n            x_min: 79,\n            x_max: 1053,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 79,\n            advanceWidth: 1132,\n        },\n        b: {\n            x_min: -16,\n            x_max: 1071,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: -16,\n            advanceWidth: 1145,\n        },\n        c: {\n            x_min: 78,\n            x_max: 988,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1067,\n        },\n        d: {\n            x_min: 78,\n            x_max: 1156,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: 78,\n            advanceWidth: 1218,\n        },\n        e: {\n            x_min: 74,\n            x_max: 980,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 74,\n            advanceWidth: 1059,\n        },\n        f: {\n            x_min: 64,\n            x_max: 731,\n            y_min: 0,\n            y_max: 1581,\n            ha: 1581,\n            leftSideBearing: 64,\n            advanceWidth: 725,\n        },\n        g: {\n            x_min: 78,\n            x_max: 1133,\n            y_min: -437,\n            y_max: 1102,\n            ha: 1539,\n            leftSideBearing: 78,\n            advanceWidth: 1157,\n        },\n        h: {\n            x_min: 49,\n            x_max: 1255,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 49,\n            advanceWidth: 1315,\n        },\n        i: {\n            x_min: 67,\n            x_max: 590,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 67,\n            advanceWidth: 652,\n        },\n        j: {\n            x_min: -56,\n            x_max: 381,\n            y_min: -437,\n            y_max: 1560,\n            ha: 1997,\n            leftSideBearing: -56,\n            advanceWidth: 525,\n        },\n        k: {\n            x_min: 64,\n            x_max: 1248,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 1287,\n        },\n        l: {\n            x_min: 64,\n            x_max: 587,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 653,\n        },\n        m: {\n            x_min: 74,\n            x_max: 1905,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1977,\n        },\n        n: {\n            x_min: 74,\n            x_max: 1278,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1343,\n        },\n        o: {\n            x_min: 78,\n            x_max: 1046,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1124,\n        },\n        p: {\n            x_min: 34,\n            x_max: 1119,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 34,\n            advanceWidth: 1197,\n        },\n        q: {\n            x_min: 78,\n            x_max: 1135,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 78,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 72,\n            x_max: 808,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 72,\n            advanceWidth: 854,\n        },\n        s: {\n            x_min: 104,\n            x_max: 933,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 104,\n            advanceWidth: 1022,\n        },\n        t: {\n            x_min: 24,\n            x_max: 678,\n            y_min: -17,\n            y_max: 1343,\n            ha: 1360,\n            leftSideBearing: 24,\n            advanceWidth: 730,\n        },\n        u: {\n            x_min: 52,\n            x_max: 1181,\n            y_min: -21,\n            y_max: 1082,\n            ha: 1103,\n            leftSideBearing: 52,\n            advanceWidth: 1245,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 26,\n            advanceWidth: 1206,\n        },\n        w: {\n            x_min: 52,\n            x_max: 1777,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 52,\n            advanceWidth: 1823,\n        },\n        x: {\n            x_min: 42,\n            x_max: 1163,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 42,\n            advanceWidth: 1203,\n        },\n        y: {\n            x_min: 24,\n            x_max: 1172,\n            y_min: -437,\n            y_max: 1082,\n            ha: 1519,\n            leftSideBearing: 24,\n            advanceWidth: 1192,\n        },\n        z: {\n            x_min: 88,\n            x_max: 960,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 88,\n            advanceWidth: 1032,\n        },\n        '{': {\n            x_min: 63,\n            x_max: 671,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 63,\n            advanceWidth: 701,\n        },\n        '|': {\n            x_min: 150,\n            x_max: 307,\n            y_min: -270,\n            y_max: 1456,\n            ha: 1726,\n            leftSideBearing: 150,\n            advanceWidth: 451,\n        },\n        '}': {\n            x_min: 27,\n            x_max: 635,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 27,\n            advanceWidth: 701,\n        },\n        '~': {\n            x_min: 121,\n            x_max: 1257,\n            y_min: 401,\n            y_max: 803,\n            ha: 402,\n            leftSideBearing: 121,\n            advanceWidth: 1386,\n        },\n    },\n    fontFamily: 'Roboto Slab',\n    resolution: 2048,\n    generatedOn: '2020-06-15T19:12:58.120Z',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { PetalumaFont } from './petaluma_glyphs';\nimport { PetalumaMetrics } from './petaluma_metrics';\nexport function loadPetaluma() {\n    Font.load('Petaluma', PetalumaFont, PetalumaMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { CustomFont } from './custom_glyphs';\nimport { CustomMetrics } from './custom_metrics';\nexport function loadCustom() {\n    Font.load('Custom', CustomFont, CustomMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// vexflow-petaluma.ts is the entry point for vexflow-petaluma.js.\n// This version bundles the Petaluma music engraving font.\nimport { Vex } from '../src/vex';\nimport { Flow } from '../src/flow';\nimport { loadCustom } from '../src/fonts/load_custom';\nimport { loadPetaluma } from '../src/fonts/load_petaluma';\nimport { loadTextFonts } from '../src/fonts/textfonts';\nloadPetaluma();\nloadCustom();\nFlow.setMusicFont('Petaluma', 'Custom');\nloadTextFonts();\nexport * from '../src/index';\nexport default Vex;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { TextFormatter } from '../textformatter';\nimport { PetalumaScriptFont } from './petalumascript_glyphs';\nimport { RobotoSlabFont } from './robotoslab_glyphs';\nexport function loadTextFonts() {\n    // Roboto Slab\n    {\n        const fontData = RobotoSlabFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Previously we used 'H', but it isn't actually the tallest or the widest.\n        // Interestingly, the lowercase 'b' is the tallest glyph.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Text font to pair with the Bravura / Gonville music fonts.',\n        });\n    }\n    // PetalumaScript\n    {\n        const fontData = PetalumaScriptFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Text font to pair with the Petaluma music font.',\n        });\n    }\n}\n"],"names":["root","factory","exports","module","define","amd","window","globalThis","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","Function","e","obj","prop","prototype","hasOwnProperty","call","RuntimeError","Error","constructor","code","message","super","globalObject","self","defined","x","undefined","log","block","args","line","Array","slice","join","console","warn","err","stack","midLine","a","b","mid_line","n","parseInt","prefix","text","normalizeAngle","Math","PI","Fraction","numerator","denominator","set","CATEGORY","static","Number","isNaN","t","GCD","length","LCM","shift","LCMM","value","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","__staticFractionA","copy","__staticFractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","floor","remainder","makeAbs","abs","toString","toSimplifiedString","__staticFractionTmp","toMixedString","s","q","f","parse","str","i","split","BoundingBox","y","w","h","that","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","new_x","new_y","new_w","max","new_h","BoundingBoxComputation","x1","NaN","y1","x2","y2","getX1","getY1","width","height","addPoint","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","p01x","denom","it","p01y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","t1","sqrt","t2","FontWeight","FontStyle","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","fontParser","Fonts","Font","fontName","name","fontSize","SIZE","_a","scaleToPxFrom","pt","parseFloat","unit","replace","toLowerCase","size","weight","style","fromCSSString","family","SANS_SERIF","NORMAL","cssFontShorthand","document","createElement","font","fontFamily","fontWeight","fontStyle","fontInfo","st","trim","wt","sz","scaleFactor","parsedWeight","ITALIC","woffURL","includeWoff2","fontFace","FontFace","load","fonts","host","WEB_FONT_HOST","files","WEB_FONT_FILES","fontPath","loadWebFont","data","metrics","setData","setMetrics","getName","getData","getMetrics","hasData","getResolution","resolution","getGlyphs","glyphs","lookupMetric","defaultValue","keyParts","currObj","SERIF","px","em","in","mm","cm","PetalumaScript","Index","id","type","class","Registry","index","defaultRegistry","registry","clear","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","_b","getElementsByAttribute","attribute","index_attr","index_attr_val","keys","map","k","getElementsByType","getElementsByClass","className","onUpdate","info","includes","Element","attrs","newID","el","getCategory","classes","rendered","getDefaultRegistry","ID","setStyle","getStyle","applyStyle","context","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","addClass","removeClass","isRendered","setRendered","getAttributes","oldID","getBoundingBox","getContext","setContext","setFont","toCSSString","textFont","defaultTextFont","TEXT_FONT","fontIsObject","fontIsString","fontIsUndefined","sizeWeightStyleAreUndefined","assign","validate","getFont","resetFont","setFontSize","getFontSize","fontSizeInPoints","convertSizeToPointValue","fontSizeInPixels","convertSizeToPixelValue","RESOLUTION","durations","durationAliases","keySignatures","C","num","Am","F","acc","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","G","Em","D","Bm","A","E","B","clefs","treble","line_shift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","int_val","CN","accidental","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","rest","X","octave","shift_right","customNoteHeads","D0","D1","D2","D3","T0","T1","T2","T3","X0","X1","X2","X3","S1","S2","R1","R2","accidentals","parenRightPaddingAdjustment","bb","db","bs","bss","bbs","ashs","afhf","accSagittal5v7KleismaUp","accSagittal5v7KleismaDown","accSagittal5CommaUp","accSagittal5CommaDown","accSagittal7CommaUp","accSagittal7CommaDown","accSagittal25SmallDiesisUp","accSagittal25SmallDiesisDown","accSagittal35MediumDiesisUp","accSagittal35MediumDiesisDown","accSagittal11MediumDiesisUp","accSagittal11MediumDiesisDown","accSagittal11LargeDiesisUp","accSagittal11LargeDiesisDown","accSagittal35LargeDiesisUp","accSagittal35LargeDiesisDown","accSagittalSharp25SDown","accSagittalFlat25SUp","accSagittalSharp7CDown","accSagittalFlat7CUp","accSagittalSharp5CDown","accSagittalFlat5CUp","accSagittalSharp5v7kDown","accSagittalFlat5v7kUp","accSagittalSharp","accSagittalFlat","accSagittalSharp5v7kUp","accSagittalFlat5v7kDown","accSagittalSharp5CUp","accSagittalFlat5CDown","accSagittalSharp7CUp","accSagittalFlat7CDown","accSagittalSharp25SUp","accSagittalFlat25SDown","accSagittalSharp35MUp","accSagittalFlat35MDown","accSagittalSharp11MUp","accSagittalFlat11MDown","accSagittalSharp11LUp","accSagittalFlat11LDown","accSagittalSharp35LUp","accSagittalFlat35LDown","accSagittalDoubleSharp25SDown","accSagittalDoubleFlat25SUp","accSagittalDoubleSharp7CDown","accSagittalDoubleFlat7CUp","accSagittalDoubleSharp5CDown","accSagittalDoubleFlat5CUp","accSagittalDoubleSharp5v7kDown","accSagittalDoubleFlat5v7kUp","accSagittalDoubleSharp","accSagittalDoubleFlat","accSagittal7v11KleismaUp","accSagittal7v11KleismaDown","accSagittal17CommaUp","accSagittal17CommaDown","accSagittal55CommaUp","accSagittal55CommaDown","accSagittal7v11CommaUp","accSagittal7v11CommaDown","accSagittal5v11SmallDiesisUp","accSagittal5v11SmallDiesisDown","accSagittalSharp5v11SDown","accSagittalFlat5v11SUp","accSagittalSharp7v11CDown","accSagittalFlat7v11CUp","accSagittalSharp55CDown","accSagittalFlat55CUp","accSagittalSharp17CDown","accSagittalFlat17CUp","accSagittalSharp7v11kDown","accSagittalFlat7v11kUp","accSagittalSharp7v11kUp","accSagittalFlat7v11kDown","accSagittalSharp17CUp","accSagittalFlat17CDown","accSagittalSharp55CUp","accSagittalFlat55CDown","accSagittalSharp7v11CUp","accSagittalFlat7v11CDown","accSagittalSharp5v11SUp","accSagittalFlat5v11SDown","accSagittalDoubleSharp5v11SDown","accSagittalDoubleFlat5v11SUp","accSagittalDoubleSharp7v11CDown","accSagittalDoubleFlat7v11CUp","accSagittalDoubleSharp55CDown","accSagittalDoubleFlat55CUp","accSagittalDoubleSharp17CDown","accSagittalDoubleFlat17CUp","accSagittalDoubleSharp7v11kDown","accSagittalDoubleFlat7v11kUp","accSagittal23CommaUp","accSagittal23CommaDown","accSagittal5v19CommaUp","accSagittal5v19CommaDown","accSagittal5v23SmallDiesisUp","accSagittal5v23SmallDiesisDown","accSagittalSharp5v23SDown","accSagittalFlat5v23SUp","accSagittalSharp5v19CDown","accSagittalFlat5v19CUp","accSagittalSharp23CDown","accSagittalFlat23CUp","accSagittalSharp23CUp","accSagittalFlat23CDown","accSagittalSharp5v19CUp","accSagittalFlat5v19CDown","accSagittalSharp5v23SUp","accSagittalFlat5v23SDown","accSagittalDoubleSharp5v23SDown","accSagittalDoubleFlat5v23SUp","accSagittalDoubleSharp5v19CDown","accSagittalDoubleFlat5v19CUp","accSagittalDoubleSharp23CDown","accSagittalDoubleFlat23CUp","accSagittal19SchismaUp","accSagittal19SchismaDown","accSagittal17KleismaUp","accSagittal17KleismaDown","accSagittal143CommaUp","accSagittal143CommaDown","accSagittal11v49CommaUp","accSagittal11v49CommaDown","accSagittal19CommaUp","accSagittal19CommaDown","accSagittal7v19CommaUp","accSagittal7v19CommaDown","accSagittal49SmallDiesisUp","accSagittal49SmallDiesisDown","accSagittal23SmallDiesisUp","accSagittal23SmallDiesisDown","accSagittal5v13MediumDiesisUp","accSagittal5v13MediumDiesisDown","accSagittal11v19MediumDiesisUp","accSagittal11v19MediumDiesisDown","accSagittal49MediumDiesisUp","accSagittal49MediumDiesisDown","accSagittal5v49MediumDiesisUp","accSagittal5v49MediumDiesisDown","accSagittal49LargeDiesisUp","accSagittal49LargeDiesisDown","accSagittal11v19LargeDiesisUp","accSagittal11v19LargeDiesisDown","accSagittal5v13LargeDiesisUp","accSagittal5v13LargeDiesisDown","accSagittalSharp23SDown","accSagittalFlat23SUp","accSagittalSharp49SDown","accSagittalFlat49SUp","accSagittalSharp7v19CDown","accSagittalFlat7v19CUp","accSagittalSharp19CDown","accSagittalFlat19CUp","accSagittalSharp11v49CDown","accSagittalFlat11v49CUp","accSagittalSharp143CDown","accSagittalFlat143CUp","accSagittalSharp17kDown","accSagittalFlat17kUp","accSagittalSharp19sDown","accSagittalFlat19sUp","accSagittalSharp19sUp","accSagittalFlat19sDown","accSagittalSharp17kUp","accSagittalFlat17kDown","accSagittalSharp143CUp","accSagittalFlat143CDown","accSagittalSharp11v49CUp","accSagittalFlat11v49CDown","accSagittalSharp19CUp","accSagittalFlat19CDown","accSagittalSharp7v19CUp","accSagittalFlat7v19CDown","accSagittalSharp49SUp","accSagittalFlat49SDown","accSagittalSharp23SUp","accSagittalFlat23SDown","accSagittalSharp5v13MUp","accSagittalFlat5v13MDown","accSagittalSharp11v19MUp","accSagittalFlat11v19MDown","accSagittalSharp49MUp","accSagittalFlat49MDown","accSagittalSharp5v49MUp","accSagittalFlat5v49MDown","accSagittalSharp49LUp","accSagittalFlat49LDown","accSagittalSharp11v19LUp","accSagittalFlat11v19LDown","accSagittalSharp5v13LUp","accSagittalFlat5v13LDown","accSagittalDoubleSharp23SDown","accSagittalDoubleFlat23SUp","accSagittalDoubleSharp49SDown","accSagittalDoubleFlat49SUp","accSagittalDoubleSharp7v19CDown","accSagittalDoubleFlat7v19CUp","accSagittalDoubleSharp19CDown","accSagittalDoubleFlat19CUp","accSagittalDoubleSharp11v49CDown","accSagittalDoubleFlat11v49CUp","accSagittalDoubleSharp143CDown","accSagittalDoubleFlat143CUp","accSagittalDoubleSharp17kDown","accSagittalDoubleFlat17kUp","accSagittalDoubleSharp19sDown","accSagittalDoubleFlat19sUp","accSagittalShaftUp","accSagittalShaftDown","accSagittalAcute","accSagittalGrave","accSagittal1MinaUp","accSagittal1MinaDown","accSagittal2MinasUp","accSagittal2MinasDown","accSagittal1TinaUp","accSagittal1TinaDown","accSagittal2TinasUp","accSagittal2TinasDown","accSagittal3TinasUp","accSagittal3TinasDown","accSagittal4TinasUp","accSagittal4TinasDown","accSagittal5TinasUp","accSagittal5TinasDown","accSagittal6TinasUp","accSagittal6TinasDown","accSagittal7TinasUp","accSagittal7TinasDown","accSagittal8TinasUp","accSagittal8TinasDown","accSagittal9TinasUp","accSagittal9TinasDown","accSagittalFractionalTinaUp","accSagittalFractionalTinaDown","accidentalNarrowReversedFlat","accidentalNarrowReversedFlatAndFlat","accidentalWilsonPlus","accidentalWilsonMinus","articulations","between_lines","av","aboveCode","belowCode","ao","ah","am","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","Tables","MUSIC_FONT_STACK","clef","keyOctaveGlyph","params","options","octave_shift","pieces","toUpperCase","clefProperties","stroke","int_value","customNoteHeadProps","glyphName","displaced","integer","noteValue","fret","scale","glyph","shift_y","glyphMetrics","Glyph","TABLATURE_FONT_SCALE","textWidth","getWidth","artic","spec","keySpec","notes","acc_list","push","duration","durationNumber","sanitizeDuration","durationToFraction","ticks","durationCodes","glyphTypeProperties","customGlyphTypeProperties","code_head","common","NOTATION_FONT_SCALE","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalMap","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","unicode","sharp","String","fromCharCode","flat","natural","triangle","degrees","circle","validTypes","r","m","TIME4_4","num_beats","beat_value","stem","stem_offset","flag","dot_shiftY","line_above","line_below","position","beam_count","stem_beam_extension","code_flag_upstem","code_flag_downstem","OutlineCode","ModifierPosition","GlyphCacheEntry","fontStack","category","point","loadMetrics","bbox","getOutlineBoundingBox","outline","x_shift","y_shift","lookupFontMetric","GlyphOutline","originX","originY","nextX","nextY","parts","MOVE","LINE","QUADRATIC","BEZIER","topGlyphs","botGlyphs","originShift","setOptions","reset","lookupGlyph","x_min","x_max","ha","cached_outline","ctx","x_pos","y_pos","cache","lookup","customScale","renderOutline","go","beginPath","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","fill","bboxComp","penX","penY","getCode","setPoint","setStave","stave","setXShift","setYShift","checkMetrics","metricsScale","setOriginX","xShift","setOriginY","yShift","setOrigin","render","xPos","yPos","checkStave","renderToStave","getYForGlyphs","Map","entries","CURRENT_CACHE_KEY","entry","musicFontStack","Modifier","text_line","Position","LEFT","spacingFromNextModifier","PositionString","center","CENTER","above","ABOVE","below","BELOW","left","right","RIGHT","setWidth","getNote","note","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifierContext","checkModifierContext","setModifierContext","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","getXShift","alignSubNotesWithNote","subNotes","tickContext","getTickContext","getStave","subNoteXOffset","modLeftPx","modRightPx","forEach","subNote","subTickContext","setXOffset","RenderContext","setRawFont","Tickable","_preFormatted","_postFormatted","intrinsicTicks","tickMultiplier","modifiers","tupletStack","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","iterations","space","used","mean","deviation","getTicks","shouldIgnoreTicks","setIgnoreTicks","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","centerXShift","setCenterAlignment","getVoice","voice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","indexOf","splice","getNoteCount","getNotesOccupied","applyTickMultiplier","pop","setTuplet","addToModifierContext","mc","addMember","addModifier","mod","getModifiers","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","isCategory","cls","checkAncestors","constructorFcn","categoryToMatch","getPrototypeOf","isNote","Note","noteStruct","parsedNoteStruct","parseNoteStruct","JSON","stringify","keyProps","noteType","customTypes","duration_override","getGlyphProps","customGlyphs","playNote","leftDisplacedHeadPx","rightDisplacedHeadPx","ys","render_options","annotation_spacing","glyph_font_scale","stroke_px","xStart","xPre1","xAbs","xPost1","notePx","xPost2","xEnd","xFreedomRight","xWidth","fillText","round","color","yy","arc","closePath","drawDot","spaceDeviation","durationString","exec","dots","durationProps","parseDuration","durationToTicks","currentTicks","getPlayNote","setPlayNote","isRest","addStroke","setYs","getYForLine","getLeftDisplacedHeadPx","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","getLineNumber","isTopNote","getLineForRest","getGlyph","getGlyphWidth","getYs","getYForTopText","getDuration","isDotted","getModifiersByType","hasStem","getNoteType","getBeam","beam","checkBeam","hasBeam","setBeam","modifier","getMembers","getModifierStartXY","state","left_shift","right_shift","glyphWidth","glyphPx","getNoteStartX","currentMusicFont","getStemDirection","getStemExtents","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","getKeyProps","Stem","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","UP","DOWN","WIDTH","HEIGHT","setNoteHeadXBounds","setDirection","direction","setExtension","ext","getExtension","setYBounds","getHeight","y_offset","getExtents","isStemUp","stemHeight","innerMostNoteheadY","min","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stem_x","stem_y","y_base_offset","DEBUG","L","stemletYOffset","NoteHead","custom_glyph","stem_up_x_offset","stem_down_x_offset","note_type","glyph_code","custom_glyph_code","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","musicFont","fontShift","displacedFontShift","spacing","getSpacingBetweenLines","half_spacing","min_y","getYForNote","head_x","categorySuffix","staveSpace","durationToNumber","breve_lines","drawSlashNoteHead","renderGlyph","StemmableNote","getStem","checkStem","setStem","buildStem","buildFlag","hasFlag","flagCode","getBaseCustomNoteHeadGlyph","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","setStemDirection","offsets","offsetYBaseStemUp","offsetYTopStemUp","offsetYBaseStemDown","offsetYTopStemDown","getStemX","getCenterGlyphX","stem_extension_override","setStemLength","textLine","extents","getYForBottomText","drawStem","stemOptions","isStaveNote","StaveNote","shiftRestVertical","dir","delta","isrest","maxLine","minLine","setKeyLine","getKeyLine","_c","ledgerLineStyle","use_default_head_x","_noteHeads","LEDGER_LINE_OFFSET","calculateKeyProps","auto_stem","autoStem","STEM_UP","STEM_DOWN","minNoteheadPadding","formatByY","notesList","props","minL","stemDirection","stemMax","stemMin","maxL","voice_shift","getVoiceShiftWidth","is_displaced","voices","noteU","noteM","noteL","voiceXShift","stemDelta","lineSpacing","centerRest","hasStave","topNote","bottomNote","topKeys","bottomKeys","HALF_NOTEHEAD_HEIGHT","topNoteBottomY","bottomNoteTopY","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","head","calcNoteDisplacements","lastLine","lineDiff","start","end","noteProps","notehead","calculateOptimalStemDirection","keyProperties","sort","minY","maxY","halfLineSpacing","frac","resultLine","thisLine","isChord","getNoteHeadBounds","setNoteDisplaced","getRightShift","restLine","forceFlagRight","isInnerNoteIndex","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","flagStyle","getFlagStyle","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","yTop","Infinity","yBottom","highestLine","getNumLines","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","noteHeads","note_heads","drawLedgerLines","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","drawModifiers","openGroup","noteheadStyle","closeGroup","hasNoBeam","drawFlag","noteStemHeight","flagX","extension","flagY","pointerBBox","drawNoteHeads","super_stem_extension","mid_line_distance","lines_over_octave_from_mid_line","spacing_between_lines","xBegin","shouldRenderStem","stemX","isGraceNote","GraceNote","SCALE","slash","slur","ret","staveNoteScale","getStaveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beam_slope","slope","scaleX","beam_angle","atan","iPointOnBeam","cos","sin","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","getBeamYToDraw","Dot","radius","all","dot","setDotShiftY","dot_list","max_shift_map","note_id","dot_shift","x_width","last_line","last_note","prev_dotted_space","half_shiftY","lineSpace","isTabNote","TabNote","draw_stem","greatestString","positions","reduce","leastString","ghost","draw_dots","draw_stem_through_stave","updateWidth","setGhost","tabToGlyph","measureText","getStemY","getPositions","stemDownLine","stemStartLine","flag_x","flag_y","flag_code","drawStemThrough","stemThrough","stemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","strings","containsLastString","containsFirstString","line_ys","string","isTopBound","isBottomBound","getPartialStemLines","num_lines","strings_used","stem_through","group","getUnusedStringGroups","bounds","drawPositions","tab_x","clearRect","render_stem","TextFormatter","textWidthCache","formatterInfo","serifs","monospaced","italic","bold","superscriptOffset","subscriptOffset","maxSizeGlyph","cacheKey","updateParams","registeredFonts","requestedFont","candidates","requestedFamilies","requestedFamily","startsWith","formatter","values","isBold","isItalic","perfectMatch","find","partialMatch","fontSizeInPt","overwrite","updateCacheKey","BOLD","getGlyphMetrics","character","maxHeight","getWidthForCharacterInEm","advanceWidth","getWidthForTextInEm","cachedWidths","getWidthForTextInPx","AnnotationHorizontalJustify","AnnotationVerticalJustify","Annotation","horizontalJustification","verticalJustification","TOP","annotations","annotation","textFormatter","create","verticalSpaceNeeded","lines","VerticalJustify","noteLine","top_text_line","BOTTOM","curBottom","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","classString","text_width","text_height","stem_ext","has_stem","yt","getTopLineTopY","HorizontalJustify","centerStem","CENTER_STEM","top","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveOrGraceNote","Articulation","font_scale","getIncrement","articulation","increment","curTop","maxWidth","articWidth","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","articulationCodes","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","padding","stemTipY","stemBaseY","getTopY","INITIAL_OFFSET","getBottomY","offsetDirection","articLine","snappedLine","snapLineToStaff","Bend","release","phrase","tap","line_width","line_style","bend_width","release_width","bends","last_width","stringPos","setTap","getText","getTextHeight","totalWidth","additional_width","draw_width","lowestY","bend_height","annotation_y","renderBend","cp_x","cp_y","renderRelease","renderArrowHead","yBase","renderText","render_x","last_bend","last_bend_draw_width","last_drawn_width","ChordSymbol","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","SymbolTypes","SymbolModifiers","VoiceMode","symbolBlocks","horizontal","vertical","useKerning","reportWidth","superSubRatio","global","NO_TEXT_FORMAT","val","noFormat","glyphCode","engravingFontResolution","spacingBetweenBlocks","metric","getMetricForGlyph","yOffset","leftSideBearing","kerningOffset","chordSymbol","lowerKerningText","upperKerningText","symbolModifier","SUPERSCRIPT","SUBSCRIPT","symbols","nonSuperWidth","reportedWidths","symbol","fontAdj","scaleSize","glyphAdj","lineSpaces","vAlign","j","sup","isSuperscript","sub","isSubscript","superSubScale","adj","symbolType","GLYPH","superSubFontSize","getWidthForGlyph","getYShiftForGlyph","getXShiftForGlyph","TEXT","getYOffsetForText","over","prev","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","getReportWidth","setReportWidth","barIndex","findIndex","xoff","yoff","symIndex","accum","getKerningAdjustment","currSymbol","prevSymbol","adjustment","preKernUpper","preKernLower","some","xx","kerningOffsetPixels","getSymbolBlock","symbolBlock","NONE","glyphArgs","glyphPoints","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","getHorizontal","yMax","y_max","stem_base","isSuper","isSub","curY","smallerFontSize","diminished","dim","halfDiminished","augmented","majorSeventh","minor","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","symbolTypes","symbolModifiers","FretHandFinger","finger","x_offset","nums","nums_list","prev_note","shiftLeft","shiftRight","pos","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","lastNote","num_shift","numWidth","fingerings","fingeringString","number","Fingering","fingering","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","dot_x","dot_y","Voice","time","voiceTime","resolutionMultiplier","mode","STRICT","ticksUsed","largestTickWidth","tickables","softmaxFactor","match","totalTicks","smallestTickCount","Mode","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getTickables","getMode","setMode","getResolutionMultiplier","getActualResolution","tickable","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","reCalculateExpTicksUsed","expTicksUsed","softmax","tickValue","v","exp","addTickable","addTickables","NoteSubGroup","Formatter","groups","joinVoices","format","getMinTotalWidth","TickContext","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","totalLeftPx","totalRightPx","tContexts","tContext","contexts","getTickID","getXBase","setXBase","getXOffset","setPadding","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","filter","getCurrentTick","setCurrentTick","tick","Ornament","delayed","accidentalLowerPadding","accidentalUpperPadding","ornament","ornamentCodes","adjustForStemDirection","reportedWidth","stemUpYOffset","ornamentAlignWithNoteHead","ornamentNoteTransition","ornamentRelease","ornamentAttack","ornamentArticulation","jazzOrnaments","setDelayed","setUpperAccidental","accid","accidentalUpper","accidentalCodes","setLowerAccidental","accidentalLower","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","nextContext","getNextContext","Parenthesis","parentheses","x_widthL","x_widthR","parenthesis","isHTMLCanvas","element","HTMLCanvasElement","toDataURL","CanvasContext","textHeight","context2D","canvas","CANVAS_BROWSER_SIZE_LIMIT","limit","child","setBackgroundFillStyle","blur","getTransform","setLineCap","capType","lineCap","setLineDash","dash","resize","devicePixelRatio","sanitizeCanvasDims","rect","fillRect","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","ATTRIBUTES_TO_IGNORE","path","SVG_NS","TWO_PI","SVGContext","backgroundFillStyle","fontCSSString","svg","appendChild","parent","pen","defaultFontAttributes","attributes","shadow_attributes","state_stack","svgElementType","createElementNS","lineDash","applyAttributes","visibleWidth","visibleHeight","setViewBox","viewBox_or_minX","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","removeChild","rectangle","x0","y0","large","sweep","getShadowStyle","sa","measureTextCache","txt","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","StaveModifierPosition","measureImpl","getBBox","Renderer","arg0","arg1","backend","maybeElement","Backends","CANVAS","SVG","HTMLDivElement","isHTMLDiv","elementId","background","renderer","lastContext","buildContext","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","LineEndType","StringNumber","string_number","dashed","leg","shift_left","num_shiftR","num_width","setLineEndType","setStringNumber","setLastNote","setDashed","line_space","len","pattern","drawDashedLine","Stroke","all_voices","strokes","strokeList","strokeShift","addEndNote","note_end","botY","arrow","arrow_shift_x","arrow_y","text_shift_x","text_y","Type","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","Vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vibratos","vibrato","setHarsh","vx","vy","renderVibrato","opts","num_waves","ModifierContext","members","PREFORMAT","Accidental","GraceNoteGroup","POSTFORMAT","member","getLeftShift","getState","formatted","StaveModifier","placeGlyphOnLine","customShift","getPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","Clef","types","BEGIN","setType","tab","attachment","numLines","shiftY","KeySignature","cancelKeySpec","alterKeySpec","accList","setKeySig","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","accidentalSpacing","xPosition","cancelKey","convertToCancelAccList","cancel_accList","keySignature","different_types","naturals","cancelled","concat","addToStave","convertAccLines","customLines","offset","alterKey","convertToAlterAccList","firstAccidentalType","cancelAccList","END","getEndClef","getClef","isBarline","Barline","BarlineType","Justification","VoltaType","thickness","TYPE","widths","SINGLE","DOUBLE","REPEAT_BEGIN","REPEAT_END","REPEAT_BOTH","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","typeString","single","double","repeatBegin","repeatEnd","repeatBoth","none","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","staveCtx","getBottomLineBottomY","begin","dot_radius","Repetition","symbol_type","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSignoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","draw_coda","text_x","symbol_x","modifierWidth","getVerticalBarWidth","StaveSection","section","shift_x","setStaveSection","textMeasurements","StaveTempo","tempo","setTempo","bpm","stem_height","TextNote","superscript","subscript","smooth","justification","struct","GLYPHS","segno","mordent_upper","mordent_lower","p","z","coda","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","StaveText","setStaveText","setText","getBottomLineY","Volta","volta","top_y","vert_height","BEGIN_END","TimeSignatureGlyph","timeSignature","topDigits","botDigits","topWidth","timeSigType","topGlyph","botWidth","botGlyph","topStartX","botStartX","start_x","topLine","bottomLine","TimeSignature","timeSpec","customPadding","validate_args","fontLineShift","parseTimeSpec","numbers","test","assertIsValidTimeSig","makeTimeSignatureGlyph","getInfo","setTimeSig","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","Stave","end_x","measure","endClef","vertical_bar_width","fill_style","left_bar","right_bar","spacing_between_lines_px","space_above_staff_ln","space_below_staff_ln","top_text_position","bottom_text_position","line_config","defaultLedgerLineStyle","resetLines","addEndModifier","defaultPadding","rightPadding","setDefaultLedgerLineStyle","visible","setNoteStartX","begBarline","getNoteEndX","getTieStartX","getTieEndX","setNumLines","setMeasure","getModifierXShift","setRepetitionType","setVoltaType","number_t","setSection","staveSection","headroom","getLineForY","setBegBarType","setEndBarType","setClef","clefSpec","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","drawBoldDoubleLine","topX","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","texts","SINGLE_RIGHT","content","THIN_DOUBLE","attachment_height","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","sumArray","arr","createContexts","makeContext","addToContext","tickToContextMap","tickList","integerTicks","newContext","array","list","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","noteIndex","formatterOptions","globalSoftmax","maxIterations","justifyWidth","totalCost","totalShift","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","modifierContexts","contextGaps","total","gaps","lossHistory","paddingBetween","accumulator","stavePadding","gap","toFixed","auto_beam","align_rests","beams","Beam","applyAndGetBeams","formatToStave","tabstave","tabnotes","autobeam","notevoice","tabvoice","alignAllNotes","alignTuplets","currTickable","prevTickable","alignRests","AlignRestsToNotes","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","contextArray","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","calcMinDistance","paddingMax","maxX","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","tune","alpha","current","cost","postFormatContexts","optionsParam","Tuplet","numerator_glyphs","denom_glyphs","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","ratioed","setTupletLocation","location","LOCATION_TOP","resolveGlyphs","attach","LOCATION_BOTTOM","NESTING_OFFSET","detach","setBracketed","setRatioed","getNotes","getBeatsOccupied","setBeatsOccupied","beats","setNotesOccupied","unshift","getNestedTupletCount","first_note","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nested_tuplet_y_offset","topModifierOffset","modLines","modY","noteHeadOffset","stemOffset","lineCheck","nn","bottom_y","addGlyphWidth","notation_start_x","colon_x","colon_radius","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_BOTH","stem_weight","memo","break_on_indices","beam_width","max_slope","min_slope","slope_iterations","slope_cost","show_stemlets","stemlet_extension","partial_beam_length","flat_beams","min_flat_beam_offset","time_sig","beatTotal","beatValue","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","vf_notes","unbeamable","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","prevNote","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","secondary_breaks","secondary_break_ticks","flat_beam_offset","beamCount","breakSecondaryAt","indices","getSlopeY","first_x_px","first_y_px","calculateSlope","firstNote","initialSlope","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","totalBeamWidth","lookupBeamDirection","prev_tick","next_tick","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","getBeamLines","tick_of_duration","beam_started","beam_lines","current_beam","previous_should_break","tick_tally","should_break","next_note","beam_alone","beam_direction","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","StaveTie","setNotes","cp1","cp2","first_x_shift","last_x_shift","tie_spacing","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","last_y_px","top_cp_y","bottom_cp_y","center_x","TabTie","grace_notes","show_slur","slur_y_shift","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","beamNotes","getGraceNotes","graceNote","TieClass","Music","NUM_TONES","canonical_notes","roots","root_values","root_indices","diatonic_intervals","diatonic_accidentals","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","noteValues","root_index","cn","cb","cbb","dn","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","sum","getRelativeNoteName","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySigParts","scaleName","keySigString","noteLocation","scaleMap","rootName","noteName","parenLeftPadding","parenRightPadding","cautionary","noteheadAccidentalPadding","leftShift","additionalPadding","accLine","lineList","previousLine","accShift","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","accCount","lastAccOnLine","clearance","clearanceRequired","collision","tickPositions","tickNoteMap","tickPosition","notesAtPosition","music","scaleMapKey","tickPos","modifiedPitches","processNote","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","fontScale","parenLeft","parenRight","parenWidth","setAsCautionary","accX","accY","BarNote","barline","ClefNote","clef_obj","abs_x","Crescendo","extend_left","extend_right","decrescendo","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","renderHairpin","CurvePosition","Curve","from","to","NEAR_HEAD","position_end","invert","cps","nearHead","nearTop","NEAR_TOP","renderCurve","first_x","first_y","last_x","last_y","cp0x","cp0y","cp_spacing","end_metric","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","bind","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","standardAccidentals","notePiece","GhostNote","buildAndAttach","setId","commaSeparatedRegex","setClass","defaults","easyScoreHook","throwOnError","parser","ERROR_MSG","parameter","GlyphNote","ignoreTicks","setGlyph","KeySigNote","semibreve_rest","MultiMeasureRest","number_of_measures","xs","hasPaddingLeft","hasPaddingRight","hasLineThickness","hasSymbolSpacing","padding_left","padding_right","line_thickness","symbol_spacing","use_symbols","show_number","number_line","number_glyph_point","serif_thickness","semibreve_rest_glyph_scale","getXs","drawLine","spacingBetweenLines","lineThicknessHalf","serifThickness","bot","leftIndented","rightIndented","lineTop","lineBottom","drawSymbols","n4","n2","n1","get_semibreve_rest","rest_scale","rest_width","yMiddle","timeSig","drawPedalGlyph","glyph_data","PedalMarking","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","pedal","MIXED","setCustomText","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","pedal_depress","pedal_release","mixed","CODES","RepeatNote","drawArrowHead","StaveLine","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","TextJustification","applyLineStyle","applyFontStyle","drawArrowLine","pt1","pt2","both_arrows","distance","ratio","end_y","start_y","line_angle","angle1","angle2","top_x","bottom_x","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","vertical_position","System","Factory","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","options_details","allVoices","debugNoteMetricsYs","part","lastY","plotDebugging","plotMetrics","TabStave","addTabGlyph","TextBracket","TextBracketPosition","stop","show_bracket","underline_superscript","Positions","PositionsString","main_measure","main_width","main_height","super_y","super_measure","super_width","super_height","line_y","TextDynamics","sequence","glyph_font_size","total_width","letter","letter_x","current_letter","TimeSigNote","timeSigInfo","VibratoBracket","bracket_data","stop_x","renderQ","systems","staves","initRenderer","getVoices","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","kerning","stringNumber","numMeasures","multiMeasureRest","secondaryBeamBreaks","curve","tie","vibratoBracket","textBracket","system","StaveHairpin","hairpin","left_shift_px","right_shift_px","right_shift_ticks","left_shift_ticks","ppt","pixelsPerTick","l_shift_px","r_shift_px","hairpin_options","setRenderOptions","dis","staff_height","l_shift","r_shift","CRESC","DECRESC","TabSlide","first_fret","last_fret","SLIDE_UP","SLIDE_DOWN","slide_y","Tuning","tuningString","tuningValues","setTuning","names","standard","dagdad","dropd","standardBanjo","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","integerToNote","Flow","BUILD","VERSION","DATE","fontNames","fontModuleOrPath","hasKeySignature","getKeySignatures","GraceTabNote","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","Tremolo","y_spacing_scale","extra_stroke_scale","y_spacing","cmp","eq","newArr","last","canvasSelector","start_time","Date","getTime","CustomFont","noteheadSquareWhite","noteheadSquareBlack","accidentalBuyukMucennebFlat","accidentalBakiyeFlat","accidentalKucukMucennebSharp","accidentalKoron","accidentalSori","vexAccidentalMicrotonal2","vexAccidentalMicrotonal3","vexAccidentalMicrotonal4","vexNoteHeadRectBlack","vexNoteHeadRectWhite","CustomMetrics","smufl","PetalumaFont","bracketTop","y_min","bracketBottom","barlineTick","breathMarkTick","gClef","cClef","fClef","unpitchedPercussionClef1","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","timeSigPlus","timeSigPlusSmall","timeSigMinus","timeSigParensRight","timeSigParensRightSmall","timeSigParensLeft","timeSigParensLeftSmall","noteheadDoubleWhole","noteheadWhole","noteheadHalf","noteheadBlack","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleX","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","noteheadParenthesis","noteheadParenthesisRight","noteheadParenthesisLeft","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalFlat","accidentalNatural","accidentalSharp","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalKomaSharp","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articStaccatissimoAbove","articStaccatissimoBelow","articMarcatoAbove","articMarcatoBelow","fermataAbove","fermataBelow","breathMarkComma","breathMarkUpbow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restHalf","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentShortTrill","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","brassScoop","brassDoitMedium","brassFallLipShort","brassLiftMedium","brassFallRoughMedium","brassBend","brassMuteClosed","brassMuteOpen","brassFlip","brassJazzTurn","brassSmear","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedSnapPizzicatoBelow","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","wiggleArpeggiatoUp","arpeggiatoUp","arpeggiatoDown","repeat1Bar","repeat2Bars","repeat4Bars","repeatBarSlash","csymDiminished","csymHalfDiminished","csymAugmented","csymMajorSeventh","csymMinor","csymParensLeftTall","csymParensRightTall","csymBracketLeftTall","csymBracketRightTall","csymParensLeftVeryTall","csymParensRightVeryTall","csymDiagonalArrangementSlash","generatedOn","PetalumaMetrics","endPaddingMax","endPaddingMin","unalignedNotePadding","leftPadding","default","small","smuflCode","shiftX","lineCount","gracenote","pedalMarking","up","down","digits","shiftLine","tupletPoint","tremolo","offsetYStemUp","offsetYStemDown","offsetXStemUp","offsetXStemDown","grace","staveRepetition","offsetY","offsetSymbol","heightAdjustmentForFlag","tabStem","staveTempo","arrowheadBlackDown","straight","wiggly","arrowheadBlackUp","minPadding","noteheadBlackStemUp","noteheadHalfStemUp","noteheadWholeStemUp","custom","noteheadCircleXStemUp","noteheadCircleXStemDown","noteheadDiamondHalfStemUp","noteheadDiamondBlackStemUp","noteheadDiamondWholeStemUp","noteheadXBlackStemUp","noteheadXHalfStemUp","noteheadXHalfStemDown","noteheadXWholeStemUp","noteheadXWholeStemDown","noteheadSquareWhiteStemDown","noteheadSquareWhiteStemUp","noteheadSquareBlackStemUp","noteheadTriangleUpWholeStemUp","PetalumaScriptFont","$","I","J","K","N","O","Q","U","V","Y","Z","_","l","RobotoSlabFont","setMusicFont","fontData","registerInfo","description","loadTextFonts"],"sourceRoot":""}