{"version":3,"file":"vexflow-gonville.js","mappings":"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","sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/webpack/runtime/define property getters","webpack://Vex/webpack/runtime/global","webpack://Vex/webpack/runtime/hasOwnProperty shorthand","webpack://Vex/webpack/runtime/make namespace object","webpack://Vex/./src/typeguard.ts","webpack://Vex/./src/util.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/boundingboxcomputation.ts","webpack://Vex/./src/font.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/glyph.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/textformatter.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/rendercontext.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/parenthesis.ts","webpack://Vex/./src/web.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/timesigglyph.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/flow.ts","webpack://Vex/./src/version.ts","webpack://Vex/./src/fonts/custom_glyphs.ts","webpack://Vex/./src/fonts/custom_metrics.ts","webpack://Vex/./src/fonts/gonville_glyphs.ts","webpack://Vex/./src/fonts/gonville_metrics.ts","webpack://Vex/./src/fonts/petalumascript_glyphs.ts","webpack://Vex/./src/fonts/robotoslab_glyphs.ts","webpack://Vex/./src/fonts/sans_bold_text_metrics.ts","webpack://Vex/./src/fonts/sans_text_metrics.ts","webpack://Vex/./src/fonts/serif_text_metrics.ts","webpack://Vex/./src/vex.ts","webpack://Vex/./src/fonts/load_gonville.ts","webpack://Vex/./src/fonts/load_custom.ts","webpack://Vex/./entry/vexflow-gonville.ts","webpack://Vex/./src/fonts/textfonts.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})((typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Use instead of `instanceof` as a more flexible type guard.\n * @param obj check if this object's CATEGORY matches the provided category.\n * @param category a string representing a category of VexFlow objects.\n * @param checkAncestors defaults to `true`, so we walk up the prototype chain to look for a matching `CATEGORY`.\n *        If `false`, we do not check the superclass or other ancestors.\n * @returns true if `obj` has a static `CATEGORY` property that matches `category`.\n */\nexport function isCategory(obj, category, checkAncestors = true) {\n    // obj is undefined, a number, a primitive string, or null.\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    // `obj.constructor` is a reference to the constructor function that created the `obj` instance.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\n    let constructorFcn = obj.constructor;\n    // Check if the object's static .CATEGORY matches the provided category.\n    if (checkAncestors) {\n        // Walk up the prototype chain to look for a matching obj.constructor.CATEGORY.\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        // Do not walk up the prototype chain. Just check this particular object's static .CATEGORY string.\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n    }\n}\nexport const isAccidental = (obj) => isCategory(obj, Category.Accidental);\nexport const isAnnotation = (obj) => isCategory(obj, Category.Annotation);\nexport const isBarline = (obj) => isCategory(obj, Category.Barline);\nexport const isDot = (obj) => isCategory(obj, Category.Dot);\nexport const isGraceNote = (obj) => isCategory(obj, Category.GraceNote);\nexport const isGraceNoteGroup = (obj) => isCategory(obj, Category.GraceNoteGroup);\nexport const isNote = (obj) => isCategory(obj, Category.Note);\nexport const isRenderContext = (obj) => isCategory(obj, Category.RenderContext);\nexport const isStaveNote = (obj) => isCategory(obj, Category.StaveNote);\nexport const isStemmableNote = (obj) => isCategory(obj, Category.StemmableNote);\nexport const isTabNote = (obj) => isCategory(obj, Category.TabNote);\n// 'const' enums are erased by the TypeScript compiler. The string values are inlined at all the use sites.\n// See: https://www.typescriptlang.org/docs/handbook/enums.html#const-enums\nexport var Category;\n(function (Category) {\n    Category[\"Accidental\"] = \"Accidental\";\n    Category[\"Annotation\"] = \"Annotation\";\n    Category[\"Articulation\"] = \"Articulation\";\n    Category[\"Barline\"] = \"Barline\";\n    Category[\"BarNote\"] = \"BarNote\";\n    Category[\"Beam\"] = \"Beam\";\n    Category[\"Bend\"] = \"Bend\";\n    Category[\"ChordSymbol\"] = \"ChordSymbol\";\n    Category[\"Clef\"] = \"Clef\";\n    Category[\"ClefNote\"] = \"ClefNote\";\n    Category[\"Crescendo\"] = \"Crescendo\";\n    Category[\"Curve\"] = \"Curve\";\n    Category[\"Dot\"] = \"Dot\";\n    Category[\"Element\"] = \"Element\";\n    Category[\"Fraction\"] = \"Fraction\";\n    Category[\"FretHandFinger\"] = \"FretHandFinger\";\n    Category[\"GhostNote\"] = \"GhostNote\";\n    Category[\"Glyph\"] = \"Glyph\";\n    Category[\"GlyphNote\"] = \"GlyphNote\";\n    Category[\"GraceNote\"] = \"GraceNote\";\n    Category[\"GraceNoteGroup\"] = \"GraceNoteGroup\";\n    Category[\"GraceTabNote\"] = \"GraceTabNote\";\n    Category[\"KeySignature\"] = \"KeySignature\";\n    Category[\"KeySigNote\"] = \"KeySigNote\";\n    Category[\"Modifier\"] = \"Modifier\";\n    Category[\"MultiMeasureRest\"] = \"MultiMeasureRest\";\n    Category[\"Note\"] = \"Note\";\n    Category[\"NoteHead\"] = \"NoteHead\";\n    Category[\"NoteSubGroup\"] = \"NoteSubGroup\";\n    Category[\"Ornament\"] = \"Ornament\";\n    Category[\"Parenthesis\"] = \"Parenthesis\";\n    Category[\"PedalMarking\"] = \"PedalMarking\";\n    Category[\"RenderContext\"] = \"RenderContext\";\n    Category[\"RepeatNote\"] = \"RepeatNote\";\n    Category[\"Repetition\"] = \"Repetition\";\n    Category[\"Stave\"] = \"Stave\";\n    Category[\"StaveConnector\"] = \"StaveConnector\";\n    Category[\"StaveHairpin\"] = \"StaveHairpin\";\n    Category[\"StaveLine\"] = \"StaveLine\";\n    Category[\"StaveModifier\"] = \"StaveModifier\";\n    Category[\"StaveNote\"] = \"StaveNote\";\n    Category[\"StaveSection\"] = \"StaveSection\";\n    Category[\"StaveTempo\"] = \"StaveTempo\";\n    Category[\"StaveText\"] = \"StaveText\";\n    Category[\"StaveTie\"] = \"StaveTie\";\n    Category[\"Stem\"] = \"Stem\";\n    Category[\"StemmableNote\"] = \"StemmableNote\";\n    Category[\"StringNumber\"] = \"StringNumber\";\n    Category[\"Stroke\"] = \"Stroke\";\n    Category[\"System\"] = \"System\";\n    Category[\"TabNote\"] = \"TabNote\";\n    Category[\"TabSlide\"] = \"TabSlide\";\n    Category[\"TabStave\"] = \"TabStave\";\n    Category[\"TabTie\"] = \"TabTie\";\n    Category[\"TextBracket\"] = \"TextBracket\";\n    Category[\"TextDynamics\"] = \"TextDynamics\";\n    Category[\"TextNote\"] = \"TextNote\";\n    Category[\"Tickable\"] = \"Tickable\";\n    Category[\"TimeSignature\"] = \"TimeSignature\";\n    Category[\"TimeSigNote\"] = \"TimeSigNote\";\n    Category[\"Tremolo\"] = \"Tremolo\";\n    Category[\"Tuplet\"] = \"Tuplet\";\n    Category[\"Vibrato\"] = \"Vibrato\";\n    Category[\"VibratoBracket\"] = \"VibratoBracket\";\n    Category[\"Voice\"] = \"Voice\";\n    Category[\"Volta\"] = \"Volta\";\n})(Category || (Category = {}));\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// Note: Keep this module free of imports to reduce the chance of circular dependencies.\n/** `RuntimeError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\n/** VexFlow can be used outside of the browser (e.g., Node) where `window` may not be defined. */\n// eslint-disable-next-line\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\n/**\n * Check that `x` is of type `T` and not `undefined`.\n * If `x` is `undefined`, throw a RuntimeError with the optionally provided error code and message.\n */\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\n/** Default log function sends all arguments to console. */\n// eslint-disable-next-line\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\n/** Dump warning to console. */\n// eslint-disable-next-line\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a, b) {\n    let mid_line = b + (a - b) / 2;\n    if (mid_line % 2 > 0) {\n        mid_line = roundN(mid_line * 10, 5) / 10;\n    }\n    return mid_line;\n}\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text) {\n    return `vf-${text}`;\n}\n/**\n * Convert an arbitrary angle in radians to the equivalent one in the range [0, pi).\n */\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// Author: Joshua Koo / @zz85\n// Author: @incompleteopus\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/** Fraction represents a rational number. */\nexport class Fraction {\n    static get CATEGORY() {\n        return Category.Fraction;\n    }\n    /**\n     * GCD: Greatest common divisor using the Euclidean algorithm.\n     * Note: GCD(0, 0) => 0 and GCD(0, n) => n.\n     */\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    /** LCM: Lowest common multiple. */\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    /** Lowest common multiple for more than two numbers. */\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            // args.shift() removes the first number.\n            // LCM the first number with the rest of the numbers.\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    /** Set the numerator and denominator. */\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    /** Set the numerator and denominator. */\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    /** Return the value of the fraction. */\n    value() {\n        return this.numerator / this.denominator;\n    }\n    /** Simplify numerator and denominator using GCD. */\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    /** Add value of another fraction. */\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Substract value of another fraction. */\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Multiply by value of another fraction. */\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    /** Divide by value of another Fraction. */\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    /** Simplify both sides and check if they are equal. */\n    equals(compare) {\n        const a = Fraction.__staticFractionA.copy(compare).simplify();\n        const b = Fraction.__staticFractionB.copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    /** Greater than operator. */\n    greaterThan(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    /** Greater than or equals operator. */\n    greaterThanEquals(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    /** Less than operator. */\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    /** Less than or equals operator. */\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    /** Return a new copy with current values. */\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    /** Copy value of another fraction. */\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other, 1);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    /** Return the integer component (eg. 5/2 => 2). */\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    /** Return the remainder component (eg. 5/2 => 1). */\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    /** Calculate absolute value. */\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    /** Return a raw string representation (eg. \"5/2\"). */\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    /** Return a simplified string respresentation. */\n    toSimplifiedString() {\n        return Fraction.__staticFractionTmp.copy(this).simplify().toString();\n    }\n    /** Return string representation in mixed form. */\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = Fraction.__staticFractionTmp.copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    /** Parse a fraction string. */\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\n// Cached objects for comparisons.\nFraction.__staticFractionA = new Fraction();\nFraction.__staticFractionB = new Fraction();\nFraction.__staticFractionTmp = new Fraction();\n/** Helper function to extract the numerator and denominator from another fraction. */\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        // Both params are numbers, so we return them as [numerator, denominator].\n        return [n, d];\n    }\n    else {\n        // First param is a Fraction object. We ignore the second param.\n        return [n.numerator, n.denominator];\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nexport class BoundingBox {\n    /**\n     * Create a new copy.\n     */\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    /** Get x position. */\n    getX() {\n        return this.x;\n    }\n    /** Get y position. */\n    getY() {\n        return this.y;\n    }\n    /** Get width. */\n    getW() {\n        return this.w;\n    }\n    /** Get height. */\n    getH() {\n        return this.h;\n    }\n    /** Set x position. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Set y position. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Set width. */\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    /** Set height. */\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    /** Move to position. */\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    /** Clone. */\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    /**\n     * Merge my box with given box. Creates a bigger bounding box unless\n     * the given box is contained in this one.\n     */\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const new_x = this.x < that.x ? this.x : that.x;\n        const new_y = this.y < that.y ? this.y : that.y;\n        const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n        const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n        this.x = new_x;\n        this.y = new_y;\n        this.w = new_w;\n        this.h = new_h;\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n/**\n * BoundingBoxComputation computes metrics for a bounding box by continuously\n * taking canvas path commands.\n *\n * Warning: This class is merely a crutch to get bounding box information without\n * explicit metadata. This is likely to get deprecated following SMuFL support.\n *\n * based on: https://github.com/canvg/canvg/blob/master/src/BoundingBox.ts (MIT License)\n */\nexport class BoundingBoxComputation {\n    constructor() {\n        this.x1 = Number.NaN;\n        this.y1 = Number.NaN;\n        this.x2 = Number.NaN;\n        this.y2 = Number.NaN;\n    }\n    /** Get calculated X1. */\n    getX1() {\n        return this.x1;\n    }\n    /** Get calculated Y1. */\n    getY1() {\n        return this.y1;\n    }\n    /** Get calculated width. */\n    width() {\n        return this.x2 - this.x1;\n    }\n    /** Get calculated height. */\n    height() {\n        return this.y2 - this.y1;\n    }\n    /** Add point to BoundingBox. */\n    addPoint(x, y) {\n        if (isNaN(this.x1) || x < this.x1)\n            this.x1 = x;\n        if (isNaN(this.x2) || x > this.x2)\n            this.x2 = x;\n        if (isNaN(this.y1) || y < this.y1)\n            this.y1 = y;\n        if (isNaN(this.y2) || y > this.y2)\n            this.y2 = y;\n    }\n    /** Add X to BoundingBox. */\n    addX(x) {\n        this.addPoint(x, this.y1);\n    }\n    /** Add Y to BoundingBox. */\n    addY(y) {\n        this.addPoint(this.x1, y);\n    }\n    /** Add quadratic curve to BoundingBox. */\n    addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n        this.addPoint(p0x, p0y);\n        this.addPoint(p2x, p2y);\n        const p01x = p1x - p0x;\n        const p12x = p2x - p1x;\n        let denom = p01x - p12x;\n        if (denom != 0) {\n            const t = p01x / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addX(it * it * p0x + 2 * it * t * p1x + t * t * p2x);\n            }\n        }\n        const p01y = p1y - p0y;\n        const p12y = p2y - p1y;\n        denom = p01y - p12y;\n        if (denom != 0) {\n            const t = p01y / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addY(it * it * p0y + 2 * it * t * p1y + t * t * p2y);\n            }\n        }\n    }\n    /** Add bezier curve to BoundingBox. */\n    addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n        // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n        const p0 = [p0x, p0y];\n        const p1 = [p1x, p1y];\n        const p2 = [p2x, p2y];\n        const p3 = [p3x, p3y];\n        let i;\n        this.addPoint(p0[0], p0[1]);\n        this.addPoint(p3[0], p3[1]);\n        const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n            3 * Math.pow(1 - t, 2) * t * p1[i] +\n            3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n            Math.pow(t, 3) * p3[i];\n        for (i = 0; i <= 1; i++) {\n            const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            const c = 3 * p1[i] - 3 * p0[i];\n            if (a === 0) {\n                if (b === 0)\n                    continue;\n                const t = -c / b;\n                if (0 < t && t < 1) {\n                    if (i === 0)\n                        this.addX(f(t, i));\n                    if (i === 1)\n                        this.addY(f(t, i));\n                }\n                continue;\n            }\n            const b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0)\n                continue;\n            const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                if (i === 0)\n                    this.addX(f(t1, i));\n                if (i === 1)\n                    this.addY(f(t1, i));\n            }\n            const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                if (i === 0)\n                    this.addX(f(t2, i));\n                if (i === 1)\n                    this.addY(f(t2, i));\n            }\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defined } from './util';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\n// Internal <span></span> element for parsing CSS font shorthand strings.\nlet fontParser;\nconst Fonts = {};\nexport class Font {\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of pixels that is equivalent to `fontSize`\n     */\n    static convertSizeToPixelValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of points that is equivalent to `fontSize`\n     */\n    static convertSizeToPointValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param f\n     * @param size\n     * @param weight\n     * @param style\n     * @returns the `size` field will include the units (e.g., '12pt', '16px').\n     */\n    static validate(f, size, weight, style) {\n        // If f is a string but all other arguments are undefined, we assume that\n        // f is CSS font shorthand (e.g., 'italic bold 10pt Arial').\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            // f is a FontInfo object, so we extract its fields.\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            // f is a string representing the font family name or undefined.\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Font.SANS_SERIF;\n        size = size !== null && size !== void 0 ? size : Font.SIZE + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        // If size is a number, we assume the unit is `pt`.\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        // If weight is a number (e.g., 900), turn it into a string representation of that number.\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        // At this point, `family`, `size`, `weight`, and `style` are all strings.\n        return { family, size, weight, style };\n    }\n    /**\n     * @param cssFontShorthand a string formatted as CSS font shorthand (e.g., 'italic bold 15pt Arial').\n     */\n    static fromCSSString(cssFontShorthand) {\n        // Let the browser parse this string for us.\n        // First, create a span element.\n        // Then, set its style.font and extract it back out.\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    /**\n     * @returns a CSS font shorthand string of the form `italic bold 16pt Arial`.\n     */\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = ''; // no space! Omit the style section.\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = ''; // no space! Omit the weight section.\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Font.SIZE + 'pt ';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            // size is already a string.\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Font.SANS_SERIF;\n        return `${style}${weight}${size}${family}`;\n    }\n    /**\n     * @param fontSize a number representing a font size, or a string font size with units.\n     * @param scaleFactor multiply the size by this factor.\n     * @returns size * scaleFactor (e.g., 16pt * 3 = 48pt, 8px * 0.5 = 4px, 24 * 2 = 48).\n     * If the fontSize argument was a number, the return value will be a number.\n     * If the fontSize argument was a string, the return value will be a string.\n     */\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, ''); // Remove all numbers, dots, spaces.\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    /**\n     * @param weight a string (e.g., 'bold') or a number (e.g., 600 / semi-bold in the OpenType spec).\n     * @returns true if the font weight indicates bold.\n     */\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            // a string can be 'bold' or '700'\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    /**\n     * @param style\n     * @returns true if the font style indicates 'italic'.\n     */\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    /**\n     * @param fontName\n     * @param woffURL The absolute or relative URL to the woff file.\n     * @param includeWoff2 If true, we assume that a woff2 file is in\n     * the same folder as the woff file, and will append a `2` to the url.\n     */\n    // Support distributions of the typescript compiler that do not yet include the FontFace API declarations.\n    // eslint-disable-next-line\n    // @ts-ignore\n    static loadWebFont(fontName, woffURL, includeWoff2 = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const woff2URL = includeWoff2 ? `url(${woffURL}2) format('woff2'), ` : '';\n            const woff1URL = `url(${woffURL}) format('woff')`;\n            const woffURLs = woff2URL + woff1URL;\n            // eslint-disable-next-line\n            // @ts-ignore\n            const fontFace = new FontFace(fontName, woffURLs);\n            yield fontFace.load();\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.fonts.add(fontFace);\n            return fontFace;\n        });\n    }\n    /**\n     * Load the web fonts that are used by ChordSymbol. For example, `flow.html` calls:\n     *   `await Vex.Flow.Font.loadWebFonts();`\n     * Alternatively, you may load web fonts with a stylesheet link (e.g., from Google Fonts),\n     * and a @font-face { font-family: ... } rule in your CSS.\n     * If you do not load either of these fonts, ChordSymbol will fall back to Times or Arial,\n     * depending on the current music engraving font.\n     *\n     * You can customize `Font.WEB_FONT_HOST` and `Font.WEB_FONT_FILES` to load different fonts\n     * for your app.\n     */\n    static loadWebFonts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const host = Font.WEB_FONT_HOST;\n            const files = Font.WEB_FONT_FILES;\n            for (const fontName in files) {\n                const fontPath = files[fontName];\n                Font.loadWebFont(fontName, host + fontPath);\n            }\n        });\n    }\n    /**\n     * @param fontName\n     * @param data optionally set the Font object's `.data` property.\n     *   This is usually done when setting up a font for the first time.\n     * @param metrics optionally set the Font object's `.metrics` property.\n     *   This is usually done when setting up a font for the first time.\n     * @returns a Font object with the given `fontName`.\n     *   Reuse an existing Font object if a matching one is found.\n     */\n    static load(fontName, data, metrics) {\n        let font = Fonts[fontName];\n        if (!font) {\n            font = new Font(fontName);\n            Fonts[fontName] = font;\n        }\n        if (data) {\n            font.setData(data);\n        }\n        if (metrics) {\n            font.setMetrics(metrics);\n        }\n        return font;\n    }\n    /**\n     * Use `Font.load(fontName)` to get a Font object.\n     * Do not call this constructor directly.\n     */\n    constructor(fontName) {\n        this.name = fontName;\n    }\n    getName() {\n        return this.name;\n    }\n    getData() {\n        return defined(this.data, 'FontError', 'Missing font data');\n    }\n    getMetrics() {\n        return defined(this.metrics, 'FontError', 'Missing metrics');\n    }\n    setData(data) {\n        this.data = data;\n    }\n    setMetrics(metrics) {\n        this.metrics = metrics;\n    }\n    hasData() {\n        return this.data !== undefined;\n    }\n    getResolution() {\n        return this.getData().resolution;\n    }\n    getGlyphs() {\n        return this.getData().glyphs;\n    }\n    /**\n     * Use the provided key to look up a value in this font's metrics file (e.g., bravura_metrics.ts, petaluma_metrics.ts).\n     * @param key is a string separated by periods (e.g., stave.endPaddingMax, clef.lineCount.'5'.shiftY).\n     * @param defaultValue is returned if the lookup fails.\n     * @returns the retrieved value (or `defaultValue` if the lookup fails).\n     */\n    // eslint-disable-next-line\n    lookupMetric(key, defaultValue) {\n        const keyParts = key.split('.');\n        // Start with the top level font metrics object, and keep looking deeper into the object (via each part of the period-delimited key).\n        let currObj = this.getMetrics();\n        for (let i = 0; i < keyParts.length; i++) {\n            const keyPart = keyParts[i];\n            const value = currObj[keyPart];\n            if (value === undefined) {\n                // If the key lookup fails, we fall back to the defaultValue.\n                return defaultValue;\n            }\n            // The most recent lookup succeeded, so we drill deeper into the object.\n            currObj = value;\n        }\n        // After checking every part of the key (i.e., the loop completed), return the most recently retrieved value.\n        return currObj;\n    }\n    /** For debugging. */\n    toString() {\n        return '[' + this.name + ' Font]';\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// STATIC MEMBERS\n/** Default sans-serif font family. */\nFont.SANS_SERIF = 'Arial, sans-serif';\n/** Default serif font family. */\nFont.SERIF = 'Times New Roman, serif';\n/** Default font size in `pt`. */\nFont.SIZE = 10;\n// CSS Font Sizes: 36pt == 48px == 3em == 300% == 0.5in\n/** Given a length (for units: pt, px, em, %, in, mm, cm) what is the scale factor to convert it to px? */\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\n/**\n * Customize this field to specify a different CDN for delivering web fonts.\n * Alternative: https://cdn.jsdelivr.net/npm/vexflow-fonts@1.0.3/\n * Or you can use your own host.\n */\nFont.WEB_FONT_HOST = 'https://unpkg.com/vexflow-fonts@1.0.3/';\n/**\n * These font files will be loaded from the CDN specified by `Font.WEB_FONT_HOST` when\n * `await Font.loadWebFonts()` is called. Customize this field to specify a different\n * set of fonts to load. See: `Font.loadWebFonts()`.\n */\nFont.WEB_FONT_FILES = {\n    'Roboto Slab': 'robotoslab/RobotoSlab-Medium_2.001.woff',\n    PetalumaScript: 'petaluma/PetalumaScript_1.10_FS.woff',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\nimport { RuntimeError } from './util';\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    static getDefaultRegistry() {\n        return Registry.defaultRegistry;\n    }\n    // If you call `enableDefaultRegistry`, any new elements will auto-register with\n    // the provided registry as soon as they're constructed.\n    static enableDefaultRegistry(registry) {\n        Registry.defaultRegistry = registry;\n    }\n    static disableDefaultRegistry() {\n        Registry.defaultRegistry = undefined;\n    }\n    constructor() {\n        this.index = new Index();\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    // Updates the indexes for element 'id'. If an element's attribute changes\n    // from A -> B, make sure to remove the element from A.\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    /**\n     * Register element `elem` with this registry.\n     * This adds the element to its index and watches it for attribute changes.\n     * @param elem\n     * @param id\n     * @returns this\n     */\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        // Manually add id to index, then update other indexes.\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _a, _b;\n        return (_b = (_a = this.index.id) === null || _a === void 0 ? void 0 : _a[id]) === null || _b === void 0 ? void 0 : _b[id]; // return undefined if the id is not found.\n    }\n    getElementsByAttribute(attribute, value) {\n        const index_attr = this.index[attribute];\n        if (index_attr) {\n            const index_attr_val = index_attr[value];\n            if (index_attr_val) {\n                const keys = Object.keys(index_attr_val);\n                return keys.map((k) => index_attr_val[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    // This is called by the element when an attribute value changes. If an indexed\n    // attribute changes, then update the local index.\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Registry } from './registry';\nimport { Category } from './typeguard';\nimport { defined, prefix } from './util';\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n */\nexport class Element {\n    static get CATEGORY() {\n        return Category.Element;\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    constructor() {\n        var _a;\n        this.children = [];\n        this.attrs = {\n            id: Element.newID(),\n            type: this.getCategory(),\n            class: '',\n        };\n        this.rendered = false;\n        // If a default registry exist, then register with it right away.\n        (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n    }\n    addChildElement(child) {\n        this.children.push(child);\n        return this;\n    }\n    getCategory() {\n        return this.constructor.CATEGORY;\n    }\n    /**\n     * Set the element style used to render.\n     *\n     * Example:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.draw();\n     * ```\n     * Note: If the element draws additional sub-elements (ie.: Modifiers in a Stave),\n     * the style can be applied to all of them by means of the context:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.getContext().setFillStyle('red');\n     * element.getContext().setStrokeStyle('red');\n     * element.draw();\n     * ```\n     * or using drawWithStyle:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.drawWithStyle();\n     * ```\n     */\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    /** Set the element & associated children style used for rendering. */\n    setGroupStyle(style) {\n        this.style = style;\n        this.children.forEach((child) => child.setGroupStyle(style));\n        return this;\n    }\n    /** Get the element style used for rendering. */\n    getStyle() {\n        return this.style;\n    }\n    /** Apply the element style to `context`. */\n    applyStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.save();\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        return this;\n    }\n    /** Restore the style of `context`. */\n    restoreStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.restore();\n        return this;\n    }\n    /**\n     * Draw the element and all its sub-elements (ie.: Modifiers in a Stave)\n     * with the element style.\n     */\n    drawWithStyle() {\n        this.checkContext();\n        this.applyStyle();\n        this.draw();\n        this.restoreStyle();\n    }\n    /** Check if it has a class label (An element can have multiple class labels).  */\n    hasClass(className) {\n        var _a;\n        if (!this.attrs.class)\n            return false;\n        return ((_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ').indexOf(className)) != -1;\n    }\n    /** Add a class label (An element can have multiple class labels).  */\n    addClass(className) {\n        var _a;\n        if (this.hasClass(className))\n            return this;\n        if (!this.attrs.class)\n            this.attrs.class = `${className}`;\n        else\n            this.attrs.class = `${this.attrs.class} ${className}`;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    /** Remove a class label (An element can have multiple class labels).  */\n    removeClass(className) {\n        var _a, _b;\n        if (!this.hasClass(className))\n            return this;\n        const arr = (_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ');\n        if (arr) {\n            arr.splice(arr.indexOf(className));\n            this.attrs.class = arr.join(' ');\n        }\n        (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    /** Call back from registry after the element is registered. */\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    /** Return the rendered status. */\n    isRendered() {\n        return this.rendered;\n    }\n    /** Set the rendered status. */\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    /** Return the element attributes. */\n    getAttributes() {\n        return this.attrs;\n    }\n    /** Return an attribute. */\n    // eslint-disable-next-line\n    getAttribute(name) {\n        return this.attrs[name];\n    }\n    /** Return associated SVGElement. */\n    getSVGElement(suffix = '') {\n        const id = prefix(this.attrs.id + suffix);\n        const element = document.getElementById(id);\n        if (element)\n            return element;\n    }\n    /** Set an attribute. */\n    setAttribute(name, value) {\n        var _a;\n        const oldID = this.attrs.id;\n        const oldValue = this.attrs[name];\n        this.attrs[name] = value;\n        // Register with old id to support id changes.\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    /** Get the boundingBox. */\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    /** Return the context. */\n    getContext() {\n        return this.context;\n    }\n    /** Set the context. */\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    /** Validate and return the context. */\n    checkContext() {\n        return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // Font Handling\n    /**\n     * Provide a CSS compatible font string (e.g., 'bold 16px Arial').\n     */\n    set font(f) {\n        this.setFont(f);\n    }\n    /** Returns the CSS compatible font string. */\n    get font() {\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Set the element's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     * @param font is 1) a `FontInfo` object or\n     *                2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *                3) a string representing the font family (at least one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     * If no arguments are provided, then the font is set to the default font.\n     * Each Element subclass may specify its own default by overriding the static `TEXT_FONT` property.\n     */\n    setFont(font, size, weight, style) {\n        // Allow subclasses to override `TEXT_FONT`.\n        const defaultTextFont = this.constructor.TEXT_FONT;\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const fontIsUndefined = font === undefined;\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        if (fontIsObject) {\n            // `font` is case 1) a FontInfo object\n            this.textFont = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            // `font` is case 2) CSS font shorthand.\n            this.textFont = Font.fromCSSString(font);\n        }\n        else if (fontIsUndefined && sizeWeightStyleAreUndefined) {\n            // All arguments are undefined. Do not check for `arguments.length === 0`,\n            // which fails on the edge case: `setFont(undefined)`.\n            // TODO: See if we can remove this case entirely without introducing a visual diff.\n            // The else case below seems like it should be equivalent to this case.\n            this.textFont = Object.assign({}, defaultTextFont);\n        }\n        else {\n            // `font` is case 3) a font family string (e.g., 'Times New Roman').\n            // The other parameters represent the size, weight, and style.\n            // It is okay for `font` to be undefined while one or more of the other arguments is provided.\n            // Following CSS conventions, unspecified params are reset to the default.\n            this.textFont = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        return this;\n    }\n    getFont() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Reset the text font to the style indicated by the static `TEXT_FONT` property.\n     * Subclasses can call this to initialize `textFont` for the first time.\n     */\n    resetFont() {\n        this.setFont();\n    }\n    /** Return a copy of the current FontInfo object. */\n    get fontInfo() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        // We can cast to Required<FontInfo> here, because\n        // we just called resetFont() above to ensure this.textFont is set.\n        return Object.assign({}, this.textFont);\n    }\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    /** Change the font size, while keeping everything else the same. */\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     * See Element.fontSizeInPixels or Element.fontSizeInPoints if you need to get a number for calculation purposes.\n     */\n    getFontSize() {\n        return this.fontSize;\n    }\n    /**\n     * The size is 1) a string of the form '10pt' or '16px', compatible with the CSS font-size property.\n     *          or 2) a number, which is interpreted as a point size (i.e. 12 == '12pt').\n     */\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     */\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    /**\n     * @returns the font size in `pt`.\n     */\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    /**\n     * @returns the font size in `px`.\n     */\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    /**\n     * @returns a CSS font-style string (e.g., 'italic').\n     */\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    /**\n     * @returns a CSS font-weight string (e.g., 'bold').\n     * As in CSS, font-weight is always returned as a string, even if it was set as a number.\n     */\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n}\nElement.ID = 1000;\n/**\n * Default font for text. This is not related to music engraving. Instead, see `Flow.setMusicFont(...fontNames)`\n * to customize the font for musical symbols placed on the score.\n */\nElement.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { RuntimeError } from './util';\nconst RESOLUTION = 16384;\n/**\n * Map duration numbers to 'ticks', the unit of duration used throughout VexFlow.\n * For example, a quarter note is 4, so it maps to RESOLUTION / 4 = 4096 ticks.\n */\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    // This is the default duration used to render bars (BarNote). Bars no longer\n    // consume ticks, so this should be a no-op.\n    // TODO(0xfe): This needs to be cleaned up.\n    b: '256',\n};\nconst keySignatures = {\n    C: { num: 0 },\n    Am: { num: 0 },\n    F: { acc: 'b', num: 1 },\n    Dm: { acc: 'b', num: 1 },\n    Bb: { acc: 'b', num: 2 },\n    Gm: { acc: 'b', num: 2 },\n    Eb: { acc: 'b', num: 3 },\n    Cm: { acc: 'b', num: 3 },\n    Ab: { acc: 'b', num: 4 },\n    Fm: { acc: 'b', num: 4 },\n    Db: { acc: 'b', num: 5 },\n    Bbm: { acc: 'b', num: 5 },\n    Gb: { acc: 'b', num: 6 },\n    Ebm: { acc: 'b', num: 6 },\n    Cb: { acc: 'b', num: 7 },\n    Abm: { acc: 'b', num: 7 },\n    G: { acc: '#', num: 1 },\n    Em: { acc: '#', num: 1 },\n    D: { acc: '#', num: 2 },\n    Bm: { acc: '#', num: 2 },\n    A: { acc: '#', num: 3 },\n    'F#m': { acc: '#', num: 3 },\n    E: { acc: '#', num: 4 },\n    'C#m': { acc: '#', num: 4 },\n    B: { acc: '#', num: 5 },\n    'G#m': { acc: '#', num: 5 },\n    'F#': { acc: '#', num: 6 },\n    'D#m': { acc: '#', num: 6 },\n    'C#': { acc: '#', num: 7 },\n    'A#m': { acc: '#', num: 7 },\n};\nconst clefs = {\n    treble: { line_shift: 0 },\n    bass: { line_shift: 6 },\n    tenor: { line_shift: 4 },\n    alto: { line_shift: 3 },\n    soprano: { line_shift: 1 },\n    percussion: { line_shift: 0 },\n    'mezzo-soprano': { line_shift: 2 },\n    'baritone-c': { line_shift: 5 },\n    'baritone-f': { line_shift: 5 },\n    subbass: { line_shift: 7 },\n    french: { line_shift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, int_val: 0 },\n    CN: { index: 0, int_val: 0, accidental: 'n' },\n    'C#': { index: 0, int_val: 1, accidental: '#' },\n    'C##': { index: 0, int_val: 2, accidental: '##' },\n    CB: { index: 0, int_val: 11, accidental: 'b' },\n    CBB: { index: 0, int_val: 10, accidental: 'bb' },\n    D: { index: 1, int_val: 2 },\n    DN: { index: 1, int_val: 2, accidental: 'n' },\n    'D#': { index: 1, int_val: 3, accidental: '#' },\n    'D##': { index: 1, int_val: 4, accidental: '##' },\n    DB: { index: 1, int_val: 1, accidental: 'b' },\n    DBB: { index: 1, int_val: 0, accidental: 'bb' },\n    E: { index: 2, int_val: 4 },\n    EN: { index: 2, int_val: 4, accidental: 'n' },\n    'E#': { index: 2, int_val: 5, accidental: '#' },\n    'E##': { index: 2, int_val: 6, accidental: '##' },\n    EB: { index: 2, int_val: 3, accidental: 'b' },\n    EBB: { index: 2, int_val: 2, accidental: 'bb' },\n    F: { index: 3, int_val: 5 },\n    FN: { index: 3, int_val: 5, accidental: 'n' },\n    'F#': { index: 3, int_val: 6, accidental: '#' },\n    'F##': { index: 3, int_val: 7, accidental: '##' },\n    FB: { index: 3, int_val: 4, accidental: 'b' },\n    FBB: { index: 3, int_val: 3, accidental: 'bb' },\n    G: { index: 4, int_val: 7 },\n    GN: { index: 4, int_val: 7, accidental: 'n' },\n    'G#': { index: 4, int_val: 8, accidental: '#' },\n    'G##': { index: 4, int_val: 9, accidental: '##' },\n    GB: { index: 4, int_val: 6, accidental: 'b' },\n    GBB: { index: 4, int_val: 5, accidental: 'bb' },\n    A: { index: 5, int_val: 9 },\n    AN: { index: 5, int_val: 9, accidental: 'n' },\n    'A#': { index: 5, int_val: 10, accidental: '#' },\n    'A##': { index: 5, int_val: 11, accidental: '##' },\n    AB: { index: 5, int_val: 8, accidental: 'b' },\n    ABB: { index: 5, int_val: 7, accidental: 'bb' },\n    B: { index: 6, int_val: 11 },\n    BN: { index: 6, int_val: 11, accidental: 'n' },\n    'B#': { index: 6, int_val: 12, accidental: '#' },\n    'B##': { index: 6, int_val: 13, accidental: '##' },\n    BB: { index: 6, int_val: 10, accidental: 'b' },\n    BBB: { index: 6, int_val: 9, accidental: 'bb' },\n    R: { index: 6, rest: true },\n    X: {\n        index: 6,\n        accidental: '',\n        octave: 4,\n        code: 'noteheadXBlack',\n        shift_right: 5.5,\n    },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n    d: { name: 'diamond' },\n    x: { name: 'x' },\n    ci: { name: 'circled' },\n    cx: { name: 'circle x' },\n    sf: { name: 'slashed' },\n    sb: { name: 'slashed backward' },\n    sq: { name: 'square' },\n    tu: { name: 'triangle up' },\n    td: { name: 'triangle down' },\n};\nconst accidentals = {\n    '#': { code: 'accidentalSharp', parenRightPaddingAdjustment: -1 },\n    '##': { code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    b: { code: 'accidentalFlat', parenRightPaddingAdjustment: -2 },\n    bb: { code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2 },\n    n: { code: 'accidentalNatural', parenRightPaddingAdjustment: -1 },\n    '{': { code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1 },\n    '}': { code: 'accidentalParensRight', parenRightPaddingAdjustment: -1 },\n    db: { code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1 },\n    d: { code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0 },\n    '++': { code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1 },\n    '+': { code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1 },\n    '+-': { code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1 },\n    bs: { code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1 },\n    bss: { code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1 },\n    o: { code: 'accidentalSori', parenRightPaddingAdjustment: -1 },\n    k: { code: 'accidentalKoron', parenRightPaddingAdjustment: -1 },\n    bbs: { code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1 },\n    '++-': { code: 'vexAccidentalMicrotonal2', parenRightPaddingAdjustment: -1 },\n    ashs: { code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1 },\n    afhf: { code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaUp: { code: 'accSagittal5v7KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaDown: { code: 'accSagittal5v7KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaUp: { code: 'accSagittal5CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaDown: { code: 'accSagittal5CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaUp: { code: 'accSagittal7CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaDown: { code: 'accSagittal7CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisUp: { code: 'accSagittal25SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisDown: { code: 'accSagittal25SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisUp: { code: 'accSagittal35MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisDown: { code: 'accSagittal35MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisUp: { code: 'accSagittal11MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisDown: { code: 'accSagittal11MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisUp: { code: 'accSagittal11LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisDown: { code: 'accSagittal11LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisUp: { code: 'accSagittal35LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisDown: { code: 'accSagittal35LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SDown: { code: 'accSagittalSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SUp: { code: 'accSagittalFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CDown: { code: 'accSagittalSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CUp: { code: 'accSagittalFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CDown: { code: 'accSagittalSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CUp: { code: 'accSagittalFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kDown: { code: 'accSagittalSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kUp: { code: 'accSagittalFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp: { code: 'accSagittalSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat: { code: 'accSagittalFlat', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kUp: { code: 'accSagittalSharp5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kDown: { code: 'accSagittalFlat5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CUp: { code: 'accSagittalSharp5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CDown: { code: 'accSagittalFlat5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CUp: { code: 'accSagittalSharp7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CDown: { code: 'accSagittalFlat7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SUp: { code: 'accSagittalSharp25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SDown: { code: 'accSagittalFlat25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35MUp: { code: 'accSagittalSharp35MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35MDown: { code: 'accSagittalFlat35MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11MUp: { code: 'accSagittalSharp11MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11MDown: { code: 'accSagittalFlat11MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11LUp: { code: 'accSagittalSharp11LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11LDown: { code: 'accSagittalFlat11LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35LUp: { code: 'accSagittalSharp35LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35LDown: { code: 'accSagittalFlat35LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp25SDown: { code: 'accSagittalDoubleSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat25SUp: { code: 'accSagittalDoubleFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7CDown: { code: 'accSagittalDoubleSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7CUp: { code: 'accSagittalDoubleFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5CDown: { code: 'accSagittalDoubleSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5CUp: { code: 'accSagittalDoubleFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v7kDown: { code: 'accSagittalDoubleSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v7kUp: { code: 'accSagittalDoubleFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp: { code: 'accSagittalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat: { code: 'accSagittalDoubleFlat', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaUp: { code: 'accSagittal7v11KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaDown: { code: 'accSagittal7v11KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaUp: { code: 'accSagittal17CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaDown: { code: 'accSagittal17CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaUp: { code: 'accSagittal55CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaDown: { code: 'accSagittal55CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaUp: { code: 'accSagittal7v11CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaDown: { code: 'accSagittal7v11CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisUp: { code: 'accSagittal5v11SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisDown: { code: 'accSagittal5v11SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SDown: { code: 'accSagittalSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SUp: { code: 'accSagittalFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CDown: { code: 'accSagittalSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CUp: { code: 'accSagittalFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CDown: { code: 'accSagittalSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CUp: { code: 'accSagittalFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CDown: { code: 'accSagittalSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CUp: { code: 'accSagittalFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kDown: { code: 'accSagittalSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kUp: { code: 'accSagittalFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kUp: { code: 'accSagittalSharp7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kDown: { code: 'accSagittalFlat7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CUp: { code: 'accSagittalSharp17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CDown: { code: 'accSagittalFlat17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CUp: { code: 'accSagittalSharp55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CDown: { code: 'accSagittalFlat55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CUp: { code: 'accSagittalSharp7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CDown: { code: 'accSagittalFlat7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SUp: { code: 'accSagittalSharp5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SDown: { code: 'accSagittalFlat5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v11SDown: { code: 'accSagittalDoubleSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v11SUp: { code: 'accSagittalDoubleFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11CDown: { code: 'accSagittalDoubleSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11CUp: { code: 'accSagittalDoubleFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp55CDown: { code: 'accSagittalDoubleSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat55CUp: { code: 'accSagittalDoubleFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17CDown: { code: 'accSagittalDoubleSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17CUp: { code: 'accSagittalDoubleFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11kDown: { code: 'accSagittalDoubleSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11kUp: { code: 'accSagittalDoubleFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaUp: { code: 'accSagittal23CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaDown: { code: 'accSagittal23CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaUp: { code: 'accSagittal5v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaDown: { code: 'accSagittal5v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisUp: { code: 'accSagittal5v23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisDown: { code: 'accSagittal5v23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SDown: { code: 'accSagittalSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SUp: { code: 'accSagittalFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CDown: { code: 'accSagittalSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CUp: { code: 'accSagittalFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CDown: { code: 'accSagittalSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CUp: { code: 'accSagittalFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CUp: { code: 'accSagittalSharp23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CDown: { code: 'accSagittalFlat23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CUp: { code: 'accSagittalSharp5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CDown: { code: 'accSagittalFlat5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SUp: { code: 'accSagittalSharp5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SDown: { code: 'accSagittalFlat5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v23SDown: { code: 'accSagittalDoubleSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v23SUp: { code: 'accSagittalDoubleFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v19CDown: { code: 'accSagittalDoubleSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v19CUp: { code: 'accSagittalDoubleFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23CDown: { code: 'accSagittalDoubleSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23CUp: { code: 'accSagittalDoubleFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaUp: { code: 'accSagittal19SchismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaDown: { code: 'accSagittal19SchismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaUp: { code: 'accSagittal17KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaDown: { code: 'accSagittal17KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaUp: { code: 'accSagittal143CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaDown: { code: 'accSagittal143CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaUp: { code: 'accSagittal11v49CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaDown: { code: 'accSagittal11v49CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaUp: { code: 'accSagittal19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaDown: { code: 'accSagittal19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaUp: { code: 'accSagittal7v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaDown: { code: 'accSagittal7v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisUp: { code: 'accSagittal49SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisDown: { code: 'accSagittal49SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisUp: { code: 'accSagittal23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisDown: { code: 'accSagittal23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisUp: { code: 'accSagittal5v13MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisDown: { code: 'accSagittal5v13MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisUp: { code: 'accSagittal11v19MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisDown: { code: 'accSagittal11v19MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisUp: { code: 'accSagittal49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisDown: { code: 'accSagittal49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisUp: { code: 'accSagittal5v49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisDown: { code: 'accSagittal5v49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisUp: { code: 'accSagittal49LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisDown: { code: 'accSagittal49LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisUp: { code: 'accSagittal11v19LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisDown: { code: 'accSagittal11v19LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisUp: { code: 'accSagittal5v13LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisDown: { code: 'accSagittal5v13LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SDown: { code: 'accSagittalSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SUp: { code: 'accSagittalFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SDown: { code: 'accSagittalSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SUp: { code: 'accSagittalFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CDown: { code: 'accSagittalSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CUp: { code: 'accSagittalFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CDown: { code: 'accSagittalSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CUp: { code: 'accSagittalFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CDown: { code: 'accSagittalSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CUp: { code: 'accSagittalFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CDown: { code: 'accSagittalSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CUp: { code: 'accSagittalFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kDown: { code: 'accSagittalSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kUp: { code: 'accSagittalFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sDown: { code: 'accSagittalSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sUp: { code: 'accSagittalFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sUp: { code: 'accSagittalSharp19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sDown: { code: 'accSagittalFlat19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kUp: { code: 'accSagittalSharp17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kDown: { code: 'accSagittalFlat17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CUp: { code: 'accSagittalSharp143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CDown: { code: 'accSagittalFlat143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CUp: { code: 'accSagittalSharp11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CDown: { code: 'accSagittalFlat11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CUp: { code: 'accSagittalSharp19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CDown: { code: 'accSagittalFlat19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CUp: { code: 'accSagittalSharp7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CDown: { code: 'accSagittalFlat7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SUp: { code: 'accSagittalSharp49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SDown: { code: 'accSagittalFlat49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SUp: { code: 'accSagittalSharp23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SDown: { code: 'accSagittalFlat23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13MUp: { code: 'accSagittalSharp5v13MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13MDown: { code: 'accSagittalFlat5v13MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19MUp: { code: 'accSagittalSharp11v19MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19MDown: { code: 'accSagittalFlat11v19MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49MUp: { code: 'accSagittalSharp49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49MDown: { code: 'accSagittalFlat49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v49MUp: { code: 'accSagittalSharp5v49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v49MDown: { code: 'accSagittalFlat5v49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49LUp: { code: 'accSagittalSharp49LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49LDown: { code: 'accSagittalFlat49LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19LUp: { code: 'accSagittalSharp11v19LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19LDown: { code: 'accSagittalFlat11v19LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13LUp: { code: 'accSagittalSharp5v13LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13LDown: { code: 'accSagittalFlat5v13LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23SDown: { code: 'accSagittalDoubleSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23SUp: { code: 'accSagittalDoubleFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp49SDown: { code: 'accSagittalDoubleSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat49SUp: { code: 'accSagittalDoubleFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v19CDown: { code: 'accSagittalDoubleSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v19CUp: { code: 'accSagittalDoubleFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19CDown: { code: 'accSagittalDoubleSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19CUp: { code: 'accSagittalDoubleFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp11v49CDown: { code: 'accSagittalDoubleSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat11v49CUp: { code: 'accSagittalDoubleFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp143CDown: { code: 'accSagittalDoubleSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat143CUp: { code: 'accSagittalDoubleFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17kDown: { code: 'accSagittalDoubleSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17kUp: { code: 'accSagittalDoubleFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19sDown: { code: 'accSagittalDoubleSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19sUp: { code: 'accSagittalDoubleFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftUp: { code: 'accSagittalShaftUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftDown: { code: 'accSagittalShaftDown', parenRightPaddingAdjustment: -1 },\n    accSagittalAcute: { code: 'accSagittalAcute', parenRightPaddingAdjustment: -1 },\n    accSagittalGrave: { code: 'accSagittalGrave', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaUp: { code: 'accSagittal1MinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaDown: { code: 'accSagittal1MinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasUp: { code: 'accSagittal2MinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasDown: { code: 'accSagittal2MinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaUp: { code: 'accSagittal1TinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaDown: { code: 'accSagittal1TinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasUp: { code: 'accSagittal2TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasDown: { code: 'accSagittal2TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasUp: { code: 'accSagittal3TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasDown: { code: 'accSagittal3TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasUp: { code: 'accSagittal4TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasDown: { code: 'accSagittal4TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasUp: { code: 'accSagittal5TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasDown: { code: 'accSagittal5TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasUp: { code: 'accSagittal6TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasDown: { code: 'accSagittal6TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasUp: { code: 'accSagittal7TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasDown: { code: 'accSagittal7TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasUp: { code: 'accSagittal8TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasDown: { code: 'accSagittal8TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasUp: { code: 'accSagittal9TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasDown: { code: 'accSagittal9TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaUp: { code: 'accSagittalFractionalTinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaDown: { code: 'accSagittalFractionalTinaDown', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlat: { code: 'accidentalNarrowReversedFlat', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlatAndFlat: {\n        code: 'accidentalNarrowReversedFlatAndFlat',\n        parenRightPaddingAdjustment: -1,\n    },\n    accidentalWilsonPlus: { code: 'accidentalWilsonPlus', parenRightPaddingAdjustment: -1 },\n    accidentalWilsonMinus: { code: 'accidentalWilsonMinus', parenRightPaddingAdjustment: -1 },\n};\n// Helps determine the layout of accidentals.\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        second_on_bottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spaced_out_tetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spaced_out_pentachord: [1, 2, 3, 2, 1],\n        very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n        very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: 'augmentationDot', between_lines: true },\n    av: {\n        aboveCode: 'articStaccatissimoAbove',\n        belowCode: 'articStaccatissimoBelow',\n        between_lines: true,\n    },\n    'a>': {\n        aboveCode: 'articAccentAbove',\n        belowCode: 'articAccentBelow',\n        between_lines: true,\n    },\n    'a-': {\n        aboveCode: 'articTenutoAbove',\n        belowCode: 'articTenutoBelow',\n        between_lines: true,\n    },\n    'a^': {\n        aboveCode: 'articMarcatoAbove',\n        belowCode: 'articMarcatoBelow',\n        between_lines: false,\n    },\n    'a+': { code: 'pluckedLeftHandPizzicato', between_lines: false },\n    ao: {\n        aboveCode: 'pluckedSnapPizzicatoAbove',\n        belowCode: 'pluckedSnapPizzicatoBelow',\n        between_lines: false,\n    },\n    ah: { code: 'stringsHarmonic', between_lines: false },\n    'a@': { aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false },\n    'a@a': { code: 'fermataAbove', between_lines: false },\n    'a@u': { code: 'fermataBelow', between_lines: false },\n    'a@s': { aboveCode: 'fermataShortAbove', belowCode: 'fermataShortBelow', between_lines: false },\n    'a@as': { code: 'fermataShortAbove', between_lines: false },\n    'a@us': { code: 'fermataShortBelow', between_lines: false },\n    'a@l': { aboveCode: 'fermataLongAbove', belowCode: 'fermataLongBelow', between_lines: false },\n    'a@al': { code: 'fermataLongAbove', between_lines: false },\n    'a@ul': { code: 'fermataLongBelow', between_lines: false },\n    'a@vl': { aboveCode: 'fermataVeryLongAbove', belowCode: 'fermataVeryLongBelow', between_lines: false },\n    'a@avl': { code: 'fermataVeryLongAbove', between_lines: false },\n    'a@uvl': { code: 'fermataVeryLongBelow', between_lines: false },\n    'a|': { code: 'stringsUpBow', between_lines: false },\n    am: { code: 'stringsDownBow', between_lines: false },\n    'a,': { code: 'pictChokeCymbal', between_lines: false }, // Choked\n};\nconst ornaments = {\n    mordent: { code: 'ornamentShortTrill' },\n    mordent_inverted: { code: 'ornamentMordent' },\n    turn: { code: 'ornamentTurn' },\n    turn_inverted: { code: 'ornamentTurnSlash' },\n    tr: { code: 'ornamentTrill' },\n    upprall: { code: 'ornamentPrecompSlideTrillDAnglebert' },\n    downprall: { code: 'ornamentPrecompDoubleCadenceUpperPrefix' },\n    prallup: { code: 'ornamentPrecompTrillSuffixDandrieu' },\n    pralldown: { code: 'ornamentPrecompTrillLowerSuffix' },\n    upmordent: { code: 'ornamentPrecompSlideTrillBach' },\n    downmordent: { code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn' },\n    lineprall: { code: 'ornamentPrecompAppoggTrill' },\n    prallprall: { code: 'ornamentTremblement' },\n    scoop: { code: 'brassScoop' },\n    doit: { code: 'brassDoitMedium' },\n    fall: { code: 'brassFallLipShort' },\n    doitLong: { code: 'brassLiftMedium' },\n    fallLong: { code: 'brassFallRoughMedium' },\n    bend: { code: 'brassBend' },\n    plungerClosed: { code: 'brassMuteClosed' },\n    plungerOpen: { code: 'brassMuteOpen' },\n    flip: { code: 'brassFlip' },\n    jazzTurn: { code: 'brassJazzTurn' },\n    smear: { code: 'brassSmear' },\n};\nexport class Tables {\n    /**\n     * @returns the `Font` object at the head of the music font stack.\n     */\n    static currentMusicFont() {\n        if (Tables.MUSIC_FONT_STACK.length === 0) {\n            throw new RuntimeError('NoFonts', 'The font stack is empty. See: await Flow.fetchMusicFont(...); Flow.setMusicFont(...).');\n        }\n        else {\n            return Tables.MUSIC_FONT_STACK[0];\n        }\n    }\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    /**\n     * @param keyOctaveGlyph a string in the format \"key/octave\" (e.g., \"c/5\") or \"key/octave/custom-note-head-code\" (e.g., \"g/5/t3\").\n     * @param clef\n     * @param params a struct with one option, `octave_shift` for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n     * @returns properties for the specified note.\n     */\n    static keyProperties(keyOctaveGlyph, clef = 'treble', params) {\n        let options = { octave_shift: 0, duration: '4' };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const duration = Tables.sanitizeDuration(options.duration);\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        if (value.octave)\n            pieces[1] = value.octave.toString();\n        let octave = parseInt(pieces[1], 10);\n        // Octave_shift is the shift to compensate for clef 8va/8vb.\n        octave += -1 * options.octave_shift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).line_shift;\n        let stroke = 0;\n        if (line <= 0 && (line * 2) % 2 === 0)\n            stroke = 1; // stroke up\n        if (line >= 6 && (line * 2) % 2 === 0)\n            stroke = -1; // stroke down\n        // Integer value for note arithmetic.\n        const int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : undefined;\n        // If the user specified a glyph, overwrite the glyph code.\n        const code = value.code;\n        const shift_right = value.shift_right;\n        let customNoteHeadProps = {};\n        if (pieces.length > 2 && pieces[2]) {\n            const glyphName = pieces[2].toUpperCase();\n            customNoteHeadProps = { code: this.codeNoteHead(glyphName, duration) } || {};\n        }\n        return Object.assign({ key,\n            octave,\n            line,\n            int_value, accidental: value.accidental, code,\n            stroke,\n            shift_right, displaced: false }, customNoteHeadProps);\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    static tabToGlyphProps(fret, scale = 1.0) {\n        let glyph = undefined;\n        let width = 0;\n        let shift_y = 0;\n        if (fret.toUpperCase() === 'X') {\n            const glyphMetrics = new Glyph('accidentalDoubleSharp', Tables.TABLATURE_FONT_SCALE).getMetrics();\n            glyph = 'accidentalDoubleSharp';\n            if (glyphMetrics.width == undefined || glyphMetrics.height == undefined)\n                throw new RuntimeError('InvalidMetrics', 'Width and height required');\n            width = glyphMetrics.width;\n            shift_y = -glyphMetrics.height / 2;\n        }\n        else {\n            width = Tables.textWidth(fret);\n        }\n        return {\n            text: fret,\n            code: glyph,\n            getWidth: () => width * scale,\n            shift_y,\n        };\n    }\n    // Used by annotation.ts and bend.ts. Clearly this implementation only works for the default font size.\n    // TODO: The actual width depends on the font family, size, weight, style.\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(acc) {\n        return accidentals[acc];\n    }\n    static ornamentCodes(acc) {\n        return ornaments[acc];\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.acc) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        const notes = accidentalList[keySpec.acc];\n        const acc_list = [];\n        for (let i = 0; i < keySpec.num; ++i) {\n            const line = notes[i];\n            acc_list.push({ type: keySpec.acc, line });\n        }\n        return acc_list;\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    /**\n     * Convert duration aliases to the number based duration.\n     * If the input isn't an alias, simply return the input.\n     * @param duration\n     * @returns Example: 'q' -> '4', '8' -> '8'\n     */\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    /** Convert the `duration` to a fraction. */\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    /** Convert the `duration` to a number. */\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    /* Convert the `duration` to total ticks. */\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    static codeNoteHead(type, duration) {\n        let code = '';\n        switch (type) {\n            /* Diamond */\n            case 'D0':\n                code = 'noteheadDiamondWhole';\n                break;\n            case 'D1':\n                code = 'noteheadDiamondHalf';\n                break;\n            case 'D2':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'D3':\n                code = 'noteheadDiamondBlack';\n                break;\n            /* Triangle */\n            case 'T0':\n                code = 'noteheadTriangleUpWhole';\n                break;\n            case 'T1':\n                code = 'noteheadTriangleUpHalf';\n                break;\n            case 'T2':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'T3':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            /* Cross */\n            case 'X0':\n                code = 'noteheadXWhole';\n                break;\n            case 'X1':\n                code = 'noteheadXHalf';\n                break;\n            case 'X2':\n                code = 'noteheadXBlack';\n                break;\n            case 'X3':\n                code = 'noteheadCircleX';\n                break;\n            /* Square */\n            case 'S1':\n                code = 'noteheadSquareWhite';\n                break;\n            case 'S2':\n                code = 'noteheadSquareBlack';\n                break;\n            /* Rectangle */\n            case 'R1':\n                code = 'vexNoteHeadRectWhite'; // no smufl code\n                break;\n            case 'R2':\n                code = 'vexNoteHeadRectBlack'; // no smufl code\n                break;\n            case 'DO':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'RE':\n                code = 'noteheadMoonBlack';\n                break;\n            case 'MI':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'FA':\n                code = 'noteheadTriangleLeftBlack';\n                break;\n            case 'FAUP':\n                code = 'noteheadTriangleRightBlack';\n                break;\n            case 'SO':\n                code = 'noteheadBlack';\n                break;\n            case 'LA':\n                code = 'noteheadSquareBlack';\n                break;\n            case 'TI':\n                code = 'noteheadTriangleRoundDownBlack';\n                break;\n            case 'D':\n            case 'H': // left for backwards compatibility\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDiamondDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadDiamondWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadDiamondHalf';\n                        break;\n                    default:\n                        code = 'noteheadDiamondBlack';\n                        break;\n                }\n                break;\n            case 'N':\n            case 'G':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadHalf';\n                        break;\n                    default:\n                        code = 'noteheadBlack';\n                        break;\n                }\n                break;\n            case 'M': // left for backwards compatibility\n            case 'X':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadXHalf';\n                        break;\n                    default:\n                        code = 'noteheadXBlack';\n                        break;\n                }\n                break;\n            case 'CX':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircleXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircleXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircleXHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircleX';\n                        break;\n                }\n                break;\n            case 'CI':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircledDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircledWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircledHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircledBlack';\n                        break;\n                }\n                break;\n            case 'SQ':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWholeSquare';\n                        break;\n                    case '1':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    case '2':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    default:\n                        code = 'noteheadSquareBlack';\n                        break;\n                }\n                break;\n            case 'TU':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleUpDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleUpWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleUpHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleUpBlack';\n                        break;\n                }\n                break;\n            case 'TD':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleDownDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleDownWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleDownHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleDownBlack';\n                        break;\n                }\n                break;\n            case 'SF':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole1';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole1';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf1';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack1';\n                }\n                break;\n            case 'SB':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole2';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole2';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf2';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack2';\n                }\n                break;\n        }\n        return code;\n    }\n    // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n    // The default type is a regular note ('n').\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        // Lookup duration for default glyph head code\n        let code = durationCodes[duration];\n        if (code === undefined) {\n            code = durationCodes['4'];\n        }\n        // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n        let glyphTypeProperties = code[type];\n        // Try and get it from the custom list of note heads\n        const codeNoteHead = Tables.codeNoteHead(type.toUpperCase(), duration);\n        if (codeNoteHead != '')\n            glyphTypeProperties = Object.assign(Object.assign({}, glyphTypeProperties), { code_head: codeNoteHead, code: codeNoteHead });\n        const code_head = glyphTypeProperties.code_head;\n        // The default implementation of getWidth() calls Glyph.getWidth(code_head, scale).\n        // This can be overridden by an individual glyph type (see slash noteheads below: Tables.SLASH_NOTEHEAD_WIDTH).\n        const getWidth = (scale = Tables.NOTATION_FONT_SCALE) => Glyph.getWidth(code_head, scale);\n        // Merge duration props for 'duration' with the note head properties.\n        return Object.assign(Object.assign(Object.assign({}, code.common), { getWidth: getWidth }), glyphTypeProperties);\n    }\n}\nTables.SOFTMAX_FACTOR = 100;\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RENDER_PRECISION_PLACES = 3;\nTables.RESOLUTION = RESOLUTION;\n/**\n * Customize this by calling Flow.setMusicFont(...fontNames);\n */\nTables.MUSIC_FONT_STACK = [];\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\n// HACK:\n// Since text origins are positioned at the baseline, we must\n// compensate for the ascender of the text. Of course, 1 staff space is\n// a very poor approximation.\n//\n// This will be deprecated in the future. This is a temporary solution until\n// we have more robust text metrics.\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalMap = accidentals;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    // ♯ accidental sharp\n    sharp: String.fromCharCode(0x266f),\n    // ♭ accidental flat\n    flat: String.fromCharCode(0x266d),\n    // ♮ accidental natural\n    natural: String.fromCharCode(0x266e),\n    // △ major seventh\n    triangle: String.fromCharCode(0x25b3),\n    // ø half-diminished\n    'o-with-slash': String.fromCharCode(0x00f8),\n    // ° diminished\n    degrees: String.fromCharCode(0x00b0),\n    // ○ diminished\n    circle: String.fromCharCode(0x25cb),\n};\n/* The list of valid note types. Used by note.ts during parseNoteStruct(). */\nTables.validTypes = validNoteTypes;\n// Default time signature.\nTables.TIME4_4 = {\n    num_beats: 4,\n    beat_value: 4,\n    resolution: RESOLUTION,\n};\n// 1/2, 1, 2, 4, 8, 16, 32, 64, 128\n// NOTE: There is no 256 here! However, there are other mentions of 256 in this file.\n// For example, in durations has a 256 key, and sanitizeDuration() can return 256.\n// The sanitizeDuration() bit may need to be removed by 0xfe.\nconst durationCodes = {\n    '1/2': {\n        common: {\n            code_head: '',\n            stem: false,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Breve rest\n            code_head: 'restDoubleWhole',\n            rest: true,\n            position: 'B/5',\n            dot_shiftY: 0.5,\n        },\n        s: {\n            // Breve note slash -\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    1: {\n        common: {\n            code_head: '',\n            stem: false,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Whole rest\n            code_head: 'restWhole',\n            ledger_code_head: 'restWholeLegerLine',\n            rest: true,\n            position: 'D/5',\n            dot_shiftY: 0.5,\n        },\n        s: {\n            // Whole note slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    2: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Half rest\n            code_head: 'restHalf',\n            ledger_code_head: 'restHalfLegerLine',\n            stem: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n        },\n        s: {\n            // Half note slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    4: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Quarter rest\n            code_head: 'restQuarter',\n            stem: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.5,\n            line_below: 1.5,\n        },\n        s: {\n            // Quarter slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    8: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: true,\n            beam_count: 1,\n            stem_beam_extension: 0,\n            code_flag_upstem: 'flag8thUp',\n            code_flag_downstem: 'flag8thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Eighth rest\n            code_head: 'rest8th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.0,\n            line_below: 1.0,\n        },\n        s: {\n            // Eighth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    16: {\n        common: {\n            code_head: '',\n            beam_count: 2,\n            stem_beam_extension: 0,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag16thUp',\n            code_flag_downstem: 'flag16thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Sixteenth rest\n            code_head: 'rest16th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.0,\n            line_below: 2.0,\n        },\n        s: {\n            // Sixteenth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    32: {\n        common: {\n            code_head: '',\n            beam_count: 3,\n            stem_beam_extension: 7.5,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag32ndUp',\n            code_flag_downstem: 'flag32ndDown',\n            stem_up_extension: 9,\n            stem_down_extension: 9,\n            tabnote_stem_up_extension: 9,\n            tabnote_stem_down_extension: 9,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Thirty-second rest\n            code_head: 'rest32nd',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -1.5,\n            line_above: 2.0,\n            line_below: 2.0,\n        },\n        s: {\n            // Thirty-second slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    64: {\n        common: {\n            code_head: '',\n            beam_count: 4,\n            stem_beam_extension: 15,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag64thUp',\n            code_flag_downstem: 'flag64thDown',\n            stem_up_extension: 13,\n            stem_down_extension: 13,\n            tabnote_stem_up_extension: 13,\n            tabnote_stem_down_extension: 13,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Sixty-fourth rest\n            code_head: 'rest64th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -1.5,\n            line_above: 2.0,\n            line_below: 3.0,\n        },\n        s: {\n            // Sixty-fourth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    128: {\n        common: {\n            code_head: '',\n            beam_count: 5,\n            stem_beam_extension: 22.5,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag128thUp',\n            code_flag_downstem: 'flag128thDown',\n            stem_up_extension: 22,\n            stem_down_extension: 22,\n            tabnote_stem_up_extension: 22,\n            tabnote_stem_down_extension: 22,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Hundred-twenty-eight rest\n            code_head: 'rest128th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -2.5,\n            line_above: 3.0,\n            line_below: 3.0,\n        },\n        s: {\n            // Hundred-twenty-eight slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var OutlineCode;\n(function (OutlineCode) {\n    OutlineCode[OutlineCode[\"MOVE\"] = 0] = \"MOVE\";\n    OutlineCode[OutlineCode[\"LINE\"] = 1] = \"LINE\";\n    OutlineCode[OutlineCode[\"QUADRATIC\"] = 2] = \"QUADRATIC\";\n    OutlineCode[OutlineCode[\"BEZIER\"] = 3] = \"BEZIER\";\n})(OutlineCode || (OutlineCode = {}));\nclass GlyphCacheEntry {\n    constructor(fontStack, code, category) {\n        this.point = -1;\n        this.metrics = Glyph.loadMetrics(fontStack, code, category);\n        this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.metrics.scale, this.metrics.x_shift, this.metrics.y_shift);\n        if (category) {\n            this.point = Glyph.lookupFontMetric(this.metrics.font, category, code, 'point', -1);\n        }\n    }\n}\nclass GlyphCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    lookup(code, category) {\n        let entries = this.cache.get(Glyph.CURRENT_CACHE_KEY);\n        if (entries === undefined) {\n            entries = {};\n            this.cache.set(Glyph.CURRENT_CACHE_KEY, entries);\n        }\n        const key = category ? `${code}%${category}` : code;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = new GlyphCacheEntry(Glyph.MUSIC_FONT_STACK, code, category);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n}\nclass GlyphOutline {\n    constructor(outline, originX, originY, scale) {\n        this.outline = outline;\n        this.originX = originX;\n        this.originY = originY;\n        this.scale = scale;\n        this.i = 0;\n        this.precision = 1;\n        // Automatically assign private properties: this.outline, this.originX, this.originY, and this.scale.\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n    }\n    done() {\n        return this.i >= this.outline.length;\n    }\n    next() {\n        return Math.round((this.outline[this.i++] * this.precision) / this.precision);\n    }\n    nextX() {\n        return Math.round((this.originX + this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    nextY() {\n        return Math.round((this.originY - this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    static parse(str) {\n        const result = [];\n        const parts = str.split(' ');\n        let i = 0;\n        while (i < parts.length) {\n            switch (parts[i++]) {\n                case 'm':\n                    result.push(OutlineCode.MOVE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'l':\n                    result.push(OutlineCode.LINE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'q':\n                    result.push(OutlineCode.QUADRATIC, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'b':\n                    result.push(OutlineCode.BEZIER, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n            }\n        }\n        return result;\n    }\n}\nexport class Glyph extends Element {\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Glyph;\n    }\n    /**\n     * Pass a key of the form `glyphs.{category}.{code}.{key}` to Font.lookupMetric(). If the initial lookup fails,\n     * try again with the path `glyphs.{category}.{key}`. If the second lookup fails, return the defaultValue.\n     *\n     * @param font\n     * @param category any metric path under 'glyphs', so 'stem.up' could resolve to glyphs.stem.up.shiftX, glyphs.stem.up.shiftY, etc.\n     * @param code\n     * @param key\n     * @param defaultValue\n     */\n    static lookupFontMetric(font, category, code, key, defaultValue) {\n        let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, undefined);\n        if (value === undefined) {\n            // The first lookup failed, so we omit .${code} and try again (with a defaultValue this time).\n            value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n        }\n        return value;\n    }\n    static lookupGlyph(fontStack, code) {\n        defined(fontStack, 'BadFontStack', 'Font stack is misconfigured');\n        let glyph;\n        let font;\n        for (let i = 0; i < fontStack.length; i++) {\n            font = fontStack[i];\n            glyph = font.getGlyphs()[code];\n            if (glyph)\n                return { glyph, font };\n        }\n        throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n    static loadMetrics(fontStack, code, category) {\n        const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n        if (!glyph.o)\n            throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n        let x_shift = 0;\n        let y_shift = 0;\n        let scale = 1;\n        if (category && font) {\n            x_shift = Glyph.lookupFontMetric(font, category, code, 'shiftX', 0);\n            y_shift = Glyph.lookupFontMetric(font, category, code, 'shiftY', 0);\n            scale = Glyph.lookupFontMetric(font, category, code, 'scale', 1);\n        }\n        const x_min = glyph.x_min;\n        const x_max = glyph.x_max;\n        const ha = glyph.ha;\n        if (!glyph.cached_outline) {\n            glyph.cached_outline = GlyphOutline.parse(glyph.o);\n        }\n        return {\n            x_min,\n            x_max,\n            x_shift,\n            y_shift,\n            scale,\n            ha,\n            outline: glyph.cached_outline,\n            font,\n            width: x_max - x_min,\n            height: ha,\n        };\n    }\n    /**\n     * Renders glyphs from the default font stack.\n     *\n     * @param ctx Canvas or SVG context\n     * @param x_pos x coordinate\n     * @param y_pos y coordinate\n     * @param point the point size of the font\n     * @param code the glyph code in font.getGlyphs()\n     * @param options\n     * @returns\n     */\n    static renderGlyph(ctx, x_pos, y_pos, point, code, options) {\n        var _a;\n        const data = Glyph.cache.lookup(code, options === null || options === void 0 ? void 0 : options.category);\n        const metrics = data.metrics;\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const customScale = (_a = options === null || options === void 0 ? void 0 : options.scale) !== null && _a !== void 0 ? _a : 1;\n        const scale = ((point * 72.0) / (metrics.font.getResolution() * 100.0)) * metrics.scale * customScale;\n        Glyph.renderOutline(ctx, metrics.outline, scale, x_pos + metrics.x_shift * customScale, y_pos + metrics.y_shift * customScale);\n        return metrics;\n    }\n    static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        ctx.beginPath();\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    ctx.moveTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.LINE:\n                    ctx.lineTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.quadraticCurveTo(go.nextX(), go.nextY(), x, y);\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.bezierCurveTo(go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    break;\n            }\n        }\n        ctx.fill();\n    }\n    static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        const bboxComp = new BoundingBoxComputation();\n        // (penX, penY) hold the pen position: the start of each stroke.\n        let penX = x_pos;\n        let penY = y_pos;\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    // Note that we don't add any points to the bounding box until a srroke is actually drawn.\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    break;\n                case OutlineCode.LINE:\n                    bboxComp.addPoint(penX, penY);\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    bboxComp.addPoint(penX, penY);\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addQuadraticCurve(penX, penY, go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addBezierCurve(penX, penY, go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n            }\n        }\n        return new BoundingBox(bboxComp.getX1(), bboxComp.getY1(), bboxComp.width(), bboxComp.height());\n    }\n    static getWidth(code, point, category) {\n        const data = Glyph.cache.lookup(code, category);\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const scale = (point * 72) / (data.metrics.font.getResolution() * 100);\n        return data.bbox.getW() * scale;\n    }\n    /**\n     * @param code\n     * @param point\n     * @param options\n     */\n    constructor(code, point, options) {\n        super();\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.bbox = new BoundingBox(0, 0, 0, 0);\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        this.options = {};\n        this.scale = 1;\n        this.code = code;\n        this.point = point;\n        this.originShift = { x: 0, y: 0 };\n        this.x_shift = 0;\n        this.y_shift = 0;\n        if (options) {\n            this.setOptions(options);\n        }\n        else {\n            this.reset();\n        }\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n    getCode() {\n        return this.code;\n    }\n    // eslint-disable-next-line\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.reset();\n    }\n    setPoint(point) {\n        this.point = point;\n        return this;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    setXShift(x_shift) {\n        this.x_shift = x_shift;\n        return this;\n    }\n    getYshift() {\n        return this.y_shift;\n    }\n    setYShift(y_shift) {\n        this.y_shift = y_shift;\n        return this;\n    }\n    reset() {\n        const data = Glyph.cache.lookup(this.code, this.options.category);\n        this.metrics = data.metrics;\n        // Override point from metrics file\n        if (data.point != -1) {\n            this.point = data.point;\n        }\n        this.scale = (this.point * 72) / (this.metrics.font.getResolution() * 100);\n        this.bbox = new BoundingBox(data.bbox.getX() * this.scale, data.bbox.getY() * this.scale, data.bbox.getW() * this.scale, data.bbox.getH() * this.scale);\n    }\n    checkMetrics() {\n        return defined(this.metrics, 'BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n    getMetrics() {\n        const metrics = this.checkMetrics();\n        const metricsScale = metrics.scale;\n        return {\n            x_min: metrics.x_min * this.scale * metricsScale,\n            x_max: metrics.x_max * this.scale * metricsScale,\n            width: this.bbox.getW(),\n            height: this.bbox.getH(),\n            scale: this.scale * metricsScale,\n            x_shift: metrics.x_shift,\n            y_shift: metrics.y_shift,\n            outline: metrics.outline,\n            font: metrics.font,\n            ha: metrics.ha,\n        };\n    }\n    setOriginX(x) {\n        const { bbox } = this;\n        const originX = Math.abs(bbox.getX() / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.originShift.x = -xShift;\n    }\n    setOriginY(y) {\n        const { bbox } = this;\n        const originY = Math.abs(bbox.getY() / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.originShift.y = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n    render(ctx, x, y) {\n        const metrics = this.checkMetrics();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle(ctx);\n        const xPos = x + this.originShift.x + metrics.x_shift;\n        const yPos = y + this.originShift.y + metrics.y_shift;\n        Glyph.renderOutline(ctx, outline, scale, xPos, yPos);\n        this.restoreStyle(ctx);\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    renderToStave(x) {\n        const context = this.checkContext();\n        const metrics = this.checkMetrics();\n        const stave = this.checkStave();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle();\n        const xPos = x + this.x_shift + metrics.x_shift;\n        const yPos = stave.getYForGlyphs() + this.y_shift + metrics.y_shift;\n        Glyph.renderOutline(context, outline, scale, xPos, yPos);\n        this.restoreStyle();\n    }\n}\nGlyph.cache = new GlyphCache();\n// The current cache key for GlyphCache above.\n// Computed when Flow.setMusicFont(...) is called.\n// It is set to a comma separated list of font names.\nGlyph.CURRENT_CACHE_KEY = '';\n// Used by the GlyphCache above.\n// Set when Flow.setMusicFont(...) is called.\nGlyph.MUSIC_FONT_STACK = [];\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n    /**\n     * Modifiers category string. Every modifier has a different category.\n     * The `ModifierContext` uses this to determine the type and order of the modifiers.\n     */\n    static get CATEGORY() {\n        return Category.Modifier;\n    }\n    /** Modifiers can be positioned almost anywhere, relative to a note. */\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    constructor() {\n        super();\n        this.width = 0;\n        // The `text_line` is reserved space above or below a stave.\n        this.text_line = 0;\n        this.position = Modifier.Position.LEFT;\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.spacingFromNextModifier = 0;\n    }\n    /** Called when position changes. */\n    reset() {\n        // DO NOTHING.\n    }\n    /** Get modifier widths. */\n    getWidth() {\n        return this.width;\n    }\n    /** Set modifier widths. */\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    /**\n     * Used in draw() to check and get the attached note (`StaveNote`, `TabNote`, etc.).\n     * Also verifies that the index is valid.\n     */\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    /**\n     * Set attached note.\n     * @param note (`StaveNote`, `TabNote`, etc.)\n     */\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    /** Get note index, which is a specific note in a chord. */\n    getIndex() {\n        return this.index;\n    }\n    /** Check and get note index, which is a specific note in a chord. */\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    /** Set note index, which is a specific note in a chord. */\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'Modifier Context Required');\n    }\n    /** Every modifier must be part of a `ModifierContext`. */\n    setModifierContext(c) {\n        this.modifierContext = c;\n        return this;\n    }\n    /** Get position. */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Set position.\n     * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n     */\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    /** Set the `text_line` for the modifier. */\n    setTextLine(line) {\n        this.text_line = line;\n        return this;\n    }\n    /** Shift modifier down `y` pixels. Negative values shift up. */\n    setYShift(y) {\n        this.y_shift = y;\n        return this;\n    }\n    /** Set spacing from next modifier. */\n    setSpacingFromNextModifier(x) {\n        this.spacingFromNextModifier = x;\n    }\n    /** Get spacing from next modifier. */\n    getSpacingFromNextModifier() {\n        return this.spacingFromNextModifier;\n    }\n    /**\n     * Shift modifier `x` pixels in the direction of the modifier. Negative values\n     * shift reverse.\n     */\n    setXShift(x) {\n        this.x_shift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.x_shift -= x;\n        }\n        else {\n            this.x_shift += x;\n        }\n        return this;\n    }\n    /** Get shift modifier `x` */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render the modifier onto the canvas. */\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n    alignSubNotesWithNote(subNotes, note) {\n        // Shift over the tick contexts of each note\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { RuntimeError } from './util';\n/** Music implements some standard music theory routines. */\nexport class Music {\n    /** Number of an canonical notes (12). */\n    static get NUM_TONES() {\n        return this.canonical_notes.length;\n    }\n    /** Names of root notes ('c', 'd',...) */\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    /** Values of the root notes.*/\n    static get root_values() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    /** Indices of the root notes.*/\n    static get root_indices() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    /** Names of canonical notes ('c', 'c#', 'd',...). */\n    static get canonical_notes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n    static get diatonic_intervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    /** NoteAccidental associated to diatonic intervals. */\n    static get diatonic_accidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    /** Semitones shift associated to intervals .*/\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    /** Semitones shifts associated with scales. */\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    /** Scales associated with m (minor) and M (major). */\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    /** Accidentals abbreviations. */\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    /** Note values. */\n    static get noteValues() {\n        return {\n            c: { root_index: 0, int_val: 0 },\n            cn: { root_index: 0, int_val: 0 },\n            'c#': { root_index: 0, int_val: 1 },\n            'c##': { root_index: 0, int_val: 2 },\n            cb: { root_index: 0, int_val: 11 },\n            cbb: { root_index: 0, int_val: 10 },\n            d: { root_index: 1, int_val: 2 },\n            dn: { root_index: 1, int_val: 2 },\n            'd#': { root_index: 1, int_val: 3 },\n            'd##': { root_index: 1, int_val: 4 },\n            db: { root_index: 1, int_val: 1 },\n            dbb: { root_index: 1, int_val: 0 },\n            e: { root_index: 2, int_val: 4 },\n            en: { root_index: 2, int_val: 4 },\n            'e#': { root_index: 2, int_val: 5 },\n            'e##': { root_index: 2, int_val: 6 },\n            eb: { root_index: 2, int_val: 3 },\n            ebb: { root_index: 2, int_val: 2 },\n            f: { root_index: 3, int_val: 5 },\n            fn: { root_index: 3, int_val: 5 },\n            'f#': { root_index: 3, int_val: 6 },\n            'f##': { root_index: 3, int_val: 7 },\n            fb: { root_index: 3, int_val: 4 },\n            fbb: { root_index: 3, int_val: 3 },\n            g: { root_index: 4, int_val: 7 },\n            gn: { root_index: 4, int_val: 7 },\n            'g#': { root_index: 4, int_val: 8 },\n            'g##': { root_index: 4, int_val: 9 },\n            gb: { root_index: 4, int_val: 6 },\n            gbb: { root_index: 4, int_val: 5 },\n            a: { root_index: 5, int_val: 9 },\n            an: { root_index: 5, int_val: 9 },\n            'a#': { root_index: 5, int_val: 10 },\n            'a##': { root_index: 5, int_val: 11 },\n            ab: { root_index: 5, int_val: 8 },\n            abb: { root_index: 5, int_val: 7 },\n            b: { root_index: 6, int_val: 11 },\n            bn: { root_index: 6, int_val: 11 },\n            'b#': { root_index: 6, int_val: 0 },\n            'b##': { root_index: 6, int_val: 1 },\n            bb: { root_index: 6, int_val: 10 },\n            bbb: { root_index: 6, int_val: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonical_notes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonic_intervals.length;\n    }\n    /** Return root and accidental associated to a note. */\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    /** Return root, accidental and type associated to a key. */\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            // Unspecified type implies major\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    /** Note value associated to a note name. */\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.int_val;\n    }\n    /** Interval value associated to an interval name. */\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    /** Canonical note name associated to a value. */\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonical_notes[noteValue];\n    }\n    /** Interval name associated to a value. */\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonic_intervals[intervalValue];\n    }\n    /**\n     * Given a note, interval, and interval direction, produce the relative note.\n     */\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    /**\n     * Given a root and note value, produce the relative note name.\n     */\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            // Possibly wrap around. (Add +1 for modulo operator)\n            const reverse_interval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverse_interval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverse_interval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    /**\n     * Return scale tones, given intervals. Each successive interval is\n     * relative to the previous one, e.g., Major Scale:\n     *\n     *   TTSTTTS = [2,2,1,2,2,2,1]\n     *\n     * When used with key = 0, returns C scale (which is isomorphic to\n     * interval list).\n     */\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    /**\n     * Return the interval of a note, given a diatonic scale.\n     * e.g., given the scale C, and the note E, returns M3.\n     */\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    /**\n     * Create a scale map that represents the pitch state for a\n     * `keySignature`. For example, passing a `G` to `keySignature` would\n     * return a scale map with every note naturalized except for `F` which\n     * has an `F#` state.\n     */\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.root_indices[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Music } from './music';\nimport { Tables } from './tables';\nimport { Category, isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('Vex.Flow.Accidental', args);\n}\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.ts` for usage examples.\n */\nexport class Accidental extends Modifier {\n    /** Accidentals category string. */\n    static get CATEGORY() {\n        return Category.Accidental;\n    }\n    /** Arrange accidentals inside a ModifierContext. */\n    static format(accidentals, state) {\n        // If there are no accidentals, no need to format their positions.\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const musicFont = Tables.currentMusicFont();\n        const noteheadAccidentalPadding = musicFont.lookupMetric('accidental.noteheadAccidentalPadding');\n        const leftShift = state.left_shift + noteheadAccidentalPadding;\n        const accidentalSpacing = musicFont.lookupMetric('accidental.accidentalSpacing');\n        const additionalPadding = musicFont.lookupMetric('accidental.leftPadding'); // padding to the left of all accidentals\n        const accList = [];\n        let prevNote = undefined;\n        let shiftL = 0;\n        // First determine the accidentals' Y positions from the note.keys\n        for (let i = 0; i < accidentals.length; ++i) {\n            const acc = accidentals[i];\n            const note = acc.getNote();\n            const stave = note.getStave();\n            const index = acc.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), shiftL);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n            }\n            else {\n                accList.push({ line: props.line, shift: shiftL, acc });\n            }\n        }\n        // Sort accidentals by line number.\n        accList.sort((a, b) => b.line - a.line);\n        // FIXME: Confusing name. Each object in this array has a property called `line`.\n        // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n        const lineList = [];\n        // amount by which all accidentals must be shifted right or left for\n        // stem flipping, notehead shifting concerns.\n        let accShift = 0;\n        let previousLine = undefined;\n        // Create an array of unique line numbers (lineList) from accList\n        for (let i = 0; i < accList.length; i++) {\n            const acc = accList[i];\n            // if this is the first line, or a new line, add a lineList\n            if (previousLine === undefined || previousLine !== acc.line) {\n                lineList.push({\n                    line: acc.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                });\n            }\n            // if this accidental is not a flat, the accidental needs 3.0 lines lower\n            // clearance instead of 2.5 lines for b or bb.\n            // FIXME: Naming could use work. acc.acc is very awkward\n            if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n                lineList[lineList.length - 1].flatLine = false;\n            }\n            // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n            if (acc.acc.type !== '##') {\n                lineList[lineList.length - 1].dblSharpLine = false;\n            }\n            // Track how many accidentals are on this line:\n            lineList[lineList.length - 1].numAcc++;\n            // Track the total x_offset needed for this line which will be needed\n            // for formatting lines w/ multiple accidentals:\n            // width = accidental width + universal spacing between accidentals\n            lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n            // if this accShift is larger, use it to keep first column accidentals in the same line\n            accShift = acc.shift > accShift ? acc.shift : accShift;\n            previousLine = acc.line;\n        }\n        // ### Place Accidentals in Columns\n        //\n        // Default to a classic triangular layout (middle accidental farthest left),\n        // but follow exceptions as outlined in G. Read's _Music Notation_ and\n        // Elaine Gould's _Behind Bars_.\n        //\n        // Additionally, this implements different vertical collision rules for\n        // flats (only need 2.5 lines clearance below) and double sharps (only\n        // need 2.5 lines of clearance above or below).\n        //\n        // Classic layouts and exception patterns are found in the 'tables.js'\n        // in 'Tables.accidentalColumnsTable'\n        //\n        // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n        // using as few columns as possible for the verticle structure.\n        //\n        // TODO (?): Allow column to be specified for an accidental at run-time?\n        let totalColumns = 0;\n        // establish the boundaries for a group of notes with clashing accidentals:\n        for (let i = 0; i < lineList.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n                // if this note conflicts with the next:\n                if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n                    // include the next note in the group:\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            // Gets an a line from the `lineList`, relative to the current group\n            const getGroupLine = (index) => lineList[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n            // Set columns for the lines in this group:\n            const groupLength = groupEnd - groupStart + 1;\n            // Set the accidental column for each line of the group\n            let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'second_on_bottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spaced_out_tetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spaced_out_pentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'very_spaced_out_pentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spaced_out_hexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'very_spaced_out_hexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            // If the group contains seven members or more, use ascending parallel lines\n            // of accidentals, using as few columns as possible while avoiding collisions.\n            if (groupLength >= 7) {\n                // First, determine how many columns to use:\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < lineList.length; line++) {\n                        if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                // Then, assign a column to each line of accidentals\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                // If the group contains fewer than seven members, use the layouts from\n                // the Tables.accidentalColumnsTable (See: tables.ts).\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            // Increment i to the last note that was set, so that if a lower set of notes\n            // does not conflict at all with this group, it can have its own classic shape.\n            i = groupEnd;\n        }\n        // ### Convert Columns to x_offsets\n        //\n        // This keeps columns aligned, even if they have different accidentals within them\n        // which sometimes results in a larger x_offset than is an accidental might need\n        // to preserve the symmetry of the accidental shape.\n        //\n        // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n        // music with complex chord clusters.\n        //\n        // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n        // parallel columns.\n        // track each column's max width, which will be used as initial shift of later columns:\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = accShift + leftShift;\n        columnXOffsets[0] = accShift + leftShift;\n        // Fill columnWidths with widest needed x-space;\n        // this is what keeps the columns parallel.\n        lineList.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            // this column's offset = this column's width + previous column's offset\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        // Set the xShift for each accidental according to column offsets:\n        let accCount = 0;\n        lineList.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            // handle all of the accidentals on a given line:\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth;\n                accList[accCount].acc.setXShift(xShift);\n                // keep track of the width of accidentals we've added so far, so that when\n                // we loop, we add space for them.\n                lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        // update the overall layout with the full width of the accidental shapes:\n        state.left_shift += totalShift + additionalPadding;\n    }\n    /** Helper function to determine whether two lines of accidentals collide vertically */\n    static checkCollision(line1, line2) {\n        let clearance = line2.line - line1.line;\n        let clearanceRequired = 3;\n        // But less clearance is required for certain accidentals: b, bb and ##.\n        if (clearance > 0) {\n            // then line 2 is on top\n            clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n            if (line1.dblSharpLine)\n                clearance -= 0.5;\n        }\n        else {\n            // line 1 is on top\n            clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n            if (line2.dblSharpLine)\n                clearance -= 0.5;\n        }\n        const collision = Math.abs(clearance) < clearanceRequired;\n        L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n        return collision;\n    }\n    /**\n     * Use this method to automatically apply accidentals to a set of `voices`.\n     * The accidentals will be remembered between all the voices provided.\n     * Optionally, you can also provide an initial `keySignature`.\n     */\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        // Sort the tickables in each voice by their tick position in the voice.\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        // Default key signature is C major.\n        if (!keySignature)\n            keySignature = 'C';\n        // Get the scale map, which represents the current state of each pitch.\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            // Array to store all pitches that modified accidental states\n            // at this tick position\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                // Only StaveNote implements .addModifier(), which is used below.\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                // Go through each key and determine if an accidental should be applied.\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    // Force a natural for every key without an accidental\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    // Determine if the current pitch has the same accidental\n                    // as the scale state\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    // Determine if an identical pitch in the chord already\n                    // modified the accidental state\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    // Remove accidentals\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    // Add the accidental to the StaveNote\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        // Modify the scale map so that the root pitch has an\n                        // updated state\n                        scaleMap[key.root + octave] = pitch;\n                        // Create the accidental\n                        const accidental = new Accidental(accidentalString);\n                        // Attach the accidental to the StaveNote\n                        staveNote.addModifier(accidental, keyIndex);\n                        // Add the pitch to list of pitches that modified accidentals\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                // process grace notes\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    /**\n     * Create accidental.\n     * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n     * For example: `#`, `##`, `b`, `n`, etc.\n     */\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            // Font size for glyphs\n            font_scale: 38,\n            // Padding between accidental and parentheses on each side\n            parenLeftPadding: 2,\n            parenRightPadding: 2,\n        };\n        this.accidental = Tables.accidentalCodes(this.type);\n        defined(this.accidental, 'ArgumentError', `Unknown accidental type: ${type}`);\n        // Cautionary accidentals have parentheses around them\n        this.cautionary = false;\n        this.reset();\n    }\n    reset() {\n        const fontScale = this.render_options.font_scale;\n        this.glyph = new Glyph(this.accidental.code, fontScale);\n        this.glyph.setOriginX(1.0);\n        if (this.cautionary) {\n            this.parenLeft = new Glyph(Tables.accidentalCodes('{').code, fontScale);\n            this.parenRight = new Glyph(Tables.accidentalCodes('}').code, fontScale);\n            this.parenLeft.setOriginX(1.0);\n            this.parenRight.setOriginX(1.0);\n        }\n    }\n    /** Get width in pixels. */\n    getWidth() {\n        if (this.cautionary) {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            const parenWidth = parenLeft.getMetrics().width +\n                parenRight.getMetrics().width +\n                this.render_options.parenLeftPadding +\n                this.render_options.parenRightPadding;\n            return this.glyph.getMetrics().width + parenWidth;\n        }\n        else {\n            return this.glyph.getMetrics().width;\n        }\n    }\n    /** Attach this accidental to `note`, which must be a `StaveNote`. */\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        // Accidentals attached to grace notes are rendered smaller.\n        if (isGraceNote(note)) {\n            this.render_options.font_scale = 25;\n            this.reset();\n        }\n        return this;\n    }\n    /** If called, draws parenthesis around accidental. */\n    setAsCautionary() {\n        this.cautionary = true;\n        this.render_options.font_scale = 28;\n        this.reset();\n        return this;\n    }\n    /** Render accidental onto canvas. */\n    draw() {\n        const { type, position, index, cautionary, x_shift, y_shift, glyph, render_options: { parenLeftPadding, parenRightPadding }, } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // Figure out the start `x` and `y` coordinates for note and index.\n        const start = note.getModifierStartXY(position, index);\n        let accX = start.x + x_shift;\n        const accY = start.y + y_shift;\n        L('Rendering: ', type, accX, accY);\n        if (!cautionary) {\n            glyph.render(ctx, accX, accY);\n        }\n        else {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            // Render the accidental in parentheses.\n            parenRight.render(ctx, accX, accY);\n            accX -= parenRight.getMetrics().width;\n            accX -= parenRightPadding;\n            accX -= this.accidental.parenRightPaddingAdjustment;\n            glyph.render(ctx, accX, accY);\n            accX -= glyph.getMetrics().width;\n            accX -= parenLeftPadding;\n            parenLeft.render(ctx, accX, accY);\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\nAccidental.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('Vex.Flow.Stem', args);\n}\nexport class Stem extends Element {\n    static get CATEGORY() {\n        return Category.Stem;\n    }\n    // Stem directions\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    // Theme\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    constructor(options) {\n        super();\n        this.stem_up_y_offset = 0;\n        this.stem_down_y_offset = 0;\n        this.stem_up_y_base_offset = 0;\n        this.stem_down_y_base_offset = 0;\n        // Default notehead x bounds\n        this.x_begin = (options === null || options === void 0 ? void 0 : options.x_begin) || 0;\n        this.x_end = (options === null || options === void 0 ? void 0 : options.x_end) || 0;\n        // Y bounds for top/bottom most notehead\n        this.y_top = (options === null || options === void 0 ? void 0 : options.y_top) || 0;\n        this.y_bottom = (options === null || options === void 0 ? void 0 : options.y_bottom) || 0;\n        // Stem top extension\n        this.stem_extension = (options === null || options === void 0 ? void 0 : options.stem_extension) || 0;\n        // Direction of the stem\n        this.stem_direction = (options === null || options === void 0 ? void 0 : options.stem_direction) || 0;\n        // Flag to override all draw calls\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (options === null || options === void 0 ? void 0 : options.stemletHeight) || 0;\n        // Use to adjust the rendered height without affecting\n        // the results of `.getExtents()`\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        // Changing where the stem meets the head\n        this.stem_up_y_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_offset) || 0;\n        this.stem_down_y_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_offset) || 0;\n        this.stem_up_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_base_offset) || 0;\n        this.stem_down_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_base_offset) || 0;\n    }\n    // Set the x bounds for the default notehead\n    setNoteHeadXBounds(x_begin, x_end) {\n        this.x_begin = x_begin;\n        this.x_end = x_end;\n        return this;\n    }\n    // Set the direction of the stem in relation to the noteheads\n    setDirection(direction) {\n        this.stem_direction = direction;\n    }\n    // Set the extension for the stem, generally for flags or beams\n    setExtension(ext) {\n        this.stem_extension = ext;\n    }\n    getExtension() {\n        return this.stem_extension;\n    }\n    // The the y bounds for the top and bottom noteheads\n    setYBounds(y_top, y_bottom) {\n        this.y_top = y_top;\n        this.y_bottom = y_bottom;\n    }\n    // Gets the entire height for the stem\n    getHeight() {\n        const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n        const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension); // parentheses just for grouping.\n        return unsigned_height * this.stem_direction;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    // Get the y coordinates for the very base of the stem to the top of\n    // the extension\n    getExtents() {\n        const isStemUp = this.stem_direction === Stem.UP;\n        const ys = [this.y_top, this.y_bottom];\n        const stemHeight = Stem.HEIGHT + this.stem_extension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Tables.currentMusicFont().lookupMetric('stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    // Render the stem onto the canvas\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stem_x;\n        let stem_y;\n        const stem_direction = this.stem_direction;\n        let y_base_offset = 0;\n        if (stem_direction === Stem.DOWN) {\n            // Down stems are rendered to the left of the head.\n            stem_x = this.x_begin;\n            stem_y = this.y_top + this.stem_down_y_offset;\n            y_base_offset = this.stem_down_y_base_offset;\n        }\n        else {\n            // Up stems are rendered to the right of the head.\n            stem_x = this.x_end;\n            stem_y = this.y_bottom - this.stem_up_y_offset;\n            y_base_offset = this.stem_up_y_base_offset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n        // The offset from the stem's base which is required fo satisfy the stemlet height\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n        // Draw the stem\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('stem', this.getAttribute('id'), { pointerBBox: true });\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n        ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n        ctx.stroke();\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`. */\nStem.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextFormatter.DEBUG)\n        log('Vex.Flow.TextFormatter', args);\n}\n/**\n * Text widths are stored in a cache, so we don't have to recompute widths\n * for the same font + string combination.\n *\n * The cache is first keyed by the font information. The key is of the form:\n *   `${family}-${size}-${weight}-${style}`\n * The second level key is the specific text to be measured.\n *\n * The stored value is the measured width in `em` units.\n *   textWidth == textWidthCache[cacheKey][textToMeasure]\n */\nconst textWidthCache = {};\nconst textHeightCache = {};\n/**\n * Applications may register additional fonts via `TextFormatter.registerInfo(info)`.\n * The metrics for those fonts will be made available to the application.\n */\nconst registry = {};\nexport class TextFormatter {\n    /**\n     * Return all registered font families.\n     */\n    static getFontFamilies() {\n        const registeredFonts = [];\n        for (const fontFamily in registry) {\n            const formatterInfo = registry[fontFamily];\n            registeredFonts.push(Object.assign({}, formatterInfo));\n        }\n        return registeredFonts;\n    }\n    /**\n     * Call `TextFormatter.registerInfo(info)` to register font information before using this method.\n     *\n     * This method creates a formatter for the font that most closely matches the requested font.\n     * We compare font family, bold, and italic attributes.\n     * This method will return a fallback formatter if there are no matches.\n     */\n    static create(requestedFont = {}) {\n        L('create: ', requestedFont);\n        if (!requestedFont.family) {\n            requestedFont.family = Font.SANS_SERIF;\n        }\n        // TODO: One potential (small) optimization is to cache the TextFormatter object\n        // returned for each font info. We would probably want to clear the cache if\n        // the registry is ever updated.\n        const candidates = [];\n        // The incoming font family is a string of comma-separated font family names.\n        // (e.g., `PetalumaScript, Arial, sans-serif`).\n        const requestedFamilies = requestedFont.family.split(/\\s*,\\s*/);\n        for (const requestedFamily of requestedFamilies) {\n            for (const fontFamily in registry) {\n                // Support cases where the registry contains 'Roboto Slab Medium',\n                // but the requestedFont.family is 'Roboto Slab'.\n                if (fontFamily.startsWith(requestedFamily)) {\n                    candidates.push(registry[fontFamily]);\n                }\n            }\n            if (candidates.length > 0) {\n                break;\n            }\n        }\n        let formatter;\n        if (candidates.length === 0) {\n            // No match, so return a fallback text formatter.\n            formatter = new TextFormatter(Object.values(registry)[0]);\n        }\n        else if (candidates.length === 1) {\n            formatter = new TextFormatter(candidates[0]);\n        }\n        else {\n            const bold = Font.isBold(requestedFont.weight);\n            const italic = Font.isItalic(requestedFont.style);\n            const perfectMatch = candidates.find((f) => f.bold === bold && f.italic === italic);\n            if (perfectMatch) {\n                formatter = new TextFormatter(perfectMatch);\n            }\n            else {\n                const partialMatch = candidates.find((f) => f.italic === italic || f.bold === bold);\n                if (partialMatch) {\n                    formatter = new TextFormatter(partialMatch);\n                }\n                else {\n                    formatter = new TextFormatter(candidates[0]);\n                }\n            }\n        }\n        const fontSize = requestedFont.size;\n        if (typeof fontSize !== 'undefined') {\n            const fontSizeInPt = Font.convertSizeToPointValue(fontSize);\n            formatter.setFontSize(fontSizeInPt);\n        }\n        return formatter;\n    }\n    /**\n     * @param fontFamily used as a key to the font registry.\n     * @returns the same info object that was passed in via `TextFormatter.registerInfo(info)`\n     */\n    static getInfo(fontFamily) {\n        return registry[fontFamily];\n    }\n    /**\n     * Apps may register their own fonts and metrics, and those metrics\n     * will be available to the app for formatting.\n     *\n     * Metrics can be generated from a font file using fontgen_text.js in the tools/fonts directory.\n     * @param info\n     * @param overwrite\n     */\n    static registerInfo(info, overwrite = false) {\n        L('registerInfo: ', info, overwrite);\n        const fontFamily = info.family;\n        const currFontInfo = registry[fontFamily];\n        if (currFontInfo === undefined || overwrite) {\n            registry[fontFamily] = info;\n        }\n    }\n    /**\n     * Use `TextFormatter.create(...)` to build an instance from information previously\n     * registered via `TextFormatter.registerInfo(info)`.\n     */\n    constructor(formatterInfo) {\n        /** Font family. */\n        this.family = '';\n        /** Specified in `pt` units. */\n        this.size = 14;\n        /** Font metrics are extracted at 1000 upem (units per em). */\n        this.resolution = 1000;\n        /**\n         * For text formatting, we do not require glyph outlines, but instead rely on glyph\n         * bounding box metrics such as:\n         * ```\n         * {\n         *    x_min: 48,\n         *    x_max: 235,\n         *    y_min: -17,\n         *    y_max: 734,\n         *    ha: 751,\n         *    leftSideBearing: 48,\n         *    advanceWidth: 286,\n         *  }\n         * ```\n         */\n        this.glyphs = {};\n        this.serifs = false;\n        this.monospaced = false;\n        this.italic = false;\n        this.bold = false;\n        this.superscriptOffset = 0;\n        this.subscriptOffset = 0;\n        this.maxSizeGlyph = '@';\n        // This is an internal key used to index the `textWidthCache`.\n        this.cacheKey = '';\n        this.updateParams(formatterInfo);\n    }\n    get localHeightCache() {\n        var _a;\n        if (textHeightCache[this.cacheKey] === undefined) {\n            textHeightCache[this.cacheKey] = {};\n        }\n        return (_a = textHeightCache[this.cacheKey]) !== null && _a !== void 0 ? _a : {};\n    }\n    updateParams(params) {\n        if (params.family)\n            this.family = params.family;\n        if (params.resolution)\n            this.resolution = params.resolution;\n        if (params.glyphs)\n            this.glyphs = params.glyphs;\n        if (params.serifs)\n            this.serifs = params.serifs;\n        if (params.monospaced)\n            this.monospaced = params.monospaced;\n        if (params.italic)\n            this.italic = params.italic;\n        if (params.bold)\n            this.bold = params.bold;\n        if (params.maxSizeGlyph)\n            this.maxSizeGlyph = params.maxSizeGlyph;\n        if (params.superscriptOffset)\n            this.superscriptOffset = params.superscriptOffset;\n        if (params.subscriptOffset)\n            this.subscriptOffset = params.subscriptOffset;\n        this.updateCacheKey();\n    }\n    /** Create a hash with the current font data, so we can cache computed widths. */\n    updateCacheKey() {\n        const family = this.family.replace(/\\s+/g, '_');\n        const size = this.size;\n        const weight = this.bold ? FontWeight.BOLD : FontWeight.NORMAL;\n        const style = this.italic ? FontStyle.ITALIC : FontStyle.NORMAL;\n        // Use the same key format as SVGContext.\n        this.cacheKey = `${family}%${size}%${weight}%${style}`;\n    }\n    /**\n     * The glyphs table is indexed by the character (e.g., 'C', '@').\n     * See: robotoslab_glyphs.ts & petalumascript_glyphs.ts.\n     */\n    getGlyphMetrics(character) {\n        if (this.glyphs[character]) {\n            return this.glyphs[character];\n        }\n        else {\n            return this.glyphs[this.maxSizeGlyph];\n        }\n    }\n    get maxHeight() {\n        const metrics = this.getGlyphMetrics(this.maxSizeGlyph);\n        return (metrics.ha / this.resolution) * this.fontSizeInPixels;\n    }\n    /**\n     * Retrieve the character's advanceWidth as a fraction of an `em` unit.\n     * For the space character ' ' as defined in the:\n     *   petalumascript_glyphs.ts: 250 advanceWidth in the 1000 unitsPerEm font returns 0.25.\n     *   robotoslab_glyphs.ts:     509 advanceWidth in the 2048 unitsPerEm font returns 0.2485.\n     */\n    getWidthForCharacterInEm(c) {\n        var _a;\n        const metrics = this.getGlyphMetrics(c);\n        if (!metrics) {\n            // An arbitrary number, close to the `em` width of the '#' and '5' characters in PetalumaScript.\n            return 0.65;\n        }\n        else {\n            const advanceWidth = (_a = metrics.advanceWidth) !== null && _a !== void 0 ? _a : 0;\n            return advanceWidth / this.resolution;\n        }\n    }\n    /**\n     * Retrieve the character's y bounds (ymin, ymax) and height.\n     */\n    getYForCharacterInPx(c) {\n        const metrics = this.getGlyphMetrics(c);\n        const rv = { yMin: 0, yMax: this.maxHeight, height: this.maxHeight };\n        if (!metrics) {\n            return rv;\n        }\n        else {\n            if (typeof metrics.y_min === 'number') {\n                rv.yMin = (metrics.y_min / this.resolution) * this.fontSizeInPixels;\n            }\n            if (typeof metrics.y_max === 'number') {\n                rv.yMax = (metrics.y_max / this.resolution) * this.fontSizeInPixels;\n            }\n            rv.height = rv.yMax - rv.yMin;\n            return rv;\n        }\n    }\n    getYForStringInPx(str) {\n        const entry = this.localHeightCache;\n        const extent = { yMin: 0, yMax: this.maxHeight, height: this.maxHeight };\n        const cache = entry[str];\n        if (cache !== undefined) {\n            return cache;\n        }\n        for (let i = 0; i < str.length; ++i) {\n            const curY = this.getYForCharacterInPx(str[i]);\n            extent.yMin = Math.min(extent.yMin, curY.yMin);\n            extent.yMax = Math.max(extent.yMax, curY.yMax);\n            extent.height = extent.yMax - extent.yMin;\n        }\n        entry[str] = extent;\n        return extent;\n    }\n    /**\n     * Retrieve the total width of `text` in `em` units.\n     */\n    getWidthForTextInEm(text) {\n        const key = this.cacheKey;\n        // Get the cache for this specific font family, size, weight, style combination.\n        // The cache contains previously computed widths for different `text` strings.\n        let cachedWidths = textWidthCache[key];\n        if (cachedWidths === undefined) {\n            cachedWidths = {};\n            textWidthCache[key] = cachedWidths;\n        }\n        let width = cachedWidths[text];\n        if (width === undefined) {\n            width = 0;\n            for (let i = 0; i < text.length; ++i) {\n                width += this.getWidthForCharacterInEm(text[i]);\n            }\n            cachedWidths[text] = width;\n        }\n        return width;\n    }\n    /** The width of the text (in `em`) is scaled by the font size (in `px`). */\n    getWidthForTextInPx(text) {\n        return this.getWidthForTextInEm(text) * this.fontSizeInPixels;\n    }\n    /**\n     * @param size in pt.\n     */\n    setFontSize(size) {\n        this.size = size;\n        // The width cache key depends on the current font size.\n        this.updateCacheKey();\n        return this;\n    }\n    /** `this.size` is specified in points. Convert to pixels. */\n    get fontSizeInPixels() {\n        return this.size * Font.scaleToPxFrom.pt;\n    }\n    getResolution() {\n        return this.resolution;\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextFormatter.DEBUG` to `true`. */\nTextFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote, isTabNote } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('Vex.Flow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nexport class Annotation extends Modifier {\n    /** Annotations category string. */\n    static get CATEGORY() {\n        return Category.Annotation;\n    }\n    // Use the same padding for annotations as note head so the\n    // words don't run into each other.\n    static get minAnnotationPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Arrange annotations within a `ModifierContext` */\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            const textFormatter = TextFormatter.create(annotation.textFont);\n            // Text height is expressed in fractional stave spaces.\n            const textLines = (2 + textFormatter.getYForStringInPx(annotation.text).height) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const glyphWidth = note.getGlyphProps().getWidth();\n            // Get the text width from the font metrics.\n            const textWidth = textFormatter.getWidthForTextInPx(annotation.text);\n            if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n                maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n            }\n            else if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n                maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                rightWidth = Math.max(rightWidth, textWidth);\n            }\n            else {\n                leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n                rightWidth = Math.max(rightWidth, textWidth / 2);\n                maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n            }\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (isTabNote(note)) {\n                if (note.render_options.draw_stem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (isTabNote(note)) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.top_text_line + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.top_text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.top_text_line);\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (isTabNote(note)) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.text_line + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.text_line);\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.text_line);\n            }\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    /**\n     * Annotations inherit from `Modifier` and is positioned correctly when\n     * in a `ModifierContext`.\n     * Create a new `Annotation` with the string `text`.\n     */\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        // warning: the default in the constructor is TOP, but in the factory the default is BOTTOM.\n        // this is to support legacy application that may expect this.\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n        this.resetFont();\n        // The default width is calculated from the text.\n        this.setWidth(Tables.textWidth(text));\n    }\n    /**\n     * Set vertical position of text (above or below stave).\n     * @param just value in `AnnotationVerticalJustify`.\n     */\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    /**\n     * Get horizontal justification.\n     */\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    /**\n     * Set horizontal justification.\n     * @param justification value in `Annotation.Justify`.\n     */\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    /** Render text beside the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const textFormatter = TextFormatter.create(this.textFont);\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        // Apply style might not save context, if this.style is undefined, so we\n        // still need to save context state just before this, since we will be\n        // changing ctx parameters below.\n        this.applyStyle();\n        ctx.openGroup('annotation', this.getAttribute('id'));\n        ctx.setFont(this.textFont);\n        const text_width = textFormatter.getWidthForTextInPx(this.text);\n        const text_height = textFormatter.getYForStringInPx(this.text).height;\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - text_width;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - text_width / 2;\n        } /* CENTER_STEM */\n        else {\n            x = note.getStemX() - text_width / 2;\n        }\n        let stem_ext = {};\n        let spacing = 0;\n        const has_stem = note.hasStem();\n        const stave = note.checkStave();\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        if (has_stem) {\n            stem_ext = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            // Use the largest (lowest) Y value\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE + text_height;\n            if (has_stem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stem_ext.topY + text_height + spacing * this.text_line);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.text_line) - 1;\n            const yb = stave.getYForBottomText(this.text_line);\n            y = yt + (yb - yt) / 2 + text_height / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            const topY = Math.min(...note.getYs());\n            y = topY - (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (has_stem && stemDirection === Stem.UP) {\n                // If the stem is above the stave already, go with default line width vs. actual\n                // since the lines between don't really matter.\n                spacing = stem_ext.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stem_ext.topY - spacing * (this.text_line + 1));\n            }\n        } /* CENTER_STEM */\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        ctx.fillText(this.text, x, y);\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\nAnnotation.DEBUG = false;\nAnnotation.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n/** Text annotations can be positioned and justified relative to the note. */\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('Vex.Flow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\n// This includes both staff and ledger lines\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    // Initially, snap to nearest staff line or space\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\n// Helper function for checking if a Note object is either a StaveNote or a GraceNote.\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nfunction getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nfunction getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\n/**\n * Get the initial offset of the articulation from the y value of the starting position.\n * This is required because the top/bottom text positions already have spacing applied to\n * provide a \"visually pleasant\" default position. However the y values provided from\n * the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n * normalizes this asymmetry.\n * @param note\n * @param position\n * @returns\n */\nfunction getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            // this amount is larger than the stem-tip offset because we start from\n            // the center of the notehead\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.ts` for usage examples.\n */\nexport class Articulation extends Modifier {\n    /** Articulations category string. */\n    static get CATEGORY() {\n        return Category.Articulation;\n    }\n    /**\n     * FIXME:\n     * Most of the complex formatting logic (ie: snapping to space) is\n     * actually done in .render(). But that logic belongs in this method.\n     *\n     * Unfortunately, this isn't possible because, by this point, stem lengths\n     * have not yet been finalized. Finalized stem lengths are required to determine the\n     * initial position of any stem-side articulation.\n     *\n     * This indicates that all objects should have their stave set before being\n     * formatted. It can't be an optional if you want accurate vertical positioning.\n     * Consistently positioned articulations that play nice with other modifiers\n     * won't be possible until we stop relying on render-time formatting.\n     *\n     * Ideally, when this function has completed, the vertical articulation positions\n     * should be ready to render without further adjustment. But the current state\n     * is far from this ideal.\n     */\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        let maxGlyphWidth = 0;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), defined(articulation.glyph.getMetrics().height) / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            maxGlyphWidth = Math.max(note.getGlyphProps().getWidth(), maxGlyphWidth);\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            // Decide if we need to consider beam direction in placement.\n            if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.top_text_line, ABOVE);\n                const curTop = noteLine + state.top_text_line + 0.5;\n                // If articulation must be above stave, add lines between note and stave top\n                if (!articulation.articulation.between_lines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.top_text_line);\n                state.top_text_line += increment;\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.text_line, BELOW);\n                const curBottom = noteLine + state.text_line + 0.5;\n                // if articulation must be below stave, add lines from note to stave bottom\n                if (!articulation.articulation.between_lines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.text_line);\n                state.text_line += increment;\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        const overlap = Math.min(Math.max(width - maxGlyphWidth, 0), Math.max(width - (state.left_shift + state.right_shift), 0));\n        state.left_shift += overlap / 2;\n        state.right_shift += overlap / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(artic, 0));\n    }\n    /**\n     * Create a new articulation.\n     * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts`\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.position = BELOW;\n        this.render_options = {\n            font_scale: 38,\n        };\n        this.reset();\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        const articulation = defined(this.articulation, 'ArgumentError', `Articulation not found: ${this.type}`);\n        const code = (this.position === ABOVE ? articulation.aboveCode : articulation.belowCode) || articulation.code;\n        this.glyph = new Glyph(code !== null && code !== void 0 ? code : '', this.render_options.font_scale);\n        this.setWidth(defined(this.glyph.getMetrics().width));\n    }\n    /** Render articulation in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, glyph, text_line: textLine } = this;\n        const canSitBetweenLines = this.articulation.between_lines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        // Articulations are centered over/under the note head.\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        const padding = Tables.currentMusicFont().lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n        let y = {\n            [ABOVE]: () => {\n                glyph.setOrigin(0.5, 1);\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                glyph.setOrigin(0.5, 0);\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                glyph.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + padding * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        glyph.render(ctx, x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2021.\n// MIT License\nimport { Category } from './typeguard';\nexport class RenderContext {\n    static get CATEGORY() {\n        return Category.RenderContext;\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n    /**\n     * This is kept for backwards compatibility with 3.0.9.\n     * @deprecated use `setFont(...)` instead since it now supports CSS font shorthand.\n     */\n    setRawFont(f) {\n        this.setFont(f);\n        return this;\n    }\n}\n/**\n * Draw a tiny dot marker on the specified context. A great debugging aid.\n * @param ctx context\n * @param x dot x coordinate\n * @param y dot y coordinate\n * @param color\n */\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    // draw a circle\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport class Tickable extends Element {\n    static get CATEGORY() {\n        return Category.Tickable;\n    }\n    constructor() {\n        super();\n        this._preFormatted = false;\n        this._postFormatted = false;\n        // These properties represent the duration of\n        // this tickable element.\n        this.ticks = new Fraction(0, 1); // Fractional value of ticks\n        this.intrinsicTicks = 0; // Floating point value of ticks\n        this.tickMultiplier = new Fraction(1, 1);\n        // Formatter metrics\n        this.width = 0;\n        this.x_shift = 0; // Shift from tick context\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.align_center = false;\n        this.center_x_shift = 0; // Shift from tick context if center aligned\n        // This flag tells the formatter to ignore this tickable during\n        // formatting and justification. It is set by tickables such as BarNote.\n        this.ignore_ticks = false;\n        // This is a space for an external formatting class or function to maintain\n        // metrics.\n        this.formatterMetrics = {\n            // The freedom of a tickable is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n            // The simplified rational duration of this tick as a string. It can be\n            // used as an index to a map or hashtable.\n            duration: '',\n            // The number of formatting iterations undergone.\n            iterations: 0,\n            // The space in pixels allocated by this formatter, along with the mean space\n            // for tickables of this duration, and the deviation from the mean.\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    /** Reset the Tickable, this function will be overloaded. */\n    reset() {\n        return this;\n    }\n    /** Return the ticks. */\n    getTicks() {\n        return this.ticks;\n    }\n    /** Check if it ignores the ticks. */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Ignore the ticks. */\n    setIgnoreTicks(flag) {\n        this.ignore_ticks = flag;\n        return this;\n    }\n    /** Set width of note. Used by the formatter for positioning. */\n    setWidth(width) {\n        this.width = width;\n    }\n    /** Get width of note. Used by the formatter for positioning. */\n    getWidth() {\n        if (!this._preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    /** Displace note by `x` pixels. Used by the formatter. */\n    setXShift(x) {\n        this.x_shift = x;\n        return this;\n    }\n    /** Get the `x` displaced pixels of the note. */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Get `x` position of this tick context. */\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.x_shift;\n    }\n    /** Return the formatterMetrics. */\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    /** Return the center `x` shift. */\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.center_x_shift;\n        }\n        return 0;\n    }\n    /** Set the center `x` shift. */\n    setCenterXShift(centerXShift) {\n        this.center_x_shift = centerXShift;\n        return this;\n    }\n    // Check if tickable is center aligned. */\n    isCenterAligned() {\n        return this.align_center;\n    }\n    // Set/unset center alignment. */\n    setCenterAlignment(align_center) {\n        this.align_center = align_center;\n        return this;\n    }\n    /**\n     * Return the associated voice. Every tickable must be associated with a voice.\n     * This allows formatters and preFormatter to associate them with the right modifierContexts.\n     */\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    /** Set the associated voice. */\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    /** Get the tuplet. */\n    getTuplet() {\n        return this.tuplet;\n    }\n    /** Return the intrinsic ticks. */\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    /**\n     * Reset the specific Tuplet if this is not provided, all tuplets are reset.\n     * Remove any prior tuplets from the tick calculation and\n     * reset the intrinsic tick value.\n     */\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                // Revert old multiplier by inverting numerator & denom.:\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            // Revert old multiplier by inverting numerator & denom.:\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    /** Attach to new tuplet. */\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    /**\n     * Add self to the provided ModifierContext `mc`.\n     * If this tickable has modifiers, set modifierContext.\n     * @returns this\n     */\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        this._preFormatted = false;\n        return this;\n    }\n    /**\n     * Optional, if tickable has modifiers, associate a Modifier.\n     * @param mod the modifier\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        this._preFormatted = false;\n        return this;\n    }\n    /** Get the list of associated modifiers. */\n    getModifiers() {\n        return this.modifiers;\n    }\n    /** Set the Tick Context. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this._preFormatted = false;\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    /** Preformat the Tickable. */\n    preFormat() {\n        if (this._preFormatted)\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    /** Set preformatted status. */\n    set preFormatted(value) {\n        this._preFormatted = value;\n    }\n    get preFormatted() {\n        return this._preFormatted;\n    }\n    /** Postformat the Tickable. */\n    postFormat() {\n        if (this._postFormatted)\n            return this;\n        this._postFormatted = true;\n        return this;\n    }\n    /** Set postformatted status. */\n    set postFormatted(value) {\n        this._postFormatted = value;\n    }\n    get postFormatted() {\n        return this._postFormatted;\n    }\n    /** Return the intrinsic ticks. */\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    /** Set the intrinsic ticks. */\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Get the tick multiplier. */\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    /** Apply a tick multiplier. */\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Set the duration. */\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    /** Attach this note to a modifier context. */\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { drawDot } from './rendercontext';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport class Note extends Tickable {\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Note;\n    }\n    /** Debug helper. Displays various note metrics for the given note. */\n    static plotMetrics(ctx, note, yPos) {\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        // Preserve backwards-compatibility\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        // If specified type is invalid, return undefined.\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        // If no type specified, check duration or custom types\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            // If we have keys, try and check if we've got a custom glyph\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    // We have a custom glyph specified after the note eg. /X2\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        // Calculate the tick duration of the note\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        // Are there any dots?\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        // Add ticks as necessary depending on the numbr of dots\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    /**\n     * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n     * positioning and layout.\n     *\n     * @param noteStruct To create a new note you need to provide a `noteStruct`.\n     */\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        /** Parses `noteStruct` and get note properties. */\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        // Set note properties from parameters.\n        this.keys = noteStruct.keys || [];\n        // per-pitch properties\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.duration_override) {\n            // Custom duration\n            this.setDuration(noteStruct.duration_override);\n        }\n        else {\n            // Default duration\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        // Get the glyph code for this note from the font.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Tables.getGlyphProps(this.duration, t));\n        // Note to play for audio players.\n        this.playNote = undefined;\n        // Positioning contexts used by the Formatter.\n        this.ignore_ticks = false;\n        // Positioning variables\n        this.width = 0; // Width in pixels calculated after preFormat\n        this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n        this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n        this.x_shift = 0; // X shift from tick context X\n        this.ys = []; // list of y coordinates for each note\n        // we need to hold on to these for ties and beams.\n        if (noteStruct.align_center) {\n            this.setCenterAlignment(noteStruct.align_center);\n        }\n        // The render surface.\n        this.render_options = {\n            annotation_spacing: 5,\n            glyph_font_scale: 1,\n            stroke_px: 1,\n            scale: 1,\n            font: '',\n            y_shift: 0,\n        };\n    }\n    /**\n     * Get the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    getPlayNote() {\n        return this.playNote;\n    }\n    /**\n     * Set the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    /**\n     * @returns true if this note is a type of rest.\n     *\n     * Rests don't have pitches, but take up space in the score.\n     * Subclasses should override this default implementation.\n     */\n    isRest() {\n        return false;\n    }\n    /** Add stroke. */\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the target stave. */\n    getStave() {\n        return this.stave;\n    }\n    /** Check and get the target stave. */\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /** Set the target stave. */\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    /** Get spacing to the left of the notes. */\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    /** Get spacing to the right of the notes. */\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    /** Set spacing to the left of the notes. */\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    /** Set spacing to the right of the notes. */\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Get the stave line number for the note. */\n    // eslint-disable-next-line\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    /** Get the stave line number for rest. */\n    getLineForRest() {\n        return 0;\n    }\n    /**\n     * @deprecated Use `getGlyphProps()` instead.\n     */\n    // eslint-disable-next-line\n    getGlyph() {\n        return this.glyphProps;\n    }\n    /** Get the glyph associated with this note. */\n    getGlyphProps() {\n        return this.glyphProps;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return this.glyphProps.getWidth(this.render_options.glyph_font_scale);\n    }\n    /**\n     * Set Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    /**\n     * Get Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    /**\n     * Get the Y position of the space above the stave onto which text can\n     * be rendered.\n     */\n    getYForTopText(text_line) {\n        return this.checkStave().getYForTopText(text_line);\n    }\n    /** Return the voice that this note belongs in. */\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    /** Attach this note to `voice`. */\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the `TickContext` for this note. */\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    /** Set the `TickContext` for this note. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Accessor to duration. */\n    getDuration() {\n        return this.duration;\n    }\n    /** Accessor to isDotted. */\n    isDotted() {\n        return this.getModifiersByType('Dot').length > 0;\n    }\n    /** Accessor to hasStem. */\n    hasStem() {\n        return false;\n    }\n    /** Accessor to note type. */\n    getNoteType() {\n        return this.noteType;\n    }\n    /** Get the beam. */\n    getBeam() {\n        return this.beam;\n    }\n    /** Check and get the beam. */\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    /** Check it has a beam. */\n    hasBeam() {\n        return this.beam != undefined;\n    }\n    /** Set the beam. */\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    /**\n     * Attach a modifier to this note.\n     * @param modifier the Modifier to add.\n     * @param index of the key to modify.\n     * @returns this\n     */\n    addModifier(modifier, index = 0) {\n        const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n        // Backwards compatibility with 3.0.9.\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            // eslint-disable-next-line\n            console.warn(signature + ' expected a number for `index`, but received a string.');\n        }\n        // Some versions of VexFlow had the two parameters reversed.\n        // Check here and throw an error if the argument types are not correct.\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        super.addModifier(modifier);\n        return this;\n    }\n    /** Get all modifiers of a specific type in `this.modifiers`. */\n    getModifiersByType(type) {\n        return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n    }\n    /** Get the coordinates for where modifiers begin. */\n    // eslint-disable-next-line\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    getRightParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n    }\n    getLeftParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getLeftDisplacedHeadPx() - this.x_shift : -this.x_shift;\n    }\n    getFirstDotPx() {\n        let px = this.getRightDisplacedHeadPx();\n        if (this.checkModifierContext().getMembers('Parenthesis').length !== 0)\n            px += Tables.currentMusicFont().lookupMetric('parenthesis.default.width');\n        return px;\n    }\n    /** Get the metrics for this note. */\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.getState().left_shift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.getState().right_shift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx - // subtract left modifiers\n            modRightPx - // subtract right modifiers\n            this.leftDisplacedHeadPx - // subtract left displaced head\n            this.rightDisplacedHeadPx; // subtract right displaced head\n        // NOTE: If you change this, remember to update MockTickable.getMetrics() in the tests/ directory.\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            // Modifier spacing.\n            modLeftPx,\n            modRightPx,\n            // Displaced note head on left or right.\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    /**\n     * Get the absolute `X` position of this note's tick context. This\n     * excludes x_shift, so you'll need to factor it in if you're\n     * looking for the post-formatted x-position.\n     */\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        // Position note to left edge of tick context.\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Tables.currentMusicFont().lookupMetric('stave.padding');\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    /** Get the direction of the stem. */\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the top and bottom `y` values of the stem. */\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the `x` coordinate to the right of the note. */\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const note_glyph_width = this.glyphProps.getWidth();\n        tieStartX += note_glyph_width / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    /** Get the `x` coordinate to the left of the note. */\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const note_glyph_width = this.glyphProps.getWidth();\n        tieEndX += note_glyph_width / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    // Get the pitches in the note\n    getKeys() {\n        return this.keys;\n    }\n    // Get the properties for all the keys in the note\n    getKeyProps() {\n        return this.keyProps;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    static get CATEGORY() {\n        return Category.StaveModifier;\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    constructor() {\n        super();\n        this.width = 0;\n        this.x = 0;\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    placeGlyphOnLine(glyph, stave, line, customShift = 0) {\n        glyph.setYShift(stave.getYForLine(line !== null && line !== void 0 ? line : 0) - stave.getYForGlyphs() + customShift);\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Barline;\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    // Draw barlines\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('stavebarline', this.getAttribute('id'));\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                // If the barline is shifted over (in front of clef/time/key)\n                // Draw vertical bar at the beginning.\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n    drawVerticalBar(stave, x, double_bar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (double_bar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let x_shift = 3;\n        if (!begin) {\n            x_shift = -5;\n        }\n        staveCtx.fillRect(x + x_shift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dot_radius = 2;\n        // Shift dots left or right\n        if (begin) {\n            x_shift += 4;\n        }\n        else {\n            x_shift -= 4;\n        }\n        const dot_x = x + x_shift + dot_radius / 2;\n        // calculate the y offset based on number of stave lines\n        let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dot_y = topY + y_offset + dot_radius / 2;\n        // draw the top repeat dot\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        // draw the bottom repeat dot\n        dot_y += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author: Aaron (@AaronDavidNewman)\n//\n// This implements chord symbols above/below a chord.\n// Chord symbols are modifiers that can be attached to notes.\n// They can contain multiple 'blocks' which represent text or\n// glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.ts` for usage examples.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('Vex.Flow.ChordSymbol', args);\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolTypes;\n(function (SymbolTypes) {\n    SymbolTypes[SymbolTypes[\"GLYPH\"] = 1] = \"GLYPH\";\n    SymbolTypes[SymbolTypes[\"TEXT\"] = 2] = \"TEXT\";\n    SymbolTypes[SymbolTypes[\"LINE\"] = 3] = \"LINE\";\n})(SymbolTypes || (SymbolTypes = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\n/**\n * ChordSymbol is a modifier that creates a chord symbol above/below a chord.\n * As a modifier, it is attached to an existing note.\n */\nexport class ChordSymbol extends Modifier {\n    static get CATEGORY() {\n        return Category.ChordSymbol;\n    }\n    static get superSubRatio() {\n        return ChordSymbol.metrics.global.superSubRatio;\n    }\n    /** Currently unused: Globally turn off text formatting, if the built-in formatting does not work for your font. */\n    static set NO_TEXT_FORMAT(val) {\n        ChordSymbol.noFormat = val;\n    }\n    static get NO_TEXT_FORMAT() {\n        return ChordSymbol.noFormat;\n    }\n    // eslint-disable-next-line\n    static getMetricForGlyph(glyphCode) {\n        if (ChordSymbol.metrics[glyphCode]) {\n            return ChordSymbol.metrics[glyphCode];\n        }\n        return undefined;\n    }\n    static get engravingFontResolution() {\n        return Tables.currentMusicFont().getResolution();\n    }\n    static get spacingBetweenBlocks() {\n        return ChordSymbol.metrics.global.spacing / ChordSymbol.engravingFontResolution;\n    }\n    static getWidthForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0.65; // probably should do something here.\n        }\n        return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n    }\n    static getYShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return metric.yOffset / ChordSymbol.engravingFontResolution;\n    }\n    static getXShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n    }\n    static get superscriptOffset() {\n        return ChordSymbol.metrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get subscriptOffset() {\n        return ChordSymbol.metrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get kerningOffset() {\n        return ChordSymbol.metrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n    }\n    // eslint-disable-next-line\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.chordSymbol;\n    }\n    static get lowerKerningText() {\n        // For example, see: `bravura_metrics.ts`\n        // BravuraMetrics.glyphs.chordSymbol.global.lowerKerningText, which returns an array of letters.\n        // ['D', 'F', 'P', 'T', 'V', 'Y']\n        return ChordSymbol.metrics.global.lowerKerningText;\n    }\n    static get upperKerningText() {\n        return ChordSymbol.metrics.global.upperKerningText;\n    }\n    static isSuperscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    static isSubscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /**\n     * Estimate the width of the whole chord symbol, based on the sum of the widths of the individual blocks.\n     * Estimate how many lines above/below the staff we need.\n     */\n    static format(symbols, state) {\n        var _a;\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let nonSuperWidth = 0;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (const symbol of symbols) {\n            const fontSize = Font.convertSizeToPointValue((_a = symbol.textFont) === null || _a === void 0 ? void 0 : _a.size);\n            const fontAdj = Font.scaleSize(fontSize, 0.05);\n            const glyphAdj = fontAdj * 2;\n            const note = symbol.checkAttachedNote();\n            let symbolWidth = 0;\n            let lineSpaces = 1;\n            let vAlign = false;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = ChordSymbol.isSuperscript(block);\n                const sub = ChordSymbol.isSubscript(block);\n                const superSubScale = sup || sub ? ChordSymbol.superSubRatio : 1;\n                const adj = block.symbolType === SymbolTypes.GLYPH ? glyphAdj * superSubScale : fontAdj * superSubScale;\n                // If there are super/subscripts, they extend beyond the line so\n                // assume they take up 2 lines\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                // If there is a symbol-specific offset, add it but consider font\n                // size since font and glyphs will be interspersed.\n                const fontSize = symbol.textFormatter.fontSizeInPixels;\n                const superSubFontSize = fontSize * superSubScale;\n                if (block.symbolType === SymbolTypes.GLYPH && block.glyph !== undefined) {\n                    block.width = ChordSymbol.getWidthForGlyph(block.glyph) * superSubFontSize;\n                    block.yShift += ChordSymbol.getYShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.xShift += ChordSymbol.getXShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.glyph.scale = block.glyph.scale * adj;\n                }\n                else if (block.symbolType === SymbolTypes.TEXT) {\n                    block.width = block.width * superSubFontSize;\n                    block.yShift += symbol.getYOffsetForText(block.text) * adj;\n                }\n                if (block.symbolType === SymbolTypes.GLYPH &&\n                    block.glyph !== undefined &&\n                    block.glyph.code === ChordSymbol.glyphs.over.code) {\n                    lineSpaces = 2;\n                }\n                block.width += ChordSymbol.spacingBetweenBlocks * fontSize * superSubScale;\n                // If a subscript immediately  follows a superscript block, try to\n                // overlay them.\n                if (sup && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (!ChordSymbol.isSuperscript(prev)) {\n                        nonSuperWidth = width;\n                    }\n                }\n                if (sub && nonSuperWidth > 0) {\n                    vAlign = true;\n                    // slide the symbol over so it lines up with superscript\n                    block.xShift = block.xShift + (nonSuperWidth - width);\n                    width = nonSuperWidth;\n                    nonSuperWidth = 0;\n                    // If we have vertically lined up, turn kerning off.\n                    symbol.setEnableKerning(false);\n                }\n                if (!sup && !sub) {\n                    nonSuperWidth = 0;\n                }\n                block.vAlign = vAlign;\n                width += block.width;\n                symbolWidth = width;\n            }\n            // make kerning adjustments after computing super/subscripts\n            symbol.updateKerningAdjustments();\n            symbol.updateOverBarAdjustments();\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.top_text_line);\n                state.top_text_line += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.text_line + 1);\n                state.text_line += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth() && isStemmableNote(note)) {\n                const glyphWidth = note.getGlyphProps().getWidth();\n                if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.LEFT) {\n                    maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                    leftWidth = Math.max(leftWidth, symbolWidth) + ChordSymbol.minPadding;\n                }\n                else if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.RIGHT) {\n                    maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                    rightWidth = Math.max(rightWidth, symbolWidth);\n                }\n                else {\n                    leftWidth = Math.max(leftWidth, symbolWidth / 2) + ChordSymbol.minPadding;\n                    rightWidth = Math.max(rightWidth, symbolWidth / 2);\n                    maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                    maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n                }\n            }\n            width = 0; // reset symbol width\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.useKerning = true;\n        this.reportWidth = true;\n        this.resetFont();\n    }\n    /**\n     * Default text font.\n     * Choose a font family that works well with the current music engraving font.\n     * @override `Element.TEXT_FONT`.\n     */\n    static get TEXT_FONT() {\n        let family = 'Roboto Slab, Times, serif';\n        if (Tables.currentMusicFont().getName() === 'Petaluma') {\n            // Fixes Issue #1180\n            family = 'PetalumaScript, Arial, sans-serif';\n        }\n        return {\n            family,\n            size: 12,\n            weight: FontWeight.NORMAL,\n            style: FontStyle.NORMAL,\n        };\n    }\n    /**\n     * The offset is specified in `em`. Scale this value by the font size in pixels.\n     */\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    updateOverBarAdjustments() {\n        const barIndex = this.symbolBlocks.findIndex(({ symbolType, glyph }) => symbolType === SymbolTypes.GLYPH && glyph !== undefined && glyph.code === 'csymDiagonalArrangementSlash');\n        if (barIndex < 0) {\n            return;\n        }\n        const bar = this.symbolBlocks[barIndex];\n        const xoff = bar.width / 4;\n        const yoff = 0.25 * this.textFormatter.fontSizeInPixels;\n        let symIndex = 0;\n        for (symIndex === 0; symIndex < barIndex; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift + xoff;\n            symbol.yShift = symbol.yShift - yoff;\n        }\n        for (symIndex = barIndex + 1; symIndex < this.symbolBlocks.length; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift - xoff;\n            symbol.yShift = symbol.yShift + yoff;\n        }\n    }\n    updateKerningAdjustments() {\n        let accum = 0;\n        for (let j = 0; j < this.symbolBlocks.length; ++j) {\n            const symbol = this.symbolBlocks[j];\n            accum += this.getKerningAdjustment(j);\n            symbol.xShift += accum;\n        }\n    }\n    /** Do some basic kerning so that letter chords like 'A' don't have the extensions hanging off to the right. */\n    getKerningAdjustment(j) {\n        if (!this.useKerning) {\n            return 0;\n        }\n        const currSymbol = this.symbolBlocks[j];\n        const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : undefined;\n        let adjustment = 0;\n        // Move things into the '/' over bar\n        if (currSymbol.symbolType === SymbolTypes.GLYPH &&\n            currSymbol.glyph !== undefined &&\n            currSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += currSymbol.glyph.metrics.x_shift;\n        }\n        if (prevSymbol !== undefined &&\n            prevSymbol.symbolType === SymbolTypes.GLYPH &&\n            prevSymbol.glyph !== undefined &&\n            prevSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += prevSymbol.glyph.metrics.x_shift;\n        }\n        // For superscripts that follow a letter without much top part, move it to the left slightly\n        let preKernUpper = false;\n        let preKernLower = false;\n        if (prevSymbol !== undefined && prevSymbol.symbolType === SymbolTypes.TEXT) {\n            preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n            preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n        }\n        const kerningOffsetPixels = ChordSymbol.kerningOffset * this.textFormatter.fontSizeInPixels;\n        // TODO: adjust kern for font size.\n        // Where should this constant live?\n        if (preKernUpper && currSymbol.symbolModifier === SymbolModifiers.SUPERSCRIPT) {\n            adjustment += kerningOffsetPixels;\n        }\n        if (preKernLower && currSymbol.symbolType === SymbolTypes.TEXT) {\n            if (currSymbol.text[0] >= 'a' && currSymbol.text[0] <= 'z') {\n                adjustment += kerningOffsetPixels / 2;\n            }\n            if (ChordSymbol.upperKerningText.some((xx) => xx === (prevSymbol === null || prevSymbol === void 0 ? void 0 : prevSymbol.text[prevSymbol.text.length - 1]))) {\n                adjustment += kerningOffsetPixels / 2;\n            }\n        }\n        return adjustment;\n    }\n    /**\n     * ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n     * Each block can have its own vertical orientation.\n     */\n    // eslint-disable-next-line\n    getSymbolBlock(params = {}) {\n        var _a, _b, _c;\n        const symbolType = (_a = params.symbolType) !== null && _a !== void 0 ? _a : SymbolTypes.TEXT;\n        const symbolBlock = {\n            text: (_b = params.text) !== null && _b !== void 0 ? _b : '',\n            symbolType,\n            symbolModifier: (_c = params.symbolModifier) !== null && _c !== void 0 ? _c : SymbolModifiers.NONE,\n            xShift: 0,\n            yShift: 0,\n            vAlign: false,\n            width: 0,\n        };\n        // Note: symbol widths are resolution and font-independent.\n        // We convert to pixel values when we know what the font is.\n        if (symbolType === SymbolTypes.GLYPH && typeof params.glyph === 'string') {\n            const glyphArgs = ChordSymbol.glyphs[params.glyph];\n            const glyphPoints = 20;\n            symbolBlock.glyph = new Glyph(glyphArgs.code, glyphPoints, { category: 'chordSymbol' });\n            // Beware: glyph.metrics is not the same as glyph.getMetrics() !\n            // rv.glyph.point = rv.glyph.point * rv.glyph.metrics.scale;\n            // rv.width = rv.glyph.getMetrics().width;\n            // don't set yShift here, b/c we need to do it at formatting time after the font is set.\n        }\n        else if (symbolType === SymbolTypes.TEXT) {\n            symbolBlock.width = this.textFormatter.getWidthForTextInEm(symbolBlock.text);\n        }\n        else if (symbolType === SymbolTypes.LINE) {\n            symbolBlock.width = params.width;\n        }\n        return symbolBlock;\n    }\n    /** Add a symbol to this chord, could be text, glyph or line. */\n    // eslint-disable-next-line\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    // ### Convenience functions for creating different types of chord symbol parts.\n    /** Add a text block. */\n    // eslint-disable-next-line\n    addText(text, parameters = {}) {\n        const symbolType = SymbolTypes.TEXT;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text, symbolType }));\n    }\n    /** Add a text block with superscript modifier. */\n    addTextSuperscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a text block with subscript modifier. */\n    addTextSubscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a glyph block with superscript modifier. */\n    addGlyphSuperscript(glyph) {\n        const symbolType = SymbolTypes.GLYPH;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ glyph, symbolType, symbolModifier });\n    }\n    /** Add a glyph block. */\n    // eslint-disable-next-line\n    addGlyph(glyph, params = {}) {\n        const symbolType = SymbolTypes.GLYPH;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { glyph, symbolType }));\n    }\n    /**\n     * Add a glyph for each character in 'text'. If the glyph is not available, use text from the font.\n     * e.g. `addGlyphOrText('(+5#11)')` will use text for the '5' and '11', and glyphs for everything else.\n     */\n    // eslint-disable-next-line\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            if (ChordSymbol.glyphs[char]) {\n                if (str.length > 0) {\n                    this.addText(str, params);\n                    str = '';\n                }\n                this.addGlyph(char, params);\n            }\n            else {\n                // Collect consecutive characters with no glyphs.\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    /** Add a line of the given width, used as a continuation of the previous symbol in analysis, or lyrics, etc. */\n    // eslint-disable-next-line\n    addLine(width, params = {}) {\n        const symbolType = SymbolTypes.LINE;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { symbolType, width }));\n    }\n    /**\n     * Set the chord symbol's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     *\n     * @override See: Element.\n     */\n    setFont(f, size, weight, style) {\n        super.setFont(f, size, weight, style);\n        this.textFormatter = TextFormatter.create(this.textFont);\n        return this;\n    }\n    setEnableKerning(val) {\n        this.useKerning = val;\n        return this;\n    }\n    /** Set vertical position of text (above or below stave). */\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    /** Set horizontal justification. */\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    getWidth() {\n        let width = 0;\n        this.symbolBlocks.forEach((symbol) => {\n            width += symbol.vAlign ? 0 : symbol.width;\n        });\n        return width;\n    }\n    getYOffsetForText(text) {\n        var _a;\n        let acc = 0;\n        let i = 0;\n        for (i = 0; i < text.length; ++i) {\n            const metrics = this.textFormatter.getGlyphMetrics(text[i]);\n            if (metrics) {\n                const yMax = (_a = metrics.y_max) !== null && _a !== void 0 ? _a : 0;\n                acc = yMax < acc ? yMax : acc;\n            }\n        }\n        const resolution = this.textFormatter.getResolution();\n        return i > 0 ? -1 * (acc / resolution) : 0;\n    }\n    /** Render text and glyphs above/below the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('chordsymbol', this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.textFont);\n        let y;\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            // HACK: We need to compensate for the text's height since its origin is bottom-right.\n            y = stave.getYForBottomText(this.text_line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stem_base = note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n                y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n            }\n        }\n        else {\n            // (this.vertical === VerticalJustify.TOP)\n            const topY = Math.min(...note.getYs());\n            y = Math.min(stave.getYForTopText(this.text_line), topY - 10);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            // HorizontalJustify.CENTER_STEM\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', this.textFormatter, x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            const isSuper = ChordSymbol.isSuperscript(symbol);\n            const isSub = ChordSymbol.isSubscript(symbol);\n            let curY = y;\n            L('shift was ', symbol.xShift, symbol.yShift);\n            L('curY pre sub ', curY);\n            if (isSuper) {\n                curY += this.superscriptOffset;\n            }\n            if (isSub) {\n                curY += this.subscriptOffset;\n            }\n            L('curY sup/sub ', curY);\n            if (symbol.symbolType === SymbolTypes.TEXT) {\n                if (isSuper || isSub) {\n                    ctx.save();\n                    if (this.textFont) {\n                        const { family, size, weight, style } = this.textFont;\n                        const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n                        ctx.setFont(family, smallerFontSize, weight, style);\n                    }\n                }\n                // TODO???\n                // We estimate the text width, fill it in with the empirical value so the formatting is even.\n                // const textDim = ctx.measureText(symbol.text);\n                // symbol.width = textDim.width;\n                L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                ctx.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                if (isSuper || isSub) {\n                    ctx.restore();\n                }\n            }\n            else if (symbol.symbolType === SymbolTypes.GLYPH && symbol.glyph) {\n                curY += symbol.yShift;\n                L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n                symbol.glyph.render(ctx, x + symbol.xShift, curY);\n            }\n            else if (symbol.symbolType === SymbolTypes.LINE) {\n                L('Rendering Line : ', symbol.width, x, curY);\n                ctx.beginPath();\n                ctx.setLineWidth(1); // ?\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + symbol.width, curY);\n                ctx.stroke();\n            }\n            x += symbol.width;\n            if (symbol.vAlign) {\n                x += symbol.xShift;\n            }\n        });\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\nChordSymbol.DEBUG = false;\n// Chord symbols can be positioned and justified relative to the note.\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\n// Glyph data\nChordSymbol.glyphs = {\n    diminished: {\n        code: 'csymDiminished',\n    },\n    dim: {\n        code: 'csymDiminished',\n    },\n    halfDiminished: {\n        code: 'csymHalfDiminished',\n    },\n    '+': {\n        code: 'csymAugmented',\n    },\n    augmented: {\n        code: 'csymAugmented',\n    },\n    majorSeventh: {\n        code: 'csymMajorSeventh',\n    },\n    minor: {\n        code: 'csymMinor',\n    },\n    '-': {\n        code: 'csymMinor',\n    },\n    '(': {\n        code: 'csymParensLeftTall',\n    },\n    leftParen: {\n        code: 'csymParensLeftTall',\n    },\n    ')': {\n        code: 'csymParensRightTall',\n    },\n    rightParen: {\n        code: 'csymParensRightTall',\n    },\n    leftBracket: {\n        code: 'csymBracketLeftTall',\n    },\n    rightBracket: {\n        code: 'csymBracketRightTall',\n    },\n    leftParenTall: {\n        code: 'csymParensLeftVeryTall',\n    },\n    rightParenTall: {\n        code: 'csymParensRightVeryTall',\n    },\n    '/': {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    over: {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    '#': {\n        code: 'accidentalSharp',\n    },\n    b: {\n        code: 'accidentalFlat',\n    },\n};\nChordSymbol.symbolTypes = SymbolTypes;\nChordSymbol.symbolModifiers = SymbolModifiers;\n/** Currently unused. */\nChordSymbol.noFormat = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('Vex.Flow.BarNote', args);\n}\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.ts` for usage examples.\n */\nexport class BarNote extends Note {\n    static get CATEGORY() {\n        return Category.BarNote;\n    }\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        // Tell the formatter that bar notes have no duration.\n        this.ignore_ticks = true;\n        this.setType(type);\n    }\n    /** Get the type of bar note.*/\n    getType() {\n        return this.type;\n    }\n    /** Set the type of bar note. */\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        // Set width to width of relevant `Barline`.\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    /** Overridden to ignore. */\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render note to stave. */\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        this.applyStyle(ctx);\n        const barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.draw(this.checkStave());\n        this.restoreStyle(ctx);\n        this.setRendered();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\nBarNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { TextFormatter } from './textformatter';\nimport { Category, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n/** Bend implements tablature bends. */\nexport class Bend extends Modifier {\n    static get CATEGORY() {\n        return Category.Bend;\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    // Arrange bends in `ModifierContext`\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let last_width = 0;\n        // Format Bends\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (isTabNote(note)) {\n                const stringPos = note.leastString() - 1;\n                if (state.top_text_line < stringPos) {\n                    state.top_text_line = stringPos;\n                }\n            }\n            bend.setXShift(last_width);\n            last_width = bend.getWidth();\n            bend.setTextLine(state.top_text_line);\n        }\n        state.right_shift += last_width;\n        state.top_text_line += 1;\n        return true;\n    }\n    /**\n     * Example of a phrase:\n     * ```\n     *    [{\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"half\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"1 1/2\"\n     *     width: 8;\n     *   }]\n     * ```\n     * @param text text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n     * @param release if true, render a release. (DEPRECATED)\n     * @param phrase if set, ignore \"text\" and \"release\", and use the more sophisticated phrase specified\n     */\n    constructor(text, release = false, phrase) {\n        super();\n        this.text = text;\n        this.x_shift = 0;\n        this.release = release;\n        this.tap = '';\n        this.resetFont();\n        this.render_options = {\n            line_width: 1.5,\n            line_style: '#777777',\n            bend_width: 8,\n            release_width: 8,\n        };\n        if (phrase) {\n            this.phrase = phrase;\n        }\n        else {\n            // Backward compatibility\n            this.phrase = [{ type: Bend.UP, text: this.text }];\n            if (this.release)\n                this.phrase.push({ type: Bend.DOWN, text: '' });\n        }\n        this.updateWidth();\n    }\n    /** Set horizontal shift in pixels. */\n    setXShift(value) {\n        this.x_shift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    /** Get text provided in the constructor. */\n    getText() {\n        return this.text;\n    }\n    getTextHeight() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        return textFormatter.maxHeight;\n    }\n    /** Recalculate width. */\n    updateWidth() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        const measureText = (text) => {\n            return textFormatter.getWidthForTextInPx(text);\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additional_width = bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n                bend.width = Math.max(additional_width, measureText(bend.text)) + 3;\n                bend.draw_width = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.x_shift);\n        return this;\n    }\n    /** Draw the bend on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const x_shift = this.x_shift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        // this.text_line is relative to top string in the group.\n        const bend_height = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) + 3;\n        const annotation_y = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cp_x = x + width;\n            const cp_y = y;\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderRelease = (x, y, width, height) => {\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y); // tip of the arrow\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const render_x = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, render_x, annotation_y);\n            ctx.restore();\n        };\n        let last_bend = undefined;\n        let last_bend_draw_width = 0;\n        let last_drawn_width = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.draw_width)\n                bend.draw_width = 0;\n            if (i === 0)\n                bend.draw_width += x_shift;\n            last_drawn_width = bend.draw_width + last_bend_draw_width - (i === 1 ? x_shift : 0);\n            if (bend.type === Bend.UP) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderArrowHead(start.x, bend_height, +1);\n                }\n                renderBend(start.x, start.y, last_drawn_width, bend_height);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (last_bend && last_bend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (!last_bend) {\n                    last_drawn_width = bend.draw_width;\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n            }\n            renderText(start.x + last_drawn_width, bend.text);\n            last_bend = bend;\n            last_bend_draw_width = bend.draw_width;\n            last_bend.x = start.x;\n            start.x += last_drawn_width;\n        }\n        if (!last_bend || last_bend.x == undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        // Final arrowhead and text\n        if (last_bend.type === Bend.UP) {\n            renderArrowHead(last_bend.x + last_drawn_width, bend_height, +1);\n        }\n        else if (last_bend.type === Bend.DOWN) {\n            renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n        }\n    }\n}\n/** Default text font. */\nBend.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\nimport { Modifier } from './modifier';\nimport { Category, isGraceNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Dot extends Modifier {\n    static get CATEGORY() {\n        return Category.Dot;\n    }\n    /** Returns the dots associated to a Note. */\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    /** Add a dot on the specified keys to the notes. */\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                    note.addModifier(dot, i);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) != undefined) {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                note.addModifier(dot, options === null || options === void 0 ? void 0 : options.index);\n            }\n            else {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                note.addModifier(dot, 0);\n            }\n        }\n    }\n    // Arrange dots inside a ModifierContext.\n    static format(dots, state) {\n        const right_shift = state.right_shift;\n        const dot_spacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dot_list = [];\n        const max_shift_map = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                // consider right displaced head with no previous modifier\n                shift = note.getFirstDotPx();\n            }\n            else if (isTabNote(note)) {\n                props = { line: 0.5 }; // Shim key props for dot placement\n                shift = right_shift;\n            }\n            else {\n                // note object is not StaveNote or TabNote.\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const note_id = note.getAttribute('id');\n            dot_list.push({ line: props.line, note, note_id, dot });\n            max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n        }\n        // Sort dots by line number.\n        dot_list.sort((a, b) => b.line - a.line);\n        let dot_shift = right_shift;\n        let x_width = 0;\n        let last_line = null;\n        let last_note = null;\n        let prev_dotted_space = null;\n        let half_shiftY = 0;\n        for (let i = 0; i < dot_list.length; ++i) {\n            const { dot, note, note_id, line } = dot_list[i];\n            // Reset the position of the dot every line.\n            if (line !== last_line || note !== last_note) {\n                dot_shift = max_shift_map[note_id];\n            }\n            if (!note.isRest() && line !== last_line) {\n                if (Math.abs(line % 1) === 0.5) {\n                    // note is on a space, so no dot shift\n                    half_shiftY = 0;\n                }\n                else {\n                    // note is on a line, so shift dot to space above the line\n                    half_shiftY = 0.5;\n                    if (last_note != null && !last_note.isRest() && last_line != null && last_line - line === 0.5) {\n                        // previous note on a space, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                    else if (line + half_shiftY === prev_dotted_space) {\n                        // previous space is dotted, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                }\n            }\n            // convert half_shiftY to a multiplier for dots.draw()\n            if (note.isRest()) {\n                dot.dot_shiftY += -half_shiftY;\n            }\n            else {\n                dot.dot_shiftY = -half_shiftY;\n            }\n            prev_dotted_space = line + half_shiftY;\n            dot.setXShift(dot_shift);\n            dot_shift += dot.getWidth() + dot_spacing; // spacing\n            x_width = dot_shift > x_width ? dot_shift : x_width;\n            last_line = line;\n            last_note = note;\n        }\n        // Update state.\n        state.right_shift += x_width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.radius = 2;\n        this.setWidth(5);\n        this.dot_shiftY = 0;\n    }\n    setNote(note) {\n        this.note = note;\n        if (isGraceNote(note)) {\n            this.radius *= 0.5;\n            this.setWidth(3);\n        }\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dot_shiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        // Set the starting y coordinate to the base of the stem for TabNotes.\n        if (isTabNote(note)) {\n            start.y = note.getStemExtents().baseY;\n        }\n        const x = start.x + this.x_shift + this.width - this.radius;\n        const y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class FretHandFinger extends Modifier {\n    static get CATEGORY() {\n        return Category.FretHandFinger;\n    }\n    // Arrange fingerings inside a ModifierContext.\n    static format(nums, state) {\n        const { left_shift, right_shift } = state;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const textFormatter = TextFormatter.create(num.textFont);\n            const textHeight = textFormatter.maxHeight;\n            if (num.position === ModifierPosition.ABOVE) {\n                state.top_text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (num.position === ModifierPosition.BELOW) {\n                state.text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (right_shift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prev_note = note;\n            }\n            nums_list.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort fingernumbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = left_shift + shiftL;\n                numShiftR = right_shift + shiftR;\n            }\n            const numWidth = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift + numShiftL);\n                num_shift = left_shift + numWidth; // spacing\n                xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                num_shift = shiftRight + numWidth; // spacing\n                xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.left_shift += xWidthL;\n        state.right_shift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(fingering, index));\n    }\n    constructor(finger) {\n        super();\n        this.finger = finger;\n        this.width = 7;\n        this.position = Modifier.Position.LEFT; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.resetFont();\n    }\n    setFretHandFinger(finger) {\n        this.finger = finger;\n        return this;\n    }\n    getFretHandFinger() {\n        return this.finger;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let dot_y = start.y + this.y_shift + this.y_offset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dot_x -= 4;\n                dot_y -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dot_x -= 2;\n                dot_y += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        ctx.save();\n        ctx.setFont(this.textFont);\n        ctx.fillText('' + this.finger, dot_x, dot_y);\n        ctx.restore();\n    }\n}\nFretHandFinger.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('Vex.Flow.NoteHead', args);\n}\n/**\n * Draw slashnote head manually. No glyph exists for this.\n * @param ctx the Canvas context\n * @param duration the duration of the note. ex: \"4\"\n * @param x the x coordinate to draw at\n * @param y the y coordinate to draw at\n * @param stem_direction the direction of the stem\n */\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n    const width = Tables.SLASH_NOTEHEAD_WIDTH;\n    ctx.save();\n    ctx.setLineWidth(Tables.STEM_WIDTH);\n    let fill = false;\n    if (Tables.durationToNumber(duration) > 2) {\n        fill = true;\n    }\n    if (!fill)\n        x -= (Tables.STEM_WIDTH / 2) * stem_direction;\n    ctx.beginPath();\n    ctx.moveTo(x, y + staveSpace);\n    ctx.lineTo(x, y + 1);\n    ctx.lineTo(x + width, y - staveSpace);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x, y + staveSpace);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    else {\n        ctx.stroke();\n    }\n    if (Tables.durationToFraction(duration).equals(0.5)) {\n        const breve_lines = [-3, -1, width + 1, width + 3];\n        for (let i = 0; i < breve_lines.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(x + breve_lines[i], y - 10);\n            ctx.lineTo(x + breve_lines[i], y + 11);\n            ctx.stroke();\n        }\n    }\n    ctx.restore();\n}\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nexport class NoteHead extends Note {\n    static get CATEGORY() {\n        return Category.NoteHead;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.custom_glyph = false;\n        this.stem_up_x_offset = 0;\n        this.stem_down_x_offset = 0;\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.note_type)\n            this.noteType = noteStruct.note_type;\n        this.displaced = noteStruct.displaced || false;\n        this.stem_direction = noteStruct.stem_direction || Stem.UP;\n        this.line = noteStruct.line || 0;\n        // Get glyph code based on duration and note type. This could be\n        // regular notes, rests, or other custom codes.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // Swap out the glyph with ledger lines\n        if ((this.line > 5 || this.line < 0) && this.glyphProps.ledger_code_head) {\n            this.glyphProps.code_head = this.glyphProps.ledger_code_head;\n        }\n        this.glyph_code = this.glyphProps.code_head;\n        this.x_shift = noteStruct.x_shift || 0;\n        if (noteStruct.custom_glyph_code) {\n            this.custom_glyph = true;\n            this.glyph_code = noteStruct.custom_glyph_code;\n            this.stem_up_x_offset = noteStruct.stem_up_x_offset || 0;\n            this.stem_down_x_offset = noteStruct.stem_down_x_offset || 0;\n        }\n        this.setStyle(noteStruct.style);\n        this.slashed = noteStruct.slashed || false;\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE });\n        this.setWidth(this.custom_glyph &&\n            !this.glyph_code.startsWith('noteheadSlashed') &&\n            !this.glyph_code.startsWith('noteheadCircled')\n            ? Glyph.getWidth(this.glyph_code, this.render_options.glyph_font_scale)\n            : this.glyphProps.getWidth(this.render_options.glyph_font_scale));\n    }\n    /** Get the width of the notehead. */\n    getWidth() {\n        return this.width;\n    }\n    /** Determine if the notehead is displaced. */\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    /** Set the X coordinate. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Get the Y coordinate. */\n    getY() {\n        return this.y;\n    }\n    /** Set the Y coordinate. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Get the stave line the notehead is placed on. */\n    getLine() {\n        return this.line;\n    }\n    /** Set the stave line the notehead is placed on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Get the canvas `x` coordinate position of the notehead. */\n    getAbsoluteX() {\n        // If the note has not been preformatted, then get the static x value\n        // Otherwise, it's been formatted and we should use it's x value relative\n        // to its tick context\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        // For a more natural displaced notehead, we adjust the displacement amount\n        // by half the stem width in order to maintain a slight overlap with the stem\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        const musicFont = Tables.currentMusicFont();\n        const fontShift = musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n        const displacedFontShift = musicFont.lookupMetric('noteHead.displaced.shiftX', 0) * this.stem_direction;\n        return (x +\n            fontShift +\n            (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0));\n    }\n    /** Get the `BoundingBox` for the `NoteHead`. */\n    getBoundingBox() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const spacing = this.checkStave().getSpacingBetweenLines();\n        const half_spacing = spacing / 2;\n        const min_y = this.y - half_spacing;\n        return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n    }\n    /** Set notehead to a provided `stave`. */\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n        this.setWidth(width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the notehead. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let head_x = this.getAbsoluteX();\n        if (this.custom_glyph) {\n            // head_x += this.x_shift;\n            head_x +=\n                this.stem_direction === Stem.UP\n                    ? this.stem_up_x_offset +\n                        (this.glyphProps.stem ? this.glyphProps.getWidth(this.render_options.glyph_font_scale) - this.width : 0)\n                    : this.stem_down_x_offset;\n        }\n        const y = this.y;\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", head_x, y);\n        // Begin and end positions for head.\n        const stem_direction = this.stem_direction;\n        const glyph_font_scale = this.render_options.glyph_font_scale;\n        const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n        if (this.noteType === 's') {\n            const staveSpace = this.checkStave().getSpacingBetweenLines();\n            drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n        }\n        else {\n            Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n                category: `noteHead.standard.${categorySuffix}`,\n            });\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\nNoteHead.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StemmableNote extends Note {\n    static get CATEGORY() {\n        return Category.StemmableNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n    }\n    // Get and set the note's `Stem`\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        this.addChildElement(stem);\n        return this;\n    }\n    // Builds and sets a new stem\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag(category = 'flag') {\n        const { glyphProps } = this;\n        if (this.hasFlag()) {\n            const flagCode = this.getStemDirection() === Stem.DOWN ? glyphProps.code_flag_downstem : glyphProps.code_flag_upstem;\n            if (flagCode)\n                this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, { category });\n        }\n    }\n    // Get the custom glyph associated with the outer note head on the base of the stem.\n    getBaseCustomNoteHeadGlyphProps() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    // Get the full length of stem\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    // Get the number of beams for this duration\n    getBeamCount() {\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            return glyphProps.beam_count;\n        }\n        else {\n            return 0;\n        }\n    }\n    // Get the minimum length of stem\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        let length = frac.value() <= 1 ? 0 : 20;\n        // if note is flagged, cannot shorten beam\n        switch (this.duration) {\n            case '8':\n                if (this.beam == undefined)\n                    length = 35;\n                break;\n            case '16':\n                length = this.beam == undefined ? 35 : 25;\n                break;\n            case '32':\n                length = this.beam == undefined ? 45 : 35;\n                break;\n            case '64':\n                length = this.beam == undefined ? 50 : 40;\n                break;\n            case '128':\n                length = this.beam == undefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    // Get/set the direction of the stem\n    getStemDirection() {\n        if (!this.stem_direction)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem_direction;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stem_direction = direction;\n        // Reset and reformat everything. Flag has to be built before calling getStemExtension.\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n            // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n            // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n            const glyphProps = this.getBaseCustomNoteHeadGlyphProps() || this.getGlyphProps();\n            // Get the font-specific customizations for the note heads.\n            const offsets = Tables.currentMusicFont().lookupMetric(`stem.noteHead.${glyphProps.code_head}`, {\n                offsetYBaseStemUp: 0,\n                offsetYTopStemUp: 0,\n                offsetYBaseStemDown: 0,\n                offsetYTopStemDown: 0,\n            });\n            // Configure the stem to use these offsets.\n            this.stem.setOptions({\n                stem_up_y_offset: offsets.offsetYTopStemUp,\n                stem_down_y_offset: offsets.offsetYTopStemDown,\n                stem_up_y_base_offset: offsets.offsetYBaseStemUp,\n                stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n            });\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    // Get the `x` coordinate of the stem\n    getStemX() {\n        const x_begin = this.getAbsoluteX() + this.x_shift;\n        const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n        const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n        return stem_x;\n    }\n    // Get the `x` coordinate for the center of the glyph.\n    // Used for `TabNote` stems and stemlets over rests\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n    }\n    // Get the stem extension for the current duration\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        if (this.stem_extension_override != undefined) {\n            return this.stem_extension_override;\n        }\n        // Use stem_beam_extension with beams\n        if (this.beam) {\n            return glyphProps.stem_beam_extension;\n        }\n        if (glyphProps) {\n            return this.getStemDirection() === Stem.UP ? glyphProps.stem_up_extension : glyphProps.stem_down_extension;\n        }\n        return 0;\n    }\n    // Set the stem length to a specific. Will override the default length.\n    setStemLength(height) {\n        this.stem_extension_override = height - Stem.HEIGHT;\n        return this;\n    }\n    // Get the top and bottom `y` values of the stem.\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return Tables.getGlyphProps(this.duration).flag == true && !this.beam;\n    }\n    /** Post formats the note. */\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    /** Renders the stem onto the canvas. */\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).draw();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.\n//\n// See `tests/stavenote_tests.ts` for usage examples.\nimport { BoundingBox } from './boundingbox';\nimport { Modifier } from './modifier';\nimport { NoteHead } from './notehead';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\nfunction showDeprecationWarningForNoteHeads() {\n    // eslint-disable-next-line\n    console.warn('StaveNote.note_heads is deprecated. Use StaveNote.noteHeads instead.', 'This accessor will be removed in VexFlow 5.0.');\n}\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('Vex.Flow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nexport class StaveNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.StaveNote;\n    }\n    /**\n     * @deprecated Use Stem.UP.\n     */\n    static get STEM_UP() {\n        return Stem.UP;\n    }\n    /**\n     * @deprecated Use Stem.DOWN.\n     */\n    static get STEM_DOWN() {\n        return Stem.DOWN;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Format notes inside a ModifierContext. */\n    static format(notes, state) {\n        if (!notes || notes.length < 2)\n            return false;\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            // Formatting uses sortedKeyProps to calculate line and minL.\n            const props = notes[i].sortedKeyProps;\n            const line = props[0].keyProps.line;\n            let minL = props[props.length - 1].keyProps.line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL = line + notes[i].glyphProps.line_above;\n                minL = line - notes[i].glyphProps.line_below;\n            }\n            else {\n                maxL =\n                    stemDirection === 1 ? props[props.length - 1].keyProps.line + stemMax : props[props.length - 1].keyProps.line;\n                minL = stemDirection === 1 ? props[0].keyProps.line : props[0].keyProps.line - stemMax;\n            }\n            notesList.push({\n                line: props[0].keyProps.line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection: stemDirection,\n                stemMax,\n                stemMin,\n                voice_shift: notes[i].getVoiceShiftWidth(),\n                is_displaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        let voices = 0;\n        let noteU = undefined;\n        let noteM = undefined;\n        let noteL = undefined;\n        const draw = [false, false, false];\n        for (let i = 0; i < notesList.length; i++) {\n            draw[i] = notesList[i].note.render_options.draw == false ? false : true;\n        }\n        if (draw[0] && draw[1] && draw[2]) {\n            // Three visible notes\n            voices = 3;\n            noteU = notesList[0];\n            noteM = notesList[1];\n            noteL = notesList[2];\n        }\n        else if (draw[0] && draw[1]) {\n            // Two visible notes, 0 & 1\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[1];\n        }\n        else if (draw[0] && draw[2]) {\n            // Two visible notes, 0 & 2\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[2];\n        }\n        else if (draw[1] && draw[2]) {\n            // Two visible notes, 1 & 2\n            voices = 2;\n            noteU = notesList[1];\n            noteL = notesList[2];\n        }\n        else {\n            // No shift required for less than 2 visible notes\n            return true;\n        }\n        // for two voice backward compatibility, ensure upper voice is stems up\n        // for three voices, the voices must be in order (upper, middle, lower)\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n        let xShift = 0;\n        // Test for two voice note intersection\n        if (voices === 2) {\n            const lineSpacing = noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n                noteL.note.render_options.draw = false;\n            }\n            else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    // shift rest up\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    // shift rest down\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    //Instead of shifting notes, remove the appropriate flag\n                    //If we are sharing a line, switch one notes stem direction.\n                    //If we are sharing a line and in the same voice, only then offset one note\n                    const lineDiff = Math.abs(noteU.line - noteL.line);\n                    if (noteU.note.hasStem() && noteL.note.hasStem()) {\n                        //If we have different dot values, must offset\n                        //Or If we have a white mixed with a black notehead, must offset\n                        let whiteNoteHeadCount = 0;\n                        let blackNoteHeadCount = 0;\n                        if (Tables.durationToNumber(noteU.note.duration) === 2) {\n                            whiteNoteHeadCount++;\n                        }\n                        else if (Tables.durationToNumber(noteU.note.duration) > 2) {\n                            blackNoteHeadCount++;\n                        }\n                        if (Tables.durationToNumber(noteL.note.duration) === 2) {\n                            whiteNoteHeadCount++;\n                        }\n                        else if (Tables.durationToNumber(noteL.note.duration) > 2) {\n                            blackNoteHeadCount++;\n                        }\n                        if ((whiteNoteHeadCount !== 2 && blackNoteHeadCount !== 2) ||\n                            noteU.note.getModifiersByType(Category.Dot).length !== noteL.note.getModifiersByType(Category.Dot).length) {\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (lineDiff < 1 && lineDiff > 0) {\n                            //if the notes are quite close but not on the same line, shift\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (noteU.note.voice !== noteL.note.voice) {\n                            //If we are not in the same voice\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                if (noteU.line != noteL.line) {\n                                    xShift = voiceXShift + 2;\n                                    noteU.note.setXShift(xShift);\n                                }\n                                else {\n                                    //same line, swap stem direction for one note\n                                    if (noteL.stemDirection === 1) {\n                                        noteL.stemDirection = -1;\n                                        noteL.note.setStemDirection(-1);\n                                    }\n                                }\n                            }\n                        } //Very close whole notes\n                    }\n                    else if (lineDiff < 1) {\n                        xShift = voiceXShift + 2;\n                        if (noteU.stemDirection === noteL.stemDirection) {\n                            // upper voice is middle voice, so shift it right\n                            noteU.note.setXShift(xShift);\n                        }\n                        else {\n                            // shift lower voice right\n                            noteL.note.setXShift(xShift);\n                        }\n                    }\n                    else if (noteU.note.hasStem()) {\n                        noteU.stemDirection = -noteU.note.getStemDirection();\n                        noteU.note.setStemDirection(noteU.stemDirection);\n                    }\n                    else if (noteL.note.hasStem()) {\n                        noteL.stemDirection = -noteL.note.getStemDirection();\n                        noteL.note.setStemDirection(noteL.stemDirection);\n                    }\n                }\n            }\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        // For three voices, test if rests can be repositioned\n        //\n        // Special case 1 :: middle voice rest between two notes\n        //\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    // center middle voice rest between the upper and lower voices\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 2; // shift middle rest right\n                    noteM.note.setXShift(xShift);\n                    if (noteL.note.hasBeam() === false) {\n                        noteL.stemDirection = -1;\n                        noteL.note.setStemDirection(-1);\n                    }\n                    if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                        noteU.stemDirection = 1;\n                        noteU.note.setStemDirection(1);\n                    }\n                }\n                // format complete\n                state.right_shift += xShift;\n                return true;\n            }\n        }\n        // Special case 2 :: all voices are rests\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            // Hide upper voice rest\n            noteU.note.render_options.draw = false;\n            // Hide lower voice rest\n            noteL.note.render_options.draw = false;\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        // Test if any other rests can be repositioned\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            // shift upper voice rest up;\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            // shift lower voice rest down\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        // If middle voice intersects upper or lower voice\n        if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n            // shift middle note right\n            xShift = voiceXShift + 2;\n            noteM.note.setXShift(xShift);\n            if (noteL.note.hasBeam() === false) {\n                noteL.stemDirection = -1;\n                noteL.note.setStemDirection(-1);\n            }\n            if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                noteU.stemDirection = 1;\n                noteU.note.setStemDirection(1);\n            }\n        }\n        state.right_shift += xShift;\n        return true;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.minLine = 0;\n        this.maxLine = 0;\n        // Sorted variant of keyProps used internally\n        this.sortedKeyProps = [];\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octave_shift = (_b = noteStruct.octave_shift) !== null && _b !== void 0 ? _b : 0;\n        // Pull note rendering properties.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // if true, displace note to right\n        this.displaced = false;\n        this.dot_shiftY = 0;\n        // for displaced ledger lines\n        this.use_default_head_x = false;\n        // Drawing\n        this._noteHeads = [];\n        this.modifiers = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE, \n            // number of stroke px to the left and right of head\n            stroke_px: noteStruct.stroke_px || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        // Set the stem direction\n        if (noteStruct.auto_stem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stem_direction) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    reset() {\n        super.reset();\n        // Save prior noteHead styles & reapply them after making new noteheads.\n        const noteHeadStyles = this._noteHeads.map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        this._noteHeads.forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this._noteHeads.forEach((head) => head.setStave(stave));\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        // Update stem extension if a beam is assigned.\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    // Builds a `Stem` for the note\n    buildStem() {\n        this.setStem(new Stem({ hide: !!this.isRest() }));\n        return this;\n    }\n    // Builds a `NoteHead` for each key in the note\n    buildNoteHeads() {\n        this._noteHeads = [];\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        // Draw notes from bottom to top.\n        // For down-stem notes, we draw from top to bottom.\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            // Building noteheads rely on sortedKeNotes in order to calculate the displacements\n            const noteProps = this.sortedKeyProps[i].keyProps;\n            const line = noteProps.line;\n            // Keep track of last line with a note head, so that consecutive heads\n            // are correctly displaced.\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.use_default_head_x = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                note_type: this.noteType,\n                displaced,\n                stem_direction: stemDirection,\n                custom_glyph_code: noteProps.code,\n                glyph_font_scale: this.render_options.glyph_font_scale,\n                x_shift: noteProps.shift_right,\n                stem_up_x_offset: noteProps.stem_up_x_offset,\n                stem_down_x_offset: noteProps.stem_down_x_offset,\n                line: noteProps.line,\n            });\n            this.addChildElement(notehead);\n            this._noteHeads[this.sortedKeyProps[i].index] = notehead;\n        }\n    }\n    // Automatically sets the stem direction based on the keys in the note\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        // Figure out optimal stem direction based on given notes\n        // minLine & maxLine rely on sortedKeyProps\n        this.minLine = this.sortedKeyProps[0].keyProps.line;\n        this.maxLine = this.sortedKeyProps[this.keyProps.length - 1].keyProps.line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    // Calculates and stores the properties for each key in the note\n    calculateKeyProps() {\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            // All rests use the same position on the line.\n            // if (this.glyph.rest) key = this.glyph.position;\n            if (this.glyphProps.rest)\n                this.glyphProps.position = key;\n            const options = { octave_shift: this.octave_shift || 0, duration: this.duration };\n            const props = Tables.keyProperties(key, this.clef, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            // Override line placement for default rests\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            // Calculate displacement of this note\n            const line = props.line;\n            if (lastLine == undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) === 0.5) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    // Have to mark the previous note as\n                    // displaced as well, for modifier placement\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        // Sort the notes from lowest line to highest line in sortedKeyProps\n        // Warn no longer required as keyProps remains unsorted\n        this.keyProps.forEach((keyProps, index) => {\n            this.sortedKeyProps.push({ keyProps, index });\n        });\n        this.sortedKeyProps.sort((a, b) => a.keyProps.line - b.keyProps.line);\n    }\n    // Get the `BoundingBox` for the entire note\n    getBoundingBox() {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const { width: w, modLeftPx, leftDisplacedHeadPx } = this.getMetrics();\n        const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n        let minY = 0;\n        let maxY = 0;\n        const halfLineSpacing = ((_b = (_a = this.getStave()) === null || _a === void 0 ? void 0 : _a.getSpacingBetweenLines()) !== null && _b !== void 0 ? _b : 0) / 2;\n        const lineSpacing = halfLineSpacing * 2;\n        if (this.isRest()) {\n            const y = this.ys[0];\n            const frac = Tables.durationToFraction(this.duration);\n            if (frac.equals(1) || frac.equals(2)) {\n                minY = y - halfLineSpacing;\n                maxY = y + halfLineSpacing;\n            }\n            else {\n                minY = y - this.glyphProps.line_above * lineSpacing;\n                maxY = y + this.glyphProps.line_below * lineSpacing;\n            }\n        }\n        else if (this.glyphProps.stem) {\n            const ys = this.getStemExtents();\n            ys.baseY += halfLineSpacing * this.getStemDirection();\n            minY = Math.min(ys.topY, ys.baseY);\n            maxY = Math.max(ys.topY, ys.baseY);\n        }\n        else {\n            minY = 0;\n            maxY = 0;\n            for (let i = 0; i < this.ys.length; ++i) {\n                const yy = this.ys[i];\n                if (i === 0) {\n                    minY = yy;\n                    maxY = yy;\n                }\n                else {\n                    minY = Math.min(yy, minY);\n                    maxY = Math.max(yy, maxY);\n                }\n            }\n            minY -= halfLineSpacing;\n            maxY += halfLineSpacing;\n        }\n        return new BoundingBox(x, minY, w, maxY - minY);\n    }\n    // Gets the line number of the bottom note in the chord.\n    // If `isTopNote` is `true` then get the top note's line number instead\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        // No precondition assumed for sortedness of keyProps array\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return this.glyphProps.rest;\n    }\n    // Determine if the current note is a chord\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    // Determine if the `StaveNote` has a stem\n    hasStem() {\n        return this.glyphProps.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            // We adjust the origin of the stem because we want the stem left-aligned\n            // with the notehead if stemmed-down, and right-aligned if stemmed-up\n            return super.getStemX() + (this.stem_direction ? Stem.WIDTH / (2 * -this.stem_direction) : 0);\n        }\n    }\n    // Get the `y` coordinate for text placed on the top/bottom of a\n    // note at a desired `text_line`\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n    }\n    // Sets the current note to the provided `stave`. This applies\n    // `y` values to the `NoteHeads`.\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = this._noteHeads.map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(y_top, y_bottom);\n        }\n        return this;\n    }\n    // Check if note is shifted to the right\n    isDisplaced() {\n        return this.displaced;\n    }\n    // Sets whether shift note to the right. `displaced` is a `boolean`\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    // Get the starting `x` coordinate for a `StaveTie`\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    // Get the ending `x` coordinate for a `StaveTie`\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    // Get the stave line on which to place a rest\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    // Get the default `x` and `y` coordinates for the provided `position`\n    // and key `index`\n    getModifierStartXY(position, index, options = {}) {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            // FIXME: Left modifier padding, move to font file\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            // FIXME: Right modifier padding, move to font file\n            x = this.getGlyphWidth() + this.x_shift + 2;\n            if (this.stem_direction === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += (_b = (_a = this === null || this === void 0 ? void 0 : this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().width) !== null && _b !== void 0 ? _b : 0;\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Sets the style of the complete StaveNote, including all keys\n    // and the stem.\n    setStyle(style) {\n        return super.setGroupStyle(style);\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        if (stem)\n            stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        var _a;\n        (_a = this.flag) === null || _a === void 0 ? void 0 : _a.setStyle(style);\n    }\n    getFlagStyle() {\n        var _a;\n        return (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    // Sets the notehead at `index` to the provided coloring `style`.\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    setKeyStyle(index, style) {\n        this._noteHeads[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    // Get the width of the note if it is displaced. Used for `Voice`\n    // formatting\n    getVoiceShiftWidth() {\n        // TODO: may need to accommodate for dot here.\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    // Calculates and sets the extra pixels to the left or right\n    // if the note is displaced.\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stem_direction === Stem.DOWN ? this.getGlyphWidth() : 0);\n        // For upstems with flags, the extra space is unnecessary, since it's taken\n        // up by the flag.\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stem_direction === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            // If there are no modifiers on this note, make sure there is adequate padding\n            // between the notes.\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        // For upward flagged notes, the width of the flag needs to be added\n        if (this.shouldDrawFlag() && this.stem_direction === Stem.UP) {\n            width += this.getGlyphWidth();\n            // TODO: Add flag width as a separate metric\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    /**\n     * @typedef {Object} noteHeadBounds\n     * @property {number} y_top the highest notehead bound\n     * @property {number} y_bottom the lowest notehead bound\n     * @property {number|Null} displaced_x the starting x for displaced noteheads\n     * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n     * @property {number} highest_line the highest notehead line in traditional music line\n     *  numbering (bottom line = 1, top line = 5)\n     * @property {number} lowest_line the lowest notehead line\n     * @property {number|false} highest_displaced_line the highest staff line number\n     *   for a displaced notehead\n     * @property {number|false} lowest_displaced_line\n     * @property {number} highest_non_displaced_line\n     * @property {number} lowest_non_displaced_line\n     */\n    /**\n     * Get the staff line and y value for the highest & lowest noteheads\n     * @returns {noteHeadBounds}\n     */\n    getNoteHeadBounds() {\n        // Top and bottom Y values for stem.\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        this._noteHeads.forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            y_top: yTop,\n            y_bottom: yBottom,\n            displaced_x: displacedX,\n            non_displaced_x: nonDisplacedX,\n            highest_line: highestLine,\n            lowest_line: lowestLine,\n            highest_displaced_line: highestDisplacedLine,\n            lowest_displaced_line: lowestDisplacedLine,\n            highest_non_displaced_line: highestNonDisplacedLine,\n            lowest_non_displaced_line: lowestNonDisplacedLine,\n        };\n    }\n    // Get the starting `x` coordinate for the noteheads\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.x_shift;\n    }\n    // Get the ending `x` coordinate for the noteheads\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return this._noteHeads.slice();\n    }\n    /** @deprecated use StaveNote.noteHeads instead. */\n    get note_heads() {\n        showDeprecationWarningForNoteHeads();\n        return this.noteHeads;\n    }\n    // Draw the ledger lines between the stave and the highest/lowest keys\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { glyphProps, render_options: { stroke_px }, } = this;\n        const ctx = this.checkContext();\n        const width = glyphProps.getWidth() + stroke_px * 2;\n        const doubleWidth = 2 * (glyphProps.getWidth() + stroke_px) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highest_line, lowest_line, highest_displaced_line, highest_non_displaced_line, lowest_displaced_line, lowest_non_displaced_line, displaced_x, non_displaced_x, } = this.getNoteHeadBounds();\n        // Early out if there are no ledger lines to draw.\n        if (highest_line < 6 && lowest_line > 0)\n            return;\n        const min_x = Math.min(displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0, non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = min_x - stroke_px;\n            else if (normal)\n                x = (non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0) - stroke_px;\n            else\n                x = (displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0) - stroke_px;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        this.applyStyle(ctx, style);\n        // Draw ledger lines below the staff:\n        for (let line = 6; line <= highest_line; ++line) {\n            const normal = non_displaced_x !== undefined && line <= highest_non_displaced_line;\n            const displaced = highest_displaced_line !== undefined && line <= highest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        // Draw ledger lines above the staff:\n        for (let line = 0; line >= lowest_line; --line) {\n            const normal = non_displaced_x !== undefined && line >= lowest_non_displaced_line;\n            const displaced = lowest_displaced_line !== undefined && line >= lowest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        this.restoreStyle(ctx, style);\n    }\n    // Draw all key modifiers\n    drawModifiers(noteheadParam) {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = this._noteHeads[index];\n            if (notehead == noteheadParam) {\n                const noteheadStyle = notehead.getStyle();\n                notehead.applyStyle(ctx, noteheadStyle);\n                modifier.setContext(ctx);\n                modifier.drawWithStyle();\n                notehead.restoreStyle(ctx, noteheadStyle);\n            }\n        }\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyphProps.flag == true;\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam;\n    }\n    // Draw the flag for the note\n    drawFlag() {\n        var _a, _b, _c, _d, _e;\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            // eslint-disable-next-line\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX();\n            // What's with the magic +/- 2\n            // ANSWER: a corner of the note stem pokes out beyond the tip of the flag.\n            // The extra +/- 2 pushes the flag glyph outward so it covers the stem entirely.\n            // Alternatively, we could shorten the stem.\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    y_top -\n                        noteStemHeight +\n                        2 -\n                        (this.glyphProps ? this.glyphProps.stem_down_extension : 0) * this.getStaveNoteScale() -\n                        ((_b = (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().y_shift) !== null && _b !== void 0 ? _b : 0) * (1 - this.getStaveNoteScale())\n                : // Up stems are above the note head and have flags on the right.\n                    y_bottom -\n                        noteStemHeight -\n                        2 +\n                        (this.glyphProps ? this.glyphProps.stem_up_extension : 0) * this.getStaveNoteScale() -\n                        ((_d = (_c = this.flag) === null || _c === void 0 ? void 0 : _c.getMetrics().y_shift) !== null && _d !== void 0 ? _d : 0) * (1 - this.getStaveNoteScale());\n            // Draw the Flag\n            (_e = this.flag) === null || _e === void 0 ? void 0 : _e.render(ctx, flagX, flagY);\n        }\n    }\n    // Draw the NoteHeads\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        this._noteHeads.forEach((notehead) => {\n            notehead.applyStyle(ctx);\n            ctx.openGroup('notehead', notehead.getAttribute('id'), { pointerBBox: true });\n            notehead.setContext(ctx).draw();\n            this.drawModifiers(notehead);\n            ctx.closeGroup();\n            notehead.restoreStyle(ctx);\n        });\n    }\n    drawStem(stemOptions) {\n        // GCR TODO: I can't find any context in which this is called with the stemStruct\n        // argument in the codebase or tests. Nor can I find a case where super.drawStem\n        // is called at all. Perhaps these should be removed?\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        // If we will render a flag, we shorten the stem so that the tip\n        // does not poke through the flag.\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        if (this.stem) {\n            this.stem.setContext(ctx).draw();\n        }\n    }\n    /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n    getStaveNoteScale() {\n        return 1.0;\n    }\n    /**\n     * Override stemmablenote stem extension to adjust for distance from middle line.\n     */\n    getStemExtension() {\n        const super_stem_extension = super.getStemExtension();\n        if (!this.glyphProps.stem) {\n            return super_stem_extension;\n        }\n        const stem_direction = this.getStemDirection();\n        if (stem_direction !== this.calculateOptimalStemDirection()) {\n            return super_stem_extension; // no adjustment for manually set stem direction.\n        }\n        let mid_line_distance;\n        const MIDDLE_LINE = 3;\n        if (stem_direction === Stem.UP) {\n            // Note that the use of maxLine here instead of minLine might\n            // seem counterintuitive, but in the case of (say) treble clef\n            // chord(F2, E4) stem up, we do not want to extend the stem because\n            // of F2, when a normal octave-length stem above E4 is fine.\n            //\n            // maxLine and minLine are set in calculateOptimalStemDirection() so\n            // will be known.\n            mid_line_distance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            mid_line_distance = this.minLine - MIDDLE_LINE;\n        }\n        // how many lines more than an octave is the relevant notehead?\n        const lines_over_octave_from_mid_line = mid_line_distance - 3.5;\n        if (lines_over_octave_from_mid_line <= 0) {\n            return super_stem_extension;\n        }\n        const stave = this.getStave();\n        let spacing_between_lines = 10;\n        if (stave != undefined) {\n            spacing_between_lines = stave.getSpacingBetweenLines();\n        }\n        return super_stem_extension + lines_over_octave_from_mid_line * spacing_between_lines;\n    }\n    // Draws all the `StaveNote` parts. This is the main drawing method.\n    draw() {\n        if (this.render_options.draw === false)\n            return;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        // Format note head x positions\n        this._noteHeads.forEach((notehead) => notehead.setX(xBegin));\n        if (this.stem) {\n            // Format stem x positions\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n        }\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        // Apply the overall style -- may be contradicted by local settings:\n        this.applyStyle();\n        ctx.openGroup('stavenote', this.getAttribute('id'));\n        this.drawLedgerLines();\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        ctx.closeGroup();\n        this.restoreStyle();\n        this.setRendered();\n    }\n}\nStaveNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveTie extends Element {\n    static get CATEGORY() {\n        return Category.StaveTie;\n    }\n    /**\n     * @param notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.render_options = {\n            cp1: 8,\n            cp2: 12,\n            text_shift_x: 0,\n            first_x_shift: 0,\n            last_x_shift: 0,\n            y_shift: 7,\n            tie_spacing: 0,\n        };\n        this.resetFont();\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    /**\n     * Set the notes to attach this tie to.\n     *\n     * @param {!Object} notes The notes to tie up.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices) {\n            notes.first_indices = [0];\n        }\n        if (!notes.last_indices) {\n            notes.last_indices = [0];\n        }\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indices.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.notes.first_note || !this.notes.last_note;\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.render_options.cp1;\n        let cp2 = this.render_options.cp2;\n        if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n            cp1 = 2;\n            cp2 = 8;\n        }\n        const first_x_shift = this.render_options.first_x_shift;\n        const last_x_shift = this.render_options.last_x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        // setNotes(...) verified that first_indices and last_indices are not undefined.\n        // As a result, we use the ! non-null assertion operator here.\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        // eslint-disable-next-line\n        const last_indices = this.notes.last_indices;\n        this.applyStyle();\n        ctx.openGroup('stavetie', this.getAttribute('id'));\n        for (let i = 0; i < first_indices.length; ++i) {\n            const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n            const first_y_px = params.first_ys[first_indices[i]] + y_shift;\n            const last_y_px = params.last_ys[last_indices[i]] + y_shift;\n            if (isNaN(first_y_px) || isNaN(last_y_px)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n            }\n            const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n            const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n            ctx.beginPath();\n            ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n            ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n            ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n            ctx.closePath();\n            ctx.fill();\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n    renderText(first_x_px, last_x_px) {\n        var _a, _b, _c;\n        if (!this.text)\n            return;\n        const ctx = this.checkContext();\n        let center_x = (first_x_px + last_x_px) / 2;\n        center_x -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.first_note) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.last_note) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n            ctx.restore();\n        }\n    }\n    /**\n     * Returns the TieNotes structure of the first and last note this tie connects.\n     */\n    getNotes() {\n        return this.notes;\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.notes.first_note;\n        const last_note = this.notes.last_note;\n        // Provide some default values so the compiler doesn't complain.\n        let first_x_px = 0;\n        let last_x_px = 0;\n        let first_ys = [0];\n        let last_ys = [0];\n        let stem_direction = 0;\n        if (first_note) {\n            first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n            stem_direction = first_note.getStemDirection();\n            first_ys = first_note.getYs();\n        }\n        else if (last_note) {\n            const stave = last_note.checkStave();\n            first_x_px = stave.getTieStartX();\n            first_ys = last_note.getYs();\n            this.notes.first_indices = this.notes.last_indices;\n        }\n        if (last_note) {\n            last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n            stem_direction = last_note.getStemDirection();\n            last_ys = last_note.getYs();\n        }\n        else if (first_note) {\n            const stave = first_note.checkStave();\n            last_x_px = stave.getTieEndX();\n            last_ys = first_note.getYs();\n            this.notes.last_indices = this.notes.first_indices;\n        }\n        if (this.direction) {\n            stem_direction = this.direction;\n        }\n        this.renderTie({\n            first_x_px,\n            last_x_px,\n            first_ys,\n            last_ys,\n            direction: stem_direction,\n        });\n        this.renderText(first_x_px, last_x_px);\n        return true;\n    }\n}\n/** Default text font. */\nStaveTie.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// / [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { StaveTie } from './stavetie';\nimport { Category } from './typeguard';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return Category.TabTie;\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    /**\n     * @param notes is a struct that has:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super(notes, text);\n        this.render_options.cp1 = 9;\n        this.render_options.cp2 = 11;\n        this.render_options.y_shift = 3;\n        this.direction = -1; // Tab tie's are always face up.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n    static get CATEGORY() {\n        return Category.Voice;\n    }\n    /**\n     * Modes allow the addition of ticks in three different ways:\n     * - STRICT: This is the default. Ticks must fill the voice.\n     * - SOFT: Ticks can be added without restrictions.\n     * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n     */\n    static get Mode() {\n        return VoiceMode;\n    }\n    constructor(time) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = {\n            softmaxFactor: Tables.SOFTMAX_FACTOR,\n        };\n        // Convert the `time` string into a VoiceTime object if necessary.\n        let voiceTime;\n        if (typeof time === 'string') {\n            // Time signature shortcut: \"4/4\", \"3/8\", etc.\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    num_beats: parseInt(match[1]),\n                    beat_value: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        // Default time signature is 4/4.\n        this.time = Object.assign({ num_beats: 4, beat_value: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        // Recalculate total ticks.\n        this.totalTicks = new Fraction(this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    /** Get the total ticks in the voice. */\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    /** Get the total ticks used in the voice by all the tickables. */\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    /** Get the largest width of all the tickables. */\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    /** Get the tick count for the shortest tickable */\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    /** Get the tickables in the voice. */\n    getTickables() {\n        return this.tickables;\n    }\n    /** Get the voice mode. */\n    getMode() {\n        return this.mode;\n    }\n    /**\n     * Set the voice mode.\n     * @param mode value from `VoiceMode`\n     */\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    /** Get the resolution multiplier for the voice. */\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    /** Get the actual tick resolution for the voice. */\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    /** Set the voice's stave. */\n    setStave(stave) {\n        this.stave = stave;\n        // Reset the bounding box so we can reformat.\n        this.boundingBox = undefined;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    /** Get the bounding box for the voice. */\n    getBoundingBox() {\n        if (!this.boundingBox) {\n            const stave = this.checkStave();\n            let boundingBox = undefined;\n            for (let i = 0; i < this.tickables.length; ++i) {\n                const tickable = this.tickables[i];\n                if (!tickable.getStave())\n                    tickable.setStave(stave);\n                const bb = tickable.getBoundingBox();\n                if (bb) {\n                    boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n                }\n            }\n            this.boundingBox = boundingBox;\n        }\n        return this.boundingBox;\n    }\n    /** Set the voice mode to strict or soft. */\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    /** Determine if the voice is complete according to the voice mode. */\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * We use softmax to layout the tickables proportional to the exponent of\n     * their duration. The softmax factor is used to determine the 'linearness' of\n     * the layout.\n     *\n     * The softmax of all the tickables in this voice should sum to 1.\n     */\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        return this;\n    }\n    /**\n     * Calculate the sum of the exponents of all the ticks in this voice to use\n     * as the denominator of softmax.\n     */\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = this.tickables.map(exp).reduce((a, b) => a + b, 0);\n        return this.expTicksUsed;\n    }\n    /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    /** Add a tickable to the voice. */\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            // Update the total ticks for this line.\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0; // reset\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            // Track the smallest tickable for formatting.\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            // Expand total ticks using denominator from ticks used.\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        // Add the tickable to the line.\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    /** Add an array of tickables to the voice. */\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    /** Preformat the voice by applying the voice's stave to each note. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /**\n     * Render the voice onto the canvas `context` and an optional `stave`.\n     * If `stave` is omitted, it is expected that the notes have staves\n     * already set.\n     *\n     * This method also calculates the voice's boundingBox while drawing\n     * the notes. Note the similarities with this.getBoundingBox().\n     */\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        let boundingBox = undefined;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            // Set the stave if provided.\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            const bb = tickable.getBoundingBox();\n            if (bb) {\n                boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n            }\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n        this.boundingBox = boundingBox;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\nimport { Beam } from './beam';\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { Tables } from './tables';\nimport { TabTie } from './tabtie';\nimport { Category, isStaveNote } from './typeguard';\nimport { log } from './util';\nimport { Voice } from './voice';\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('Vex.Flow.GraceNoteGroup', args);\n}\n/** GraceNoteGroup is used to format and render grace notes. */\nexport class GraceNoteGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.GraceNoteGroup;\n    }\n    /** Arranges groups inside a `ModifierContext`. */\n    static format(gracenote_groups, state) {\n        const group_spacing_stave = 4;\n        const group_spacing_tab = 0;\n        if (!gracenote_groups || gracenote_groups.length === 0)\n            return false;\n        const group_list = [];\n        let prev_note = null;\n        let shiftL = 0;\n        for (let i = 0; i < gracenote_groups.length; ++i) {\n            const gracenote_group = gracenote_groups[i];\n            const note = gracenote_group.getNote();\n            const is_stavenote = isStaveNote(note);\n            const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n            if (is_stavenote && note !== prev_note) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prev_note = note;\n            }\n            group_list.push({ shift: shiftL, gracenote_group, spacing });\n        }\n        // If first note left shift in case it is displaced\n        let group_shift = group_list[0].shift;\n        let formatWidth;\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            gracenote_group.preFormat();\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            group_shift = Math.max(formatWidth, group_shift);\n        }\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift) + StaveNote.minNoteheadPadding);\n        }\n        state.left_shift += group_shift;\n        return true;\n    }\n    //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n    constructor(grace_notes, show_slur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.grace_notes = grace_notes;\n        this.width = 0;\n        this.show_slur = show_slur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.render_options = {\n            slur_y_shift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.grace_notes);\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(grace_notes) {\n        grace_notes = grace_notes || this.grace_notes;\n        if (grace_notes.length > 1) {\n            const beam = new Beam(grace_notes);\n            beam.render_options.beam_width = 3;\n            beam.render_options.partial_beam_length = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width + StaveNote.minNoteheadPadding;\n    }\n    getGraceNotes() {\n        return this.grace_notes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n        // Draw grace notes.\n        this.grace_notes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n        // Draw beams.\n        this.beams.forEach((beam) => beam.setContext(ctx).draw());\n        if (this.show_slur) {\n            // Create and draw slur.\n            const is_stavenote = isStaveNote(note);\n            const TieClass = is_stavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                last_note: this.grace_notes[0],\n                first_note: note,\n                first_indices: [0],\n                last_indices: [0],\n            });\n            this.slur.render_options.cp2 = 12;\n            this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n            this.slur.setContext(ctx).draw();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { Voice } from './voice';\nexport class NoteSubGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.NoteSubGroup;\n    }\n    // Arrange groups inside a `ModifierContext`\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.left_shift += width;\n        return true;\n    }\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\nimport { Fraction } from './fraction';\nimport { RuntimeError } from './util';\n/**\n * TickContext formats abstract tickable objects, such as notes, chords, tabs, etc.\n */\nexport class TickContext {\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    constructor(options) {\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = options && options.tickID ? options.tickID : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined; // Biggest tickable\n        this.minTicks = undefined; // this can remian null if all tickables have ignore_ticks\n        this.minTickable = undefined;\n        this.padding = 1; // padding on each side (width += padding * 2)\n        this.x = 0;\n        this.xBase = 0; // base x position without xOffset\n        this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n        this.tickables = []; // Notes, tabs, chords, lyrics.\n        this.tickablesByVoice = {}; // Tickables indexed by voice number\n        // Formatting metrics\n        this.notePx = 0; // width of widest note in this context\n        this.glyphPx = 0; // width of glyph (note head)\n        this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n        this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n        this.modLeftPx = 0; // Left modifier pixels\n        this.modRightPx = 0; // Right modifier pixels\n        this.totalLeftPx = 0; // Total left pixels\n        this.totalRightPx = 0; // Total right pixels\n        this.tContexts = []; // Parent array of tick contexts\n        this.width = 0;\n        this.formatterMetrics = {\n            // The freedom of a tickcontext is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    } // use of xBase and xOffset is optional, avoids offset creep\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    /**\n     * Introduced on 2020-04-17 as getTickablesForVoice(voiceIndex).\n     *   https://github.com/0xfe/vexflow/blame/dc97b0cc5bb93171c0038638c34362dc958222ca/src/tickcontext.js#L63\n     * Renamed on 2021-08-05 to getTickableForVoice(voiceIndex). Method renamed to singular, since it returns one Tickable.\n     */\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    /** Gets widths context, note and left/right modifiers for formatting. */\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks == null) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex || 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            // Maintain max displaced head pixels from all tickables in the context\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            // Maintain the widest note for all tickables in the context\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            // Maintain the widest note head\n            this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth || 0);\n            // Total modifier shift\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            // Total shift\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            // Recalculate the tick context total width\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { Category, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('Vex.Flow.Ornament', args);\n}\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nexport class Ornament extends Modifier {\n    /** Ornaments category string. */\n    static get CATEGORY() {\n        return Category.Ornament;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Arrange ornaments inside `ModifierContext` */\n    static format(ornaments, state) {\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0; // width is used by ornaments, which are always centered on the note head\n        let right_shift = state.right_shift; // jazz ornaments calculate r/l shift separately\n        let left_shift = state.left_shift;\n        let yOffset = 0;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n                ornament.x_shift += right_shift + 2;\n            }\n            if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n                ornament.x_shift -= left_shift + 2;\n            }\n            if (ornament.reportedWidth && ornament.x_shift < 0) {\n                left_shift += ornament.reportedWidth;\n            }\n            else if (ornament.reportedWidth && ornament.x_shift >= 0) {\n                right_shift += ornament.reportedWidth + Ornament.minPadding;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n            }\n            // articulations above/below the line can be stacked.\n            if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n                // Unfortunately we don't know the stem direction.  So we base it\n                // on the line number, but also allow it to be overridden.\n                const ornamentNote = defined(ornament.note, 'NoAttachedNote');\n                if (ornamentNote.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n                    state.top_text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset -= ornament.glyph.bbox.getH();\n                }\n                else {\n                    state.text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset += ornament.glyph.bbox.getH();\n                }\n            }\n            else {\n                if (ornament.getPosition() === Modifier.Position.ABOVE) {\n                    ornament.setTextLine(state.top_text_line);\n                    state.top_text_line += increment;\n                }\n                else {\n                    ornament.setTextLine(state.text_line);\n                    state.text_line += increment;\n                }\n            }\n        }\n        // Note: 'legit' ornaments don't consider other modifiers when calculating their\n        // X position, but jazz ornaments sometimes need to.\n        state.left_shift = left_shift + width / 2;\n        state.right_shift = right_shift + width / 2;\n        return true;\n    }\n    /**\n     * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n     * these are generally on the top of the staff.\n     */\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    /**\n     * ornamentAttack indicates something that happens in the attach, placed before the note and\n     * any accidentals\n     */\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    /**\n     * The ornament is aligned based on the note head, but without regard to whether the\n     * stem goes up or down.\n     */\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n    }\n    /**\n     * An ornament that happens on the release of the note, generally placed after the\n     * note and overlapping the next beat/measure..\n     */\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    /** ornamentArticulation goes above/below the note based on space availablity */\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    /**\n     * Legacy ornaments have hard-coded metrics.  If additional ornament types are\n     * added, get their metrics here.\n     */\n    // eslint-disable-next-line\n    getMetrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.jazzOrnaments[this.ornament.code];\n    }\n    /**\n     * Create a new ornament of type `type`, which is an entry in\n     * `Vex.Flow.ornamentCodes` in `tables.ts`.\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.delayed = false;\n        this.render_options = {\n            font_scale: 38,\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        this.ornament = Tables.ornamentCodes(this.type);\n        // new ornaments have their origin at the origin, and have more specific\n        // metrics.  Legacy ornaments do some\n        // x scaling, and have hard-coded metrics\n        const metrics = this.getMetrics();\n        // some jazz ornaments are above or below depending on stem direction.\n        this.adjustForStemDirection = false;\n        // some jazz ornaments like falls are supposed to overlap with future bars\n        // and so we report a different width than they actually take up.\n        this.reportedWidth = metrics && metrics.reportedWidth ? metrics.reportedWidth : 0;\n        this.stemUpYOffset = metrics && metrics.stemUpYOffset ? metrics.stemUpYOffset : 0;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        if (!this.ornament) {\n            throw new RuntimeError('ArgumentError', `Ornament not found: '${this.type}'`);\n        }\n        this.x_shift = metrics ? metrics.xOffset : 0;\n        this.y_shift = metrics ? metrics.yOffset : 0;\n        this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, {\n            category: `ornament.${this.ornament.code}`,\n        });\n        // Is this a jazz ornament that goes between this note and the next note.\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n        // happen if I don't set it.\n        if (!metrics) {\n            this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n        }\n    }\n    /** Set whether the ornament is to be delayed. */\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    /** Set the upper accidental for the ornament. */\n    setUpperAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalUpper = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalUpper.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Set the lower accidental for the ornament. */\n    setLowerAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalLower = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalLower.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Render ornament in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDir = note.getStemDirection();\n        const stave = note.checkStave();\n        this.applyStyle();\n        ctx.openGroup('ornament', this.getAttribute('id'));\n        // Get stem extents\n        const stemExtents = note.checkStem().getExtents();\n        let y = stemDir === Stem.DOWN ? stemExtents.baseY : stemExtents.topY;\n        // TabNotes don't have stems attached to them. Tab stems are rendered outside the stave.\n        if (isTabNote(note)) {\n            if (note.hasStem()) {\n                if (stemDir === Stem.DOWN) {\n                    y = stave.getYForTopText(this.text_line);\n                }\n            }\n            else {\n                // Without a stem\n                y = stave.getYForTopText(this.text_line);\n            }\n        }\n        const isPlacedOnNoteheadSide = stemDir === Stem.DOWN;\n        const spacing = stave.getSpacingBetweenLines();\n        let lineSpacing = 1;\n        // Beamed stems are longer than quarter note stems, adjust accordingly\n        if (!isPlacedOnNoteheadSide && note.hasBeam()) {\n            lineSpacing += 0.5;\n        }\n        const totalSpacing = spacing * (this.text_line + lineSpacing);\n        const glyphYBetweenLines = y - totalSpacing;\n        // Get initial coordinates for the modifier position\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        // If the ornament is aligned with the note head, don't consider the stave y\n        // but use the 'natural' modifier y\n        let glyphY = this.ornamentAlignWithNoteHead\n            ? start.y\n            : Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n        glyphY += this.y_shift;\n        // Ajdust x position if ornament is delayed\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = glyphX - (stave.getX() - 10);\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                delayXShift += this.glyph.getMetrics().width / 2;\n                const nextContext = TickContext.getNextContext(note.getTickContext());\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - startX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.render(ctx, glyphX, glyphY);\n            glyphY -= this.accidentalLower.getMetrics().height;\n            glyphY -= this.render_options.accidentalLowerPadding;\n        }\n        if (this.stemUpYOffset && note.hasStem() && note.getStemDirection() === 1) {\n            glyphY += this.stemUpYOffset;\n        }\n        if (note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            glyphY = note.checkStave().getBoundingBox().getY() + 40;\n        }\n        this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n        if (this.accidentalUpper) {\n            glyphY -= this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding;\n            this.accidentalUpper.render(ctx, glyphX, glyphY);\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\nOrnament.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Rodrigo Vilar\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Parenthesis implements parenthesis modifiers for notes. */\nexport class Parenthesis extends Modifier {\n    static get CATEGORY() {\n        return Category.Parenthesis;\n    }\n    /** Add parentheses to the notes. */\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    /** Arrange parentheses inside a ModifierContext. */\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                x_widthR = x_widthR > shift + parenthesis.width ? x_widthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index);\n                x_widthL = x_widthL > shift + parenthesis.width ? x_widthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    /**\n     * Constructor\n     *\n     * @param position Modifier.Position.LEFT (default) or Modifier.Position.RIGHT\n     */\n    constructor(position) {\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n    }\n    /** Set the associated note. */\n    setNote(note) {\n        this.note = note;\n        this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n        if (isGraceNote(note)) {\n            this.point = Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.point');\n            this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.width'));\n        }\n        return this;\n    }\n    /** Render the parenthesis. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        const x = start.x + this.x_shift;\n        const y = start.y + this.y_shift;\n        if (this.position == Modifier.Position.RIGHT) {\n            Glyph.renderGlyph(ctx, x + 1, y, this.point, 'noteheadParenthesisRight', {\n                category: `noteHead.standard.noteheadParenthesisRight`,\n            });\n        }\n        else if (this.position == Modifier.Position.LEFT) {\n            Glyph.renderGlyph(ctx, x - 2, y, this.point, 'noteheadParenthesisLeft', {\n                category: `noteHead.standard.noteheadParenthesisLeft`,\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n//\n// Utilities for working with Web APIs.\n// See: https://developer.mozilla.org/en-US/docs/Web/API\nimport { globalObject } from './util';\n// eslint-disable-next-line\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLCanvasElement class,\n    (typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        // OR it's pretending to be a <canvas> element. Good enough!\n        // Do not rely on .tagName, because node-canvas doesn't provide a tagName.\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\n// eslint-disable-next-line\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLDivElement class.\n    (typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        // OR it's pretending to be a <div>. See: svgcontext.ts.\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { RenderContext } from './rendercontext';\nimport { globalObject, warn } from './util';\nimport { isHTMLCanvas } from './web';\n/**\n * A rendering context for the Canvas backend. This class serves as a proxy for the\n * underlying CanvasRenderingContext2D object, part of the browser's API.\n */\nexport class CanvasContext extends RenderContext {\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n    }\n    /**\n     * Ensure that width and height do not exceed the browser limit.\n     * @returns array of [width, height] clamped to the browser limit.\n     */\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    constructor(context) {\n        super();\n        /** Height of one line of text (in pixels). */\n        this.textHeight = 0;\n        this.context2D = context;\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    /**\n     * Set all pixels to transparent black rgba(0,0,0,0).\n     */\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // eslint-disable-next-line\n    openGroup(cls, id, attrs) {\n        // Containers not implemented.\n    }\n    closeGroup() {\n        // Containers not implemented.\n    }\n    // eslint-disable-next-line\n    add(child) {\n        // Containers not implemented.\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    /** CanvasContext ignores `setBackgroundFillStyle()`. */\n    // eslint-disable-next-line\n    setBackgroundFillStyle(style) {\n        // DO NOTHING\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        // CanvasRenderingContext2D does not scale the shadow blur by the current\n        // transform, so we have to do it manually. We assume uniform scaling\n        // (though allow for rotation) because the blur can only be scaled\n        // uniformly anyway.\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height) {\n        const canvas = this.context2D.canvas;\n        const devicePixelRatio = globalObject().devicePixelRatio || 1;\n        // Scale the canvas size by the device pixel ratio clamping to the maximum supported size.\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * devicePixelRatio, height * devicePixelRatio);\n        // Divide back down by the pixel ratio and convert to integers.\n        width = (width / devicePixelRatio) | 0;\n        height = (height / devicePixelRatio) | 0;\n        canvas.width = width * devicePixelRatio;\n        canvas.height = height * devicePixelRatio;\n        // The canvas could be an instance of either HTMLCanvasElement or an OffscreenCanvas.\n        // Only HTMLCanvasElement has a style attribute.\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(devicePixelRatio, devicePixelRatio);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    /**\n     * Set the pixels in a rectangular area to transparent black rgba(0,0,0,0).\n     */\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        // Return x, y, width & height in the same manner as svg getBBox\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Gregory Ristow (2015)\nimport { Font, FontStyle, FontWeight } from './font';\nimport { RenderContext } from './rendercontext';\nimport { Tables } from './tables';\nimport { normalizeAngle, prefix, RuntimeError } from './util';\n/** For a particular element type (e.g., rect), we will not apply certain presentation attributes. */\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\nclass MeasureTextCache {\n    constructor() {\n        // The cache is keyed first by the text string, then by the font attributes\n        // joined together.\n        this.cache = {};\n    }\n    lookup(text, svg, attributes) {\n        let entries = this.cache[text];\n        if (entries === undefined) {\n            entries = {};\n            this.cache[text] = entries;\n        }\n        const family = attributes['font-family'];\n        const size = attributes['font-size'];\n        const weight = attributes['font-weight'];\n        const style = attributes['font-style'];\n        const key = `${family}%${size}%${weight}%${style}`;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = this.measureImpl(text, svg, attributes);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n    measureImpl(text, svg, attributes) {\n        let txt = this.txt;\n        if (!txt) {\n            // Create the SVG text element that will be used to measure text in the event\n            // of a cache miss.\n            txt = document.createElementNS(SVG_NS, 'text');\n            this.txt = txt;\n        }\n        txt.textContent = text;\n        if (attributes['font-family'])\n            txt.setAttributeNS(null, 'font-family', attributes['font-family']);\n        if (attributes['font-size'])\n            txt.setAttributeNS(null, 'font-size', `${attributes['font-size']}`);\n        if (attributes['font-style'])\n            txt.setAttributeNS(null, 'font-style', attributes['font-style']);\n        if (attributes['font-weight'])\n            txt.setAttributeNS(null, 'font-weight', `${attributes['font-weight']}`);\n        svg.appendChild(txt);\n        const bbox = txt.getBBox();\n        svg.removeChild(txt);\n        return { x: bbox.x, y: bbox.y, width: bbox.width, height: bbox.height };\n    }\n}\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nexport class SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        this.width = 0;\n        this.height = 0;\n        this.precision = 1;\n        this.backgroundFillStyle = 'white';\n        /** Formatted as CSS font shorthand (e.g., 'italic bold 12pt Arial') */\n        this.fontCSSString = '';\n        this.element = element;\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n        // Create a SVG element and add it to the container element.\n        const svg = this.create('svg');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        this.lineWidth = 1.0;\n        const defaultFontAttributes = {\n            'font-family': Font.SANS_SERIF,\n            'font-size': Font.SIZE + 'pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scaleX: 1, scaleY: 1 }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 0.3, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black' }, defaultFontAttributes);\n        this.groupAttributes = [];\n        this.applyAttributes(svg, this.attributes);\n        this.groupAttributes.push(Object.assign({}, this.attributes));\n        this.shadow_attributes = {\n            width: 0,\n            color: 'black',\n        };\n        this.state_stack = [];\n    }\n    round(n) {\n        return Math.round(n * this.precision) / this.precision;\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    // Allow grouping elements in containers for interactivity.\n    openGroup(cls, id, attrs) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        if (attrs && attrs.pointerBBox) {\n            group.setAttribute('pointer-events', 'bounding-box');\n        }\n        this.applyAttributes(group, this.attributes);\n        this.groupAttributes.push(Object.assign(Object.assign({}, this.groupAttributes[this.groupAttributes.length - 1]), this.attributes));\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.groupAttributes.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    /**\n     * Used to set the fill color for `clearRect()`. This allows us to simulate\n     * cutting a \"hole\" into the SVG drawing.\n     */\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.shadow_attributes.color = color;\n        return this;\n    }\n    /**\n     * @param blur A non-negative float specifying the level of shadow blur, where 0\n     *             represents no blur and larger numbers represent increasingly more blur.\n     * @returns this\n     */\n    setShadowBlur(blur) {\n        this.shadow_attributes.width = blur;\n        return this;\n    }\n    /**\n     * @param width\n     * @returns this\n     */\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n        return this;\n    }\n    /**\n     * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n     * @returns this\n     *\n     * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n     */\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    /**\n     * @param capType\n     * @returns this\n     */\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    // ### Sizing & Scaling Methods:\n    // TODO (GCR): See note at scale() -- separate our internal\n    // conception of pixel-based width/height from the style.width\n    // and style.height properties eventually to allow users to\n    // apply responsive sizing attributes to the SVG.\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scaleX, this.state.scaleY);\n        return this;\n    }\n    scale(x, y) {\n        // uses viewBox to scale\n        // TODO (GCR): we may at some point want to distinguish the\n        // style.width / style.height properties that are applied to\n        // the SVG object from our internal conception of the SVG\n        // width/height.  This would allow us to create automatically\n        // scaling SVG's that filled their containers, for instance.\n        //\n        // As this isn't implemented in Canvas contexts,\n        // I've left as is for now, but in using the viewBox to\n        // handle internal scaling, am trying to make it possible\n        // for us to eventually move in that direction.\n        this.state.scaleX = x;\n        this.state.scaleY = y;\n        const visibleWidth = this.width / x;\n        const visibleHeight = this.height / y;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    /**\n     * 1 arg: string in the \"x y w h\" format\n     * 4 args: x:number, y:number, w:number, h:number\n     */\n    setViewBox(viewBox_or_minX, minY, width, height) {\n        if (typeof viewBox_or_minX === 'string') {\n            this.svg.setAttribute('viewBox', viewBox_or_minX);\n        }\n        else {\n            const viewBoxString = viewBox_or_minX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    // ### Drawing helper methods:\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            if (attributes[attrName] &&\n                (this.groupAttributes.length == 0 ||\n                    attributes[attrName] != this.groupAttributes[this.groupAttributes.length - 1][attrName]))\n                element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    // ### Shape & Path Methods:\n    clear() {\n        // Clear the SVG by removing all inner children.\n        // (This approach is usually slightly more efficient\n        // than removing the old SVG & adding a new one to\n        // the container element, since it does not cause the\n        // container to resize twice.  Also, the resize\n        // triggered by removing the entire SVG can trigger\n        // a touchcancel event when the element resizes away\n        // from a touch point.)\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n        // Replace the viewbox attribute we just removed.\n        this.scale(this.state.scaleX, this.state.scaleY);\n    }\n    // ## Rectangles:\n    rect(x, y, width, height, attributes) {\n        // Avoid invalid negative height attributes by flipping the rectangle on its head:\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.lineWidth, stroke: 'black' };\n        x = this.round(x);\n        y = this.round(y);\n        width = this.round(width);\n        height = this.round(height);\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill, stroke: 'none' };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        // Currently this fills a rect with the backgroundFillStyle, rather\n        // than \"cut a hole\" into the existing shapes.\n        //\n        // Since tabNote seems to be the only module that makes use of this\n        // it may be worth creating a separate tabStave that would\n        // draw lines around locations of tablature fingering.\n        this.rect(x, y, width, height, { fill: this.backgroundFillStyle, stroke: 'none' });\n        return this;\n    }\n    // ## Paths:\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        x2 = this.round(x2);\n        y2 = this.round(y2);\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        let x0 = x + radius * Math.cos(startAngle);\n        let y0 = y + radius * Math.sin(startAngle);\n        x0 = this.round(x0);\n        y0 = this.round(y0);\n        // svg behavior different from canvas.  Don't normalize angles if\n        // we are drawing a circle because they both normalize to 0\n        const tmpStartTest = normalizeAngle(startAngle);\n        const tmpEndTest = normalizeAngle(endAngle);\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI) ||\n            tmpStartTest === tmpEndTest) {\n            let x1 = x + radius * Math.cos(startAngle + Math.PI);\n            let y1 = y + radius * Math.sin(startAngle + Math.PI);\n            // There's no way to specify a completely circular arc in SVG so we have to\n            // use two semi-circular arcs.\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            let x1 = x + radius * Math.cos(endAngle);\n            let y1 = y + radius * Math.sin(endAngle);\n            startAngle = tmpStartTest;\n            endAngle = tmpEndTest;\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    getShadowStyle() {\n        const sa = this.shadow_attributes;\n        // A CSS drop-shadow filter blur looks different than a canvas shadowBlur\n        // of the same radius, so we scale the drop-shadow radius here to make it\n        // look close to the canvas shadow.\n        return `filter: drop-shadow(0 0 ${sa.width / 1.5}px ${sa.color})`;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', 'stroke-width': this.lineWidth, d: this.path });\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    // ## Text Methods:\n    measureText(text) {\n        return SVGContext.measureTextCache.lookup(text, this.svg, this.attributes);\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        x = this.round(x);\n        y = this.round(y);\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    // TODO: State should be deep-copied.\n    save() {\n        this.state_stack.push({\n            state: {\n                'font-family': this.state['font-family'],\n                'font-weight': this.state['font-weight'],\n                'font-style': this.state['font-style'],\n                'font-size': this.state['font-size'],\n                scale: this.state.scale,\n            },\n            attributes: {\n                'font-family': this.attributes['font-family'],\n                'font-weight': this.attributes['font-weight'],\n                'font-style': this.attributes['font-style'],\n                'font-size': this.attributes['font-size'],\n                fill: this.attributes.fill,\n                stroke: this.attributes.stroke,\n                'stroke-width': this.attributes['stroke-width'],\n                'stroke-dasharray': this.attributes['stroke-dasharray'],\n            },\n            shadow_attributes: {\n                width: this.shadow_attributes.width,\n                color: this.shadow_attributes.color,\n            },\n            lineWidth: this.lineWidth,\n        });\n        return this;\n    }\n    // TODO: State should be deep-restored.\n    restore() {\n        const savedState = this.state_stack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state['font-family'] = state.state['font-family'];\n            this.state['font-weight'] = state.state['font-weight'];\n            this.state['font-style'] = state.state['font-style'];\n            this.state['font-size'] = state.state['font-size'];\n            this.state.scale = state.state.scale;\n            this.attributes['font-family'] = state.attributes['font-family'];\n            this.attributes['font-weight'] = state.attributes['font-weight'];\n            this.attributes['font-style'] = state.attributes['font-style'];\n            this.attributes['font-size'] = state.attributes['font-size'];\n            this.attributes.fill = state.attributes.fill;\n            this.attributes.stroke = state.attributes.stroke;\n            this.attributes['stroke-width'] = state.attributes['stroke-width'];\n            this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n            this.shadow_attributes.width = state.shadow_attributes.width;\n            this.shadow_attributes.color = state.shadow_attributes.color;\n            this.lineWidth = state.lineWidth;\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900). It is inserted\n     *               into the font-weight attribute (e.g., font-weight=\"bold\")\n     * @param style is a string (e.g., 'italic', 'normal') that is inserted into the\n     *              font-style attribute (e.g., font-style=\"italic\")\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.fontCSSString;\n    }\n}\nSVGContext.measureTextCache = new MeasureTextCache();\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { CanvasContext } from './canvascontext';\nimport { SVGContext } from './svgcontext';\nimport { isRenderContext } from './typeguard';\nimport { RuntimeError } from './util';\nimport { isHTMLCanvas, isHTMLDiv } from './web';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\n// End of line types\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\n/**\n * Support Canvas & SVG rendering contexts.\n */\nexport class Renderer {\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    // Draw a dashed line (horizontal, vertical or diagonal\n    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n    // setting the second number to 0 draws a solid line.\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    constructor(arg0, arg1) {\n        if (isRenderContext(arg0)) {\n            // The user has provided what looks like a RenderContext, let's just use it.\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                // The backend must be specified if the render context isn't directly provided.\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 == 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            // Verify backend and create context\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d', { willReadFrequently: true });\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\n// Used by vexflow_test_helpers.ts\n// Should this be private?\n// Can we do this in a cleaner way?\nRenderer.lastContext = undefined;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var TextJustification;\n(function (TextJustification) {\n    TextJustification[TextJustification[\"LEFT\"] = 1] = \"LEFT\";\n    TextJustification[TextJustification[\"CENTER\"] = 2] = \"CENTER\";\n    TextJustification[TextJustification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(TextJustification || (TextJustification = {}));\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nexport class TextNote extends Note {\n    static get CATEGORY() {\n        return Category.TextNote;\n    }\n    /** Glyph data. */\n    static get GLYPHS() {\n        return {\n            segno: {\n                code: 'segno',\n            },\n            tr: {\n                code: 'ornamentTrill',\n            },\n            mordent: {\n                code: 'ornamentMordent',\n            },\n            mordent_upper: {\n                code: 'ornamentShortTrill',\n            },\n            mordent_lower: {\n                code: 'ornamentMordent',\n            },\n            f: {\n                code: 'dynamicForte',\n            },\n            p: {\n                code: 'dynamicPiano',\n            },\n            m: {\n                code: 'dynamicMezzo',\n            },\n            s: {\n                code: 'dynamicSforzando',\n            },\n            z: {\n                code: 'dynamicZ',\n            },\n            coda: {\n                code: 'coda',\n            },\n            pedal_open: {\n                code: 'keyboardPedalPed',\n            },\n            pedal_close: {\n                code: 'keyboardPedalUp',\n            },\n            caesura_straight: {\n                code: 'caesura',\n            },\n            caesura_curved: {\n                code: 'caesuraCurved',\n            },\n            breath: {\n                code: 'breathMarkComma',\n            },\n            tick: {\n                code: 'breathMarkTick',\n            },\n            turn: {\n                code: 'ornamentTurn',\n            },\n            turn_inverted: {\n                code: 'ornamentTurnSlash',\n            },\n        };\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.text = noteStruct.text || '';\n        this.superscript = noteStruct.superscript;\n        this.subscript = noteStruct.subscript;\n        this.setFont(noteStruct.font);\n        this.line = noteStruct.line || 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignore_ticks = noteStruct.ignore_ticks || false;\n        this.justification = TextJustification.LEFT;\n        // Determine and set initial note width. Note that the text width is\n        // an approximation and isn't very accurate. The only way to accurately\n        // measure the length of text is with `CanvasRenderingContext2D.measureText()`.\n        if (noteStruct.glyph) {\n            const struct = TextNote.GLYPHS[noteStruct.glyph];\n            if (!struct)\n                throw new RuntimeError('Invalid glyph type: ' + noteStruct.glyph);\n            this.glyph = new Glyph(struct.code, 40, { category: 'textNote' });\n            this.setWidth(this.glyph.getMetrics().width);\n        }\n        else {\n            this.glyph = undefined;\n        }\n    }\n    /** Set the horizontal justification of the TextNote. */\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Return the Stave line on which the TextNote is placed. */\n    getLine() {\n        return this.line;\n    }\n    /** Return the unformatted text of this TextNote. */\n    getText() {\n        return this.text;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.smooth) {\n            this.setWidth(0);\n        }\n        else {\n            if (this.glyph) {\n                // Width already set.\n            }\n            else {\n                const ctx = this.checkContext();\n                ctx.setFont(this.textFont);\n                this.setWidth(ctx.measureText(this.text).width);\n            }\n        }\n        if (this.justification === TextJustification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        // We reposition to the center of the note head\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    /**\n     * Renders the TextNote.\n     * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        // Reposition to center of note head\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        // Align based on tick-context width.\n        const width = this.getWidth();\n        if (this.justification === TextJustification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            x -= width;\n        }\n        let y;\n        if (this.glyph) {\n            y = stave.getYForLine(this.line + -3);\n            this.glyph.render(ctx, x, y);\n        }\n        else {\n            y = stave.getYForLine(this.line + -3);\n            this.applyStyle(ctx);\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, x, y);\n            const height = ctx.measureText(this.text).height;\n            // We called this.setFont(...) in the constructor, so we know this.textFont is available.\n            // eslint-disable-next-line\n            const { family, size, weight, style } = this.textFont;\n            // Scale the font size by 1/1.3.\n            const smallerFontSize = Font.scaleSize(size, 0.769231);\n            if (this.superscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.superscript, x + this.width + 2, y - height / 2.2);\n            }\n            if (this.subscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.subscript, x + this.width + 2, y + height / 2.2 - 1);\n            }\n            this.restoreStyle(ctx);\n        }\n    }\n}\nTextNote.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 12,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nTextNote.Justification = TextJustification;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nexport class Volta extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Volta;\n    }\n    static get type() {\n        return VoltaType;\n    }\n    constructor(type, number, x, y_shift) {\n        super();\n        this.volta = type;\n        this.x = x;\n        this.y_shift = y_shift;\n        this.number = number;\n        this.resetFont();\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x; // don't include x (offset) for width\n        const top_y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        const vert_height = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.volta) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            default:\n                break;\n        }\n        // If the beginning of a volta, draw measure number\n        if (this.volta === VoltaType.BEGIN || this.volta === VoltaType.BEGIN_END) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n            ctx.restore();\n        }\n        ctx.fillRect(this.x + x, top_y, width, 1);\n        return this;\n    }\n}\nVolta.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Renderer } from './renderer';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isStaveNote, isStemmableNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StringNumber extends Modifier {\n    static get CATEGORY() {\n        return Category.StringNumber;\n    }\n    static get metrics() {\n        var _a;\n        return ((_a = Tables.currentMusicFont().getMetrics().stringNumber) !== null && _a !== void 0 ? _a : {\n            verticalPadding: 0,\n            stemPadding: 0,\n            leftPadding: 0,\n            rightPadding: 0,\n        });\n    }\n    // ## Static Methods\n    // Arrange string numbers inside a `ModifierContext`\n    static format(nums, state) {\n        const left_shift = state.left_shift;\n        const right_shift = state.right_shift;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shift_left = 0;\n        let shift_right = 0;\n        const modLines = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const mc = note.getModifierContext();\n            const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n            if (mc) {\n                if (pos === ModifierPosition.ABOVE) {\n                    num.text_line = mc.getState().top_text_line;\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n                else if (pos === ModifierPosition.BELOW) {\n                    num.text_line = mc.getState().text_line;\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shift_left = Math.max(note.getLeftDisplacedHeadPx(), shift_left);\n                    }\n                    if (right_shift === 0) {\n                        shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n                    }\n                }\n                prev_note = note;\n            }\n            const glyphLine = modLines === 0 ? props.line : modLines;\n            nums_list.push({\n                pos,\n                note,\n                num,\n                line: glyphLine,\n                shiftL: shift_left,\n                shiftR: shift_right,\n            });\n        }\n        // Sort string numbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let num_shiftR = 0;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        let last_line = null;\n        let last_note = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const note = nums_list[i].note;\n            const pos = nums_list[i].pos;\n            const num = nums_list[i].num;\n            const line = nums_list[i].line;\n            const shiftR = nums_list[i].shiftR;\n            // Reset the position of the string number every line.\n            if (line !== last_line || note !== last_note) {\n                num_shiftR = right_shift + shiftR;\n            }\n            const num_width = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift);\n                num_shift = shift_left + num_width; // spacing\n                x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(num_shiftR);\n                num_shift += num_width; // spacing\n                x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n            }\n            last_line = line;\n            last_note = note;\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    constructor(number) {\n        super();\n        this.string_number = number;\n        this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.text_line = 0;\n        this.stem_offset = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.dashed = true; // true - draw dashed extension  false - no extension\n        this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n        this.radius = 8;\n        this.drawCircle = true;\n        this.setWidth(this.radius * 2 + 4);\n        this.resetFont();\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.string_number = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.last_note = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    setDrawCircle(drawCircle) {\n        this.drawCircle = drawCircle;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let stem_ext = {};\n        if (note.hasStem()) {\n            stem_ext = note.checkStem().getExtents();\n        }\n        let dot_y = start.y + this.y_shift + this.y_offset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a < b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.UP) {\n                        dot_y = stem_ext.topY + StringNumber.metrics.stemPadding;\n                    }\n                    dot_y -= this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.BELOW:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a > b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.DOWN) {\n                        dot_y = stem_ext.topY - StringNumber.metrics.stemPadding;\n                    }\n                    dot_y += this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.radius / 2 + StringNumber.metrics.leftPadding;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += this.radius / 2 + StringNumber.metrics.rightPadding;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        ctx.save();\n        if (this.drawCircle) {\n            ctx.beginPath();\n            ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n            ctx.setLineWidth(1.5);\n            ctx.stroke();\n        }\n        ctx.setFont(this.textFont);\n        const x = dot_x - ctx.measureText(this.string_number).width / 2;\n        ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n        const lastNote = this.last_note;\n        if (isStemmableNote(lastNote)) {\n            // Only StemmableNote objects have getStemX().\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n        ctx.restore();\n    }\n}\nStringNumber.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Category, isNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Stroke extends Modifier {\n    static get CATEGORY() {\n        return Category.Stroke;\n    }\n    // Arrange strokes inside `ModifierContext`\n    static format(strokes, state) {\n        const left_shift = state.left_shift;\n        const stroke_spacing = 0;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                // Only StaveNote objects have getKeyProps().\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                // Only TabNote objects have getPositions().\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = left_shift;\n        // There can only be one stroke .. if more than one, they overlay each other\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n        }, 0);\n        state.left_shift += xShift;\n        return true;\n    }\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ all_voices: true }, options);\n        // multi voice - span stroke across all voices if true\n        this.all_voices = this.options.all_voices;\n        // multi voice - end note of stroke, set in draw()\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            font_scale: 38,\n        };\n        this.resetFont();\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.note_end = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let ys = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const line_space = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                // Only Note objects have getYs().\n                // note is an instance of either StaveNote or TabNote.\n                ys = note.getYs();\n                for (let n = 0; n < ys.length; n++) {\n                    if (this.note === notes[i] || this.all_voices) {\n                        topY = Math.min(topY, ys[n]);\n                        botY = Math.max(botY, ys[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrow_shift_x = 0;\n        let arrow_y = 0;\n        let text_shift_x = 0;\n        let text_y = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                arrow_y = topY - line_space / 2 + 10;\n                botY += line_space / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = 0.5;\n                arrow_y = botY + line_space / 2;\n                topY -= line_space / 2;\n                break;\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASQUEDO_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                text_shift_x = this.x_shift + arrow_shift_x - 2;\n                if (isStaveNote(note)) {\n                    topY += 1.5 * line_space;\n                    if ((botY - topY) % 2 !== 0) {\n                        botY += 0.5 * line_space;\n                    }\n                    else {\n                        botY += line_space;\n                    }\n                    arrow_y = topY - line_space;\n                    text_y = botY + line_space + 2;\n                }\n                else {\n                    topY += 1.5 * line_space;\n                    botY += line_space;\n                    arrow_y = topY - 0.75 * line_space;\n                    text_y = botY + 0.25 * line_space;\n                }\n                break;\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASQUEDO_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = -4;\n                text_shift_x = this.x_shift + arrow_shift_x - 1;\n                if (isStaveNote(note)) {\n                    arrow_y = line_space / 2;\n                    topY += 0.5 * line_space;\n                    if ((botY - topY) % 2 === 0) {\n                        botY += line_space / 2;\n                    }\n                    arrow_y = botY + 0.5 * line_space;\n                    text_y = topY - 1.25 * line_space;\n                }\n                else {\n                    topY += 0.25 * line_space;\n                    botY += 0.5 * line_space;\n                    arrow_y = botY + 0.25 * line_space;\n                    text_y = topY - line_space;\n                }\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY += 0.5 * line_space;\n                botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        let strokeLine = 'straight';\n        // Draw the stroke\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n        }\n        else {\n            strokeLine = 'wiggly';\n            if (isStaveNote(note)) {\n                for (let i = topY; i <= botY; i += line_space) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n            }\n            else {\n                let i;\n                for (i = topY; i <= botY; i += 10) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n                if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n                    text_y = i + 0.25 * line_space;\n                }\n            }\n        }\n        if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n            return; // skip drawing arrow heads or text\n        }\n        // Draw the arrow head\n        Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n            category: `stroke.${arrow}.${strokeLine}`,\n        });\n        // Draw the rasquedo \"R\"\n        if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText('R', x + text_shift_x, text_y);\n            ctx.restore();\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n};\nStroke.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Bend } from './bend';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n    static get CATEGORY() {\n        return Category.Vibrato;\n    }\n    /** Arrange vibratos inside a `ModifierContext`. */\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        // Vibratos are always on top.\n        let text_line = state.top_text_line;\n        let width = 0;\n        let shift = state.right_shift - 7;\n        // If there's a bend, drop the text line\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            text_line = text_line - (bendHeight + 1);\n        }\n        else {\n            state.top_text_line += 1;\n        }\n        // Format Vibratos\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(text_line);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.right_shift += width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.render_options = {\n            harsh: false,\n            vibrato_width: 20,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n        };\n        this.setVibratoWidth(this.render_options.vibrato_width);\n    }\n    /** Set harsh vibrato. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Set vibrato width in pixels. */\n    setVibratoWidth(width) {\n        this.render_options.vibrato_width = width;\n        this.setWidth(width);\n        return this;\n    }\n    /** Draw the vibrato on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x + this.x_shift;\n        const vy = note.getYForTopText(this.text_line) + 2;\n        Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n    }\n    /**\n     * Static rendering method that can be called from\n     * other classes (e.g. VibratoBracket).\n     */\n    static renderVibrato(ctx, x, y, opts) {\n        const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n        const num_waves = vibrato_width / wave_width;\n        ctx.beginPath();\n        let i;\n        if (harsh) {\n            ctx.moveTo(x, y + wave_girth + 1);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x + wave_width, y - wave_height / 2);\n                x += wave_width;\n                ctx.lineTo(x + wave_width, y + wave_height / 2);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n                ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n        else {\n            ctx.moveTo(x, y + wave_girth);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n                x += wave_width;\n                ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n                ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.)\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Bend } from './bend';\nimport { ChordSymbol } from './chordsymbol';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { StaveNote } from './stavenote';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\nimport { Vibrato } from './vibrato';\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('Vex.Flow.ModifierContext', args);\n}\nexport class ModifierContext {\n    constructor() {\n        // Formatting data.\n        this.state = {\n            left_shift: 0,\n            right_shift: 0,\n            text_line: 0,\n            top_text_line: 0,\n        };\n        // Current members\n        this.members = {};\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.formatted = false;\n        this.width = 0;\n        this.spacing = 0;\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    /**\n     * this.members maps CATEGORY strings to arrays of Tickable | Modifier | StaveNote | TabNote.\n     * Here we add a new member to this.members, and create a new array if needed.\n     * @param member\n     * @returns this\n     */\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    /**\n     * @deprecated\n     */\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        var _a;\n        return (_a = this.members[category]) !== null && _a !== void 0 ? _a : [];\n    }\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.left_shift;\n    }\n    getRightShift() {\n        return this.state.right_shift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.left_shift + this.state.right_shift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        L('Preformatting ModifierContext');\n        const state = this.state;\n        const members = this.members;\n        // The ordering below determines when different members are formatted and rendered.\n        StaveNote.format(members[Category.StaveNote], state);\n        Parenthesis.format(members[Category.Parenthesis], state);\n        Dot.format(members[Category.Dot], state);\n        FretHandFinger.format(members[Category.FretHandFinger], state);\n        Accidental.format(members[Category.Accidental], state);\n        Stroke.format(members[Category.Stroke], state);\n        GraceNoteGroup.format(members[Category.GraceNoteGroup], state);\n        NoteSubGroup.format(members[Category.NoteSubGroup], state);\n        StringNumber.format(members[Category.StringNumber], state);\n        Articulation.format(members[Category.Articulation], state);\n        Ornament.format(members[Category.Ornament], state);\n        Annotation.format(members[Category.Annotation], state);\n        ChordSymbol.format(members[Category.ChordSymbol], state);\n        Bend.format(members[Category.Bend], state);\n        Vibrato.format(members[Category.Vibrato], state, this);\n        // Update width of this member context\n        this.width = state.left_shift + state.right_shift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        L('Postformatting ModifierContext');\n        // If post-formatting is required for an element, add more lines below.\n        StaveNote.postFormat(this.getMembers(Category.StaveNote));\n    }\n}\nModifierContext.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n// MIT License\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('Vex.Flow.Clef', args);\n}\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nexport class Clef extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Clef;\n    }\n    /**\n     * Every clef name is associated with a glyph code from the font file\n     * and a default stave line number.\n     */\n    static get types() {\n        return {\n            treble: {\n                code: 'gClef',\n                line: 3,\n                point: 0,\n            },\n            bass: {\n                code: 'fClef',\n                line: 1,\n                point: 0,\n            },\n            alto: {\n                code: 'cClef',\n                line: 2,\n                point: 0,\n            },\n            tenor: {\n                code: 'cClef',\n                line: 1,\n                point: 0,\n            },\n            percussion: {\n                code: 'unpitchedPercussionClef1',\n                line: 2,\n                point: 0,\n            },\n            soprano: {\n                code: 'cClef',\n                line: 4,\n                point: 0,\n            },\n            'mezzo-soprano': {\n                code: 'cClef',\n                line: 3,\n                point: 0,\n            },\n            'baritone-c': {\n                code: 'cClef',\n                line: 0,\n                point: 0,\n            },\n            'baritone-f': {\n                code: 'fClef',\n                line: 2,\n                point: 0,\n            },\n            subbass: {\n                code: 'fClef',\n                line: 0,\n                point: 0,\n            },\n            french: {\n                code: 'gClef',\n                line: 4,\n                point: 0,\n            },\n            tab: {\n                code: '6stringTabClef',\n                point: 0,\n            },\n        };\n    }\n    /** Create a new clef. */\n    constructor(type, size, annotation) {\n        super();\n        /**\n         * The attribute `clef` must be a key from\n         * `Clef.types`\n         */\n        this.clef = Clef.types['treble'];\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        this.setWidth(Tables.currentMusicFont().lookupMetric(`clef.${this.size}.width`));\n        L('Creating clef:', type);\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef = Clef.types[type];\n        if (size === undefined) {\n            this.size = 'default';\n        }\n        else {\n            this.size = size;\n        }\n        const musicFont = Tables.currentMusicFont();\n        this.clef.point = musicFont.lookupMetric(`clef.${this.size}.point`, 0);\n        this.glyph = new Glyph(this.clef.code, this.clef.point, {\n            category: `clef.${this.clef.code}.${this.size}`,\n        });\n        // If an annotation, such as 8va, is specified, add it to the Clef object.\n        if (annotation !== undefined) {\n            const code = musicFont.lookupMetric(`clef.annotations.${annotation}.smuflCode`);\n            const point = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.point`);\n            const line = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.line`);\n            const x_shift = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.shiftX`);\n            this.annotation = { code, point, line, x_shift };\n            this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n            this.attachment.metrics.x_max = 0;\n            this.attachment.setXShift(this.annotation.x_shift);\n        }\n        else {\n            this.annotation = undefined;\n        }\n        return this;\n    }\n    /** Get clef width. */\n    getWidth() {\n        if (this.type === 'tab') {\n            defined(this.stave, 'ClefError', \"Can't get width without stave.\");\n        }\n        return this.width;\n    }\n    /** Set associated stave. */\n    setStave(stave) {\n        this.stave = stave;\n        if (this.type === 'tab') {\n            const glyph = defined(this.glyph, 'ClefError', \"Can't set stave without glyph.\");\n            const numLines = this.stave.getNumLines();\n            const musicFont = Tables.currentMusicFont();\n            const point = musicFont.lookupMetric(`clef.lineCount.${numLines}.point`);\n            const shiftY = musicFont.lookupMetric(`clef.lineCount.${numLines}.shiftY`);\n            glyph.setPoint(point);\n            glyph.setYShift(shiftY);\n        }\n        return this;\n    }\n    /** Render clef. */\n    draw() {\n        const glyph = defined(this.glyph, 'ClefError', \"Can't draw clef without glyph.\");\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('clef', this.getAttribute('id'));\n        glyph.setStave(stave);\n        glyph.setContext(ctx);\n        if (this.clef.line !== undefined) {\n            this.placeGlyphOnLine(glyph, stave, this.clef.line);\n        }\n        glyph.renderToStave(this.x);\n        if (this.annotation !== undefined && this.attachment !== undefined) {\n            this.placeGlyphOnLine(this.attachment, stave, this.annotation.line);\n            this.attachment.setStave(stave);\n            this.attachment.setContext(ctx);\n            this.attachment.renderToStave(this.x);\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n/** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\nClef.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport class KeySignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.KeySignature;\n    }\n    // Create a new Key Signature based on a `key_spec`\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n        this.glyphs = [];\n        this.xPositions = []; // relative to this.x\n        this.paddingForced = false;\n    }\n    // Add an accidental glyph to the `KeySignature` instance which represents\n    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n    // spacing will be included in the glyph's position\n    convertToGlyph(acc, nextAcc) {\n        const accGlyphData = Tables.accidentalCodes(acc.type);\n        const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n        // Determine spacing between current accidental and the next accidental\n        let extraWidth = 1;\n        if (acc.type === 'n' && nextAcc) {\n            const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n            if (spacing) {\n                const isAbove = nextAcc.line >= acc.line;\n                extraWidth = isAbove ? spacing.above : spacing.below;\n            }\n        }\n        // Place the glyph on the stave\n        this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n        this.glyphs.push(glyph);\n        const xPosition = this.xPositions[this.xPositions.length - 1];\n        const glyphWidth = glyph.getMetrics().width + extraWidth;\n        // Store the next accidental's x position\n        this.xPositions.push(xPosition + glyphWidth);\n        // Expand size of key signature\n        this.width += glyphWidth;\n    }\n    // Cancel out a key signature provided in the `spec` parameter. This will\n    // place appropriate natural accidentals before the key signature.\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        // Get the accidental list for the cancelled key signature\n        const cancel_accList = Tables.keySignature(spec);\n        // If the cancelled key has a different accidental type, ie: # vs b\n        const different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n        // Determine how many naturals needed to add\n        const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n        // Return if no naturals needed\n        if (naturals < 1)\n            return undefined;\n        // Get the line position for each natural\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!different_types) {\n                index = cancel_accList.length - naturals + i;\n            }\n            const acc = cancel_accList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        // Combine naturals with main accidental list for the key signature\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancel_accList[0].type,\n        };\n    }\n    // Deprecated\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    // Apply the accidental staff line placement based on the `clef` and\n    // the  accidental `type` for the key signature ('# or 'b').\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0; // if clef === \"treble\"\n        let customLines; // when clef doesn't follow treble key sig shape\n        switch (clef) {\n            // Treble & Subbass both have offsets of 0, so are not included.\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        // If there's a special case, assign those lines/spaces:\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    // Alter the accidentals of a key spec one by one.\n    // Each alteration is a new accidental that replaces the\n    // original accidental (or the canceled one).\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        const stave = this.checkStave();\n        this.width = 0;\n        this.glyphs = [];\n        this.xPositions = [0]; // initialize with initial x position\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n            }\n        }\n        this.formatted = true;\n    }\n    /**\n     * Return the Glyph objects making up this KeySignature.\n     */\n    getGlyphs() {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.glyphs.length; i++) {\n            const glyph = this.glyphs[i];\n            const x = this.x + this.xPositions[i];\n            glyph.setStave(stave);\n            glyph.setContext(ctx);\n            glyph.renderToStave(x);\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n// Space between natural and following accidental depending\n// on vertical position\nKeySignature.accidentalSpacing = {\n    '#': {\n        above: 6,\n        below: 4,\n    },\n    b: {\n        above: 4,\n        below: 7,\n    },\n    n: {\n        above: 4,\n        below: 1,\n    },\n    '##': {\n        above: 6,\n        below: 4,\n    },\n    bb: {\n        above: 4,\n        below: 7,\n    },\n    db: {\n        above: 4,\n        below: 7,\n    },\n    d: {\n        above: 4,\n        below: 7,\n    },\n    bbs: {\n        above: 4,\n        below: 7,\n    },\n    '++': {\n        above: 6,\n        below: 4,\n    },\n    '+': {\n        above: 6,\n        below: 4,\n    },\n    '+-': {\n        above: 6,\n        below: 4,\n    },\n    '++-': {\n        above: 6,\n        below: 4,\n    },\n    bs: {\n        above: 4,\n        below: 10,\n    },\n    bss: {\n        above: 4,\n        below: 10,\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class Repetition extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Repetition;\n    }\n    constructor(type, x, y_shift) {\n        super();\n        this.symbol_type = type;\n        this.x = x;\n        this.x_shift = 0;\n        this.y_shift = y_shift;\n        this.resetFont();\n    }\n    setShiftX(x) {\n        this.x_shift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        this.setRendered();\n        switch (this.symbol_type) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSignoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSignoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.coda.offsetY'), 40, 'coda', { category: 'coda' });\n        return this;\n    }\n    drawSignoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.segno.offsetY'), 30, 'segno', { category: 'segno' });\n        return this;\n    }\n    drawSymbolText(stave, x, text, draw_coda) {\n        const ctx = stave.checkContext();\n        ctx.save();\n        ctx.setFont(this.textFont);\n        let text_x = 0;\n        let symbol_x = 0;\n        const modifierWidth = stave.getNoteStartX() - this.x;\n        switch (this.symbol_type) {\n            // To the left with symbol\n            case Repetition.type.CODA_LEFT:\n                // Offset Coda text to right of stave beginning\n                text_x = this.x + stave.getVerticalBarWidth();\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n            // To the right without symbol\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width;\n                break;\n            // To the right with symbol\n            default:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) +\n            this.y_shift +\n            Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetY');\n        if (draw_coda) {\n            Glyph.renderGlyph(ctx, symbol_x, y, 40, 'coda', { category: 'coda' });\n        }\n        ctx.fillText(text, text_x, y + 5);\n        ctx.restore();\n        return this;\n    }\n}\nRepetition.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13, // To Coda at end of stave\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nexport class StaveSection extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveSection;\n    }\n    constructor(section, x, shift_y, drawRect = true) {\n        super();\n        this.setWidth(16);\n        this.section = section;\n        this.x = x;\n        this.shift_x = 0;\n        this.shift_y = shift_y;\n        this.drawRect = drawRect;\n        this.resetFont();\n    }\n    setStaveSection(section) {\n        this.section = section;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const borderWidth = 2;\n        const padding = 2;\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(borderWidth);\n        ctx.setFont(this.textFont);\n        const textFormatter = TextFormatter.create(this.textFont);\n        const textWidth = textFormatter.getWidthForTextInPx(this.section);\n        const textY = textFormatter.getYForStringInPx(this.section);\n        const textHeight = textY.height;\n        const headroom = -1 * textY.yMin;\n        const width = textWidth + 2 * padding; // add left & right padding\n        const height = textHeight + 2 * padding; // add top & bottom padding\n        //  Seems to be a good default y\n        const y = stave.getYForTopText(1.5) + this.shift_y;\n        const x = this.x + shift_x;\n        if (this.drawRect) {\n            ctx.beginPath();\n            ctx.rect(x, y - height + headroom, width, height);\n            ctx.stroke();\n        }\n        ctx.fillText(this.section, x + padding, y - padding);\n        ctx.restore();\n        return this;\n    }\n}\nStaveSection.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nexport class StaveTempo extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveTempo;\n    }\n    constructor(tempo, x, shift_y) {\n        super();\n        /** Font size for note. */\n        this.render_options = { glyph_font_scale: 30 };\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.shift_x = 10;\n        this.shift_y = shift_y;\n        this.resetFont();\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const options = this.render_options;\n        // FIXME: What does the '38' mean? Why 38? Is that supposed to\n        // be the default font size for standard notation?\n        const scale = options.glyph_font_scale / 38;\n        const name = this.tempo.name;\n        const duration = this.tempo.duration;\n        const dots = this.tempo.dots || 0;\n        const bpm = this.tempo.bpm;\n        let x = this.x + this.shift_x + shift_x;\n        const y = stave.getYForTopText(1) + this.shift_y;\n        ctx.save();\n        const textFormatter = TextFormatter.create(this.textFont);\n        if (name) {\n            ctx.setFont(this.textFont);\n            ctx.fillText(name, x, y);\n            x += textFormatter.getWidthForTextInPx(name);\n        }\n        if (duration && bpm) {\n            // Override the weight and style.\n            const noteTextFont = Object.assign(Object.assign({}, this.textFont), { weight: 'normal', style: 'normal' });\n            ctx.setFont(noteTextFont);\n            const noteTextFormatter = TextFormatter.create(noteTextFont);\n            if (name) {\n                x += noteTextFormatter.getWidthForTextInPx('|');\n                ctx.fillText('(', x, y);\n                x += noteTextFormatter.getWidthForTextInPx('(');\n            }\n            const glyphProps = Tables.getGlyphProps(duration);\n            x += 3 * scale;\n            Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, glyphProps.code_head);\n            x += Glyph.getWidth(glyphProps.code_head, options.glyph_font_scale);\n            // Draw stem and flags\n            if (glyphProps.stem) {\n                let stem_height = 30;\n                if (glyphProps.beam_count)\n                    stem_height += 3 * (glyphProps.beam_count - 1);\n                stem_height *= scale;\n                const y_top = y - stem_height;\n                ctx.fillRect(x - scale, y_top, scale, stem_height);\n                if (glyphProps.code && glyphProps.code_flag_upstem) {\n                    const flagMetrics = Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, glyphProps.code_flag_upstem, {\n                        category: 'flag.staveTempo',\n                    });\n                    x += (flagMetrics.width * Tables.NOTATION_FONT_SCALE) / flagMetrics.font.getData().resolution;\n                }\n            }\n            // Draw dot\n            for (let i = 0; i < dots; i++) {\n                x += 6 * scale;\n                ctx.beginPath();\n                ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n                ctx.fill();\n            }\n            ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n        }\n        ctx.restore();\n        return this;\n    }\n}\nStaveTempo.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 14,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { TextJustification, TextNote } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveText extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveText;\n    }\n    constructor(text, position, options = {}) {\n        super();\n        this.setWidth(16);\n        this.text = text;\n        this.position = position;\n        this.options = Object.assign({ shift_x: 0, shift_y: 0, justification: TextNote.Justification.CENTER }, options);\n        this.resetFont();\n    }\n    setStaveText(text) {\n        this.text = text;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText('' + this.text).width;\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - text_width - 24 + this.options.shift_x;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX() + this.options.shift_x;\n                if (this.options.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - text_width / 2;\n                }\n                else if (this.options.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - text_width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2) + this.options.shift_y;\n                }\n                else {\n                    y = stave.getYForBottomText(2) + this.options.shift_y;\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        ctx.fillText('' + this.text, x, y + 4);\n        ctx.restore();\n        return this;\n    }\n}\nStaveText.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Renders time signatures glyphs for staffs\n// This class is used by TimeSignature to render the associated glyphs\nimport { Glyph } from './glyph';\nimport { defined } from './util';\nexport class TimeSignatureGlyph extends Glyph {\n    constructor(timeSignature, topDigits, botDigits, code, point, options) {\n        var _a;\n        super(code, point, options);\n        this.timeSignature = timeSignature;\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        let topWidth = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            let timeSigType = topDigits[i];\n            switch (topDigits[i]) {\n                case '-':\n                    timeSigType = 'Minus';\n                    break;\n                case '+':\n                    timeSigType = botDigits.length > 0 ? 'PlusSmall' : 'Plus';\n                    break;\n                case '(':\n                    timeSigType = botDigits.length > 0 ? 'ParensLeftSmall' : 'ParensLeft';\n                    break;\n                case ')':\n                    timeSigType = botDigits.length > 0 ? 'ParensRightSmall' : 'ParensRight';\n                    break;\n            }\n            const topGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.topGlyphs.push(topGlyph);\n            topWidth += (_a = topGlyph.getMetrics().width) !== null && _a !== void 0 ? _a : 0;\n        }\n        let botWidth = 0;\n        for (let i = 0; i < botDigits.length; ++i) {\n            let timeSigType = botDigits[i];\n            switch (botDigits[i]) {\n                case '+':\n                    timeSigType = 'PlusSmall';\n                    break;\n                case '(':\n                    timeSigType = 'ParensLeftSmall';\n                    break;\n                case ')':\n                    timeSigType = 'ParensRightSmall';\n                    break;\n            }\n            const botGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.botGlyphs.push(botGlyph);\n            botWidth += defined(botGlyph.getMetrics().width);\n        }\n        this.width = Math.max(topWidth, botWidth);\n        this.xMin = this.getMetrics().x_min;\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n        this.reset();\n    }\n    getMetrics() {\n        return {\n            x_min: this.xMin,\n            x_max: this.xMin + this.width,\n            width: this.width,\n        };\n    }\n    renderToStave(x) {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        let start_x = x + this.topStartX;\n        let y = 0;\n        if (this.botGlyphs.length > 0)\n            y = stave.getYForLine(this.timeSignature.topLine);\n        else\n            y = (stave.getYForLine(this.timeSignature.topLine) + stave.getYForLine(this.timeSignature.bottomLine)) / 2;\n        for (let i = 0; i < this.topGlyphs.length; ++i) {\n            const glyph = this.topGlyphs[i];\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + this.x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n        start_x = x + this.botStartX;\n        y = stave.getYForLine(this.timeSignature.bottomLine);\n        for (let i = 0; i < this.botGlyphs.length; ++i) {\n            const glyph = this.botGlyphs[i];\n            this.timeSignature.placeGlyphOnLine(glyph, stave, 0);\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + glyph.getMetrics().x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignatureGlyph } from './timesigglyph';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    if (numbers.length !== 2 && numbers[0] !== '+' && numbers[0] !== '-') {\n        throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`);\n    }\n    numbers.forEach((number) => {\n        // Characters consisting in number 0..9, '+', '-', '(' or ')'\n        if (/^[0-9+\\-()]+$/.test(number) == false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\nexport class TimeSignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.TimeSignature;\n    }\n    static get glyphs() {\n        return {\n            C: {\n                code: 'timeSigCommon',\n                point: 40,\n                line: 2,\n            },\n            'C|': {\n                code: 'timeSigCutCommon',\n                point: 40,\n                line: 2,\n            },\n        };\n    }\n    constructor(timeSpec = '4/4', customPadding = 15, validate_args = true) {\n        super();\n        this.validate_args = validate_args;\n        const padding = customPadding;\n        const musicFont = Tables.currentMusicFont();\n        this.point = musicFont.lookupMetric('digits.point');\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.topLine = 2 + fontLineShift;\n        this.bottomLine = 4 + fontLineShift;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.info = this.parseTimeSpec(timeSpec);\n        this.setWidth(defined(this.info.glyph.getMetrics().width));\n        this.setPadding(padding);\n    }\n    parseTimeSpec(timeSpec) {\n        var _a, _b;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const { line, code, point } = TimeSignature.glyphs[timeSpec];\n            return {\n                line,\n                num: false,\n                glyph: new Glyph(code, point),\n            };\n        }\n        if (this.validate_args) {\n            assertIsValidTimeSig(timeSpec);\n        }\n        const parts = timeSpec.split('/');\n        return {\n            num: true,\n            glyph: this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : ''),\n        };\n    }\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        return new TimeSignatureGlyph(this, topDigits, botDigits, 'timeSig0', this.point);\n    }\n    getInfo() {\n        return this.info;\n    }\n    setTimeSig(timeSpec) {\n        this.info = this.parseTimeSpec(timeSpec);\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        this.info.glyph.setStave(stave);\n        this.info.glyph.setContext(ctx);\n        this.placeGlyphOnLine(this.info.glyph, stave, this.info.line);\n        this.info.glyph.renderToStave(this.x);\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { KeySignature } from './keysignature';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { Volta } from './stavevolta';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { RuntimeError } from './util';\n// Used by Stave.format() to sort the modifiers at the beginning and end of a stave.\n// The keys (computed property names) match the CATEGORY property in the\n// Barline, Clef, KeySignature, TimeSignature classes.\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nexport class Stave extends Element {\n    static get CATEGORY() {\n        return Category.Stave;\n    }\n    // This is the sum of the padding that normally goes on left + right of a stave during\n    // drawing. Used to size staves correctly with content width.\n    static get defaultPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.padding') + musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    // Right padding, used by system if startX is already determined.\n    static get rightPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    constructor(x, y, width, options) {\n        super();\n        // Initialized by the constructor via this.resetLines().\n        this.height = 0;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.start_x = x + 5;\n        this.end_x = x + width;\n        this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.resetFont();\n        this.options = Object.assign({ vertical_bar_width: 10, num_lines: 5, fill_style: '#999999', left_bar: true, right_bar: true, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, space_above_staff_ln: 4, space_below_staff_ln: 4, top_text_position: 1, bottom_text_position: 4, line_config: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 1.4 };\n        this.resetLines();\n        // beg bar\n        this.addModifier(new Barline(this.options.left_bar ? BarlineType.SINGLE : BarlineType.NONE));\n        // end bar\n        this.addEndModifier(new Barline(this.options.right_bar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    /** Set default style for ledger lines. */\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    /** Get default style for ledger lines. */\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacing_between_lines_px * spacing;\n    }\n    resetLines() {\n        this.options.line_config = [];\n        for (let i = 0; i < this.options.num_lines; i++) {\n            this.options.line_config.push({ visible: true });\n        }\n        this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n        this.options.bottom_text_position = this.options.num_lines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.start_x = x;\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.start_x;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.end_x;\n    }\n    getTieStartX() {\n        return this.start_x;\n    }\n    getTieEndX() {\n        return this.end_x;\n    }\n    getX() {\n        return this.x;\n    }\n    getNumLines() {\n        return this.options.num_lines;\n    }\n    setNumLines(n) {\n        this.options.num_lines = n;\n        this.resetLines();\n        return this;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    getY() {\n        return this.y;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0) - Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    getBottomLineBottomY() {\n        return this.getYForLine(this.getNumLines() - 1) + Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.start_x += shift;\n        this.end_x += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.end_x = this.x + width;\n        // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n        // this.modifiers[1].setX(this.end_x);\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    getStyle() {\n        return Object.assign({ fillStyle: this.options.fill_style, strokeStyle: this.options.fill_style, lineWidth: Tables.STAVE_LINE_THICKNESS }, super.getStyle());\n    }\n    /**\n     * Set the measure number of this Stave.\n     */\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    /**\n     * Return the measure number of this Stave.\n     */\n    getMeasure() {\n        return this.measure;\n    }\n    /**\n     * Gets the pixels to shift from the beginning of the stave\n     * following the modifier at the provided index\n     * @param  {Number} index The index from which to determine the shift\n     * @return {Number}       The amount of pixels shifted\n     */\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let start_x = this.start_x - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n            start_x -= begBarline.getWidth();\n        }\n        return start_x;\n    }\n    /** Coda & Segno Symbol functions */\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    // Volta functions\n    setVoltaType(type, number_t, y) {\n        this.modifiers.push(new Volta(type, number_t, this.x, y));\n        return this;\n    }\n    // Section functions\n    setSection(section, y, xOffset = 0, fontSize, drawRect = true) {\n        const staveSection = new StaveSection(section, this.x + xOffset, y, drawRect);\n        if (fontSize)\n            staveSection.setFontSize(fontSize);\n        this.modifiers.push(staveSection);\n        return this;\n    }\n    // Tempo functions\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    // Text functions\n    setText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacing_between_lines_px;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n        return score_bottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.num_lines);\n    }\n    // This returns\n    /** @returns the y for the *center* of a staff line */\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        // Does the reverse of getYForLine - somewhat dumb and just calls\n        // getYForLine until the right value is reaches\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.top_text_position);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottom_text_position + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    // This method adds a stave modifier to the stave. Note that the first two\n    // modifiers (BarLines) are automatically added upon construction.\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    // Bar Line functions\n    setBegBarType(type) {\n        // Only valid bar types at beginning of stave is none, single or begin repeat\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        // Repeat end not valid at end of stave\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a key signature to the stave.\n     *\n     * Example:\n     * `stave.addKeySignature('Db');`\n     * @param keySpec new key specification `[A-G][b|#]?`\n     * @param cancelKeySpec\n     * @param position\n     * @returns\n     */\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    /**\n     * Add a clef to the stave.\n     *\n     * Example:\n     *\n     * stave.addClef('treble')\n     * @param clef clef (treble|bass|...) see {@link Clef.types}\n     * @param size\n     * @param annotation\n     * @param position\n     * @returns\n     */\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a time signature to the stave\n     *\n     * Example:\n     *\n     * `stave.addTimeSignature('4/4');`\n     * @param timeSpec time signature specification `(C\\||C|\\d\\/\\d)`\n     * @param customPadding\n     * @param position\n     * @returns\n     */\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    // Deprecated\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    /**\n     * @param position\n     * @param category\n     * @returns array of StaveModifiers that match the provided position and category.\n     */\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            // A category was provided.\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            // A position was provided.\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            // Both position and category were provided!\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    /**\n     * Use the modifier's `getCategory()` as a key for the `order` array.\n     * The retrieved value is used to sort modifiers from left to right (0 to to 3).\n     */\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.start_x = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = layoutMetrics.xMax || 0;\n                    widths.paddingRight = layoutMetrics.paddingRight || 0;\n                }\n                widths.left = -layoutMetrics.xMin || 0;\n                widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    /**\n     * All drawing functions below need the context to be set.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.applyStyle();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const num_lines = this.options.num_lines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        // Render lines\n        for (let line = 0; line < num_lines; line++) {\n            y = this.getYForLine(line);\n            if (this.options.line_config[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + width, y);\n                ctx.stroke();\n            }\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n        // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            // Only draw modifier if it has a draw function\n            if (typeof modifier.draw === 'function') {\n                modifier.applyStyle(ctx);\n                modifier.draw(this, this.getModifierXShift(i));\n                modifier.restoreStyle(ctx);\n            }\n        }\n        // Render measure numbers\n        if (this.measure > 0) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n            ctx.restore();\n        }\n        return this;\n    }\n    getVerticalBarWidth() {\n        return this.options.vertical_bar_width;\n    }\n    /**\n     * Get the current configuration for the Stave.\n     * @return {Array} An array of configuration objects.\n     */\n    getConfigForLines() {\n        return this.options.line_config;\n    }\n    /**\n     * Configure properties of the lines in the Stave\n     * @param line_number The index of the line to configure.\n     * @param line_config An configuration object for the specified line.\n     * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n     *   range of the number of lines specified in the constructor.\n     */\n    setConfigForLine(line_number, line_config) {\n        if (line_number >= this.options.num_lines || line_number < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (line_config.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof line_config.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.line_config[line_number] = line_config;\n        return this;\n    }\n    /**\n     * Set the staff line configuration array for all of the lines at once.\n     * @param lines_configuration An array of line configuration objects.  These objects\n     *   are of the same format as the single one passed in to setLineConfiguration().\n     *   The caller can set null for any line config entry if it is desired that the default be used\n     * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n     *   exactly the same number of elements as the num_lines configuration object set in\n     *   the constructor.\n     */\n    setConfigForLines(lines_configuration) {\n        if (lines_configuration.length !== this.options.num_lines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        // Make sure the defaults are present in case an incomplete set of\n        //  configuration options were supplied.\n        // eslint-disable-next-line\n        for (const line_config in lines_configuration) {\n            // Allow '{}' to be used if the caller just wants the default for a particular node.\n            if (lines_configuration[line_config].visible == undefined) {\n                lines_configuration[line_config] = this.options.line_config[line_config];\n            }\n            this.options.line_config[line_config] = Object.assign(Object.assign({}, this.options.line_config[line_config]), lines_configuration[line_config]);\n        }\n        this.options.line_config = lines_configuration;\n        return this;\n    }\n    static formatBegModifiers(staves) {\n        let maxX = 0;\n        // align note start\n        staves.forEach((stave) => {\n            if (stave.getNoteStartX() > maxX)\n                maxX = stave.getNoteStartX();\n        });\n        staves.forEach((stave) => {\n            stave.setNoteStartX(maxX);\n        });\n        maxX = 0;\n        // align REPEAT_BEGIN\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    if (modifier.getX() > maxX)\n                        maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    modifier.setX(maxX);\n            });\n        });\n        maxX = 0;\n        // Align time signatures\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.TimeSignature);\n            modifiers.forEach((modifier) => {\n                if (modifier.getX() > maxX)\n                    maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.TimeSignature);\n            modifiers.forEach((modifier) => {\n                modifier.setX(maxX);\n            });\n        });\n    }\n}\nStave.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 8,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let x_shift = 3;\n    let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    const thickLineOffset = 2; // For aesthetics\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        x_shift = -5; // Flips the side of the thin line\n        variableWidth = 3;\n    }\n    // Thin line\n    ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n/** StaveConnector implements the connector lines between staves of a system. */\nexport class StaveConnector extends Element {\n    static get CATEGORY() {\n        return Category.StaveConnector;\n    }\n    constructor(top_stave, bottom_stave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.width = 3;\n        this.top_stave = top_stave;\n        this.bottom_stave = bottom_stave;\n        this.type = StaveConnector.type.DOUBLE;\n        this.resetFont();\n        // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n        // 2. Offset BRACE type not to overlap with another StaveConnector\n        this.x_shift = 0;\n        this.texts = [];\n    }\n    /**\n     * Set type.\n     * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n     */\n    setType(type) {\n        const newType = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        // Be certain that the type is a valid type:\n        if (Object.values(StaveConnector.type).includes(newType)) {\n            this.type = newType;\n        }\n        return this;\n    }\n    /**\n     * Get type.\n     * @returns number {@link StaveConnector.type}\n     */\n    getType() {\n        return this.type;\n    }\n    /** Set optional associated Text. */\n    setText(text, options = {}) {\n        this.texts.push({\n            content: text,\n            options: Object.assign({ shift_x: 0, shift_y: 0 }, options),\n        });\n        return this;\n    }\n    setXShift(x_shift) {\n        if (typeof x_shift !== 'number') {\n            throw new RuntimeError('InvalidType', 'x_shift must be a Number');\n        }\n        this.x_shift = x_shift;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render connector and associated text. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.top_stave.getYForLine(0);\n        let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n        let width = this.width;\n        let topX = this.top_stave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.top_stave.getX() + this.top_stave.getWidth();\n        }\n        let attachment_height = botY - topY;\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= this.width + 2;\n                topY -= this.thickness;\n                attachment_height += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                // May need additional code to draw brace\n                const x1 = this.top_stave.getX() - 2 + this.x_shift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachment_height / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachment_height;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachment_height;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachment_height;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachment_height;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachment_height;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachment_height;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachment_height = botY - topY;\n                Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n                Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n                topX -= this.width + 2;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachment_height -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachment_height);\n        }\n        // If the connector is a thin double barline, draw the paralell line\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachment_height);\n        }\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        // Add stave connector text\n        for (let i = 0; i < this.texts.length; i++) {\n            const text = this.texts[i];\n            const text_width = ctx.measureText('' + text.content).width;\n            const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n            const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n            ctx.fillText('' + text.content, x, y + 4);\n        }\n        ctx.restore();\n    }\n}\nStaveConnector.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n/**\n * SINGLE_LEFT and SINGLE are the same value for compatibility\n * with older versions of vexflow which didn't have right sided\n * stave connectors.\n */\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\n/**\n * Connector type:\n * * \"singleRight\"\n * * \"singleLeft\"\n * * \"single\"\n * * \"double\"\n * * \"brace\"\n * * \"bracket\"\n * * \"boldDoubleLeft\"\n * * \"boldDoubleRight\"\n * * \"thinDouble\"\n * * \"none\"\n */\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Beam } from './beam';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { ModifierContext } from './modifiercontext';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { isNote, isStaveNote } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\nimport { Voice } from './voice';\n// Helper function\nconst sumArray = (arr) => arr.reduce((a, b) => a + b, 0);\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts(voices, makeContext, addToContext) {\n    if (voices.length == 0)\n        return {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n    // Initialize tick maps.\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach((voice, voiceIndex) => {\n        // Use resolution multiplier as denominator so that no additional expansion\n        // of fractional tick values is needed.\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            // If we have no tick context for this tick, create one.\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                // Maintain a list of unique integerTicks.\n                tickList.push(integerTicks);\n            }\n            // Add this tickable to the TickContext.\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('Vex.Flow.Formatter', args);\n}\n/**\n * Get the rest line number of the next non-rest note(s).\n * @param notes array of Notes\n * @param currRestLine\n * @param currNoteIndex current note index\n * @param compare if true, return the midpoint between the current rest line and the next rest line\n * @returns a line number, which determines the vertical position of a rest.\n */\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    // If no valid next note group, nextRestLine is same as current.\n    let nextRestLine = currRestLine;\n    // Start with the next note and keep going until we find a valid non-rest note group.\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    // Locate the mid point between two lines.\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nexport class Formatter {\n    /**\n     * Helper function to layout \"notes\" one after the other without\n     * regard for proportions. Useful for tests and debugging.\n     */\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tick = new TickContext().addTickable(note).preFormat();\n            const metrics = tick.getMetrics();\n            tick.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    /** Helper function to plot formatter debug info. */\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        options = Object.assign({ stavePadding: Tables.currentMusicFont().lookupMetric('stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    /**\n     * Helper function to format and draw a single voice. Returns a bounding\n     * box for the notation.\n     * @param ctx  the rendering context\n     * @param stave the stave to which to draw (`Stave` or `TabStave`)\n     * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n     * @param params one of below:\n     *    * Setting `autobeam` only `(context, stave, notes, true)` or\n     *      `(ctx, stave, notes, {autobeam: true})`\n     *    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n     *    * Setting both a struct is needed `(context, stave, notes, {\n     *      autobeam: true, align_rests: true})`\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            auto_beam: false,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.auto_beam = params;\n        }\n        // Start by creating a voice and adding all the notes to it.\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Then create beams, if requested.\n        const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n        // Instantiate a `Formatter` and format the notes.\n        new Formatter()\n            .joinVoices([voice]) // , { align_rests: options.align_rests })\n            .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n        // Render the voice and beams to the stave.\n        voice.setStave(stave).draw(ctx, stave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Return the bounding box of the voice.\n        return voice.getBoundingBox();\n    }\n    /**\n     * Helper function to format and draw aligned tab and stave notes in two\n     * separate staves.\n     * @param ctx the rendering context\n     * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n     * @param stave a `Stave` instance on which to render `Note`s.\n     * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n     * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n     * @param autobeam automatically generate beams.\n     * @param params a configuration object:\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n        let opts = {\n            auto_beam: autobeam,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.auto_beam = params;\n        }\n        // Create a `4/4` voice for `notes`.\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Create a `4/4` voice for `tabnotes`.\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        // Then create beams, if requested.\n        const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n        // Instantiate a `Formatter` and align tab and stave notes.\n        new Formatter()\n            .joinVoices([notevoice]) // , { align_rests: opts.align_rests })\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n        // Render voices and beams to staves.\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Draw a connector between tab and note staves.\n        new StaveConnector(stave, tabstave).setContext(ctx).draw();\n    }\n    /**\n     * Automatically set the vertical position of rests based on previous/next note positions.\n     * @param tickables an array of Tickables.\n     * @param alignAllNotes If `false`, only align rests that are within a group of beamed notes.\n     * @param alignTuplets If `false`, ignores tuplets.\n     */\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                // If activated rests not on default can be rendered as specified.\n                const position = currTickable.getGlyphProps().position.toUpperCase();\n                if (position !== 'R/4' && position !== 'B/4') {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    // Align rests with previous/next notes.\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        // If previous tickable is a rest, use its line number.\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                // Get the rest line for next valid non-rest note group.\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: Tables.SOFTMAX_FACTOR, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        // Minimum width required to render all the notes in the voices.\n        this.minTotalWidth = 0;\n        // This is set to `true` after `minTotalWidth` is calculated.\n        this.hasMinTotalWidth = false;\n        // Arrays of tick and modifier contexts.\n        this.tickContexts = {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n        this.modifierContexts = [];\n        // Gaps between contexts, for free movement of notes post\n        // formatting.\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    /**\n     * Find all the rests in each of the `voices` and align them to neighboring notes.\n     *\n     * @param voices\n     * @param alignAllNotes If `false`, only align rests within beamed groups of notes. If `true`, align all rests.\n     */\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    /**\n     * Estimate the width required to render 'voices'.  This is done by:\n     * 1. Sum the widths of all the tick contexts\n     * 2. Estimate the padding.\n     * The latter is done by calculating the padding 3 different ways, and taking the\n     * greatest value:\n     * 1. the padding required for unaligned notes in different voices\n     * 2. the padding based on the stddev of the tickable widths\n     * 3. the padding based on the stddev of the tickable durations.\n     *\n     * The last 2 quantities estimate a 'width entropy', where notes might need more\n     * room than the proportional formatting gives them.  A measure of all same duration\n     * and width will need no extra padding, and all these quantities will be\n     * zero in that case.\n     *\n     * Note: joinVoices has to be called before calling preCalculateMinTotalWidth.\n     *\n     * @param voices the voices that contain the notes\n     * @returns the estimated width in pixels\n     */\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Tables.currentMusicFont().lookupMetric('stave.unalignedNotePadding');\n        // Calculate additional padding based on 3 methods:\n        // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        // Cache results.\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        // Create tick contexts.\n        if (!voices) {\n            throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n        }\n        this.createTickContexts(voices);\n        // eslint-disable-next-line\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        // Go through each tick context and calculate total width,\n        // and also accumulate values used in padding hints\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            // If this TC doesn't have all the voices on it, it's unaligned.\n            // so increment the unaligned padding accumulator\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            // Calculate the 'width entropy' over all the Tickables.\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        // Find max of 3 methods pad the width with that\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    /**\n     * Get minimum width required to render all voices. Either `format` or\n     * `preCalculateMinTotalWidth` must be called before this method.\n     */\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    /** Calculate the resolution multiplier for `voices`. */\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    /** Create a `ModifierContext` for each tick in `voices`. */\n    createModifierContexts(voices) {\n        if (voices.length == 0)\n            return;\n        const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n        // Initialize tick maps.\n        const tickToContextMap = new Map();\n        const contexts = [];\n        // For each voice, extract notes and create a context for every\n        // new tick that hasn't been seen before.\n        voices.forEach((voice) => {\n            // Use resolution multiplier as denominator so that no additional expansion\n            // of fractional tick values is needed.\n            const ticksUsed = new Fraction(0, resolutionMultiplier);\n            voice.getTickables().forEach((tickable) => {\n                const integerTicks = ticksUsed.numerator;\n                let staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                // If we have no tick context for this tick, create one.\n                if (!staveTickToContextMap) {\n                    tickToContextMap.set(tickable.getStave(), {});\n                    staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                }\n                if (!(staveTickToContextMap ? staveTickToContextMap[integerTicks] : undefined)) {\n                    const newContext = new ModifierContext();\n                    contexts.push(newContext);\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    staveTickToContextMap[integerTicks] = newContext;\n                }\n                // Add this tickable to the TickContext.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tickable.addToModifierContext(staveTickToContextMap[integerTicks]);\n                ticksUsed.add(tickable.getTicks());\n            });\n        });\n        this.modifierContexts.push({\n            map: tickToContextMap,\n            array: contexts,\n            resolutionMultiplier,\n        });\n    }\n    /**\n     * Create a `TickContext` for each tick in `voices`. Also calculate the\n     * total number of ticks in voices.\n     */\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    /**\n     * Get the AlignmentContexts of TickContexts that were created by createTickContexts.\n     * Returns undefined if createTickContexts has not yet been run.\n     */\n    getTickContexts() {\n        return this.tickContexts;\n    }\n    /**\n     * This is the core formatter logic. Format voices and justify them\n     * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n     * that can't retrieve widths without a canvas. This method sets the `x` positions\n     * of all the tickables/notes in the formatter.\n     */\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        // Initialize context maps.\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        // Reset loss history for evaluator.\n        this.lossHistory = [];\n        // If voices and a stave were provided, set the Stave for each voice\n        // and preFormat to apply Y values to the notes;\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        // Now distribute the ticks to each tick context, and assign them their\n        // own X positions.\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        // Pass 1: Give each note maximum width requested by context.\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            // Make sure that all tickables in this context have calculated their\n            // space requirements.\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            // Calculate shift for the next tick.\n            shift = width - metrics.totalLeftPx;\n        });\n        // Use softmax based on all notes across all staves. (options.globalSoftmax)\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        // No justification needed. End formatting.\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        // Start justification. Subtract the right extra pixels of the final context because the formatter\n        // justifies based on the context's X position, which is the left-most part of the note head.\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n        // the softmax of the ticks.\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    // Go through each tickable and search backwards for another tickable\n                    // in the same voice. If found, use that duration (ticks) to calculate\n                    // the expected distance.\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        // Look for matching voices between tick contexts.\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            // Found matching voices, get largest duration\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                // Calculate the limits of the shift based on modifiers, etc.\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                // Don't allow shifting if notes in the same voice can collide\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n                            // so that two different tick contexts don't align across staves.\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            // Calculate the expected distance of the current context from the last matching tickable. The\n                            // distance is scaled down by the softmax for the voice.\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            // Distribute ticks to the contexts based on the calculated distance error.\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                // Move center aligned tickables to middle\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const musicFont = Tables.currentMusicFont();\n        const configMinPadding = musicFont.lookupMetric('stave.endPaddingMin');\n        const configMaxPadding = musicFont.lookupMetric('stave.endPaddingMax');\n        const leftPadding = musicFont.lookupMetric('stave.padding');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        // Just one context. Done formatting.\n        if (contextList.length === 1)\n            return 0;\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        // right justify to either the configured padding, or the min distance between notes, whichever is greatest.\n        // This * 2 keeps the existing formatting unless there is 'a lot' of extra whitespace, which won't break\n        // existing visual regression tests.\n        const paddingMaxCalc = (curTargetWidth) => {\n            let lastTickablePadding = 0;\n            const lastTickable = lastContext && lastContext.getMaxTickable();\n            if (lastTickable) {\n                const voice = lastTickable.getVoice();\n                // If the number of actual ticks in the measure <> configured ticks, right-justify\n                // because the softmax won't yield the correct value\n                if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n                    return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n                }\n                const tickWidth = lastTickable.getWidth();\n                lastTickablePadding =\n                    voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n            }\n            return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n        };\n        let paddingMax = paddingMaxCalc(targetWidth);\n        let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        // Adjust justification width until the right margin is as close as possible to the calculated padding,\n        // without going over\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            paddingMax = paddingMaxCalc(targetWidth);\n            paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    /** Calculate the total cost of this formatting decision. */\n    evaluate() {\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        // Calculate available slack per tick context. This works out how much freedom\n        // to move a context has in either direction, without affecting other notes.\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            // Calculate X position of right edge of previous note\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            // Calculate X position of left edge of current note\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            // Tell the tick contexts how much they can reposition themselves.\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        // Calculate mean distance in each voice for each duration type, then calculate\n        // how far each note is from the mean.\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1 };\n            }\n            else {\n                stats.count += 1;\n                stats.mean = (stats.mean + space) / 2;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        // Calculate how much each note deviates from the mean. Loss function is square\n        // root of the sum of squared deviations.\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    /**\n     * Run a single iteration of rejustification. At a high level, this method calculates\n     * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n     * attempt to reduce the cost. You can call this method multiple times until it finds\n     * and oscillates around a global minimum.\n     * @param options[alpha] the \"learning rate\" for the formatter. It determines how much of a shift\n     * the formatter should make based on its cost function.\n     */\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n        // on adjacent tickcontexts.\n        function move(current, shift, prev, next) {\n            current.setX(current.getX() + shift);\n            current.getFormatterMetrics().freedom.left += shift;\n            current.getFormatterMetrics().freedom.right -= shift;\n            if (prev)\n                prev.getFormatterMetrics().freedom.right += shift;\n            if (next)\n                next.getFormatterMetrics().freedom.left -= shift;\n        }\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            move(context, shift, prevContext, nextContext);\n            const cost = -sumArray(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    /**\n     * This is the top-level call for all formatting logic completed\n     * after `x` *and* `y` values have been computed for the notes\n     * in the voices.\n     */\n    postFormat() {\n        this.modifierContexts.forEach((modifierContexts) => {\n            modifierContexts.array.forEach((mc) => mc.postFormat());\n        });\n        this.tickContexts.list.forEach((tick) => {\n            this.tickContexts.map[tick].postFormat();\n        });\n        return this;\n    }\n    /**\n     * Take all `voices` and create `ModifierContext`s out of them. This tells\n     * the formatters that the voices belong on a single stave.\n     */\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    /**\n     * Align rests in voices, justify the contexts, and position the notes\n     * so voices are aligned and ready to render onto the stave. This method\n     * mutates the `x` positions of all tickables in `voices`.\n     *\n     * Voices are full justified to fit in `justifyWidth` pixels.\n     *\n     * Set `options.context` to the rendering context. Set `options.align_rests`\n     * to true to enable rest alignment.\n     */\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ align_rests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.align_rests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        // Only postFormat if a stave was supplied for y value formatting\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    // This method is just like `format` except that the `justifyWidth` is inferred from the `stave`.\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        // eslint-disable-next-line\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var TupletLocation;\n(function (TupletLocation) {\n    TupletLocation[TupletLocation[\"BOTTOM\"] = -1] = \"BOTTOM\";\n    TupletLocation[TupletLocation[\"TOP\"] = 1] = \"TOP\";\n})(TupletLocation || (TupletLocation = {}));\nexport class Tuplet extends Element {\n    static get CATEGORY() {\n        return Category.Tuplet;\n    }\n    static get LOCATION_TOP() {\n        return TupletLocation.TOP;\n    }\n    static get LOCATION_BOTTOM() {\n        return TupletLocation.BOTTOM;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.tuplet;\n    }\n    constructor(notes, options = {}) {\n        super();\n        this.numerator_glyphs = [];\n        this.denom_glyphs = [];\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.options = options;\n        this.notes = notes;\n        this.num_notes = this.options.num_notes != undefined ? this.options.num_notes : notes.length;\n        // We accept beats_occupied, but warn that it's deprecated:\n        // the preferred property name is now notes_occupied.\n        if (this.options.beats_occupied) {\n            this.beatsOccupiedDeprecationWarning();\n        }\n        this.notes_occupied = this.options.notes_occupied || this.options.beats_occupied || 2;\n        if (this.options.bracketed != undefined) {\n            this.bracketed = this.options.bracketed;\n        }\n        else {\n            this.bracketed = notes.some((note) => !note.hasBeam());\n        }\n        this.ratioed =\n            this.options.ratioed != undefined ? this.options.ratioed : Math.abs(this.notes_occupied - this.num_notes) > 1;\n        this.point = Tables.currentMusicFont().lookupMetric('digits.tupletPoint');\n        this.y_pos = 16;\n        this.x_pos = 100;\n        this.width = 200;\n        this.setTupletLocation(this.options.location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    /**\n     * Set whether or not the bracket is drawn.\n     */\n    setBracketed(bracketed) {\n        this.bracketed = !!bracketed;\n        return this;\n    }\n    /**\n     * Set whether or not the ratio is shown.\n     */\n    setRatioed(ratioed) {\n        this.ratioed = !!ratioed;\n        return this;\n    }\n    /**\n     * Set the tuplet indicator to be displayed either on the top or bottom of the stave.\n     */\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            // eslint-disable-next-line\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.num_notes;\n    }\n    beatsOccupiedDeprecationWarning() {\n        // eslint-disable-next-line\n        console.warn('beats_occupied has been deprecated as an option for tuplets. Please use notes_occupied instead.', 'Calls to getBeatsOccupied / setBeatsOccupied should now be routed to getNotesOccupied / setNotesOccupied.', 'The old methods will be removed in VexFlow 5.0.');\n    }\n    getBeatsOccupied() {\n        this.beatsOccupiedDeprecationWarning();\n        return this.getNotesOccupied();\n    }\n    setBeatsOccupied(beats) {\n        this.beatsOccupiedDeprecationWarning();\n        return this.setNotesOccupied(beats);\n    }\n    getNotesOccupied() {\n        return this.notes_occupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.notes_occupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        this.numerator_glyphs = [];\n        let n = this.num_notes;\n        while (n >= 1) {\n            this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n        this.denom_glyphs = [];\n        n = this.notes_occupied;\n        while (n >= 1) {\n            this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n    }\n    // determine how many tuplets are nested within this tuplet\n    // on the same side (above/below), to calculate a y\n    // offset for this tuplet:\n    getNestedTupletCount() {\n        const location = this.location;\n        const first_note = this.notes[0];\n        let maxTupletCount = countTuplets(first_note, location);\n        let minTupletCount = countTuplets(first_note, location);\n        // Count the tuplets that are on the same side (above/below)\n        // as this tuplet:\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    // determine the y position of the tuplet:\n    getYPosition() {\n        // offset the tuplet for any nested tuplets between\n        // it and the notes:\n        const nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n        // offset the tuplet for any manual y_offset:\n        const y_offset = this.options.y_offset || 0;\n        // now iterate through the notes and find our highest\n        // or lowest locations, to form a base y_pos\n        const first_note = this.notes[0];\n        let y_pos;\n        if (this.location === Tuplet.LOCATION_TOP) {\n            y_pos = first_note.checkStave().getYForLine(0) - Tuplet.metrics.topModifierOffset;\n            // check modifiers above note to see if they will collide with tuplet beam\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().top_text_line);\n                }\n                const modY = note.getYForTopText(modLines) - Tuplet.metrics.noteHeadOffset;\n                if (note.hasStem() || note.isRest()) {\n                    const top_y = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tuplet.metrics.stemOffset\n                        : note.getStemExtents().baseY - Tuplet.metrics.noteHeadOffset;\n                    y_pos = Math.min(top_y, y_pos);\n                    if (modLines > 0) {\n                        y_pos = Math.min(modY, y_pos);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = Tuplet.metrics.bottomLine; // tuplet default on line 4\n            // check modifiers below note to see if they will collide with tuplet beam\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().text_line + 1);\n                }\n            });\n            y_pos = first_note.checkStave().getYForLine(lineCheck) + Tuplet.metrics.noteHeadOffset;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + Tuplet.metrics.noteHeadOffset\n                        : this.notes[i].getStemExtents().topY + Tuplet.metrics.stemOffset;\n                    if (bottom_y > y_pos) {\n                        y_pos = bottom_y;\n                    }\n                }\n            }\n        }\n        return y_pos + nested_tuplet_y_offset + y_offset;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        // determine x value of left bound of tuplet\n        const first_note = this.notes[0];\n        const last_note = this.notes[this.notes.length - 1];\n        if (!this.bracketed) {\n            this.x_pos = first_note.getStemX();\n            this.width = last_note.getStemX() - this.x_pos;\n        }\n        else {\n            this.x_pos = first_note.getTieLeftX() - 5;\n            this.width = last_note.getTieRightX() - this.x_pos + 5;\n        }\n        // determine y value for tuplet\n        this.y_pos = this.getYPosition();\n        const addGlyphWidth = (width, glyph) => width + defined(glyph.getMetrics().width);\n        // calculate total width of tuplet notation\n        let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n        if (this.ratioed) {\n            width = this.denom_glyphs.reduce(addGlyphWidth, width);\n            width += this.point * 0.32;\n        }\n        const notation_center_x = this.x_pos + this.width / 2;\n        const notation_start_x = notation_center_x - width / 2;\n        // draw bracket if the tuplet is not beamed\n        if (this.bracketed) {\n            const line_width = this.width / 2 - width / 2 - 5;\n            // only draw the bracket if it has positive length\n            if (line_width > 0) {\n                ctx.fillRect(this.x_pos, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n                ctx.fillRect(this.x_pos + this.width, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n            }\n        }\n        // draw numerator glyphs\n        const shiftY = Tables.currentMusicFont().lookupMetric('digits.shiftY', 0);\n        let x_offset = 0;\n        this.numerator_glyphs.forEach((glyph) => {\n            glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n            x_offset += defined(glyph.getMetrics().width);\n        });\n        // display colon and denominator if the ratio is to be shown\n        if (this.ratioed) {\n            const colon_x = notation_start_x + x_offset + this.point * 0.16;\n            const colon_radius = this.point * 0.06;\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n            x_offset += this.point * 0.32;\n            this.denom_glyphs.forEach((glyph) => {\n                glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n                x_offset += defined(glyph.getMetrics().width);\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TupletLocation } from './tuplet';\nimport { Category, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n    static get CATEGORY() {\n        return Category.Beam;\n    }\n    /** Get the direction of the beam */\n    getStemDirection() {\n        return this.stem_direction;\n    }\n    /**\n     * Get the default beam groups for a provided time signature.\n     * Attempt to guess if the time signature is not found in table.\n     * Currently this is fairly naive.\n     */\n    static getDefaultBeamGroups(time_sig) {\n        if (!time_sig || time_sig === 'c') {\n            time_sig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[time_sig];\n        if (groups === undefined) {\n            // If no beam groups found, naively determine\n            // the beam groupings from the time signature\n            const beatTotal = parseInt(time_sig.split('/')[0], 10);\n            const beatValue = parseInt(time_sig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    /**\n     * A helper function to automatically build basic beams for a voice. For more\n     * complex auto-beaming use `Beam.generateBeams()`.\n     * @param voice the voice to generate the beams for\n     * @param stem_direction a stem direction to apply to the entire voice\n     * @param groups an array of `Fraction` representing beat groupings for the beam\n     */\n    static applyAndGetBeams(voice, stem_direction, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stem_direction });\n    }\n    /**\n     * A helper function to autimatically build beams for a voice with\n     * configuration options.\n     *\n     * Example configuration object:\n     *\n     * ```\n     * config = {\n     *   groups: [new Vex.Flow.Fraction(2, 8)],\n     *   stem_direction: -1,\n     *   beam_rests: true,\n     *   beam_middle_only: true,\n     *   show_stemlets: false\n     * };\n     * ```\n     * @param notes an array of notes to create the beams for\n     * @param config the configuration object\n     * @param config.stem_direction set to apply the same direction to all notes\n     * @param config.beam_rests set to `true` to include rests in the beams\n     * @param config.beam_middle_only set to `true` to only beam rests in the middle of the beat\n     * @param config.show_stemlets set to `true` to draw stemlets for rests\n     * @param config.maintain_stem_directions set to `true` to not apply new stem directions\n     * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n     *\n     */\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        // Convert beam groups to tick amounts\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(vf_notes) {\n            return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            // number of ticks in current group\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return; // Ignore untickables (like bar notes)\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                // Double the amount of ticks in a group, if it's an unbeamable tuplet\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                // If the note that was just added overflows the group tick total\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    // If the overflow note can be beamed, start the next group\n                    // with it. Unbeamable notes leave the group overflowed.\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    // We have overflown, so we're going to next tick group. As we might have\n                    // overflown by more than 1 group, we need to go forward as many times as\n                    // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n                    // in current groups as we go forward.\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            // Adds any remainder notes beam\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        // Splits up groups by Rest\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beam_rests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    // Determine if the group should be broken at this note\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        // Add current group\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        // Start a new group. Include the current note if the group\n                        // was broken up by stem direction, as that note needs to start\n                        // the next group of notes\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        // Add note to group\n                        tempGroup.push(note);\n                    }\n                });\n                // If there is a remaining group, add it as well\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintain_stem_directions) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stem_direction) {\n                        stemDirection = config.stem_direction;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        // Get all of the tuplets in all of the note groups\n        function getTuplets() {\n            const uniqueTuplets = [];\n            // Go through all of the note groups and inspect for tuplets\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        // Using closures to store the variables throughout the various functions\n        // IMO Keeps it this process lot cleaner - but not super consistent with\n        // the rest of the API's style - Silverwolf90 (Cyril)\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        // Get the notes to be beamed\n        const beamedNoteGroups = getBeamGroups();\n        // Get the tuplets in order to format them accurately\n        const allTuplets = getTuplets();\n        // Create a Vex.Flow.Beam from each group of notes to be beamed\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.show_stemlets) {\n                beam.render_options.show_stemlets = true;\n            }\n            if (config.secondary_breaks) {\n                beam.render_options.secondary_break_ticks = Tables.durationToTicks(config.secondary_breaks);\n            }\n            if (config.flat_beams === true) {\n                beam.render_options.flat_beams = true;\n                beam.render_options.flat_beam_offset = config.flat_beam_offset;\n            }\n            beams.push(beam);\n        });\n        // Reformat tuplets\n        allTuplets.forEach((tuplet) => {\n            // Set the tuplet location based on the stem direction\n            const direction = tuplet.notes[0].stem_direction === Stem.DOWN ? TupletLocation.BOTTOM : TupletLocation.TOP;\n            tuplet.setTupletLocation(direction);\n            // If any of the notes in the tuplet are not beamed, draw a bracket.\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    constructor(notes, auto_stem = false) {\n        super();\n        this.slope = 0;\n        this.y_shift = 0;\n        /**\n         * Overrides to default beam directions for secondary-level beams that do not\n         * connect to any other note. See further explanation at\n         * `setPartialBeamSideAt`\n         */\n        this.forcedPartialDirections = {};\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        // Validate beam line, direction and ticks.\n        this.ticks = notes[0].getIntrinsicTicks();\n        if (this.ticks >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i; // shared iterator\n        let note;\n        this.stem_direction = notes[0].getStemDirection();\n        let stem_direction = this.stem_direction;\n        // Figure out optimal stem direction based on given notes\n        if (auto_stem && isStaveNote(notes[0])) {\n            stem_direction = calculateStemDirection(notes);\n        }\n        else if (auto_stem && isTabNote(notes[0])) {\n            // Auto Stem TabNotes\n            const stem_weight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        // Apply stem directions and attach beam to notes\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (auto_stem) {\n                note.setStemDirection(stem_direction);\n                this.stem_direction = stem_direction;\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        this.beam_count = this.getBeamCount();\n        this.break_on_indices = [];\n        this.render_options = {\n            beam_width: 5,\n            max_slope: 0.25,\n            min_slope: -0.25,\n            slope_iterations: 20,\n            slope_cost: 100,\n            show_stemlets: false,\n            stemlet_extension: 7,\n            partial_beam_length: 10,\n            flat_beams: false,\n            min_flat_beam_offset: 15,\n        };\n    }\n    /** Get the notes in this beam. */\n    getNotes() {\n        return this.notes;\n    }\n    /** Get the max number of beams in the set of notes. */\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyphProps().beam_count);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    /** Set which note `indices` to break the secondary beam at. */\n    breakSecondaryAt(indices) {\n        this.break_on_indices = indices;\n        return this;\n    }\n    /**\n     * Forces the direction of a partial beam (a secondary-level beam that exists\n     * on one note only of the beam group). This is useful in rhythms such as 6/8\n     * eighth-sixteenth-eighth-sixteenth, where the direction of the beam on the\n     * first sixteenth note can help imply whether the rhythm is to be felt as\n     * three groups of eighth notes (typical) or as two groups of three-sixteenths\n     * (less common):\n     * ```\n     *  ┌───┬──┬──┐      ┌──┬──┬──┐\n     *  │   ├─ │ ─┤  vs  │ ─┤  │ ─┤\n     *  │   │  │  │      │  │  │  │\n     * ```\n     */\n    setPartialBeamSideAt(noteIndex, side) {\n        this.forcedPartialDirections[noteIndex] = side;\n        return this;\n    }\n    /**\n     * Restore the default direction of a partial beam (a secondary-level beam\n     * that does not connect to any other notes).\n     */\n    unsetPartialBeamSideAt(noteIndex) {\n        delete this.forcedPartialDirections[noteIndex];\n        return this;\n    }\n    /** Return the y coordinate for linear function. */\n    getSlopeY(x, first_x_px, first_y_px, slope) {\n        return first_y_px + (x - first_x_px) * slope;\n    }\n    /** Calculate the best possible slope for the provided notes. */\n    calculateSlope() {\n        const { notes, stem_direction: stemDirection, render_options: { max_slope, min_slope, slope_iterations, slope_cost }, } = this;\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (max_slope - min_slope) / slope_iterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        // iterate through slope values to find best weighted fit\n        for (let slope = min_slope; slope <= max_slope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            // iterate through notes, calculating y shift and stem extension\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    // beam needs to be shifted up to accommodate note\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        // beam overshoots note, account for the difference\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            // most engraving books suggest aiming for a slope about half the angle of the\n            // difference between the first and last notes' stem length;\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            // This tries to align most beams to something closer to the idealSlope, but\n            // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n            const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n            // update state when a more ideal slope is found\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        this.y_shift = yShift;\n    }\n    /** Calculate a slope and y-shift for flat beams. */\n    calculateFlatSlope() {\n        const { notes, stem_direction, render_options: { beam_width, min_flat_beam_offset, flat_beam_offset }, } = this;\n        // If a flat beam offset has not yet been supplied or calculated,\n        // generate one based on the notes in this particular note group\n        let total = 0;\n        let extremeY = 0; // Store the highest or lowest note here\n        let extremeBeamCount = 0; // The beam count of the extreme note\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            // Total up all of the offsets so we can average them out later\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            // Store the highest (stems-up) or lowest (stems-down) note so the\n            //  offset can be adjusted in case the average isn't enough\n            if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        // Average the offsets to try and come up with a reasonable one that\n        //  works for all of the notes in the beam group.\n        let offset = total / notes.length;\n        // In case the average isn't long enough, add or subtract some more\n        //  based on the highest or lowest note (again, based on the stem\n        //  direction). This also takes into account the added height due to\n        //  the width of the beams.\n        const beamWidth = beam_width * 1.5;\n        const extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n        const newOffset = extremeY + extremeTest * -stem_direction;\n        if (stem_direction === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stem_direction === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flat_beam_offset) {\n            // Set the offset for the group based on the calculations above.\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        // for flat beams, the slope and y_shift are simply 0\n        this.slope = 0;\n        this.y_shift = 0;\n    }\n    /** Return the Beam y offset. */\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        // For flat beams, set the first and last Y to the offset, rather than\n        //  using the note's stem extents.\n        if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n            beamY = this.render_options.flat_beam_offset;\n        }\n        return beamY;\n    }\n    /**\n     * Create new stems for the notes in the beam, so that each stem\n     * extends into the beams.\n     */\n    applyStemExtensions() {\n        const { notes, slope, y_shift, beam_count, render_options: { show_stemlets, stemlet_extension, beam_width }, } = this;\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = note.getStemDirection() === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                // Determine necessary extension for cross-stave notes in the beam group\n                let crossStemExtension = 0;\n                if (note.getStemDirection() !== this.stem_direction) {\n                    const beamCount = note.getGlyphProps().beam_count;\n                    crossStemExtension = (1 + (beamCount - 1) * 1.5) * this.render_options.beam_width;\n                    /* This will be required if the partial beams are moved to the note side.\n                    if (i > 0 && note.getGlyph().beam_count > 1) {\n                      const prevBeamCount = this.notes[i - 1].getGlyph().beam_count;\n                      const beamDiff = Math.abs(prevBeamCount - beamCount);\n                      if (beamDiff > 0) crossStemExtension -= beamDiff * (this.render_options.beam_width * 1.5);\n                    }\n                    */\n                }\n                stem.setExtension(preBeamExtension + beamExtension + crossStemExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && show_stemlets) {\n                    const beamWidth = beam_width;\n                    const totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n                }\n            }\n        }\n    }\n    /** Return upper level beam direction. */\n    lookupBeamDirection(duration, prev_tick, tick, next_tick, noteIndex) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const forcedBeamDirection = this.forcedPartialDirections[noteIndex];\n        if (forcedBeamDirection)\n            return forcedBeamDirection;\n        const lookup_duration = `${Tables.durationToNumber(duration) / 2}`;\n        const prev_note_gets_beam = prev_tick < Tables.durationToTicks(lookup_duration);\n        const next_note_gets_beam = next_tick < Tables.durationToTicks(lookup_duration);\n        const note_gets_beam = tick < Tables.durationToTicks(lookup_duration);\n        if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_BOTH;\n        }\n        else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n            return BEAM_LEFT;\n        }\n        else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick, noteIndex);\n    }\n    /** Get the x coordinates for the beam lines of specific `duration`. */\n    getBeamLines(duration) {\n        const tick_of_duration = Tables.durationToTicks(duration);\n        let beam_started = false;\n        const beam_lines = [];\n        let current_beam = undefined;\n        const partial_beam_length = this.render_options.partial_beam_length;\n        let previous_should_break = false;\n        let tick_tally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            // See if we need to break secondary beams on this note.\n            const ticks = note.getTicks().value();\n            tick_tally += ticks;\n            let should_break = false;\n            // 8th note beams are always drawn.\n            if (parseInt(duration, 10) >= 8) {\n                // First, check to see if any indices were set up through breakSecondaryAt()\n                should_break = this.break_on_indices.indexOf(i) !== -1;\n                // If the secondary breaks were auto-configured in the render options,\n                //  handle that as well.\n                if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n                    tick_tally = 0;\n                    should_break = true;\n                }\n            }\n            const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n            const stem_x = note.getStemX() - Stem.WIDTH / 2;\n            // Check to see if the next note in the group will get a beam at this\n            //  level. This will help to inform the partial beam logic below.\n            const prev_note = this.notes[i - 1];\n            const next_note = this.notes[i + 1];\n            const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n            const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n            const beam_alone = prev_note && next_note && note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            if (note_gets_beam) {\n                // This note gets a beam at the current level\n                if (beam_started) {\n                    // We're currently in the middle of a beam. Just continue it on to\n                    //  the stem X of the current note.\n                    current_beam = beam_lines[beam_lines.length - 1];\n                    current_beam.end = stem_x;\n                    // If a secondary beam break is set up, end the beam right now.\n                    if (should_break) {\n                        beam_started = false;\n                        if (next_note && !next_note_gets_beam && current_beam.end === undefined) {\n                            // This note gets a beam,.but the next one does not. This means\n                            //  we need a partial pointing right.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                }\n                else {\n                    // No beam started yet. Start a new one.\n                    current_beam = { start: stem_x, end: undefined };\n                    beam_started = true;\n                    if (beam_alone) {\n                        // previous and next beam exists and does not get a beam but current gets it.\n                        const prev_tick = prev_note.getIntrinsicTicks();\n                        const next_tick = next_note.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick, i);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                        else {\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                    }\n                    else if (!next_note_gets_beam) {\n                        // The next note doesn't get a beam. Draw a partial.\n                        if ((previous_should_break || i === 0) && next_note) {\n                            // This is the first note (but not the last one), or it is\n                            //  following a secondary break. Draw a partial to the right.\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                        else {\n                            // By default, draw a partial to the left.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                    else if (should_break) {\n                        // This note should have a secondary break after it. Even though\n                        //  we just started a beam, it needs to end immediately.\n                        current_beam.end = current_beam.start - partial_beam_length;\n                        beam_started = false;\n                    }\n                    beam_lines.push(current_beam);\n                }\n            }\n            else {\n                // The current note does not get a beam.\n                beam_started = false;\n            }\n            // Store the secondary break flag to inform the partial beam logic in\n            //  the next iteration of the loop.\n            previous_should_break = should_break;\n        }\n        // Add a partial beam pointing left if this is the last note in the group\n        const last_beam = beam_lines[beam_lines.length - 1];\n        if (last_beam && last_beam.end === undefined) {\n            last_beam.end = last_beam.start - partial_beam_length;\n        }\n        return beam_lines;\n    }\n    /** Render the stems for each note. */\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                const stem_x = note.getStemX();\n                stem.setNoteHeadXBounds(stem_x, stem_x);\n                stem.setContext(ctx).draw();\n            }\n        }, this);\n    }\n    // Render the beam lines\n    drawBeamLines(ctx) {\n        const valid_beam_durations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.render_options.beam_width * this.stem_direction;\n        // Draw the beams.\n        for (let i = 0; i < valid_beam_durations.length; ++i) {\n            const duration = valid_beam_durations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beam_line = beamLines[j];\n                const startBeamX = beam_line.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beam_line.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    /** Pre-format the beam. */\n    preFormat() {\n        return this;\n    }\n    /**\n     * Post-format the beam. This can only be called after\n     * the notes in the beam have both `x` and `y` values. ie: they've\n     * been formatted and have staves.\n     */\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        // Calculate a smart slope if we're not forcing the beams to be flat.\n        if (isTabNote(this.notes[0]) || this.render_options.flat_beams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    /** Render the beam to the canvas context */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (this.unbeamable)\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        this.drawStems(ctx);\n        this.applyStyle();\n        ctx.openGroup('beam', this.getAttribute('id'));\n        this.drawBeamLines(ctx);\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n// MIT License\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n    static get CATEGORY() {\n        return Category.ClefNote;\n    }\n    constructor(type, size, annotation) {\n        super({ duration: 'b' });\n        this.type = type;\n        this.clef = new Clef(type, size, annotation);\n        this.glyph = new Glyph(this.clef.clef.code, this.clef.clef.point);\n        this.setWidth(this.glyph.getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef = new Clef(type, size, annotation);\n        this.glyph = new Glyph(this.clef.clef.code, this.clef.clef.point);\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    /** Get associated clef. */\n    getClef() {\n        return this.clef.clef;\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.glyph.setContext(this.getContext());\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render clef note. */\n    draw() {\n        var _a;\n        const stave = this.checkStave();\n        if (!this.glyph.getContext()) {\n            this.glyph.setContext(this.getContext());\n        }\n        this.setRendered();\n        const abs_x = this.getAbsoluteX();\n        this.glyph.setStave(stave);\n        this.glyph.setYShift(stave.getYForLine((_a = this.clef.clef.line) !== null && _a !== void 0 ? _a : 0) - stave.getYForGlyphs());\n        this.glyph.renderToStave(abs_x);\n        // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n        if (this.clef.annotation !== undefined) {\n            const attachment = new Glyph(this.clef.annotation.code, this.clef.annotation.point);\n            if (!attachment.getContext()) {\n                attachment.setContext(this.getContext());\n            }\n            attachment.setStave(stave);\n            attachment.setYShift(stave.getYForLine(this.clef.annotation.line) - stave.getYForGlyphs());\n            attachment.setXShift(this.clef.annotation.x_shift);\n            attachment.renderToStave(abs_x);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('Vex.Flow.Crescendo', args);\n}\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n    const begin_x = params.begin_x;\n    const end_x = params.end_x;\n    const y = params.y;\n    const half_height = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(begin_x, y - half_height);\n        ctx.lineTo(end_x, y);\n        ctx.lineTo(begin_x, y + half_height);\n    }\n    else {\n        ctx.moveTo(end_x, y - half_height);\n        ctx.lineTo(begin_x, y);\n        ctx.lineTo(end_x, y + half_height);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nexport class Crescendo extends Note {\n    /** Crescendo category string. */\n    static get CATEGORY() {\n        return Category.Crescendo;\n    }\n    // Initialize the crescendo's properties\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.options = {\n            // Extensions to the length of the crescendo on either side\n            extend_left: 0,\n            extend_right: 0,\n            // Vertical shift\n            y_shift: 0,\n        };\n        // Whether the object is a decrescendo\n        this.decrescendo = false;\n        // The staff line to be placed on\n        this.line = noteStruct.line || 0;\n        // The height at the open end of the cresc/decresc\n        this.height = 15;\n    }\n    // Set the line to center the element on\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Set the full height at the open end\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    // Set whether the sign should be a descresendo by passing a bool\n    // to `decresc`\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    // Preformat the note\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    // Render the Crescendo object onto the canvas\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tick_context = this.getTickContext();\n        const next_context = TickContext.getNextContext(tick_context);\n        const begin_x = this.getAbsoluteX();\n        const end_x = next_context ? next_context.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n        renderHairpin(ctx, {\n            begin_x: begin_x - this.options.extend_left,\n            end_x: end_x + this.options.extend_right,\n            y: y + this.options.y_shift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    static get CATEGORY() {\n        return Category.Curve;\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    // from: Start note\n    // to: End note\n    // options:\n    //    cps: List of control points\n    //    x_shift: pixels to shift\n    //    y_shift: pixels to shift\n    constructor(from, to, options) {\n        super();\n        this.render_options = Object.assign({ thickness: 2, x_shift: 0, y_shift: 10, position: CurvePosition.NEAR_HEAD, position_end: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ] }, options);\n        this.from = from;\n        this.to = to;\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        const ctx = this.checkContext();\n        const x_shift = this.render_options.x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        const first_x = params.first_x + x_shift;\n        const first_y = params.first_y + y_shift;\n        const last_x = params.last_x - x_shift;\n        const last_y = params.last_y + y_shift;\n        const thickness = this.render_options.thickness;\n        const cps = this.render_options.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const cp_spacing = (last_x - first_x) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(first_x, first_y);\n        ctx.bezierCurveTo(first_x + cp_spacing + cp0x, first_y + cp0y * params.direction, last_x - cp_spacing + cp1x, last_y + cp1y * params.direction, last_x, last_y);\n        ctx.bezierCurveTo(last_x - cp_spacing + cp1x, last_y + (cp1y + thickness) * params.direction, first_x + cp_spacing + cp0x, first_y + (cp0y + thickness) * params.direction, first_x, first_y);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.from;\n        const last_note = this.to;\n        let first_x;\n        let last_x;\n        let first_y;\n        let last_y;\n        let stem_direction = 0;\n        let metric = 'baseY';\n        let end_metric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.render_options.position);\n        const position_end = getPosition(this.render_options.position_end);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            end_metric = 'topY';\n        }\n        if (position_end === CurvePosition.NEAR_HEAD) {\n            end_metric = 'baseY';\n        }\n        else if (position_end === CurvePosition.NEAR_TOP) {\n            end_metric = 'topY';\n        }\n        if (first_note) {\n            first_x = first_note.getTieRightX();\n            stem_direction = first_note.getStemDirection();\n            first_y = first_note.getStemExtents()[metric];\n        }\n        else {\n            const stave = last_note.checkStave();\n            first_x = stave.getTieStartX();\n            first_y = last_note.getStemExtents()[metric];\n        }\n        if (last_note) {\n            last_x = last_note.getTieLeftX();\n            stem_direction = last_note.getStemDirection();\n            last_y = last_note.getStemExtents()[end_metric];\n        }\n        else {\n            const stave = first_note.checkStave();\n            last_x = stave.getTieEndX();\n            last_y = first_note.getStemExtents()[end_metric];\n        }\n        this.renderCurve({\n            first_x,\n            last_x,\n            first_y,\n            last_y,\n            direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('Vex.Flow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString; // string\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches); // nested array\n}\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n    // For an example of a simple grammar, take a look at tests/parser_tests.ts or\n    // the EasyScore grammar in easyscore.ts.\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Parse `line` using current grammar. Returns `{success: true}` if the\n    // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n    // where `errorPos` is the location of the error in the string.\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Look for `token` in this.line[this.pos], and return success\n    // if one is found. `token` is specified as a regular expression.\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n    // set, then return success even if the token is not found, but reset\n    // the position before exiting.\n    // TODO: expectOne(...) is never called with the `maybe` parameter.\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        // Execute all sub rules in sequence.\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                // If `rule.or` is set, then return success if any one\n                // of the subrules match, else all subrules must match.\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n    // then a failed match is also a success (but the position is reset).\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    // Execute the rule produced by the provided `rules` function. This\n    // offloads to one of the above matchers and consolidates the results. It is also\n    // responsible for executing any code triggered by the rule (in `rule.run`.)\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        // Get rule from Grammar class.\n        // expect(...) handles both lexing & parsing:\n        // - lexer rules produce tokens.\n        // - parser rules produce expressions which may trigger code via the\n        //   { run: () => ... } trigger functions in easyscore.ts.\n        //   These functions build the VexFlow objects that are displayed on screen.\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            // A lexer rule has a `token` property.\n            // Base case: parse the regex and throw an error if the\n            // line doesn't match.\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                // Token match! Update position and throw away parsed portion\n                // of string.\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            // A parser rule has an `expect` property.\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        // If there's a trigger attached to this rule, then run it.\n        // Make the matches accessible through `state.matches` in the\n        // `run: (state) => ...` trigger.\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Articulation } from './articulation';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Music } from './music';\nimport { Parser } from './parser';\nimport { Stem } from './stem';\nimport { defined, log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('Vex.Flow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                // eslint-disable-next-line\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    // notes is an array with 3 entries\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n); // n => [string, string | null, string]\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n        // e.g., auto | up | down\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        // e.g., treble | bass\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        // Create a string[] that will be assigned to the .keys property of the StaveNote.\n        // Each string in the array represents a note pitch and is of the form: {NoteName}{Accidental}/{Octave}\n        // Only standard accidentals are included in the .keys property. Microtonal accidentals are not included.\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const auto_stem = stem === 'auto'; // StaveNoteStruct expects the underscore & lowercase.\n        // Build a GhostNote or StaveNote using the information we gathered.\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) == 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, auto_stem });\n        if (!auto_stem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        // Attach accidentals.\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(accidental, index);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        // Attach dots.\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\n// Used by setClass() below.\nconst commaSeparatedRegex = /\\s*,\\s*/;\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\n/**\n * EasyScore implements a parser for a simple language to generate VexFlow objects.\n */\nexport class EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Set the score defaults.\n     * clef must be set appropriately to avoid errors when adding Staves.\n     * @param defaults.clef default clef ( treble | bass ...) see {@link Clef.types}\n     * @param defaults.time default time signature ( 4/4 | 9/8 ...)\n     * @param defaults.stem default stem arrangement (auto | up | down)\n     * @returns this\n     */\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    /**\n     * @param options.factory is required.\n     * @returns this\n     */\n    setOptions(options) {\n        var _a, _b;\n        // eslint-disable-next-line\n        const factory = options.factory; // ! operator, because options.factory was set in Factory.EasyScore().\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\nimport { StemmableNote } from './stemmablenote';\nimport { Category, isAnnotation } from './typeguard';\nimport { RuntimeError } from './util';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.GhostNote;\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            // Preserve backwards-compatibility\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        // Note properties\n        this.setWidth(0);\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        // Draw Annotations\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (isAnnotation(modifier)) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class GlyphNote extends Note {\n    static get CATEGORY() {\n        return Category.GlyphNote;\n    }\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        // Note properties\n        this.ignore_ticks = this.options.ignoreTicks;\n        this.setGlyph(glyph);\n    }\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    getBoundingBox() {\n        return this.glyph.getBoundingBox();\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return this.glyph.getMetrics().width;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        // Context is set when setStave is called on Note\n        const glyph = this.glyph;\n        if (!glyph.getContext()) {\n            glyph.setContext(ctx);\n        }\n        glyph.setStave(stave);\n        glyph.setYShift(stave.getYForLine(this.options.line) - stave.getYForGlyphs());\n        const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        glyph.renderToStave(x);\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class GraceNote extends StaveNote {\n    static get CATEGORY() {\n        return Category.GraceNote;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    static get SCALE() {\n        return 0.66;\n    }\n    constructor(noteStruct) {\n        super(Object.assign({ glyph_font_scale: Tables.NOTATION_FONT_SCALE * GraceNote.SCALE, stroke_px: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 3;\n    }\n    getStemExtension() {\n        if (this.stem_extension_override) {\n            return this.stem_extension_override;\n        }\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            let ret = super.getStemExtension();\n            if (glyphProps.stem) {\n                const staveNoteScale = this.getStaveNoteScale();\n                ret = (Stem.HEIGHT + ret) * staveNoteScale - Stem.HEIGHT;\n            }\n            return ret;\n        }\n        return 0;\n    }\n    getStaveNoteScale() {\n        return this.render_options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const staveNoteScale = this.getStaveNoteScale();\n            // some magic numbers are based on the staveNoteScale 0.66.\n            const offsetScale = staveNoteScale / 0.66;\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                // FIXME: should render slash after beam?\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale, 8 * offsetScale, {\n                    stem: 6 * offsetScale,\n                    beam: 5 * offsetScale,\n                });\n            }\n            else {\n                const stem_direction = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteStemHeight = stem.getHeight();\n                let x = this.getAbsoluteX();\n                let y = stem_direction === Stem.DOWN\n                    ? noteHeadBounds.y_top - noteStemHeight\n                    : noteHeadBounds.y_bottom - noteStemHeight;\n                const defaultStemExtention = stem_direction === Stem.DOWN ? this.glyphProps.stem_down_extension : this.glyphProps.stem_up_extension;\n                let defaultOffsetY = Tables.STEM_HEIGHT;\n                defaultOffsetY -= defaultOffsetY / 2.8;\n                defaultOffsetY += defaultStemExtention;\n                y += defaultOffsetY * staveNoteScale * stem_direction;\n                const offsets = stem_direction === Stem.UP\n                    ? {\n                        x1: 1,\n                        y1: 0,\n                        x2: 13,\n                        y2: -9,\n                    }\n                    : {\n                        x1: -4,\n                        y1: 1,\n                        x2: 13,\n                        y2: 9,\n                    };\n                x += offsets.x1 * offsetScale;\n                y += offsets.y1 * offsetScale;\n                slashBBox = {\n                    x1: x,\n                    y1: y,\n                    x2: x + offsets.x2 * offsetScale,\n                    y2: y + offsets.y2 * offsetScale,\n                };\n            }\n            // FIXME: avoid staff lines, ledger lines or others.\n            const ctx = this.checkContext();\n            ctx.save();\n            ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.restore();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beam_slope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beam_angle = Math.atan(beam_slope * scaleX);\n        // slash line intersecting point on beam.\n        const iPointOnBeam = {\n            dx: Math.cos(beam_angle) * slashBeamOffset,\n            dy: Math.sin(beam_angle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n        const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n        const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n        const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beam_slope;\n        const ret = {\n            x1: stemX - protrusion_stem_dx,\n            y1: stemY + slashStemOffset - protrusion_stem_dy,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusion_beam_dx,\n            y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n        };\n        return ret;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\nimport { KeySignature } from './keysignature';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class KeySigNote extends Note {\n    static get CATEGORY() {\n        return Category.KeySigNote;\n    }\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.draw();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests.\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { defined } from './util';\nlet semibreve_rest;\nfunction get_semibreve_rest() {\n    if (!semibreve_rest) {\n        const noteHead = new NoteHead({ duration: 'w', note_type: 'r' });\n        semibreve_rest = {\n            glyph_font_scale: noteHead.render_options.glyph_font_scale,\n            glyph_code: noteHead.glyph_code,\n            width: noteHead.getWidth(),\n        };\n    }\n    return semibreve_rest;\n}\nexport class MultiMeasureRest extends Element {\n    static get CATEGORY() {\n        return Category.MultiMeasureRest;\n    }\n    /**\n     *\n     * @param number_of_measures Number of measures.\n     * @param options The options object.\n     */\n    constructor(number_of_measures, options) {\n        super();\n        this.xs = { left: NaN, right: NaN };\n        this.hasPaddingLeft = false;\n        this.hasPaddingRight = false;\n        this.hasLineThickness = false;\n        this.hasSymbolSpacing = false;\n        this.number_of_measures = number_of_measures;\n        // Keep track of whether these four options were provided.\n        this.hasPaddingLeft = typeof options.padding_left === 'number';\n        this.hasPaddingRight = typeof options.padding_right === 'number';\n        this.hasLineThickness = typeof options.line_thickness === 'number';\n        this.hasSymbolSpacing = typeof options.symbol_spacing === 'number';\n        const musicFont = Tables.currentMusicFont();\n        this.render_options = Object.assign({ use_symbols: false, show_number: true, number_line: -0.5, number_glyph_point: musicFont.lookupMetric('digits.point'), line: 2, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, serif_thickness: 2, semibreve_rest_glyph_scale: Tables.NOTATION_FONT_SCALE, padding_left: 0, padding_right: 0, line_thickness: 5, symbol_spacing: 0 }, options);\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.render_options.number_line += fontLineShift;\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right, spacingBetweenLines) {\n        const options = this.render_options;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let lineThicknessHalf;\n        if (this.hasLineThickness) {\n            lineThicknessHalf = options.line_thickness * 0.5;\n        }\n        else {\n            lineThicknessHalf = spacingBetweenLines * 0.25;\n        }\n        const serifThickness = options.serif_thickness;\n        const top = y - spacingBetweenLines;\n        const bot = y + spacingBetweenLines;\n        const leftIndented = left + serifThickness;\n        const rightIndented = right - serifThickness;\n        const lineTop = y - lineThicknessHalf;\n        const lineBottom = y + lineThicknessHalf;\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(left, top);\n        ctx.lineTo(leftIndented, top);\n        ctx.lineTo(leftIndented, lineTop);\n        ctx.lineTo(rightIndented, lineTop);\n        ctx.lineTo(rightIndented, top);\n        ctx.lineTo(right, top);\n        ctx.lineTo(right, bot);\n        ctx.lineTo(rightIndented, bot);\n        ctx.lineTo(rightIndented, lineBottom);\n        ctx.lineTo(leftIndented, lineBottom);\n        ctx.lineTo(leftIndented, bot);\n        ctx.lineTo(left, bot);\n        ctx.closePath();\n        ctx.fill();\n    }\n    drawSymbols(stave, ctx, left, right, spacingBetweenLines) {\n        const n4 = Math.floor(this.number_of_measures / 4);\n        const n = this.number_of_measures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.render_options;\n        // FIXME: TODO: invalidate semibreve_rest at the appropriate time\n        // (e.g., if the system font settings are changed).\n        semibreve_rest = undefined;\n        const rest = get_semibreve_rest();\n        const rest_scale = options.semibreve_rest_glyph_scale;\n        const rest_width = rest.width * (rest_scale / rest.glyph_font_scale);\n        const glyphs = {\n            2: {\n                width: rest_width * 0.5,\n                height: spacingBetweenLines,\n            },\n            1: {\n                width: rest_width,\n            },\n        };\n        /* 10: normal spacingBetweenLines */\n        const spacing = this.hasSymbolSpacing ? options.symbol_spacing : 10;\n        const width = n4 * glyphs[2].width + n2 * glyphs[2].width + n1 * glyphs[1].width + (n4 + n2 + n1 - 1) * spacing;\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        const yBottom = stave.getYForLine(line + 1);\n        ctx.save();\n        ctx.setStrokeStyle('none');\n        ctx.setLineWidth(0);\n        for (let i = 0; i < n4; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n2; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n1; ++i) {\n            Glyph.renderGlyph(ctx, x, yTop, rest_scale, rest.glyph_code);\n            x += glyphs[1].width + spacing;\n        }\n        ctx.restore();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        // FIXME: getNoteStartX() returns x + 5(barline width)\n        //        getNoteEndX() returns x + width(no barline width)\n        // See Stave constructor. How do we fix this?\n        // Here, we subtract the barline width.\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.render_options;\n        if (this.hasPaddingLeft) {\n            left = stave.getX() + options.padding_left;\n        }\n        if (this.hasPaddingRight) {\n            right = stave.getX() + stave.getWidth() - options.padding_right;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        const spacingBetweenLines = options.spacing_between_lines_px;\n        if (options.use_symbols) {\n            this.drawSymbols(stave, ctx, left, right, spacingBetweenLines);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right, spacingBetweenLines);\n        }\n        if (options.show_number) {\n            const timeSpec = '/' + this.number_of_measures;\n            const timeSig = new TimeSignature(timeSpec, 0, false);\n            timeSig.point = options.number_glyph_point;\n            timeSig.setTimeSig(timeSpec);\n            timeSig.setStave(stave);\n            timeSig.setX(left + (right - left) * 0.5 - timeSig.getInfo().glyph.getMetrics().width * 0.5);\n            timeSig.bottomLine = options.number_line;\n            timeSig.setContext(ctx).draw();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('Vex.Flow.PedalMarking', args);\n}\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name, context, x, y, point) {\n    const glyph_data = PedalMarking.GLYPHS[name];\n    const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n    glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nexport class PedalMarking extends Element {\n    static get CATEGORY() {\n        return Category.PedalMarking;\n    }\n    /**\n     * Create a sustain pedal marking. Returns the defaults PedalMarking.\n     * Which uses the traditional \"Ped\" and \"*\"\" markings.\n     */\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    /** Create a sostenuto pedal marking */\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    /** Create an una corda pedal marking */\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        // Custom text for the release/depress markings\n        this.custom_depress_text = '';\n        this.custom_release_text = '';\n        this.resetFont();\n        this.render_options = {\n            bracket_height: 10,\n            text_margin_right: 6,\n            bracket_line_width: 1,\n            color: 'black',\n        };\n    }\n    /** Set pedal type. */\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    /**\n     * Set custom text for the `depress`/`release` pedal markings. No text is\n     * set if the parameter is falsy.\n     */\n    setCustomText(depress, release) {\n        this.custom_depress_text = depress || '';\n        this.custom_release_text = release || '';\n        return this;\n    }\n    /** Set the staff line to render the markings on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Draw the bracket based pedal markings. */\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        let prev_x;\n        let prev_y;\n        // Iterate through each note\n        this.notes.forEach((note, index, notes) => {\n            // Each note triggers the opposite pedal action\n            is_pedal_depressed = !is_pedal_depressed;\n            // Get the initial coordinates for the note\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            // Throw if current note is positioned before the previous note\n            if (x < prev_x) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            // Determine if the previous or next note are the same\n            // as the current note. We need to keep track of this for\n            // when adjustments are made for the release+depress action\n            const next_is_same = notes[index + 1] === note;\n            const prev_is_same = notes[index - 1] === note;\n            let x_shift = 0;\n            const point = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n            if (is_pedal_depressed) {\n                // Adjustment for release+depress\n                x_shift = prev_is_same ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n                    // For MIXED style, start with text instead of bracket\n                    if (this.custom_depress_text) {\n                        // If we have custom text, use instead of the default \"Ped\" glyph\n                        const text_width = ctx.measureText(this.custom_depress_text).width;\n                        ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                        x_shift = text_width / 2 + this.render_options.text_margin_right;\n                    }\n                    else {\n                        // Render the Ped glyph in position\n                        drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                        x_shift = 20 + this.render_options.text_margin_right;\n                    }\n                }\n                else {\n                    // Draw start bracket\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.render_options.bracket_height);\n                    ctx.lineTo(x + x_shift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                // Adjustment for release+depress\n                x_shift = next_is_same ? -5 : 0;\n                // Draw end bracket\n                ctx.beginPath();\n                ctx.moveTo(prev_x, prev_y);\n                ctx.lineTo(x + x_shift, y);\n                ctx.lineTo(x, y - this.render_options.bracket_height);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            // Store previous coordinates\n            prev_x = x + x_shift;\n            prev_y = y;\n        });\n    }\n    /**\n     * Draw the text based pedal markings. This defaults to the traditional\n     * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n     */\n    drawText() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        // Iterate through each note, placing glyphs or custom text accordingly\n        this.notes.forEach((note) => {\n            is_pedal_depressed = !is_pedal_depressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            const point = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n            let text_width = 0;\n            if (is_pedal_depressed) {\n                if (this.custom_depress_text) {\n                    text_width = ctx.measureText(this.custom_depress_text).width;\n                    ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                }\n            }\n            else {\n                if (this.custom_release_text) {\n                    text_width = ctx.measureText(this.custom_release_text).width;\n                    ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_release', ctx, x, y, point);\n                }\n            }\n        });\n    }\n    /** Render the pedal marking in position on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setStrokeStyle(this.render_options.color);\n        ctx.setFillStyle(this.render_options.color);\n        ctx.setFont(this.textFont);\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.render_options.bracket_line_width);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\nPedalMarking.DEBUG = false;\nPedalMarking.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n/** Glyph data */\nPedalMarking.GLYPHS = {\n    pedal_depress: {\n        code: 'keyboardPedalPed',\n        x_shift: -10,\n        y_shift: 0,\n    },\n    pedal_release: {\n        code: 'keyboardPedalUp',\n        x_shift: -2,\n        y_shift: 3,\n    },\n};\n/** Pedal type as number. */\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\n/** Pedal type as string. */\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n// Map `type` to SMuFL glyph code.\nconst CODES = {\n    '1': 'repeat1Bar',\n    '2': 'repeat2Bars',\n    '4': 'repeat4Bars',\n    slash: 'repeatBarSlash',\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return Category.RepeatNote;\n    }\n    constructor(type, noteStruct, options) {\n        const glyphCode = CODES[type] || 'repeat1Bar';\n        const glyph = new Glyph(glyphCode, Tables.currentMusicFont().lookupMetric('repeatNote.point', 40), {\n            category: 'repeatNote',\n        });\n        super(glyph, Object.assign({ duration: 'q', align_center: type !== 'slash' }, noteStruct), options);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { TextJustification } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nexport class StaveLine extends Element {\n    static get CATEGORY() {\n        return Category.StaveLine;\n    }\n    // Initialize the StaveLine with the given `notes`.\n    //\n    // `notes` is a struct that has:\n    //\n    //  ```\n    //  {\n    //    first_note: Note,\n    //    last_note: Note,\n    //    first_indices: [n1, n2, n3],\n    //    last_indices: [n1, n2, n3]\n    //  }\n    //  ```\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.resetFont();\n        this.render_options = {\n            // Space to add to the left or the right\n            padding_left: 4,\n            padding_right: 3,\n            // The width of the line in pixels\n            line_width: 1,\n            // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n            line_dash: undefined,\n            // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n            rounded_end: true,\n            // The color of the line and arrowheads\n            color: undefined,\n            // Flags to draw arrows on each end of the line\n            draw_start_arrow: false,\n            draw_end_arrow: false,\n            // The length of the arrowhead sides\n            arrowhead_length: 10,\n            // The angle of the arrowhead\n            arrowhead_angle: Math.PI / 8,\n            // The position of the text\n            text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n            text_justification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    // The the annotation for the `StaveLine`\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    // Set the notes for the `StaveLine`\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices)\n            notes.first_indices = [0];\n        if (!notes.last_indices)\n            notes.last_indices = [0];\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indices.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.first_indices = notes.first_indices;\n        this.last_note = notes.last_note;\n        this.last_indices = notes.last_indices;\n        return this;\n    }\n    // Apply the style of the `StaveLine` to the context\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const render_options = this.render_options;\n        if (render_options.line_dash) {\n            ctx.setLineDash(render_options.line_dash);\n        }\n        if (render_options.line_width) {\n            ctx.setLineWidth(render_options.line_width);\n        }\n        if (render_options.rounded_end) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    // Apply the text styling to the context\n    applyFontStyle() {\n        const ctx = this.checkContext();\n        ctx.setFont(this.textFont);\n        const render_options = this.render_options;\n        const color = render_options.color;\n        if (color) {\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n        }\n    }\n    // Helper function to draw a line with arrow heads\n    drawArrowLine(ctx, pt1, pt2) {\n        const both_arrows = this.render_options.draw_start_arrow && this.render_options.draw_end_arrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        // For ends with arrow we actually want to stop before we get to the arrow\n        // so that wide lines won't put a flat end on the arrow.\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.render_options.arrowhead_length / 3) / distance;\n        let end_x;\n        let end_y;\n        let start_x;\n        let start_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            end_x = Math.round(x1 + (x2 - x1) * ratio);\n            end_y = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            end_x = x2;\n            end_y = y2;\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            start_x = x1 + (x2 - x1) * (1 - ratio);\n            start_y = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            start_x = x1;\n            start_y = y1;\n        }\n        if (this.render_options.color) {\n            ctx.setStrokeStyle(this.render_options.color);\n            ctx.setFillStyle(this.render_options.color);\n        }\n        // Draw the shaft of the arrow\n        ctx.beginPath();\n        ctx.moveTo(start_x, start_y);\n        ctx.lineTo(end_x, end_y);\n        ctx.stroke();\n        ctx.closePath();\n        // calculate the angle of the line\n        const line_angle = Math.atan2(y2 - y1, x2 - x1);\n        // h is the line length of a side of the arrow head\n        const h = Math.abs(this.render_options.arrowhead_length / Math.cos(this.render_options.arrowhead_angle));\n        let angle1;\n        let angle2;\n        let top_x;\n        let top_y;\n        let bottom_x;\n        let bottom_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            angle1 = line_angle + Math.PI + this.render_options.arrowhead_angle;\n            top_x = x2 + Math.cos(angle1) * h;\n            top_y = y2 + Math.sin(angle1) * h;\n            angle2 = line_angle + Math.PI - this.render_options.arrowhead_angle;\n            bottom_x = x2 + Math.cos(angle2) * h;\n            bottom_y = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            angle1 = line_angle + this.render_options.arrowhead_angle;\n            top_x = x1 + Math.cos(angle1) * h;\n            top_y = y1 + Math.sin(angle1) * h;\n            angle2 = line_angle - this.render_options.arrowhead_angle;\n            bottom_x = x1 + Math.cos(angle2) * h;\n            bottom_y = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n        }\n    }\n    // Renders the `StaveLine` on the context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const first_note = this.first_note;\n        const last_note = this.last_note;\n        const render_options = this.render_options;\n        ctx.save();\n        this.applyLineStyle();\n        // Cycle through each set of indices and draw lines\n        let start_position = { x: 0, y: 0 };\n        let end_position = { x: 0, y: 0 };\n        this.first_indices.forEach((first_index, i) => {\n            const last_index = this.last_indices[i];\n            // Get initial coordinates for the start/end of the line\n            start_position = first_note.getModifierStartXY(2, first_index);\n            end_position = last_note.getModifierStartXY(1, last_index);\n            const upwards_slope = start_position.y > end_position.y;\n            // Adjust `x` coordinates for modifiers\n            start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n            end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n            // Adjust first `x` coordinates for displacements\n            const notehead_width = first_note.getGlyphProps().getWidth();\n            const first_displaced = first_note.getKeyProps()[first_index].displaced;\n            if (first_displaced && first_note.getStemDirection() === 1) {\n                start_position.x += notehead_width + render_options.padding_left;\n            }\n            // Adjust last `x` coordinates for displacements\n            const last_displaced = last_note.getKeyProps()[last_index].displaced;\n            if (last_displaced && last_note.getStemDirection() === -1) {\n                end_position.x -= notehead_width + render_options.padding_right;\n            }\n            // Adjust y position better if it's not coming from the center of the note\n            start_position.y += upwards_slope ? -3 : 1;\n            end_position.y += upwards_slope ? 2 : 0;\n            this.drawArrowLine(ctx, start_position, end_position);\n        });\n        ctx.restore();\n        // Determine the x coordinate where to start the text\n        const text_width = ctx.measureText(this.text).width;\n        const justification = render_options.text_justification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = start_position.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const delta_x = end_position.x - start_position.x;\n            const center_x = delta_x / 2 + start_position.x;\n            x = center_x - text_width / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = end_position.x - text_width;\n        }\n        // Determine the y value to start the text\n        let y = 0;\n        const vertical_position = render_options.text_position_vertical;\n        if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n            y = first_note.checkStave().getYForTopText();\n        }\n        else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = first_note.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        // Draw the text\n        ctx.save();\n        this.applyFontStyle();\n        ctx.fillText(this.text, x, y);\n        ctx.restore();\n        return this;\n    }\n}\n/** Default text font. */\nStaveLine.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n// Text Positioning\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = TextJustification;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n    static get CATEGORY() {\n        return Category.System;\n    }\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.partStaves = [];\n        this.partStaveInfos = [];\n        this.partVoices = [];\n    }\n    /** Set formatting options. */\n    setOptions(options = {}) {\n        if (!options.factory) {\n            throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n        }\n        this.factory = options.factory;\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    /** Get origin X. */\n    getX() {\n        return this.options.x;\n    }\n    /** Set origin X. */\n    setX(x) {\n        this.options.x = x;\n        this.partStaves.forEach((s) => {\n            s.setX(x);\n        });\n    }\n    /** Get origin y. */\n    getY() {\n        return this.options.y;\n    }\n    /** Set origin y. */\n    setY(y) {\n        this.options.y = y;\n        this.partStaves.forEach((s) => {\n            s.setY(y);\n        });\n    }\n    /** Get associated staves. */\n    getStaves() {\n        return this.partStaves;\n    }\n    /** Get associated voices. */\n    getVoices() {\n        return this.partVoices;\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    /**\n     * Add connector between staves.\n     * @param type see {@link StaveConnector.typeString}\n     */\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            top_stave: this.partStaves[0],\n            bottom_stave: this.partStaves[this.partStaves.length - 1],\n            type,\n        });\n        return this.connector;\n    }\n    /**\n     * Add a stave to the system.\n     *\n     * Example (one voice):\n     *\n     * `system.addStave({voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]});`\n     *\n     * Example (two voices):\n     *\n     * `system.addStave({voices: [`\n     *   `score.voice(score.notes('C#5/q, B4, A4, G#4', {stem: 'up'})),`\n     *   `score.voice(score.notes('C#4/h, C#4', {stem: 'down'}))`\n     * `]});`\n     */\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ left_bar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => {\n            voice\n                .setContext(ctx)\n                .setStave(stave)\n                .getTickables()\n                .forEach((tickable) => tickable.setStave(stave));\n            this.partVoices.push(voice);\n        });\n        this.partStaves.push(stave);\n        this.partStaveInfos.push(p);\n        return stave;\n    }\n    /**\n     * Add voices to the system with stave already assigned.\n     */\n    addVoices(voices) {\n        const ctx = this.getContext();\n        voices.forEach((voice) => {\n            voice.setContext(ctx);\n            this.partVoices.push(voice);\n        });\n    }\n    /** Format the system. */\n    format() {\n        const options_details = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(options_details);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        const debugNoteMetricsYs = [];\n        this.partStaves.forEach((part, index) => {\n            y = y + part.space(this.partStaveInfos[index].spaceAbove);\n            part.setY(y);\n            y = y + part.space(this.partStaveInfos[index].spaceBelow);\n            y = y + part.space(this.options.spaceBetweenStaves);\n            if (this.partStaveInfos[index].debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, stave: part });\n                y += 15;\n            }\n            startX = Math.max(startX, part.getNoteStartX());\n        });\n        // Re-assign Stave to update y position\n        this.partVoices.forEach((voice) => {\n            voice.getTickables().forEach((tickable) => {\n                const stave = tickable.getStave();\n                if (stave)\n                    tickable.setStave(stave);\n            });\n        });\n        // Join the voices\n        formatter.joinVoices(this.partVoices);\n        // Update the start position of all staves.\n        this.partStaves.forEach((part) => part.setNoteStartX(startX));\n        if (this.options.autoWidth && this.partVoices.length > 0) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(this.partVoices);\n            this.options.width = justifyWidth + Stave.rightPadding + (startX - this.options.x);\n            this.partStaves.forEach((part) => {\n                part.setWidth(this.options.width);\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - (startX - this.options.x)\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        if (this.partVoices.length > 0) {\n            formatter.format(this.partVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        }\n        formatter.postFormat();\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(options_details);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        this.boundingBox = new BoundingBox(this.options.x, this.options.y, this.options.width, this.lastY - this.options.y);\n        Stave.formatBegModifiers(this.partStaves);\n    }\n    /** Render the system. */\n    draw() {\n        // Render debugging information, if requested.\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            this.partVoices.forEach((voice) => {\n                voice.getTickables().forEach((tickable) => {\n                    if (tickable.getStave() === d.stave)\n                        Note.plotMetrics(ctx, tickable, d.y);\n                });\n            });\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isDot } from './typeguard';\nimport { defined, RuntimeError } from './util';\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n    const stem_through = [];\n    let group = [];\n    for (let string = 1; string <= num_lines; string++) {\n        const is_used = strings_used.indexOf(string) > -1;\n        if (!is_used) {\n            group.push(string);\n        }\n        else {\n            stem_through.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stem_through.push(group);\n    return stem_through;\n}\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n    const up_stem = stem_direction !== 1;\n    const down_stem = stem_direction !== -1;\n    const line_spacing = stave.getSpacingBetweenLines();\n    const total_lines = stave.getNumLines();\n    const stem_lines = [];\n    unused_strings.forEach((strings) => {\n        const containsLastString = strings.indexOf(total_lines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((up_stem && containsFirstString) || (down_stem && containsLastString)) {\n            return;\n        }\n        // If there's only one string in the group, push a duplicate value.\n        // We do this because we need 2 strings to convert into upper/lower y\n        // values.\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const line_ys = [];\n        // Iterate through each group string and store it's y position\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === total_lines;\n            // Get the y value for the appropriate staff line,\n            // we adjust for a 0 index array, since string numbers are index 1\n            let y = stave.getYForLine(string - 1);\n            // Unless the string is the first or last, add padding to each side\n            // of the line\n            if (index === 0 && !isTopBound) {\n                y -= line_spacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += line_spacing / 2 - 1;\n            }\n            // Store the y value\n            line_ys.push(y);\n            // Store a subsequent y value connecting this group to the main\n            // stem above/below the stave if it's the top/bottom string\n            if (stem_direction === 1 && isTopBound) {\n                line_ys.push(stem_y - 2);\n            }\n            else if (stem_direction === -1 && isBottomBound) {\n                line_ys.push(stem_y + 2);\n            }\n        });\n        // Add the sorted y values to the\n        stem_lines.push(line_ys.sort((a, b) => a - b));\n    });\n    return stem_lines;\n}\nexport class TabNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.TabNote;\n    }\n    // Initialize the TabNote with a `noteStruct` full of properties\n    // and whether to `draw_stem` when rendering the note\n    constructor(noteStruct, draw_stem = false) {\n        super(noteStruct);\n        this.glyphPropsArr = [];\n        // Return the number of the greatest string, which is the string lowest on the display\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        // Return the number of the least string, which is the string highest on the display\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false; // Renders parenthesis around notes\n        // Note properties\n        // The fret positions in the note. An array of `{ str: X, fret: X }`\n        this.positions = noteStruct.positions || [];\n        // Render Options\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: Tables.TABLATURE_FONT_SCALE, \n            // Flag to draw a stem\n            draw_stem, \n            // Flag to draw dot modifiers\n            draw_dots: draw_stem, \n            // Flag to extend the main stem through the stave and fret positions\n            draw_stem_through_stave: false, \n            // vertical shift from stave line\n            y_shift: 0, \n            // normal glyph scale\n            scale: 1.0, \n            // default tablature font\n            font: `${Font.SIZE}pt ${Font.SANS_SERIF}` });\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stem_direction) {\n            this.setStemDirection(noteStruct.stem_direction);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        // Renders parenthesis around notes\n        this.ghost = false;\n        this.updateWidth();\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n    // Often used for indicating frets that are being bent to\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    // Determine if the note has a stem\n    hasStem() {\n        if (this.render_options.draw_stem)\n            return true;\n        return false;\n    }\n    // Get the default stem extension for the note\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        if (this.stem_extension_override != null) {\n            return this.stem_extension_override;\n        }\n        if (glyphProps) {\n            return this.getStemDirection() === Stem.UP\n                ? glyphProps.tabnote_stem_up_extension\n                : glyphProps.tabnote_stem_down_extension;\n        }\n        return 0;\n    }\n    // Calculate and store the width of the note\n    updateWidth() {\n        this.glyphPropsArr = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const glyphProps = Tables.tabToGlyphProps(fret.toString(), this.render_options.scale);\n            this.glyphPropsArr.push(glyphProps);\n            this.width = Math.max(glyphProps.getWidth(), this.width);\n        }\n        // For some reason we associate a notehead glyph with a TabNote, and this\n        // glyph is used for certain width calculations. Of course, this is totally\n        // incorrect since a notehead is a poor approximation for the dimensions of\n        // a fret number which can have multiple digits. As a result, we must\n        // overwrite getWidth() to return the correct width\n        this.glyphProps.getWidth = () => this.width;\n    }\n    // Set the `stave` to the note\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        // Calculate the fret number width based on font used\n        if (ctx) {\n            this.width = 0;\n            for (let i = 0; i < this.glyphPropsArr.length; ++i) {\n                const glyphProps = this.glyphPropsArr[i];\n                const text = '' + glyphProps.text;\n                if (text.toUpperCase() !== 'X') {\n                    ctx.save();\n                    ctx.setFont(this.render_options.font);\n                    glyphProps.width = ctx.measureText(text).width;\n                    ctx.restore();\n                    glyphProps.getWidth = () => glyphProps.width;\n                }\n                this.width = Math.max(glyphProps.getWidth(), this.width);\n            }\n            this.glyphProps.getWidth = () => this.width;\n        }\n        // we subtract 1 from `line` because getYForLine expects a 0-based index,\n        // while the position.str is a 1-based index\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    // Get the fret positions for the note\n    getPositions() {\n        return this.positions;\n    }\n    // Get the default `x` and `y` coordinates for a modifier at a specific\n    // `position` at a fret position `index`\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const note_glyph_width = this.glyphProps.getWidth();\n            x = note_glyph_width / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Get the default line for rest\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        // width is already set during init()\n        this.preFormatted = true;\n    }\n    // Get the x position for the stem\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    // Get the y position for the stem\n    getStemY() {\n        const num_lines = this.checkStave().getNumLines();\n        // The decimal staff line amounts provide optimal spacing between the\n        // fret number and the stem\n        const stemUpLine = -0.5;\n        const stemDownLine = num_lines - 0.5;\n        const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    // Get the stem extents for the tabnote\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    // Draw the fal onto the context\n    drawFlag() {\n        var _a;\n        const { beam, glyphProps, render_options: { draw_stem }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam == undefined && draw_stem;\n        // Now it's the flag's turn.\n        if (glyphProps.flag && shouldDrawFlag) {\n            const flag_x = this.getStemX();\n            const flag_y = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() - (this.glyphProps ? this.glyphProps.stem_down_extension : 0)\n                : // Up stems are above the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() + (this.glyphProps ? this.glyphProps.stem_up_extension : 0);\n            // Draw the Flag\n            //this.flag?.setOptions({ category: 'flag.tabStem' });\n            (_a = this.flag) === null || _a === void 0 ? void 0 : _a.render(context, flag_x, flag_y);\n            //Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, { category: 'flag.tabStem' });\n        }\n    }\n    // Render the modifiers onto the context.\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            // Only draw the dots if enabled.\n            if (isDot(modifier) && !this.render_options.draw_dots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    // Render the stem extension through the fret positions\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.render_options.draw_stem;\n        const stemThrough = this.render_options.draw_stem_through_stave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.save();\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n            ctx.restore();\n        }\n    }\n    // Render the fret positions onto the context\n    drawPositions() {\n        var _a;\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.render_options.y_shift;\n            const glyphProps = this.glyphPropsArr[i];\n            // Center the fret text beneath the notation note head\n            const note_glyph_width = this.glyphProps.getWidth();\n            const tab_x = x + note_glyph_width / 2 - glyphProps.getWidth() / 2;\n            // FIXME: Magic numbers.\n            ctx.clearRect(tab_x - 2, y - 3, glyphProps.getWidth() + 4, 6);\n            if (glyphProps.code) {\n                Glyph.renderGlyph(ctx, tab_x, y, this.render_options.glyph_font_scale * this.render_options.scale, glyphProps.code);\n            }\n            else {\n                ctx.save();\n                ctx.setFont(this.render_options.font);\n                const text = (_a = glyphProps.text) !== null && _a !== void 0 ? _a : '';\n                ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n                ctx.restore();\n            }\n        }\n    }\n    // The main rendering function for the entire note.\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const render_stem = this.beam == undefined && this.render_options.draw_stem;\n        this.applyStyle();\n        ctx.openGroup('tabnote', this.getAttribute('id'), { pointerBBox: true });\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && render_stem) {\n            const stem_x = this.getStemX();\n            this.stem.setNoteHeadXBounds(stem_x, stem_x);\n            this.stem.setContext(ctx).draw();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return Category.TabStave;\n    }\n    constructor(x, y, width, options) {\n        const tab_options = Object.assign({ spacing_between_lines_px: 13, num_lines: 6, top_text_position: 1 }, options);\n        super(x, y, width, tab_options);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    // Deprecated\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// This file implements `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Renderer } from './renderer';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nexport class TextBracket extends Element {\n    static get CATEGORY() {\n        return Category.TextBracket;\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    /**\n     * @deprecated Use `TextBracket.Position` instead.\n     */\n    static get Positions() {\n        L('Positions is deprecated, use TextBracketPosition instead.');\n        return TextBracketPosition;\n    }\n    /**\n     * @deprecated Use `TextBracket.PositionString` instead.\n     */\n    static get PositionsString() {\n        L('PositionsString is deprecated, use PositionString instead.');\n        return TextBracket.PositionString;\n    }\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.text = text;\n        this.superscript = superscript;\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.resetFont();\n        this.render_options = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            line_width: 1,\n            show_bracket: true,\n            bracket_height: 8,\n            // In the BOTTOM position, the bracket line can extend\n            // under the superscript.\n            underline_superscript: true,\n        };\n    }\n    /**\n     * Apply the text backet styling to the provided context.\n     * @param ctx\n     * @returns this\n     */\n    applyStyle(ctx) {\n        ctx.setFont(this.font);\n        const options = this.render_options;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.line_width);\n        return this;\n    }\n    // Set whether the bracket line should be `dashed`. You can also\n    // optionally set the `dash` pattern by passing in an array of numbers\n    setDashed(dashed, dash) {\n        this.render_options.dashed = dashed;\n        if (dash)\n            this.render_options.dash = dash;\n        return this;\n    }\n    // Set the rendering `context` for the octave bracket\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Draw the octave bracket on the rendering context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        // Get the preliminary start and stop coordintates for the bracket\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracket_height = this.render_options.bracket_height * this.position;\n        ctx.save();\n        this.applyStyle(ctx);\n        // Draw text\n        ctx.fillText(this.text, start.x, start.y);\n        // Get the width and height for the octave number\n        const main_measure = ctx.measureText(this.text);\n        const main_width = main_measure.width;\n        const main_height = main_measure.height;\n        // Calculate the y position for the super script\n        const super_y = start.y - main_height / 2.5;\n        // We called this.resetFont() in the constructor, so we know this.textFont is available.\n        // eslint-disable-next-line\n        const { family, size, weight, style } = this.textFont;\n        // To draw the superscript, we scale the font size by 1/1.4.\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n        // Determine width and height of the superscript\n        const super_measure = ctx.measureText(this.superscript);\n        const super_width = super_measure.width;\n        const super_height = super_measure.height;\n        // Setup initial coordinates for the bracket line\n        let start_x = start.x;\n        let line_y = super_y;\n        const end_x = stop.x + this.stop.getGlyphProps().getWidth();\n        // Adjust x and y coordinates based on position\n        if (this.position === TextBracketPosition.TOP) {\n            start_x += main_width + super_width + 5;\n            line_y -= super_height / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            line_y += super_height / 2.7;\n            start_x += main_width + 2;\n            if (!this.render_options.underline_superscript) {\n                start_x += super_width;\n            }\n        }\n        if (this.render_options.dashed) {\n            // Main line\n            Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n            // Ending Bracket\n            if (this.render_options.show_bracket) {\n                Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(start_x, line_y);\n            // Main line\n            ctx.lineTo(end_x, line_y);\n            if (this.render_options.show_bracket) {\n                // Ending bracket\n                ctx.lineTo(end_x, line_y + bracket_height);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n}\nTextBracket.DEBUG = false;\nTextBracket.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 15,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('Vex.Flow.TextDynamics', args);\n}\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nexport class TextDynamics extends Note {\n    static get CATEGORY() {\n        return Category.TextDynamics;\n    }\n    /** The glyph data for each dynamics letter. */\n    static get GLYPHS() {\n        return {\n            f: {\n                code: 'dynamicForte',\n                width: 12,\n            },\n            p: {\n                code: 'dynamicPiano',\n                width: 14,\n            },\n            m: {\n                code: 'dynamicMezzo',\n                width: 17,\n            },\n            s: {\n                code: 'dynamicSforzando',\n                width: 10,\n            },\n            z: {\n                code: 'dynamicZ',\n                width: 12,\n            },\n            r: {\n                code: 'dynamicRinforzando',\n                width: 12,\n            },\n        };\n    }\n    /**\n     * Create the dynamics marking.\n     *\n     * A `TextDynamics` object inherits from `Note` so that it can be formatted\n     * within a `Voice`.\n     *\n     * @param noteStruct an object that contains a `duration` property and a\n     * `sequence` of letters that represents the letters to render.\n     */\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.sequence = (noteStruct.text || '').toLowerCase();\n        this.line = noteStruct.line || 0;\n        this.glyphs = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { glyph_font_size: 40 });\n        L('New Dynamics Text: ', this.sequence);\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Preformat the dynamics text. */\n    preFormat() {\n        let total_width = 0;\n        // length of this.glyphs must be <=\n        // length of this.sequence, so if we're formatted before\n        // create new glyphs.\n        this.glyphs = [];\n        // Iterate through each letter\n        this.sequence.split('').forEach((letter) => {\n            // Get the glyph data for the letter\n            const glyph_data = TextDynamics.GLYPHS[letter];\n            if (!glyph_data)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            const size = defined(this.render_options.glyph_font_size);\n            const glyph = new Glyph(glyph_data.code, size, { category: 'textNote' });\n            // Add the glyph\n            this.glyphs.push(glyph);\n            total_width += glyph_data.width;\n        });\n        // Store the width of the text\n        this.setWidth(total_width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the dynamics text on the rendering context. */\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        let letter_x = x;\n        this.glyphs.forEach((glyph, index) => {\n            const current_letter = this.sequence[index];\n            glyph.render(this.checkContext(), letter_x, y);\n            letter_x += TextDynamics.GLYPHS[current_letter].width;\n        });\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\nTextDynamics.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nimport { Category } from './typeguard';\nexport class TimeSigNote extends Note {\n    static get CATEGORY() {\n        return Category.TimeSigNote;\n    }\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        const timeSignature = new TimeSignature(timeSpec, customPadding);\n        this.timeSigInfo = timeSignature.getInfo();\n        this.setWidth(this.timeSigInfo.glyph.getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (!this.timeSigInfo.glyph.getContext()) {\n            this.timeSigInfo.glyph.setContext(ctx);\n        }\n        this.timeSigInfo.glyph.setStave(stave);\n        this.timeSigInfo.glyph.setYShift(stave.getYForLine(2) - stave.getYForGlyphs());\n        this.timeSigInfo.glyph.renderToStave(this.getAbsoluteX());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { log } from './util';\nimport { Vibrato } from './vibrato';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('Vex.Flow.VibratoBracket', args);\n}\n/** `VibratoBracket` renders vibrato effect between two notes. */\nexport class VibratoBracket extends Element {\n    static get CATEGORY() {\n        return Category.VibratoBracket;\n    }\n    /**\n     * Either the stop or start note must be set, or both of them.\n     * An undefined value for the start or stop note indicates that the vibrato\n     * is drawn from the beginning or until the end of the stave accordingly.\n     */\n    constructor(bracket_data) {\n        super();\n        if (bracket_data.start)\n            this.start = bracket_data.start;\n        if (bracket_data.stop)\n            this.stop = bracket_data.stop;\n        this.line = 1;\n        this.render_options = {\n            harsh: false,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n            vibrato_width: 0,\n        };\n    }\n    /** Set line position of the vibrato bracket. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Set harsh vibrato bracket. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Draw the vibrato bracket on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        // If start note is not set then vibrato will be drawn\n        // from the beginning of the stave\n        const start_x = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        // If stop note is not set then vibrato will be drawn\n        // until the end of the stave\n        const stop_x = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.render_options.vibrato_width = stop_x - start_x;\n        L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n        Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\nVibratoBracket.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { ChordSymbol } from './chordsymbol';\nimport { ClefNote } from './clefnote';\nimport { Curve } from './curve';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { KeySigNote } from './keysignote';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StringNumber } from './stringnumber';\nimport { System } from './system';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSigNote } from './timesignote';\nimport { Tuplet } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nimport { isHTMLCanvas } from './web';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('Vex.Flow.Factory', args);\n}\n/**\n * Factory implements a high level API around VexFlow.\n */\nexport class Factory {\n    /**\n     * Static simplified function to access constructor without providing FactoryOptions\n     *\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = Vex.Flow.Factory.newFromElementId('boo', 1200, 600 );`\n     */\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    /**\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});`\n     */\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n            font: Factory.TEXT_FONT,\n        };\n        this.setOptions(options);\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined; // current stave\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId == null) {\n            return;\n        }\n        if (elementId == '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            // We use a custom type check here, because node-canvas mimics canvas,\n            // but is not an instance of window.HTMLCanvasElement.\n            // In fact, `window` might be undefined here.\n            // See: https://www.npmjs.com/package/canvas\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    /** Return pixels from current stave spacing. */\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center', kerning: true, reportWidth: true }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        chordSymbol.setEnableKerning(p.kerning);\n        chordSymbol.setReportWidth(p.reportWidth);\n        // There is a default font based on the engraving font.  Only set then\n        // font if it is specific, else use the default\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        const p = Object.assign({ type: 'a.', position: 'above' }, params);\n        const articulation = new Articulation(p.type);\n        articulation.setPosition(p.position);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    Ornament(type, params) {\n        const options = Object.assign({ type, position: 0, accidental: '' }, params);\n        const ornament = new Ornament(type);\n        ornament.setPosition(options.position);\n        if (options.upperAccidental) {\n            ornament.setUpperAccidental(options.upperAccidental);\n        }\n        if (options.lowerAccidental) {\n            ornament.setLowerAccidental(options.lowerAccidental);\n        }\n        if (typeof options.delayed !== 'undefined') {\n            ornament.setDelayed(options.delayed);\n        }\n        ornament.setContext(this.context);\n        return ornament;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params, drawCircle = true) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        stringNumber.setDrawCircle(drawCircle);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.number_of_measures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.harsh)\n            vibratoBracket.setHarsh(params.options.harsh);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    /**\n     * Creates EasyScore. Normally the first step after constructing a Factory. For example:\n     * ```\n     * const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});\n     * const score: EasyScore = vf.EasyScore();\n     * ```\n     * @param options.factory optional instance of Factory\n     * @param options.builder instance of Builder\n     * @param options.commitHooks function to call after a note element is created\n     * @param options.throwOnError throw error in case of parsing error\n     */\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    /** Render the score. */\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).draw());\n        this.voices.forEach((v) => v.setContext(ctx).draw());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).draw();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).draw());\n        this.reset();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`. */\nFactory.DEBUG = false;\n/** Default text font. */\nFactory.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { TabNote } from './tabnote';\nimport { Category } from './typeguard';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return Category.GraceTabNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // vertical shift from stave line\n            y_shift: 0.3, \n            // grace glyph scale\n            scale: 0.6, \n            // grace tablature font\n            font: `7.5pt ${Font.SANS_SERIF}` });\n        this.updateWidth();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\nimport { Music } from './music';\nimport { RuntimeError } from './util';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const is_supported_type = Music.scaleTypes[this.keyParts.type];\n        if (!is_supported_type) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.root_indices[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        // First look for matching note in our altered scale\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in our altered scale\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote != null) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in the original scale\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote != null) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        // Then try to unmodify a currently modified note.\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        // Last resort -- shitshoot\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Author: Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either crescendo or decrescendo.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveHairpin extends Element {\n    static get CATEGORY() {\n        return Category.StaveHairpin;\n    }\n    /* Helper function to convert ticks into pixels.\n     * Requires a Formatter with voices joined and formatted (to\n     * get pixels per tick)\n     *\n     * options is struct that has:\n     *\n     *  {\n     *   height: px,\n     *   y_shift: px,         // vertical offset\n     *   left_shift_ticks: 0, // left horizontal offset expressed in ticks\n     *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n     *  }\n     *\n     **/\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt == null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const l_shift_px = ppt * ((_a = options.left_shift_ticks) !== null && _a !== void 0 ? _a : 0);\n        const r_shift_px = ppt * ((_b = options.right_shift_ticks) !== null && _b !== void 0 ? _b : 0);\n        const hairpin_options = {\n            height: options.height,\n            y_shift: options.y_shift,\n            left_shift_px: l_shift_px,\n            right_shift_px: r_shift_px,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n        new StaveHairpin({\n            first_note: notes.first_note,\n            last_note: notes.last_note,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpin_options)\n            .setPosition(position)\n            .draw();\n    }\n    /**\n     * Create a new hairpin from the specified notes.\n     *\n     * @param {!Object} notes The notes to tie up.\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     * @param {!Object} type The type of hairpin\n     */\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.render_options = {\n            height: 10,\n            y_shift: 0,\n            left_shift_px: 0,\n            right_shift_px: 0,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        if (options.height != null &&\n            options.y_shift != null &&\n            options.left_shift_px != null &&\n            options.right_shift_px != null) {\n            this.render_options = options;\n        }\n        return this;\n    }\n    /**\n     * Set the notes to attach this hairpin to.\n     *\n     * @param {!Object} notes The start and end notes.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.last_note = notes.last_note;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.render_options.y_shift + 20;\n        let y_shift = params.first_y;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            y_shift = params.first_y - params.staff_height;\n        }\n        const l_shift = this.render_options.left_shift_px;\n        const r_shift = this.render_options.right_shift_px;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.first_note;\n        const lastNote = this.last_note;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            first_x: start.x,\n            last_x: end.x,\n            first_y: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            last_y: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staff_height: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { TabTie } from './tabtie';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class TabSlide extends TabTie {\n    static get CATEGORY() {\n        return Category.TabSlide;\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    /**\n     * @param notes is a struct of the form:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     * @param notes.first_note the starting note of the slide\n     * @param notes.last_note the ending note of the slide\n     * @param notes.first_indices specifies which string + fret positions of the TabNote are used in this slide. zero indexed.\n     * @param notes.last_indices currently unused. we assume it's the same as first_indices.\n     *\n     * @param direction TabSlide.SLIDE_UP or TabSlide.SLIDE_DOWN\n     */\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        // Determine the direction automatically if it is not provided.\n        if (!direction) {\n            let first_fret = notes.first_note.getPositions()[0].fret;\n            if (typeof first_fret === 'string') {\n                first_fret = parseInt(first_fret, 10);\n            }\n            let last_fret = notes.last_note.getPositions()[0].fret;\n            if (typeof last_fret === 'string') {\n                last_fret = parseInt(last_fret, 10);\n            }\n            // If either of the frets are 'X', parseInt() above will return NaN.\n            // Choose TabSlide.SLIDE_UP by default.\n            if (isNaN(first_fret) || isNaN(last_fret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = first_fret > last_fret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.render_options.cp1 = 11;\n        this.render_options.cp2 = 14;\n        this.render_options.y_shift = 0.5;\n        this.resetFont();\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const first_x_px = params.first_x_px;\n        const first_ys = params.first_ys;\n        const last_x_px = params.last_x_px;\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const slide_y = first_ys[first_indices[i]] + this.render_options.y_shift;\n            if (isNaN(slide_y)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(first_x_px, slide_y + 3 * direction);\n            ctx.lineTo(last_x_px, slide_y - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\nTabSlide.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n// MIT License\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n    static get CATEGORY() {\n        return Category.Tremolo;\n    }\n    /**\n     * @param num number of bars\n     */\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.code = 'tremolo1';\n        // big strokes scales initialised to 1 (no scale)\n        this.y_spacing_scale = 1;\n        this.extra_stroke_scale = 1;\n    }\n    /** Draw the tremolo on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let x = start.x;\n        const gn = isGraceNote(note);\n        const scale = gn ? GraceNote.SCALE : 1;\n        const category = `tremolo.${gn ? 'grace' : 'default'}`;\n        const musicFont = Tables.currentMusicFont();\n        let y_spacing = musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n        // add y_spacing_scale for big strokes (#1258)\n        y_spacing *= this.y_spacing_scale;\n        const height = this.num * y_spacing;\n        let y = note.getStemExtents().baseY - height;\n        if (stemDirection < 0) {\n            y += musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n        }\n        else {\n            y += musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n        }\n        const fontScale = musicFont.lookupMetric(`${category}.point`);\n        x += musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n        for (let i = 0; i < this.num; ++i) {\n            Glyph.renderGlyph(ctx, x, y, fontScale, this.code, { category, scale: this.extra_stroke_scale });\n            y += y_spacing;\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n        };\n    }\n    /**\n     * Constructor.\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        // Default to standard tuning.\n        this.setTuning(tuningString);\n    }\n    /** Return the note number associated to the note string. */\n    noteToInteger(noteString) {\n        var _a;\n        return (_a = Tables.keyProperties(noteString).int_value) !== null && _a !== void 0 ? _a : -1;\n    }\n    /**\n     * Set tuning identified by tuning name (eg. 'dagdad')\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    /** Return the note number associated with a tablature string. */\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    /** Return the note number associated with a tablature string and fret. */\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    /** Return the note string associated with tablature string and fret. */\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { CanvasContext } from './canvascontext';\nimport { ChordSymbol, ChordSymbolHorizontalJustify, ChordSymbolVerticalJustify, SymbolModifiers, SymbolTypes, } from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve, CurvePosition } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { Repetition } from './staverepetition';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Volta, VoltaType } from './stavevolta';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { SVGContext } from './svgcontext';\nimport { System } from './system';\nimport { Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket, TextBracketPosition } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextFormatter } from './textformatter';\nimport { TextJustification, TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { DATE, ID, VERSION } from './version';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice, VoiceMode } from './voice';\nexport class Flow {\n    static get BUILD() {\n        return {\n            /** version number. */\n            VERSION: VERSION,\n            /** git commit ID that this library was built from. */\n            ID: ID,\n            /** The date when this library was compiled. */\n            DATE: DATE,\n        };\n    }\n    /**\n     * Examples:\n     * ```\n     * Vex.Flow.setMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Bravura', 'Gonville');\n     * ```\n     *\n     * **CASE 1**: You are using `vexflow.js`, which includes all music fonts (Bravura, Gonville, Petaluma, Custom).\n     * In this case, calling this method is optional, since VexFlow already defaults to a music font stack of:\n     * 'Bravura', 'Gonville', 'Custom'.\n     *\n     * **CASE 2**: You are using `vexflow-bravura.js` or `vexflow-petaluma.js` or `vexflow-gonville.js`,\n     * which includes a single music font. Calling this method is unnecessary.\n     *\n     * **CASE 3**: You are using the light weight `vexflow-core.js` to take advantage of lazy loading for fonts.\n     * In this case, the default music font stack is empty.\n     * Example:\n     * ```\n     * await Vex.Flow.fetchMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Petaluma');\n     * ... (do VexFlow stuff) ...\n     * ```\n     * See `demos/fonts/` for more examples.\n     *\n     * @returns an array of Font objects corresponding to the provided `fontNames`.\n     */\n    static setMusicFont(...fontNames) {\n        // Convert the array of font names into an array of Font objects.\n        const fonts = fontNames.map((fontName) => Font.load(fontName));\n        Tables.MUSIC_FONT_STACK = fonts;\n        Glyph.MUSIC_FONT_STACK = fonts.slice();\n        Glyph.CURRENT_CACHE_KEY = fontNames.join(',');\n        return fonts;\n    }\n    /**\n     * Used with vexflow-core which supports dynamic font loading.\n     */\n    // eslint-disable-next-line\n    static fetchMusicFont(fontName, fontModuleOrPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The default implementation does nothing.\n            // See vexflow-core.ts for the implementation that vexflow-core.js uses.\n        });\n    }\n    static getMusicFont() {\n        const fonts = Tables.MUSIC_FONT_STACK;\n        return fonts.map((font) => font.getName());\n    }\n    static get RENDER_PRECISION_PLACES() {\n        return Tables.RENDER_PRECISION_PLACES;\n    }\n    static set RENDER_PRECISION_PLACES(precision) {\n        Tables.RENDER_PRECISION_PLACES = precision;\n    }\n    static get SOFTMAX_FACTOR() {\n        return Tables.SOFTMAX_FACTOR;\n    }\n    static set SOFTMAX_FACTOR(factor) {\n        Tables.SOFTMAX_FACTOR = factor;\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return Tables.STAVE_LINE_THICKNESS;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        Tables.STAVE_LINE_THICKNESS = value;\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get accidentalMap() {\n        return Tables.accidentalMap;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    // eslint-disable-next-line\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nFlow.Accidental = Accidental;\nFlow.Annotation = Annotation;\nFlow.Articulation = Articulation;\nFlow.Barline = Barline;\nFlow.BarNote = BarNote;\nFlow.Beam = Beam;\nFlow.Bend = Bend;\nFlow.BoundingBox = BoundingBox;\nFlow.BoundingBoxComputation = BoundingBoxComputation;\nFlow.CanvasContext = CanvasContext;\nFlow.ChordSymbol = ChordSymbol;\nFlow.Clef = Clef;\nFlow.ClefNote = ClefNote;\nFlow.Crescendo = Crescendo;\nFlow.Curve = Curve;\nFlow.Dot = Dot;\nFlow.EasyScore = EasyScore;\nFlow.Element = Element;\nFlow.Factory = Factory;\nFlow.Font = Font;\nFlow.Formatter = Formatter;\nFlow.Fraction = Fraction;\nFlow.FretHandFinger = FretHandFinger;\nFlow.GhostNote = GhostNote;\nFlow.Glyph = Glyph;\nFlow.GlyphNote = GlyphNote;\nFlow.GraceNote = GraceNote;\nFlow.GraceNoteGroup = GraceNoteGroup;\nFlow.GraceTabNote = GraceTabNote;\nFlow.KeyManager = KeyManager;\nFlow.KeySignature = KeySignature;\nFlow.KeySigNote = KeySigNote;\nFlow.Modifier = Modifier;\nFlow.ModifierContext = ModifierContext;\nFlow.MultiMeasureRest = MultiMeasureRest;\nFlow.Music = Music;\nFlow.Note = Note;\nFlow.NoteHead = NoteHead;\nFlow.NoteSubGroup = NoteSubGroup;\nFlow.Ornament = Ornament;\nFlow.Parenthesis = Parenthesis;\nFlow.Parser = Parser;\nFlow.PedalMarking = PedalMarking;\nFlow.Registry = Registry;\nFlow.RenderContext = RenderContext;\nFlow.Renderer = Renderer;\nFlow.RepeatNote = RepeatNote;\nFlow.Repetition = Repetition;\nFlow.Stave = Stave;\nFlow.StaveConnector = StaveConnector;\nFlow.StaveHairpin = StaveHairpin;\nFlow.StaveLine = StaveLine;\nFlow.StaveModifier = StaveModifier;\nFlow.StaveNote = StaveNote;\nFlow.StaveTempo = StaveTempo;\nFlow.StaveText = StaveText;\nFlow.StaveTie = StaveTie;\nFlow.Stem = Stem;\nFlow.StringNumber = StringNumber;\nFlow.Stroke = Stroke;\nFlow.SVGContext = SVGContext;\nFlow.System = System;\nFlow.TabNote = TabNote;\nFlow.TabSlide = TabSlide;\nFlow.TabStave = TabStave;\nFlow.TabTie = TabTie;\nFlow.TextBracket = TextBracket;\nFlow.TextDynamics = TextDynamics;\nFlow.TextFormatter = TextFormatter;\nFlow.TextNote = TextNote;\nFlow.TickContext = TickContext;\nFlow.TimeSignature = TimeSignature;\nFlow.TimeSigNote = TimeSigNote;\nFlow.Tremolo = Tremolo;\nFlow.Tuning = Tuning;\nFlow.Tuplet = Tuplet;\nFlow.Vibrato = Vibrato;\nFlow.VibratoBracket = VibratoBracket;\nFlow.Voice = Voice;\nFlow.Volta = Volta;\n// Exported Enums.\n// Sorted by the module / file they are exported from.\nFlow.AnnotationHorizontalJustify = AnnotationHorizontalJustify;\nFlow.AnnotationVerticalJustify = AnnotationVerticalJustify;\nFlow.ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\nFlow.ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\nFlow.SymbolTypes = SymbolTypes;\nFlow.SymbolModifiers = SymbolModifiers;\nFlow.CurvePosition = CurvePosition;\nFlow.FontWeight = FontWeight;\nFlow.FontStyle = FontStyle;\nFlow.ModifierPosition = ModifierPosition;\nFlow.RendererBackends = RendererBackends;\nFlow.RendererLineEndType = RendererLineEndType;\nFlow.BarlineType = BarlineType;\nFlow.StaveModifierPosition = StaveModifierPosition;\nFlow.VoltaType = VoltaType;\nFlow.TextBracketPosition = TextBracketPosition;\nFlow.TextJustification = TextJustification;\nFlow.VoiceMode = VoiceMode;\n","export const VERSION = '4.2.0-alpha.0';\nexport const ID = 'd48f7491bef1ba8bdb242e5b597e225ecccf6d12';\nexport const DATE = '2022-12-16T21:29:06.745Z';\n","export const CustomFont = {\n    resolution: 1000,\n    fontFamily: 'VexFlowCustom',\n    glyphs: {\n        noteheadSquareWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 386,\n            o: 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 ',\n        },\n        noteheadSquareBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 386,\n            o: 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 ',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: -171.5,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalBakiyeFlat: {\n            x_min: -176.9375,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: -1.359375,\n            x_max: 255.890625,\n            ha: 261,\n            o: 'm 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 ',\n        },\n        accidentalKoron: {\n            x_min: -20,\n            x_max: 320,\n            ha: 257,\n            o: 'm -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 ',\n        },\n        accidentalSori: {\n            x_min: -10.890625,\n            x_max: 299.4375,\n            ha: 294,\n            o: 'm 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 ',\n        },\n        vexAccidentalMicrotonal1: {\n            x_min: -171.5,\n            x_max: 483.1875,\n            ha: 493,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 ',\n        },\n        vexAccidentalMicrotonal2: {\n            x_min: -1.359375,\n            x_max: 386.5625,\n            ha: 394,\n            o: 'm 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 ',\n        },\n        vexAccidentalMicrotonal3: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z ',\n        },\n        vexAccidentalMicrotonal4: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z ',\n        },\n        vexNoteHeadRectBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 ',\n        },\n        vexNoteHeadRectWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100',\n        },\n        vexWiggleArpeggioUp: {\n            x_min: 58.53125,\n            x_max: 228.671875,\n            ha: 294,\n            o: 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 ',\n        },\n    },\n};\n","export const CustomMetrics = {\n    name: 'VexFlowCustom',\n    smufl: false,\n    glyphs: {},\n};\n","export const GonvilleSmuflFont = {\n    glyphs: {\n        bracketTop: {\n            x_min: 0,\n            x_max: 387,\n            y_min: -87,\n            y_max: 139,\n            ha: 226,\n            o: 'm 535 194 b 548 200 540 198 545 200 b 555 195 551 200 553 199 b 557 190 557 193 557 192 b 544 170 557 186 554 182 b 362 3 486 104 422 45 b 350 -6 357 -1 351 -5 b 229 -76 319 -29 268 -58 b 20 -126 158 -108 83 -126 b 2 -121 6 -126 4 -125 b 0 -58 1 -119 0 -88 b 2 6 0 -27 1 4 b 27 11 5 10 5 10 b 535 194 197 15 372 78 z',\n        },\n        bracketBottom: {\n            x_min: 0,\n            x_max: 387,\n            y_min: -139,\n            y_max: 87,\n            ha: 226,\n            o: 'm 5 124 b 20 126 6 125 12 126 b 59 123 30 126 44 125 b 321 25 145 114 234 81 b 365 -4 332 18 359 0 b 376 -13 366 -5 371 -9 b 543 -170 432 -55 490 -110 b 557 -190 553 -182 557 -186 b 555 -195 557 -192 556 -193 b 548 -200 553 -199 551 -200 b 534 -194 544 -200 540 -198 b 27 -11 372 -78 196 -15 b 1 -6 5 -10 4 -10 b 0 58 0 -3 0 -3 b 0 81 0 67 0 75 b 5 124 0 125 0 122 z',\n        },\n        barlineTick: {\n            x_min: -55,\n            x_max: 55,\n            y_min: -131,\n            y_max: 131,\n            ha: 262,\n            o: 'm 23 188 b 32 189 25 188 28 189 b 48 186 38 189 44 188 b 79 143 68 179 79 164 b 79 140 79 142 79 141 b 64 97 79 131 78 129 b -60 -184 3 -42 -59 -182 b -69 -189 -62 -187 -66 -189 b -78 -184 -73 -189 -76 -187 b -79 -179 -79 -183 -79 -181 b -73 -146 -79 -175 -78 -167 b -23 98 -42 7 -33 50 b -10 157 -17 128 -11 154 b 23 188 -5 172 6 183 z',\n        },\n        breathMarkTick: {\n            x_min: -142,\n            x_max: 256,\n            y_min: 0,\n            y_max: 403,\n            ha: 403,\n            o: 'm 345 576 b 359 581 351 579 356 581 b 368 571 365 581 368 577 b 354 557 368 565 367 563 b 290 513 332 546 312 531 b 43 45 174 412 83 241 b 0 0 37 13 24 0 b -42 36 -21 0 -34 11 b -191 254 -63 110 -118 190 b -204 271 -201 262 -204 267 b -203 276 -204 273 -204 274 b -195 281 -201 279 -198 281 b -181 275 -192 281 -187 279 b -18 136 -116 234 -62 187 b -13 130 -15 133 -13 130 b -9 140 -13 130 -11 135 b 345 576 68 338 206 509 z',\n        },\n        segno: {\n            x_min: -228,\n            x_max: 228,\n            y_min: -329,\n            y_max: 329,\n            ha: 657,\n            o: 'm -133 472 b -116 473 -127 473 -122 473 b 32 365 -51 473 10 429 b 36 340 35 356 36 348 b -26 280 36 307 11 280 b -85 325 -55 280 -75 295 b -166 394 -100 367 -132 394 b -190 389 -174 394 -182 392 b -226 333 -214 379 -226 360 b -224 314 -226 327 -225 321 b -13 74 -209 226 -125 130 b 7 64 -3 69 6 65 l 10 63 l 11 65 b 118 226 13 66 42 111 b 188 333 137 255 169 304 b 242 414 208 363 232 399 b 268 450 262 446 263 447 b 282 454 272 453 277 454 b 308 428 296 454 308 444 b 308 427 308 428 308 427 b 286 387 308 419 307 419 b 235 309 278 374 255 339 b 96 99 180 226 132 153 b 61 45 78 71 62 47 l 59 41 l 66 37 b 252 -153 151 -8 217 -75 b 280 -278 271 -195 280 -238 b 149 -470 280 -372 231 -451 b 116 -473 138 -472 127 -473 b -31 -366 52 -473 -9 -431 b -36 -341 -34 -357 -36 -349 b 26 -280 -36 -307 -11 -280 b 86 -325 55 -280 75 -295 b 166 -394 100 -367 133 -394 b 190 -389 174 -394 182 -392 b 226 -333 214 -379 226 -360 b 224 -314 226 -327 225 -321 b 13 -74 209 -226 125 -130 b -7 -64 3 -69 -6 -65 l -10 -63 l -11 -65 b -118 -226 -12 -66 -43 -112 b -188 -333 -137 -256 -169 -304 b -242 -415 -208 -363 -232 -399 b -268 -450 -262 -446 -263 -447 b -282 -454 -272 -453 -277 -454 b -308 -428 -295 -454 -308 -444 b -308 -427 -308 -428 -308 -427 b -287 -388 -308 -420 -307 -419 b -95 -97 -260 -347 -187 -236 b -59 -43 -76 -68 -60 -44 l -58 -41 l -66 -37 b -252 153 -151 8 -217 75 b -280 278 -271 195 -280 238 b -133 472 -280 378 -224 461 z m 254 173 b 266 175 258 174 262 175 b 318 147 286 175 307 164 b 328 113 325 137 328 125 b 318 78 328 101 325 89 b 267 51 306 60 287 51 b 222 71 250 51 234 57 b 205 112 210 83 205 98 b 254 173 205 140 223 167 z m -280 -52 b -268 -51 -276 -51 -272 -51 b -221 -71 -251 -51 -233 -58 b -205 -113 -211 -82 -205 -98 b -215 -147 -205 -125 -208 -137 b -267 -175 -227 -165 -247 -175 b -312 -155 -283 -175 -300 -168 b -328 -113 -323 -143 -328 -128 b -280 -52 -328 -86 -310 -59 z',\n        },\n        coda: {\n            x_min: -215,\n            x_max: 215,\n            y_min: -264,\n            y_max: 264,\n            ha: 529,\n            o: 'm -9 380 b -1 381 -8 381 -4 381 b 7 380 2 381 5 381 b 20 370 12 378 17 375 b 24 326 24 363 24 364 b 25 291 24 293 24 291 b 83 270 34 291 65 280 b 223 33 161 226 213 138 l 224 24 l 256 24 b 298 20 292 24 291 24 b 309 -1 305 15 309 7 b 298 -23 309 -9 305 -18 b 256 -27 291 -27 292 -27 l 224 -27 l 223 -35 b 34 -292 211 -163 136 -266 b 25 -294 30 -293 26 -294 b 24 -327 24 -294 24 -296 l 24 -331 b 18 -372 24 -365 24 -364 b -1 -381 14 -378 6 -381 b -21 -372 -9 -381 -17 -378 b -27 -331 -27 -364 -27 -365 l -27 -327 b -28 -294 -27 -296 -27 -294 b -85 -272 -37 -294 -68 -282 b -226 -35 -164 -229 -216 -141 l -227 -27 l -257 -27 b -298 -23 -292 -27 -292 -27 b -309 -1 -306 -18 -309 -9 b -291 23 -309 9 -303 20 b -257 24 -289 24 -282 24 l -227 24 l -226 33 b -85 270 -216 139 -164 226 b -28 291 -68 280 -37 291 b -27 326 -27 291 -27 293 b -26 363 -27 354 -27 361 b -9 380 -24 371 -17 378 z m -27 133 b -27 242 -27 193 -27 242 b -47 225 -29 242 -41 232 b -123 31 -89 184 -118 110 l -123 24 l -75 24 l -27 24 z m 31 237 b 25 242 28 240 25 242 b 24 133 25 242 24 193 l 24 24 l 72 24 l 121 24 l 120 31 b 31 237 115 118 78 202 z m -27 -136 l -27 -27 l -75 -27 l -123 -27 l -123 -34 b -47 -228 -118 -112 -89 -186 b -27 -244 -41 -235 -29 -244 b -27 -136 -27 -244 -27 -195 z m 120 -34 l 121 -27 l 72 -27 l 24 -27 l 24 -136 b 25 -244 24 -195 25 -244 b 45 -228 26 -244 38 -235 b 120 -34 86 -186 115 -112 z',\n        },\n        gClef: {\n            x_min: 0,\n            x_max: 586,\n            y_min: -594,\n            y_max: 1017,\n            ha: 1611,\n            o: 'm 490 1464 b 492 1464 490 1464 491 1464 b 544 1425 505 1464 522 1451 b 675 1051 623 1330 675 1179 b 674 1023 675 1042 675 1032 b 475 627 665 874 600 746 b 441 595 464 616 448 601 l 429 582 l 454 465 b 479 347 468 400 479 347 b 479 347 479 347 479 347 b 487 348 480 347 484 348 b 525 349 493 349 509 349 b 555 349 537 349 550 349 b 843 42 715 329 832 204 b 844 21 844 35 844 28 b 626 -297 844 -113 757 -241 b 618 -301 621 -299 618 -301 b 634 -378 618 -301 625 -336 b 653 -470 643 -421 652 -462 b 662 -561 659 -502 662 -532 b 604 -748 662 -636 642 -699 b 383 -855 547 -819 465 -855 b 165 -756 303 -855 223 -822 b 128 -661 141 -728 128 -695 b 158 -575 128 -632 138 -602 b 273 -517 187 -536 230 -517 b 381 -568 313 -517 353 -534 b 410 -652 401 -594 410 -623 b 286 -784 410 -718 361 -781 l 277 -784 l 280 -786 b 381 -809 310 -801 345 -809 b 507 -774 425 -809 471 -797 b 616 -561 580 -728 616 -657 b 605 -460 616 -530 612 -496 b 574 -316 602 -443 574 -316 b 574 -316 574 -316 574 -316 b 562 -318 573 -316 568 -317 b 504 -328 544 -323 525 -326 b 468 -329 497 -329 483 -329 b 422 -328 449 -329 430 -329 b 0 140 178 -301 0 -104 b 96 432 0 248 31 342 b 321 698 165 528 235 611 l 351 728 l 338 788 b 321 867 331 822 324 857 b 301 963 309 924 303 952 b 294 1056 296 994 294 1025 b 448 1432 294 1199 348 1335 b 490 1464 471 1454 483 1463 z m 556 1268 b 539 1270 550 1269 545 1270 b 442 1219 510 1270 475 1252 b 354 982 385 1162 354 1076 b 360 909 354 958 356 934 b 390 765 362 898 389 765 b 390 765 390 765 390 765 b 432 808 391 765 423 798 b 606 1168 543 931 606 1064 b 601 1217 606 1185 604 1201 b 556 1268 594 1247 581 1262 z m 393 531 b 391 542 392 537 391 542 b 272 405 387 542 308 450 b 150 207 198 311 171 267 b 127 70 135 161 127 115 b 197 -153 127 -11 151 -88 b 466 -295 261 -243 362 -295 b 517 -291 483 -295 500 -294 b 566 -278 535 -288 566 -280 b 540 -154 566 -277 554 -222 b 490 76 525 -87 503 17 b 467 184 478 135 467 184 b 467 184 467 184 467 184 b 429 169 463 184 441 175 b 336 15 368 135 336 75 b 412 -121 336 -38 361 -90 b 427 -142 422 -127 427 -134 b 421 -155 427 -146 425 -151 b 408 -162 418 -159 414 -162 b 377 -150 401 -162 392 -158 b 240 77 286 -103 240 -14 b 363 302 240 162 281 248 b 434 336 384 316 426 336 b 435 337 434 336 435 337 b 435 338 435 338 435 338 b 393 531 434 340 397 514 z m 546 191 b 525 192 541 191 531 192 l 512 192 l 513 190 b 554 -1 513 189 531 103 b 596 -201 576 -105 595 -195 b 604 -236 598 -207 601 -223 l 609 -260 l 612 -258 b 729 -129 667 -227 707 -183 b 748 -39 742 -99 748 -69 b 546 191 748 74 665 177 z',\n        },\n        cClef: {\n            x_min: 0,\n            x_max: 604,\n            y_min: -477,\n            y_max: 477,\n            ha: 955,\n            o: 'm 0 0 l 0 687 l 82 687 l 164 687 l 164 0 l 164 -687 l 82 -687 l 0 -687 z m 226 0 l 226 687 l 246 687 l 267 687 l 267 359 l 267 30 l 274 36 b 351 137 299 57 330 98 b 412 296 378 184 398 236 b 431 321 418 317 420 321 b 447 300 441 321 446 315 b 608 113 454 194 526 113 b 625 114 614 113 620 114 b 725 310 697 124 720 170 b 726 380 725 335 726 359 b 665 623 726 523 708 593 b 578 646 643 638 612 646 b 486 626 547 646 515 640 b 473 620 479 623 473 620 b 474 620 473 620 473 620 b 543 543 512 618 543 584 b 543 541 543 542 543 541 b 462 464 541 493 502 464 b 393 502 437 464 411 476 b 379 549 383 517 379 533 b 408 612 379 572 388 594 b 579 677 455 656 517 677 b 831 531 676 677 776 625 b 870 382 857 485 870 433 b 676 93 870 256 795 132 b 609 82 653 86 630 82 b 511 114 574 82 541 93 b 503 119 507 117 504 119 b 503 119 503 119 503 119 b 467 59 503 119 487 92 l 431 0 l 467 -59 b 503 -119 487 -92 503 -119 b 503 -119 503 -119 503 -119 b 511 -114 504 -119 507 -117 b 609 -82 541 -93 574 -82 b 636 -84 618 -82 627 -83 b 869 -359 762 -103 858 -216 b 870 -383 869 -367 870 -375 b 600 -677 870 -536 755 -664 b 578 -677 593 -677 586 -677 b 404 -609 512 -677 450 -653 b 379 -549 387 -592 379 -570 b 462 -464 379 -506 413 -464 b 467 -464 464 -464 465 -464 b 543 -544 512 -467 543 -504 b 530 -588 543 -558 539 -574 b 474 -620 518 -605 494 -619 b 473 -620 473 -620 473 -620 b 486 -626 473 -621 478 -623 b 578 -646 515 -640 547 -646 b 665 -623 612 -646 643 -638 b 726 -380 708 -593 726 -523 b 725 -310 726 -359 725 -335 b 625 -114 720 -170 697 -124 b 608 -113 620 -114 614 -113 b 447 -300 526 -113 454 -194 b 431 -321 446 -315 441 -321 b 412 -296 420 -321 418 -317 b 351 -137 398 -236 378 -184 b 274 -36 330 -98 298 -57 l 267 -30 l 267 -359 l 267 -687 l 246 -687 l 226 -687 z',\n        },\n        fClef: {\n            x_min: 0,\n            x_max: 622,\n            y_min: -512,\n            y_max: 238,\n            ha: 750,\n            o: 'm 306 342 b 335 343 316 343 325 343 b 608 261 436 343 540 312 b 741 -2 696 195 741 105 b 738 -48 741 -17 740 -32 b 151 -702 705 -334 470 -596 b 15 -737 104 -718 29 -737 b 0 -722 6 -737 0 -731 b 23 -702 0 -712 2 -710 b 565 -68 332 -587 541 -343 b 567 -9 566 -48 567 -28 b 441 280 567 125 523 228 b 325 312 406 302 366 312 b 94 174 233 312 137 260 b 84 151 91 168 84 152 b 84 151 84 151 84 151 b 90 154 84 151 87 152 b 159 174 111 168 135 174 b 289 70 218 174 275 134 b 293 40 292 60 293 50 b 157 -95 293 -34 233 -95 b 138 -93 151 -95 144 -94 b 8 75 61 -83 8 -14 l 8 75 b 306 342 8 214 139 332 z m 835 211 b 840 212 836 211 838 212 b 859 209 847 212 856 211 b 895 160 883 201 895 181 b 859 111 895 140 883 119 b 844 109 855 110 849 109 b 828 111 838 109 832 110 b 793 160 804 119 793 140 b 835 211 793 183 807 206 z m 835 -109 b 840 -109 836 -109 838 -109 b 859 -111 847 -109 856 -110 b 895 -160 883 -119 895 -140 b 859 -209 895 -181 883 -202 b 844 -211 855 -211 849 -211 b 828 -209 838 -211 832 -211 b 793 -160 804 -201 793 -181 b 835 -109 793 -138 807 -115 z',\n        },\n        unpitchedPercussionClef1: {\n            x_min: 160,\n            x_max: 481,\n            y_min: -235,\n            y_max: 235,\n            ha: 470,\n            o: 'm 231 0 l 231 339 l 308 339 l 385 339 l 385 0 l 385 -339 l 308 -339 l 231 -339 z m 539 0 l 539 339 l 616 339 l 692 339 l 692 0 l 692 -339 l 616 -339 l 539 -339 z',\n        },\n        '6stringTabClef': {\n            x_min: 0,\n            x_max: 471,\n            y_min: -691,\n            y_max: 707,\n            ha: 1398,\n            o: 'm 595 1018 b 601 1019 597 1019 599 1019 b 629 1007 611 1019 622 1014 b 640 980 637 999 640 990 b 617 944 640 966 632 952 b 439 906 572 921 503 906 l 425 906 l 425 902 b 429 822 428 876 429 849 b 393 574 429 734 416 645 b 230 390 357 465 308 409 b 184 384 215 386 201 384 b 139 387 171 384 157 385 b 103 426 117 389 103 407 b 115 453 103 436 107 445 b 142 465 123 461 132 465 b 173 450 153 465 164 460 b 182 446 175 448 178 446 b 210 457 190 446 200 450 b 266 540 231 470 247 495 b 315 819 298 618 315 715 b 311 909 315 848 314 879 l 310 921 l 302 923 b 245 932 283 929 263 932 b 131 871 194 932 150 910 b 85 841 121 851 103 841 b 39 877 66 841 46 853 b 37 890 38 881 37 885 b 99 959 37 913 58 936 b 247 995 141 982 195 995 b 329 984 276 995 304 991 b 437 968 366 974 403 968 b 575 1008 494 968 544 982 b 595 1018 581 1014 587 1017 z m 414 353 b 421 354 416 354 419 354 b 441 351 428 354 437 353 b 481 301 464 344 479 325 b 502 146 484 266 493 197 b 583 -179 523 20 553 -102 b 628 -237 594 -207 612 -230 l 631 -239 l 636 -238 b 645 -236 639 -237 642 -236 b 678 -270 664 -236 678 -253 b 663 -297 678 -280 673 -290 b 635 -302 657 -300 648 -302 b 611 -300 628 -302 620 -301 b 476 -194 552 -293 501 -253 b 417 0 458 -154 432 -68 b 415 7 416 4 415 7 b 415 7 415 7 415 7 b 410 -3 414 7 412 2 b 358 -93 397 -31 376 -67 b 353 -102 355 -98 353 -101 b 358 -107 353 -104 355 -105 b 409 -125 374 -118 390 -124 b 425 -129 419 -126 421 -126 b 430 -141 428 -133 430 -137 b 419 -156 430 -147 426 -153 b 381 -163 408 -161 395 -163 b 323 -150 362 -163 341 -159 l 317 -147 l 314 -150 b 46 -296 235 -239 137 -293 b 37 -296 43 -296 40 -296 b 9 -287 22 -296 17 -294 b 0 -265 3 -280 0 -272 b 32 -232 0 -248 13 -232 b 37 -233 34 -232 36 -233 b 43 -233 39 -233 41 -233 b 135 -196 65 -233 101 -219 b 367 288 266 -108 358 85 b 370 314 368 301 368 308 b 414 353 377 334 393 349 z m 354 -349 b 383 -348 360 -349 371 -348 b 424 -350 400 -348 417 -349 b 497 -365 453 -353 472 -357 b 647 -513 584 -392 647 -455 b 529 -654 647 -563 601 -619 l 519 -659 l 528 -663 b 658 -829 607 -704 658 -769 b 657 -843 658 -834 658 -838 b 473 -991 648 -916 572 -976 b 424 -994 456 -993 440 -994 b 256 -949 366 -994 309 -979 b 233 -913 242 -941 233 -927 b 234 -906 233 -911 234 -908 l 235 -902 l 234 -903 b 226 -908 233 -903 230 -906 b 117 -955 195 -933 158 -948 b 85 -956 111 -955 98 -956 b 45 -954 67 -956 49 -955 b 18 -918 28 -949 18 -934 b 29 -892 18 -909 22 -900 b 55 -881 36 -885 46 -881 b 80 -891 64 -881 73 -884 l 83 -894 l 89 -894 b 197 -794 126 -894 172 -852 b 207 -772 199 -790 203 -780 b 269 -495 248 -680 269 -586 b 266 -441 269 -477 268 -459 b 265 -431 266 -436 265 -431 b 265 -431 265 -431 265 -431 b 240 -440 264 -431 250 -436 b 132 -529 189 -462 150 -494 b 89 -556 123 -548 106 -556 b 40 -508 64 -556 40 -538 b 82 -447 40 -487 48 -475 b 354 -349 149 -393 245 -358 z m 406 -411 b 387 -410 402 -411 393 -410 l 375 -410 l 376 -413 b 382 -475 378 -421 381 -449 b 382 -496 382 -482 382 -489 b 314 -789 382 -590 359 -693 b 267 -869 296 -828 285 -847 b 263 -874 265 -872 263 -874 b 264 -874 263 -874 264 -874 b 267 -874 264 -874 265 -874 b 273 -873 269 -874 271 -873 b 300 -884 282 -873 291 -877 b 425 -932 340 -916 381 -932 l 425 -932 b 545 -830 499 -932 545 -885 b 505 -743 545 -801 532 -770 b 396 -689 478 -716 442 -698 b 369 -672 381 -686 373 -681 b 365 -656 366 -667 365 -661 b 395 -625 365 -640 377 -627 b 533 -529 461 -619 522 -576 b 535 -513 534 -524 535 -519 b 406 -411 535 -463 479 -418 z',\n        },\n        timeSig0: {\n            x_min: 0,\n            x_max: 357,\n            y_min: 0,\n            y_max: 457,\n            ha: 457,\n            o: 'm 234 632 b 256 634 241 633 248 634 b 402 581 306 634 362 614 b 514 339 475 523 514 437 b 511 292 514 324 513 308 b 257 43 494 153 383 43 b 30 198 164 43 77 103 b 0 338 10 239 0 289 b 30 479 0 388 10 438 b 234 632 73 565 148 622 z m 275 601 b 257 602 269 602 263 602 b 191 574 228 602 203 592 b 160 335 174 549 160 434 b 162 283 160 317 161 299 b 191 102 168 185 178 122 b 257 74 203 85 229 74 b 288 78 267 74 277 76 b 344 188 323 88 334 110 b 354 338 350 242 354 290 b 344 488 354 387 350 435 b 275 601 333 573 321 594 z m 257 0 l 258 0 l 256 0 z m 257 658 l 258 658 l 256 658 z',\n        },\n        timeSig1: {\n            x_min: 0,\n            x_max: 239,\n            y_min: 0,\n            y_max: 457,\n            ha: 457,\n            o: 'm 127 622 b 197 623 129 623 132 623 b 221 623 206 623 214 623 b 273 619 273 623 269 623 b 277 404 277 614 277 633 b 282 133 277 150 277 148 b 331 85 289 114 304 99 b 344 69 340 81 344 75 b 340 58 344 65 343 62 b 250 54 335 54 345 54 b 197 54 235 54 218 54 b 145 54 177 54 160 54 b 55 58 50 54 59 54 b 51 69 52 62 51 65 b 64 85 51 75 55 81 b 113 133 91 99 106 114 b 118 291 117 146 118 157 b 118 361 118 311 118 334 l 118 516 l 112 508 b 85 466 109 504 97 485 b 45 406 72 447 54 420 b 15 374 24 374 24 374 b 0 390 6 374 0 380 b 0 391 0 390 0 390 l 0 395 l 60 506 b 127 622 120 617 122 620 z m 172 0 l 173 0 l 171 0 z m 172 658 l 173 658 l 171 658 z',\n        },\n        timeSig2: {\n            x_min: 0,\n            x_max: 317,\n            y_min: 0,\n            y_max: 457,\n            ha: 457,\n            o: 'm 197 633 b 218 634 204 633 211 634 b 298 623 245 634 276 630 b 431 477 382 599 431 543 b 415 410 431 455 426 433 b 243 275 385 348 328 304 b 72 168 162 249 110 216 l 68 164 l 73 168 b 213 218 114 201 164 218 b 303 196 245 218 276 211 b 355 176 325 184 338 179 b 371 175 360 175 366 175 b 427 198 396 175 419 184 b 442 208 430 205 436 208 b 457 192 449 208 457 202 b 434 134 457 183 445 153 b 300 44 402 79 351 44 l 299 44 b 256 56 278 45 272 46 b 125 98 213 84 168 98 b 88 94 112 98 100 97 b 30 62 64 89 39 75 b 15 54 26 57 20 54 b 1 64 9 54 3 57 b 0 72 0 65 0 68 b 6 118 0 84 2 104 b 169 305 26 201 85 268 b 285 453 231 332 273 386 b 287 476 286 461 287 469 b 256 550 287 505 276 531 b 173 582 234 571 207 582 b 153 580 167 582 160 581 b 143 579 145 580 143 579 b 145 577 143 578 144 578 b 180 515 169 562 180 539 b 129 444 180 485 162 455 b 105 440 121 441 113 440 b 28 518 63 440 28 476 b 31 540 28 525 29 532 b 197 633 44 585 115 625 z m 228 0 l 230 0 l 227 0 z m 228 658 l 230 658 l 227 658 z',\n        },\n        timeSig3: {\n            x_min: 0,\n            x_max: 284,\n            y_min: 0,\n            y_max: 457,\n            ha: 457,\n            o: 'm 168 632 b 197 634 178 633 187 634 b 404 491 308 634 404 570 b 265 366 404 442 347 391 l 255 363 l 259 362 b 404 234 333 338 388 289 b 409 200 407 222 409 211 b 252 49 409 130 347 67 b 198 43 234 45 216 43 b 23 112 132 43 68 68 b 0 165 7 128 0 146 b 77 245 0 205 32 245 b 91 243 82 245 86 244 b 152 169 131 236 152 202 b 106 102 152 142 137 114 b 104 101 104 102 104 101 b 113 98 104 100 106 100 b 154 93 128 94 141 93 b 233 124 186 93 212 103 b 264 202 254 145 264 171 b 261 233 264 212 263 222 b 147 348 248 298 202 345 b 127 364 132 349 127 353 b 148 380 127 375 132 379 b 256 467 198 383 242 419 b 259 491 258 475 259 483 b 183 579 259 532 229 568 b 157 581 177 581 168 581 b 116 578 143 581 128 580 l 112 577 l 115 576 b 152 513 140 563 152 538 b 102 441 152 483 135 452 b 78 437 94 439 86 437 b 0 516 35 437 0 474 b 8 549 0 527 2 538 b 168 632 27 589 97 625 z m 204 0 l 206 0 l 203 0 z m 204 658 l 206 658 l 203 658 z',\n        },\n        timeSig4: {\n            x_min: 0,\n            x_max: 325,\n            y_min: 0,\n            y_max: 457,\n            ha: 457,\n            o: 'm 173 622 b 286 623 175 623 232 623 b 378 622 332 623 377 623 b 388 608 384 620 388 614 b 368 579 388 601 387 600 b 244 440 351 561 298 501 b 209 401 228 422 213 405 b 155 341 205 397 181 370 b 85 262 130 312 98 276 b 61 234 72 247 61 235 b 61 234 61 234 61 234 b 151 233 61 233 69 233 l 241 233 l 242 298 b 243 364 242 361 242 362 b 288 415 244 365 264 388 b 351 485 312 442 340 474 b 385 515 378 516 377 515 b 399 507 392 515 397 512 b 400 369 400 504 400 499 l 400 233 l 424 233 b 452 232 447 233 449 233 b 465 213 460 229 465 221 b 459 198 465 207 463 202 b 425 192 453 192 452 192 l 401 192 l 401 186 b 401 166 401 183 401 174 b 455 85 402 125 415 105 b 468 69 463 81 468 75 b 463 58 468 65 466 61 b 374 54 459 54 469 54 b 321 54 359 54 341 54 b 268 54 301 54 283 54 b 179 58 173 54 183 54 b 174 69 176 61 174 65 b 187 85 174 75 179 81 b 241 166 227 105 240 125 b 241 186 241 174 241 183 l 241 192 l 127 192 b 84 192 110 192 96 192 b 5 196 2 192 9 192 b 0 207 2 199 0 203 b 8 223 0 211 3 217 b 164 594 103 330 160 464 b 173 622 164 615 165 618 z m 234 0 l 235 0 l 232 0 z m 234 658 l 235 658 l 232 658 z',\n        },\n        timeSig5: {\n            x_min: 0,\n            x_max: 284,\n            y_min: 0,\n            y_max: 457,\n            ha: 457,\n            o: 'm 48 622 b 54 623 50 623 52 623 b 67 620 57 623 61 622 b 211 597 110 605 159 597 b 367 620 262 597 315 605 b 382 623 374 622 378 623 b 392 619 386 623 389 622 b 396 609 394 616 396 613 b 386 582 396 604 393 596 b 261 486 355 520 320 493 b 213 483 246 484 230 483 b 74 503 166 483 116 490 b 62 506 67 505 62 506 b 53 398 62 506 53 402 b 53 398 53 398 53 398 b 53 398 53 398 53 398 b 59 401 53 398 56 399 b 150 429 84 414 117 424 b 189 431 158 430 174 431 b 214 430 199 431 209 430 b 408 240 330 413 408 338 l 408 240 b 225 45 408 143 332 62 b 200 43 217 44 208 43 b 22 123 140 43 72 73 b 0 175 7 138 0 157 b 77 255 0 215 33 255 b 91 254 82 255 86 254 b 152 180 131 246 152 213 b 102 111 152 151 136 122 l 96 109 l 103 106 b 149 95 119 99 135 95 b 202 112 168 95 185 101 b 264 245 243 139 264 187 b 260 290 264 260 263 275 b 198 397 251 344 226 387 l 193 399 l 178 399 b 54 361 134 399 90 385 b 34 351 40 352 39 351 b 19 367 25 351 19 357 b 40 614 19 377 39 611 b 48 622 42 617 45 620 z m 209 79 b 208 79 209 79 209 79 b 205 78 208 79 207 79 b 203 76 204 77 203 76 b 203 76 203 76 203 76 b 209 79 204 76 209 79 z m 204 0 l 205 0 l 203 0 z m 204 658 l 205 658 l 203 658 z',\n        },\n        timeSig6: {\n            x_min: 0,\n            x_max: 328,\n            y_min: 0,\n            y_max: 457,\n            ha: 457,\n            o: 'm 255 632 b 277 633 261 633 269 633 b 329 628 295 633 316 632 b 445 551 378 616 430 581 b 452 518 450 540 452 529 b 375 440 452 477 417 440 b 350 444 367 440 359 441 b 300 514 317 455 300 485 b 349 583 300 543 316 572 b 355 585 352 584 355 585 b 355 585 355 585 355 585 b 326 596 355 587 337 594 b 287 602 313 600 300 602 b 206 566 254 602 224 589 b 167 442 189 543 176 501 b 160 367 164 421 160 377 b 160 366 160 366 160 366 b 160 366 160 366 160 366 b 169 369 160 366 164 367 b 257 387 200 381 229 387 b 342 369 284 387 312 381 b 458 278 397 349 438 316 b 472 218 468 260 472 239 b 450 143 472 192 465 165 b 256 44 412 86 325 44 b 224 47 245 44 234 45 b 8 266 122 71 33 161 b 0 344 3 289 0 316 b 4 399 0 363 1 382 b 255 632 25 520 129 617 z m 272 355 b 257 356 267 356 262 356 b 213 341 239 356 222 350 b 186 223 196 322 186 274 b 189 174 186 207 187 190 b 257 75 201 96 215 75 l 258 75 b 321 157 296 75 309 93 b 328 222 326 182 328 202 b 323 277 328 240 326 257 b 272 355 314 330 301 350 z m 236 0 l 238 0 l 235 0 z m 236 658 l 238 658 l 235 658 z',\n        },\n        timeSig7: {\n            x_min: 0,\n            x_max: 306,\n            y_min: 0,\n            y_max: 457,\n            ha: 457,\n            o: 'm 153 634 b 169 634 158 634 163 634 b 313 583 218 634 272 615 b 339 572 322 575 329 572 b 348 573 342 572 345 573 b 409 612 371 576 392 590 b 426 624 415 620 420 624 b 432 622 428 624 430 623 b 441 609 438 620 441 617 b 429 557 441 601 437 586 b 347 353 407 476 372 391 b 273 86 303 288 275 189 b 263 55 272 61 271 59 b 181 54 261 54 221 54 b 99 55 141 54 101 54 b 90 75 92 58 90 62 b 90 75 90 75 90 75 b 167 288 90 139 120 222 b 262 392 195 327 221 355 b 375 524 315 439 346 476 b 379 533 378 530 379 532 b 379 533 379 533 379 533 b 376 531 379 533 378 533 b 242 484 335 500 288 484 b 125 527 199 484 157 499 b 85 547 110 541 97 547 b 54 527 73 547 63 540 b 31 471 46 514 38 497 b 15 459 29 463 22 459 b 1 468 9 459 4 462 b 0 541 0 470 0 505 b 1 614 0 577 0 612 b 15 623 4 620 9 623 b 28 618 19 623 23 622 b 49 610 35 613 41 610 b 91 620 58 610 70 613 b 153 634 117 629 131 632 z m 220 0 l 222 0 l 219 0 z m 220 658 l 222 658 l 219 658 z',\n        },\n        timeSig8: {\n            x_min: 0,\n            x_max: 338,\n            y_min: 0,\n            y_max: 457,\n            ha: 457,\n            o: 'm 231 633 b 245 634 237 633 242 634 b 246 634 245 634 245 634 b 258 633 247 633 252 633 b 375 598 298 632 341 619 b 457 466 429 566 457 516 b 414 366 457 431 443 396 l 409 360 l 414 357 b 487 227 462 323 487 275 b 454 134 487 195 476 163 b 243 43 409 76 328 43 b 130 64 205 43 166 50 b 0 227 45 98 0 162 b 71 355 0 273 23 320 l 78 360 l 72 367 b 31 467 45 395 31 431 b 40 516 31 484 34 500 b 231 633 66 583 143 630 z m 265 590 b 244 592 259 591 252 592 b 214 588 234 592 223 591 b 158 539 181 581 158 559 b 161 528 158 535 159 532 b 333 397 178 491 254 433 l 337 395 l 340 400 b 358 466 352 421 358 444 b 265 590 358 523 322 577 z m 139 319 b 130 323 135 321 131 323 b 130 323 130 323 130 323 b 112 304 129 323 117 311 b 85 227 94 280 85 254 b 176 98 85 175 118 123 b 242 85 198 89 220 85 b 334 123 281 85 316 99 b 346 154 342 133 346 143 b 329 197 346 167 340 180 b 156 312 298 243 241 281 b 139 319 152 314 144 317 z m 244 0 l 245 0 l 242 0 z m 244 658 l 245 658 l 242 658 z',\n        },\n        timeSig9: {\n            x_min: 0,\n            x_max: 328,\n            y_min: 0,\n            y_max: 457,\n            ha: 457,\n            o: 'm 195 632 b 213 633 201 633 207 633 b 312 605 244 633 278 624 b 467 395 395 560 451 484 b 472 334 471 378 472 356 b 468 277 472 314 471 294 b 262 54 450 173 370 85 b 192 43 238 47 214 43 b 92 68 156 43 123 52 b 24 135 54 89 31 112 b 20 159 21 143 20 151 b 98 237 20 201 56 237 b 122 233 106 237 114 236 b 172 163 156 222 172 192 b 123 94 172 134 156 105 b 117 91 120 93 118 92 b 117 91 117 91 117 91 b 146 80 117 90 136 83 b 185 75 160 77 173 75 b 262 107 217 75 244 86 b 304 229 282 129 295 167 b 313 309 308 251 313 299 b 312 311 313 310 313 311 b 312 311 312 311 312 311 b 303 308 312 311 308 310 b 216 290 272 296 244 290 b 162 297 199 290 181 292 b 22 386 101 313 48 347 b 0 459 7 408 0 433 b 32 547 0 489 11 521 b 195 632 66 589 133 624 z m 234 600 b 217 602 229 601 223 602 b 183 594 204 602 191 599 b 146 485 165 582 153 546 b 145 455 145 476 145 465 b 172 336 145 406 156 354 b 216 321 182 326 199 321 b 259 336 233 321 250 326 b 287 453 276 355 287 403 b 283 503 287 470 286 487 b 234 600 273 570 262 592 z m 236 0 l 238 0 l 235 0 z m 236 658 l 238 658 l 235 658 z',\n        },\n        timeSigCommon: {\n            x_min: 0,\n            x_max: 385,\n            y_min: -219,\n            y_max: 219,\n            ha: 438,\n            o: 'm 296 314 b 323 316 305 315 314 316 b 525 213 406 316 481 278 b 540 163 536 197 540 180 b 447 69 540 115 501 69 b 443 69 446 69 444 69 b 357 157 392 71 357 113 b 378 211 357 176 364 195 b 440 240 393 229 417 240 b 455 239 445 240 450 240 b 458 238 456 239 458 238 b 458 238 458 238 458 238 b 450 245 458 239 456 241 b 325 284 413 271 374 284 l 325 284 b 144 -3 193 284 144 207 b 144 -3 144 -3 144 -3 b 297 -284 144 -211 183 -282 b 302 -284 299 -284 300 -284 b 522 -102 412 -284 504 -208 b 539 -82 525 -87 529 -82 b 554 -99 549 -82 554 -87 b 547 -135 554 -107 551 -119 b 369 -307 522 -219 455 -284 b 302 -316 348 -313 325 -316 b 233 -307 278 -316 255 -313 b 6 -65 118 -278 30 -184 b 0 -1 2 -43 0 -22 b 296 314 0 160 124 298 z',\n        },\n        timeSigCutCommon: {\n            x_min: 0,\n            x_max: 385,\n            y_min: -371,\n            y_max: 371,\n            ha: 741,\n            o: 'm 290 532 b 297 534 292 533 295 534 b 317 521 306 534 314 529 b 318 419 318 517 318 516 l 318 321 l 334 320 b 525 218 411 319 483 280 b 540 169 536 203 540 185 b 447 75 540 120 501 75 b 443 75 446 75 444 75 b 357 162 392 76 357 118 b 378 217 357 181 364 200 b 440 246 393 235 417 246 b 455 244 445 246 450 245 b 458 244 456 244 457 244 b 458 244 458 244 458 244 b 450 250 458 244 456 246 b 333 289 416 275 376 288 l 318 289 l 318 5 l 318 -279 l 320 -279 b 326 -278 320 -278 323 -278 b 522 -97 422 -270 506 -193 b 539 -77 525 -82 528 -77 b 554 -94 549 -77 554 -82 b 547 -130 554 -102 551 -114 b 351 -306 521 -220 445 -288 b 322 -310 344 -307 335 -309 l 318 -310 l 318 -414 b 318 -460 318 -432 318 -447 b 312 -528 318 -529 318 -522 b 298 -534 308 -532 303 -534 b 278 -521 290 -534 281 -529 b 277 -414 277 -517 277 -516 l 277 -310 l 275 -309 b 265 -308 274 -309 269 -309 b 6 -60 137 -292 32 -191 b 0 4 2 -38 0 -17 b 244 311 0 147 97 273 b 277 317 253 313 274 317 b 277 417 277 317 277 362 b 278 521 277 516 277 517 b 290 532 280 525 285 530 z m 277 3 b 276 285 277 271 277 285 b 267 282 275 285 271 284 b 144 3 179 260 144 180 l 144 2 b 273 -277 144 -192 179 -266 l 277 -278 z',\n        },\n        timeSigPlus: {\n            x_min: 0,\n            x_max: 221,\n            y_min: 125,\n            y_max: 346,\n            ha: 221,\n            o: 'm 150 496 b 159 498 153 497 156 498 b 186 482 169 498 180 492 b 190 430 190 476 190 477 l 190 421 l 190 369 l 241 369 l 251 369 b 303 365 298 369 296 369 b 318 338 313 359 318 349 b 303 312 318 328 313 318 b 250 308 296 308 298 308 l 241 308 l 190 308 l 190 256 l 190 247 b 186 194 190 200 190 201 b 159 179 180 184 170 179 b 132 195 149 179 138 184 b 128 247 128 201 128 200 l 128 256 l 128 308 l 77 308 l 68 308 b 15 312 20 308 22 308 b 0 338 5 318 0 328 b 15 365 0 349 5 359 b 68 369 22 369 20 369 l 77 369 l 128 369 l 128 421 l 128 430 b 132 483 128 477 128 476 b 150 496 136 489 142 494 z',\n        },\n        timeSigPlusSmall: {\n            x_min: 0,\n            x_max: 221,\n            y_min: 125,\n            y_max: 346,\n            ha: 221,\n            o: 'm 150 496 b 159 498 153 497 156 498 b 186 482 169 498 180 492 b 190 430 190 476 190 477 l 190 421 l 190 369 l 241 369 l 251 369 b 303 365 298 369 296 369 b 318 338 313 359 318 349 b 303 312 318 328 313 318 b 250 308 296 308 298 308 l 241 308 l 190 308 l 190 256 l 190 247 b 186 194 190 200 190 201 b 159 179 180 184 170 179 b 132 195 149 179 138 184 b 128 247 128 201 128 200 l 128 256 l 128 308 l 77 308 l 68 308 b 15 312 20 308 22 308 b 0 338 5 318 0 328 b 15 365 0 349 5 359 b 68 369 22 369 20 369 l 77 369 l 128 369 l 128 421 l 128 430 b 132 483 128 477 128 476 b 150 496 136 489 142 494 z',\n        },\n        timeSigMinus: {\n            x_min: 0,\n            x_max: 221,\n            y_min: 214,\n            y_max: 256,\n            ha: 43,\n            o: 'm 22 368 b 167 369 24 369 97 369 b 296 368 231 369 293 369 b 318 338 311 364 318 351 b 296 309 318 326 311 313 b 159 307 293 308 226 307 b 22 309 92 307 25 308 b 0 338 7 313 0 325 b 22 368 0 351 7 363 z',\n        },\n        timeSigParensRight: {\n            x_min: 18,\n            x_max: 115,\n            y_min: -251,\n            y_max: 251,\n            ha: 503,\n            o: 'm 34 361 b 41 362 36 361 38 362 b 61 345 49 362 51 360 b 166 0 131 236 166 118 b 61 -345 166 -118 131 -235 b 41 -362 53 -357 48 -362 b 34 -360 39 -362 37 -361 b 26 -348 29 -357 26 -354 b 31 -328 26 -344 28 -337 b 93 0 73 -228 93 -114 b 31 329 93 114 73 229 b 26 349 28 338 26 344 b 34 361 26 355 29 358 z',\n        },\n        timeSigParensRightSmall: {\n            x_min: 18,\n            x_max: 115,\n            y_min: -251,\n            y_max: 251,\n            ha: 503,\n            o: 'm 34 361 b 41 362 36 361 38 362 b 61 345 49 362 51 360 b 166 0 131 236 166 118 b 61 -345 166 -118 131 -235 b 41 -362 53 -357 48 -362 b 34 -360 39 -362 37 -361 b 26 -348 29 -357 26 -354 b 31 -328 26 -344 28 -337 b 93 0 73 -228 93 -114 b 31 329 93 114 73 229 b 26 349 28 338 26 344 b 34 361 26 355 29 358 z',\n        },\n        timeSigParensLeft: {\n            x_min: -115,\n            x_max: -18,\n            y_min: -251,\n            y_max: 251,\n            ha: 502,\n            o: 'm -48 360 b -41 362 -46 361 -44 362 b -27 353 -35 362 -29 358 b -26 347 -26 351 -26 349 b -31 328 -26 343 -27 338 b -92 51 -66 243 -85 157 b -93 0 -92 42 -93 21 b -92 -51 -93 -21 -92 -42 b -31 -328 -85 -157 -66 -243 b -26 -346 -26 -341 -26 -343 b -41 -362 -26 -356 -32 -362 b -61 -345 -49 -362 -51 -360 b -166 0 -131 -236 -166 -118 b -61 345 -166 118 -131 236 b -48 360 -54 356 -51 359 z',\n        },\n        timeSigParensLeftSmall: {\n            x_min: -115,\n            x_max: -18,\n            y_min: -251,\n            y_max: 251,\n            ha: 502,\n            o: 'm -48 360 b -41 362 -46 361 -44 362 b -27 353 -35 362 -29 358 b -26 347 -26 351 -26 349 b -31 328 -26 343 -27 338 b -92 51 -66 243 -85 157 b -93 0 -92 42 -93 21 b -92 -51 -93 -21 -92 -42 b -31 -328 -85 -157 -66 -243 b -26 -346 -26 -341 -26 -343 b -41 -362 -26 -356 -32 -362 b -61 -345 -49 -362 -51 -360 b -166 0 -131 -236 -166 -118 b -61 345 -166 118 -131 236 b -48 360 -54 356 -51 359 z',\n        },\n        noteheadDoubleWhole: {\n            x_min: 0,\n            x_max: 623,\n            y_min: -164,\n            y_max: 164,\n            ha: 328,\n            o: 'm 18 235 b 26 236 19 236 23 236 b 34 235 29 236 32 236 b 47 225 39 233 44 230 b 51 88 51 219 51 232 b 51 0 51 63 51 34 b 51 -88 51 -34 51 -63 b 47 -225 51 -233 51 -219 b 26 -236 42 -232 34 -236 b 1 -218 15 -236 5 -230 b 0 4 0 -216 0 -105 b 1 218 0 110 0 216 b 18 235 3 226 10 233 z m 110 235 b 118 236 112 236 115 236 b 126 235 121 236 124 236 b 143 218 134 233 140 226 b 144 120 144 216 144 201 b 145 29 144 45 144 29 b 145 29 145 29 145 29 b 392 179 165 105 264 165 b 449 182 411 181 430 182 b 753 29 598 182 729 119 b 753 29 753 29 753 29 b 754 120 754 29 754 45 b 757 223 754 221 754 218 b 780 236 763 232 771 236 b 801 225 788 236 796 232 b 805 88 805 219 805 232 b 805 0 805 63 805 34 b 805 -88 805 -34 805 -63 b 801 -225 805 -233 805 -219 b 780 -236 796 -232 788 -236 b 758 -225 772 -236 763 -232 b 754 -121 754 -218 754 -225 b 753 -29 754 -45 754 -29 b 753 -29 753 -29 753 -29 b 506 -179 733 -105 634 -165 b 449 -182 487 -181 468 -182 b 145 -29 300 -182 169 -119 b 145 -29 145 -29 145 -29 b 144 -121 144 -29 144 -45 b 140 -225 144 -225 144 -218 b 118 -236 134 -232 126 -236 b 93 -218 108 -236 97 -230 b 92 4 93 -216 92 -105 b 93 218 92 110 93 216 b 110 235 96 226 103 233 z m 431 158 b 413 159 425 159 419 159 b 312 41 352 159 312 109 b 324 -24 312 21 315 -1 b 486 -159 354 -109 425 -159 b 577 -95 525 -159 559 -139 b 586 -42 583 -78 586 -60 b 431 158 586 47 516 145 z m 864 235 b 872 236 866 236 869 236 b 880 235 875 236 878 236 b 894 225 885 233 890 230 b 898 88 897 219 898 232 b 898 0 898 63 898 34 b 898 -88 898 -34 898 -63 b 894 -225 898 -233 897 -219 b 872 -236 888 -232 880 -236 b 847 -218 862 -236 851 -230 b 846 4 847 -216 846 -105 b 847 218 846 110 847 216 b 864 235 850 226 857 233 z',\n        },\n        noteheadWhole: {\n            x_min: 0,\n            x_max: 427,\n            y_min: -127,\n            y_max: 127,\n            ha: 253,\n            o: 'm 273 181 b 307 182 285 182 296 182 b 610 36 453 182 582 121 b 615 0 614 24 615 11 b 307 -182 615 -100 482 -182 b 0 0 135 -182 0 -102 b 273 181 0 94 117 171 z m 289 158 b 271 159 283 159 277 159 b 170 41 211 159 170 109 b 182 -24 170 21 174 -1 b 344 -159 213 -110 284 -159 b 435 -95 383 -159 418 -139 b 445 -42 442 -78 445 -60 b 289 158 445 47 375 145 z',\n        },\n        noteheadHalf: {\n            x_min: 0,\n            x_max: 297,\n            y_min: -126,\n            y_max: 126,\n            ha: 253,\n            o: 'm 253 182 b 264 182 256 182 259 182 b 303 180 277 182 296 181 b 427 49 386 168 427 113 b 289 -147 427 -19 381 -97 b 156 -182 244 -171 198 -182 b 3 -77 79 -182 16 -144 b 0 -49 1 -67 0 -58 b 253 182 0 59 116 168 z m 365 130 b 349 132 360 132 355 132 b 93 -24 288 132 163 58 b 47 -109 63 -59 47 -90 b 56 -127 47 -118 50 -124 b 78 -132 62 -131 70 -132 b 345 37 143 -132 278 -49 b 381 108 369 67 381 92 b 365 130 381 119 375 127 z',\n        },\n        noteheadBlack: {\n            x_min: 0,\n            x_max: 297,\n            y_min: -126,\n            y_max: 126,\n            ha: 253,\n            o: 'm 253 182 b 264 182 256 182 259 182 b 303 180 277 182 296 181 b 427 49 386 168 427 113 b 289 -147 427 -19 381 -97 b 156 -182 244 -171 198 -182 b 3 -77 79 -182 16 -144 b 0 -49 1 -67 0 -58 b 253 182 0 59 116 168 z',\n        },\n        noteheadXWhole: {\n            x_min: 0,\n            x_max: 414,\n            y_min: -125,\n            y_max: 125,\n            ha: 249,\n            o: 'm 63 179 b 77 179 67 179 72 179 b 91 179 83 179 88 179 b 203 129 101 177 109 173 l 298 85 l 392 129 b 515 180 497 178 500 180 b 518 180 516 180 517 180 b 596 102 565 180 596 142 b 574 49 596 84 589 65 b 516 16 565 39 561 37 b 482 0 497 7 482 0 b 516 -16 482 0 497 -7 b 574 -49 561 -37 565 -39 b 596 -102 589 -65 596 -84 b 518 -180 596 -142 565 -180 b 515 -180 517 -180 516 -180 b 392 -129 500 -180 497 -178 l 298 -85 l 203 -129 b 81 -180 98 -178 96 -180 b 78 -180 80 -180 79 -180 b 0 -102 31 -180 0 -142 b 21 -49 0 -84 7 -65 b 80 -16 31 -39 34 -37 b 114 0 99 -7 114 0 b 80 16 114 0 99 7 b 21 49 34 37 31 39 b 0 102 7 65 0 84 b 63 179 0 137 24 171 z m 86 132 b 77 134 83 133 80 134 b 46 102 59 134 46 118 b 56 80 46 95 49 87 b 150 35 60 76 52 80 b 223 0 190 16 223 0 b 150 -35 223 0 190 -16 b 56 -80 52 -80 60 -76 b 46 -103 49 -87 46 -95 b 77 -133 46 -118 58 -133 l 77 -133 b 193 -83 85 -133 86 -133 b 298 -35 251 -56 298 -35 b 402 -83 298 -35 345 -56 b 518 -133 510 -133 510 -133 l 519 -133 b 549 -103 537 -133 549 -118 b 540 -80 549 -95 546 -87 b 446 -35 535 -76 544 -80 b 372 0 406 -16 372 0 b 446 35 372 0 406 16 b 540 80 544 80 535 76 b 549 103 546 87 549 95 b 519 133 549 118 537 133 l 518 133 b 402 83 510 133 510 133 b 298 35 345 56 298 35 b 193 83 298 35 251 56 b 86 132 136 110 88 132 z',\n        },\n        noteheadXHalf: {\n            x_min: 0,\n            x_max: 282,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 57 178 b 71 179 61 179 66 179 b 111 168 85 179 100 176 b 159 130 114 167 135 149 l 203 94 l 246 130 b 306 174 293 168 296 170 b 334 180 315 178 325 180 b 406 108 373 180 406 147 b 400 81 406 99 404 90 b 350 28 394 65 390 60 b 317 0 332 13 317 0 b 350 -28 317 0 332 -13 b 400 -81 390 -60 394 -65 b 406 -108 404 -90 406 -99 b 334 -180 406 -147 373 -180 b 306 -174 325 -180 315 -178 b 246 -130 296 -170 293 -168 l 203 -94 l 159 -130 b 100 -174 112 -168 110 -170 b 72 -180 90 -178 81 -180 b 0 -108 33 -180 0 -147 b 5 -81 0 -99 2 -90 b 55 -28 12 -65 16 -60 b 89 0 74 -13 89 0 b 55 28 89 0 74 13 b 19 59 37 43 21 57 b 0 108 6 74 0 91 b 57 178 0 139 21 170 z m 83 131 b 73 133 80 133 76 133 b 52 125 65 133 57 130 b 46 108 48 120 46 114 b 51 92 46 102 48 96 b 107 45 52 91 77 69 b 161 0 137 21 161 0 b 107 -45 161 0 137 -21 b 51 -92 77 -69 52 -91 b 46 -107 48 -97 46 -102 b 61 -131 46 -117 51 -127 b 72 -133 64 -133 68 -133 b 83 -131 76 -133 80 -133 b 144 -82 85 -130 107 -113 b 203 -34 176 -56 203 -34 b 261 -82 203 -34 229 -56 b 323 -131 299 -113 320 -130 b 334 -133 325 -133 329 -133 b 345 -131 338 -133 342 -133 b 359 -107 354 -127 359 -117 b 354 -92 359 -102 358 -97 b 298 -45 353 -91 328 -69 b 244 0 269 -21 244 0 b 298 45 244 0 269 21 b 354 92 328 69 353 91 b 359 108 358 97 359 102 b 345 131 359 117 354 127 b 334 133 342 133 338 133 b 323 131 329 133 325 133 b 261 82 320 130 299 113 b 203 34 229 56 203 34 b 144 82 203 34 176 56 b 83 131 106 114 85 130 z',\n        },\n        noteheadXBlack: {\n            x_min: 0,\n            x_max: 282,\n            y_min: -125,\n            y_max: 125,\n            ha: 249,\n            o: 'm 23 179 b 30 179 25 179 27 179 b 43 178 35 179 40 179 b 127 107 48 175 47 176 b 203 42 169 71 203 42 b 279 107 203 42 237 71 b 373 179 369 185 361 179 b 374 179 373 179 374 179 b 406 149 393 179 406 165 b 397 127 406 141 403 134 b 322 62 395 125 361 96 b 251 0 283 28 251 0 b 322 -62 251 0 283 -28 b 397 -127 361 -96 395 -125 b 406 -149 403 -134 406 -141 b 374 -179 406 -165 393 -179 b 373 -179 374 -179 373 -179 b 279 -107 361 -179 369 -185 b 203 -42 237 -71 203 -42 b 127 -107 203 -42 169 -71 b 33 -179 37 -185 45 -179 b 31 -179 33 -179 32 -179 b 0 -149 13 -179 0 -165 b 9 -127 0 -141 3 -134 b 84 -62 11 -125 45 -96 b 155 0 123 -28 155 0 b 84 62 155 0 123 28 b 9 127 45 96 11 125 b 0 149 3 133 0 141 b 23 179 0 162 8 175 z',\n        },\n        noteheadCircleX: {\n            x_min: 0,\n            x_max: 336,\n            y_min: -168,\n            y_max: 168,\n            ha: 335,\n            o: 'm 228 241 b 241 241 234 241 238 241 b 254 241 244 241 248 241 b 483 0 387 233 483 123 b 466 -89 483 -29 478 -59 b 240 -241 427 -188 334 -241 b 57 -156 173 -241 106 -214 b 0 -2 18 -110 0 -55 b 228 241 0 119 90 233 z m 251 179 b 241 179 246 179 244 179 b 230 179 238 179 236 179 b 143 150 199 176 168 166 l 139 146 l 190 95 l 241 44 l 293 95 l 344 146 l 339 150 b 251 179 314 167 284 176 z m 146 -52 l 197 0 l 146 51 l 95 103 l 92 98 b 62 0 72 69 62 35 b 67 -42 62 -14 64 -28 b 92 -98 72 -62 81 -82 l 95 -103 z m 391 98 b 388 102 390 100 388 102 b 337 51 388 102 365 79 l 285 0 l 337 -52 l 388 -103 l 391 -98 b 420 0 411 -69 420 -35 b 391 98 420 34 411 69 z m 293 -96 b 241 -44 265 -67 242 -44 b 190 -96 241 -44 218 -67 l 139 -147 l 143 -150 b 241 -179 172 -170 207 -179 b 339 -150 276 -179 310 -170 l 344 -147 z',\n        },\n        noteheadTriangleUpWhole: {\n            x_min: 0,\n            x_max: 435,\n            y_min: -140,\n            y_max: 140,\n            ha: 280,\n            o: 'm 306 200 b 313 201 308 201 310 201 b 333 183 321 201 323 200 b 608 -164 420 41 528 -95 b 620 -173 613 -167 618 -172 b 626 -186 624 -177 626 -182 b 611 -201 626 -194 620 -201 b 562 -188 607 -201 602 -200 b 313 -151 483 -164 398 -151 b 64 -188 228 -151 143 -164 b 15 -201 23 -200 19 -201 b 0 -186 6 -201 0 -195 b 12 -169 0 -179 1 -178 b 292 183 94 -99 203 37 b 306 200 300 196 302 198 z m 318 133 b 313 144 315 139 313 144 b 308 133 313 144 310 139 b 178 -122 268 38 218 -59 b 174 -130 176 -126 174 -130 b 174 -130 174 -130 174 -130 b 174 -130 174 -130 174 -130 b 184 -129 176 -130 179 -130 b 211 -126 189 -128 202 -127 b 313 -120 244 -122 278 -120 b 385 -123 337 -120 361 -121 b 442 -129 400 -124 427 -127 b 451 -130 447 -130 450 -130 b 452 -130 452 -130 452 -130 b 452 -130 452 -130 452 -130 b 449 -125 452 -130 451 -127 b 318 133 410 -63 358 38 z',\n        },\n        noteheadTriangleUpHalf: {\n            x_min: 0,\n            x_max: 303,\n            y_min: -140,\n            y_max: 140,\n            ha: 280,\n            o: 'm 212 200 b 218 201 213 201 216 201 b 238 180 228 201 230 199 b 420 -158 297 40 362 -80 b 437 -186 433 -175 437 -181 b 436 -192 437 -188 436 -190 b 423 -201 433 -198 429 -201 b 405 -196 419 -201 413 -199 b 219 -153 346 -167 282 -153 b 31 -196 155 -153 91 -167 b 14 -201 23 -200 18 -201 b 4 -197 10 -201 8 -200 b 0 -187 2 -194 0 -190 b 8 -170 0 -182 3 -177 b 200 183 63 -102 140 39 b 212 200 205 195 207 198 z m 263 48 b 248 80 258 59 251 73 l 242 92 l 233 78 b 88 -126 189 9 134 -68 b 81 -135 84 -131 81 -135 b 81 -135 81 -135 81 -135 b 81 -135 81 -135 81 -135 b 88 -133 82 -135 85 -134 b 279 -92 153 -106 219 -92 b 333 -96 298 -92 316 -93 b 341 -97 337 -97 341 -97 b 341 -97 341 -97 341 -97 b 338 -91 341 -97 340 -95 b 263 48 317 -56 286 2 z',\n        },\n        noteheadTriangleUpBlack: {\n            x_min: 0,\n            x_max: 302,\n            y_min: -140,\n            y_max: 140,\n            ha: 279,\n            o: 'm 211 200 b 218 201 213 201 215 201 b 235 185 226 201 230 198 b 260 126 253 143 254 140 b 270 105 263 120 268 110 b 316 12 278 86 310 22 b 324 -3 316 11 320 4 b 353 -56 338 -30 341 -36 b 425 -167 382 -105 404 -140 b 435 -186 435 -180 435 -180 b 421 -201 435 -196 430 -201 l 420 -201 l 415 -201 l 404 -196 b 218 -153 346 -167 282 -153 b 31 -196 154 -153 89 -167 l 21 -201 l 15 -201 l 15 -201 b 0 -186 5 -201 0 -196 b 10 -167 0 -180 0 -180 b 71 -76 28 -145 49 -112 b 112 -3 87 -49 96 -33 b 120 12 116 4 119 11 b 165 105 125 22 157 86 b 175 126 167 110 172 120 b 200 185 181 140 183 143 b 211 200 204 195 207 198 z',\n        },\n        noteheadDiamondWhole: {\n            x_min: 0,\n            x_max: 435,\n            y_min: -130,\n            y_max: 130,\n            ha: 260,\n            o: 'm 306 186 b 313 187 308 187 310 187 b 329 177 319 187 321 186 b 599 19 392 105 486 50 b 615 15 606 17 613 16 b 626 0 622 13 626 6 b 615 -15 626 -6 622 -13 b 599 -19 613 -16 606 -17 b 331 -175 487 -50 394 -104 b 313 -187 321 -186 320 -187 b 297 -177 307 -187 305 -186 b 27 -19 234 -105 140 -50 b 11 -15 20 -17 13 -16 b 0 0 4 -13 0 -6 b 11 15 0 6 4 13 b 27 19 13 16 20 17 b 297 177 140 50 234 105 b 306 186 302 182 304 185 z m 317 134 b 313 140 315 138 313 140 b 308 134 313 140 311 138 b 162 4 272 80 219 33 b 155 0 158 2 155 0 b 162 -4 155 0 158 -2 b 308 -134 219 -33 272 -80 b 313 -140 311 -138 312 -140 b 315 -138 314 -140 314 -139 b 464 -4 348 -85 406 -33 b 471 0 468 -2 471 0 b 464 4 471 0 468 2 b 317 134 407 33 353 80 z',\n        },\n        noteheadDiamondHalf: {\n            x_min: 0,\n            x_max: 303,\n            y_min: -130,\n            y_max: 130,\n            ha: 260,\n            o: 'm 211 186 b 218 187 213 187 215 187 b 236 172 226 187 229 185 b 418 18 277 102 340 49 b 436 0 433 12 436 9 b 420 -17 436 -9 433 -12 b 236 -172 343 -46 277 -103 b 218 -187 229 -185 226 -187 b 200 -172 210 -187 207 -185 b 18 -18 159 -103 96 -49 b 0 0 3 -12 0 -9 b 16 17 0 9 3 12 b 200 172 93 47 159 102 b 211 186 205 182 208 184 z m 240 111 b 236 115 238 114 237 115 b 230 107 235 115 234 113 b 92 -16 195 57 142 9 l 89 -17 l 92 -19 b 198 -113 130 -42 166 -73 b 200 -115 199 -115 200 -115 b 201 -115 200 -115 200 -115 b 344 16 229 -68 292 -10 l 347 17 l 344 19 b 240 111 307 41 266 77 z',\n        },\n        noteheadDiamondBlack: {\n            x_min: 0,\n            x_max: 303,\n            y_min: -130,\n            y_max: 130,\n            ha: 260,\n            o: 'm 211 186 b 218 187 213 187 215 187 b 238 170 226 187 228 186 b 418 18 279 100 341 48 b 436 0 433 12 436 9 b 418 -18 436 -9 433 -12 b 238 -170 341 -48 279 -100 b 218 -187 228 -186 226 -187 b 198 -170 210 -187 208 -186 b 18 -18 157 -100 95 -48 b 0 0 3 -12 0 -9 b 18 18 0 9 3 12 b 198 170 95 48 157 100 b 211 186 206 182 208 184 z',\n        },\n        augmentationDot: {\n            x_min: -59,\n            x_max: 59,\n            y_min: -59,\n            y_max: 59,\n            ha: 118,\n            o: 'm -17 83 b 0 85 -11 84 -5 85 b 85 0 46 85 85 46 b 83 -17 85 -6 84 -11 b -1 -85 74 -60 37 -85 b -66 -54 -25 -85 -49 -75 b -85 -1 -79 -38 -85 -19 b -17 83 -85 37 -59 74 z',\n        },\n        tremolo1: {\n            x_min: -143,\n            x_max: 297,\n            y_min: -550,\n            y_max: -237,\n            ha: 313,\n            o: 'm 385 -343 b 394 -342 388 -342 391 -342 b 428 -377 413 -342 428 -359 b 418 -400 428 -385 425 -393 b 364 -438 415 -403 412 -405 b 300 -481 346 -450 318 -469 b 236 -524 282 -493 254 -512 b 173 -567 219 -536 190 -555 b 109 -610 155 -579 127 -598 b 46 -653 92 -622 63 -641 b -17 -696 29 -665 0 -684 b -81 -739 -35 -708 -63 -727 b -133 -774 -99 -751 -122 -767 b -156 -789 -144 -782 -154 -788 b -171 -792 -161 -791 -166 -792 b -206 -758 -190 -792 -206 -777 b -201 -741 -206 -752 -204 -746 b -155 -705 -197 -734 -193 -731 b -56 -638 -135 -692 -90 -661 b 72 -552 -21 -615 36 -576 b 199 -466 107 -528 164 -489 b 317 -386 233 -443 286 -407 b 385 -343 375 -346 379 -344 z',\n        },\n        flag8thUp: {\n            x_min: -16,\n            x_max: 220,\n            y_min: -700,\n            y_max: -4,\n            ha: 696,\n            o: 'm -23 -157 l -23 -5 l -20 -5 b 1 -27 -8 -5 -3 -11 b 172 -306 30 -136 85 -226 b 316 -644 268 -395 316 -518 b 206 -966 316 -754 280 -868 b 162 -1008 180 -1001 172 -1008 b 141 -989 149 -1008 141 -999 b 149 -970 141 -983 144 -976 b 267 -665 227 -879 267 -769 b 174 -419 267 -573 236 -486 b -22 -309 135 -378 68 -340 b -23 -157 -23 -309 -23 -278 z',\n        },\n        flag8thDown: {\n            x_min: -14,\n            x_max: 255,\n            y_min: 4,\n            y_max: 700,\n            ha: 697,\n            o: 'm 228 1007 b 237 1008 231 1008 234 1008 b 261 988 245 1008 251 1002 b 367 646 331 881 367 761 b 322 436 367 572 352 501 b 233 311 300 388 268 343 b 57 117 156 241 103 182 b 0 20 33 84 10 45 b -18 5 -4 11 -11 5 l -21 5 l -21 157 l -21 308 l -16 308 b 99 329 12 308 65 318 b 314 678 227 372 314 514 b 225 966 314 776 283 878 b 215 987 217 979 215 981 b 228 1007 215 996 220 1004 z',\n        },\n        flag16thUp: {\n            x_min: -16,\n            x_max: 220,\n            y_min: -796,\n            y_max: -4,\n            ha: 793,\n            o: 'm -23 -142 l -23 -5 l -20 -5 b 0 -21 -11 -5 -4 -10 b 196 -271 29 -90 97 -177 b 316 -556 274 -347 316 -449 b 293 -695 316 -602 309 -649 l 289 -706 l 293 -717 b 316 -851 309 -760 316 -805 b 227 -1114 316 -943 285 -1037 b 190 -1146 205 -1142 200 -1146 b 169 -1126 177 -1146 169 -1137 b 175 -1111 169 -1121 171 -1115 b 269 -867 237 -1040 269 -954 b 266 -821 269 -852 268 -836 b 261 -793 264 -809 263 -798 b 258 -780 261 -792 259 -786 b 143 -612 240 -712 198 -651 b -9 -575 112 -591 48 -575 b -21 -575 -15 -575 -20 -575 l -23 -574 l -23 -437 l -23 -300 l -20 -300 b 0 -316 -11 -300 -4 -305 b 195 -566 29 -385 98 -474 b 259 -644 221 -590 244 -619 b 261 -646 260 -645 260 -646 b 263 -639 261 -646 262 -644 b 269 -572 267 -617 269 -595 b 263 -509 269 -551 267 -530 b 261 -499 263 -505 262 -500 b 258 -485 261 -497 259 -491 b 143 -317 240 -417 198 -356 b -9 -280 112 -296 48 -280 b -21 -280 -15 -280 -20 -280 l -23 -279 z',\n        },\n        flag16thDown: {\n            x_min: -14,\n            x_max: 251,\n            y_min: 4,\n            y_max: 700,\n            ha: 697,\n            o: 'm 300 1007 b 308 1008 303 1008 306 1008 b 329 991 317 1008 324 1003 b 361 847 350 947 361 898 b 338 720 361 805 353 761 l 335 710 l 338 700 b 361 578 353 661 361 620 b 257 316 361 485 325 391 b 204 265 243 300 226 284 b -1 17 118 192 39 97 b -18 5 -5 10 -12 5 l -21 5 l -21 137 l -21 270 l -11 271 b 200 347 85 286 152 310 b 318 583 276 407 318 493 b 311 650 318 605 316 628 l 309 657 l 304 648 b 204 535 279 606 249 573 b -1 287 118 461 39 367 b -18 274 -5 280 -12 274 l -21 274 l -21 407 l -21 539 l -11 540 b 183 604 74 553 138 575 b 318 854 269 662 318 758 b 294 968 318 893 310 931 b 287 987 287 982 287 982 b 300 1007 287 996 292 1004 z',\n        },\n        flag32ndUp: {\n            x_min: -16,\n            x_max: 219,\n            y_min: -1039,\n            y_max: -4,\n            ha: 1035,\n            o: 'm -23 -141 l -23 -5 l -20 -5 b 1 -22 -11 -5 -5 -9 b 161 -222 29 -78 91 -155 b 189 -249 171 -232 184 -244 b 308 -488 250 -309 292 -393 b 315 -572 313 -515 315 -543 b 298 -711 315 -618 309 -666 l 295 -724 l 296 -729 b 308 -783 300 -744 305 -765 b 315 -867 313 -810 315 -838 b 298 -1006 315 -913 309 -960 l 295 -1019 l 296 -1024 b 308 -1078 300 -1039 305 -1060 b 315 -1162 313 -1105 315 -1133 b 264 -1401 315 -1241 297 -1324 b 215 -1490 249 -1432 222 -1482 b 200 -1496 210 -1494 205 -1496 b 180 -1475 190 -1496 180 -1487 b 186 -1457 180 -1469 180 -1467 b 267 -1187 239 -1373 267 -1278 b 264 -1143 267 -1172 266 -1157 b 111 -885 253 -1027 194 -929 b 6 -867 88 -873 56 -868 l -23 -867 l -23 -731 l -23 -595 l -20 -595 b 1 -612 -11 -595 -5 -599 b 161 -812 29 -668 91 -746 b 259 -932 215 -863 234 -887 l 264 -942 l 265 -933 b 267 -893 266 -920 267 -906 b 111 -590 267 -759 207 -640 b 6 -572 88 -578 56 -573 l -23 -572 l -23 -436 l -23 -300 l -20 -300 b 1 -317 -11 -300 -5 -304 b 161 -517 29 -373 91 -451 b 259 -638 215 -568 234 -592 l 264 -647 l 265 -638 b 267 -598 266 -625 267 -611 b 111 -295 267 -464 207 -345 b 6 -277 88 -283 56 -278 l -23 -277 z',\n        },\n        flag32ndDown: {\n            x_min: -14,\n            x_max: 253,\n            y_min: 4,\n            y_max: 935,\n            ha: 931,\n            o: 'm 274 1345 b 282 1346 276 1346 279 1346 b 290 1345 285 1346 288 1346 b 352 1217 305 1340 338 1272 b 365 1112 360 1183 365 1148 b 346 985 365 1069 358 1025 l 343 977 l 346 968 b 352 948 348 963 350 954 b 365 843 360 914 365 878 b 346 716 365 799 358 756 l 343 708 l 346 699 b 352 679 348 694 350 685 b 365 574 361 644 365 609 b 222 256 365 454 314 337 b 189 228 212 247 212 247 b 0 20 104 160 34 84 b -18 5 -5 10 -11 5 l -21 5 l -21 135 l -21 265 l -15 265 b 188 337 63 277 136 302 b 319 592 270 392 319 489 b 316 635 319 606 318 620 l 315 643 l 313 640 b 222 525 287 594 258 557 b 189 497 212 517 212 516 b 0 290 104 430 34 353 b -18 274 -5 279 -11 274 l -21 274 l -21 404 l -21 534 l -15 535 b 188 606 63 546 136 572 b 319 861 270 661 319 758 b 316 904 319 875 318 890 l 315 912 l 313 909 b 222 794 287 863 258 826 b 189 767 212 786 212 786 b 0 559 104 699 34 622 b -18 544 -5 549 -11 544 l -21 544 l -21 674 l -21 803 l -15 804 b 206 889 72 817 155 848 b 319 1130 280 948 319 1037 b 269 1307 319 1190 303 1251 b 262 1326 262 1318 262 1320 b 274 1345 262 1335 267 1342 z',\n        },\n        flag64thUp: {\n            x_min: -16,\n            x_max: 219,\n            y_min: -1159,\n            y_max: -4,\n            ha: 1156,\n            o: 'm -23 -141 l -23 -5 l -20 -5 b 2 -26 -9 -5 -4 -10 b 139 -215 23 -93 68 -154 b 294 -445 216 -281 261 -346 b 315 -577 308 -487 315 -532 b 291 -719 315 -625 307 -673 l 289 -725 l 293 -739 b 315 -872 308 -781 315 -827 b 291 -1013 315 -920 307 -968 l 289 -1020 l 293 -1034 b 315 -1167 308 -1076 315 -1122 b 291 -1308 315 -1215 307 -1263 l 289 -1314 l 293 -1329 b 315 -1461 308 -1372 315 -1416 b 271 -1651 315 -1525 300 -1590 b 249 -1670 264 -1666 259 -1670 b 228 -1649 237 -1670 228 -1661 b 236 -1628 228 -1644 228 -1643 b 271 -1463 260 -1576 271 -1519 b 163 -1209 271 -1363 233 -1266 b 32 -1156 119 -1173 78 -1156 b -9 -1160 19 -1156 5 -1158 b -20 -1162 -13 -1161 -19 -1162 l -23 -1162 l -23 -1026 l -23 -890 l -20 -890 b 2 -911 -9 -890 -4 -895 b 139 -1100 23 -978 68 -1039 b 258 -1244 191 -1144 232 -1193 b 262 -1252 261 -1250 262 -1252 b 263 -1250 263 -1252 263 -1251 b 265 -1239 263 -1249 264 -1244 b 272 -1168 269 -1216 272 -1192 b 163 -914 272 -1067 232 -970 b 32 -861 119 -878 78 -861 b -9 -865 19 -861 5 -863 b -20 -867 -13 -866 -19 -867 l -23 -867 l -23 -731 l -23 -595 l -20 -595 b 2 -616 -9 -595 -4 -600 b 139 -805 23 -683 68 -744 b 258 -949 191 -849 232 -898 b 262 -957 261 -955 262 -957 b 263 -955 263 -957 263 -956 b 265 -944 263 -954 264 -949 b 272 -874 269 -921 272 -897 b 163 -619 272 -772 232 -675 b 32 -567 119 -583 78 -567 b -9 -570 19 -567 5 -568 b -20 -572 -13 -571 -19 -572 l -23 -572 l -23 -436 l -23 -300 l -20 -300 b 2 -321 -9 -300 -4 -305 b 139 -510 23 -388 68 -449 b 258 -654 191 -554 232 -604 b 262 -662 261 -660 262 -662 b 263 -660 263 -662 263 -661 b 265 -649 263 -659 264 -654 b 272 -579 269 -626 272 -602 b 163 -324 272 -477 232 -380 b 32 -272 119 -288 78 -272 b -9 -275 19 -272 5 -273 b -20 -277 -13 -276 -19 -277 l -23 -277 z',\n        },\n        flag64thDown: {\n            x_min: -14,\n            x_max: 255,\n            y_min: 3,\n            y_max: 1053,\n            ha: 1049,\n            o: 'm 256 1514 b 264 1516 259 1515 261 1516 b 279 1510 269 1516 274 1514 b 338 1439 303 1491 323 1466 b 367 1319 357 1402 367 1361 b 336 1192 367 1276 356 1233 l 330 1182 l 332 1180 b 338 1169 333 1178 335 1174 b 367 1050 357 1132 367 1092 b 336 922 367 1007 356 963 l 330 912 l 332 910 b 338 900 333 909 335 905 b 367 781 357 863 367 822 b 336 653 367 738 356 694 l 330 643 l 332 641 b 366 513 352 611 366 558 b 366 512 366 512 366 512 b 231 267 366 414 318 327 b -1 19 122 192 28 92 b -17 5 -4 11 -10 6 l -21 5 l -21 132 l -21 259 l -12 260 b 147 290 48 263 108 274 b 318 525 250 331 318 428 b 307 590 318 547 314 569 b 302 600 304 598 303 600 b 298 597 301 600 300 599 b 231 537 281 575 259 556 b -1 289 121 461 28 361 b -17 275 -4 280 -10 275 l -21 274 l -21 402 l -21 529 l -12 529 b 147 559 48 532 108 544 b 318 794 250 600 318 697 b 307 859 318 816 314 838 b 302 870 304 867 303 870 b 298 866 301 870 300 868 b 231 806 281 844 259 825 b -1 558 121 730 28 631 b -17 544 -4 550 -10 545 l -21 544 l -21 671 l -21 798 l -12 799 b 147 828 48 802 108 813 b 318 1063 250 869 318 967 b 307 1128 318 1085 314 1107 b 302 1139 304 1136 303 1139 b 298 1135 301 1139 300 1138 b 231 1075 281 1114 259 1094 b -1 827 121 1000 28 900 b -17 813 -4 819 -10 814 l -21 813 l -21 940 l -21 1067 l -12 1068 b 147 1098 48 1071 108 1082 b 317 1332 248 1138 317 1233 l 317 1332 b 255 1475 317 1389 294 1443 b 244 1495 246 1483 244 1487 b 256 1514 244 1504 249 1512 z',\n        },\n        flag128thUp: {\n            x_min: -16,\n            x_max: 217,\n            y_min: -1398,\n            y_max: -4,\n            ha: 1395,\n            o: 'm -23 -130 l -23 -5 l -20 -5 b 2 -25 -10 -5 -6 -9 b 141 -206 28 -77 78 -141 b 223 -304 180 -245 199 -269 b 313 -590 282 -393 313 -493 b 293 -720 313 -634 306 -678 b 289 -733 290 -728 289 -730 b 292 -745 289 -736 290 -738 b 313 -884 306 -790 313 -838 b 293 -1015 313 -929 306 -974 b 289 -1028 290 -1023 289 -1025 b 292 -1040 289 -1031 290 -1033 b 313 -1179 306 -1085 313 -1133 b 293 -1310 313 -1224 306 -1269 b 289 -1323 290 -1318 289 -1320 b 292 -1335 289 -1326 290 -1328 b 313 -1474 306 -1380 313 -1428 b 293 -1605 313 -1519 306 -1564 b 289 -1618 290 -1612 289 -1615 b 292 -1629 289 -1621 290 -1623 b 313 -1768 306 -1676 313 -1723 b 252 -1984 313 -1848 292 -1924 b 221 -2013 236 -2009 231 -2013 b 200 -1994 208 -2013 200 -2005 b 207 -1976 200 -1989 202 -1982 b 269 -1782 249 -1920 269 -1852 b 153 -1507 269 -1685 230 -1584 b -15 -1435 115 -1467 51 -1440 b -22 -1434 -18 -1434 -21 -1434 l -23 -1434 l -23 -1309 l -23 -1185 l -20 -1185 b 2 -1205 -10 -1185 -6 -1189 b 141 -1386 28 -1256 78 -1321 b 257 -1543 196 -1442 228 -1485 l 263 -1554 l 264 -1549 b 269 -1487 267 -1528 269 -1507 b 153 -1212 269 -1388 228 -1288 b -15 -1140 115 -1172 51 -1145 b -22 -1139 -18 -1139 -21 -1139 l -23 -1139 l -23 -1014 l -23 -890 l -20 -890 b 2 -910 -10 -890 -6 -894 b 141 -1091 28 -961 78 -1026 b 257 -1248 196 -1147 228 -1190 l 263 -1259 l 264 -1254 b 269 -1192 267 -1233 269 -1212 b 153 -917 269 -1093 228 -993 b -15 -845 115 -877 51 -850 b -22 -844 -18 -845 -21 -844 l -23 -844 l -23 -719 l -23 -595 l -20 -595 b 2 -615 -10 -595 -6 -599 b 141 -796 28 -666 78 -731 b 257 -953 196 -852 228 -895 l 263 -964 l 264 -959 b 269 -897 267 -938 269 -917 b 153 -622 269 -798 228 -698 b -15 -550 115 -582 51 -555 b -22 -549 -18 -550 -21 -549 l -23 -549 l -23 -424 l -23 -300 l -20 -300 b 2 -320 -10 -300 -6 -304 b 141 -501 28 -372 78 -436 b 257 -658 196 -557 228 -600 l 263 -669 l 264 -664 b 269 -602 267 -643 269 -623 b 153 -327 269 -503 228 -403 b -15 -255 115 -287 51 -260 b -22 -254 -18 -255 -21 -254 l -23 -254 z',\n        },\n        flag128thDown: {\n            x_min: -14,\n            x_max: 254,\n            y_min: 4,\n            y_max: 1288,\n            ha: 1284,\n            o: 'm 274 1853 b 282 1855 277 1854 280 1855 b 306 1837 290 1855 297 1849 b 366 1646 346 1780 366 1713 b 342 1521 366 1604 358 1562 l 338 1511 l 342 1500 b 366 1377 358 1461 366 1419 b 342 1252 366 1334 358 1292 l 338 1242 l 342 1231 b 366 1107 358 1191 366 1149 b 342 983 366 1065 358 1023 l 338 973 l 342 962 b 366 838 358 922 366 880 b 342 713 366 796 358 753 l 338 703 l 342 692 b 366 569 358 652 366 610 b 244 309 366 471 323 376 b 0 21 127 211 34 101 b -18 5 -4 11 -11 5 l -21 5 l -20 130 l -20 255 l -13 256 b 116 301 24 264 74 282 b 200 349 158 321 178 332 b 319 582 276 406 319 493 b 312 643 319 603 317 623 b 310 651 311 649 311 651 b 307 647 309 651 308 650 b 244 579 290 623 268 599 b 0 290 127 481 34 370 b -18 274 -4 280 -11 274 l -21 274 l -20 399 l -20 524 l -13 526 b 116 570 24 533 74 551 b 200 618 158 590 178 601 b 319 852 276 675 319 762 b 312 912 319 872 317 892 b 310 920 311 918 311 920 b 307 917 309 920 308 919 b 244 848 290 892 268 869 b 0 559 127 750 34 639 b -18 544 -4 549 -11 544 l -21 544 l -20 669 l -20 793 l -13 795 b 116 840 24 803 74 820 b 200 887 158 859 178 870 b 319 1121 276 944 319 1031 b 312 1182 319 1141 317 1162 b 310 1190 311 1187 311 1190 b 307 1186 309 1190 308 1188 b 240 1114 289 1160 269 1138 b 0 829 127 1019 33 907 b -18 813 -4 819 -11 813 l -21 813 l -20 938 l -20 1063 l -13 1064 b 116 1109 24 1072 74 1089 b 200 1156 158 1128 178 1140 b 319 1390 276 1214 319 1301 b 312 1451 319 1410 317 1431 b 310 1459 311 1457 311 1459 b 307 1455 309 1459 308 1458 b 240 1383 289 1429 269 1408 b 0 1098 127 1288 33 1177 b -18 1082 -4 1088 -11 1082 l -21 1082 l -20 1207 l -20 1332 l -13 1333 b 116 1378 24 1341 74 1359 b 200 1426 158 1398 178 1409 b 319 1660 278 1484 319 1572 b 268 1817 319 1715 303 1770 b 262 1835 264 1823 262 1830 b 274 1853 262 1843 266 1850 z',\n        },\n        accidentalFlat: {\n            x_min: -14,\n            x_max: 174,\n            y_min: -155,\n            y_max: 429,\n            ha: 584,\n            o: 'm -8 617 b 0 618 -6 618 -3 618 b 19 605 8 618 16 613 b 21 374 21 602 21 602 l 21 146 l 23 148 b 138 196 60 179 99 196 b 182 188 153 196 168 193 b 251 83 226 172 251 132 b 228 1 251 57 243 29 b 100 -139 207 -38 179 -69 b 24 -209 58 -177 48 -186 b 0 -223 10 -222 8 -223 b -19 -211 -9 -223 -16 -218 l -21 -207 l -21 197 l -21 602 l -19 605 b -8 617 -18 610 -13 615 z m 112 129 b 95 131 108 130 100 131 b 91 130 93 131 92 131 b 25 86 65 127 42 111 l 21 79 l 21 -36 l 21 -152 l 24 -148 b 144 83 97 -68 144 23 b 143 100 144 89 144 95 b 112 129 140 114 128 126 z',\n        },\n        accidentalNatural: {\n            x_min: 0,\n            x_max: 166,\n            y_min: -314,\n            y_max: 314,\n            ha: 627,\n            o: 'm 12 450 b 20 451 15 451 18 451 b 40 439 29 451 37 447 b 41 318 41 435 41 434 b 42 201 41 235 41 201 b 128 222 42 201 81 211 b 220 244 197 239 213 244 b 226 242 223 244 224 243 b 237 231 231 241 236 236 l 239 228 l 239 -104 l 239 -435 l 237 -439 b 218 -451 234 -447 226 -451 b 203 -446 213 -451 207 -450 b 197 -368 198 -440 197 -449 b 197 -316 197 -354 197 -337 b 197 -196 197 -230 197 -196 b 110 -217 196 -196 157 -206 b 18 -238 42 -234 25 -238 b 13 -237 16 -238 14 -238 b 1 -226 8 -236 3 -231 l 0 -222 l 0 106 l 0 435 l 1 439 b 12 450 3 443 8 448 z m 197 22 b 197 70 197 42 197 57 b 196 114 197 111 197 114 l 196 114 b 118 95 196 114 161 105 l 41 76 l 41 -17 b 41 -58 41 -33 41 -47 b 42 -109 41 -98 41 -109 b 120 -90 42 -109 77 -100 l 197 -71 z',\n        },\n        accidentalSharp: {\n            x_min: 0,\n            x_max: 225,\n            y_min: -364,\n            y_max: 364,\n            ha: 729,\n            o: 'm 218 523 b 226 525 220 524 223 525 b 245 512 234 525 242 520 b 246 380 246 508 246 507 b 248 253 246 261 246 253 b 248 253 248 253 248 253 b 303 265 259 256 300 265 b 322 253 312 265 319 260 b 324 204 323 250 324 227 b 322 155 324 181 323 158 b 277 135 319 145 317 145 l 246 127 l 246 21 b 247 -86 246 -78 246 -86 b 248 -86 248 -86 248 -86 b 303 -73 259 -82 300 -73 b 318 -79 309 -73 313 -75 b 323 -121 323 -85 323 -83 b 323 -135 323 -125 323 -130 b 323 -148 323 -140 323 -144 b 318 -190 323 -187 323 -185 b 277 -204 313 -195 313 -195 l 246 -211 l 246 -341 b 245 -473 246 -469 246 -470 b 226 -486 242 -482 234 -486 b 211 -480 221 -486 215 -484 b 205 -404 206 -475 205 -484 b 205 -346 205 -388 205 -369 b 205 -221 205 -277 205 -221 b 161 -232 205 -221 185 -226 b 116 -243 136 -238 116 -243 b 116 -376 116 -243 116 -303 b 114 -512 116 -507 116 -508 b 95 -525 111 -520 103 -525 b 80 -519 90 -525 84 -523 b 75 -441 75 -513 75 -522 b 75 -381 75 -425 75 -405 b 74 -254 75 -262 75 -254 b 73 -254 74 -254 74 -254 b 21 -265 61 -257 24 -265 b 1 -253 12 -265 4 -260 b 0 -204 0 -250 0 -227 b 1 -155 0 -181 0 -158 b 45 -135 5 -146 7 -145 l 75 -128 l 75 -21 b 74 85 75 78 75 85 b 73 85 74 85 74 85 b 21 73 61 82 24 73 b 1 86 12 73 4 78 b 0 135 0 88 0 112 b 1 184 0 158 0 181 b 45 203 5 193 7 194 l 75 210 l 75 340 b 76 473 75 469 75 470 b 95 486 79 482 87 486 b 110 480 100 486 106 484 b 116 404 115 475 116 484 b 116 345 116 388 116 369 b 116 221 116 277 116 221 b 160 231 116 221 136 226 b 205 242 185 237 205 242 b 205 375 205 242 205 302 b 207 512 205 507 205 508 b 218 523 208 516 213 521 z m 205 11 b 205 117 205 95 205 117 l 205 117 b 189 113 204 117 197 116 b 145 103 181 111 161 107 l 116 95 l 116 -11 b 116 -118 116 -70 116 -118 b 160 -107 116 -118 136 -113 b 205 -96 185 -101 205 -96 b 205 11 205 -96 205 -48 z',\n        },\n        accidentalDoubleSharp: {\n            x_min: 0,\n            x_max: 255,\n            y_min: -127,\n            y_max: 127,\n            ha: 255,\n            o: 'm 0 122 l 0 183 l 62 183 l 123 183 l 123 137 l 123 90 l 153 60 l 183 30 l 214 60 l 244 90 l 244 137 l 244 183 l 305 183 l 367 183 l 367 122 l 367 60 l 320 60 l 273 60 l 243 30 l 213 0 l 243 -30 l 273 -60 l 320 -60 l 367 -60 l 367 -122 l 367 -183 l 305 -183 l 244 -183 l 244 -137 l 244 -90 l 214 -60 l 183 -30 l 153 -60 l 123 -90 l 123 -137 l 123 -183 l 62 -183 l 0 -183 l 0 -122 l 0 -60 l 47 -60 l 93 -60 l 123 -30 l 154 0 l 123 30 l 93 60 l 47 60 l 0 60 z',\n        },\n        accidentalDoubleFlat: {\n            x_min: -14,\n            x_max: 334,\n            y_min: -155,\n            y_max: 429,\n            ha: 584,\n            o: 'm -8 617 b 0 618 -6 618 -3 618 b 19 605 8 618 16 613 b 21 374 21 602 21 602 l 21 146 l 23 148 b 140 196 60 179 102 196 b 207 175 165 196 188 189 l 210 173 l 210 388 l 211 604 l 212 607 b 231 618 216 614 223 618 b 250 605 239 618 247 614 b 251 374 251 602 251 602 l 251 146 l 254 148 b 368 196 291 179 330 196 b 413 188 384 196 399 193 b 482 83 457 172 482 132 b 459 1 482 57 474 29 b 331 -139 438 -38 409 -69 b 255 -209 289 -177 279 -186 b 231 -223 241 -222 239 -223 b 216 -217 225 -223 220 -221 b 210 -154 211 -212 210 -218 b 210 -117 210 -144 210 -132 l 210 -28 l 205 -34 b 100 -139 182 -63 160 -86 b 24 -209 58 -177 48 -186 b 0 -223 10 -222 8 -223 b -19 -211 -9 -223 -16 -218 l -21 -207 l -21 197 l -21 602 l -19 605 b -8 617 -18 610 -13 615 z m 112 129 b 95 131 108 130 100 131 b 91 130 93 131 92 131 b 25 86 65 127 42 111 l 21 79 l 21 -36 l 21 -152 l 24 -148 b 144 83 97 -68 144 23 b 143 100 144 89 144 95 b 112 129 140 114 128 126 z m 342 129 b 326 131 339 130 331 131 b 322 130 324 131 323 131 b 256 86 296 127 273 111 l 251 79 l 251 -36 l 251 -152 l 255 -148 b 375 83 328 -68 375 23 b 373 100 375 89 375 95 b 342 129 371 114 359 126 z',\n        },\n        accidentalParensLeft: {\n            x_min: -115,\n            x_max: -18,\n            y_min: -251,\n            y_max: 251,\n            ha: 502,\n            o: 'm -48 360 b -41 362 -46 361 -44 362 b -27 353 -35 362 -29 358 b -26 347 -26 351 -26 349 b -31 328 -26 343 -27 338 b -92 51 -66 243 -85 157 b -93 0 -92 42 -93 21 b -92 -51 -93 -21 -92 -42 b -31 -328 -85 -157 -66 -243 b -26 -346 -26 -341 -26 -343 b -41 -362 -26 -356 -32 -362 b -61 -345 -49 -362 -51 -360 b -166 0 -131 -236 -166 -118 b -61 345 -166 118 -131 236 b -48 360 -54 356 -51 359 z',\n        },\n        accidentalParensRight: {\n            x_min: 18,\n            x_max: 115,\n            y_min: -251,\n            y_max: 251,\n            ha: 503,\n            o: 'm 34 361 b 41 362 36 361 38 362 b 61 345 49 362 51 360 b 166 0 131 236 166 118 b 61 -345 166 -118 131 -235 b 41 -362 53 -357 48 -362 b 34 -360 39 -362 37 -361 b 26 -348 29 -357 26 -354 b 31 -328 26 -344 28 -337 b 93 0 73 -228 93 -114 b 31 329 93 114 73 229 b 26 349 28 338 26 344 b 34 361 26 355 29 358 z',\n        },\n        accidentalQuarterToneFlatStein: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -155,\n            y_max: 429,\n            ha: 584,\n            o: 'm 243 617 b 250 618 245 618 248 618 b 270 605 259 618 267 613 l 271 602 l 271 197 l 271 -207 l 270 -210 b 251 -223 267 -218 259 -223 b 227 -209 243 -223 241 -222 b 154 -142 203 -187 188 -172 b 22 2 73 -70 44 -38 b 0 83 7 29 0 57 b 68 188 0 131 24 172 b 113 196 83 193 98 196 b 228 148 151 196 191 179 l 230 146 l 230 374 b 231 605 230 602 230 602 b 243 617 233 610 238 615 z m 168 129 b 149 131 164 130 155 131 b 146 130 148 131 146 131 b 108 100 123 126 111 117 b 106 83 107 95 106 89 b 227 -148 106 23 153 -68 l 230 -152 l 230 -36 l 230 79 l 225 86 b 168 129 210 109 190 123 z',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            x_min: 0,\n            x_max: 419,\n            y_min: -155,\n            y_max: 429,\n            ha: 584,\n            o: 'm 243 617 b 250 618 245 618 248 618 b 270 605 259 618 267 613 l 271 602 l 271 197 l 271 -207 l 270 -210 b 251 -223 267 -218 259 -223 b 227 -209 243 -223 241 -222 b 154 -142 203 -187 188 -172 b 22 2 73 -70 44 -38 b 0 83 7 29 0 57 b 68 188 0 131 24 172 b 113 196 83 193 98 196 b 228 148 151 196 191 179 l 230 146 l 230 374 b 231 605 230 602 230 602 b 243 617 233 610 238 615 z m 168 129 b 149 131 164 130 155 131 b 146 130 148 131 146 131 b 108 100 123 126 111 117 b 106 83 107 95 106 89 b 227 -148 106 23 153 -68 l 230 -152 l 230 -36 l 230 79 l 225 86 b 168 129 210 109 190 123 z m 345 617 b 353 618 348 618 350 618 b 373 605 361 618 370 613 b 374 374 374 602 374 602 l 374 146 l 376 148 b 491 196 413 179 453 196 b 536 188 506 196 521 193 b 604 83 580 172 604 132 b 581 1 604 57 597 29 b 454 -139 560 -38 532 -69 b 377 -209 411 -177 401 -186 b 353 -223 363 -222 361 -223 b 334 -210 344 -223 337 -218 l 333 -207 l 333 197 l 333 602 l 334 605 b 345 617 336 610 341 615 z m 465 129 b 448 131 461 130 453 131 b 444 130 446 131 445 131 b 379 86 418 127 395 111 l 374 79 l 374 -36 l 374 -152 l 377 -148 b 498 83 451 -68 498 23 b 496 100 498 89 497 95 b 465 129 493 114 481 126 z',\n        },\n        accidentalQuarterToneSharpStein: {\n            x_min: 0,\n            x_max: 134,\n            y_min: -351,\n            y_max: 351,\n            ha: 702,\n            o: 'm 87 504 b 95 505 89 505 92 505 b 114 493 103 505 111 500 b 116 366 116 489 116 488 l 116 243 l 142 252 b 171 260 164 259 167 260 b 173 260 172 260 172 260 b 191 249 181 260 187 256 l 192 246 l 192 200 b 192 176 192 190 192 182 b 189 145 192 149 192 150 b 148 128 185 140 183 139 l 116 117 l 116 10 b 116 -97 116 -60 116 -97 b 141 -89 116 -97 128 -94 b 169 -80 154 -84 167 -80 b 172 -79 170 -79 171 -79 b 191 -92 180 -79 188 -84 b 193 -147 192 -95 193 -122 b 192 -189 193 -168 192 -187 b 149 -212 188 -198 187 -199 l 116 -224 l 116 -358 l 115 -491 l 114 -494 b 95 -505 110 -501 103 -505 b 80 -499 90 -505 84 -503 b 74 -423 75 -494 74 -503 b 75 -364 74 -407 75 -388 b 74 -239 75 -295 74 -239 b 50 -248 74 -239 63 -243 b 18 -257 33 -254 24 -257 b 6 -251 13 -257 10 -255 b 0 -208 0 -245 0 -247 b 0 -195 0 -204 0 -200 b 0 -183 0 -191 0 -187 b 6 -140 0 -143 0 -145 b 44 -123 10 -135 9 -136 l 75 -113 l 75 -5 b 74 103 75 55 74 103 b 49 95 74 103 63 100 b 18 87 33 90 24 87 b 6 93 13 87 10 89 b 0 135 0 99 0 97 b 0 149 0 139 0 144 b 0 174 0 159 0 167 b 43 219 0 209 3 206 l 75 230 l 75 359 b 76 493 75 488 75 489 b 87 504 78 497 82 502 z',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            x_min: 0,\n            x_max: 315,\n            y_min: -368,\n            y_max: 368,\n            ha: 735,\n            o: 'm 351 529 b 357 530 353 529 355 530 b 375 518 364 530 371 525 l 377 515 l 377 385 l 377 256 l 378 256 b 407 261 379 256 392 259 b 435 265 421 264 430 265 b 449 259 442 265 444 264 b 454 227 453 255 454 255 b 454 203 454 220 454 213 l 454 157 l 452 154 b 443 144 450 150 446 146 b 378 131 441 143 381 132 b 377 23 377 131 377 83 l 377 -85 l 378 -85 b 407 -80 379 -85 392 -82 b 435 -76 421 -77 430 -76 b 449 -82 442 -76 444 -78 b 454 -114 453 -87 454 -86 b 454 -138 454 -121 454 -128 l 454 -184 l 452 -187 b 443 -197 450 -191 446 -195 b 378 -210 441 -198 381 -210 b 377 -338 377 -210 377 -267 l 377 -466 l 375 -470 b 356 -482 372 -477 365 -482 b 338 -470 348 -482 341 -477 l 336 -466 l 336 -341 b 335 -217 336 -225 336 -217 b 335 -217 335 -217 335 -217 b 290 -226 334 -218 314 -221 l 246 -234 l 246 -361 b 246 -421 246 -386 246 -405 b 240 -499 246 -503 246 -494 b 226 -505 236 -503 231 -505 b 207 -494 218 -505 210 -501 l 206 -491 l 205 -366 l 205 -241 l 160 -250 b 116 -258 136 -254 116 -258 b 115 -386 115 -258 115 -316 l 115 -515 l 114 -518 b 95 -530 109 -526 102 -530 b 76 -518 88 -530 80 -526 l 75 -515 l 75 -390 b 74 -265 74 -322 74 -265 b 49 -270 74 -265 62 -267 b 19 -274 34 -273 25 -274 b 6 -269 12 -274 10 -272 b 0 -226 0 -263 0 -265 b 0 -213 0 -222 0 -218 b 0 -199 0 -208 0 -203 b 6 -157 0 -161 0 -163 b 45 -146 10 -153 12 -152 l 74 -141 l 74 -33 b 74 76 74 27 74 76 b 49 71 74 76 62 74 b 19 67 34 68 25 67 b 6 73 12 67 10 69 b 0 115 0 78 0 76 b 0 128 0 119 0 123 b 0 142 0 133 0 138 b 6 184 0 180 0 178 b 45 195 10 189 12 189 l 74 200 l 74 333 l 74 466 l 76 470 b 95 481 80 478 87 481 b 113 470 102 481 109 478 l 115 467 l 115 338 l 116 208 l 160 216 b 205 224 185 221 205 224 b 205 357 205 224 205 284 b 206 493 205 488 205 489 b 226 505 210 501 218 505 b 240 499 231 505 236 503 b 246 421 246 494 246 503 b 246 361 246 405 246 385 b 247 232 246 277 246 232 b 291 240 247 232 267 236 b 335 248 315 245 335 248 b 336 382 336 248 336 308 l 336 515 l 338 518 b 351 529 341 523 345 527 z m 336 15 b 335 124 336 102 336 124 l 335 124 b 290 116 335 124 315 120 l 246 107 l 246 -1 b 247 -109 246 -71 246 -109 b 291 -101 247 -109 267 -105 b 335 -93 315 -97 335 -93 b 336 15 336 -93 336 -45 z m 205 -117 b 205 -53 205 -116 205 -90 b 205 -8 205 -39 205 -24 l 205 100 l 160 92 b 116 83 136 87 116 83 b 116 20 116 83 116 57 b 116 -25 116 6 116 -9 l 116 -133 l 160 -125 b 205 -117 185 -120 205 -117 z',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: -117,\n            x_max: 174,\n            y_min: -155,\n            y_max: 429,\n            ha: 584,\n            o: 'm -8 617 b 0 618 -6 618 -3 618 b 19 605 8 618 16 613 b 21 541 21 602 21 601 b 21 480 21 492 21 480 b 21 480 21 480 21 480 b 154 523 46 489 150 523 b 175 502 167 523 175 513 b 165 485 175 496 172 489 b 92 460 164 484 131 473 l 21 436 l 21 381 b 21 356 21 371 21 362 b 21 326 21 333 21 326 b 21 326 21 326 21 326 b 154 369 46 335 150 369 b 175 348 167 369 175 359 b 165 331 175 342 172 335 b 92 306 164 330 131 319 l 21 282 l 21 214 l 21 146 l 23 148 b 138 196 60 179 99 196 b 182 188 153 196 168 193 b 251 83 226 172 251 132 b 228 1 251 57 243 29 b 100 -139 207 -38 179 -69 b 24 -209 58 -177 48 -186 b 0 -223 10 -222 8 -223 b -19 -210 -9 -223 -16 -218 b -21 30 -21 -207 -21 -207 b -21 267 -21 161 -21 267 b -83 247 -21 267 -49 258 b -151 226 -132 230 -145 226 b -157 227 -153 226 -154 226 b -169 247 -165 230 -169 238 b -159 264 -169 254 -166 261 b -28 309 -158 265 -86 290 l -21 312 l -21 367 b -21 421 -21 397 -21 421 b -83 400 -21 421 -49 412 b -151 379 -132 384 -145 379 b -157 381 -153 379 -154 380 b -169 400 -165 384 -169 392 b -159 418 -169 408 -166 415 b -28 463 -158 419 -86 443 l -21 466 l -21 534 b -19 605 -21 601 -21 602 b -8 617 -18 610 -13 615 z m 112 129 b 95 131 108 130 100 131 b 91 130 93 131 92 131 b 25 86 65 127 42 111 l 21 79 l 21 -36 l 21 -152 l 24 -148 b 144 83 97 -68 144 23 b 143 100 144 89 144 95 b 112 129 140 114 128 126 z',\n        },\n        accidentalBakiyeFlat: {\n            x_min: -121,\n            x_max: 174,\n            y_min: -155,\n            y_max: 429,\n            ha: 584,\n            o: 'm -8 617 b 0 618 -6 618 -3 618 b 19 605 8 618 16 613 b 21 492 21 602 21 601 b 21 383 21 432 21 383 b 84 414 21 383 50 397 l 147 446 l 153 446 b 154 446 153 446 153 446 b 175 426 166 446 175 437 b 173 418 175 423 174 421 b 93 372 170 410 173 412 l 21 336 l 21 241 l 21 146 l 23 148 b 138 196 60 179 99 196 b 182 188 153 196 168 193 b 251 83 226 172 251 132 b 228 1 251 57 243 29 b 100 -139 207 -38 179 -69 b 24 -209 58 -177 48 -186 b 0 -223 10 -222 8 -223 b -19 -211 -9 -223 -16 -218 b -21 54 -21 -207 -21 -207 b -21 315 -21 197 -21 315 b -84 283 -21 315 -50 301 l -147 252 l -153 251 b -154 251 -153 251 -153 251 b -175 272 -166 251 -175 261 b -173 280 -175 274 -174 277 b -93 326 -170 287 -173 286 l -21 362 l -21 482 b -19 605 -21 601 -21 602 b -8 617 -18 610 -13 615 z m 112 129 b 95 131 108 130 100 131 b 91 130 93 131 92 131 b 25 86 65 127 42 111 l 21 79 l 21 -36 l 21 -152 l 24 -148 b 144 83 97 -68 144 23 b 143 100 144 89 144 95 b 112 129 140 114 128 126 z',\n        },\n        accidentalKomaSharp: {\n            x_min: 0,\n            x_max: 134,\n            y_min: -351,\n            y_max: 351,\n            ha: 702,\n            o: 'm 87 504 b 95 505 89 505 92 505 b 114 493 103 505 111 500 b 116 366 116 489 116 488 l 116 243 l 142 252 b 171 260 164 259 167 260 b 173 260 172 260 172 260 b 191 249 181 260 187 256 l 192 246 l 192 200 b 192 176 192 190 192 182 b 189 145 192 149 192 150 b 148 128 185 140 183 139 l 116 117 l 116 10 b 116 -97 116 -60 116 -97 b 141 -89 116 -97 128 -94 b 169 -80 154 -84 167 -80 b 172 -79 170 -79 171 -79 b 191 -92 180 -79 188 -84 b 193 -147 192 -95 193 -122 b 192 -189 193 -168 192 -187 b 149 -212 188 -198 187 -199 l 116 -224 l 116 -358 l 115 -491 l 114 -494 b 95 -505 110 -501 103 -505 b 80 -499 90 -505 84 -503 b 74 -423 75 -494 74 -503 b 75 -364 74 -407 75 -388 b 74 -239 75 -295 74 -239 b 50 -248 74 -239 63 -243 b 18 -257 33 -254 24 -257 b 6 -251 13 -257 10 -255 b 0 -208 0 -245 0 -247 b 0 -195 0 -204 0 -200 b 0 -183 0 -191 0 -187 b 6 -140 0 -143 0 -145 b 44 -123 10 -135 9 -136 l 75 -113 l 75 -5 b 74 103 75 55 74 103 b 49 95 74 103 63 100 b 18 87 33 90 24 87 b 6 93 13 87 10 89 b 0 135 0 99 0 97 b 0 149 0 139 0 144 b 0 174 0 159 0 167 b 43 219 0 209 3 206 l 75 230 l 75 359 b 76 493 75 488 75 489 b 87 504 78 497 82 502 z',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: 0,\n            x_max: 176,\n            y_min: -351,\n            y_max: 351,\n            ha: 702,\n            o: 'm 119 504 b 127 505 122 505 124 505 b 146 493 135 505 143 500 b 148 394 148 489 148 488 l 148 300 l 174 308 b 203 317 197 316 200 317 b 205 317 204 317 204 317 b 223 305 213 316 219 312 l 224 302 l 224 256 b 225 233 225 247 225 239 b 221 201 225 206 224 206 b 180 184 217 197 215 196 l 148 174 l 148 122 b 148 70 148 81 148 70 b 148 70 148 70 148 70 b 190 84 149 70 167 76 l 230 97 l 235 97 b 252 85 243 96 249 92 l 254 82 l 254 36 b 254 12 254 27 254 19 b 250 -18 254 -14 253 -14 b 195 -40 247 -23 246 -24 l 148 -56 l 148 -105 b 148 -119 148 -110 148 -115 b 148 -154 148 -142 148 -154 b 173 -145 149 -154 160 -150 b 201 -136 186 -140 199 -136 b 204 -136 202 -136 203 -136 b 223 -148 212 -136 220 -141 b 225 -204 224 -151 225 -179 b 224 -246 225 -224 224 -243 b 181 -269 221 -255 219 -255 l 148 -281 l 148 -386 b 146 -494 147 -491 147 -491 b 127 -505 143 -501 135 -505 b 112 -499 122 -505 116 -503 b 107 -435 107 -494 107 -500 b 107 -392 107 -423 107 -409 b 106 -296 107 -339 107 -296 b 82 -304 106 -296 95 -299 b 50 -313 66 -310 56 -313 b 38 -307 45 -313 42 -311 b 32 -265 33 -301 32 -303 b 32 -251 32 -261 32 -256 b 32 -240 32 -247 32 -243 b 38 -196 32 -200 32 -201 b 76 -180 42 -192 41 -192 l 107 -169 l 107 -119 b 106 -70 107 -80 106 -70 b 106 -70 106 -70 106 -70 b 65 -84 105 -70 87 -76 l 24 -97 l 19 -97 b 1 -84 11 -96 4 -91 b 0 -40 0 -81 0 -61 b 2 14 0 -15 1 11 b 60 41 5 23 4 22 l 106 56 l 107 108 b 107 122 107 113 107 118 b 106 160 107 144 106 160 b 82 152 106 160 95 156 b 50 144 65 146 56 144 b 38 149 45 144 42 146 b 32 192 33 155 32 153 b 32 205 32 196 32 200 b 32 231 32 215 32 224 b 75 275 32 266 35 262 l 107 286 l 107 388 b 108 493 107 488 107 489 b 119 504 110 497 115 502 z',\n        },\n        articAccentAbove: {\n            x_min: -241,\n            x_max: 18,\n            y_min: -107,\n            y_max: 107,\n            ha: 214,\n            o: 'm -329 153 b -321 154 -327 154 -324 154 b -313 153 -318 154 -315 154 b -294 142 -310 152 -307 151 b -8 29 -217 93 -115 52 b 13 23 7 25 10 24 b 26 0 22 17 26 8 b 3 -26 26 -11 18 -22 b -18 -31 -1 -27 -10 -29 b -296 -144 -122 -55 -223 -96 b -321 -154 -311 -153 -313 -154 b -346 -128 -336 -154 -346 -142 b -342 -114 -346 -123 -345 -118 b -325 -100 -339 -110 -337 -107 b -127 -8 -268 -63 -201 -32 b -105 0 -114 -4 -105 0 b -127 8 -105 0 -114 4 b -325 100 -201 32 -268 63 b -342 114 -337 107 -339 110 b -346 128 -345 118 -346 123 b -329 153 -346 139 -340 149 z',\n        },\n        articAccentBelow: {\n            x_min: -241,\n            x_max: 18,\n            y_min: -107,\n            y_max: 107,\n            ha: 214,\n            o: 'm -329 153 b -321 154 -327 154 -324 154 b -313 153 -318 154 -315 154 b -294 142 -310 152 -307 151 b -8 29 -217 93 -115 52 b 13 23 7 25 10 24 b 26 0 22 17 26 8 b 3 -26 26 -11 18 -22 b -18 -31 -1 -27 -10 -29 b -296 -144 -122 -55 -223 -96 b -321 -154 -311 -153 -313 -154 b -346 -128 -336 -154 -346 -142 b -342 -114 -346 -123 -345 -118 b -325 -100 -339 -110 -337 -107 b -127 -8 -268 -63 -201 -32 b -105 0 -114 -4 -105 0 b -127 8 -105 0 -114 4 b -325 100 -201 32 -268 63 b -342 114 -337 107 -339 110 b -346 128 -345 118 -346 123 b -329 153 -346 139 -340 149 z',\n        },\n        articTenutoAbove: {\n            x_min: -144,\n            x_max: 144,\n            y_min: -14,\n            y_max: 14,\n            ha: 29,\n            o: 'm -195 19 b 2 21 -193 20 -95 21 b 195 19 98 21 192 20 b 208 0 203 16 208 8 b 202 -15 208 -5 206 -11 b 95 -21 196 -20 211 -21 b 0 -21 70 -21 39 -21 b -95 -21 -39 -21 -70 -21 b -202 -15 -211 -21 -196 -20 b -208 0 -206 -11 -208 -5 b -195 19 -208 8 -203 16 z',\n        },\n        articTenutoBelow: {\n            x_min: -144,\n            x_max: 144,\n            y_min: -14,\n            y_max: 14,\n            ha: 29,\n            o: 'm -195 19 b 2 21 -193 20 -95 21 b 195 19 98 21 192 20 b 208 0 203 16 208 8 b 202 -15 208 -5 206 -11 b 95 -21 196 -20 211 -21 b 0 -21 70 -21 39 -21 b -95 -21 -39 -21 -70 -21 b -202 -15 -211 -21 -196 -20 b -208 0 -206 -11 -208 -5 b -195 19 -208 8 -203 16 z',\n        },\n        articStaccatoAbove: {\n            x_min: -46,\n            x_max: 46,\n            y_min: -46,\n            y_max: 46,\n            ha: 93,\n            o: 'm -12 66 b -1 67 -8 67 -5 67 b 56 37 21 67 43 56 b 67 0 63 26 67 13 b 37 -56 67 -22 57 -43 b 0 -67 26 -63 13 -67 b -56 -38 -22 -67 -43 -57 b -67 0 -63 -26 -67 -13 b -12 66 -67 31 -45 60 z',\n        },\n        articStaccatoBelow: {\n            x_min: -46,\n            x_max: 46,\n            y_min: -46,\n            y_max: 46,\n            ha: 93,\n            o: 'm -12 66 b -1 67 -8 67 -5 67 b 56 37 21 67 43 56 b 67 0 63 26 67 13 b 37 -56 67 -22 57 -43 b 0 -67 26 -63 13 -67 b -56 -38 -22 -67 -43 -57 b -67 0 -63 -26 -67 -13 b -12 66 -67 31 -45 60 z',\n        },\n        articStaccatissimoAbove: {\n            x_min: -50,\n            x_max: 50,\n            y_min: 0,\n            y_max: 173,\n            ha: 173,\n            o: 'm -72 247 l -72 249 l 0 249 l 72 249 l 72 247 b 0 0 71 244 0 0 b -72 247 0 0 -71 244 z',\n        },\n        articStaccatissimoBelow: {\n            x_min: -50,\n            x_max: 50,\n            y_min: -173,\n            y_max: 0,\n            ha: 173,\n            o: 'm -36 -123 b 0 0 -16 -55 0 0 b 72 -247 0 0 71 -244 l 72 -249 l 0 -249 l -72 -249 l -72 -247 b -36 -123 -72 -247 -55 -191 z',\n        },\n        articMarcatoAbove: {\n            x_min: -107,\n            x_max: 107,\n            y_min: -240,\n            y_max: 18,\n            ha: 259,\n            o: 'm -8 25 b 0 26 -5 26 -2 26 b 26 3 12 26 22 17 b 31 -18 27 -1 29 -10 b 143 -296 55 -122 96 -223 b 154 -321 153 -311 154 -313 b 128 -346 154 -335 143 -346 b 100 -325 116 -346 111 -342 b 8 -127 63 -268 32 -201 b 0 -105 4 -114 0 -105 b -8 -127 0 -105 -4 -114 b -100 -325 -32 -200 -63 -268 b -128 -346 -111 -342 -116 -346 b -154 -321 -143 -346 -154 -335 b -142 -294 -154 -313 -153 -312 b -29 -8 -93 -217 -52 -115 b -20 17 -24 11 -24 11 b -8 25 -18 20 -12 24 z',\n        },\n        articMarcatoBelow: {\n            x_min: -107,\n            x_max: 107,\n            y_min: -18,\n            y_max: 241,\n            ha: 259,\n            o: 'm -136 345 b -128 347 -133 346 -130 347 b -100 325 -118 347 -110 340 b -8 127 -63 268 -32 201 b 0 105 -4 114 0 105 b 8 127 0 105 4 114 b 100 325 32 201 63 268 b 114 342 107 337 110 339 b 128 346 118 345 123 346 b 154 321 142 346 154 336 b 143 296 154 313 153 311 b 29 8 95 221 53 117 b 20 -17 24 -11 24 -11 b 0 -26 15 -23 8 -26 b -20 -17 -8 -26 -15 -23 b -29 8 -24 -11 -24 -11 b -142 294 -52 115 -93 217 b -154 321 -153 312 -154 313 b -136 345 -154 332 -147 342 z',\n        },\n        fermataAbove: {\n            x_min: -305,\n            x_max: 305,\n            y_min: 0,\n            y_max: 332,\n            ha: 332,\n            o: 'm -31 477 b 0 478 -21 477 -10 478 b 432 105 214 478 394 324 b 439 29 436 80 439 48 b 437 13 439 21 438 15 b 418 0 434 5 426 0 b 403 6 413 0 407 2 b 397 30 398 11 398 14 b 0 343 390 208 218 343 b -59 340 -31 343 -37 343 b -397 30 -250 318 -390 188 b -403 6 -398 14 -398 11 b -418 0 -407 2 -413 0 b -437 13 -426 0 -434 5 b -439 29 -438 15 -439 21 b -432 105 -439 48 -436 80 b -31 477 -396 312 -234 462 z m -14 184 b 0 185 -9 185 -5 185 b 70 153 25 185 53 173 b 92 93 85 136 92 114 b 52 16 92 63 78 33 b 0 0 36 5 18 0 b -92 93 -48 0 -92 38 b -14 184 -92 139 -61 176 z',\n        },\n        fermataBelow: {\n            x_min: -305,\n            x_max: 305,\n            y_min: -332,\n            y_max: 0,\n            ha: 332,\n            o: 'm -426 -2 b -418 0 -424 -1 -421 0 b -403 -6 -413 0 -407 -2 b -397 -31 -398 -11 -398 -14 b 0 -343 -389 -208 -218 -343 b 59 -340 31 -343 37 -343 b 397 -31 250 -318 390 -189 b 403 -6 398 -14 398 -11 b 418 0 407 -2 413 0 b 437 -13 426 0 434 -5 b 439 -29 438 -16 439 -21 b 435 -82 439 -43 437 -64 b 33 -476 408 -300 244 -461 b -1 -478 22 -477 10 -478 b -432 -105 -214 -478 -394 -325 b -439 -29 -436 -80 -439 -48 b -437 -13 -439 -21 -438 -16 b -426 -2 -436 -9 -431 -4 z m -14 -1 b 0 0 -9 0 -5 0 b 77 -41 29 0 60 -16 b 93 -93 88 -57 93 -75 b 0 -185 93 -141 55 -185 b -93 -93 -55 -185 -93 -141 b -77 -41 -93 -75 -88 -57 b -14 -1 -63 -20 -40 -6 z',\n        },\n        fermataLongAbove: {\n            x_min: -269,\n            x_max: 269,\n            y_min: 0,\n            y_max: 342,\n            ha: 342,\n            o: 'm -375 491 b 0 493 -371 493 -368 493 l 371 493 l 375 491 b 386 480 379 490 384 485 b 387 247 387 477 387 476 b 387 132 387 200 387 162 b 382 6 387 -7 387 12 b 367 0 378 2 372 0 b 359 2 364 0 362 1 b 348 13 354 3 349 8 b 346 172 346 16 346 17 l 346 329 l 0 329 l -346 329 l -346 172 b -347 13 -346 17 -346 16 b -367 0 -351 5 -359 0 b -386 13 -375 0 -383 5 b -387 247 -387 16 -387 131 b -386 480 -387 362 -387 477 b -375 491 -384 485 -379 490 z m -14 184 b 0 185 -9 185 -5 185 b 70 153 26 185 53 173 b 93 93 85 136 93 114 b 52 16 93 63 79 33 b 0 0 36 5 18 0 b -92 93 -48 0 -92 38 b -14 184 -92 139 -61 176 z',\n        },\n        fermataLongBelow: {\n            x_min: -269,\n            x_max: 269,\n            y_min: -342,\n            y_max: 0,\n            ha: 342,\n            o: 'm -375 -2 b -367 0 -372 -1 -370 0 b -348 -13 -359 0 -350 -5 b -346 -173 -346 -16 -346 -17 l -346 -329 l 0 -329 l 346 -329 l 346 -173 b 348 -13 346 -17 346 -16 b 367 0 351 -5 359 0 b 386 -13 375 0 383 -5 b 388 -247 387 -16 388 -131 b 386 -480 388 -362 387 -477 b 375 -492 384 -485 379 -490 l 371 -493 l 0 -493 l -371 -493 l -375 -492 b -386 -480 -379 -490 -384 -485 b -388 -247 -387 -477 -388 -362 b -386 -13 -388 -131 -387 -16 b -375 -2 -384 -9 -379 -4 z m -14 -1 b 0 0 -9 0 -5 0 b 77 -41 29 0 60 -16 b 93 -93 88 -57 93 -75 b 0 -185 93 -141 55 -185 b -93 -93 -55 -185 -93 -141 b -77 -41 -93 -75 -88 -57 b -14 -1 -63 -20 -40 -6 z',\n        },\n        fermataVeryLongAbove: {\n            x_min: -269,\n            x_max: 269,\n            y_min: 0,\n            y_max: 412,\n            ha: 412,\n            o: 'm -375 591 b 0 593 -372 593 -368 593 l 371 593 l 375 591 b 386 580 379 590 384 585 b 388 297 387 577 388 437 b 386 13 388 156 387 16 b 367 0 383 5 375 0 b 348 13 359 0 351 5 b 346 222 346 16 346 17 l 346 429 l 0 429 l -346 429 l -346 222 b -348 13 -346 17 -346 16 b -367 0 -351 5 -359 0 b -386 13 -375 0 -383 5 b -388 297 -387 16 -388 156 b -386 580 -388 437 -387 577 b -375 591 -384 585 -379 590 z m -272 361 b 3 362 -270 362 -133 362 b 272 361 137 362 269 362 b 283 349 277 359 282 354 b 285 181 284 347 285 264 b 283 13 285 98 284 16 b 264 0 280 5 272 0 b 249 6 259 0 254 2 b 244 76 244 12 244 4 b 244 122 244 89 244 104 l 244 229 l 0 229 l -244 229 l -244 122 b -244 76 -244 104 -244 89 b -249 6 -244 4 -244 12 b -264 0 -254 2 -259 0 b -283 13 -272 0 -280 5 b -285 181 -284 16 -285 98 b -283 349 -285 264 -284 347 b -272 361 -282 354 -277 359 z m -14 184 b 0 185 -9 185 -5 185 b 70 153 25 185 53 173 b 92 93 85 136 92 114 b 52 16 92 63 78 33 b 0 0 36 5 18 0 b -92 93 -48 0 -92 38 b -14 184 -92 139 -61 176 z',\n        },\n        fermataVeryLongBelow: {\n            x_min: -269,\n            x_max: 269,\n            y_min: -412,\n            y_max: 0,\n            ha: 412,\n            o: 'm -375 -2 b -367 0 -372 -1 -370 0 b -348 -13 -359 0 -350 -5 b -346 -223 -346 -17 -346 -17 l -346 -429 l 0 -429 l 346 -429 l 346 -223 b 348 -13 346 -17 346 -17 b 367 0 351 -5 359 0 b 386 -13 375 0 383 -5 b 388 -297 387 -16 388 -156 b 386 -580 388 -437 387 -578 b 375 -592 384 -585 379 -590 l 371 -593 l 0 -593 l -371 -593 l -375 -592 b -386 -580 -379 -590 -384 -585 b -388 -297 -387 -578 -388 -437 b -386 -13 -388 -156 -387 -16 b -375 -2 -384 -9 -379 -4 z m -272 -2 b -265 0 -270 -1 -267 0 b -245 -13 -256 0 -248 -5 b -244 -123 -244 -16 -244 -18 l -244 -229 l 0 -229 l 244 -229 l 244 -123 b 244 -76 244 -104 244 -89 b 249 -6 244 -4 244 -12 b 264 0 254 -2 259 0 b 283 -13 272 0 280 -5 b 285 -181 284 -16 285 -99 b 283 -349 285 -264 284 -347 b 272 -361 282 -354 277 -359 b 0 -362 269 -362 135 -362 b -272 -361 -135 -362 -269 -362 b -283 -349 -277 -359 -282 -354 b -285 -181 -284 -347 -285 -264 b -283 -13 -285 -99 -284 -16 b -272 -2 -282 -9 -277 -4 z m -14 -1 b 0 0 -9 0 -5 0 b 77 -41 29 0 60 -16 b 93 -93 88 -57 93 -75 b 0 -185 93 -141 55 -185 b -93 -93 -55 -185 -93 -141 b -77 -41 -93 -75 -88 -57 b -14 -1 -63 -20 -40 -6 z',\n        },\n        fermataShortAbove: {\n            x_min: -269,\n            x_max: 269,\n            y_min: 0,\n            y_max: 441,\n            ha: 441,\n            o: 'm -8 634 b 0 635 -6 635 -3 635 b 14 629 5 635 11 633 b 70 541 16 627 35 598 b 219 299 99 495 166 386 b 351 86 273 213 332 117 b 386 28 370 56 386 29 b 387 21 387 26 387 23 b 375 2 387 13 382 4 b 336 0 372 1 354 0 b 297 2 318 0 300 1 b 235 94 291 4 291 4 b 86 336 207 141 139 250 b -21 509 32 422 -16 500 b -31 524 -26 517 -31 524 b -39 511 -31 524 -35 518 b -129 366 -44 504 -84 439 b -226 209 -174 293 -217 223 b -359 2 -364 -15 -352 4 b -367 0 -362 1 -364 0 b -387 21 -378 0 -387 9 l -387 21 b -352 84 -387 27 -387 28 b -238 269 -267 222 -253 245 b -171 378 -229 283 -199 332 b -32 603 -119 461 -60 558 b -8 634 -16 628 -14 632 z m -14 184 b 0 185 -9 185 -5 185 b 70 153 25 185 53 173 b 92 93 85 136 92 114 b 52 16 92 63 78 33 b 0 0 36 5 18 0 b -92 93 -48 0 -92 38 b -14 184 -92 139 -61 176 z',\n        },\n        fermataShortBelow: {\n            x_min: -269,\n            x_max: 269,\n            y_min: -441,\n            y_max: 0,\n            ha: 441,\n            o: 'm -375 -2 b -367 0 -372 -1 -370 0 b -352 -6 -361 0 -356 -2 b -297 -94 -350 -8 -332 -37 b -147 -336 -268 -141 -201 -250 b -41 -509 -94 -422 -46 -500 b -31 -524 -36 -517 -31 -524 b -22 -511 -31 -524 -27 -518 b 19 -445 -18 -504 1 -474 b 67 -366 37 -416 59 -380 b 135 -257 76 -352 106 -303 b 273 -33 186 -174 246 -78 b 297 -2 289 -7 292 -4 b 336 0 300 -1 318 0 b 375 -2 354 0 372 -1 b 387 -21 382 -5 387 -13 b 386 -28 387 -24 387 -26 b 368 -58 386 -29 378 -43 b 334 -114 359 -74 343 -99 b 238 -269 324 -130 281 -200 b 143 -424 195 -339 152 -409 b 72 -539 133 -439 101 -490 b 3 -635 15 -631 13 -635 b 0 -635 2 -635 1 -635 b -3 -635 -1 -635 -2 -635 b -70 -542 -13 -635 -15 -631 b -219 -300 -99 -495 -166 -386 b -351 -87 -273 -213 -332 -117 b -386 -28 -370 -56 -386 -29 b -387 -21 -387 -26 -387 -24 b -375 -2 -387 -13 -382 -5 z m -14 -1 b 0 0 -9 0 -5 0 b 77 -41 29 0 60 -16 b 93 -93 88 -57 93 -75 b 0 -185 93 -141 55 -185 b -93 -93 -55 -185 -93 -141 b -77 -41 -93 -75 -88 -57 b -14 -1 -63 -20 -40 -6 z',\n        },\n        breathMarkComma: {\n            x_min: 0,\n            x_max: 158,\n            y_min: -146,\n            y_max: 146,\n            ha: 292,\n            o: 'm 91 210 b 100 210 94 210 97 210 b 222 98 154 210 205 164 b 227 52 225 83 227 67 b 62 -196 227 -39 165 -135 b 31 -210 46 -206 37 -210 b 24 -205 28 -210 26 -209 b 22 -200 23 -204 22 -202 b 34 -187 22 -196 26 -192 b 123 -53 90 -156 123 -103 b 105 7 123 -32 117 -11 l 103 10 l 94 10 b 5 77 54 12 18 39 b 0 110 2 88 0 99 b 91 210 0 160 37 204 z',\n        },\n        breathMarkUpbow: {\n            x_min: -118,\n            x_max: 118,\n            y_min: 0,\n            y_max: 385,\n            ha: 385,\n            o: 'm -161 553 b -122 554 -158 554 -156 554 l -116 554 b -78 550 -81 554 -83 554 b -21 362 -75 546 -79 558 b 32 182 8 263 32 182 b 86 362 32 182 56 263 b 140 545 115 462 139 544 b 154 554 142 551 148 554 b 168 545 160 554 165 551 b 169 542 169 544 169 544 b 93 275 169 535 159 501 b 12 5 17 15 14 5 b 12 5 12 5 12 5 b 12 5 12 5 12 5 b 0 0 9 2 4 0 b -15 11 -6 0 -13 4 b -169 539 -24 38 -169 536 b -161 553 -169 545 -166 550 z',\n        },\n        caesura: {\n            x_min: 0,\n            x_max: 430,\n            y_min: -190,\n            y_max: 284,\n            ha: 474,\n            o: 'm 397 408 b 405 410 400 409 403 410 b 426 389 417 410 426 400 b 425 382 426 387 426 384 b 35 -267 423 377 38 -264 b 21 -273 31 -271 26 -273 b 0 -252 11 -273 0 -264 b 1 -245 0 -250 0 -248 b 391 404 3 -240 388 401 b 397 408 393 406 396 407 z m 590 408 b 598 410 592 409 595 410 b 619 389 609 410 619 400 b 617 382 619 387 618 384 b 227 -267 616 377 230 -264 b 214 -273 223 -271 219 -273 b 192 -252 203 -273 192 -264 b 194 -245 192 -250 193 -248 b 584 404 195 -240 581 401 b 590 408 585 406 588 407 z',\n        },\n        caesuraCurved: {\n            x_min: 0,\n            x_max: 348,\n            y_min: -195,\n            y_max: 292,\n            ha: 486,\n            o: 'm 274 420 b 278 420 275 420 277 420 b 309 386 295 420 309 405 b 308 379 309 383 309 381 b 306 361 308 377 307 369 b 41 -267 281 194 185 -35 b 20 -280 36 -275 28 -280 b 6 -274 15 -280 10 -278 b 0 -261 2 -270 0 -266 b 10 -236 0 -255 3 -248 b 246 385 138 -11 230 231 b 274 420 248 407 256 417 z m 466 420 b 471 420 468 420 469 420 b 501 386 488 420 501 405 b 501 379 501 383 501 381 b 498 361 500 377 499 369 b 233 -267 473 194 377 -35 b 213 -280 228 -275 220 -280 b 199 -274 208 -280 203 -278 b 192 -261 194 -270 192 -266 b 202 -236 192 -255 196 -248 b 438 385 330 -11 422 231 b 466 420 441 407 449 417 z',\n        },\n        restMaxima: {\n            x_min: 0,\n            x_max: 801,\n            y_min: -235,\n            y_max: 235,\n            ha: 470,\n            o: 'm 0 0 l 0 339 l 192 339 l 385 339 l 385 0 l 385 -339 l 192 -339 l 0 -339 z m 769 0 l 769 339 l 962 339 l 1154 339 l 1154 0 l 1154 -339 l 962 -339 l 769 -339 z',\n        },\n        restDoubleWhole: {\n            x_min: 0,\n            x_max: 267,\n            y_min: 0,\n            y_max: 235,\n            ha: 235,\n            o: 'm 0 169 l 0 339 l 192 339 l 385 339 l 385 169 l 385 0 l 192 0 l 0 0 z',\n        },\n        restWhole: {\n            x_min: 0,\n            x_max: 310,\n            y_min: -118,\n            y_max: 0,\n            ha: 118,\n            o: 'm 0 -85 l 0 0 l 223 0 l 446 0 l 446 -85 l 446 -169 l 223 -169 l 0 -169 z',\n        },\n        restWholeLegerLine: {\n            x_min: 0,\n            x_max: 509,\n            y_min: -118,\n            y_max: 11,\n            ha: 128,\n            o: 'm 9 14 b 401 16 11 15 213 16 b 724 14 567 16 723 15 b 734 0 731 12 734 6 b 724 -14 734 -6 731 -12 b 656 -15 722 -15 714 -15 l 590 -15 l 590 -92 l 590 -169 l 367 -169 l 144 -169 l 144 -92 l 144 -15 l 78 -15 b 9 -14 19 -15 11 -15 b 0 0 3 -12 0 -6 b 9 14 0 6 3 11 z',\n        },\n        restHalf: {\n            x_min: 0,\n            x_max: 310,\n            y_min: 0,\n            y_max: 118,\n            ha: 118,\n            o: 'm 0 85 l 0 169 l 223 169 l 446 169 l 446 85 l 446 0 l 223 0 l 0 0 z',\n        },\n        restHalfLegerLine: {\n            x_min: 0,\n            x_max: 509,\n            y_min: -11,\n            y_max: 118,\n            ha: 128,\n            o: 'm 144 92 l 144 169 l 367 169 l 590 169 l 590 92 l 590 15 l 656 15 b 725 14 714 15 722 15 b 734 0 731 12 734 6 b 725 -14 734 -6 731 -12 b 402 -16 723 -15 567 -16 b 9 -14 213 -16 11 -15 b 0 0 3 -12 0 -6 b 4 11 0 4 1 8 b 55 15 8 15 5 15 b 78 15 61 15 69 15 l 144 15 z',\n        },\n        restQuarter: {\n            x_min: 0,\n            x_max: 208,\n            y_min: -343,\n            y_max: 343,\n            ha: 686,\n            o: 'm 47 493 b 53 494 49 494 51 494 b 70 485 58 494 63 491 b 91 467 73 482 83 474 b 111 449 98 460 108 452 b 170 398 134 429 144 420 b 292 286 284 298 292 292 b 292 284 292 286 292 285 b 292 281 292 283 292 282 b 280 261 292 277 291 277 b 220 124 252 219 230 170 b 209 36 213 94 209 65 b 287 -167 209 -43 236 -115 b 300 -186 299 -178 300 -180 b 285 -201 300 -196 294 -201 b 273 -199 281 -201 277 -200 b 245 -195 264 -197 254 -195 b 145 -244 208 -195 170 -213 b 115 -332 125 -270 115 -301 b 174 -461 115 -376 135 -423 b 185 -480 181 -468 185 -474 b 180 -490 185 -483 183 -486 b 170 -494 177 -492 174 -494 b 128 -466 163 -494 152 -486 b 0 -254 45 -395 0 -320 l 0 -254 l 0 -237 l 2 -229 b 148 -137 18 -171 74 -137 b 204 -143 166 -137 185 -139 l 214 -145 l 212 -143 b 117 -58 210 -141 158 -95 b 18 35 22 26 18 29 b 18 37 18 36 18 36 l 18 38 b 27 55 18 44 18 44 b 110 294 82 129 110 216 b 50 460 110 359 90 419 b 38 478 39 470 38 472 b 47 493 38 485 41 490 z',\n        },\n        rest8th: {\n            x_min: 0,\n            x_max: 242,\n            y_min: -185,\n            y_max: 206,\n            ha: 391,\n            o: 'm 92 296 b 103 297 96 297 99 297 b 166 275 124 297 149 288 b 205 195 192 255 205 225 b 180 129 205 171 197 147 l 176 124 l 181 126 b 307 244 236 141 284 186 b 311 254 308 248 311 253 b 328 262 316 259 322 262 b 349 242 339 262 349 254 b 200 -256 349 237 203 -251 b 182 -266 197 -263 190 -266 b 163 -254 174 -266 166 -262 b 161 -249 162 -252 161 -251 b 217 -58 161 -241 170 -215 b 272 126 247 43 272 126 b 272 126 272 126 272 126 b 263 120 271 126 268 124 b 140 79 227 93 182 79 b 36 114 102 79 65 90 b 0 192 12 133 0 162 b 29 265 0 218 9 244 b 92 296 45 282 65 292 z',\n        },\n        rest16th: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -417,\n            y_max: 206,\n            ha: 623,\n            o: 'm 192 296 b 203 297 196 297 199 297 b 266 275 224 297 249 288 b 305 195 292 255 305 225 b 280 129 305 171 297 147 l 276 124 l 281 126 b 407 244 336 141 384 186 b 411 254 408 248 411 253 b 428 262 416 259 422 262 b 449 242 439 262 449 254 b 200 -590 449 237 203 -584 b 182 -600 197 -597 190 -600 b 163 -587 174 -600 166 -596 b 161 -583 162 -586 161 -585 b 217 -392 161 -575 170 -548 b 272 -207 247 -290 272 -208 b 272 -207 272 -207 272 -207 b 263 -213 271 -207 268 -210 b 140 -255 227 -241 182 -255 b 36 -220 102 -255 65 -243 b 0 -141 12 -200 0 -171 b 29 -69 0 -115 9 -89 b 103 -37 49 -47 76 -37 b 195 -94 140 -37 177 -57 b 205 -138 202 -108 205 -123 b 180 -205 205 -163 196 -187 l 176 -209 l 181 -208 b 306 -91 236 -193 284 -147 b 372 126 308 -85 372 125 b 372 126 372 126 372 126 b 363 120 371 126 368 124 b 240 79 327 93 283 79 b 136 114 202 79 165 90 b 100 192 112 133 100 162 b 129 265 100 218 109 244 b 192 296 145 282 165 292 z',\n        },\n        rest32nd: {\n            x_min: 0,\n            x_max: 381,\n            y_min: -417,\n            y_max: 438,\n            ha: 854,\n            o: 'm 292 629 b 303 630 296 630 299 630 b 366 608 324 630 349 622 b 405 528 392 588 405 558 b 380 462 405 504 397 481 l 376 457 l 382 459 b 507 577 436 474 484 519 b 511 587 508 582 511 586 b 528 595 516 593 522 595 b 549 575 539 595 549 588 b 200 -590 549 571 203 -584 b 182 -600 197 -597 190 -600 b 163 -587 174 -600 166 -596 b 161 -583 162 -586 161 -585 b 217 -392 161 -575 170 -548 b 272 -207 247 -290 272 -208 b 272 -207 272 -207 272 -207 b 263 -213 271 -207 268 -210 b 140 -255 227 -241 182 -255 b 36 -220 102 -255 65 -243 b 0 -141 12 -200 0 -171 b 29 -69 0 -115 9 -89 b 103 -37 49 -47 76 -37 b 195 -94 140 -37 177 -57 b 205 -138 202 -108 205 -123 b 180 -205 205 -163 196 -187 l 176 -209 l 181 -208 b 306 -91 236 -193 284 -147 b 372 126 308 -85 372 125 b 372 126 372 126 372 126 b 363 120 371 126 368 124 b 240 79 327 93 283 79 b 136 114 202 79 165 90 b 100 192 112 133 100 162 b 129 265 100 218 109 244 b 203 296 149 286 176 296 b 295 240 240 296 277 277 b 305 195 302 226 305 211 b 280 129 305 171 296 147 l 276 124 l 281 126 b 406 243 336 140 384 186 b 472 459 408 248 472 458 b 472 459 472 459 472 459 b 463 454 471 459 468 457 b 340 412 427 426 383 412 b 236 447 302 412 265 424 b 200 525 212 467 200 496 b 229 598 200 551 210 578 b 292 629 246 616 265 625 z',\n        },\n        rest64th: {\n            x_min: 0,\n            x_max: 451,\n            y_min: -648,\n            y_max: 438,\n            ha: 1086,\n            o: 'm 392 629 b 403 630 396 630 399 630 b 466 608 424 630 449 622 b 505 528 492 588 505 558 b 480 462 505 504 497 481 l 476 457 l 482 459 b 607 577 536 474 584 519 b 612 587 608 582 611 586 b 628 595 616 593 622 595 b 649 575 639 595 649 588 b 200 -923 649 571 203 -917 b 182 -933 197 -930 190 -933 b 163 -921 174 -933 166 -929 b 161 -916 162 -919 161 -918 b 217 -725 161 -908 170 -881 b 272 -541 247 -624 272 -541 b 272 -541 272 -541 272 -541 b 263 -547 271 -541 268 -543 b 140 -588 227 -574 182 -588 b 36 -553 102 -588 65 -577 b 0 -475 12 -534 0 -504 b 29 -402 0 -449 9 -422 b 103 -370 49 -381 76 -370 b 195 -427 140 -370 177 -390 b 205 -471 202 -441 205 -456 b 180 -538 205 -496 196 -520 l 176 -543 l 181 -541 b 306 -424 236 -526 284 -481 b 372 -207 308 -419 372 -209 b 372 -207 372 -207 372 -207 b 363 -213 371 -207 368 -210 b 240 -255 327 -241 283 -255 b 136 -220 202 -255 165 -243 b 100 -141 112 -200 100 -171 b 129 -69 100 -115 109 -89 b 203 -37 149 -47 176 -37 b 295 -94 240 -37 277 -57 b 305 -138 302 -108 305 -123 b 280 -205 305 -163 296 -187 l 276 -209 l 281 -208 b 406 -91 336 -193 384 -147 b 472 126 408 -85 472 125 b 472 126 472 126 472 126 b 463 120 471 126 468 124 b 340 79 427 93 383 79 b 236 114 302 79 265 90 b 200 192 212 133 200 162 b 229 265 200 218 210 244 b 303 296 249 286 276 296 b 395 240 340 296 377 277 b 405 195 402 226 405 211 b 380 129 405 171 396 147 l 376 124 l 382 126 b 506 243 436 140 484 186 b 572 459 508 248 572 458 b 572 459 572 459 572 459 b 563 454 571 459 568 457 b 440 412 527 426 483 412 b 336 447 402 412 365 424 b 300 525 312 467 300 496 b 329 598 300 551 310 578 b 392 629 346 616 365 625 z',\n        },\n        rest128th: {\n            x_min: 0,\n            x_max: 520,\n            y_min: -648,\n            y_max: 669,\n            ha: 1317,\n            o: 'm 492 963 b 503 964 496 963 499 964 b 566 942 524 964 549 955 b 605 861 592 922 605 892 b 580 796 605 838 597 814 l 576 791 l 582 793 b 707 911 636 807 684 853 b 712 921 708 915 711 919 b 728 929 716 926 722 929 b 749 908 739 929 749 921 b 200 -923 749 904 203 -917 b 182 -933 197 -930 190 -933 b 163 -921 174 -933 166 -929 b 161 -916 162 -919 161 -918 b 217 -725 161 -908 170 -881 b 272 -541 247 -624 272 -541 b 272 -541 272 -541 272 -541 b 263 -547 271 -541 268 -543 b 140 -588 227 -574 182 -588 b 36 -553 102 -588 65 -577 b 0 -475 12 -534 0 -504 b 29 -402 0 -449 9 -422 b 103 -370 49 -381 76 -370 b 195 -427 140 -370 177 -390 b 205 -471 202 -441 205 -456 b 180 -538 205 -496 196 -520 l 176 -543 l 181 -541 b 306 -424 236 -526 284 -481 b 372 -207 308 -419 372 -209 b 372 -207 372 -207 372 -207 b 363 -213 371 -207 368 -210 b 240 -255 327 -241 283 -255 b 136 -220 202 -255 165 -243 b 100 -141 112 -200 100 -171 b 129 -69 100 -115 109 -89 b 203 -37 149 -47 176 -37 b 295 -94 240 -37 277 -57 b 305 -138 302 -108 305 -123 b 280 -205 305 -163 296 -187 l 276 -209 l 281 -208 b 406 -91 336 -193 384 -147 b 472 126 408 -85 472 125 b 472 126 472 126 472 126 b 463 120 471 126 468 124 b 340 79 427 93 383 79 b 236 114 302 79 265 90 b 200 192 212 133 200 162 b 229 265 200 218 210 244 b 303 296 249 286 276 296 b 395 240 340 296 377 277 b 405 195 402 226 405 211 b 380 129 405 171 396 147 l 376 124 l 382 126 b 506 243 436 140 484 186 b 572 459 508 248 572 458 b 572 459 572 459 572 459 b 563 454 571 459 568 457 b 440 412 527 426 483 412 b 336 447 402 412 365 424 b 300 525 312 467 300 496 b 329 598 300 551 310 578 b 403 630 349 620 376 630 b 495 573 440 630 477 610 b 505 529 502 559 505 544 b 480 462 505 504 496 480 l 476 457 l 482 459 b 606 576 536 474 584 519 b 672 793 608 581 672 791 b 672 793 672 793 672 793 b 664 787 672 793 668 790 b 540 745 627 759 583 745 b 436 780 502 745 465 757 b 400 859 412 800 400 829 b 429 931 400 885 410 911 b 492 963 446 949 465 959 z',\n        },\n        dynamicPiano: {\n            x_min: -36,\n            x_max: 355,\n            y_min: -168,\n            y_max: 261,\n            ha: 428,\n            o: 'm 185 375 b 196 375 189 375 192 375 b 287 295 240 375 280 341 l 288 290 l 294 297 b 381 359 318 325 353 351 b 404 363 388 362 396 363 b 464 340 424 363 445 355 b 511 234 495 315 511 278 b 354 -28 511 109 447 1 b 314 -34 341 -32 327 -34 b 274 -23 297 -34 282 -31 b 264 -16 272 -22 268 -18 b 226 40 246 -1 233 18 b 223 49 224 45 223 48 b 223 50 223 49 223 50 b 186 -69 222 50 216 29 b 150 -194 156 -170 150 -190 b 151 -196 150 -196 150 -196 b 182 -208 155 -200 169 -205 b 193 -211 186 -209 191 -210 b 204 -226 201 -213 204 -219 b 196 -240 204 -231 202 -237 b 76 -241 194 -241 135 -241 b -43 -240 17 -241 -41 -241 b -52 -226 -49 -237 -52 -231 b -48 -215 -52 -222 -51 -218 b -31 -209 -45 -212 -44 -211 b 27 -180 8 -200 22 -194 b 163 273 32 -167 163 269 b 166 285 164 276 165 281 b 167 298 167 290 167 294 b 153 316 167 309 162 316 b 148 315 152 316 150 316 b 66 225 117 307 84 271 b 53 210 61 212 60 210 b 43 219 46 210 43 213 b 46 233 43 223 44 228 b 140 353 66 284 98 326 b 152 362 145 356 150 360 b 185 375 158 367 173 373 z m 375 299 b 365 301 372 300 369 301 b 299 268 348 301 320 287 b 284 248 288 256 286 254 b 280 238 283 245 281 240 b 257 166 278 235 271 212 l 236 98 l 237 91 b 250 48 237 76 243 60 b 278 27 258 37 271 27 b 280 28 279 27 280 27 b 290 32 281 28 286 30 b 403 216 347 58 395 135 b 405 241 404 225 405 234 b 375 299 405 272 396 288 z',\n        },\n        dynamicMezzo: {\n            x_min: 32,\n            x_max: 463,\n            y_min: -18,\n            y_max: 256,\n            ha: 274,\n            o: 'm 180 367 b 193 368 184 368 189 368 b 265 329 221 368 249 353 b 274 311 268 324 273 313 b 274 310 274 310 274 310 b 279 316 275 310 276 312 b 309 349 288 329 298 340 b 318 357 312 351 316 355 b 353 368 327 365 339 368 b 408 350 372 368 392 362 b 435 311 420 340 433 321 b 436 310 436 310 436 310 b 441 316 436 310 438 312 b 471 349 449 329 460 340 b 480 357 474 351 478 355 b 515 368 488 365 501 368 b 569 350 533 368 554 362 b 603 277 591 333 603 304 b 595 244 603 265 600 254 b 541 65 593 240 541 68 b 540 56 541 64 541 59 b 538 44 539 52 538 48 b 550 24 538 33 543 24 b 551 24 550 24 550 24 b 643 119 583 28 624 70 b 657 136 649 134 650 136 b 667 127 663 136 667 133 b 654 92 667 120 663 109 b 560 -12 631 44 601 11 b 547 -19 554 -14 549 -18 b 519 -26 538 -24 529 -26 b 452 17 493 -26 466 -10 b 442 59 445 29 442 44 b 449 92 442 71 444 83 b 503 271 451 96 503 268 b 505 280 503 273 504 276 b 506 292 506 285 506 289 b 491 318 506 304 501 313 b 485 320 488 320 486 320 b 477 317 483 320 481 319 b 440 265 461 309 442 282 b 434 245 439 260 436 248 b 397 125 433 243 417 191 b 357 2 360 1 361 4 l 355 0 l 313 0 b 301 0 309 0 305 0 b 266 5 267 0 269 0 b 265 8 265 6 265 6 b 303 140 265 14 271 35 b 341 272 324 210 341 270 b 343 281 342 274 343 278 b 345 292 344 285 345 289 b 329 318 345 304 339 313 b 323 320 326 319 325 320 b 315 317 321 320 319 319 b 278 265 300 309 280 282 b 272 245 278 260 274 248 b 236 125 271 243 256 191 b 196 2 198 1 199 4 l 194 0 l 152 0 b 140 0 147 0 143 0 b 104 5 105 0 107 0 b 103 8 104 6 103 6 b 141 140 103 14 110 35 b 180 272 162 210 180 270 b 182 281 180 274 181 278 b 183 292 183 285 183 289 b 168 318 183 304 178 313 b 161 320 166 319 164 320 b 141 313 156 320 150 317 b 70 226 113 299 86 266 b 57 210 65 212 63 210 b 47 219 50 210 47 213 b 50 233 47 223 48 228 b 152 355 71 287 110 334 b 160 360 154 356 158 358 b 180 367 165 363 172 366 z',\n        },\n        dynamicForte: {\n            x_min: -81,\n            x_max: 413,\n            y_min: -171,\n            y_max: 390,\n            ha: 561,\n            o: 'm 457 561 b 462 561 458 561 460 561 b 484 560 469 561 481 561 b 496 559 486 560 492 559 b 593 491 541 556 584 525 b 595 475 594 485 595 480 b 526 407 595 438 562 407 b 500 413 517 407 508 409 b 464 469 476 423 464 446 b 487 515 464 486 471 504 b 488 517 488 516 488 516 b 488 517 488 517 488 517 b 466 505 487 517 473 510 b 349 332 418 472 375 409 b 345 321 347 326 345 321 b 382 321 345 321 362 321 b 390 321 385 321 387 321 b 431 315 425 321 424 320 b 440 295 437 310 440 303 b 431 275 440 287 437 280 b 386 269 424 270 426 269 b 375 269 383 269 379 269 l 331 269 l 330 262 b 164 -137 301 113 238 -38 b -22 -246 113 -205 43 -246 b -26 -246 -23 -246 -25 -246 b -117 -155 -78 -245 -117 -204 b -114 -132 -117 -147 -116 -140 b -50 -84 -106 -100 -78 -84 b 16 -133 -22 -84 7 -100 b 18 -149 17 -138 18 -144 b -12 -202 18 -170 7 -190 b -15 -204 -14 -203 -15 -203 b -15 -204 -15 -204 -15 -204 b -9 -202 -14 -204 -12 -203 b 75 -122 23 -193 55 -163 b 96 -69 82 -108 87 -96 b 175 231 118 -3 137 68 b 184 268 180 251 184 268 b 184 268 184 268 184 268 b 142 269 184 269 180 269 b 92 272 97 269 96 269 b 78 295 83 278 78 286 b 92 318 78 303 83 312 b 148 321 96 320 96 320 l 198 321 l 202 332 b 457 561 248 461 350 553 z',\n        },\n        dynamicRinforzando: {\n            x_min: 55,\n            x_max: 336,\n            y_min: 0,\n            y_max: 258,\n            ha: 258,\n            o: 'm 360 371 b 377 372 365 372 371 372 b 478 331 419 372 465 354 b 484 308 482 323 484 316 b 461 268 484 291 475 276 b 438 261 453 263 445 261 b 398 283 423 261 408 269 b 343 312 383 303 363 312 b 281 264 315 312 289 295 b 278 256 280 260 279 257 b 276 251 278 255 277 253 b 273 244 275 248 274 246 b 237 125 273 243 256 189 b 197 2 200 1 201 4 l 195 0 l 153 0 b 141 0 149 0 145 0 b 106 5 106 0 108 0 b 105 8 105 6 105 6 b 142 140 105 14 111 35 b 181 272 164 211 181 270 b 183 282 181 274 182 279 b 185 296 184 287 185 291 b 164 323 185 311 177 322 b 160 323 163 323 161 323 b 103 297 140 323 119 313 b 89 287 94 288 93 287 b 79 297 82 287 79 292 b 81 305 79 299 79 302 b 140 350 93 321 119 341 b 199 365 158 358 185 365 b 202 365 200 365 201 365 b 266 328 230 362 251 349 b 268 324 267 326 268 325 b 268 324 268 324 268 324 b 273 329 268 324 271 326 b 360 371 297 352 328 367 z',\n        },\n        dynamicSforzando: {\n            x_min: 49,\n            x_max: 262,\n            y_min: -21,\n            y_max: 254,\n            ha: 274,\n            o: 'm 244 365 b 255 365 247 365 251 365 b 347 340 286 365 318 357 b 372 318 361 333 367 327 b 377 296 375 311 377 303 b 338 245 377 273 361 250 b 328 244 334 244 331 244 b 282 288 302 244 282 265 b 287 307 282 294 284 301 b 290 312 288 310 289 312 b 290 312 290 312 290 312 b 269 314 290 314 279 314 b 253 313 263 314 256 314 b 207 282 230 309 212 297 b 206 277 206 281 206 279 b 257 218 206 261 229 234 b 283 202 272 210 277 206 b 350 89 326 170 350 128 b 339 46 350 74 347 60 b 205 -30 312 -3 261 -30 b 95 7 168 -30 130 -18 b 71 48 79 18 71 32 b 80 77 71 57 74 67 b 121 100 88 92 105 100 b 154 87 133 100 145 96 b 167 56 163 78 167 67 b 160 32 167 47 165 39 l 156 27 l 158 26 b 190 21 167 23 179 21 b 212 23 198 21 206 22 b 258 64 238 30 258 48 b 257 70 258 66 258 68 b 204 124 248 92 234 107 b 115 247 151 153 119 198 b 114 254 114 249 114 251 b 244 365 114 310 173 361 z',\n        },\n        dynamicZ: {\n            x_min: 22,\n            x_max: 291,\n            y_min: 2,\n            y_max: 235,\n            ha: 233,\n            o: 'm 116 338 b 208 339 118 338 158 339 b 409 338 294 339 408 338 b 419 323 415 335 419 329 b 414 312 419 319 417 315 b 296 214 412 310 359 266 b 179 117 232 161 180 118 l 177 116 l 189 116 b 193 116 190 116 192 116 b 252 95 217 116 234 110 b 301 75 267 83 287 75 b 306 75 303 75 304 75 b 319 88 310 76 314 79 b 322 92 321 90 322 91 b 321 92 322 92 322 92 b 319 91 321 92 320 92 b 310 90 316 90 313 90 b 276 126 292 90 276 106 b 277 133 276 128 277 131 b 320 165 281 153 300 165 b 349 153 330 165 341 161 b 360 116 357 144 360 131 b 337 56 360 94 352 69 b 303 28 329 48 309 33 b 225 3 278 12 250 3 b 169 20 205 3 185 8 b 110 37 152 31 130 37 b 81 32 99 37 89 36 b 63 21 74 30 72 29 b 47 13 54 14 52 13 b 31 28 37 13 31 20 b 35 40 31 32 32 36 b 68 67 38 43 57 59 b 285 246 75 72 281 243 b 285 246 285 246 285 246 b 231 247 285 247 260 247 b 137 246 190 247 141 246 b 96 225 123 243 110 237 b 83 217 88 218 87 217 b 80 216 82 216 81 216 b 65 232 71 216 65 223 l 65 232 l 65 237 l 86 284 b 109 333 98 310 108 332 b 116 338 111 335 114 338 z',\n        },\n        ornamentTrill: {\n            x_min: -234,\n            x_max: 234,\n            y_min: 0,\n            y_max: 354,\n            ha: 354,\n            o: 'm -87 472 b -28 509 -31 509 -31 509 b -20 502 -23 509 -20 506 b -66 344 -20 500 -61 360 l -67 342 l -44 343 b 118 360 12 344 67 350 b 140 364 128 362 135 364 b 157 359 146 364 151 362 b 170 348 161 357 169 351 b 171 348 170 348 171 348 b 216 357 174 348 183 350 b 286 370 269 370 272 370 l 287 370 b 335 332 310 370 328 356 b 337 316 337 328 337 322 b 333 295 337 307 336 297 b 241 273 331 293 247 273 b 241 273 241 273 241 273 b 235 281 237 274 235 277 b 236 286 235 283 235 284 b 236 295 236 289 236 292 b 220 329 236 309 230 322 l 216 332 l 210 328 b 159 270 190 314 172 294 b 119 147 153 260 156 269 b 83 35 87 40 86 36 b -8 14 79 33 -4 14 b -8 14 -8 14 -8 14 b -14 20 -12 15 -14 16 b -8 44 -14 24 -12 31 b -2 65 -4 55 -2 65 b -2 65 -2 65 -2 65 b -43 41 -2 65 -20 54 b -115 4 -96 9 -98 8 b -142 0 -124 1 -133 0 b -241 99 -196 0 -241 43 b -240 112 -241 103 -240 108 b -210 217 -238 122 -241 113 b -184 306 -195 265 -184 305 b -184 306 -184 306 -184 306 b -186 306 -184 306 -185 306 b -257 305 -194 306 -223 305 b -320 304 -291 305 -310 304 b -333 305 -330 304 -332 305 b -337 312 -336 306 -337 309 b -335 317 -337 314 -336 316 b -289 330 -333 319 -332 320 l -245 340 l -208 340 l -171 341 l -158 386 b -143 433 -150 412 -144 433 b -87 472 -143 434 -117 451 z m 58 328 b 54 328 56 328 55 328 b 37 325 51 328 48 327 b -58 311 8 319 -28 313 b -78 302 -79 309 -77 310 b -108 198 -78 299 -88 266 b -139 83 -141 89 -139 93 b -139 82 -139 83 -139 82 b -116 50 -139 63 -128 50 b -107 52 -113 50 -110 50 b 16 125 -104 53 16 124 b 43 214 18 126 43 211 b 50 236 43 217 45 224 b 74 314 53 246 74 311 b 58 328 74 320 66 326 z',\n        },\n        ornamentTurn: {\n            x_min: -292,\n            x_max: 292,\n            y_min: -134,\n            y_max: 134,\n            ha: 269,\n            o: 'm -256 193 b -248 193 -254 193 -251 193 b -190 186 -234 193 -207 190 b 41 45 -112 166 -35 119 b 245 -85 110 -23 180 -67 b 289 -94 268 -91 279 -94 b 299 -93 292 -94 295 -93 b 377 1 340 -86 372 -47 b 378 11 377 5 378 8 b 301 82 378 54 344 82 b 242 65 283 82 263 76 b 208 56 231 59 219 56 b 148 118 175 56 148 81 b 201 182 148 148 164 169 b 260 193 220 190 240 193 b 410 85 327 193 388 152 b 420 22 417 65 420 44 b 343 -153 420 -43 391 -112 b 241 -193 311 -180 279 -193 b 167 -180 219 -193 195 -189 b -44 -45 95 -158 27 -114 b -235 81 -109 19 -169 58 b -293 93 -259 89 -277 93 b -339 78 -311 93 -325 88 b -377 6 -365 61 -377 34 b -328 -73 -377 -26 -360 -58 b -295 -80 -317 -77 -306 -80 b -244 -66 -279 -80 -263 -75 b -210 -56 -233 -59 -221 -56 b -177 -67 -199 -56 -187 -60 b -150 -118 -159 -79 -150 -98 b -177 -170 -150 -138 -159 -158 b -255 -191 -198 -184 -227 -191 b -275 -190 -262 -191 -269 -191 b -420 -5 -362 -178 -420 -97 b -409 64 -420 17 -417 41 b -263 192 -386 133 -328 184 b -256 193 -260 192 -257 193 z',\n        },\n        ornamentTurnSlash: {\n            x_min: -292,\n            x_max: 292,\n            y_min: -189,\n            y_max: 189,\n            ha: 378,\n            o: 'm -9 271 b -1 272 -7 271 -4 272 b 18 259 7 272 15 267 b 19 161 19 256 19 255 l 19 66 l 41 46 b 246 -85 113 -24 179 -66 b 289 -94 268 -91 279 -94 b 299 -93 292 -94 296 -93 b 377 2 340 -86 372 -47 b 378 11 378 5 378 8 b 302 82 378 54 345 82 b 243 66 283 82 263 77 b 208 56 231 59 219 56 b 148 118 175 56 148 81 b 201 183 148 149 164 169 b 260 194 221 190 241 194 b 405 99 322 194 378 159 b 420 23 415 77 420 51 b 416 -22 420 8 419 -7 b 242 -193 398 -120 323 -193 b 242 -193 242 -193 242 -193 b 22 -102 179 -193 95 -159 l 19 -101 l 19 -178 b 19 -210 19 -191 19 -201 b 14 -266 19 -265 19 -261 b -1 -272 10 -270 4 -272 b -20 -259 -9 -272 -17 -267 b -22 -161 -22 -256 -22 -255 l -22 -66 l -43 -46 b -235 81 -112 21 -168 58 b -293 93 -258 89 -277 93 b -338 79 -310 93 -324 88 b -377 6 -365 62 -377 34 b -328 -72 -377 -26 -360 -58 b -295 -80 -317 -77 -306 -80 b -244 -65 -279 -80 -263 -75 b -210 -56 -232 -59 -221 -56 b -166 -76 -193 -56 -178 -63 b -150 -118 -155 -88 -150 -103 b -177 -170 -150 -138 -159 -158 b -252 -191 -199 -184 -225 -191 b -353 -155 -288 -191 -325 -179 b -420 -7 -399 -116 -420 -62 b -276 190 -420 81 -367 169 b -245 193 -266 192 -256 193 b -24 102 -183 193 -99 159 l -22 101 l -22 178 b -20 259 -22 255 -22 256 b -9 271 -19 264 -14 269 z',\n        },\n        ornamentMordent: {\n            x_min: -278,\n            x_max: 278,\n            y_min: -202,\n            y_max: 186,\n            ha: 388,\n            o: 'm -11 267 b -3 268 -8 268 -6 268 b 16 256 5 268 13 264 b 18 155 18 254 18 253 l 18 56 l 64 111 b 111 168 92 145 110 167 b 123 171 115 170 119 171 b 135 168 127 171 132 170 b 289 17 137 167 218 87 l 306 -1 l 334 34 b 379 76 369 76 369 76 l 380 76 b 401 56 392 76 401 67 b 399 47 401 53 400 50 b 222 -168 396 41 227 -165 b 210 -171 219 -170 214 -171 b 198 -168 206 -171 202 -170 b 112 -83 197 -167 159 -129 b 28 0 66 -38 28 0 b 28 0 28 0 28 0 b 23 -6 27 0 25 -3 l 18 -11 l 18 -143 b 18 -205 18 -168 18 -188 b 12 -285 18 -289 18 -280 b -2 -291 8 -289 3 -291 b -21 -280 -10 -291 -18 -287 b -23 -169 -23 -277 -23 -276 l -23 -62 l -66 -114 b -111 -168 -93 -147 -109 -167 b -123 -171 -115 -170 -119 -171 b -135 -168 -127 -171 -131 -170 b -289 -17 -137 -167 -219 -85 l -306 1 l -334 -34 b -379 -76 -369 -76 -369 -76 l -380 -76 b -401 -56 -392 -76 -401 -67 b -399 -47 -401 -53 -400 -50 b -222 168 -396 -41 -227 165 b -210 171 -219 170 -214 171 b -199 168 -206 171 -202 170 b -45 17 -197 167 -109 81 l -28 0 l -25 2 l -23 5 l -23 128 b -22 255 -23 251 -23 252 b -11 267 -20 260 -15 265 z',\n        },\n        ornamentShortTrill: {\n            x_min: -278,\n            x_max: 278,\n            y_min: -119,\n            y_max: 119,\n            ha: 238,\n            o: 'm -217 170 b -211 171 -216 171 -213 171 b -199 168 -207 171 -202 170 b -112 83 -197 167 -159 129 b -28 0 -66 38 -28 0 b 41 83 -27 0 4 37 b 111 168 84 136 110 167 b 123 171 115 170 119 171 b 135 168 127 171 132 170 b 289 17 137 167 218 87 l 306 -1 l 334 34 b 379 76 369 76 369 76 l 380 76 b 401 56 392 76 401 67 b 399 47 401 53 400 50 b 222 -168 396 41 227 -165 b 210 -171 219 -170 214 -171 b 198 -168 206 -171 202 -170 b 112 -83 197 -167 159 -129 b 28 0 66 -38 28 0 b -41 -83 27 0 -4 -37 b -111 -168 -84 -136 -110 -167 b -123 -171 -115 -170 -119 -171 b -135 -168 -127 -171 -131 -170 b -289 -17 -137 -167 -219 -85 l -306 1 l -334 -34 b -379 -76 -369 -76 -369 -76 l -380 -76 b -401 -56 -392 -76 -401 -67 b -399 -47 -401 -53 -400 -50 b -222 168 -396 -41 -227 165 b -217 170 -221 169 -219 170 z',\n        },\n        ornamentTremblement: {\n            x_min: -394,\n            x_max: 394,\n            y_min: -119,\n            y_max: 119,\n            ha: 238,\n            o: 'm -384 170 b -378 171 -382 171 -380 171 b -365 168 -373 171 -368 170 b -279 83 -364 167 -325 129 b -194 0 -233 38 -195 0 l -194 0 b -126 83 -194 0 -163 37 b -55 168 -83 136 -57 167 b -43 171 -52 170 -48 171 b -32 168 -39 171 -35 170 b 54 83 -31 167 8 129 b 139 0 101 38 139 0 b 208 83 139 0 170 37 b 278 168 251 136 276 167 b 290 171 282 170 286 171 b 302 168 294 171 298 170 b 456 17 303 167 385 87 l 473 -1 l 501 34 b 546 76 536 76 536 76 l 547 76 b 567 56 559 76 567 67 b 565 47 567 53 567 50 b 389 -168 563 41 393 -165 b 377 -171 385 -170 381 -171 b 365 -168 373 -171 369 -170 b 279 -83 364 -167 325 -129 b 194 0 233 -38 195 0 l 194 0 b 126 -83 194 0 163 -37 b 55 -168 83 -136 57 -167 b 44 -171 52 -170 48 -171 b 32 -168 39 -171 35 -170 b -54 -83 31 -167 -8 -129 b -139 0 -101 -38 -139 0 l -139 0 b -208 -83 -139 0 -170 -37 b -278 -168 -251 -136 -276 -167 b -290 -171 -282 -170 -286 -171 b -302 -168 -294 -171 -298 -170 b -456 -17 -303 -167 -386 -85 l -473 1 l -501 -34 b -546 -76 -536 -76 -536 -76 l -547 -76 b -567 -56 -559 -76 -567 -67 b -565 -47 -567 -53 -567 -50 b -389 168 -563 -41 -393 165 b -384 170 -388 169 -385 170 z',\n        },\n        ornamentPrecompAppoggTrill: {\n            x_min: -394,\n            x_max: 394,\n            y_min: -119,\n            y_max: 240,\n            ha: 359,\n            o: 'm -556 343 b -547 345 -553 345 -550 345 b -527 331 -539 345 -530 340 b -526 166 -527 330 -526 285 l -526 2 l -495 39 b -429 120 -479 59 -449 96 b -390 167 -408 145 -391 165 b -376 171 -386 170 -381 171 b -365 168 -372 171 -368 170 b -279 83 -364 167 -325 129 b -194 0 -232 38 -194 0 b -125 83 -194 0 -163 37 b -55 168 -82 136 -57 167 b -43 171 -51 170 -47 171 b -31 168 -39 171 -35 170 b 55 83 -30 167 9 129 b 139 0 101 38 139 0 l 139 0 b 208 83 140 0 171 37 b 278 168 251 136 277 167 b 290 171 282 170 286 171 b 302 168 295 171 299 170 b 456 17 304 167 385 87 l 473 -1 l 501 34 b 547 76 536 76 536 76 l 547 76 b 568 56 559 76 568 67 b 566 47 568 53 567 50 b 389 -168 563 41 394 -165 b 377 -171 386 -170 382 -171 b 365 -168 373 -171 369 -170 b 279 -83 364 -167 326 -129 b 195 0 233 -38 195 0 l 195 0 b 126 -83 194 0 164 -37 b 56 -168 83 -136 57 -167 b 44 -171 52 -170 48 -171 b 32 -168 40 -171 36 -170 b -54 -83 31 -167 -8 -129 b -139 0 -100 -38 -138 0 b -207 -83 -139 0 -170 -37 b -278 -168 -250 -136 -276 -167 b -289 -171 -281 -170 -285 -171 b -301 -168 -294 -171 -298 -170 b -455 -17 -303 -167 -400 -71 l -473 1 l -503 -36 b -536 -74 -525 -63 -533 -73 b -547 -78 -539 -77 -543 -78 b -566 -66 -555 -78 -562 -73 l -567 -63 l -568 133 l -568 328 l -566 332 b -556 343 -565 337 -561 341 z',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            x_min: -407,\n            x_max: 407,\n            y_min: -229,\n            y_max: 119,\n            ha: 348,\n            o: 'm -365 170 b -359 171 -363 171 -361 171 b -346 168 -354 171 -349 170 b -260 83 -345 167 -306 129 b -175 0 -214 38 -176 0 l -175 0 b -107 83 -175 0 -144 37 b -36 168 -64 136 -38 167 b -24 171 -33 170 -29 171 b -13 168 -20 171 -16 170 b 73 83 -12 167 27 129 b 158 0 120 38 158 0 b 227 83 158 0 189 37 b 297 168 270 136 295 167 b 309 171 301 170 305 171 b 321 168 313 171 317 170 b 475 17 322 167 404 87 l 492 -1 l 520 34 b 565 76 555 76 555 76 l 566 76 b 586 56 578 76 586 67 b 584 47 586 53 586 50 b 408 -168 582 41 412 -165 b 396 -171 404 -170 400 -171 b 384 -168 392 -171 388 -170 b 298 -83 383 -167 344 -129 b 213 0 252 -38 214 0 b 145 -83 213 0 182 -37 b 74 -168 102 -136 76 -167 b 63 -171 71 -170 67 -171 b 51 -168 58 -171 54 -170 b -35 -83 50 -167 11 -129 b -120 0 -82 -38 -120 0 b -189 -83 -120 0 -151 -37 b -259 -168 -232 -136 -257 -167 b -271 -171 -263 -170 -267 -171 b -283 -168 -275 -171 -279 -170 b -369 -83 -284 -167 -323 -129 b -454 0 -416 -37 -454 0 b -454 0 -454 0 -454 0 b -475 -25 -455 0 -467 -14 b -545 -221 -520 -86 -545 -156 b -533 -296 -545 -247 -541 -272 b -530 -310 -531 -301 -530 -306 b -550 -330 -530 -322 -538 -330 b -573 -306 -562 -330 -567 -325 b -586 -221 -582 -279 -586 -251 b -514 -8 -586 -150 -561 -74 b -462 57 -506 4 -501 9 b -401 132 -444 79 -416 113 b -365 170 -373 166 -370 168 z',\n        },\n        ornamentPrecompSlideTrillBach: {\n            x_min: -407,\n            x_max: 407,\n            y_min: -229,\n            y_max: 186,\n            ha: 415,\n            o: 'm 175 267 b 183 268 178 268 180 268 b 202 256 191 268 199 264 b 204 155 203 254 203 253 l 204 56 l 249 111 b 297 168 278 145 296 167 b 309 171 301 170 305 171 b 321 168 313 171 317 170 b 475 17 322 167 404 87 l 492 -1 l 520 34 b 565 76 555 76 555 76 l 566 76 b 586 56 578 76 586 67 b 584 47 586 53 586 50 b 408 -168 582 41 412 -165 b 396 -171 404 -170 400 -171 b 384 -168 392 -171 388 -170 b 298 -83 383 -167 344 -129 b 213 0 252 -38 214 0 b 213 0 213 0 213 0 b 208 -6 213 0 211 -3 l 204 -11 l 204 -143 b 204 -205 204 -168 204 -188 b 198 -285 204 -289 203 -280 b 183 -291 194 -289 188 -291 b 164 -280 175 -291 168 -287 b 163 -169 163 -277 163 -276 l 162 -62 l 120 -114 b 75 -168 93 -147 76 -167 b 63 -171 71 -170 67 -171 b 51 -168 58 -171 54 -170 b -35 -83 50 -167 11 -129 b -120 0 -82 -38 -120 0 b -189 -83 -120 0 -151 -37 b -259 -168 -232 -136 -257 -167 b -271 -171 -263 -170 -267 -171 b -283 -168 -275 -171 -279 -170 b -369 -83 -284 -167 -323 -129 b -454 0 -416 -37 -454 0 b -454 0 -454 0 -454 0 b -475 -25 -455 0 -467 -14 b -545 -221 -520 -86 -545 -156 b -533 -296 -545 -247 -541 -272 b -530 -310 -531 -301 -530 -306 b -550 -330 -530 -322 -538 -330 b -573 -306 -562 -330 -567 -325 b -586 -221 -582 -279 -586 -251 b -514 -8 -586 -150 -561 -74 b -462 57 -506 4 -501 9 b -401 132 -444 79 -416 113 b -370 168 -383 153 -371 167 b -358 171 -366 170 -362 171 b -346 168 -354 171 -350 170 b -260 83 -345 167 -306 129 b -175 0 -214 38 -176 0 l -175 0 b -107 83 -175 0 -144 37 b -36 168 -64 136 -38 167 b -24 171 -33 170 -29 171 b -13 168 -20 171 -16 170 b 141 17 -11 167 76 81 l 158 0 l 160 2 l 163 5 l 163 128 b 164 255 163 251 163 252 b 175 267 166 260 171 265 z',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            x_min: -407,\n            x_max: 407,\n            y_min: -119,\n            y_max: 229,\n            ha: 348,\n            o: 'm 542 328 b 550 330 545 329 547 330 b 565 324 556 330 561 328 b 586 216 576 312 586 259 b 585 191 586 207 586 199 b 526 25 578 131 559 78 b 462 -57 513 6 509 0 b 401 -132 444 -79 416 -113 b 370 -168 383 -153 371 -167 b 358 -171 366 -170 362 -171 b 346 -168 354 -171 350 -170 b 260 -83 345 -167 306 -129 b 175 0 214 -38 176 0 l 175 0 b 107 -83 175 0 144 -37 b 36 -168 64 -136 38 -167 b 25 -171 33 -170 29 -171 b 13 -168 20 -171 16 -170 b -73 -83 12 -167 -27 -129 b -158 0 -120 -38 -158 0 b -227 -83 -158 0 -189 -37 b -297 -168 -270 -136 -296 -167 b -309 -171 -301 -170 -305 -171 b -321 -168 -313 -171 -317 -170 b -475 -17 -322 -167 -405 -85 l -492 1 l -520 -34 b -565 -76 -555 -76 -555 -76 l -566 -76 b -586 -56 -578 -76 -586 -67 b -584 -47 -586 -53 -586 -50 b -408 168 -582 -41 -412 165 b -396 171 -404 170 -400 171 b -384 168 -392 171 -388 170 b -298 83 -383 167 -344 129 b -213 0 -252 38 -214 0 b -145 83 -213 0 -182 37 b -74 168 -102 136 -76 167 b -62 171 -71 170 -67 171 b -51 168 -58 171 -54 170 b 35 83 -50 167 -11 129 b 120 0 82 38 120 0 b 189 83 120 0 151 37 b 259 168 232 136 257 167 b 271 171 263 170 267 171 b 283 168 275 171 279 170 b 369 83 284 167 323 129 b 454 0 416 37 454 0 b 454 0 454 0 454 0 b 475 25 455 0 467 14 b 545 221 520 86 545 156 b 533 296 545 247 541 272 b 530 310 531 301 530 306 b 542 328 530 319 534 325 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            x_min: -413,\n            x_max: 413,\n            y_min: -119,\n            y_max: 222,\n            ha: 341,\n            o: 'm -530 318 b -522 320 -527 319 -525 320 b -502 299 -511 320 -502 311 b -502 298 -502 299 -502 298 b -509 279 -502 293 -502 293 b -553 109 -538 221 -553 165 b -548 59 -553 92 -551 75 b -521 -20 -544 32 -532 -2 l -519 -22 l -480 25 b -404 118 -459 51 -425 93 b -363 167 -383 144 -365 165 b -350 171 -359 170 -355 171 b -339 168 -346 171 -342 170 b -252 83 -337 167 -298 129 b -168 0 -206 38 -168 0 b -99 83 -167 0 -136 37 b -29 168 -56 136 -30 167 b -17 171 -25 170 -21 171 b -5 168 -13 171 -8 170 b 81 83 -4 167 35 129 b 166 0 128 38 166 0 l 166 0 b 234 83 166 0 197 37 b 305 168 277 136 303 167 b 317 171 308 170 313 171 b 328 168 321 171 325 170 b 482 17 330 167 412 87 l 500 -1 l 528 34 b 573 76 563 76 563 76 l 573 76 b 594 56 585 76 594 67 b 592 47 594 53 594 50 b 416 -168 589 41 420 -165 b 404 -171 412 -170 408 -171 b 392 -168 400 -171 395 -170 b 306 -83 391 -167 352 -129 b 221 0 259 -38 221 0 l 221 0 b 153 -83 221 0 190 -37 b 82 -168 110 -136 84 -167 b 70 -171 79 -170 75 -171 b 58 -168 66 -171 62 -170 b -28 -83 57 -167 19 -129 b -112 0 -74 -38 -112 0 b -181 -83 -113 0 -143 -37 b -251 -168 -224 -136 -250 -167 b -263 -171 -255 -170 -259 -171 b -275 -168 -267 -171 -271 -170 b -429 -17 -277 -167 -374 -71 l -446 1 l -476 -36 b -520 -78 -510 -77 -510 -78 l -521 -78 b -542 -64 -529 -78 -534 -74 b -594 108 -576 -18 -594 43 b -558 274 -594 162 -582 219 b -530 318 -545 304 -537 315 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n            x_min: -413,\n            x_max: 413,\n            y_min: -202,\n            y_max: 222,\n            ha: 424,\n            o: 'm -530 318 b -522 320 -527 319 -525 320 b -502 299 -511 320 -502 311 b -502 298 -502 299 -502 298 b -509 279 -502 293 -502 293 b -553 109 -538 221 -553 165 b -548 59 -553 92 -551 75 b -521 -20 -544 32 -532 -2 l -519 -22 l -480 25 b -404 118 -459 51 -425 93 b -363 167 -383 144 -365 165 b -350 171 -359 170 -355 171 b -339 168 -346 171 -342 170 b -252 83 -337 167 -298 129 b -168 0 -206 38 -168 0 b -99 83 -167 0 -136 37 b -29 168 -56 136 -30 167 b -17 171 -25 170 -21 171 b -5 168 -13 171 -8 170 b 149 17 -3 167 84 81 l 166 0 l 168 2 l 170 5 l 170 128 b 172 255 170 251 170 252 b 191 268 175 263 183 268 b 205 262 196 268 201 266 b 211 155 212 256 211 267 l 212 56 l 257 111 b 305 168 285 145 303 167 b 317 171 308 170 313 171 b 328 168 321 171 325 170 b 482 17 330 167 412 87 l 500 -1 l 528 34 b 573 76 563 76 563 76 l 573 76 b 594 56 585 76 594 67 b 592 47 594 53 594 50 b 416 -168 589 41 420 -165 b 404 -171 412 -170 408 -171 b 392 -168 400 -171 395 -170 b 306 -83 391 -167 352 -129 b 221 0 259 -38 221 0 b 221 0 221 0 221 0 b 216 -6 221 0 219 -3 l 211 -11 l 211 -143 b 211 -205 211 -168 211 -188 b 206 -285 211 -289 211 -280 b 191 -291 202 -289 196 -291 b 172 -280 183 -291 176 -287 b 170 -169 171 -277 171 -276 l 170 -62 l 128 -114 b 82 -168 100 -147 84 -167 b 70 -171 79 -170 75 -171 b 58 -168 66 -171 62 -170 b -28 -83 57 -167 19 -129 b -112 0 -74 -38 -112 0 b -181 -83 -113 0 -143 -37 b -251 -168 -224 -136 -250 -167 b -263 -171 -255 -170 -259 -171 b -275 -168 -267 -171 -271 -170 b -429 -17 -277 -167 -374 -71 l -446 1 l -476 -36 b -520 -78 -510 -77 -510 -78 l -521 -78 b -542 -64 -529 -78 -534 -74 b -594 108 -576 -18 -594 43 b -558 274 -594 162 -582 219 b -530 318 -545 304 -537 315 z',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            x_min: -413,\n            x_max: 413,\n            y_min: -222,\n            y_max: 119,\n            ha: 341,\n            o: 'm -411 170 b -405 171 -409 171 -407 171 b -392 168 -400 171 -395 170 b -306 83 -391 167 -352 129 b -221 0 -259 38 -221 0 l -221 0 b -153 83 -221 0 -190 37 b -82 168 -110 136 -84 167 b -70 171 -79 170 -74 171 b -59 168 -66 171 -62 170 b 28 83 -57 167 -19 129 b 112 0 74 38 112 0 b 181 83 113 0 144 37 b 251 168 224 136 250 167 b 263 171 255 170 259 171 b 275 168 267 171 271 170 b 429 17 277 167 373 72 l 446 -1 l 476 36 b 520 78 510 77 510 78 l 521 78 b 542 64 529 78 534 74 b 594 -109 576 18 594 -43 b 571 -242 594 -152 586 -197 b 537 -314 561 -270 543 -307 b 522 -319 533 -318 527 -319 b 503 -307 514 -319 506 -315 b 501 -300 502 -304 501 -302 b 509 -279 501 -295 503 -290 b 553 -110 538 -221 553 -165 b 544 -38 553 -85 550 -61 b 521 20 539 -18 529 7 l 519 22 l 480 -25 b 404 -118 459 -51 425 -93 b 363 -167 383 -144 365 -165 b 350 -171 359 -170 355 -171 b 338 -168 346 -171 342 -170 b 252 -83 337 -167 299 -129 b 168 0 206 -38 168 0 l 168 0 b 99 -83 167 0 136 -37 b 29 -168 56 -136 30 -167 b 17 -171 25 -170 21 -171 b 5 -168 13 -171 8 -170 b -81 -83 4 -167 -35 -129 b -166 0 -127 -38 -166 0 b -234 -83 -166 0 -197 -37 b -305 -168 -277 -136 -303 -167 b -317 -171 -308 -170 -312 -171 b -329 -168 -321 -171 -325 -170 b -482 -17 -330 -167 -413 -85 l -500 1 l -528 -34 b -573 -76 -563 -76 -563 -76 l -573 -76 b -594 -56 -585 -76 -594 -67 b -592 -47 -594 -53 -594 -50 b -416 168 -589 -41 -420 165 b -411 170 -414 169 -412 170 z',\n        },\n        stringsDownBow: {\n            x_min: -158,\n            x_max: 158,\n            y_min: 0,\n            y_max: 331,\n            ha: 331,\n            o: 'm -215 476 b 2 477 -212 477 -104 477 b 214 476 107 477 212 477 b 226 464 219 474 224 469 b 227 239 227 462 227 350 b 226 13 227 127 227 15 b 206 0 223 5 215 0 b 192 6 201 0 196 2 b 186 83 186 11 186 3 b 186 136 186 98 186 115 l 186 257 l 0 257 l -186 257 l -186 136 b -186 83 -186 115 -186 98 b -192 6 -186 3 -186 11 b -206 0 -196 2 -201 0 b -226 13 -215 0 -223 5 b -227 239 -227 15 -227 127 b -226 464 -227 350 -227 462 b -215 476 -224 469 -219 474 z',\n        },\n        stringsUpBow: {\n            x_min: -103,\n            x_max: 103,\n            y_min: 0,\n            y_max: 260,\n            ha: 260,\n            o: 'm -135 373 b -129 374 -133 374 -131 374 b -110 363 -121 374 -113 370 b -54 220 -109 362 -84 298 b 0 79 -25 143 0 79 b 55 220 0 79 25 143 b 110 363 84 298 109 362 b 128 375 114 371 121 375 b 149 354 138 375 149 367 l 149 348 l 84 180 b 18 10 48 87 19 11 b 0 0 15 3 8 0 b -18 10 -7 0 -15 3 b -148 352 -23 20 -148 348 b -149 354 -149 353 -149 353 b -135 373 -149 363 -144 370 z',\n        },\n        stringsHarmonic: {\n            x_min: -77,\n            x_max: 77,\n            y_min: -77,\n            y_max: 77,\n            ha: 154,\n            o: 'm -18 109 b 1 111 -12 110 -5 111 b 111 0 61 111 111 60 b 107 -28 111 -9 109 -19 b -1 -111 94 -80 47 -111 b -78 -78 -28 -111 -56 -100 b -111 -1 -100 -56 -111 -28 b -18 109 -111 50 -76 99 z m 13 93 b 0 94 9 94 4 94 b -94 0 -53 94 -94 49 b -84 -42 -94 -14 -91 -28 b 0 -94 -67 -77 -33 -94 b 85 -42 34 -94 67 -77 b 94 -1 91 -29 94 -14 b 13 93 94 44 61 87 z',\n        },\n        pluckedSnapPizzicatoAbove: {\n            x_min: -103,\n            x_max: 103,\n            y_min: -103,\n            y_max: 192,\n            ha: 296,\n            o: 'm -8 276 b 0 277 -6 277 -3 277 b 19 264 8 277 16 272 b 20 204 20 261 20 260 l 20 148 l 24 147 b 144 37 80 140 130 94 b 149 0 147 25 149 12 b 37 -144 149 -67 104 -127 b 0 -149 25 -147 12 -149 b -144 -37 -67 -149 -127 -104 b -149 -1 -147 -25 -149 -13 b -24 147 -149 71 -96 137 l -21 148 l -21 204 b -19 264 -21 260 -21 261 b -8 276 -18 269 -13 274 z m -21 50 b -22 105 -21 102 -21 105 b -22 105 -22 105 -22 105 b -76 76 -35 104 -61 90 b -107 1 -97 54 -107 27 b 0 -107 -107 -54 -64 -107 b 107 1 64 -107 107 -54 b 76 76 107 27 97 54 b 21 105 61 90 33 105 b 20 50 21 105 20 86 b 19 -8 20 -3 20 -5 b 0 -21 16 -16 8 -21 b -15 -15 -5 -21 -11 -19 b -21 32 -20 -9 -21 -12 b -21 50 -21 37 -21 43 z',\n        },\n        pluckedSnapPizzicatoBelow: {\n            x_min: -103,\n            x_max: 103,\n            y_min: -103,\n            y_max: 192,\n            ha: 296,\n            o: 'm -8 276 b 0 277 -6 277 -3 277 b 19 264 8 277 16 272 b 20 204 20 261 20 260 l 20 148 l 24 147 b 144 37 80 140 130 94 b 149 0 147 25 149 12 b 37 -144 149 -67 104 -127 b 0 -149 25 -147 12 -149 b -144 -37 -67 -149 -127 -104 b -149 -1 -147 -25 -149 -13 b -24 147 -149 71 -96 137 l -21 148 l -21 204 b -19 264 -21 260 -21 261 b -8 276 -18 269 -13 274 z m -21 50 b -22 105 -21 102 -21 105 b -22 105 -22 105 -22 105 b -76 76 -35 104 -61 90 b -107 1 -97 54 -107 27 b 0 -107 -107 -54 -64 -107 b 107 1 64 -107 107 -54 b 76 76 107 27 97 54 b 21 105 61 90 33 105 b 20 50 21 105 20 86 b 19 -8 20 -3 20 -5 b 0 -21 16 -16 8 -21 b -15 -15 -5 -21 -11 -19 b -21 32 -20 -9 -21 -12 b -21 50 -21 37 -21 43 z',\n        },\n        pluckedLeftHandPizzicato: {\n            x_min: -146,\n            x_max: 146,\n            y_min: -148,\n            y_max: 148,\n            ha: 296,\n            o: 'm -8 212 b 0 213 -6 212 -3 213 b 19 200 8 213 16 208 b 21 109 21 197 21 196 l 21 21 l 107 21 b 143 21 121 21 133 21 b 204 15 205 21 199 20 b 210 0 208 11 210 5 b 198 -19 210 -8 206 -16 b 107 -21 194 -21 193 -21 l 21 -21 l 21 -109 b 21 -145 21 -123 21 -135 b 15 -207 21 -207 20 -202 b 0 -213 11 -211 5 -213 b -19 -200 -8 -213 -16 -208 b -21 -109 -21 -197 -21 -196 l -21 -21 l -107 -21 b -198 -19 -193 -21 -194 -21 b -210 0 -206 -16 -210 -8 b -204 15 -210 5 -208 11 b -143 21 -199 20 -205 21 b -107 21 -133 21 -121 21 l -21 21 l -21 109 b -19 200 -21 196 -21 197 b -8 212 -18 205 -13 210 z',\n        },\n        keyboardPedalPed: {\n            x_min: 0,\n            x_max: 735,\n            y_min: -1,\n            y_max: 470,\n            ha: 471,\n            o: 'm 290 676 b 315 677 299 677 307 677 b 489 611 385 677 445 654 b 547 486 527 573 547 527 b 497 397 547 448 530 414 b 454 387 483 390 468 387 b 368 452 416 387 381 411 b 361 485 363 466 361 477 b 376 503 361 497 366 502 b 392 489 384 503 389 498 b 431 464 396 473 412 464 b 469 476 443 464 457 468 b 489 519 482 486 489 501 b 440 606 489 547 472 582 b 328 645 411 630 366 645 l 323 645 l 315 631 b 269 511 281 573 269 542 b 269 511 269 511 269 511 b 320 422 269 480 280 461 b 349 386 338 404 342 399 b 362 336 357 370 362 354 b 356 298 362 324 360 312 b 284 155 343 254 316 199 b 280 150 282 152 280 150 b 281 150 280 150 280 150 b 286 150 281 150 284 150 b 316 152 296 152 306 152 b 457 100 369 152 418 134 l 462 95 l 481 110 b 501 126 491 118 500 125 b 502 128 502 127 502 127 b 501 135 502 129 502 131 b 498 177 499 149 498 163 b 536 301 498 224 511 266 b 617 367 552 321 596 357 b 645 373 626 371 635 373 b 718 315 677 373 709 349 b 720 296 719 308 720 302 b 695 236 720 273 711 251 b 657 206 691 233 660 208 b 598 162 655 205 623 181 b 577 144 580 148 577 145 b 577 144 577 144 577 144 b 606 85 584 121 597 94 b 652 68 618 74 634 68 b 749 115 685 68 723 85 l 752 119 l 751 126 b 747 165 749 139 747 152 b 890 379 747 250 800 330 b 893 381 892 380 893 380 b 887 389 893 382 891 384 b 620 548 823 467 728 523 b 598 567 602 552 598 556 b 615 583 598 578 604 583 b 626 582 618 583 622 582 b 1046 265 831 542 999 416 b 1058 186 1054 238 1058 211 b 896 -1 1058 82 991 -1 b 874 1 889 -1 882 0 b 768 78 830 7 790 35 b 766 81 767 80 767 81 b 760 74 765 81 764 79 b 624 0 725 27 674 0 b 583 6 610 0 596 2 b 514 86 549 17 532 37 l 511 93 l 508 91 b 452 46 506 90 481 69 b 389 0 394 0 395 1 l 389 0 b 372 16 380 0 375 5 b 267 104 358 68 313 104 b 250 102 261 104 256 103 l 242 100 l 232 88 b 154 2 200 50 159 4 b 147 0 152 0 149 0 b 131 16 138 0 131 7 b 132 21 131 18 131 20 b 135 32 132 23 134 27 b 220 129 149 74 178 107 b 244 154 229 134 229 134 b 300 273 282 204 300 243 b 264 328 300 293 294 302 b 210 426 235 354 216 389 b 209 444 209 431 209 438 b 278 633 209 491 231 552 l 285 644 l 282 644 b 273 643 281 644 277 643 b 57 466 161 627 72 555 b 55 449 56 461 55 454 b 72 400 55 426 62 405 b 94 395 79 396 87 395 b 152 457 123 395 151 421 b 168 477 153 471 158 477 b 184 450 181 477 184 471 b 184 449 184 450 184 450 b 83 315 183 373 142 318 b 78 315 81 315 79 315 b 0 416 29 315 0 352 l 0 417 b 290 676 0 548 130 664 z m 922 340 b 917 345 919 344 919 345 b 910 340 916 345 914 344 b 820 164 853 299 820 232 b 824 123 820 150 821 137 b 886 32 833 77 859 40 b 892 32 888 32 890 32 b 957 120 915 32 944 70 b 965 187 963 142 965 164 b 922 340 965 238 951 290 z m 625 318 b 618 319 623 319 620 319 b 602 315 613 319 608 318 b 578 275 597 313 585 293 b 566 208 570 257 566 231 b 568 186 566 200 567 193 b 569 180 568 182 568 180 b 572 181 570 180 570 180 b 626 223 576 185 604 206 b 654 248 649 241 650 241 b 660 272 658 256 660 264 b 625 318 660 293 646 314 z',\n        },\n        keyboardPedalUp: {\n            x_min: 0,\n            x_max: 409,\n            y_min: 61,\n            y_max: 470,\n            ha: 409,\n            o: 'm 282 676 b 293 677 285 677 288 677 b 312 675 300 677 308 676 b 356 615 340 667 356 644 b 333 565 356 594 352 583 b 311 525 318 549 311 537 b 316 504 311 518 313 511 b 351 481 323 489 337 481 b 365 483 356 481 361 482 b 397 540 389 492 397 506 b 446 607 397 577 414 601 b 460 609 450 608 455 609 b 521 546 496 609 521 578 b 503 503 521 531 516 516 b 450 484 489 489 477 485 b 423 481 435 484 431 484 b 393 440 404 475 393 457 b 411 407 393 427 399 415 b 436 398 420 401 428 398 b 478 422 449 398 462 406 b 524 445 495 438 506 444 b 527 445 525 445 526 445 b 589 382 563 445 589 415 b 583 355 589 373 587 364 b 527 321 572 333 552 321 l 527 321 b 478 343 506 321 495 326 b 437 366 461 360 450 366 b 429 366 435 366 432 366 b 393 326 407 361 393 345 b 398 305 393 319 395 312 b 450 281 407 287 419 282 b 503 262 478 280 489 276 b 521 219 516 250 521 234 b 460 156 521 187 495 156 b 446 157 455 156 451 156 b 397 224 414 164 397 188 b 369 280 397 257 389 272 b 351 284 363 283 357 284 b 312 250 332 284 317 271 b 311 240 311 246 311 243 b 333 200 311 227 317 216 b 356 151 352 181 356 171 l 356 150 b 295 88 356 113 327 88 b 255 102 281 88 268 92 b 233 150 240 114 233 132 b 244 186 233 163 236 175 b 256 200 245 188 250 194 b 279 240 272 216 279 227 b 277 250 279 243 278 246 b 238 284 272 271 257 284 b 220 280 232 284 226 283 b 193 224 200 272 193 257 b 143 157 193 188 175 164 b 130 156 139 156 134 156 b 68 218 95 156 68 185 b 77 251 68 229 71 240 b 139 281 90 272 106 280 b 171 286 158 281 161 282 b 185 296 178 288 180 290 b 196 326 193 305 196 316 b 169 363 196 342 186 356 b 152 366 163 365 157 366 b 112 343 139 366 128 359 b 98 331 106 338 100 333 b 63 320 87 324 75 320 b 2 367 35 320 9 338 b 0 383 1 372 0 377 b 62 445 0 417 28 445 b 78 443 67 445 73 444 b 111 422 91 440 98 435 b 151 398 128 406 140 398 b 153 398 152 398 152 398 b 196 439 180 401 196 418 b 191 460 196 446 194 453 b 139 484 182 478 169 484 b 87 503 112 485 101 489 b 68 546 74 516 68 531 b 130 609 68 578 94 609 b 144 607 134 609 139 608 b 193 540 175 601 193 577 b 224 483 193 506 200 492 b 238 481 229 482 233 481 b 273 504 253 481 266 489 b 279 524 277 511 279 518 b 256 565 279 537 272 549 b 239 587 246 575 243 579 b 232 615 234 596 232 605 b 282 676 232 643 252 669 z m 307 446 b 294 448 303 447 299 448 b 229 382 258 448 229 417 b 237 353 229 373 232 363 b 295 317 249 329 272 317 b 353 353 318 317 340 329 b 360 382 358 362 360 372 b 307 446 360 412 339 440 z',\n        },\n        pictChokeCymbal: {\n            x_min: 0,\n            x_max: 158,\n            y_min: -146,\n            y_max: 146,\n            ha: 292,\n            o: 'm 91 210 b 100 210 94 210 97 210 b 222 98 154 210 205 164 b 227 52 225 83 227 67 b 62 -196 227 -39 165 -135 b 31 -210 46 -206 37 -210 b 24 -205 28 -210 26 -209 b 22 -200 23 -204 22 -202 b 34 -187 22 -196 26 -192 b 123 -53 90 -156 123 -103 b 105 7 123 -32 117 -11 l 103 10 l 94 10 b 5 77 54 12 18 39 b 0 110 2 88 0 99 b 91 210 0 160 37 204 z',\n        },\n        arrowheadBlackUp: {\n            x_min: -7,\n            x_max: 207,\n            y_min: -8,\n            y_max: 314,\n            ha: 321,\n            o: 'm 135 450 b 143 451 138 451 140 451 b 163 443 151 451 159 448 b 174 412 168 437 168 437 b 287 130 197 308 239 203 b 298 105 297 115 298 113 b 273 80 298 89 287 80 b 256 85 267 80 261 81 b 155 115 225 102 184 115 l 152 115 l 149 106 b 142 82 148 101 145 90 b 135 48 137 68 135 57 b 150 10 135 35 140 25 b 153 -1 152 6 153 2 b 145 -11 153 -7 150 -11 b 136 -8 142 -11 139 -10 b 96 60 109 11 96 33 b 107 106 96 74 100 89 b 109 111 108 109 109 110 b 108 112 109 112 108 112 b 102 111 107 112 105 112 b 32 85 77 106 54 97 b 14 80 26 81 20 80 b -10 105 1 80 -10 89 b 0 130 -10 113 -9 115 b 113 410 48 203 90 306 b 124 443 120 438 119 437 b 135 450 126 445 132 449 z',\n        },\n        arrowheadBlackDown: {\n            x_min: -7,\n            x_max: 207,\n            y_min: 0,\n            y_max: 321,\n            ha: 321,\n            o: 'm 138 460 b 143 462 139 461 141 462 b 170 443 149 462 158 455 b 192 392 185 427 192 411 b 180 345 192 378 188 362 b 178 340 179 343 178 341 b 180 339 178 340 179 339 b 187 341 181 339 183 340 b 255 366 211 346 234 354 b 273 372 261 370 267 372 b 298 346 287 372 298 362 b 287 322 298 338 297 337 b 174 40 239 248 197 143 b 163 9 168 14 168 15 b 144 0 159 3 151 0 b 124 9 136 0 128 3 b 115 33 120 15 119 15 b 0 322 92 140 49 246 b -10 346 -9 337 -10 338 b 14 372 -10 362 0 372 b 32 366 20 372 26 370 b 132 337 62 349 104 337 l 132 337 l 136 337 l 138 345 b 145 369 139 350 143 361 b 152 403 150 384 152 394 b 138 441 152 416 148 426 b 133 453 135 446 133 449 b 138 460 133 456 135 458 z',\n        },\n    },\n    fontFamily: 'GonvilleSmufl',\n    resolution: 1000,\n    generatedOn: '2022-12-15T17:35:56.890Z',\n};\n","/**\n * The Gonville font was created by Simon Tatham.\n * https://www.chiark.greenend.org.uk/~sgtatham/gonville/\n */\nexport const GonvilleMetrics = {\n    name: 'Gonville',\n    smufl: true,\n    stave: {\n        padding: 12,\n        endPaddingMax: 10,\n        endPaddingMin: 5,\n        unalignedNotePadding: 10,\n    },\n    accidental: {\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    clef: {\n        default: {\n            point: 40,\n            width: 26,\n        },\n        small: {\n            point: 32,\n            width: 20,\n        },\n        annotations: {\n            '8va': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 20,\n                    treble: {\n                        line: -1.2,\n                        shiftX: 11,\n                    },\n                },\n                small: {\n                    point: 18,\n                    treble: {\n                        line: -0.4,\n                        shiftX: 8,\n                    },\n                },\n            },\n            '8vb': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 20,\n                    treble: {\n                        line: 6.3,\n                        shiftX: 10,\n                    },\n                    bass: {\n                        line: 4,\n                        shiftX: 1,\n                    },\n                },\n                small: {\n                    point: 18,\n                    treble: {\n                        line: 5.8,\n                        shiftX: 6,\n                    },\n                    bass: {\n                        line: 3.5,\n                        shiftX: 0.5,\n                    },\n                },\n            },\n        },\n        // May not need these anymore\n        lineCount: {\n            '8': { point: 55, shiftY: 14 },\n            '7': { point: 47, shiftY: 8 },\n            '6': { point: 40, shiftY: 1 },\n            '5': { point: 30, shiftY: -6 },\n            '4': { point: 23, shiftY: -12 },\n        },\n    },\n    parenthesis: {\n        default: {\n            point: 39,\n            width: 7,\n        },\n        gracenote: {\n            point: (39 * 3) / 5,\n            width: 3,\n        },\n    },\n    pedalMarking: {\n        up: {\n            point: 40,\n        },\n        down: {\n            point: 40,\n        },\n    },\n    // These are for numeric digits, such as in time signatures\n    digits: {\n        point: 40,\n        tupletPoint: 28,\n    },\n    // articulation: {\n    // },\n    tremolo: {\n        default: {\n            point: 25,\n            spacing: 4,\n            offsetYStemUp: -7,\n            offsetYStemDown: 7,\n            offsetXStemUp: 9,\n            offsetXStemDown: -0.5,\n        },\n        grace: {\n            point: 15,\n            spacing: 4,\n            offsetYStemUp: -7,\n            offsetYStemDown: 7,\n            offsetXStemUp: 6.5,\n            offsetXStemDown: -0.5,\n        },\n    },\n    staveRepetition: {\n        symbolText: {\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 0,\n        },\n    },\n    // noteHead: {\n    // },\n    stem: {\n        heightAdjustmentForFlag: -3,\n        // These are stem (Y) offsets to the note heads. To shift the\n        // noteheads (x-position) themselves, see glyphs.notehead.custom.\n        noteHead: {\n            noteheadTriangleUpHalf: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpBlack: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpWhole: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXHalf: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXBlack: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXWhole: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadHalf: {\n                offsetYBaseStemUp: -1.5,\n                offsetYBaseStemDown: 1.5,\n            },\n            noteheadBlack: {\n                offsetYBaseStemUp: -1.5,\n                offsetYBaseStemDown: 1.5,\n            },\n            noteheadSquareWhite: {\n                offsetYBaseStemDown: -5,\n                offsetYBaseStemUp: 5,\n            },\n        },\n    },\n    stringNumber: {\n        verticalPadding: 8,\n        stemPadding: 2,\n        leftPadding: 5,\n        rightPadding: 6,\n    },\n    glyphs: {\n        flag: {\n            shiftX: -0.08,\n            flag8thDown: {\n                shiftX: -0.16,\n            },\n            flag16thDown: {\n                shiftX: -0.16,\n            },\n            flag32ndDown: {\n                shiftX: -0.16,\n                shiftY: 9,\n            },\n            flag64thDown: {\n                shiftX: -0.16,\n                shiftY: 13,\n            },\n            flag128thDown: {\n                shiftX: -0.16,\n                shiftY: 22,\n            },\n            flag32ndUp: {\n                shiftY: -9,\n            },\n            flag64thUp: {\n                shiftY: -13,\n            },\n            flag128thUp: {\n                shiftY: -22,\n            },\n        },\n        textNote: {\n            point: 40,\n            default: {},\n            ornamentTrill: {\n                shiftX: -5,\n                shiftY: 4,\n            },\n        },\n        noteHead: {\n            minPadding: 2,\n        },\n        chordSymbol: {\n            global: {\n                superscriptOffset: -400,\n                subscriptOffset: 300,\n                kerningOffset: -250,\n                lowerKerningText: ['D', 'F', 'P', 'T', 'V', 'Y'],\n                upperKerningText: ['A', 'L'],\n                spacing: 100,\n                superSubRatio: 0.66,\n            },\n            csymDiminished: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymHalfDiminished: {\n                scale: 0.8,\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymAugmented: {\n                scale: 1,\n                leftSideBearing: 0,\n                advanceWidth: 530,\n                yOffset: 0,\n            },\n            csymParensLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 155,\n                yOffset: 250,\n            },\n            csymParensRightTall: {\n                scale: 0.8,\n                leftSideBearing: -40,\n                advanceWidth: 189,\n                yOffset: 250,\n            },\n            csymBracketLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 328,\n                yOffset: 0,\n            },\n            csymBracketRightTall: {\n                scale: 0.8,\n                leftSideBearing: 1,\n                advanceWidth: 600,\n                yOffset: 0,\n            },\n            csymParensLeftVeryTall: {\n                scale: 0.9,\n                leftSideBearing: 0,\n                advanceWidth: 121,\n                yOffset: 350,\n            },\n            csymParensRightVeryTall: {\n                scale: 0.9,\n                leftSideBearing: 50,\n                advanceWidth: 111,\n                yOffset: 350,\n            },\n            csymDiagonalArrangementSlash: {\n                scale: 0.6,\n                leftSideBearing: -1,\n                advanceWidth: 990,\n                yOffset: 0,\n            },\n            csymMinor: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 482,\n                yOffset: 0,\n            },\n            csymMajorSeventh: {\n                scale: 0.9,\n                leftSideBearing: 200,\n                yOffset: 0,\n                advanceWidth: 600,\n            },\n            accidentalSharp: {\n                scale: 0.75,\n                leftSideBearing: 40,\n                advanceWidth: 250,\n                yOffset: -402,\n            },\n            accidentalFlat: {\n                scale: 0.95,\n                leftSideBearing: -50,\n                advanceWidth: 208,\n                yOffset: -184,\n            },\n        },\n        jazzOrnaments: {\n            brassScoop: {\n                scale: 1.0,\n                xOffset: -12,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 15,\n            },\n            brassDoitMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 22,\n            },\n            brassFallLipShort: {\n                scale: 1.0,\n                xOffset: 17,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 15,\n            },\n            brassLiftMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 5,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassFallRoughMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 28,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassBend: {\n                scale: 1.0,\n                xOffset: 2,\n                yOffset: -8,\n                stemUpYOffset: 24,\n                reportedWidth: 5,\n            },\n            brassMuteClosed: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -9,\n                stemUpYOffset: 24,\n                reportedWidth: 5,\n            },\n            brassMuteOpen: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -7,\n                stemUpYOffset: 25,\n                reportedWidth: 5,\n            },\n            brassFlip: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 7,\n                reportedWidth: 5,\n            },\n            brassJazzTurn: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -4,\n                stemUpYOffset: 10,\n                reportedWidth: 28,\n            },\n            brassSmear: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 9,\n                reportedWidth: 5,\n            },\n        },\n        tremolo: {\n            default: {\n                shiftY: -10,\n            },\n            grace: {\n                shiftY: -5,\n            },\n        },\n        tuplet: {\n            noteHeadOffset: 20,\n            stemOffset: 10,\n            bottomLine: 4,\n            topModifierOffset: 15,\n        },\n    },\n};\n","export const PetalumaScriptFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 250,\n            y_min: 0,\n            y_max: 500,\n            ha: 500,\n            leftSideBearing: 0,\n            advanceWidth: 250,\n        },\n        '0': {\n            x_min: 33,\n            x_max: 534,\n            y_min: -13,\n            y_max: 751,\n            ha: 764,\n            leftSideBearing: 33,\n            advanceWidth: 570,\n        },\n        '1': {\n            x_min: 48,\n            x_max: 235,\n            y_min: -17,\n            y_max: 734,\n            ha: 751,\n            leftSideBearing: 48,\n            advanceWidth: 286,\n        },\n        '2': {\n            x_min: 56,\n            x_max: 571,\n            y_min: -19,\n            y_max: 741,\n            ha: 760,\n            leftSideBearing: 56,\n            advanceWidth: 626,\n        },\n        '3': {\n            x_min: 50,\n            x_max: 528,\n            y_min: -7,\n            y_max: 731,\n            ha: 738,\n            leftSideBearing: 50,\n            advanceWidth: 589,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 564,\n            y_min: -13,\n            y_max: 743,\n            ha: 756,\n            leftSideBearing: 38,\n            advanceWidth: 614,\n        },\n        '5': {\n            x_min: 42,\n            x_max: 601,\n            y_min: -34,\n            y_max: 743,\n            ha: 777,\n            leftSideBearing: 42,\n            advanceWidth: 648,\n        },\n        '6': {\n            x_min: 47,\n            x_max: 606,\n            y_min: -16,\n            y_max: 743,\n            ha: 759,\n            leftSideBearing: 47,\n            advanceWidth: 667,\n        },\n        '7': {\n            x_min: 47,\n            x_max: 567,\n            y_min: 5,\n            y_max: 739,\n            ha: 734,\n            leftSideBearing: 0,\n            advanceWidth: 615,\n        },\n        '8': {\n            x_min: 40,\n            x_max: 541,\n            y_min: -15,\n            y_max: 752,\n            ha: 767,\n            leftSideBearing: 40,\n            advanceWidth: 585,\n        },\n        '9': {\n            x_min: 40,\n            x_max: 537,\n            y_min: -52,\n            y_max: 736,\n            ha: 788,\n            leftSideBearing: 40,\n            advanceWidth: 592,\n        },\n        '!': {\n            x_min: 49,\n            x_max: 180,\n            y_min: -7,\n            y_max: 761,\n            ha: 768,\n            leftSideBearing: 49,\n            advanceWidth: 230,\n        },\n        '\"': {\n            x_min: 39,\n            x_max: 304,\n            y_min: 596,\n            y_max: 804,\n            ha: 208,\n            leftSideBearing: 39,\n            advanceWidth: 353,\n        },\n        '#': {\n            x_min: 33,\n            x_max: 599,\n            y_min: -8,\n            y_max: 765,\n            ha: 773,\n            leftSideBearing: 33,\n            advanceWidth: 648,\n        },\n        $: {\n            x_min: 53,\n            x_max: 495,\n            y_min: -111,\n            y_max: 823,\n            ha: 934,\n            leftSideBearing: 53,\n            advanceWidth: 560,\n        },\n        '%': {\n            x_min: 35,\n            x_max: 656,\n            y_min: -128,\n            y_max: 808,\n            ha: 936,\n            leftSideBearing: 35,\n            advanceWidth: 711,\n        },\n        '&': {\n            x_min: 53,\n            x_max: 441,\n            y_min: -3,\n            y_max: 753,\n            ha: 756,\n            leftSideBearing: 53,\n            advanceWidth: 500,\n        },\n        \"'\": {\n            x_min: 43,\n            x_max: 161,\n            y_min: 590,\n            y_max: 811,\n            ha: 221,\n            leftSideBearing: 43,\n            advanceWidth: 217,\n        },\n        '(': {\n            x_min: 41,\n            x_max: 311,\n            y_min: -36,\n            y_max: 845,\n            ha: 881,\n            leftSideBearing: 41,\n            advanceWidth: 308,\n        },\n        ')': {\n            x_min: -8,\n            x_max: 257,\n            y_min: -21,\n            y_max: 852,\n            ha: 873,\n            leftSideBearing: -8,\n            advanceWidth: 280,\n        },\n        '*': {\n            x_min: 59,\n            x_max: 539,\n            y_min: 175,\n            y_max: 589,\n            ha: 414,\n            leftSideBearing: 59,\n            advanceWidth: 601,\n        },\n        '+': {\n            x_min: 33,\n            x_max: 361,\n            y_min: 180,\n            y_max: 587,\n            ha: 407,\n            leftSideBearing: 33,\n            advanceWidth: 400,\n        },\n        ',': {\n            x_min: 15,\n            x_max: 176,\n            y_min: -129,\n            y_max: 92,\n            ha: 221,\n            leftSideBearing: 15,\n            advanceWidth: 205,\n        },\n        '-': {\n            x_min: 40,\n            x_max: 380,\n            y_min: 317,\n            y_max: 452,\n            ha: 135,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '.': {\n            x_min: 48,\n            x_max: 185,\n            y_min: -56,\n            y_max: 84,\n            ha: 140,\n            leftSideBearing: 48,\n            advanceWidth: 227,\n        },\n        '/': {\n            x_min: -58,\n            x_max: 654,\n            y_min: -122,\n            y_max: 844,\n            ha: 966,\n            leftSideBearing: -58,\n            advanceWidth: 626,\n        },\n        ':': {\n            x_min: 65,\n            x_max: 225,\n            y_min: 97,\n            y_max: 536,\n            ha: 439,\n            leftSideBearing: 65,\n            advanceWidth: 302,\n        },\n        ';': {\n            x_min: 13,\n            x_max: 295,\n            y_min: -139,\n            y_max: 536,\n            ha: 675,\n            leftSideBearing: 13,\n            advanceWidth: 334,\n        },\n        '<': {\n            x_min: 28,\n            x_max: 438,\n            y_min: -1,\n            y_max: 607,\n            ha: 608,\n            leftSideBearing: 28,\n            advanceWidth: 475,\n        },\n        '=': {\n            x_min: 40,\n            x_max: 383,\n            y_min: 199.9598640852289,\n            y_max: 541,\n            ha: 341.0401359147711,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '>': {\n            x_min: 35,\n            x_max: 421,\n            y_min: 28,\n            y_max: 632,\n            ha: 604,\n            leftSideBearing: 35,\n            advanceWidth: 466,\n        },\n        '?': {\n            x_min: 45,\n            x_max: 548,\n            y_min: -17,\n            y_max: 767,\n            ha: 784,\n            leftSideBearing: 45,\n            advanceWidth: 592,\n        },\n        '@': {\n            x_min: 51,\n            x_max: 730,\n            y_min: -78,\n            y_max: 753,\n            ha: 831,\n            leftSideBearing: 51,\n            advanceWidth: 781,\n        },\n        A: {\n            x_min: 37,\n            x_max: 554,\n            y_min: -4,\n            y_max: 746,\n            ha: 750,\n            leftSideBearing: 37,\n            advanceWidth: 617,\n        },\n        B: {\n            x_min: 37,\n            x_max: 532,\n            y_min: 3,\n            y_max: 783,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 579,\n        },\n        C: {\n            x_min: 37,\n            x_max: 583,\n            y_min: -3,\n            y_max: 775,\n            ha: 778,\n            leftSideBearing: 37,\n            advanceWidth: 623,\n        },\n        D: {\n            x_min: 50,\n            x_max: 530,\n            y_min: -15,\n            y_max: 749,\n            ha: 764,\n            leftSideBearing: 50,\n            advanceWidth: 579,\n        },\n        E: {\n            x_min: 45,\n            x_max: 531,\n            y_min: -1,\n            y_max: 743,\n            ha: 744,\n            leftSideBearing: 45,\n            advanceWidth: 585,\n        },\n        F: {\n            x_min: 45,\n            x_max: 459,\n            y_min: 23,\n            y_max: 727,\n            ha: 704,\n            leftSideBearing: 45,\n            advanceWidth: 510,\n        },\n        G: {\n            x_min: 31,\n            x_max: 577,\n            y_min: -8,\n            y_max: 733,\n            ha: 741,\n            leftSideBearing: 31,\n            advanceWidth: 611,\n        },\n        H: {\n            x_min: 37,\n            x_max: 493,\n            y_min: -22,\n            y_max: 758,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 535,\n        },\n        I: {\n            x_min: 47,\n            x_max: 501,\n            y_min: -3,\n            y_max: 731,\n            ha: 734,\n            leftSideBearing: 47,\n            advanceWidth: 541,\n        },\n        J: {\n            x_min: 33,\n            x_max: 531,\n            y_min: -23,\n            y_max: 725,\n            ha: 748,\n            leftSideBearing: 33,\n            advanceWidth: 573,\n        },\n        K: {\n            x_min: 43,\n            x_max: 505,\n            y_min: -10,\n            y_max: 740,\n            ha: 750,\n            leftSideBearing: 43,\n            advanceWidth: 560,\n        },\n        L: {\n            x_min: 49,\n            x_max: 457,\n            y_min: -2,\n            y_max: 746,\n            ha: 748,\n            leftSideBearing: 49,\n            advanceWidth: 510,\n        },\n        M: {\n            x_min: 35,\n            x_max: 699,\n            y_min: 1,\n            y_max: 744,\n            ha: 743,\n            leftSideBearing: 35,\n            advanceWidth: 743,\n        },\n        N: {\n            x_min: 34,\n            x_max: 533,\n            y_min: -17,\n            y_max: 761,\n            ha: 778,\n            leftSideBearing: 34,\n            advanceWidth: 579,\n        },\n        O: {\n            x_min: 41,\n            x_max: 608,\n            y_min: -5,\n            y_max: 735,\n            ha: 740,\n            leftSideBearing: 41,\n            advanceWidth: 667,\n        },\n        P: {\n            x_min: 53,\n            x_max: 451,\n            y_min: -18,\n            y_max: 735,\n            ha: 753,\n            leftSideBearing: 53,\n            advanceWidth: 497,\n        },\n        Q: {\n            x_min: 40,\n            x_max: 599,\n            y_min: -67,\n            y_max: 744,\n            ha: 811,\n            leftSideBearing: 40,\n            advanceWidth: 648,\n        },\n        R: {\n            x_min: 39,\n            x_max: 487,\n            y_min: 16,\n            y_max: 735,\n            ha: 719,\n            leftSideBearing: 39,\n            advanceWidth: 535,\n        },\n        S: {\n            x_min: 35,\n            x_max: 552,\n            y_min: -47,\n            y_max: 708,\n            ha: 755,\n            leftSideBearing: 35,\n            advanceWidth: 604,\n        },\n        T: {\n            x_min: 26,\n            x_max: 656,\n            y_min: -13,\n            y_max: 718,\n            ha: 731,\n            leftSideBearing: 26,\n            advanceWidth: 705,\n        },\n        U: {\n            x_min: 41,\n            x_max: 518,\n            y_min: -20,\n            y_max: 748,\n            ha: 768,\n            leftSideBearing: 41,\n            advanceWidth: 567,\n        },\n        V: {\n            x_min: 47,\n            x_max: 509,\n            y_min: -26,\n            y_max: 744,\n            ha: 770,\n            leftSideBearing: 47,\n            advanceWidth: 567,\n        },\n        W: {\n            x_min: 44,\n            x_max: 789,\n            y_min: -35,\n            y_max: 720,\n            ha: 755,\n            leftSideBearing: 44,\n            advanceWidth: 833,\n        },\n        X: {\n            x_min: 63,\n            x_max: 635,\n            y_min: -10,\n            y_max: 745,\n            ha: 755,\n            leftSideBearing: 63,\n            advanceWidth: 680,\n        },\n        Y: {\n            x_min: 43,\n            x_max: 503,\n            y_min: -21,\n            y_max: 734,\n            ha: 755,\n            leftSideBearing: 43,\n            advanceWidth: 541,\n        },\n        Z: {\n            x_min: 42,\n            x_max: 584,\n            y_min: -10,\n            y_max: 739,\n            ha: 749,\n            leftSideBearing: 42,\n            advanceWidth: 629,\n        },\n        '[': {\n            x_min: 46,\n            x_max: 346,\n            y_min: -150,\n            y_max: 884,\n            ha: 1034,\n            leftSideBearing: 46,\n            advanceWidth: 291,\n        },\n        '\\\\': {\n            x_min: 20,\n            x_max: 616,\n            y_min: -100,\n            y_max: 797,\n            ha: 897,\n            leftSideBearing: 20,\n            advanceWidth: 645,\n        },\n        ']': {\n            x_min: -76,\n            x_max: 226,\n            y_min: -150,\n            y_max: 881,\n            ha: 1031,\n            leftSideBearing: -76,\n            advanceWidth: 297,\n        },\n        '^': {\n            x_min: 43,\n            x_max: 437,\n            y_min: 517,\n            y_max: 812,\n            ha: 295,\n            leftSideBearing: 43,\n            advanceWidth: 478,\n        },\n        _: {\n            x_min: 29,\n            x_max: 563,\n            y_min: -110,\n            y_max: -1,\n            ha: 109,\n            leftSideBearing: 29,\n            advanceWidth: 598,\n        },\n        '`': {\n            x_min: 54,\n            x_max: 321,\n            y_min: 540,\n            y_max: 747,\n            ha: 207,\n            leftSideBearing: 54,\n            advanceWidth: 368,\n        },\n        a: {\n            x_min: 20,\n            x_max: 447,\n            y_min: -17,\n            y_max: 495,\n            ha: 512,\n            leftSideBearing: 20,\n            advanceWidth: 494,\n        },\n        b: {\n            x_min: 37,\n            x_max: 466,\n            y_min: -27,\n            y_max: 770,\n            ha: 797,\n            leftSideBearing: 37,\n            advanceWidth: 510,\n        },\n        c: {\n            x_min: 35,\n            x_max: 456,\n            y_min: -9,\n            y_max: 507,\n            ha: 516,\n            leftSideBearing: 35,\n            advanceWidth: 460,\n        },\n        d: {\n            x_min: 45,\n            x_max: 520,\n            y_min: -15,\n            y_max: 764,\n            ha: 779,\n            leftSideBearing: 45,\n            advanceWidth: 560,\n        },\n        e: {\n            x_min: 33,\n            x_max: 370,\n            y_min: -5,\n            y_max: 501,\n            ha: 506,\n            leftSideBearing: 33,\n            advanceWidth: 397,\n        },\n        f: {\n            x_min: 35,\n            x_max: 411,\n            y_min: -13,\n            y_max: 695,\n            ha: 708,\n            leftSideBearing: 35,\n            advanceWidth: 453,\n        },\n        g: {\n            x_min: 33,\n            x_max: 551,\n            y_min: -257,\n            y_max: 505,\n            ha: 762,\n            leftSideBearing: 33,\n            advanceWidth: 611,\n        },\n        h: {\n            x_min: 32,\n            x_max: 458,\n            y_min: -29,\n            y_max: 743,\n            ha: 772,\n            leftSideBearing: 32,\n            advanceWidth: 491,\n        },\n        i: {\n            x_min: 45,\n            x_max: 167,\n            y_min: -13,\n            y_max: 631,\n            ha: 644,\n            leftSideBearing: 45,\n            advanceWidth: 220,\n        },\n        j: {\n            x_min: -127,\n            x_max: 261,\n            y_min: -231,\n            y_max: 601,\n            ha: 832,\n            leftSideBearing: -127,\n            advanceWidth: 308,\n        },\n        k: {\n            x_min: 39,\n            x_max: 443,\n            y_min: -3,\n            y_max: 700,\n            ha: 703,\n            leftSideBearing: 39,\n            advanceWidth: 497,\n        },\n        l: {\n            x_min: 58,\n            x_max: 168,\n            y_min: -8,\n            y_max: 686,\n            ha: 694,\n            leftSideBearing: 58,\n            advanceWidth: 227,\n        },\n        m: {\n            x_min: 39,\n            x_max: 688,\n            y_min: -14,\n            y_max: 501,\n            ha: 515,\n            leftSideBearing: 39,\n            advanceWidth: 718,\n        },\n        n: {\n            x_min: 45,\n            x_max: 491,\n            y_min: -32,\n            y_max: 512,\n            ha: 544,\n            leftSideBearing: 45,\n            advanceWidth: 541,\n        },\n        o: {\n            x_min: 41,\n            x_max: 424,\n            y_min: -12,\n            y_max: 493,\n            ha: 505,\n            leftSideBearing: 41,\n            advanceWidth: 447,\n        },\n        p: {\n            x_min: 25,\n            x_max: 529,\n            y_min: -260,\n            y_max: 500,\n            ha: 760,\n            leftSideBearing: 25,\n            advanceWidth: 573,\n        },\n        q: {\n            x_min: 53,\n            x_max: 603,\n            y_min: -235,\n            y_max: 514,\n            ha: 749,\n            leftSideBearing: 53,\n            advanceWidth: 623,\n        },\n        r: {\n            x_min: 32,\n            x_max: 407,\n            y_min: -7,\n            y_max: 492,\n            ha: 499,\n            leftSideBearing: 32,\n            advanceWidth: 460,\n        },\n        s: {\n            x_min: 49,\n            x_max: 416,\n            y_min: -12,\n            y_max: 519,\n            ha: 531,\n            leftSideBearing: 49,\n            advanceWidth: 460,\n        },\n        t: {\n            x_min: 32,\n            x_max: 442,\n            y_min: -5,\n            y_max: 684,\n            ha: 689,\n            leftSideBearing: 32,\n            advanceWidth: 469,\n        },\n        u: {\n            x_min: 41,\n            x_max: 487,\n            y_min: -5,\n            y_max: 507,\n            ha: 512,\n            leftSideBearing: 41,\n            advanceWidth: 510,\n        },\n        v: {\n            x_min: 16,\n            x_max: 441,\n            y_min: -20,\n            y_max: 542,\n            ha: 562,\n            leftSideBearing: 16,\n            advanceWidth: 456,\n        },\n        w: {\n            x_min: 39,\n            x_max: 639,\n            y_min: -22,\n            y_max: 505,\n            ha: 527,\n            leftSideBearing: 39,\n            advanceWidth: 661,\n        },\n        x: {\n            x_min: 15,\n            x_max: 505,\n            y_min: -39,\n            y_max: 539,\n            ha: 578,\n            leftSideBearing: 15,\n            advanceWidth: 541,\n        },\n        y: {\n            x_min: -98,\n            x_max: 501,\n            y_min: -242,\n            y_max: 511,\n            ha: 753,\n            leftSideBearing: -98,\n            advanceWidth: 548,\n        },\n        z: {\n            x_min: 27,\n            x_max: 479,\n            y_min: -3,\n            y_max: 494,\n            ha: 497,\n            leftSideBearing: 27,\n            advanceWidth: 494,\n        },\n        '{': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '|': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '}': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '~': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n    },\n    fontFamily: 'PetalumaScript',\n    resolution: 1000,\n    generatedOn: '2020-06-14T18:33:25.407Z',\n};\n","export const RobotoSlabFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 509,\n            y_min: 0,\n            y_max: 2000,\n            ha: 2000,\n            leftSideBearing: 0,\n            advanceWidth: 509,\n        },\n        '0': {\n            x_min: 121,\n            x_max: 1048,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1168,\n        },\n        '1': {\n            x_min: 117,\n            x_max: 767,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 117,\n            advanceWidth: 844,\n        },\n        '2': {\n            x_min: 75.8474576645637,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 75,\n            advanceWidth: 1131,\n        },\n        '3': {\n            x_min: 74.85365853658536,\n            x_max: 994,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1106,\n        },\n        '4': {\n            x_min: 63,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1187,\n        },\n        '5': {\n            x_min: 96.8448275474953,\n            x_max: 982,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 96,\n            advanceWidth: 1081,\n        },\n        '6': {\n            x_min: 121,\n            x_max: 1067,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1144,\n        },\n        '7': {\n            x_min: 76,\n            x_max: 1060,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: -30,\n            advanceWidth: 1128,\n        },\n        '8': {\n            x_min: 92,\n            x_max: 1039,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 92,\n            advanceWidth: 1131,\n        },\n        '9': {\n            x_min: 84,\n            x_max: 1026,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 84,\n            advanceWidth: 1154,\n        },\n        '!': {\n            x_min: 143,\n            x_max: 340,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 143,\n            advanceWidth: 483,\n        },\n        '\"': {\n            x_min: 166,\n            x_max: 634,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 770,\n        },\n        '#': {\n            x_min: 63,\n            x_max: 1179,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1246,\n        },\n        $: {\n            x_min: 81.92156915727656,\n            x_max: 1012,\n            y_min: -208,\n            y_max: 1693,\n            ha: 1901,\n            leftSideBearing: 81,\n            advanceWidth: 1110,\n        },\n        '%': {\n            x_min: 77,\n            x_max: 1384,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 77,\n            advanceWidth: 1460,\n        },\n        '&': {\n            x_min: 74,\n            x_max: 1242,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1289,\n        },\n        \"'\": {\n            x_min: 166,\n            x_max: 324,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 460,\n        },\n        '(': {\n            x_min: 114,\n            x_max: 650,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 114,\n            advanceWidth: 662,\n        },\n        ')': {\n            x_min: 11,\n            x_max: 547,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 11,\n            advanceWidth: 654,\n        },\n        '*': {\n            x_min: 66,\n            x_max: 893,\n            y_min: 607,\n            y_max: 1456,\n            ha: 849,\n            leftSideBearing: 66,\n            advanceWidth: 958,\n        },\n        '+': {\n            x_min: 73,\n            x_max: 1071,\n            y_min: 146,\n            y_max: 1206,\n            ha: 1060,\n            leftSideBearing: 73,\n            advanceWidth: 1145,\n        },\n        ',': {\n            x_min: 23,\n            x_max: 315,\n            y_min: -311,\n            y_max: 221,\n            ha: 532,\n            leftSideBearing: 23,\n            advanceWidth: 404,\n        },\n        '-': {\n            x_min: 154,\n            x_max: 643,\n            y_min: 538,\n            y_max: 692,\n            ha: 154,\n            leftSideBearing: 154,\n            advanceWidth: 797,\n        },\n        '.': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 202,\n            ha: 202,\n            leftSideBearing: 145,\n            advanceWidth: 493,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 774,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 0,\n            advanceWidth: 824,\n        },\n        ':': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 145,\n            advanceWidth: 419,\n        },\n        ';': {\n            x_min: 53,\n            x_max: 345,\n            y_min: -311,\n            y_max: 1082,\n            ha: 1393,\n            leftSideBearing: 53,\n            advanceWidth: 424,\n        },\n        '<': {\n            x_min: 76,\n            x_max: 892,\n            y_min: 107,\n            y_max: 1013,\n            ha: 906,\n            leftSideBearing: 76,\n            advanceWidth: 1017,\n        },\n        '=': {\n            x_min: 147,\n            x_max: 981,\n            y_min: 407,\n            y_max: 987,\n            ha: 580,\n            leftSideBearing: 147,\n            advanceWidth: 1127,\n        },\n        '>': {\n            x_min: 125,\n            x_max: 980,\n            y_min: 87,\n            y_max: 993,\n            ha: 906,\n            leftSideBearing: 125,\n            advanceWidth: 1060,\n        },\n        '?': {\n            x_min: 65.92660602419838,\n            x_max: 890,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 65,\n            advanceWidth: 953,\n        },\n        '@': {\n            x_min: 84.3592218305664,\n            x_max: 1705.2346925277395,\n            y_min: -453,\n            y_max: 1431,\n            ha: 1884,\n            leftSideBearing: 84,\n            advanceWidth: 1821,\n        },\n        A: {\n            x_min: 70,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 70,\n            advanceWidth: 1533,\n        },\n        B: {\n            x_min: 81,\n            x_max: 1253,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1322,\n        },\n        C: {\n            x_min: 80,\n            x_max: 1174,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1290,\n        },\n        D: {\n            x_min: 81,\n            x_max: 1291,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1356,\n        },\n        E: {\n            x_min: 81,\n            x_max: 1190,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1306,\n        },\n        F: {\n            x_min: 81,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1256,\n        },\n        G: {\n            x_min: 80,\n            x_max: 1226,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1346,\n        },\n        H: {\n            x_min: 81,\n            x_max: 1497,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1578,\n        },\n        I: {\n            x_min: 81,\n            x_max: 604,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 685,\n        },\n        J: {\n            x_min: 60,\n            x_max: 1100,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 60,\n            advanceWidth: 1169,\n        },\n        K: {\n            x_min: 81,\n            x_max: 1427,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1501,\n        },\n        L: {\n            x_min: 81,\n            x_max: 1130,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1210,\n        },\n        M: {\n            x_min: 94,\n            x_max: 1888,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 94,\n            advanceWidth: 1982,\n        },\n        N: {\n            x_min: 83,\n            x_max: 1509,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 83,\n            advanceWidth: 1592,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1281,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 70,\n            advanceWidth: 1351,\n        },\n        P: {\n            x_min: 81,\n            x_max: 1242,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1297,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1348,\n            y_min: -245,\n            y_max: 1477,\n            ha: 1722,\n            leftSideBearing: 70,\n            advanceWidth: 1376,\n        },\n        R: {\n            x_min: 81,\n            x_max: 1285,\n            y_min: 0,\n            y_max: 1455,\n            ha: 1455,\n            leftSideBearing: 81,\n            advanceWidth: 1385,\n        },\n        S: {\n            x_min: 115,\n            x_max: 1116,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 115,\n            advanceWidth: 1206,\n        },\n        T: {\n            x_min: 96,\n            x_max: 1306,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 96,\n            advanceWidth: 1406,\n        },\n        U: {\n            x_min: 70,\n            x_max: 1452,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 70,\n            advanceWidth: 1522,\n        },\n        V: {\n            x_min: 65,\n            x_max: 1443,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1508,\n        },\n        W: {\n            x_min: 72,\n            x_max: 2057,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 72,\n            advanceWidth: 2129,\n        },\n        X: {\n            x_min: 80,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 80,\n            advanceWidth: 1529,\n        },\n        Y: {\n            x_min: 65,\n            x_max: 1396,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1461,\n        },\n        Z: {\n            x_min: 90,\n            x_max: 1107,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 90,\n            advanceWidth: 1197,\n        },\n        '[': {\n            x_min: 157,\n            x_max: 541,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 157,\n            advanceWidth: 573,\n        },\n        '\\\\': {\n            x_min: 36,\n            x_max: 830,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 36,\n            advanceWidth: 841,\n        },\n        ']': {\n            x_min: 23,\n            x_max: 408,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 23,\n            advanceWidth: 552,\n        },\n        '^': {\n            x_min: 71,\n            x_max: 802,\n            y_min: 729,\n            y_max: 1456,\n            ha: 727,\n            leftSideBearing: 71,\n            advanceWidth: 864,\n        },\n        _: {\n            x_min: 119,\n            x_max: 1041,\n            y_min: -154,\n            y_max: 0,\n            ha: 154,\n            leftSideBearing: 119,\n            advanceWidth: 1168,\n        },\n        '`': {\n            x_min: 40,\n            x_max: 456,\n            y_min: 1288,\n            y_max: 1560,\n            ha: 272,\n            leftSideBearing: 40,\n            advanceWidth: 496,\n        },\n        a: {\n            x_min: 79,\n            x_max: 1053,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 79,\n            advanceWidth: 1132,\n        },\n        b: {\n            x_min: -16,\n            x_max: 1071,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: -16,\n            advanceWidth: 1145,\n        },\n        c: {\n            x_min: 78,\n            x_max: 988,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1067,\n        },\n        d: {\n            x_min: 78,\n            x_max: 1156,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: 78,\n            advanceWidth: 1218,\n        },\n        e: {\n            x_min: 74,\n            x_max: 980,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 74,\n            advanceWidth: 1059,\n        },\n        f: {\n            x_min: 64,\n            x_max: 731,\n            y_min: 0,\n            y_max: 1581,\n            ha: 1581,\n            leftSideBearing: 64,\n            advanceWidth: 725,\n        },\n        g: {\n            x_min: 78,\n            x_max: 1133,\n            y_min: -437,\n            y_max: 1102,\n            ha: 1539,\n            leftSideBearing: 78,\n            advanceWidth: 1157,\n        },\n        h: {\n            x_min: 49,\n            x_max: 1255,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 49,\n            advanceWidth: 1315,\n        },\n        i: {\n            x_min: 67,\n            x_max: 590,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 67,\n            advanceWidth: 652,\n        },\n        j: {\n            x_min: -56,\n            x_max: 381,\n            y_min: -437,\n            y_max: 1560,\n            ha: 1997,\n            leftSideBearing: -56,\n            advanceWidth: 525,\n        },\n        k: {\n            x_min: 64,\n            x_max: 1248,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 1287,\n        },\n        l: {\n            x_min: 64,\n            x_max: 587,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 653,\n        },\n        m: {\n            x_min: 74,\n            x_max: 1905,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1977,\n        },\n        n: {\n            x_min: 74,\n            x_max: 1278,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1343,\n        },\n        o: {\n            x_min: 78,\n            x_max: 1046,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1124,\n        },\n        p: {\n            x_min: 34,\n            x_max: 1119,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 34,\n            advanceWidth: 1197,\n        },\n        q: {\n            x_min: 78,\n            x_max: 1135,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 78,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 72,\n            x_max: 808,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 72,\n            advanceWidth: 854,\n        },\n        s: {\n            x_min: 104,\n            x_max: 933,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 104,\n            advanceWidth: 1022,\n        },\n        t: {\n            x_min: 24,\n            x_max: 678,\n            y_min: -17,\n            y_max: 1343,\n            ha: 1360,\n            leftSideBearing: 24,\n            advanceWidth: 730,\n        },\n        u: {\n            x_min: 52,\n            x_max: 1181,\n            y_min: -21,\n            y_max: 1082,\n            ha: 1103,\n            leftSideBearing: 52,\n            advanceWidth: 1245,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 26,\n            advanceWidth: 1206,\n        },\n        w: {\n            x_min: 52,\n            x_max: 1777,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 52,\n            advanceWidth: 1823,\n        },\n        x: {\n            x_min: 42,\n            x_max: 1163,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 42,\n            advanceWidth: 1203,\n        },\n        y: {\n            x_min: 24,\n            x_max: 1172,\n            y_min: -437,\n            y_max: 1082,\n            ha: 1519,\n            leftSideBearing: 24,\n            advanceWidth: 1192,\n        },\n        z: {\n            x_min: 88,\n            x_max: 960,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 88,\n            advanceWidth: 1032,\n        },\n        '{': {\n            x_min: 63,\n            x_max: 671,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 63,\n            advanceWidth: 701,\n        },\n        '|': {\n            x_min: 150,\n            x_max: 307,\n            y_min: -270,\n            y_max: 1456,\n            ha: 1726,\n            leftSideBearing: 150,\n            advanceWidth: 451,\n        },\n        '}': {\n            x_min: 27,\n            x_max: 635,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 27,\n            advanceWidth: 701,\n        },\n        '~': {\n            x_min: 121,\n            x_max: 1257,\n            y_min: 401,\n            y_max: 803,\n            ha: 402,\n            leftSideBearing: 121,\n            advanceWidth: 1386,\n        },\n    },\n    fontFamily: 'Roboto Slab',\n    resolution: 2048,\n    generatedOn: '2020-06-15T19:12:58.120Z',\n};\n","export const SansFontBold = {\n    glyphs: {\n        '0': {\n            x_min: 86,\n            x_max: 1038,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        '1': {\n            x_min: 162,\n            x_max: 806,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 162,\n            advanceWidth: 1139,\n        },\n        '2': {\n            x_min: 51,\n            x_max: 1036,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 51,\n            advanceWidth: 1139,\n        },\n        '3': {\n            x_min: 77,\n            x_max: 1051,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 77,\n            advanceWidth: 1139,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 1092,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 38,\n            advanceWidth: 1139,\n        },\n        '5': {\n            x_min: 91,\n            x_max: 1077,\n            y_min: -25,\n            y_max: 1446,\n            ha: 1471,\n            leftSideBearing: 91,\n            advanceWidth: 1139,\n        },\n        '6': {\n            x_min: 87,\n            x_max: 1066,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 87,\n            advanceWidth: 1139,\n        },\n        '7': {\n            x_min: 87,\n            x_max: 1048,\n            y_min: 0,\n            y_max: 1446,\n            ha: 1446,\n            leftSideBearing: 87,\n            advanceWidth: 1139,\n        },\n        '8': {\n            x_min: 83,\n            x_max: 1047,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 83,\n            advanceWidth: 1139,\n        },\n        '9': {\n            x_min: 65,\n            x_max: 1044,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 65,\n            advanceWidth: 1139,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        '!': {\n            x_min: 184,\n            x_max: 488,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 184,\n            advanceWidth: 682,\n        },\n        '\"': {\n            x_min: 112,\n            x_max: 869,\n            y_min: 945,\n            y_max: 1466,\n            ha: 521,\n            leftSideBearing: 112,\n            advanceWidth: 971,\n        },\n        '#': {\n            x_min: 18,\n            x_max: 1115,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 18,\n            advanceWidth: 1139,\n        },\n        $: {\n            x_min: 70,\n            x_max: 1048,\n            y_min: -205,\n            y_max: 1584,\n            ha: 1789,\n            leftSideBearing: 70,\n            advanceWidth: 1139,\n        },\n        '%': {\n            x_min: 89,\n            x_max: 1725,\n            y_min: -59,\n            y_max: 1491,\n            ha: 1550,\n            leftSideBearing: 89,\n            advanceWidth: 1821,\n        },\n        '&': {\n            x_min: 90,\n            x_max: 1446,\n            y_min: -38,\n            y_max: 1491,\n            ha: 1529,\n            leftSideBearing: 90,\n            advanceWidth: 1479,\n        },\n        \"'\": {\n            x_min: 92,\n            x_max: 398,\n            y_min: 945,\n            y_max: 1466,\n            ha: 521,\n            leftSideBearing: 92,\n            advanceWidth: 487,\n        },\n        '(': {\n            x_min: 107,\n            x_max: 616,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 107,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 67,\n            x_max: 576,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 67,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 28,\n            x_max: 753,\n            y_min: 792,\n            y_max: 1491,\n            ha: 699,\n            leftSideBearing: 28,\n            advanceWidth: 797,\n        },\n        '+': {\n            x_min: 85,\n            x_max: 1110,\n            y_min: 211,\n            y_max: 1236,\n            ha: 1025,\n            leftSideBearing: 85,\n            advanceWidth: 1196,\n        },\n        ',': {\n            x_min: 117,\n            x_max: 421,\n            y_min: -327,\n            y_max: 281,\n            ha: 608,\n            leftSideBearing: 117,\n            advanceWidth: 569,\n        },\n        '-': {\n            x_min: 115,\n            x_max: 667,\n            y_min: 391,\n            y_max: 672,\n            ha: 281,\n            leftSideBearing: 115,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 281,\n            ha: 281,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        '/': {\n            x_min: -3,\n            x_max: 571,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: -3,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 201,\n            x_max: 482,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 201,\n            advanceWidth: 682,\n        },\n        ';': {\n            x_min: 170,\n            x_max: 474,\n            y_min: -327,\n            y_max: 1062,\n            ha: 1389,\n            leftSideBearing: 170,\n            advanceWidth: 682,\n        },\n        '<': {\n            x_min: 95,\n            x_max: 1100,\n            y_min: 167,\n            y_max: 1281,\n            ha: 1114,\n            leftSideBearing: 95,\n            advanceWidth: 1196,\n        },\n        '=': {\n            x_min: 85,\n            x_max: 1110,\n            y_min: 372,\n            y_max: 1074,\n            ha: 702,\n            leftSideBearing: 85,\n            advanceWidth: 1196,\n        },\n        '>': {\n            x_min: 95,\n            x_max: 1101,\n            y_min: 166,\n            y_max: 1279,\n            ha: 1113,\n            leftSideBearing: 95,\n            advanceWidth: 1196,\n        },\n        '?': {\n            x_min: 106,\n            x_max: 1158,\n            y_min: 0,\n            y_max: 1481,\n            ha: 1481,\n            leftSideBearing: 106,\n            advanceWidth: 1251,\n        },\n        '@': {\n            x_min: 61,\n            x_max: 1990,\n            y_min: -431,\n            y_max: 1492,\n            ha: 1923,\n            leftSideBearing: 61,\n            advanceWidth: 1997,\n        },\n        A: {\n            x_min: 0,\n            x_max: 1471,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 0,\n            advanceWidth: 1479,\n        },\n        B: {\n            x_min: 150,\n            x_max: 1378,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        C: {\n            x_min: 97,\n            x_max: 1374,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 97,\n            advanceWidth: 1479,\n        },\n        D: {\n            x_min: 148,\n            x_max: 1377,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 148,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 149,\n            x_max: 1264,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 149,\n            advanceWidth: 1366,\n        },\n        F: {\n            x_min: 151,\n            x_max: 1156,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 151,\n            advanceWidth: 1251,\n        },\n        G: {\n            x_min: 98,\n            x_max: 1469,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 98,\n            advanceWidth: 1593,\n        },\n        H: {\n            x_min: 150,\n            x_max: 1322,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 140,\n            x_max: 436,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 140,\n            advanceWidth: 569,\n        },\n        J: {\n            x_min: 35,\n            x_max: 973,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 35,\n            advanceWidth: 1139,\n        },\n        K: {\n            x_min: 153,\n            x_max: 1475,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 153,\n            advanceWidth: 1479,\n        },\n        L: {\n            x_min: 157,\n            x_max: 1189,\n            y_min: 0,\n            y_max: 1454,\n            ha: 1454,\n            leftSideBearing: 157,\n            advanceWidth: 1251,\n        },\n        M: {\n            x_min: 145,\n            x_max: 1561,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 145,\n            advanceWidth: 1706,\n        },\n        N: {\n            x_min: 152,\n            x_max: 1315,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 152,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 89,\n            x_max: 1511,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 89,\n            advanceWidth: 1593,\n        },\n        P: {\n            x_min: 149,\n            x_max: 1272,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 149,\n            advanceWidth: 1366,\n        },\n        Q: {\n            x_min: 89,\n            x_max: 1566,\n            y_min: -147,\n            y_max: 1491,\n            ha: 1638,\n            leftSideBearing: 89,\n            advanceWidth: 1593,\n        },\n        R: {\n            x_min: 150,\n            x_max: 1468,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        S: {\n            x_min: 74,\n            x_max: 1266,\n            y_min: -26,\n            y_max: 1491,\n            ha: 1517,\n            leftSideBearing: 74,\n            advanceWidth: 1366,\n        },\n        T: {\n            x_min: 44,\n            x_max: 1209,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 44,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 147,\n            x_max: 1316,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 147,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: -1,\n            x_max: 1364,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -1,\n            advanceWidth: 1366,\n        },\n        W: {\n            x_min: 7,\n            x_max: 1931,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 7,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 0,\n            x_max: 1363,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 0,\n            advanceWidth: 1366,\n        },\n        Y: {\n            x_min: -3,\n            x_max: 1368,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -3,\n            advanceWidth: 1366,\n        },\n        Z: {\n            x_min: 22,\n            x_max: 1213,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 22,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 146,\n            x_max: 644,\n            y_min: -413,\n            y_max: 1466,\n            ha: 1879,\n            leftSideBearing: 146,\n            advanceWidth: 682,\n        },\n        '\\\\': {\n            x_min: -3,\n            x_max: 571,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: -3,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 38,\n            x_max: 536,\n            y_min: -413,\n            y_max: 1466,\n            ha: 1879,\n            leftSideBearing: 38,\n            advanceWidth: 682,\n        },\n        '^': {\n            x_min: 115,\n            x_max: 1080,\n            y_min: 692,\n            y_max: 1491,\n            ha: 799,\n            leftSideBearing: 115,\n            advanceWidth: 1196,\n        },\n        _: {\n            x_min: -19,\n            x_max: 1149,\n            y_min: -405,\n            y_max: -223,\n            ha: 182,\n            leftSideBearing: -19,\n            advanceWidth: 1139,\n        },\n        '`': {\n            x_min: 42,\n            x_max: 495,\n            y_min: 1192,\n            y_max: 1491,\n            ha: 299,\n            leftSideBearing: 42,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 73,\n            x_max: 1070,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 73,\n            advanceWidth: 1139,\n        },\n        b: {\n            x_min: 135,\n            x_max: 1172,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 135,\n            advanceWidth: 1251,\n        },\n        c: {\n            x_min: 85,\n            x_max: 1087,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        d: {\n            x_min: 84,\n            x_max: 1121,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 84,\n            advanceWidth: 1251,\n        },\n        e: {\n            x_min: 65,\n            x_max: 1057.2517482517483,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 65,\n            advanceWidth: 1139,\n        },\n        f: {\n            x_min: 24,\n            x_max: 742,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 24,\n            advanceWidth: 682,\n        },\n        g: {\n            x_min: 84,\n            x_max: 1120,\n            y_min: -431,\n            y_max: 1086,\n            ha: 1517,\n            leftSideBearing: 84,\n            advanceWidth: 1251,\n        },\n        h: {\n            x_min: 146,\n            x_max: 1113,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 146,\n            advanceWidth: 1251,\n        },\n        i: {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        j: {\n            x_min: -94,\n            x_max: 422,\n            y_min: -431,\n            y_max: 1466,\n            ha: 1897,\n            leftSideBearing: -94,\n            advanceWidth: 569,\n        },\n        k: {\n            x_min: 137,\n            x_max: 1119,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 137,\n            advanceWidth: 1139,\n        },\n        l: {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        m: {\n            x_min: 126,\n            x_max: 1688,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 126,\n            advanceWidth: 1821,\n        },\n        n: {\n            x_min: 145,\n            x_max: 1113,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 145,\n            advanceWidth: 1251,\n        },\n        o: {\n            x_min: 82,\n            x_max: 1178,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 82,\n            advanceWidth: 1251,\n        },\n        p: {\n            x_min: 139,\n            x_max: 1175,\n            y_min: -404,\n            y_max: 1086,\n            ha: 1490,\n            leftSideBearing: 139,\n            advanceWidth: 1251,\n        },\n        q: {\n            x_min: 91,\n            x_max: 1122,\n            y_min: -404,\n            y_max: 1086,\n            ha: 1490,\n            leftSideBearing: 91,\n            advanceWidth: 1251,\n        },\n        r: {\n            x_min: 135,\n            x_max: 823,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 797,\n        },\n        s: {\n            x_min: 48,\n            x_max: 1040,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 48,\n            advanceWidth: 1139,\n        },\n        t: {\n            x_min: 31,\n            x_max: 657,\n            y_min: -24,\n            y_max: 1437,\n            ha: 1461,\n            leftSideBearing: 31,\n            advanceWidth: 682,\n        },\n        u: {\n            x_min: 141,\n            x_max: 1107,\n            y_min: -24,\n            y_max: 1062,\n            ha: 1086,\n            leftSideBearing: 141,\n            advanceWidth: 1251,\n        },\n        v: {\n            x_min: 11,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 11,\n            advanceWidth: 1139,\n        },\n        w: {\n            x_min: 9,\n            x_max: 1592,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 9,\n            advanceWidth: 1593,\n        },\n        x: {\n            x_min: 12,\n            x_max: 1120,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 12,\n            advanceWidth: 1139,\n        },\n        y: {\n            x_min: 14,\n            x_max: 1106,\n            y_min: -431,\n            y_max: 1062,\n            ha: 1493,\n            leftSideBearing: 14,\n            advanceWidth: 1139,\n        },\n        z: {\n            x_min: 34,\n            x_max: 982,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 34,\n            advanceWidth: 1024,\n        },\n        '{': {\n            x_min: 60,\n            x_max: 744,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 60,\n            advanceWidth: 797,\n        },\n        '|': {\n            x_min: 176,\n            x_max: 399,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 176,\n            advanceWidth: 573,\n        },\n        '}': {\n            x_min: 45,\n            x_max: 729,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 45,\n            advanceWidth: 797,\n        },\n        '~': {\n            x_min: 67,\n            x_max: 1129,\n            y_min: 519,\n            y_max: 924,\n            ha: 405,\n            leftSideBearing: 67,\n            advanceWidth: 1196,\n        },\n    },\n    fontFamily: 'Arial',\n    resolution: 2048,\n    generatedOn: '2022-11-04T20:05:21.000Z',\n};\n","export const SansFont = {\n    smufl: false,\n    name: 'SANS',\n    spacing: 50,\n    Description: 'Built-in sans-serif font',\n    bold: true,\n    italic: true,\n    monospaced: false,\n    serifs: false,\n    glyphs: {\n        '0': {\n            x_min: 85,\n            x_max: 1041,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        '1': {\n            x_min: 223,\n            x_max: 763,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 223,\n            advanceWidth: 1139,\n        },\n        '2': {\n            x_min: 61.840001123045234,\n            x_max: 1031,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 61,\n            advanceWidth: 1139,\n        },\n        '3': {\n            x_min: 86,\n            x_max: 1046,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        '4': {\n            x_min: 26,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 26,\n            advanceWidth: 1139,\n        },\n        '5': {\n            x_min: 85,\n            x_max: 1057,\n            y_min: -25,\n            y_max: 1446,\n            ha: 1471,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        '6': {\n            x_min: 77,\n            x_max: 1045,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 77,\n            advanceWidth: 1139,\n        },\n        '7': {\n            x_min: 97,\n            x_max: 1046,\n            y_min: 0,\n            y_max: 1447,\n            ha: 1447,\n            leftSideBearing: 97,\n            advanceWidth: 1139,\n        },\n        '8': {\n            x_min: 83,\n            x_max: 1049,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 83,\n            advanceWidth: 1139,\n        },\n        '9': {\n            x_min: 85,\n            x_max: 1049,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        '!': {\n            x_min: 176,\n            x_max: 399,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 176,\n            advanceWidth: 569,\n        },\n        '\"': {\n            x_min: 94,\n            x_max: 631,\n            y_min: 947,\n            y_max: 1466,\n            ha: 519,\n            leftSideBearing: 94,\n            advanceWidth: 727,\n        },\n        '#': {\n            x_min: 21,\n            x_max: 1113,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 21,\n            advanceWidth: 1139,\n        },\n        $: {\n            x_min: 73,\n            x_max: 1043,\n            y_min: -211,\n            y_max: 1601,\n            ha: 1812,\n            leftSideBearing: 73,\n            advanceWidth: 1139,\n        },\n        '%': {\n            x_min: 119,\n            x_max: 1695,\n            y_min: -54,\n            y_max: 1491,\n            ha: 1545,\n            leftSideBearing: 119,\n            advanceWidth: 1821,\n        },\n        '&': {\n            x_min: 88,\n            x_max: 1319,\n            y_min: -34,\n            y_max: 1491,\n            ha: 1525,\n            leftSideBearing: 88,\n            advanceWidth: 1366,\n        },\n        \"'\": {\n            x_min: 90,\n            x_max: 295,\n            y_min: 947,\n            y_max: 1466,\n            ha: 519,\n            leftSideBearing: 90,\n            advanceWidth: 391,\n        },\n        '(': {\n            x_min: 124,\n            x_max: 608,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 124,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 124,\n            x_max: 608,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 124,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 64,\n            x_max: 725,\n            y_min: 867,\n            y_max: 1491,\n            ha: 624,\n            leftSideBearing: 64,\n            advanceWidth: 797,\n        },\n        '+': {\n            x_min: 114,\n            x_max: 1082,\n            y_min: 237,\n            y_max: 1206,\n            ha: 969,\n            leftSideBearing: 114,\n            advanceWidth: 1196,\n        },\n        ',': {\n            x_min: 170,\n            x_max: 387,\n            y_min: -290,\n            y_max: 205,\n            ha: 495,\n            leftSideBearing: 170,\n            advanceWidth: 569,\n        },\n        '-': {\n            x_min: 65,\n            x_max: 618,\n            y_min: 440,\n            y_max: 621,\n            ha: 181,\n            leftSideBearing: 65,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 186,\n            x_max: 391,\n            y_min: 0,\n            y_max: 205,\n            ha: 205,\n            leftSideBearing: 186,\n            advanceWidth: 569,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 569,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 185,\n            x_max: 390,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 185,\n            advanceWidth: 569,\n        },\n        ';': {\n            x_min: 170,\n            x_max: 387,\n            y_min: -290,\n            y_max: 1062,\n            ha: 1352,\n            leftSideBearing: 170,\n            advanceWidth: 569,\n        },\n        '<': {\n            x_min: 112,\n            x_max: 1083,\n            y_min: 226,\n            y_max: 1219,\n            ha: 993,\n            leftSideBearing: 112,\n            advanceWidth: 1196,\n        },\n        '=': {\n            x_min: 114,\n            x_max: 1082,\n            y_min: 417,\n            y_max: 1030,\n            ha: 613,\n            leftSideBearing: 114,\n            advanceWidth: 1196,\n        },\n        '>': {\n            x_min: 112,\n            x_max: 1083,\n            y_min: 226,\n            y_max: 1219,\n            ha: 993,\n            leftSideBearing: 112,\n            advanceWidth: 1196,\n        },\n        '?': {\n            x_min: 90,\n            x_max: 1036,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 90,\n            advanceWidth: 1139,\n        },\n        '@': {\n            x_min: 111,\n            x_max: 2005,\n            y_min: -431,\n            y_max: 1493,\n            ha: 1924,\n            leftSideBearing: 111,\n            advanceWidth: 2079,\n        },\n        A: {\n            x_min: -3,\n            x_max: 1369,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -3,\n            advanceWidth: 1366,\n        },\n        B: {\n            x_min: 150,\n            x_max: 1257,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1366,\n        },\n        C: {\n            x_min: 102,\n            x_max: 1398,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 102,\n            advanceWidth: 1479,\n        },\n        D: {\n            x_min: 158,\n            x_max: 1370,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 158,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 162,\n            x_max: 1256,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 162,\n            advanceWidth: 1366,\n        },\n        F: {\n            x_min: 168,\n            x_max: 1157,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 168,\n            advanceWidth: 1251,\n        },\n        G: {\n            x_min: 109,\n            x_max: 1465,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 109,\n            advanceWidth: 1593,\n        },\n        H: {\n            x_min: 164,\n            x_max: 1314,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 164,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 191,\n            x_max: 385,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 191,\n            advanceWidth: 569,\n        },\n        J: {\n            x_min: 58.84976474807333,\n            x_max: 865,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 58,\n            advanceWidth: 1024,\n        },\n        K: {\n            x_min: 150,\n            x_max: 1362,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1366,\n        },\n        L: {\n            x_min: 150,\n            x_max: 1066,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1139,\n        },\n        M: {\n            x_min: 152,\n            x_max: 1551,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 152,\n            advanceWidth: 1706,\n        },\n        N: {\n            x_min: 156,\n            x_max: 1311,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 156,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 99,\n            x_max: 1501,\n            y_min: -25,\n            y_max: 1492,\n            ha: 1517,\n            leftSideBearing: 99,\n            advanceWidth: 1593,\n        },\n        P: {\n            x_min: 158,\n            x_max: 1277,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 158,\n            advanceWidth: 1366,\n        },\n        Q: {\n            x_min: 88,\n            x_max: 1518,\n            y_min: -114,\n            y_max: 1492,\n            ha: 1606,\n            leftSideBearing: 88,\n            advanceWidth: 1593,\n        },\n        R: {\n            x_min: 161,\n            x_max: 1453,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 161,\n            advanceWidth: 1479,\n        },\n        S: {\n            x_min: 92,\n            x_max: 1259,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 92,\n            advanceWidth: 1366,\n        },\n        T: {\n            x_min: 48,\n            x_max: 1210,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 48,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 161,\n            x_max: 1314,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 161,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: 9,\n            x_max: 1350,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 9,\n            advanceWidth: 1366,\n        },\n        W: {\n            x_min: 25,\n            x_max: 1910,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 25,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 9,\n            x_max: 1353,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 9,\n            advanceWidth: 1366,\n        },\n        Y: {\n            x_min: 6,\n            x_max: 1350,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 6,\n            advanceWidth: 1366,\n        },\n        Z: {\n            x_min: 41,\n            x_max: 1200,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 41,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 139,\n            x_max: 536,\n            y_min: -407,\n            y_max: 1466,\n            ha: 1873,\n            leftSideBearing: 139,\n            advanceWidth: 569,\n        },\n        '\\\\': {\n            x_min: 0,\n            x_max: 569,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 39,\n            x_max: 436,\n            y_min: -407,\n            y_max: 1466,\n            ha: 1873,\n            leftSideBearing: 39,\n            advanceWidth: 569,\n        },\n        '^': {\n            x_min: 54,\n            x_max: 907,\n            y_min: 690,\n            y_max: 1491,\n            ha: 801,\n            leftSideBearing: 54,\n            advanceWidth: 961,\n        },\n        _: {\n            x_min: -31,\n            x_max: 1162,\n            y_min: -407,\n            y_max: -277,\n            ha: 130,\n            leftSideBearing: -31,\n            advanceWidth: 1139,\n        },\n        '`': {\n            x_min: 89,\n            x_max: 465,\n            y_min: 1194,\n            y_max: 1474,\n            ha: 280,\n            leftSideBearing: 89,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 74,\n            x_max: 1052,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 74,\n            advanceWidth: 1139,\n        },\n        b: {\n            x_min: 134,\n            x_max: 1055,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 134,\n            advanceWidth: 1139,\n        },\n        c: {\n            x_min: 80,\n            x_max: 1005,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 80,\n            advanceWidth: 1024,\n        },\n        d: {\n            x_min: 70,\n            x_max: 991,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 70,\n            advanceWidth: 1139,\n        },\n        e: {\n            x_min: 75,\n            x_max: 1054,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 75,\n            advanceWidth: 1139,\n        },\n        f: {\n            x_min: 19,\n            x_max: 640,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 19,\n            advanceWidth: 569,\n        },\n        g: {\n            x_min: 66,\n            x_max: 1002,\n            y_min: -431,\n            y_max: 1086,\n            ha: 1517,\n            leftSideBearing: 66,\n            advanceWidth: 1139,\n        },\n        h: {\n            x_min: 135,\n            x_max: 1000,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        i: {\n            x_min: 136,\n            x_max: 316,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 136,\n            advanceWidth: 455,\n        },\n        j: {\n            x_min: -94,\n            x_max: 314,\n            y_min: -431,\n            y_max: 1466,\n            ha: 1897,\n            leftSideBearing: -94,\n            advanceWidth: 455,\n        },\n        k: {\n            x_min: 136,\n            x_max: 1016,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 136,\n            advanceWidth: 1024,\n        },\n        l: {\n            x_min: 131,\n            x_max: 311,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 131,\n            advanceWidth: 455,\n        },\n        m: {\n            x_min: 135,\n            x_max: 1574,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 1706,\n        },\n        n: {\n            x_min: 135,\n            x_max: 998,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        o: {\n            x_min: 68,\n            x_max: 1063,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 68,\n            advanceWidth: 1139,\n        },\n        p: {\n            x_min: 135,\n            x_max: 1057,\n            y_min: -407,\n            y_max: 1086,\n            ha: 1493,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        q: {\n            x_min: 72,\n            x_max: 992,\n            y_min: -407,\n            y_max: 1086,\n            ha: 1493,\n            leftSideBearing: 72,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 133,\n            x_max: 710,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 133,\n            advanceWidth: 682,\n        },\n        s: {\n            x_min: 63,\n            x_max: 945,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 63,\n            advanceWidth: 1024,\n        },\n        t: {\n            x_min: 36,\n            x_max: 554,\n            y_min: -14,\n            y_max: 1433,\n            ha: 1447,\n            leftSideBearing: 36,\n            advanceWidth: 569,\n        },\n        u: {\n            x_min: 131,\n            x_max: 992,\n            y_min: -24,\n            y_max: 1062,\n            ha: 1086,\n            leftSideBearing: 131,\n            advanceWidth: 1139,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1000,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 26,\n            advanceWidth: 1024,\n        },\n        w: {\n            x_min: 6,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 6,\n            advanceWidth: 1479,\n        },\n        x: {\n            x_min: 15,\n            x_max: 1009,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 15,\n            advanceWidth: 1024,\n        },\n        y: {\n            x_min: 33,\n            x_max: 1006,\n            y_min: -431,\n            y_max: 1062,\n            ha: 1493,\n            leftSideBearing: 33,\n            advanceWidth: 1024,\n        },\n        z: {\n            x_min: 40,\n            x_max: 980,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 40,\n            advanceWidth: 1024,\n        },\n        '{': {\n            x_min: 57,\n            x_max: 636,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 57,\n            advanceWidth: 684,\n        },\n        '|': {\n            x_min: 188,\n            x_max: 345,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 188,\n            advanceWidth: 532,\n        },\n        '}': {\n            x_min: 47,\n            x_max: 626,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 47,\n            advanceWidth: 684,\n        },\n        '~': {\n            x_min: 87,\n            x_max: 1110,\n            y_min: 557,\n            y_max: 885,\n            ha: 328,\n            leftSideBearing: 87,\n            advanceWidth: 1196,\n        },\n    },\n    fontFamily: 'sans-serif',\n    resolution: 2048,\n    generatedOn: '2020-10-18T18:48:11.823Z',\n};\n","export const SerifFont = {\n    smufl: false,\n    name: 'SERIF',\n    spacing: 50,\n    Description: 'Built-in serif font',\n    bold: true,\n    italic: true,\n    monospaced: false,\n    serifs: true,\n    glyphs: {\n        '0': {\n            x_min: 49,\n            x_max: 975,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 49,\n            advanceWidth: 1024,\n        },\n        '1': {\n            x_min: 227,\n            x_max: 811,\n            y_min: 0,\n            y_max: 1383,\n            ha: 1383,\n            leftSideBearing: 227,\n            advanceWidth: 1024,\n        },\n        '2': {\n            x_min: 61,\n            x_max: 965,\n            y_min: 0,\n            y_max: 1383,\n            ha: 1383,\n            leftSideBearing: 61,\n            advanceWidth: 1024,\n        },\n        '3': {\n            x_min: 88,\n            x_max: 883,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 88,\n            advanceWidth: 1024,\n        },\n        '4': {\n            x_min: 25,\n            x_max: 967,\n            y_min: 0,\n            y_max: 1384,\n            ha: 1384,\n            leftSideBearing: 25,\n            advanceWidth: 1024,\n        },\n        '5': {\n            x_min: 66,\n            x_max: 898,\n            y_min: -27,\n            y_max: 1409,\n            ha: 1436,\n            leftSideBearing: 66,\n            advanceWidth: 1024,\n        },\n        '6': {\n            x_min: 70,\n            x_max: 958,\n            y_min: -27,\n            y_max: 1401,\n            ha: 1428,\n            leftSideBearing: 70,\n            advanceWidth: 1024,\n        },\n        '7': {\n            x_min: 41,\n            x_max: 920,\n            y_min: -16,\n            y_max: 1356,\n            ha: 1372,\n            leftSideBearing: 41,\n            advanceWidth: 1024,\n        },\n        '8': {\n            x_min: 115,\n            x_max: 911,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 115,\n            advanceWidth: 1024,\n        },\n        '9': {\n            x_min: 61,\n            x_max: 940,\n            y_min: -41,\n            y_max: 1383,\n            ha: 1424,\n            leftSideBearing: 61,\n            advanceWidth: 1024,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 512,\n        },\n        '!': {\n            x_min: 266,\n            x_max: 488,\n            y_min: -22,\n            y_max: 1383,\n            ha: 1405,\n            leftSideBearing: 266,\n            advanceWidth: 682,\n        },\n        '\"': {\n            x_min: 157.2000021972655,\n            x_max: 678.2500021457677,\n            y_min: 881,\n            y_max: 1385,\n            ha: 504,\n            leftSideBearing: 157,\n            advanceWidth: 836,\n        },\n        '#': {\n            x_min: 10,\n            x_max: 1016,\n            y_min: -1,\n            y_max: 1356,\n            ha: 1357,\n            leftSideBearing: 10,\n            advanceWidth: 1024,\n        },\n        $: {\n            x_min: 90,\n            x_max: 936,\n            y_min: -180,\n            y_max: 1492,\n            ha: 1672,\n            leftSideBearing: 90,\n            advanceWidth: 1024,\n        },\n        '%': {\n            x_min: 125,\n            x_max: 1581,\n            y_min: -30,\n            y_max: 1388,\n            ha: 1418,\n            leftSideBearing: 125,\n            advanceWidth: 1706,\n        },\n        '&': {\n            x_min: 86,\n            x_max: 1536,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 86,\n            advanceWidth: 1593,\n        },\n        \"'\": {\n            x_min: 97.20000219726548,\n            x_max: 273.2500021457677,\n            y_min: 881,\n            y_max: 1385,\n            ha: 504,\n            leftSideBearing: 97,\n            advanceWidth: 369,\n        },\n        '(': {\n            x_min: 98,\n            x_max: 623,\n            y_min: -363,\n            y_max: 1383,\n            ha: 1746,\n            leftSideBearing: 98,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 59,\n            x_max: 584,\n            y_min: -363,\n            y_max: 1383,\n            ha: 1746,\n            leftSideBearing: 59,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 137.96078522291893,\n            x_max: 886.039214777081,\n            y_min: 543,\n            y_max: 1383,\n            ha: 840,\n            leftSideBearing: 137,\n            advanceWidth: 1024,\n        },\n        '+': {\n            x_min: 61,\n            x_max: 1093,\n            y_min: 2,\n            y_max: 1034,\n            ha: 1032,\n            leftSideBearing: 61,\n            advanceWidth: 1155,\n        },\n        ',': {\n            x_min: 115,\n            x_max: 399,\n            y_min: -291,\n            y_max: 208,\n            ha: 499,\n            leftSideBearing: 115,\n            advanceWidth: 512,\n        },\n        '-': {\n            x_min: 80,\n            x_max: 584,\n            y_min: 396,\n            y_max: 525,\n            ha: 129,\n            leftSideBearing: 80,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 143,\n            x_max: 371,\n            y_min: -22,\n            y_max: 205,\n            ha: 227,\n            leftSideBearing: 143,\n            advanceWidth: 512,\n        },\n        '/': {\n            x_min: -17,\n            x_max: 586,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: -17,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 166,\n            x_max: 394,\n            y_min: -22,\n            y_max: 943,\n            ha: 965,\n            leftSideBearing: 166,\n            advanceWidth: 569,\n        },\n        ';': {\n            x_min: 164,\n            x_max: 448,\n            y_min: -290,\n            y_max: 943,\n            ha: 1233,\n            leftSideBearing: 164,\n            advanceWidth: 569,\n        },\n        '<': {\n            x_min: 57,\n            x_max: 1098,\n            y_min: -15,\n            y_max: 1051,\n            ha: 1066,\n            leftSideBearing: 57,\n            advanceWidth: 1155,\n        },\n        '=': {\n            x_min: 61,\n            x_max: 1093,\n            y_min: 246,\n            y_max: 791,\n            ha: 545,\n            leftSideBearing: 61,\n            advanceWidth: 1155,\n        },\n        '>': {\n            x_min: 57,\n            x_max: 1098,\n            y_min: -15,\n            y_max: 1051,\n            ha: 1066,\n            leftSideBearing: 57,\n            advanceWidth: 1155,\n        },\n        '?': {\n            x_min: 139,\n            x_max: 848,\n            y_min: -15,\n            y_max: 1383,\n            ha: 1398,\n            leftSideBearing: 139,\n            advanceWidth: 909,\n        },\n        '@': {\n            x_min: 238,\n            x_max: 1657,\n            y_min: -29,\n            y_max: 1386,\n            ha: 1415,\n            leftSideBearing: 238,\n            advanceWidth: 1886,\n        },\n        A: {\n            x_min: 31,\n            x_max: 1445,\n            y_min: 0,\n            y_max: 1380,\n            ha: 1380,\n            leftSideBearing: 31,\n            advanceWidth: 1479,\n        },\n        B: {\n            x_min: 35,\n            x_max: 1214,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1366,\n        },\n        C: {\n            x_min: 57,\n            x_max: 1296,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 57,\n            advanceWidth: 1366,\n        },\n        D: {\n            x_min: 33,\n            x_max: 1403,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 33,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 25,\n            x_max: 1222,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1251,\n        },\n        F: {\n            x_min: 25,\n            x_max: 1119,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1139,\n        },\n        G: {\n            x_min: 66,\n            x_max: 1452,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 66,\n            advanceWidth: 1479,\n        },\n        H: {\n            x_min: 39,\n            x_max: 1438,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 39,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 37,\n            x_max: 642,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 37,\n            advanceWidth: 682,\n        },\n        J: {\n            x_min: 20,\n            x_max: 758,\n            y_min: -28,\n            y_max: 1356,\n            ha: 1384,\n            leftSideBearing: 20,\n            advanceWidth: 797,\n        },\n        K: {\n            x_min: 70,\n            x_max: 1479,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        L: {\n            x_min: 25,\n            x_max: 1224,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1251,\n        },\n        M: {\n            x_min: 25,\n            x_max: 1768,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1821,\n        },\n        N: {\n            x_min: 25,\n            x_max: 1450,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 25,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1409,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        P: {\n            x_min: 33,\n            x_max: 1110,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 33,\n            advanceWidth: 1139,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1435,\n            y_min: -364.28571588721996,\n            y_max: 1383,\n            ha: 1747.28571588722,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        R: {\n            x_min: 35,\n            x_max: 1347,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1366,\n        },\n        S: {\n            x_min: 86,\n            x_max: 1006,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        T: {\n            x_min: 35,\n            x_max: 1214,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 29,\n            x_max: 1444,\n            y_min: -28,\n            y_max: 1356,\n            ha: 1384,\n            leftSideBearing: 29,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: 33,\n            x_max: 1428,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 33,\n            advanceWidth: 1479,\n        },\n        W: {\n            x_min: 10,\n            x_max: 1906,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 10,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 20,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 20,\n            advanceWidth: 1479,\n        },\n        Y: {\n            x_min: 45,\n            x_max: 1441,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 45,\n            advanceWidth: 1479,\n        },\n        Z: {\n            x_min: 18,\n            x_max: 1222,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 18,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 180,\n            x_max: 612,\n            y_min: -319,\n            y_max: 1355,\n            ha: 1674,\n            leftSideBearing: 180,\n            advanceWidth: 682,\n        },\n        '\\\\': {\n            x_min: -17,\n            x_max: 586,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: -17,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 70,\n            x_max: 502,\n            y_min: -319,\n            y_max: 1355,\n            ha: 1674,\n            leftSideBearing: 70,\n            advanceWidth: 682,\n        },\n        '^': {\n            x_min: 49,\n            x_max: 914,\n            y_min: 608,\n            y_max: 1355,\n            ha: 747,\n            leftSideBearing: 49,\n            advanceWidth: 961,\n        },\n        _: {\n            x_min: 0,\n            x_max: 1024,\n            y_min: -255,\n            y_max: -153,\n            ha: 102,\n            leftSideBearing: 0,\n            advanceWidth: 1024,\n        },\n        '`': {\n            x_min: 39,\n            x_max: 499,\n            y_min: 1037,\n            y_max: 1392.509803639748,\n            ha: 355.50980363974804,\n            leftSideBearing: 39,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 76,\n            x_max: 905,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 76,\n            advanceWidth: 909,\n        },\n        b: {\n            x_min: 6,\n            x_max: 958,\n            y_min: -20,\n            y_max: 1399,\n            ha: 1419,\n            leftSideBearing: 6,\n            advanceWidth: 1024,\n        },\n        c: {\n            x_min: 51,\n            x_max: 843,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 51,\n            advanceWidth: 909,\n        },\n        d: {\n            x_min: 55,\n            x_max: 1006,\n            y_min: -20,\n            y_max: 1399,\n            ha: 1419,\n            leftSideBearing: 55,\n            advanceWidth: 1024,\n        },\n        e: {\n            x_min: 51,\n            x_max: 868,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 51,\n            advanceWidth: 909,\n        },\n        f: {\n            x_min: 41,\n            x_max: 783,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 41,\n            advanceWidth: 682,\n        },\n        g: {\n            x_min: 57,\n            x_max: 963,\n            y_min: -446,\n            y_max: 942,\n            ha: 1388,\n            leftSideBearing: 57,\n            advanceWidth: 1024,\n        },\n        h: {\n            x_min: 18,\n            x_max: 997,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 18,\n            advanceWidth: 1024,\n        },\n        i: {\n            x_min: 33,\n            x_max: 516,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 33,\n            advanceWidth: 569,\n        },\n        j: {\n            x_min: -142,\n            x_max: 397,\n            y_min: -446,\n            y_max: 1399,\n            ha: 1845,\n            leftSideBearing: -142,\n            advanceWidth: 569,\n        },\n        k: {\n            x_min: 14,\n            x_max: 1029,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 14,\n            advanceWidth: 1024,\n        },\n        l: {\n            x_min: 39,\n            x_max: 523,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 39,\n            advanceWidth: 569,\n        },\n        m: {\n            x_min: 33,\n            x_max: 1587,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 33,\n            advanceWidth: 1593,\n        },\n        n: {\n            x_min: 33,\n            x_max: 993,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 33,\n            advanceWidth: 1024,\n        },\n        o: {\n            x_min: 59,\n            x_max: 963,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 59,\n            advanceWidth: 1024,\n        },\n        p: {\n            x_min: 10,\n            x_max: 964,\n            y_min: -443,\n            y_max: 944,\n            ha: 1387,\n            leftSideBearing: 10,\n            advanceWidth: 1024,\n        },\n        q: {\n            x_min: 49,\n            x_max: 999,\n            y_min: -443,\n            y_max: 942.0135137169275,\n            ha: 1385.0135137169275,\n            leftSideBearing: 49,\n            advanceWidth: 1024,\n        },\n        r: {\n            x_min: 10,\n            x_max: 685,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 10,\n            advanceWidth: 682,\n        },\n        s: {\n            x_min: 104,\n            x_max: 713,\n            y_min: -20,\n            y_max: 942.0263161804552,\n            ha: 962.0263161804552,\n            leftSideBearing: 104,\n            advanceWidth: 797,\n        },\n        t: {\n            x_min: 27,\n            x_max: 572,\n            y_min: -18,\n            y_max: 1186,\n            ha: 1204,\n            leftSideBearing: 27,\n            advanceWidth: 569,\n        },\n        u: {\n            x_min: 18,\n            x_max: 981,\n            y_min: -21,\n            y_max: 921,\n            ha: 942,\n            leftSideBearing: 18,\n            advanceWidth: 1024,\n        },\n        v: {\n            x_min: 39,\n            x_max: 976,\n            y_min: -28,\n            y_max: 921,\n            ha: 949,\n            leftSideBearing: 39,\n            advanceWidth: 1024,\n        },\n        w: {\n            x_min: 43,\n            x_max: 1423,\n            y_min: -28,\n            y_max: 921,\n            ha: 949,\n            leftSideBearing: 43,\n            advanceWidth: 1479,\n        },\n        x: {\n            x_min: 35,\n            x_max: 989,\n            y_min: 0,\n            y_max: 921,\n            ha: 921,\n            leftSideBearing: 35,\n            advanceWidth: 1024,\n        },\n        y: {\n            x_min: 29,\n            x_max: 976,\n            y_min: -445,\n            y_max: 921,\n            ha: 1366,\n            leftSideBearing: 29,\n            advanceWidth: 1024,\n        },\n        z: {\n            x_min: 55,\n            x_max: 855,\n            y_min: 0,\n            y_max: 921,\n            ha: 921,\n            leftSideBearing: 55,\n            advanceWidth: 909,\n        },\n        '{': {\n            x_min: 205,\n            x_max: 717,\n            y_min: -377,\n            y_max: 1397,\n            ha: 1774,\n            leftSideBearing: 205,\n            advanceWidth: 983,\n        },\n        '|': {\n            x_min: 137,\n            x_max: 273,\n            y_min: -512,\n            y_max: 1535,\n            ha: 2047,\n            leftSideBearing: 137,\n            advanceWidth: 410,\n        },\n        '}': {\n            x_min: 266,\n            x_max: 778,\n            y_min: -377,\n            y_max: 1397,\n            ha: 1774,\n            leftSideBearing: 266,\n            advanceWidth: 983,\n        },\n        '~': {\n            x_min: 82,\n            x_max: 1028,\n            y_min: 380,\n            y_max: 666,\n            ha: 286,\n            leftSideBearing: 82,\n            advanceWidth: 1108,\n        },\n    },\n    fontFamily: 'serif',\n    resolution: 2048,\n    generatedOn: '2020-10-18T19:03:12.514Z',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Utility methods used by the rest of the VexFlow codebase.\nimport { Flow } from './flow';\nimport { log, RuntimeError } from './util';\nexport class Vex {\n    // Users of `Vex.forEach(a, fn)` should use `Array.prototype.forEach()` instead.\n    // static forEach<T>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => void) {\n    //   arr.forEach(callbackFn);\n    // }\n    /**\n     * Take `arr` and return a new list consisting of the sorted, unique,\n     * contents of arr. Does not modify `arr`.\n     */\n    // eslint-disable-next-line\n    static sortAndUnique(arr, cmp, eq) {\n        if (arr.length > 1) {\n            const newArr = [];\n            let last;\n            arr.sort(cmp);\n            for (let i = 0; i < arr.length; ++i) {\n                if (i === 0 || !eq(arr[i], last)) {\n                    newArr.push(arr[i]);\n                }\n                last = arr[i];\n            }\n            return newArr;\n        }\n        else {\n            return arr;\n        }\n    }\n    /** Check if array `arr` contains `obj`. */\n    // eslint-disable-next-line\n    static contains(arr, obj) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n    // Get the 2D Canvas context from DOM element `canvas_sel`.\n    static getCanvasContext(canvasSelector) {\n        if (!canvasSelector) {\n            throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvasSelector);\n        }\n        const canvas = document.getElementById(canvasSelector);\n        if (!(canvas && canvas.getContext)) {\n            throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n        }\n        return canvas.getContext('2d');\n    }\n    /** Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds. */\n    // eslint-disable-next-line\n    static benchmark(s, f) {\n        const start_time = new Date().getTime();\n        f();\n        const elapsed = new Date().getTime() - start_time;\n        log(s, elapsed + 'ms');\n    }\n    // Get stack trace.\n    static stackTrace() {\n        const err = new Error();\n        return err.stack;\n    }\n}\nVex.Flow = Flow;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { GonvilleSmuflFont } from './gonville_glyphs';\nimport { GonvilleMetrics } from './gonville_metrics';\nexport function loadGonville() {\n    Font.load('Gonville', GonvilleSmuflFont, GonvilleMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { CustomFont } from './custom_glyphs';\nimport { CustomMetrics } from './custom_metrics';\nexport function loadCustom() {\n    Font.load('Custom', CustomFont, CustomMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// vexflow-gonville.ts is the entry point for vexflow-gonville.js.\n// This version bundles the Gonville music engraving font.\nimport { Flow } from '../src/flow';\nimport { loadCustom } from '../src/fonts/load_custom';\nimport { loadGonville } from '../src/fonts/load_gonville';\nimport { loadTextFonts } from '../src/fonts/textfonts';\nloadGonville();\nloadCustom();\nFlow.setMusicFont('Gonville', 'Custom');\nloadTextFonts();\n// Re-export all exports from index.ts.\nexport * from '../src/index';\n// Also collect all exports into a default export for CJS projects.\nexport * as default from '../src/index';\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { TextFormatter } from '../textformatter';\nimport { PetalumaScriptFont } from './petalumascript_glyphs';\nimport { RobotoSlabFont } from './robotoslab_glyphs';\nimport { SansFontBold } from './sans_bold_text_metrics';\nimport { SansFont } from './sans_text_metrics';\nimport { SerifFont } from './serif_text_metrics';\nexport function loadTextFonts() {\n    // Sans-serif fallback font, very close to Arial\n    {\n        const fontData = SansFontBold;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Usually @ is the tallest and widest character, although not the\n        // highest since it starts below the baseline.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: true,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Generic SANS font',\n        });\n    }\n    // Sans-serif fallback font, very close to Arial\n    {\n        const fontData = SansFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Usually @ is the tallest and widest character, although not the\n        // highest since it starts below the baseline.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Generic SANS font',\n        });\n    }\n    // Serif fallback font, very close to Times\n    {\n        const fontData = SerifFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Generic SERIF font',\n        });\n    }\n    // Roboto Slab\n    {\n        const fontData = RobotoSlabFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Previously we used 'H', but it isn't actually the tallest or the widest.\n        // Interestingly, the lowercase 'b' is the tallest glyph.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Text font to pair with the Bravura / Gonville music fonts.',\n        });\n    }\n    // PetalumaScript\n    {\n        const fontData = PetalumaScriptFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Text font to pair with the Petaluma music font.',\n        });\n    }\n}\n"],"names":["root","factory","exports","module","define","amd","window","globalThis","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","Function","e","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","isCategory","category","checkAncestors","constructorFcn","constructor","CATEGORY","getPrototypeOf","isAccidental","Category","Accidental","isAnnotation","Annotation","isBarline","Barline","isDot","Dot","isGraceNote","GraceNote","isGraceNoteGroup","GraceNoteGroup","isNote","Note","isRenderContext","RenderContext","isStaveNote","StaveNote","isStemmableNote","StemmableNote","isTabNote","TabNote","RuntimeError","Error","code","message","super","globalObject","self","defined","x","undefined","log","block","args","line","Array","slice","join","console","warn","err","stack","midLine","a","b","mid_line","n","parseInt","prefix","text","normalizeAngle","Math","PI","Fraction","static","Number","isNaN","t","GCD","length","LCM","shift","LCMM","numerator","denominator","set","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","__staticFractionA","copy","__staticFractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","floor","remainder","makeAbs","abs","toString","toSimplifiedString","__staticFractionTmp","toMixedString","s","q","f","parse","str","i","split","BoundingBox","that","y","w","h","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","new_x","new_y","new_w","max","new_h","BoundingBoxComputation","x1","NaN","y1","x2","y2","getX1","getY1","width","height","addPoint","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","p01x","denom","it","p01y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","t1","sqrt","t2","FontWeight","FontStyle","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","fontParser","Fonts","Font","fontSize","SIZE","_a","scaleToPxFrom","pt","parseFloat","unit","replace","toLowerCase","size","weight","style","fromCSSString","family","SANS_SERIF","NORMAL","cssFontShorthand","document","createElement","font","fontFamily","fontWeight","fontStyle","fontInfo","st","trim","wt","sz","scaleFactor","parsedWeight","ITALIC","fontName","woffURL","includeWoff2","fontFace","FontFace","load","fonts","host","WEB_FONT_HOST","files","WEB_FONT_FILES","fontPath","loadWebFont","data","metrics","setData","setMetrics","name","getName","getData","getMetrics","hasData","getResolution","resolution","getGlyphs","glyphs","lookupMetric","defaultValue","keyParts","currObj","SERIF","px","em","in","mm","cm","PetalumaScript","Index","id","type","class","Registry","defaultRegistry","registry","index","clear","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","_b","getElementsByAttribute","attribute","index_attr","index_attr_val","keys","map","k","getElementsByType","getElementsByClass","className","onUpdate","info","includes","Element","ID","children","attrs","newID","getCategory","rendered","getDefaultRegistry","addChildElement","child","push","setStyle","setGroupStyle","forEach","getStyle","applyStyle","context","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","indexOf","addClass","removeClass","arr","splice","isRendered","setRendered","getAttributes","getSVGElement","suffix","element","oldID","getBoundingBox","getContext","setContext","setFont","toCSSString","textFont","defaultTextFont","TEXT_FONT","fontIsObject","fontIsString","fontIsUndefined","sizeWeightStyleAreUndefined","assign","validate","getFont","resetFont","setFontSize","getFontSize","fontSizeInPoints","convertSizeToPointValue","fontSizeInPixels","convertSizeToPixelValue","RESOLUTION","durations","durationAliases","keySignatures","C","num","Am","F","acc","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","G","Em","D","Bm","A","E","B","clefs","treble","line_shift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","int_val","CN","accidental","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","rest","X","octave","shift_right","accidentals","parenRightPaddingAdjustment","bb","db","bs","bss","bbs","ashs","afhf","accSagittal5v7KleismaUp","accSagittal5v7KleismaDown","accSagittal5CommaUp","accSagittal5CommaDown","accSagittal7CommaUp","accSagittal7CommaDown","accSagittal25SmallDiesisUp","accSagittal25SmallDiesisDown","accSagittal35MediumDiesisUp","accSagittal35MediumDiesisDown","accSagittal11MediumDiesisUp","accSagittal11MediumDiesisDown","accSagittal11LargeDiesisUp","accSagittal11LargeDiesisDown","accSagittal35LargeDiesisUp","accSagittal35LargeDiesisDown","accSagittalSharp25SDown","accSagittalFlat25SUp","accSagittalSharp7CDown","accSagittalFlat7CUp","accSagittalSharp5CDown","accSagittalFlat5CUp","accSagittalSharp5v7kDown","accSagittalFlat5v7kUp","accSagittalSharp","accSagittalFlat","accSagittalSharp5v7kUp","accSagittalFlat5v7kDown","accSagittalSharp5CUp","accSagittalFlat5CDown","accSagittalSharp7CUp","accSagittalFlat7CDown","accSagittalSharp25SUp","accSagittalFlat25SDown","accSagittalSharp35MUp","accSagittalFlat35MDown","accSagittalSharp11MUp","accSagittalFlat11MDown","accSagittalSharp11LUp","accSagittalFlat11LDown","accSagittalSharp35LUp","accSagittalFlat35LDown","accSagittalDoubleSharp25SDown","accSagittalDoubleFlat25SUp","accSagittalDoubleSharp7CDown","accSagittalDoubleFlat7CUp","accSagittalDoubleSharp5CDown","accSagittalDoubleFlat5CUp","accSagittalDoubleSharp5v7kDown","accSagittalDoubleFlat5v7kUp","accSagittalDoubleSharp","accSagittalDoubleFlat","accSagittal7v11KleismaUp","accSagittal7v11KleismaDown","accSagittal17CommaUp","accSagittal17CommaDown","accSagittal55CommaUp","accSagittal55CommaDown","accSagittal7v11CommaUp","accSagittal7v11CommaDown","accSagittal5v11SmallDiesisUp","accSagittal5v11SmallDiesisDown","accSagittalSharp5v11SDown","accSagittalFlat5v11SUp","accSagittalSharp7v11CDown","accSagittalFlat7v11CUp","accSagittalSharp55CDown","accSagittalFlat55CUp","accSagittalSharp17CDown","accSagittalFlat17CUp","accSagittalSharp7v11kDown","accSagittalFlat7v11kUp","accSagittalSharp7v11kUp","accSagittalFlat7v11kDown","accSagittalSharp17CUp","accSagittalFlat17CDown","accSagittalSharp55CUp","accSagittalFlat55CDown","accSagittalSharp7v11CUp","accSagittalFlat7v11CDown","accSagittalSharp5v11SUp","accSagittalFlat5v11SDown","accSagittalDoubleSharp5v11SDown","accSagittalDoubleFlat5v11SUp","accSagittalDoubleSharp7v11CDown","accSagittalDoubleFlat7v11CUp","accSagittalDoubleSharp55CDown","accSagittalDoubleFlat55CUp","accSagittalDoubleSharp17CDown","accSagittalDoubleFlat17CUp","accSagittalDoubleSharp7v11kDown","accSagittalDoubleFlat7v11kUp","accSagittal23CommaUp","accSagittal23CommaDown","accSagittal5v19CommaUp","accSagittal5v19CommaDown","accSagittal5v23SmallDiesisUp","accSagittal5v23SmallDiesisDown","accSagittalSharp5v23SDown","accSagittalFlat5v23SUp","accSagittalSharp5v19CDown","accSagittalFlat5v19CUp","accSagittalSharp23CDown","accSagittalFlat23CUp","accSagittalSharp23CUp","accSagittalFlat23CDown","accSagittalSharp5v19CUp","accSagittalFlat5v19CDown","accSagittalSharp5v23SUp","accSagittalFlat5v23SDown","accSagittalDoubleSharp5v23SDown","accSagittalDoubleFlat5v23SUp","accSagittalDoubleSharp5v19CDown","accSagittalDoubleFlat5v19CUp","accSagittalDoubleSharp23CDown","accSagittalDoubleFlat23CUp","accSagittal19SchismaUp","accSagittal19SchismaDown","accSagittal17KleismaUp","accSagittal17KleismaDown","accSagittal143CommaUp","accSagittal143CommaDown","accSagittal11v49CommaUp","accSagittal11v49CommaDown","accSagittal19CommaUp","accSagittal19CommaDown","accSagittal7v19CommaUp","accSagittal7v19CommaDown","accSagittal49SmallDiesisUp","accSagittal49SmallDiesisDown","accSagittal23SmallDiesisUp","accSagittal23SmallDiesisDown","accSagittal5v13MediumDiesisUp","accSagittal5v13MediumDiesisDown","accSagittal11v19MediumDiesisUp","accSagittal11v19MediumDiesisDown","accSagittal49MediumDiesisUp","accSagittal49MediumDiesisDown","accSagittal5v49MediumDiesisUp","accSagittal5v49MediumDiesisDown","accSagittal49LargeDiesisUp","accSagittal49LargeDiesisDown","accSagittal11v19LargeDiesisUp","accSagittal11v19LargeDiesisDown","accSagittal5v13LargeDiesisUp","accSagittal5v13LargeDiesisDown","accSagittalSharp23SDown","accSagittalFlat23SUp","accSagittalSharp49SDown","accSagittalFlat49SUp","accSagittalSharp7v19CDown","accSagittalFlat7v19CUp","accSagittalSharp19CDown","accSagittalFlat19CUp","accSagittalSharp11v49CDown","accSagittalFlat11v49CUp","accSagittalSharp143CDown","accSagittalFlat143CUp","accSagittalSharp17kDown","accSagittalFlat17kUp","accSagittalSharp19sDown","accSagittalFlat19sUp","accSagittalSharp19sUp","accSagittalFlat19sDown","accSagittalSharp17kUp","accSagittalFlat17kDown","accSagittalSharp143CUp","accSagittalFlat143CDown","accSagittalSharp11v49CUp","accSagittalFlat11v49CDown","accSagittalSharp19CUp","accSagittalFlat19CDown","accSagittalSharp7v19CUp","accSagittalFlat7v19CDown","accSagittalSharp49SUp","accSagittalFlat49SDown","accSagittalSharp23SUp","accSagittalFlat23SDown","accSagittalSharp5v13MUp","accSagittalFlat5v13MDown","accSagittalSharp11v19MUp","accSagittalFlat11v19MDown","accSagittalSharp49MUp","accSagittalFlat49MDown","accSagittalSharp5v49MUp","accSagittalFlat5v49MDown","accSagittalSharp49LUp","accSagittalFlat49LDown","accSagittalSharp11v19LUp","accSagittalFlat11v19LDown","accSagittalSharp5v13LUp","accSagittalFlat5v13LDown","accSagittalDoubleSharp23SDown","accSagittalDoubleFlat23SUp","accSagittalDoubleSharp49SDown","accSagittalDoubleFlat49SUp","accSagittalDoubleSharp7v19CDown","accSagittalDoubleFlat7v19CUp","accSagittalDoubleSharp19CDown","accSagittalDoubleFlat19CUp","accSagittalDoubleSharp11v49CDown","accSagittalDoubleFlat11v49CUp","accSagittalDoubleSharp143CDown","accSagittalDoubleFlat143CUp","accSagittalDoubleSharp17kDown","accSagittalDoubleFlat17kUp","accSagittalDoubleSharp19sDown","accSagittalDoubleFlat19sUp","accSagittalShaftUp","accSagittalShaftDown","accSagittalAcute","accSagittalGrave","accSagittal1MinaUp","accSagittal1MinaDown","accSagittal2MinasUp","accSagittal2MinasDown","accSagittal1TinaUp","accSagittal1TinaDown","accSagittal2TinasUp","accSagittal2TinasDown","accSagittal3TinasUp","accSagittal3TinasDown","accSagittal4TinasUp","accSagittal4TinasDown","accSagittal5TinasUp","accSagittal5TinasDown","accSagittal6TinasUp","accSagittal6TinasDown","accSagittal7TinasUp","accSagittal7TinasDown","accSagittal8TinasUp","accSagittal8TinasDown","accSagittal9TinasUp","accSagittal9TinasDown","accSagittalFractionalTinaUp","accSagittalFractionalTinaDown","accidentalNarrowReversedFlat","accidentalNarrowReversedFlatAndFlat","accidentalWilsonPlus","accidentalWilsonMinus","articulations","between_lines","av","aboveCode","belowCode","ao","ah","am","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","Tables","MUSIC_FONT_STACK","clef","keyOctaveGlyph","params","options","octave_shift","duration","sanitizeDuration","pieces","toUpperCase","clefProperties","stroke","int_value","customNoteHeadProps","glyphName","codeNoteHead","displaced","integer","noteValue","fret","scale","glyph","shift_y","glyphMetrics","Glyph","TABLATURE_FONT_SCALE","textWidth","getWidth","artic","spec","keySpec","notes","acc_list","durationNumber","durationToFraction","ticks","durationCodes","glyphTypeProperties","code_head","common","NOTATION_FONT_SCALE","SOFTMAX_FACTOR","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RENDER_PRECISION_PLACES","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalMap","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","unicode","sharp","String","fromCharCode","flat","natural","triangle","degrees","circle","validTypes","m","ci","cx","sf","sb","sq","tu","td","TIME4_4","num_beats","beat_value","stem","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","ledger_code_head","beam_count","stem_beam_extension","code_flag_upstem","code_flag_downstem","OutlineCode","ModifierPosition","GlyphCacheEntry","fontStack","point","loadMetrics","bbox","getOutlineBoundingBox","outline","x_shift","y_shift","lookupFontMetric","GlyphOutline","originX","originY","precision","round","nextX","nextY","parts","MOVE","LINE","QUADRATIC","BEZIER","lookupGlyph","x_min","x_max","ha","cached_outline","ctx","x_pos","y_pos","cache","lookup","customScale","renderOutline","go","beginPath","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","fill","bboxComp","penX","penY","topGlyphs","botGlyphs","originShift","setOptions","reset","getCode","setPoint","setStave","stave","getXShift","setXShift","getYshift","setYShift","checkMetrics","metricsScale","setOriginX","xShift","setOriginY","yShift","setOrigin","render","xPos","yPos","checkStave","renderToStave","getYForGlyphs","Map","entries","CURRENT_CACHE_KEY","entry","Modifier","Position","PositionString","center","CENTER","above","ABOVE","below","BELOW","left","LEFT","right","RIGHT","text_line","spacingFromNextModifier","setWidth","getNote","note","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifierContext","checkModifierContext","setModifierContext","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setXOffset","Music","NUM_TONES","canonical_notes","roots","root_values","root_indices","diatonic_intervals","diatonic_accidentals","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","noteValues","root_index","cn","cb","cbb","dn","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","match","exec","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySignature","keySigParts","scaleName","keySigString","noteLocation","scaleMap","rootName","noteName","L","DEBUG","state","musicFont","currentMusicFont","noteheadAccidentalPadding","leftShift","left_shift","accidentalSpacing","additionalPadding","accList","prevNote","shiftL","props","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","sort","lineList","previousLine","accShift","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","clearance","clearanceRequired","collision","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","getModifiers","modifier","addModifier","getGraceNotes","render_options","font_scale","parenLeftPadding","parenRightPadding","accidentalCodes","cautionary","fontScale","parenLeft","parenRight","parenWidth","setAsCautionary","start","getModifierStartXY","accX","accY","Stem","UP","DOWN","WIDTH","HEIGHT","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","getHeight","y_offset","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","min","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stem_x","stem_y","y_base_offset","stemletYOffset","openGroup","pointerBBox","closeGroup","TextFormatter","textWidthCache","textHeightCache","registeredFonts","formatterInfo","requestedFont","candidates","requestedFamilies","requestedFamily","startsWith","formatter","values","bold","isBold","italic","isItalic","perfectMatch","find","partialMatch","fontSizeInPt","overwrite","serifs","monospaced","superscriptOffset","subscriptOffset","maxSizeGlyph","cacheKey","updateParams","localHeightCache","updateCacheKey","BOLD","getGlyphMetrics","character","maxHeight","getWidthForCharacterInEm","advanceWidth","getYForCharacterInPx","rv","yMin","yMax","y_min","y_max","getYForStringInPx","extent","curY","getWidthForTextInEm","cachedWidths","getWidthForTextInPx","AnnotationHorizontalJustify","AnnotationVerticalJustify","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","textFormatter","create","verticalSpaceNeeded","glyphWidth","getGlyphProps","horizontalJustification","stemDirection","hasStem","getStemDirection","lines","draw_stem","getStem","getNoteType","getNumLines","verticalJustification","VerticalJustify","TOP","noteLine","getLineNumber","leastString","top_text_line","BOTTOM","greatestString","curBottom","rightOverlap","right_shift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","text_width","text_height","getStemX","stem_ext","spacing","has_stem","checkStem","getYs","reduce","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","fillText","HorizontalJustify","centerStem","CENTER_STEM","top","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveOrGraceNote","Articulation","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","articulationCodes","textLine","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","padding","stemTipY","stemBaseY","getTopY","INITIAL_OFFSET","getBottomY","offsetDirection","articLine","snappedLine","snapLineToStaff","setRawFont","drawDot","color","arc","closePath","Tickable","_preFormatted","_postFormatted","intrinsicTicks","tickMultiplier","modifiers","tupletStack","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","centerXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","pop","setTuplet","addToModifierContext","mc","addMember","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","xStart","leftDisplacedHeadPx","xPre1","xAbs","xPost1","notePx","xPost2","rightDisplacedHeadPx","xEnd","xFreedomRight","xWidth","yy","spaceDeviation","durationString","dots","noteStruct","durationProps","parseDuration","customTypes","durationToTicks","currentTicks","parsedNoteStruct","parseNoteStruct","JSON","stringify","keyProps","noteType","duration_override","glyphProps","customGlyphs","playNote","annotation_spacing","glyph_font_scale","stroke_px","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getGlyph","getGlyphWidth","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","filter","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","getMembers","getState","glyphPx","getNoteStartX","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifierPosition","BarlineType","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","SymbolTypes","SymbolModifiers","StaveModifier","placeGlyphOnLine","customShift","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","typeString","single","SINGLE","double","DOUBLE","end","END","repeatBegin","REPEAT_BEGIN","repeatEnd","REPEAT_END","repeatBoth","REPEAT_BOTH","none","NONE","thickness","TYPE","widths","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","setType","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","staveCtx","botY","getBottomLineBottomY","fillRect","begin","dot_x","dot_radius","dot_y","BarNote","barline","Bend","bends","last_width","stringPos","release","phrase","tap","line_width","line_style","bend_width","release_width","updateWidth","setTap","getText","getTextHeight","totalWidth","additional_width","draw_width","lowestY","bend_height","annotation_y","renderBend","cp_x","cp_y","renderRelease","renderArrowHead","yBase","renderText","render_x","measureText","last_bend","last_bend_draw_width","last_drawn_width","ChordSymbol","superSubRatio","global","NO_TEXT_FORMAT","val","noFormat","glyphCode","engravingFontResolution","spacingBetweenBlocks","metric","getMetricForGlyph","yOffset","leftSideBearing","kerningOffset","chordSymbol","lowerKerningText","upperKerningText","symbolModifier","SUPERSCRIPT","SUBSCRIPT","minPadding","symbols","nonSuperWidth","symbol","fontAdj","scaleSize","glyphAdj","symbolWidth","lineSpaces","vAlign","j","symbolBlocks","sup","isSuperscript","sub","isSubscript","superSubScale","adj","symbolType","GLYPH","superSubFontSize","getWidthForGlyph","getYShiftForGlyph","getXShiftForGlyph","TEXT","getYOffsetForText","over","prev","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","getReportWidth","getHorizontal","horizontal","vertical","useKerning","reportWidth","setReportWidth","barIndex","findIndex","xoff","yoff","symIndex","accum","getKerningAdjustment","currSymbol","prevSymbol","adjustment","preKernUpper","preKernLower","some","xx","kerningOffsetPixels","getSymbolBlock","_c","symbolBlock","glyphArgs","glyphPoints","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","stem_base","isSuper","isSub","smallerFontSize","diminished","dim","halfDiminished","augmented","majorSeventh","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","symbolTypes","symbolModifiers","all","dot","setDotShiftY","dot_list","max_shift_map","note_id","dot_shift","x_width","last_line","last_note","prev_dotted_space","half_shiftY","radius","forceFlagRight","FretHandFinger","nums","nums_list","prev_note","shiftLeft","shiftRight","pos","textHeight","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","lastLine","lastNote","num_shift","numWidth","fingerings","fingeringString","number","Fingering","fingering","finger","x_offset","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","NoteHead","custom_glyph","stem_up_x_offset","stem_down_x_offset","note_type","glyph_code","custom_glyph_code","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","fontShift","displacedFontShift","half_spacing","min_y","getYForNote","head_x","categorySuffix","staveSpace","durationToNumber","breve_lines","drawSlashNoteHead","renderGlyph","setStem","buildStem","buildFlag","hasFlag","flagCode","getBaseCustomNoteHeadGlyphProps","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","setStemDirection","offsets","offsetYBaseStemUp","offsetYTopStemUp","offsetYBaseStemDown","offsetYTopStemDown","getCenterGlyphX","stem_extension_override","setStemLength","drawStem","stemOptions","shiftRestVertical","dir","delta","maxLine","minLine","setKeyLine","getKeyLine","STEM_UP","STEM_DOWN","LEDGER_LINE_OFFSET","minNoteheadPadding","notesList","sortedKeyProps","minL","stemMax","stemMin","maxL","isrest","voice_shift","getVoiceShiftWidth","is_displaced","noteU","noteM","noteL","voiceXShift","lineSpacing","lineDiff","whiteNoteHeadCount","blackNoteHeadCount","centerRest","ledgerLineStyle","use_default_head_x","_noteHeads","calculateKeyProps","auto_stem","autoStem","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","head","calcNoteDisplacements","noteProps","notehead","calculateOptimalStemDirection","keyProperties","minY","maxY","halfLineSpacing","frac","resultLine","thisLine","isChord","getNoteHeadBounds","setNoteDisplaced","getRightShift","restLine","isInnerNoteIndex","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","getFlagStyle","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","yTop","Infinity","yBottom","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","noteHeads","note_heads","drawLedgerLines","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","drawModifiers","noteheadParam","noteheadStyle","hasNoBeam","drawFlag","_d","_e","noteStemHeight","flagX","flagY","getStaveNoteScale","drawNoteHeads","super_stem_extension","mid_line_distance","lines_over_octave_from_mid_line","spacing_between_lines","xBegin","shouldRenderStem","stemX","StaveTie","setNotes","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","first_note","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","first_x_px","first_y_px","last_y_px","top_cp_y","bottom_cp_y","center_x","getNotes","getTieStartX","getTieEndX","TabTie","VoiceMode","Voice","Mode","time","voiceTime","resolutionMultiplier","mode","STRICT","ticksUsed","largestTickWidth","softmaxFactor","totalTicks","smallestTickCount","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","tickable","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","reCalculateExpTicksUsed","expTicksUsed","softmax","tickValue","v","exp","addTickable","addTickables","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","grace_notes","show_slur","slur","slur_y_shift","beams","Formatter","joinVoices","format","getMinTotalWidth","beamNotes","Beam","beam_width","partial_beam_length","graceNote","TieClass","NoteSubGroup","groups","group","TickContext","tContext","contexts","tContexts","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","totalLeftPx","totalRightPx","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","getCurrentTick","setCurrentTick","tick","Ornament","ornament","ornamentRelease","ornamentAttack","reportedWidth","ornamentArticulation","ornamentNoteTransition","ornamentAlignWithNoteHead","jazzOrnaments","delayed","accidentalLowerPadding","accidentalUpperPadding","ornamentCodes","adjustForStemDirection","stemUpYOffset","setDelayed","setUpperAccidental","accid","accidentalUpper","setLowerAccidental","accidentalLower","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","nextContext","getNextContext","Parenthesis","parentheses","x_widthL","x_widthR","parenthesis","isHTMLCanvas","HTMLCanvasElement","toDataURL","isHTMLDiv","HTMLDivElement","appendChild","CanvasContext","CANVAS_BROWSER_SIZE_LIMIT","limit","context2D","canvas","clearRect","cls","setBackgroundFillStyle","blur","getTransform","setLineCap","capType","lineCap","setLineDash","dash","resize","devicePixelRatio","sanitizeCanvasDims","rect","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","ATTRIBUTES_TO_IGNORE","path","SVG_NS","TWO_PI","SVGContext","backgroundFillStyle","fontCSSString","svg","parent","pen","defaultFontAttributes","scaleX","scaleY","attributes","groupAttributes","applyAttributes","shadow_attributes","state_stack","svgElementType","createElementNS","lineDash","visibleWidth","visibleHeight","setViewBox","viewBox_or_minX","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","removeChild","rectangle","x0","cos","y0","sin","tmpStartTest","tmpEndTest","large","sweep","getShadowStyle","sa","measureTextCache","txt","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","TextJustification","VoltaType","measureImpl","getBBox","Renderer","elementId","backend","background","renderer","lastContext","buildContext","Backends","CANVAS","SVG","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","arg0","arg1","maybeElement","willReadFrequently","LineEndType","StringNumber","stringNumber","verticalPadding","stemPadding","leftPadding","rightPadding","shift_left","glyphLine","num_shiftR","num_width","string_number","stem_offset","dashed","leg","drawCircle","setLineEndType","setStringNumber","setLastNote","setDashed","setDrawCircle","len","pattern","drawDashedLine","Stroke","strokes","strokeList","string","getPositions","strokeShift","all_voices","addEndNote","note_end","line_space","arrow","arrow_shift_x","arrow_y","text_y","Type","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","Vibrato","vibratos","vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","setHarsh","vx","vy","renderVibrato","opts","num_waves","ModifierContext","members","formatted","member","getLeftShift","Clef","types","tab","attachment","numLines","shiftY","KeySignature","cancelKeySpec","alterKeySpec","setKeySig","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","xPosition","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","concat","addToStave","convertAccLines","customLines","offset","alterKey","convertToAlterAccList","firstAccidentalType","cancelAccList","getEndClef","getClef","Repetition","symbol_type","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSignoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","draw_coda","text_x","symbol_x","modifierWidth","getVerticalBarWidth","StaveSection","section","drawRect","shift_x","setStaveSection","textY","headroom","StaveTempo","tempo","setTempo","bpm","noteTextFont","noteTextFormatter","stem_height","flagMetrics","TextNote","GLYPHS","segno","mordent_upper","mordent_lower","p","z","coda","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","superscript","subscript","smooth","justification","struct","Justification","StaveText","setStaveText","setText","getBottomLineY","Volta","volta","top_y","vert_height","BEGIN_END","TimeSignatureGlyph","timeSignature","topDigits","botDigits","topWidth","timeSigType","topGlyph","botWidth","botGlyph","topStartX","botStartX","start_x","topLine","bottomLine","TimeSignature","timeSpec","customPadding","validate_args","fontLineShift","parseTimeSpec","numbers","test","assertIsValidTimeSig","makeTimeSignatureGlyph","getInfo","setTimeSig","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","Stave","defaultPadding","end_x","measure","endClef","vertical_bar_width","num_lines","fill_style","left_bar","right_bar","spacing_between_lines_px","space_above_staff_ln","space_below_staff_ln","top_text_position","bottom_text_position","line_config","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","setDefaultLedgerLineStyle","visible","setNoteStartX","getNoteEndX","setNumLines","mod","setMeasure","getMeasure","getModifierXShift","begBarline","setRepetitionType","setVoltaType","number_t","setSection","staveSection","getLineForY","setBegBarType","setEndBarType","setClef","clefSpec","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","staves","maxX","drawBoldDoubleLine","topX","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","texts","newType","content","SINGLE_RIGHT","THIN_DOUBLE","attachment_height","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","sumArray","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","noteIndex","paddingBetween","accumulator","stavePadding","contextGaps","gaps","gap","totalCost","toFixed","total","auto_beam","align_rests","applyAndGetBeams","formatToStave","tabstave","tabnotes","autobeam","notevoice","tabvoice","alignAllNotes","alignTuplets","currTickable","prevTickable","formatterOptions","globalSoftmax","maxIterations","justifyWidth","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","array","list","modifierContexts","lossHistory","alignRests","AlignRestsToNotes","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","tickToContextMap","integerTicks","staveTickToContextMap","newContext","makeContext","addToContext","tickList","createContexts","contextArray","getTickContexts","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","calcMinDistance","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","tune","alpha","current","cost","optionsParam","TupletLocation","Tuplet","LOCATION_TOP","LOCATION_BOTTOM","NESTING_OFFSET","numerator_glyphs","denom_glyphs","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","ratioed","setTupletLocation","location","resolveGlyphs","attach","detach","setBracketed","setRatioed","getBeatsOccupied","setBeatsOccupied","beats","setNotesOccupied","unshift","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nested_tuplet_y_offset","topModifierOffset","modLines","modY","noteHeadOffset","stemOffset","lineCheck","nn","bottom_y","addGlyphWidth","notation_start_x","colon_x","colon_radius","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_RIGHT","BEAM_BOTH","time_sig","beatTotal","beatValue","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","vf_notes","memo","unbeamable","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","show_stemlets","secondary_breaks","secondary_break_ticks","flat_beams","flat_beam_offset","slope","forcedPartialDirections","stem_weight","break_on_indices","max_slope","min_slope","slope_iterations","slope_cost","stemlet_extension","min_flat_beam_offset","beamCount","breakSecondaryAt","indices","setPartialBeamSideAt","side","unsetPartialBeamSideAt","getSlopeY","calculateSlope","firstNote","initialSlope","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","crossStemExtension","totalBeamWidth","lookupBeamDirection","prev_tick","next_tick","forcedBeamDirection","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","getBeamLines","tick_of_duration","beam_started","beam_lines","current_beam","previous_should_break","tick_tally","should_break","next_note","beam_alone","beam_direction","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","ClefNote","abs_x","Crescendo","extend_left","extend_right","decrescendo","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","renderHairpin","CurvePosition","Curve","nearHead","NEAR_HEAD","nearTop","NEAR_TOP","from","to","position_end","invert","cps","renderCurve","first_x","first_y","last_x","last_y","cp0x","cp0y","cp_spacing","end_metric","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","bind","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","standardAccidentals","notePiece","GhostNote","buildAndAttach","setId","commaSeparatedRegex","setClass","defaults","easyScoreHook","throwOnError","parser","ERROR_MSG","parameter","GlyphNote","ignoreTicks","setGlyph","SCALE","slash","ret","staveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beam_slope","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","KeySigNote","semibreve_rest","MultiMeasureRest","number_of_measures","xs","hasPaddingLeft","hasPaddingRight","hasLineThickness","hasSymbolSpacing","padding_left","padding_right","line_thickness","symbol_spacing","use_symbols","show_number","number_line","number_glyph_point","serif_thickness","semibreve_rest_glyph_scale","getXs","drawLine","spacingBetweenLines","lineThicknessHalf","serifThickness","bot","leftIndented","rightIndented","lineTop","lineBottom","drawSymbols","n4","n2","n1","get_semibreve_rest","rest_scale","rest_width","yMiddle","timeSig","drawPedalGlyph","glyph_data","PedalMarking","pedal","MIXED","setCustomText","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","pedal_depress","pedal_release","mixed","CODES","RepeatNote","drawArrowHead","StaveLine","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","applyLineStyle","applyFontStyle","drawArrowLine","pt1","pt2","both_arrows","distance","ratio","end_y","start_y","line_angle","angle1","angle2","top_x","bottom_x","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","vertical_position","System","partStaves","partStaveInfos","partVoices","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","getStaves","getVoices","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","addVoices","options_details","debugNoteMetricsYs","part","lastY","formatBegModifiers","plotDebugging","plotMetrics","glyphPropsArr","positions","ghost","draw_dots","draw_stem_through_stave","setGhost","tabToGlyphProps","getStemY","stemDownLine","stemStartLine","flag_x","flag_y","drawStemThrough","stemThrough","stemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","strings","containsLastString","containsFirstString","line_ys","isTopBound","isBottomBound","getPartialStemLines","strings_used","stem_through","getUnusedStringGroups","drawPositions","tab_x","render_stem","TabStave","addTabGlyph","TextBracket","TextBracketPosition","Positions","PositionsString","stop","show_bracket","underline_superscript","main_measure","main_width","main_height","super_y","super_measure","super_width","super_height","line_y","TextDynamics","sequence","glyph_font_size","total_width","letter","letter_x","current_letter","TimeSigNote","timeSigInfo","VibratoBracket","bracket_data","stop_x","Factory","renderQ","systems","initRenderer","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","kerning","upperAccidental","lowerAccidental","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","curve","tie","vibratoBracket","textBracket","system","GraceTabNote","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","StaveHairpin","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","left_shift_px","right_shift_px","setRenderOptions","hairpin","dis","staff_height","l_shift","r_shift","CRESC","DECRESC","TabSlide","SLIDE_UP","SLIDE_DOWN","first_fret","last_fret","slide_y","Tremolo","y_spacing_scale","extra_stroke_scale","y_spacing","Tuning","names","standard","dagdad","dropd","standardBanjo","tuningString","tuningValues","setTuning","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","integerToNote","Flow","BUILD","VERSION","DATE","fontNames","fontModuleOrPath","hasKeySignature","getKeySignatures","CustomFont","noteheadSquareWhite","noteheadSquareBlack","accidentalBuyukMucennebFlat","accidentalBakiyeFlat","accidentalKucukMucennebSharp","accidentalKoron","accidentalSori","vexAccidentalMicrotonal1","vexAccidentalMicrotonal2","vexAccidentalMicrotonal3","vexAccidentalMicrotonal4","vexNoteHeadRectBlack","vexNoteHeadRectWhite","vexWiggleArpeggioUp","CustomMetrics","smufl","GonvilleSmuflFont","bracketTop","bracketBottom","barlineTick","breathMarkTick","gClef","cClef","fClef","unpitchedPercussionClef1","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","timeSigPlus","timeSigPlusSmall","timeSigMinus","timeSigParensRight","timeSigParensRightSmall","timeSigParensLeft","timeSigParensLeftSmall","noteheadDoubleWhole","noteheadWhole","noteheadHalf","noteheadBlack","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleX","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalFlat","accidentalNatural","accidentalSharp","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalKomaSharp","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articStaccatissimoAbove","articStaccatissimoBelow","articMarcatoAbove","articMarcatoBelow","fermataAbove","fermataBelow","fermataLongAbove","fermataLongBelow","fermataVeryLongAbove","fermataVeryLongBelow","fermataShortAbove","fermataShortBelow","breathMarkComma","breathMarkUpbow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restWholeLegerLine","restHalf","restHalfLegerLine","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentShortTrill","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedSnapPizzicatoBelow","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","arrowheadBlackUp","arrowheadBlackDown","generatedOn","GonvilleMetrics","endPaddingMax","endPaddingMin","unalignedNotePadding","default","small","smuflCode","shiftX","lineCount","gracenote","pedalMarking","up","down","digits","tupletPoint","tremolo","offsetYStemUp","offsetYStemDown","offsetXStemUp","offsetXStemDown","grace","staveRepetition","symbolText","offsetX","offsetY","heightAdjustmentForFlag","csymDiminished","csymHalfDiminished","csymAugmented","csymParensLeftTall","csymParensRightTall","csymBracketLeftTall","csymBracketRightTall","csymParensLeftVeryTall","csymParensRightVeryTall","csymDiagonalArrangementSlash","csymMinor","csymMajorSeventh","brassScoop","brassDoitMedium","brassFallLipShort","brassLiftMedium","brassFallRoughMedium","brassBend","brassMuteClosed","brassMuteOpen","brassFlip","brassJazzTurn","brassSmear","PetalumaScriptFont","$","I","J","K","N","O","Q","U","V","Y","Z","_","l","RobotoSlabFont","SansFontBold","SansFont","Description","SerifFont","Vex","cmp","eq","newArr","last","canvasSelector","start_time","Date","getTime","setMusicFont","fontData","registerInfo","description","loadTextFonts"],"sourceRoot":""}