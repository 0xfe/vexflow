{"version":3,"file":"vexflow-gonville.js","mappings":"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","sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/webpack/runtime/define property getters","webpack://Vex/webpack/runtime/global","webpack://Vex/webpack/runtime/hasOwnProperty shorthand","webpack://Vex/webpack/runtime/make namespace object","webpack://Vex/./src/typeguard.ts","webpack://Vex/./src/util.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/boundingboxcomputation.ts","webpack://Vex/./src/font.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/glyph.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/textformatter.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/rendercontext.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/parenthesis.ts","webpack://Vex/./src/web.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/timesigglyph.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/flow.ts","webpack://Vex/./src/version.ts","webpack://Vex/./src/fonts/common_metrics.ts","webpack://Vex/./src/fonts/custom_glyphs.ts","webpack://Vex/./src/fonts/gonville_glyphs.ts","webpack://Vex/./src/fonts/petalumascript_glyphs.ts","webpack://Vex/./src/fonts/robotoslab_glyphs.ts","webpack://Vex/./src/fonts/sans_bold_text_metrics.ts","webpack://Vex/./src/fonts/sans_text_metrics.ts","webpack://Vex/./src/fonts/serif_text_metrics.ts","webpack://Vex/./src/vex.ts","webpack://Vex/./src/fonts/load_gonville.ts","webpack://Vex/./src/fonts/load_custom.ts","webpack://Vex/./entry/vexflow-gonville.ts","webpack://Vex/./src/fonts/textfonts.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})((typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Use instead of `instanceof` as a more flexible type guard.\n * @param obj check if this object's CATEGORY matches the provided category.\n * @param category a string representing a category of VexFlow objects.\n * @param checkAncestors defaults to `true`, so we walk up the prototype chain to look for a matching `CATEGORY`.\n *        If `false`, we do not check the superclass or other ancestors.\n * @returns true if `obj` has a static `CATEGORY` property that matches `category`.\n */\nexport function isCategory(obj, category, checkAncestors = true) {\n    // obj is undefined, a number, a primitive string, or null.\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    // `obj.constructor` is a reference to the constructor function that created the `obj` instance.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\n    let constructorFcn = obj.constructor;\n    // Check if the object's static .CATEGORY matches the provided category.\n    if (checkAncestors) {\n        // Walk up the prototype chain to look for a matching obj.constructor.CATEGORY.\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        // Do not walk up the prototype chain. Just check this particular object's static .CATEGORY string.\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n    }\n}\nexport const isAccidental = (obj) => isCategory(obj, Category.Accidental);\nexport const isAnnotation = (obj) => isCategory(obj, Category.Annotation);\nexport const isBarline = (obj) => isCategory(obj, Category.Barline);\nexport const isDot = (obj) => isCategory(obj, Category.Dot);\nexport const isGraceNote = (obj) => isCategory(obj, Category.GraceNote);\nexport const isGraceNoteGroup = (obj) => isCategory(obj, Category.GraceNoteGroup);\nexport const isNote = (obj) => isCategory(obj, Category.Note);\nexport const isRenderContext = (obj) => isCategory(obj, Category.RenderContext);\nexport const isStaveNote = (obj) => isCategory(obj, Category.StaveNote);\nexport const isStemmableNote = (obj) => isCategory(obj, Category.StemmableNote);\nexport const isTabNote = (obj) => isCategory(obj, Category.TabNote);\n// 'const' enums are erased by the TypeScript compiler. The string values are inlined at all the use sites.\n// See: https://www.typescriptlang.org/docs/handbook/enums.html#const-enums\nexport var Category;\n(function (Category) {\n    Category[\"Accidental\"] = \"Accidental\";\n    Category[\"Annotation\"] = \"Annotation\";\n    Category[\"Articulation\"] = \"Articulation\";\n    Category[\"Barline\"] = \"Barline\";\n    Category[\"BarNote\"] = \"BarNote\";\n    Category[\"Beam\"] = \"Beam\";\n    Category[\"Bend\"] = \"Bend\";\n    Category[\"ChordSymbol\"] = \"ChordSymbol\";\n    Category[\"Clef\"] = \"Clef\";\n    Category[\"ClefNote\"] = \"ClefNote\";\n    Category[\"Crescendo\"] = \"Crescendo\";\n    Category[\"Curve\"] = \"Curve\";\n    Category[\"Dot\"] = \"Dot\";\n    Category[\"Element\"] = \"Element\";\n    Category[\"Fraction\"] = \"Fraction\";\n    Category[\"FretHandFinger\"] = \"FretHandFinger\";\n    Category[\"GhostNote\"] = \"GhostNote\";\n    Category[\"Glyph\"] = \"Glyph\";\n    Category[\"GlyphNote\"] = \"GlyphNote\";\n    Category[\"GraceNote\"] = \"GraceNote\";\n    Category[\"GraceNoteGroup\"] = \"GraceNoteGroup\";\n    Category[\"GraceTabNote\"] = \"GraceTabNote\";\n    Category[\"KeySignature\"] = \"KeySignature\";\n    Category[\"KeySigNote\"] = \"KeySigNote\";\n    Category[\"Modifier\"] = \"Modifier\";\n    Category[\"MultiMeasureRest\"] = \"MultiMeasureRest\";\n    Category[\"Note\"] = \"Note\";\n    Category[\"NoteHead\"] = \"NoteHead\";\n    Category[\"NoteSubGroup\"] = \"NoteSubGroup\";\n    Category[\"Ornament\"] = \"Ornament\";\n    Category[\"Parenthesis\"] = \"Parenthesis\";\n    Category[\"PedalMarking\"] = \"PedalMarking\";\n    Category[\"RenderContext\"] = \"RenderContext\";\n    Category[\"RepeatNote\"] = \"RepeatNote\";\n    Category[\"Repetition\"] = \"Repetition\";\n    Category[\"Stave\"] = \"Stave\";\n    Category[\"StaveConnector\"] = \"StaveConnector\";\n    Category[\"StaveHairpin\"] = \"StaveHairpin\";\n    Category[\"StaveLine\"] = \"StaveLine\";\n    Category[\"StaveModifier\"] = \"StaveModifier\";\n    Category[\"StaveNote\"] = \"StaveNote\";\n    Category[\"StaveSection\"] = \"StaveSection\";\n    Category[\"StaveTempo\"] = \"StaveTempo\";\n    Category[\"StaveText\"] = \"StaveText\";\n    Category[\"StaveTie\"] = \"StaveTie\";\n    Category[\"Stem\"] = \"Stem\";\n    Category[\"StemmableNote\"] = \"StemmableNote\";\n    Category[\"StringNumber\"] = \"StringNumber\";\n    Category[\"Stroke\"] = \"Stroke\";\n    Category[\"System\"] = \"System\";\n    Category[\"TabNote\"] = \"TabNote\";\n    Category[\"TabSlide\"] = \"TabSlide\";\n    Category[\"TabStave\"] = \"TabStave\";\n    Category[\"TabTie\"] = \"TabTie\";\n    Category[\"TextBracket\"] = \"TextBracket\";\n    Category[\"TextDynamics\"] = \"TextDynamics\";\n    Category[\"TextNote\"] = \"TextNote\";\n    Category[\"Tickable\"] = \"Tickable\";\n    Category[\"TimeSignature\"] = \"TimeSignature\";\n    Category[\"TimeSigNote\"] = \"TimeSigNote\";\n    Category[\"Tremolo\"] = \"Tremolo\";\n    Category[\"Tuplet\"] = \"Tuplet\";\n    Category[\"Vibrato\"] = \"Vibrato\";\n    Category[\"VibratoBracket\"] = \"VibratoBracket\";\n    Category[\"Voice\"] = \"Voice\";\n    Category[\"Volta\"] = \"Volta\";\n})(Category || (Category = {}));\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// Note: Keep this module free of imports to reduce the chance of circular dependencies.\n/** `RuntimeError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\n/** VexFlow can be used outside of the browser (e.g., Node) where `window` may not be defined. */\n// eslint-disable-next-line\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\n/**\n * Check that `x` is of type `T` and not `undefined`.\n * If `x` is `undefined`, throw a RuntimeError with the optionally provided error code and message.\n */\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\n/** Default log function sends all arguments to console. */\n// eslint-disable-next-line\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\n/** Dump warning to console. */\n// eslint-disable-next-line\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a, b) {\n    let mid_line = b + (a - b) / 2;\n    if (mid_line % 2 > 0) {\n        mid_line = roundN(mid_line * 10, 5) / 10;\n    }\n    return mid_line;\n}\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text) {\n    return `vf-${text}`;\n}\n/**\n * Convert an arbitrary angle in radians to the equivalent one in the range [0, pi).\n */\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\n/**\n * Return the sum of an array of numbers.\n */\nexport function sumArray(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// Author: Joshua Koo / @zz85\n// Author: @incompleteopus\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/** Fraction represents a rational number. */\nclass Fraction {\n    static get CATEGORY() {\n        return Category.Fraction;\n    }\n    /**\n     * GCD: Greatest common divisor using the Euclidean algorithm.\n     * Note: GCD(0, 0) => 0 and GCD(0, n) => n.\n     */\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    /** LCM: Lowest common multiple. */\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    /** Lowest common multiple for more than two numbers. */\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            // args.shift() removes the first number.\n            // LCM the first number with the rest of the numbers.\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    /** Set the numerator and denominator. */\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    /** Set the numerator and denominator. */\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    /** Return the value of the fraction. */\n    value() {\n        return this.numerator / this.denominator;\n    }\n    /** Simplify numerator and denominator using GCD. */\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    /** Add value of another fraction. */\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Substract value of another fraction. */\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Multiply by value of another fraction. */\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    /** Divide by value of another Fraction. */\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    /** Simplify both sides and check if they are equal. */\n    equals(compare) {\n        const a = Fraction.__staticFractionA.copy(compare).simplify();\n        const b = Fraction.__staticFractionB.copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    /** Greater than operator. */\n    greaterThan(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    /** Greater than or equals operator. */\n    greaterThanEquals(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    /** Less than operator. */\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    /** Less than or equals operator. */\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    /** Return a new copy with current values. */\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    /** Copy value of another fraction. */\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other, 1);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    /** Return the integer component (eg. 5/2 => 2). */\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    /** Return the remainder component (eg. 5/2 => 1). */\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    /** Calculate absolute value. */\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    /** Return a raw string representation (eg. \"5/2\"). */\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    /** Return a simplified string respresentation. */\n    toSimplifiedString() {\n        return Fraction.__staticFractionTmp.copy(this).simplify().toString();\n    }\n    /** Return string representation in mixed form. */\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = Fraction.__staticFractionTmp.copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    /** Parse a fraction string. */\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\n// Cached objects for comparisons.\nFraction.__staticFractionA = new Fraction();\nFraction.__staticFractionB = new Fraction();\nFraction.__staticFractionTmp = new Fraction();\nexport { Fraction };\n/** Helper function to extract the numerator and denominator from another fraction. */\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        // Both params are numbers, so we return them as [numerator, denominator].\n        return [n, d];\n    }\n    else {\n        // First param is a Fraction object. We ignore the second param.\n        return [n.numerator, n.denominator];\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nexport class BoundingBox {\n    /**\n     * Create a new copy.\n     */\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    /** Get x position. */\n    getX() {\n        return this.x;\n    }\n    /** Get y position. */\n    getY() {\n        return this.y;\n    }\n    /** Get width. */\n    getW() {\n        return this.w;\n    }\n    /** Get height. */\n    getH() {\n        return this.h;\n    }\n    /** Set x position. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Set y position. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Set width. */\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    /** Set height. */\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    /** Move to position. */\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    /** Clone. */\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    /**\n     * Merge my box with given box. Creates a bigger bounding box unless\n     * the given box is contained in this one.\n     */\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const new_x = this.x < that.x ? this.x : that.x;\n        const new_y = this.y < that.y ? this.y : that.y;\n        const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n        const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n        this.x = new_x;\n        this.y = new_y;\n        this.w = new_w;\n        this.h = new_h;\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n/**\n * BoundingBoxComputation computes metrics for a bounding box by continuously\n * taking canvas path commands.\n *\n * Warning: This class is merely a crutch to get bounding box information without\n * explicit metadata. This is likely to get deprecated following SMuFL support.\n *\n * based on: https://github.com/canvg/canvg/blob/master/src/BoundingBox.ts (MIT License)\n */\nexport class BoundingBoxComputation {\n    constructor() {\n        this.x1 = Number.NaN;\n        this.y1 = Number.NaN;\n        this.x2 = Number.NaN;\n        this.y2 = Number.NaN;\n    }\n    /** Get calculated X1. */\n    getX1() {\n        return this.x1;\n    }\n    /** Get calculated Y1. */\n    getY1() {\n        return this.y1;\n    }\n    /** Get calculated width. */\n    width() {\n        return this.x2 - this.x1;\n    }\n    /** Get calculated height. */\n    height() {\n        return this.y2 - this.y1;\n    }\n    /** Add point to BoundingBox. */\n    addPoint(x, y) {\n        if (isNaN(this.x1) || x < this.x1)\n            this.x1 = x;\n        if (isNaN(this.x2) || x > this.x2)\n            this.x2 = x;\n        if (isNaN(this.y1) || y < this.y1)\n            this.y1 = y;\n        if (isNaN(this.y2) || y > this.y2)\n            this.y2 = y;\n    }\n    /** Add X to BoundingBox. */\n    addX(x) {\n        this.addPoint(x, this.y1);\n    }\n    /** Add Y to BoundingBox. */\n    addY(y) {\n        this.addPoint(this.x1, y);\n    }\n    /** Add quadratic curve to BoundingBox. */\n    addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n        this.addPoint(p0x, p0y);\n        this.addPoint(p2x, p2y);\n        const p01x = p1x - p0x;\n        const p12x = p2x - p1x;\n        let denom = p01x - p12x;\n        if (denom != 0) {\n            const t = p01x / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addX(it * it * p0x + 2 * it * t * p1x + t * t * p2x);\n            }\n        }\n        const p01y = p1y - p0y;\n        const p12y = p2y - p1y;\n        denom = p01y - p12y;\n        if (denom != 0) {\n            const t = p01y / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addY(it * it * p0y + 2 * it * t * p1y + t * t * p2y);\n            }\n        }\n    }\n    /** Add bezier curve to BoundingBox. */\n    addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n        // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n        const p0 = [p0x, p0y];\n        const p1 = [p1x, p1y];\n        const p2 = [p2x, p2y];\n        const p3 = [p3x, p3y];\n        let i;\n        this.addPoint(p0[0], p0[1]);\n        this.addPoint(p3[0], p3[1]);\n        const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n            3 * Math.pow(1 - t, 2) * t * p1[i] +\n            3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n            Math.pow(t, 3) * p3[i];\n        for (i = 0; i <= 1; i++) {\n            const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            const c = 3 * p1[i] - 3 * p0[i];\n            if (a === 0) {\n                if (b === 0)\n                    continue;\n                const t = -c / b;\n                if (0 < t && t < 1) {\n                    if (i === 0)\n                        this.addX(f(t, i));\n                    if (i === 1)\n                        this.addY(f(t, i));\n                }\n                continue;\n            }\n            const b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0)\n                continue;\n            const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                if (i === 0)\n                    this.addX(f(t1, i));\n                if (i === 1)\n                    this.addY(f(t1, i));\n            }\n            const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                if (i === 0)\n                    this.addX(f(t2, i));\n                if (i === 1)\n                    this.addY(f(t2, i));\n            }\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defined } from './util';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\n// Internal <span></span> element for parsing CSS font shorthand strings.\nlet fontParser;\nconst Fonts = {};\nclass Font {\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of pixels that is equivalent to `fontSize`\n     */\n    static convertSizeToPixelValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of points that is equivalent to `fontSize`\n     */\n    static convertSizeToPointValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param f\n     * @param size\n     * @param weight\n     * @param style\n     * @returns the `size` field will include the units (e.g., '12pt', '16px').\n     */\n    static validate(f, size, weight, style) {\n        // If f is a string but all other arguments are undefined, we assume that\n        // f is CSS font shorthand (e.g., 'italic bold 10pt Arial').\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            // f is a FontInfo object, so we extract its fields.\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            // f is a string representing the font family name or undefined.\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Font.SANS_SERIF;\n        size = size !== null && size !== void 0 ? size : Font.SIZE + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        // If size is a number, we assume the unit is `pt`.\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        // If weight is a number (e.g., 900), turn it into a string representation of that number.\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        // At this point, `family`, `size`, `weight`, and `style` are all strings.\n        return { family, size, weight, style };\n    }\n    /**\n     * @param cssFontShorthand a string formatted as CSS font shorthand (e.g., 'italic bold 15pt Arial').\n     */\n    static fromCSSString(cssFontShorthand) {\n        // Let the browser parse this string for us.\n        // First, create a span element.\n        // Then, set its style.font and extract it back out.\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    /**\n     * @returns a CSS font shorthand string of the form `italic bold 16pt Arial`.\n     */\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = ''; // no space! Omit the style section.\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = ''; // no space! Omit the weight section.\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Font.SIZE + 'pt ';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            // size is already a string.\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Font.SANS_SERIF;\n        return `${style}${weight}${size}${family}`;\n    }\n    /**\n     * @param fontSize a number representing a font size, or a string font size with units.\n     * @param scaleFactor multiply the size by this factor.\n     * @returns size * scaleFactor (e.g., 16pt * 3 = 48pt, 8px * 0.5 = 4px, 24 * 2 = 48).\n     * If the fontSize argument was a number, the return value will be a number.\n     * If the fontSize argument was a string, the return value will be a string.\n     */\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, ''); // Remove all numbers, dots, spaces.\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    /**\n     * @param weight a string (e.g., 'bold') or a number (e.g., 600 / semi-bold in the OpenType spec).\n     * @returns true if the font weight indicates bold.\n     */\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            // a string can be 'bold' or '700'\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    /**\n     * @param style\n     * @returns true if the font style indicates 'italic'.\n     */\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    /**\n     * @param fontName\n     * @param woffURL The absolute or relative URL to the woff file.\n     * @param includeWoff2 If true, we assume that a woff2 file is in\n     * the same folder as the woff file, and will append a `2` to the url.\n     */\n    // Support distributions of the typescript compiler that do not yet include the FontFace API declarations.\n    // eslint-disable-next-line\n    // @ts-ignore\n    static loadWebFont(fontName, woffURL, includeWoff2 = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const woff2URL = includeWoff2 ? `url(${woffURL}2) format('woff2'), ` : '';\n            const woff1URL = `url(${woffURL}) format('woff')`;\n            const woffURLs = woff2URL + woff1URL;\n            // eslint-disable-next-line\n            // @ts-ignore\n            const fontFace = new FontFace(fontName, woffURLs);\n            yield fontFace.load();\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.fonts.add(fontFace);\n            return fontFace;\n        });\n    }\n    /**\n     * Load the web fonts that are used by ChordSymbol. For example, `flow.html` calls:\n     *   `await Vex.Flow.Font.loadWebFonts();`\n     * Alternatively, you may load web fonts with a stylesheet link (e.g., from Google Fonts),\n     * and a @font-face { font-family: ... } rule in your CSS.\n     * If you do not load either of these fonts, ChordSymbol will fall back to Times or Arial,\n     * depending on the current music engraving font.\n     *\n     * You can customize `Font.WEB_FONT_HOST` and `Font.WEB_FONT_FILES` to load different fonts\n     * for your app.\n     */\n    static loadWebFonts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const host = Font.WEB_FONT_HOST;\n            const files = Font.WEB_FONT_FILES;\n            for (const fontName in files) {\n                const fontPath = files[fontName];\n                Font.loadWebFont(fontName, host + fontPath);\n            }\n        });\n    }\n    /**\n     * @param fontName\n     * @param data optionally set the Font object's `.data` property.\n     *   This is usually done when setting up a font for the first time.\n     * @param metrics optionally set the Font object's `.metrics` property.\n     *   This is usually done when setting up a font for the first time.\n     * @returns a Font object with the given `fontName`.\n     *   Reuse an existing Font object if a matching one is found.\n     */\n    static load(fontName, data, metrics) {\n        let font = Fonts[fontName];\n        if (!font) {\n            font = new Font(fontName);\n            Fonts[fontName] = font;\n        }\n        if (data) {\n            font.setData(data);\n        }\n        if (metrics) {\n            font.setMetrics(metrics);\n        }\n        return font;\n    }\n    /**\n     * Use `Font.load(fontName)` to get a Font object.\n     * Do not call this constructor directly.\n     */\n    constructor(fontName) {\n        this.name = fontName;\n    }\n    getName() {\n        return this.name;\n    }\n    getData() {\n        return defined(this.data, 'FontError', 'Missing font data');\n    }\n    getMetrics() {\n        return defined(this.metrics, 'FontError', 'Missing metrics');\n    }\n    setData(data) {\n        this.data = data;\n    }\n    setMetrics(metrics) {\n        this.metrics = metrics;\n    }\n    hasData() {\n        return this.data !== undefined;\n    }\n    getResolution() {\n        return this.getData().resolution;\n    }\n    getGlyphs() {\n        return this.getData().glyphs;\n    }\n    /**\n     * Use the provided key to look up a value in this font's metrics file (e.g., bravura_metrics.ts, petaluma_metrics.ts).\n     * @param key is a string separated by periods (e.g., stave.endPaddingMax, clef.lineCount.'5'.shiftY).\n     * @param defaultValue is returned if the lookup fails.\n     * @returns the retrieved value (or `defaultValue` if the lookup fails).\n     */\n    // eslint-disable-next-line\n    lookupMetric(key, defaultValue) {\n        const keyParts = key.split('.');\n        // Start with the top level font metrics object, and keep looking deeper into the object (via each part of the period-delimited key).\n        let currObj = this.getMetrics();\n        for (let i = 0; i < keyParts.length; i++) {\n            const keyPart = keyParts[i];\n            const value = currObj[keyPart];\n            if (value === undefined) {\n                // If the key lookup fails, we fall back to the defaultValue.\n                return defaultValue;\n            }\n            // The most recent lookup succeeded, so we drill deeper into the object.\n            currObj = value;\n        }\n        // After checking every part of the key (i.e., the loop completed), return the most recently retrieved value.\n        return currObj;\n    }\n    /** For debugging. */\n    toString() {\n        return '[' + this.name + ' Font]';\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// STATIC MEMBERS\n/** Default sans-serif font family. */\nFont.SANS_SERIF = 'Arial, sans-serif';\n/** Default serif font family. */\nFont.SERIF = 'Times New Roman, serif';\n/** Default font size in `pt`. */\nFont.SIZE = 10;\n// CSS Font Sizes: 36pt == 48px == 3em == 300% == 0.5in\n/** Given a length (for units: pt, px, em, %, in, mm, cm) what is the scale factor to convert it to px? */\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\n/**\n * Customize this field to specify a different CDN for delivering web fonts.\n * Alternative: https://cdn.jsdelivr.net/npm/vexflow-fonts@1.0.3/\n * Or you can use your own host.\n */\nFont.WEB_FONT_HOST = 'https://unpkg.com/vexflow-fonts@1.0.3/';\n/**\n * These font files will be loaded from the CDN specified by `Font.WEB_FONT_HOST` when\n * `await Font.loadWebFonts()` is called. Customize this field to specify a different\n * set of fonts to load. See: `Font.loadWebFonts()`.\n */\nFont.WEB_FONT_FILES = {\n    'Roboto Slab': 'robotoslab/RobotoSlab-Medium_2.001.woff',\n    PetalumaScript: 'petaluma/PetalumaScript_1.10_FS.woff',\n};\nexport { Font };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\nimport { RuntimeError } from './util';\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    static getDefaultRegistry() {\n        return Registry.defaultRegistry;\n    }\n    // If you call `enableDefaultRegistry`, any new elements will auto-register with\n    // the provided registry as soon as they're constructed.\n    static enableDefaultRegistry(registry) {\n        Registry.defaultRegistry = registry;\n    }\n    static disableDefaultRegistry() {\n        Registry.defaultRegistry = undefined;\n    }\n    constructor() {\n        this.index = new Index();\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    // Updates the indexes for element 'id'. If an element's attribute changes\n    // from A -> B, make sure to remove the element from A.\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    /**\n     * Register element `elem` with this registry.\n     * This adds the element to its index and watches it for attribute changes.\n     * @param elem\n     * @param id\n     * @returns this\n     */\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        // Manually add id to index, then update other indexes.\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _a, _b;\n        return (_b = (_a = this.index.id) === null || _a === void 0 ? void 0 : _a[id]) === null || _b === void 0 ? void 0 : _b[id]; // return undefined if the id is not found.\n    }\n    getElementsByAttribute(attribute, value) {\n        const index_attr = this.index[attribute];\n        if (index_attr) {\n            const index_attr_val = index_attr[value];\n            if (index_attr_val) {\n                const keys = Object.keys(index_attr_val);\n                return keys.map((k) => index_attr_val[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    // This is called by the element when an attribute value changes. If an indexed\n    // attribute changes, then update the local index.\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Registry } from './registry';\nimport { Category } from './typeguard';\nimport { defined, prefix } from './util';\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n *\n * The Element is an abstract class that needs to be subclassed to work. It handles\n * style and text-font properties for the Element and any child elements, along with\n * working with the Registry to create unique ids, but does not have any tools for\n * formatting x or y positions or connections to a Stave.\n */\nclass Element {\n    static get CATEGORY() {\n        return Category.Element;\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    constructor() {\n        var _a;\n        // all Element objects keep a list of children that they are responsible and which\n        // inherit the style of their parents.\n        this.children = [];\n        this.attrs = {\n            id: Element.newID(),\n            type: this.getCategory(),\n            class: '',\n        };\n        this.rendered = false;\n        // If a default registry exist, then register with it right away.\n        (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n    }\n    /**\n     * Adds a child Element to the Element, which lets it inherit the\n     * same style as the parent when setGroupStyle() is called.\n     *\n     * Examples of children are noteheads and stems.  Modifiers such\n     * as Accidentals are generally not set as children.\n     *\n     * Note that StaveNote calls setGroupStyle() when setStyle() is called.\n     */\n    addChildElement(child) {\n        this.children.push(child);\n        return this;\n    }\n    getCategory() {\n        return this.constructor.CATEGORY;\n    }\n    /**\n     * Set the element style used to render.\n     *\n     * Example:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.draw();\n     * ```\n     * Note: If the element draws additional sub-elements (ie.: Modifiers in a Stave),\n     * the style can be applied to all of them by means of the context:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.getContext().setFillStyle('red');\n     * element.getContext().setStrokeStyle('red');\n     * element.draw();\n     * ```\n     * or using drawWithStyle:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.drawWithStyle();\n     * ```\n     */\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    /** Set the element & associated children style used for rendering. */\n    setGroupStyle(style) {\n        this.style = style;\n        this.children.forEach((child) => child.setGroupStyle(style));\n        return this;\n    }\n    /** Get the element style used for rendering. */\n    getStyle() {\n        return this.style;\n    }\n    /** Apply the element style to `context`. */\n    applyStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.save();\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        return this;\n    }\n    /** Restore the style of `context`. */\n    restoreStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.restore();\n        return this;\n    }\n    /**\n     * Draw the element and all its sub-elements (ie.: Modifiers in a Stave)\n     * with the element's style (see `getStyle()` and `setStyle()`)\n     */\n    drawWithStyle() {\n        this.checkContext();\n        this.applyStyle();\n        this.draw();\n        this.restoreStyle();\n    }\n    /** Check if it has a class label (An element can have multiple class labels).  */\n    hasClass(className) {\n        var _a;\n        if (!this.attrs.class)\n            return false;\n        return ((_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ').indexOf(className)) != -1;\n    }\n    /** Add a class label (An element can have multiple class labels).  */\n    addClass(className) {\n        var _a;\n        if (this.hasClass(className))\n            return this;\n        if (!this.attrs.class)\n            this.attrs.class = `${className}`;\n        else\n            this.attrs.class = `${this.attrs.class} ${className}`;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    /** Remove a class label (An element can have multiple class labels).  */\n    removeClass(className) {\n        var _a, _b;\n        if (!this.hasClass(className))\n            return this;\n        const arr = (_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ');\n        if (arr) {\n            arr.splice(arr.indexOf(className));\n            this.attrs.class = arr.join(' ');\n        }\n        (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    /** Call back from registry after the element is registered. */\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    /** Return the rendered status. */\n    isRendered() {\n        return this.rendered;\n    }\n    /** Set the rendered status. */\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    /** Return the element attributes. */\n    getAttributes() {\n        return this.attrs;\n    }\n    /** Return an attribute, such as 'id', 'type' or 'class'. */\n    // eslint-disable-next-line\n    getAttribute(name) {\n        return this.attrs[name];\n    }\n    /** Return associated SVGElement. */\n    getSVGElement(suffix = '') {\n        const id = prefix(this.attrs.id + suffix);\n        const element = document.getElementById(id);\n        if (element)\n            return element;\n    }\n    /** Set an attribute such as 'id', 'class', or 'type'. */\n    setAttribute(name, value) {\n        var _a;\n        const oldID = this.attrs.id;\n        const oldValue = this.attrs[name];\n        this.attrs[name] = value;\n        // Register with old id to support id changes.\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    /** Get the boundingBox. */\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    /** Return the context, such as an SVGContext or CanvasContext object. */\n    getContext() {\n        return this.context;\n    }\n    /** Set the context to an SVGContext or CanvasContext object */\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    /** Validate and return the rendering context. */\n    checkContext() {\n        return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // Font Handling\n    /**\n     * Provide a CSS compatible font string (e.g., 'bold 16px Arial') that will be applied\n     * to text (not glyphs).\n     */\n    set font(f) {\n        this.setFont(f);\n    }\n    /** Returns the CSS compatible font string for the text font. */\n    get font() {\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Set the element's text font family, size, weight, style\n     * (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * This attribute does not determine the font used for musical Glyphs like treble clefs.\n     *\n     * @param font is 1) a `FontInfo` object or\n     *                2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *                3) a string representing the font family (at least one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     * If no arguments are provided, then the font is set to the default font.\n     * Each Element subclass may specify its own default by overriding the static `TEXT_FONT` property.\n     */\n    setFont(font, size, weight, style) {\n        // Allow subclasses to override `TEXT_FONT`.\n        const defaultTextFont = this.constructor.TEXT_FONT;\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const fontIsUndefined = font === undefined;\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        if (fontIsObject) {\n            // `font` is case 1) a FontInfo object\n            this.textFont = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            // `font` is case 2) CSS font shorthand.\n            this.textFont = Font.fromCSSString(font);\n        }\n        else if (fontIsUndefined && sizeWeightStyleAreUndefined) {\n            // All arguments are undefined. Do not check for `arguments.length === 0`,\n            // which fails on the edge case: `setFont(undefined)`.\n            // TODO: See if we can remove this case entirely without introducing a visual diff.\n            // The else case below seems like it should be equivalent to this case.\n            this.textFont = Object.assign({}, defaultTextFont);\n        }\n        else {\n            // `font` is case 3) a font family string (e.g., 'Times New Roman').\n            // The other parameters represent the size, weight, and style.\n            // It is okay for `font` to be undefined while one or more of the other arguments is provided.\n            // Following CSS conventions, unspecified params are reset to the default.\n            this.textFont = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        return this;\n    }\n    /**\n     * Get the css string describing this Element's text font. e.g.,\n     * 'bold 10pt Arial'.\n     */\n    getFont() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Reset the text font to the style indicated by the static `TEXT_FONT` property.\n     * Subclasses can call this to initialize `textFont` for the first time.\n     */\n    resetFont() {\n        this.setFont();\n    }\n    /** Return a copy of the current FontInfo object. */\n    get fontInfo() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        // We can cast to Required<FontInfo> here, because\n        // we just called resetFont() above to ensure this.textFont is set.\n        return Object.assign({}, this.textFont);\n    }\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    /** Change the font size, while keeping everything else the same. */\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     * See Element.fontSizeInPixels or Element.fontSizeInPoints if you need to get a number for calculation purposes.\n     */\n    getFontSize() {\n        return this.fontSize;\n    }\n    /**\n     * The size is 1) a string of the form '10pt' or '16px', compatible with the CSS font-size property.\n     *          or 2) a number, which is interpreted as a point size (i.e. 12 == '12pt').\n     */\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     */\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    /**\n     * @returns the font size in `pt`.\n     */\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    /**\n     * @returns the font size in `px`.\n     */\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    /**\n     * @returns a CSS font-style string (e.g., 'italic').\n     */\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    /**\n     * @returns a CSS font-weight string (e.g., 'bold').\n     * As in CSS, font-weight is always returned as a string, even if it was set as a number.\n     */\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n}\nElement.ID = 1000;\n/**\n * Default font for text. This is not related to music engraving. Instead, see `Flow.setMusicFont(...fontNames)`\n * to customize the font for musical symbols placed on the score.\n */\nElement.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nexport { Element };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { RuntimeError } from './util';\nconst RESOLUTION = 16384;\n/**\n * Map duration numbers to 'ticks', the unit of duration used throughout VexFlow.\n * For example, a quarter note is 4, so it maps to RESOLUTION / 4 = 4096 ticks.\n */\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    // This is the default duration used to render bars (BarNote). Bars no longer\n    // consume ticks, so this should be a no-op.\n    // TODO(0xfe): This needs to be cleaned up.\n    b: '256',\n};\nconst keySignatures = {\n    C: { num: 0 },\n    Am: { num: 0 },\n    F: { acc: 'b', num: 1 },\n    Dm: { acc: 'b', num: 1 },\n    Bb: { acc: 'b', num: 2 },\n    Gm: { acc: 'b', num: 2 },\n    Eb: { acc: 'b', num: 3 },\n    Cm: { acc: 'b', num: 3 },\n    Ab: { acc: 'b', num: 4 },\n    Fm: { acc: 'b', num: 4 },\n    Db: { acc: 'b', num: 5 },\n    Bbm: { acc: 'b', num: 5 },\n    Gb: { acc: 'b', num: 6 },\n    Ebm: { acc: 'b', num: 6 },\n    Cb: { acc: 'b', num: 7 },\n    Abm: { acc: 'b', num: 7 },\n    G: { acc: '#', num: 1 },\n    Em: { acc: '#', num: 1 },\n    D: { acc: '#', num: 2 },\n    Bm: { acc: '#', num: 2 },\n    A: { acc: '#', num: 3 },\n    'F#m': { acc: '#', num: 3 },\n    E: { acc: '#', num: 4 },\n    'C#m': { acc: '#', num: 4 },\n    B: { acc: '#', num: 5 },\n    'G#m': { acc: '#', num: 5 },\n    'F#': { acc: '#', num: 6 },\n    'D#m': { acc: '#', num: 6 },\n    'C#': { acc: '#', num: 7 },\n    'A#m': { acc: '#', num: 7 },\n};\nconst clefs = {\n    treble: { line_shift: 0 },\n    bass: { line_shift: 6 },\n    tenor: { line_shift: 4 },\n    alto: { line_shift: 3 },\n    soprano: { line_shift: 1 },\n    percussion: { line_shift: 0 },\n    'mezzo-soprano': { line_shift: 2 },\n    'baritone-c': { line_shift: 5 },\n    'baritone-f': { line_shift: 5 },\n    subbass: { line_shift: 7 },\n    french: { line_shift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, int_val: 0 },\n    CN: { index: 0, int_val: 0, accidental: 'n' },\n    'C#': { index: 0, int_val: 1, accidental: '#' },\n    'C##': { index: 0, int_val: 2, accidental: '##' },\n    CB: { index: 0, int_val: 11, accidental: 'b' },\n    CBB: { index: 0, int_val: 10, accidental: 'bb' },\n    D: { index: 1, int_val: 2 },\n    DN: { index: 1, int_val: 2, accidental: 'n' },\n    'D#': { index: 1, int_val: 3, accidental: '#' },\n    'D##': { index: 1, int_val: 4, accidental: '##' },\n    DB: { index: 1, int_val: 1, accidental: 'b' },\n    DBB: { index: 1, int_val: 0, accidental: 'bb' },\n    E: { index: 2, int_val: 4 },\n    EN: { index: 2, int_val: 4, accidental: 'n' },\n    'E#': { index: 2, int_val: 5, accidental: '#' },\n    'E##': { index: 2, int_val: 6, accidental: '##' },\n    EB: { index: 2, int_val: 3, accidental: 'b' },\n    EBB: { index: 2, int_val: 2, accidental: 'bb' },\n    F: { index: 3, int_val: 5 },\n    FN: { index: 3, int_val: 5, accidental: 'n' },\n    'F#': { index: 3, int_val: 6, accidental: '#' },\n    'F##': { index: 3, int_val: 7, accidental: '##' },\n    FB: { index: 3, int_val: 4, accidental: 'b' },\n    FBB: { index: 3, int_val: 3, accidental: 'bb' },\n    G: { index: 4, int_val: 7 },\n    GN: { index: 4, int_val: 7, accidental: 'n' },\n    'G#': { index: 4, int_val: 8, accidental: '#' },\n    'G##': { index: 4, int_val: 9, accidental: '##' },\n    GB: { index: 4, int_val: 6, accidental: 'b' },\n    GBB: { index: 4, int_val: 5, accidental: 'bb' },\n    A: { index: 5, int_val: 9 },\n    AN: { index: 5, int_val: 9, accidental: 'n' },\n    'A#': { index: 5, int_val: 10, accidental: '#' },\n    'A##': { index: 5, int_val: 11, accidental: '##' },\n    AB: { index: 5, int_val: 8, accidental: 'b' },\n    ABB: { index: 5, int_val: 7, accidental: 'bb' },\n    B: { index: 6, int_val: 11 },\n    BN: { index: 6, int_val: 11, accidental: 'n' },\n    'B#': { index: 6, int_val: 12, accidental: '#' },\n    'B##': { index: 6, int_val: 13, accidental: '##' },\n    BB: { index: 6, int_val: 10, accidental: 'b' },\n    BBB: { index: 6, int_val: 9, accidental: 'bb' },\n    R: { index: 6, rest: true },\n    X: {\n        index: 6,\n        accidental: '',\n        octave: 4,\n        code: 'noteheadXBlack',\n        shift_right: 5.5,\n    },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n    d: { name: 'diamond' },\n    x: { name: 'x' },\n    ci: { name: 'circled' },\n    cx: { name: 'circle x' },\n    sf: { name: 'slashed' },\n    sb: { name: 'slashed backward' },\n    sq: { name: 'square' },\n    tu: { name: 'triangle up' },\n    td: { name: 'triangle down' },\n};\nconst accidentals = {\n    '#': { code: 'accidentalSharp', parenRightPaddingAdjustment: -1 },\n    '##': { code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    b: { code: 'accidentalFlat', parenRightPaddingAdjustment: -2 },\n    bb: { code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2 },\n    n: { code: 'accidentalNatural', parenRightPaddingAdjustment: -1 },\n    '{': { code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1 },\n    '}': { code: 'accidentalParensRight', parenRightPaddingAdjustment: -1 },\n    db: { code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1 },\n    d: { code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0 },\n    '++': { code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1 },\n    '+': { code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1 },\n    '+-': { code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1 },\n    bs: { code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1 },\n    bss: { code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1 },\n    o: { code: 'accidentalSori', parenRightPaddingAdjustment: -1 },\n    k: { code: 'accidentalKoron', parenRightPaddingAdjustment: -1 },\n    bbs: { code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1 },\n    '++-': { code: 'accidentalBuyukMucennebSharp', parenRightPaddingAdjustment: -1 },\n    ashs: { code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1 },\n    afhf: { code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaUp: { code: 'accSagittal5v7KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaDown: { code: 'accSagittal5v7KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaUp: { code: 'accSagittal5CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaDown: { code: 'accSagittal5CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaUp: { code: 'accSagittal7CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaDown: { code: 'accSagittal7CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisUp: { code: 'accSagittal25SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisDown: { code: 'accSagittal25SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisUp: { code: 'accSagittal35MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisDown: { code: 'accSagittal35MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisUp: { code: 'accSagittal11MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisDown: { code: 'accSagittal11MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisUp: { code: 'accSagittal11LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisDown: { code: 'accSagittal11LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisUp: { code: 'accSagittal35LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisDown: { code: 'accSagittal35LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SDown: { code: 'accSagittalSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SUp: { code: 'accSagittalFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CDown: { code: 'accSagittalSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CUp: { code: 'accSagittalFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CDown: { code: 'accSagittalSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CUp: { code: 'accSagittalFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kDown: { code: 'accSagittalSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kUp: { code: 'accSagittalFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp: { code: 'accSagittalSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat: { code: 'accSagittalFlat', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kUp: { code: 'accSagittalSharp5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kDown: { code: 'accSagittalFlat5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CUp: { code: 'accSagittalSharp5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CDown: { code: 'accSagittalFlat5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CUp: { code: 'accSagittalSharp7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CDown: { code: 'accSagittalFlat7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SUp: { code: 'accSagittalSharp25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SDown: { code: 'accSagittalFlat25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35MUp: { code: 'accSagittalSharp35MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35MDown: { code: 'accSagittalFlat35MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11MUp: { code: 'accSagittalSharp11MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11MDown: { code: 'accSagittalFlat11MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11LUp: { code: 'accSagittalSharp11LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11LDown: { code: 'accSagittalFlat11LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35LUp: { code: 'accSagittalSharp35LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35LDown: { code: 'accSagittalFlat35LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp25SDown: { code: 'accSagittalDoubleSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat25SUp: { code: 'accSagittalDoubleFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7CDown: { code: 'accSagittalDoubleSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7CUp: { code: 'accSagittalDoubleFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5CDown: { code: 'accSagittalDoubleSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5CUp: { code: 'accSagittalDoubleFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v7kDown: { code: 'accSagittalDoubleSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v7kUp: { code: 'accSagittalDoubleFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp: { code: 'accSagittalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat: { code: 'accSagittalDoubleFlat', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaUp: { code: 'accSagittal7v11KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaDown: { code: 'accSagittal7v11KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaUp: { code: 'accSagittal17CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaDown: { code: 'accSagittal17CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaUp: { code: 'accSagittal55CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaDown: { code: 'accSagittal55CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaUp: { code: 'accSagittal7v11CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaDown: { code: 'accSagittal7v11CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisUp: { code: 'accSagittal5v11SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisDown: { code: 'accSagittal5v11SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SDown: { code: 'accSagittalSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SUp: { code: 'accSagittalFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CDown: { code: 'accSagittalSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CUp: { code: 'accSagittalFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CDown: { code: 'accSagittalSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CUp: { code: 'accSagittalFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CDown: { code: 'accSagittalSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CUp: { code: 'accSagittalFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kDown: { code: 'accSagittalSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kUp: { code: 'accSagittalFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kUp: { code: 'accSagittalSharp7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kDown: { code: 'accSagittalFlat7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CUp: { code: 'accSagittalSharp17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CDown: { code: 'accSagittalFlat17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CUp: { code: 'accSagittalSharp55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CDown: { code: 'accSagittalFlat55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CUp: { code: 'accSagittalSharp7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CDown: { code: 'accSagittalFlat7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SUp: { code: 'accSagittalSharp5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SDown: { code: 'accSagittalFlat5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v11SDown: { code: 'accSagittalDoubleSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v11SUp: { code: 'accSagittalDoubleFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11CDown: { code: 'accSagittalDoubleSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11CUp: { code: 'accSagittalDoubleFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp55CDown: { code: 'accSagittalDoubleSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat55CUp: { code: 'accSagittalDoubleFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17CDown: { code: 'accSagittalDoubleSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17CUp: { code: 'accSagittalDoubleFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11kDown: { code: 'accSagittalDoubleSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11kUp: { code: 'accSagittalDoubleFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaUp: { code: 'accSagittal23CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaDown: { code: 'accSagittal23CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaUp: { code: 'accSagittal5v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaDown: { code: 'accSagittal5v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisUp: { code: 'accSagittal5v23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisDown: { code: 'accSagittal5v23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SDown: { code: 'accSagittalSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SUp: { code: 'accSagittalFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CDown: { code: 'accSagittalSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CUp: { code: 'accSagittalFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CDown: { code: 'accSagittalSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CUp: { code: 'accSagittalFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CUp: { code: 'accSagittalSharp23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CDown: { code: 'accSagittalFlat23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CUp: { code: 'accSagittalSharp5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CDown: { code: 'accSagittalFlat5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SUp: { code: 'accSagittalSharp5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SDown: { code: 'accSagittalFlat5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v23SDown: { code: 'accSagittalDoubleSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v23SUp: { code: 'accSagittalDoubleFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v19CDown: { code: 'accSagittalDoubleSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v19CUp: { code: 'accSagittalDoubleFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23CDown: { code: 'accSagittalDoubleSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23CUp: { code: 'accSagittalDoubleFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaUp: { code: 'accSagittal19SchismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaDown: { code: 'accSagittal19SchismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaUp: { code: 'accSagittal17KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaDown: { code: 'accSagittal17KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaUp: { code: 'accSagittal143CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaDown: { code: 'accSagittal143CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaUp: { code: 'accSagittal11v49CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaDown: { code: 'accSagittal11v49CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaUp: { code: 'accSagittal19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaDown: { code: 'accSagittal19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaUp: { code: 'accSagittal7v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaDown: { code: 'accSagittal7v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisUp: { code: 'accSagittal49SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisDown: { code: 'accSagittal49SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisUp: { code: 'accSagittal23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisDown: { code: 'accSagittal23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisUp: { code: 'accSagittal5v13MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisDown: { code: 'accSagittal5v13MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisUp: { code: 'accSagittal11v19MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisDown: { code: 'accSagittal11v19MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisUp: { code: 'accSagittal49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisDown: { code: 'accSagittal49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisUp: { code: 'accSagittal5v49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisDown: { code: 'accSagittal5v49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisUp: { code: 'accSagittal49LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisDown: { code: 'accSagittal49LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisUp: { code: 'accSagittal11v19LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisDown: { code: 'accSagittal11v19LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisUp: { code: 'accSagittal5v13LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisDown: { code: 'accSagittal5v13LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SDown: { code: 'accSagittalSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SUp: { code: 'accSagittalFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SDown: { code: 'accSagittalSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SUp: { code: 'accSagittalFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CDown: { code: 'accSagittalSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CUp: { code: 'accSagittalFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CDown: { code: 'accSagittalSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CUp: { code: 'accSagittalFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CDown: { code: 'accSagittalSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CUp: { code: 'accSagittalFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CDown: { code: 'accSagittalSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CUp: { code: 'accSagittalFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kDown: { code: 'accSagittalSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kUp: { code: 'accSagittalFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sDown: { code: 'accSagittalSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sUp: { code: 'accSagittalFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sUp: { code: 'accSagittalSharp19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sDown: { code: 'accSagittalFlat19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kUp: { code: 'accSagittalSharp17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kDown: { code: 'accSagittalFlat17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CUp: { code: 'accSagittalSharp143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CDown: { code: 'accSagittalFlat143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CUp: { code: 'accSagittalSharp11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CDown: { code: 'accSagittalFlat11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CUp: { code: 'accSagittalSharp19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CDown: { code: 'accSagittalFlat19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CUp: { code: 'accSagittalSharp7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CDown: { code: 'accSagittalFlat7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SUp: { code: 'accSagittalSharp49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SDown: { code: 'accSagittalFlat49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SUp: { code: 'accSagittalSharp23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SDown: { code: 'accSagittalFlat23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13MUp: { code: 'accSagittalSharp5v13MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13MDown: { code: 'accSagittalFlat5v13MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19MUp: { code: 'accSagittalSharp11v19MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19MDown: { code: 'accSagittalFlat11v19MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49MUp: { code: 'accSagittalSharp49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49MDown: { code: 'accSagittalFlat49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v49MUp: { code: 'accSagittalSharp5v49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v49MDown: { code: 'accSagittalFlat5v49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49LUp: { code: 'accSagittalSharp49LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49LDown: { code: 'accSagittalFlat49LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19LUp: { code: 'accSagittalSharp11v19LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19LDown: { code: 'accSagittalFlat11v19LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13LUp: { code: 'accSagittalSharp5v13LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13LDown: { code: 'accSagittalFlat5v13LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23SDown: { code: 'accSagittalDoubleSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23SUp: { code: 'accSagittalDoubleFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp49SDown: { code: 'accSagittalDoubleSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat49SUp: { code: 'accSagittalDoubleFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v19CDown: { code: 'accSagittalDoubleSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v19CUp: { code: 'accSagittalDoubleFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19CDown: { code: 'accSagittalDoubleSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19CUp: { code: 'accSagittalDoubleFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp11v49CDown: { code: 'accSagittalDoubleSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat11v49CUp: { code: 'accSagittalDoubleFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp143CDown: { code: 'accSagittalDoubleSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat143CUp: { code: 'accSagittalDoubleFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17kDown: { code: 'accSagittalDoubleSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17kUp: { code: 'accSagittalDoubleFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19sDown: { code: 'accSagittalDoubleSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19sUp: { code: 'accSagittalDoubleFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftUp: { code: 'accSagittalShaftUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftDown: { code: 'accSagittalShaftDown', parenRightPaddingAdjustment: -1 },\n    accSagittalAcute: { code: 'accSagittalAcute', parenRightPaddingAdjustment: -1 },\n    accSagittalGrave: { code: 'accSagittalGrave', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaUp: { code: 'accSagittal1MinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaDown: { code: 'accSagittal1MinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasUp: { code: 'accSagittal2MinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasDown: { code: 'accSagittal2MinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaUp: { code: 'accSagittal1TinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaDown: { code: 'accSagittal1TinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasUp: { code: 'accSagittal2TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasDown: { code: 'accSagittal2TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasUp: { code: 'accSagittal3TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasDown: { code: 'accSagittal3TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasUp: { code: 'accSagittal4TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasDown: { code: 'accSagittal4TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasUp: { code: 'accSagittal5TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasDown: { code: 'accSagittal5TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasUp: { code: 'accSagittal6TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasDown: { code: 'accSagittal6TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasUp: { code: 'accSagittal7TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasDown: { code: 'accSagittal7TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasUp: { code: 'accSagittal8TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasDown: { code: 'accSagittal8TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasUp: { code: 'accSagittal9TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasDown: { code: 'accSagittal9TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaUp: { code: 'accSagittalFractionalTinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaDown: { code: 'accSagittalFractionalTinaDown', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlat: { code: 'accidentalNarrowReversedFlat', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlatAndFlat: {\n        code: 'accidentalNarrowReversedFlatAndFlat',\n        parenRightPaddingAdjustment: -1,\n    },\n    accidentalWilsonPlus: { code: 'accidentalWilsonPlus', parenRightPaddingAdjustment: -1 },\n    accidentalWilsonMinus: { code: 'accidentalWilsonMinus', parenRightPaddingAdjustment: -1 },\n};\n// Helps determine the layout of accidentals.\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        second_on_bottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spaced_out_tetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spaced_out_pentachord: [1, 2, 3, 2, 1],\n        very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n        very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: 'augmentationDot', between_lines: true },\n    av: {\n        aboveCode: 'articStaccatissimoAbove',\n        belowCode: 'articStaccatissimoBelow',\n        between_lines: true,\n    },\n    'a>': {\n        aboveCode: 'articAccentAbove',\n        belowCode: 'articAccentBelow',\n        between_lines: true,\n    },\n    'a-': {\n        aboveCode: 'articTenutoAbove',\n        belowCode: 'articTenutoBelow',\n        between_lines: true,\n    },\n    'a^': {\n        aboveCode: 'articMarcatoAbove',\n        belowCode: 'articMarcatoBelow',\n        between_lines: false,\n    },\n    'a+': { code: 'pluckedLeftHandPizzicato', between_lines: false },\n    ao: {\n        aboveCode: 'pluckedSnapPizzicatoAbove',\n        belowCode: 'pluckedSnapPizzicatoBelow',\n        between_lines: false,\n    },\n    ah: { code: 'stringsHarmonic', between_lines: false },\n    'a@': { aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false },\n    'a@a': { code: 'fermataAbove', between_lines: false },\n    'a@u': { code: 'fermataBelow', between_lines: false },\n    'a@s': { aboveCode: 'fermataShortAbove', belowCode: 'fermataShortBelow', between_lines: false },\n    'a@as': { code: 'fermataShortAbove', between_lines: false },\n    'a@us': { code: 'fermataShortBelow', between_lines: false },\n    'a@l': { aboveCode: 'fermataLongAbove', belowCode: 'fermataLongBelow', between_lines: false },\n    'a@al': { code: 'fermataLongAbove', between_lines: false },\n    'a@ul': { code: 'fermataLongBelow', between_lines: false },\n    'a@vl': { aboveCode: 'fermataVeryLongAbove', belowCode: 'fermataVeryLongBelow', between_lines: false },\n    'a@avl': { code: 'fermataVeryLongAbove', between_lines: false },\n    'a@uvl': { code: 'fermataVeryLongBelow', between_lines: false },\n    'a|': { code: 'stringsUpBow', between_lines: false },\n    am: { code: 'stringsDownBow', between_lines: false },\n    'a,': { code: 'pictChokeCymbal', between_lines: false }, // Choked\n};\nconst ornaments = {\n    mordent: { code: 'ornamentShortTrill' },\n    mordent_inverted: { code: 'ornamentMordent' },\n    turn: { code: 'ornamentTurn' },\n    turn_inverted: { code: 'ornamentTurnSlash' },\n    tr: { code: 'ornamentTrill' },\n    upprall: { code: 'ornamentPrecompSlideTrillDAnglebert' },\n    downprall: { code: 'ornamentPrecompDoubleCadenceUpperPrefix' },\n    prallup: { code: 'ornamentPrecompTrillSuffixDandrieu' },\n    pralldown: { code: 'ornamentPrecompTrillLowerSuffix' },\n    upmordent: { code: 'ornamentPrecompSlideTrillBach' },\n    downmordent: { code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn' },\n    lineprall: { code: 'ornamentPrecompAppoggTrill' },\n    prallprall: { code: 'ornamentTremblement' },\n    scoop: { code: 'brassScoop' },\n    doit: { code: 'brassDoitMedium' },\n    fall: { code: 'brassFallLipShort' },\n    doitLong: { code: 'brassLiftMedium' },\n    fallLong: { code: 'brassFallRoughMedium' },\n    bend: { code: 'brassBend' },\n    plungerClosed: { code: 'brassMuteClosed' },\n    plungerOpen: { code: 'brassMuteOpen' },\n    flip: { code: 'brassFlip' },\n    jazzTurn: { code: 'brassJazzTurn' },\n    smear: { code: 'brassSmear' },\n};\nclass Tables {\n    /**\n     * @returns the `Font` object at the head of the music font stack.\n     */\n    static currentMusicFont() {\n        if (Tables.MUSIC_FONT_STACK.length === 0) {\n            throw new RuntimeError('NoFonts', 'The font stack is empty. See: await Flow.fetchMusicFont(...); Flow.setMusicFont(...).');\n        }\n        else {\n            return Tables.MUSIC_FONT_STACK[0];\n        }\n    }\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    /**\n     * @param keyOctaveGlyph a string in the format \"key/octave\" (e.g., \"c/5\") or \"key/octave/custom-note-head-code\" (e.g., \"g/5/t3\").\n     * @param clef\n     * @param params a struct with one option, `octave_shift` for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n     * @returns properties for the specified note.\n     */\n    static keyProperties(keyOctaveGlyph, clef = 'treble', params) {\n        let options = { octave_shift: 0, duration: '4' };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const duration = Tables.sanitizeDuration(options.duration);\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        if (value.octave)\n            pieces[1] = value.octave.toString();\n        let octave = parseInt(pieces[1], 10);\n        // Octave_shift is the shift to compensate for clef 8va/8vb.\n        octave += -1 * options.octave_shift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).line_shift;\n        let stroke = 0;\n        if (line <= 0 && (line * 2) % 2 === 0)\n            stroke = 1; // stroke up\n        if (line >= 6 && (line * 2) % 2 === 0)\n            stroke = -1; // stroke down\n        // Integer value for note arithmetic.\n        const int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : undefined;\n        // If the user specified a glyph, overwrite the glyph code.\n        const code = value.code;\n        const shift_right = value.shift_right;\n        let customNoteHeadProps = {};\n        if (pieces.length > 2 && pieces[2]) {\n            const glyphName = pieces[2].toUpperCase();\n            customNoteHeadProps = { code: this.codeNoteHead(glyphName, duration) } || {};\n        }\n        return Object.assign({ key,\n            octave,\n            line,\n            int_value, accidental: value.accidental, code,\n            stroke,\n            shift_right, displaced: false }, customNoteHeadProps);\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    static tabToGlyphProps(fret, scale = 1.0) {\n        let glyph = undefined;\n        let width = 0;\n        let shift_y = 0;\n        if (fret.toUpperCase() === 'X') {\n            const glyphMetrics = new Glyph('accidentalDoubleSharp', Tables.TABLATURE_FONT_SCALE).getMetrics();\n            glyph = 'accidentalDoubleSharp';\n            if (glyphMetrics.width == undefined || glyphMetrics.height == undefined)\n                throw new RuntimeError('InvalidMetrics', 'Width and height required');\n            width = glyphMetrics.width;\n            shift_y = -glyphMetrics.height / 2;\n        }\n        else {\n            width = Tables.textWidth(fret);\n        }\n        return {\n            text: fret,\n            code: glyph,\n            getWidth: () => width * scale,\n            shift_y,\n        };\n    }\n    // Used by annotation.ts and bend.ts. Clearly this implementation only works for the default font size.\n    // TODO: The actual width depends on the font family, size, weight, style.\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(acc) {\n        return accidentals[acc];\n    }\n    static ornamentCodes(acc) {\n        return ornaments[acc];\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.acc) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        const notes = accidentalList[keySpec.acc];\n        const acc_list = [];\n        for (let i = 0; i < keySpec.num; ++i) {\n            const line = notes[i];\n            acc_list.push({ type: keySpec.acc, line });\n        }\n        return acc_list;\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    /**\n     * Convert duration aliases to the number based duration.\n     * If the input isn't an alias, simply return the input.\n     * @param duration\n     * @returns Example: 'q' -> '4', '8' -> '8'\n     */\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    /** Convert the `duration` to a fraction. */\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    /** Convert the `duration` to a number. */\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    /* Convert the `duration` to total ticks. */\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    static codeNoteHead(type, duration) {\n        let code = '';\n        switch (type) {\n            /* Diamond */\n            case 'D0':\n                code = 'noteheadDiamondWhole';\n                break;\n            case 'D1':\n                code = 'noteheadDiamondHalf';\n                break;\n            case 'D2':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'D3':\n                code = 'noteheadDiamondBlack';\n                break;\n            /* Triangle */\n            case 'T0':\n                code = 'noteheadTriangleUpWhole';\n                break;\n            case 'T1':\n                code = 'noteheadTriangleUpHalf';\n                break;\n            case 'T2':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'T3':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            /* Cross */\n            case 'X0':\n                code = 'noteheadXWhole';\n                break;\n            case 'X1':\n                code = 'noteheadXHalf';\n                break;\n            case 'X2':\n                code = 'noteheadXBlack';\n                break;\n            case 'X3':\n                code = 'noteheadCircleX';\n                break;\n            /* Square */\n            case 'S1':\n                code = 'noteheadSquareWhite';\n                break;\n            case 'S2':\n                code = 'noteheadSquareBlack';\n                break;\n            /* Rectangle */\n            case 'R1':\n                code = 'vexNoteHeadRectWhite'; // no smufl code\n                break;\n            case 'R2':\n                code = 'vexNoteHeadRectBlack'; // no smufl code\n                break;\n            case 'DO':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'RE':\n                code = 'noteheadMoonBlack';\n                break;\n            case 'MI':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'FA':\n                code = 'noteheadTriangleLeftBlack';\n                break;\n            case 'FAUP':\n                code = 'noteheadTriangleRightBlack';\n                break;\n            case 'SO':\n                code = 'noteheadBlack';\n                break;\n            case 'LA':\n                code = 'noteheadSquareBlack';\n                break;\n            case 'TI':\n                code = 'noteheadTriangleRoundDownBlack';\n                break;\n            case 'D':\n            case 'H': // left for backwards compatibility\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDiamondDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadDiamondWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadDiamondHalf';\n                        break;\n                    default:\n                        code = 'noteheadDiamondBlack';\n                        break;\n                }\n                break;\n            case 'N':\n            case 'G':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadHalf';\n                        break;\n                    default:\n                        code = 'noteheadBlack';\n                        break;\n                }\n                break;\n            case 'M': // left for backwards compatibility\n            case 'X':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadXHalf';\n                        break;\n                    default:\n                        code = 'noteheadXBlack';\n                        break;\n                }\n                break;\n            case 'CX':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircleXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircleXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircleXHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircleX';\n                        break;\n                }\n                break;\n            case 'CI':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircledDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircledWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircledHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircledBlack';\n                        break;\n                }\n                break;\n            case 'SQ':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWholeSquare';\n                        break;\n                    case '1':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    case '2':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    default:\n                        code = 'noteheadSquareBlack';\n                        break;\n                }\n                break;\n            case 'TU':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleUpDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleUpWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleUpHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleUpBlack';\n                        break;\n                }\n                break;\n            case 'TD':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleDownDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleDownWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleDownHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleDownBlack';\n                        break;\n                }\n                break;\n            case 'SF':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole1';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole1';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf1';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack1';\n                }\n                break;\n            case 'SB':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole2';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole2';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf2';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack2';\n                }\n                break;\n        }\n        return code;\n    }\n    // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n    // The default type is a regular note ('n').\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        // Lookup duration for default glyph head code\n        let code = durationCodes[duration];\n        if (code === undefined) {\n            code = durationCodes['4'];\n        }\n        // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n        let glyphTypeProperties = code[type];\n        // Try and get it from the custom list of note heads\n        const codeNoteHead = Tables.codeNoteHead(type.toUpperCase(), duration);\n        if (codeNoteHead != '')\n            glyphTypeProperties = Object.assign(Object.assign({}, glyphTypeProperties), { code_head: codeNoteHead, code: codeNoteHead });\n        const code_head = glyphTypeProperties.code_head;\n        // The default implementation of getWidth() calls Glyph.getWidth(code_head, scale).\n        // This can be overridden by an individual glyph type (see slash noteheads below: Tables.SLASH_NOTEHEAD_WIDTH).\n        const getWidth = (scale = Tables.NOTATION_FONT_SCALE) => Glyph.getWidth(code_head, scale);\n        // Merge duration props for 'duration' with the note head properties.\n        return Object.assign(Object.assign(Object.assign({}, code.common), { getWidth: getWidth }), glyphTypeProperties);\n    }\n}\nTables.UNISON = true;\nTables.SOFTMAX_FACTOR = 10;\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RENDER_PRECISION_PLACES = 3;\nTables.RESOLUTION = RESOLUTION;\n/**\n * Customize this by calling Flow.setMusicFont(...fontNames);\n */\nTables.MUSIC_FONT_STACK = [];\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\n// HACK:\n// Since text origins are positioned at the baseline, we must\n// compensate for the ascender of the text. Of course, 1 staff space is\n// a very poor approximation.\n//\n// This will be deprecated in the future. This is a temporary solution until\n// we have more robust text metrics.\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalMap = accidentals;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    // ♯ accidental sharp\n    sharp: String.fromCharCode(0x266f),\n    // ♭ accidental flat\n    flat: String.fromCharCode(0x266d),\n    // ♮ accidental natural\n    natural: String.fromCharCode(0x266e),\n    // △ major seventh\n    triangle: String.fromCharCode(0x25b3),\n    // ø half-diminished\n    'o-with-slash': String.fromCharCode(0x00f8),\n    // ° diminished\n    degrees: String.fromCharCode(0x00b0),\n    // ○ diminished\n    circle: String.fromCharCode(0x25cb),\n};\n/* The list of valid note types. Used by note.ts during parseNoteStruct(). */\nTables.validTypes = validNoteTypes;\n// Default time signature.\nTables.TIME4_4 = {\n    num_beats: 4,\n    beat_value: 4,\n    resolution: RESOLUTION,\n};\nexport { Tables };\n// 1/2, 1, 2, 4, 8, 16, 32, 64, 128\n// NOTE: There is no 256 here! However, there are other mentions of 256 in this file.\n// For example, in durations has a 256 key, and sanitizeDuration() can return 256.\n// The sanitizeDuration() bit may need to be removed by 0xfe.\nconst durationCodes = {\n    '1/2': {\n        common: {\n            code_head: '',\n            stem: false,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Breve rest\n            code_head: 'restDoubleWhole',\n            rest: true,\n            position: 'B/5',\n            dot_shiftY: 0.5,\n        },\n        s: {\n            // Breve note slash -\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    1: {\n        common: {\n            code_head: '',\n            stem: false,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Whole rest\n            code_head: 'restWhole',\n            ledger_code_head: 'restWholeLegerLine',\n            rest: true,\n            position: 'D/5',\n            dot_shiftY: 0.5,\n        },\n        s: {\n            // Whole note slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    2: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Half rest\n            code_head: 'restHalf',\n            ledger_code_head: 'restHalfLegerLine',\n            stem: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n        },\n        s: {\n            // Half note slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    4: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Quarter rest\n            code_head: 'restQuarter',\n            stem: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.5,\n            line_below: 1.5,\n        },\n        s: {\n            // Quarter slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    8: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: true,\n            beam_count: 1,\n            stem_beam_extension: 0,\n            code_flag_upstem: 'flag8thUp',\n            code_flag_downstem: 'flag8thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Eighth rest\n            code_head: 'rest8th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.0,\n            line_below: 1.0,\n        },\n        s: {\n            // Eighth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    16: {\n        common: {\n            code_head: '',\n            beam_count: 2,\n            stem_beam_extension: 0,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag16thUp',\n            code_flag_downstem: 'flag16thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Sixteenth rest\n            code_head: 'rest16th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.0,\n            line_below: 2.0,\n        },\n        s: {\n            // Sixteenth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    32: {\n        common: {\n            code_head: '',\n            beam_count: 3,\n            stem_beam_extension: 7.5,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag32ndUp',\n            code_flag_downstem: 'flag32ndDown',\n            stem_up_extension: 9,\n            stem_down_extension: 9,\n            tabnote_stem_up_extension: 9,\n            tabnote_stem_down_extension: 9,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Thirty-second rest\n            code_head: 'rest32nd',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -1.5,\n            line_above: 2.0,\n            line_below: 2.0,\n        },\n        s: {\n            // Thirty-second slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    64: {\n        common: {\n            code_head: '',\n            beam_count: 4,\n            stem_beam_extension: 15,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag64thUp',\n            code_flag_downstem: 'flag64thDown',\n            stem_up_extension: 13,\n            stem_down_extension: 13,\n            tabnote_stem_up_extension: 13,\n            tabnote_stem_down_extension: 13,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Sixty-fourth rest\n            code_head: 'rest64th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -1.5,\n            line_above: 2.0,\n            line_below: 3.0,\n        },\n        s: {\n            // Sixty-fourth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    128: {\n        common: {\n            code_head: '',\n            beam_count: 5,\n            stem_beam_extension: 22.5,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag128thUp',\n            code_flag_downstem: 'flag128thDown',\n            stem_up_extension: 22,\n            stem_down_extension: 22,\n            tabnote_stem_up_extension: 22,\n            tabnote_stem_down_extension: 22,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Hundred-twenty-eight rest\n            code_head: 'rest128th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -2.5,\n            line_above: 3.0,\n            line_below: 3.0,\n        },\n        s: {\n            // Hundred-twenty-eight slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var OutlineCode;\n(function (OutlineCode) {\n    OutlineCode[OutlineCode[\"MOVE\"] = 0] = \"MOVE\";\n    OutlineCode[OutlineCode[\"LINE\"] = 1] = \"LINE\";\n    OutlineCode[OutlineCode[\"QUADRATIC\"] = 2] = \"QUADRATIC\";\n    OutlineCode[OutlineCode[\"BEZIER\"] = 3] = \"BEZIER\";\n})(OutlineCode || (OutlineCode = {}));\nclass GlyphCacheEntry {\n    constructor(fontStack, code, category) {\n        this.point = -1;\n        this.metrics = Glyph.loadMetrics(fontStack, code, category);\n        this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.metrics.scale, this.metrics.x_shift, this.metrics.y_shift);\n        if (category) {\n            this.point = Glyph.lookupFontMetric(this.metrics.font, category, code, 'point', -1);\n        }\n    }\n}\nclass GlyphCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    lookup(code, category) {\n        let entries = this.cache.get(Glyph.CURRENT_CACHE_KEY);\n        if (entries === undefined) {\n            entries = {};\n            this.cache.set(Glyph.CURRENT_CACHE_KEY, entries);\n        }\n        const key = category ? `${code}%${category}` : code;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = new GlyphCacheEntry(Glyph.MUSIC_FONT_STACK, code, category);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n}\nclass GlyphOutline {\n    constructor(outline, originX, originY, scale) {\n        this.outline = outline;\n        this.originX = originX;\n        this.originY = originY;\n        this.scale = scale;\n        this.i = 0;\n        this.precision = 1;\n        // Automatically assign private properties: this.outline, this.originX, this.originY, and this.scale.\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n    }\n    done() {\n        return this.i >= this.outline.length;\n    }\n    next() {\n        return Math.round((this.outline[this.i++] * this.precision) / this.precision);\n    }\n    nextX() {\n        return Math.round((this.originX + this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    nextY() {\n        return Math.round((this.originY - this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    static parse(str) {\n        const result = [];\n        const parts = str.split(' ');\n        let i = 0;\n        while (i < parts.length) {\n            switch (parts[i++]) {\n                case 'm':\n                    result.push(OutlineCode.MOVE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'l':\n                    result.push(OutlineCode.LINE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'q':\n                    result.push(OutlineCode.QUADRATIC, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'b':\n                    result.push(OutlineCode.BEZIER, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n            }\n        }\n        return result;\n    }\n}\nclass Glyph extends Element {\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Glyph;\n    }\n    /**\n     * Pass a key of the form `glyphs.{category}.{code}.{key}` to Font.lookupMetric(). If the initial lookup fails,\n     * try again with the path `glyphs.{category}.{key}`. If the second lookup fails, return the defaultValue.\n     *\n     * @param font\n     * @param category any metric path under 'glyphs', so 'stem.up' could resolve to glyphs.stem.up.shiftX, glyphs.stem.up.shiftY, etc.\n     * @param code\n     * @param key\n     * @param defaultValue\n     */\n    static lookupFontMetric(font, category, code, key, defaultValue) {\n        let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, undefined);\n        if (value === undefined) {\n            // The first lookup failed, so we omit .${code} and try again (with a defaultValue this time).\n            value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n        }\n        return value;\n    }\n    static lookupGlyph(fontStack, code) {\n        defined(fontStack, 'BadFontStack', 'Font stack is misconfigured');\n        let glyph;\n        let font;\n        for (let i = 0; i < fontStack.length; i++) {\n            font = fontStack[i];\n            glyph = font.getGlyphs()[code];\n            if (glyph)\n                return { glyph, font };\n        }\n        throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n    static loadMetrics(fontStack, code, category) {\n        const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n        if (!glyph.o)\n            throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n        let x_shift = 0;\n        let y_shift = 0;\n        let scale = 1;\n        if (category && font) {\n            x_shift = Glyph.lookupFontMetric(font, category, code, 'shiftX', 0);\n            y_shift = Glyph.lookupFontMetric(font, category, code, 'shiftY', 0);\n            scale = Glyph.lookupFontMetric(font, category, code, 'scale', 1);\n        }\n        const x_min = glyph.x_min;\n        const x_max = glyph.x_max;\n        const ha = glyph.ha;\n        if (!glyph.cached_outline) {\n            glyph.cached_outline = GlyphOutline.parse(glyph.o);\n        }\n        return {\n            x_min,\n            x_max,\n            x_shift,\n            y_shift,\n            scale,\n            ha,\n            outline: glyph.cached_outline,\n            font,\n            width: x_max - x_min,\n            height: ha,\n        };\n    }\n    /**\n     * Renders glyphs from the default font stack.\n     *\n     * @param ctx Canvas or SVG context\n     * @param x_pos x coordinate\n     * @param y_pos y coordinate\n     * @param point the point size of the font\n     * @param code the glyph code in font.getGlyphs()\n     * @param options\n     * @returns\n     */\n    static renderGlyph(ctx, x_pos, y_pos, point, code, options) {\n        var _a;\n        const data = Glyph.cache.lookup(code, options === null || options === void 0 ? void 0 : options.category);\n        const metrics = data.metrics;\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const customScale = (_a = options === null || options === void 0 ? void 0 : options.scale) !== null && _a !== void 0 ? _a : 1;\n        const scale = ((point * 72.0) / (metrics.font.getResolution() * 100.0)) * metrics.scale * customScale;\n        Glyph.renderOutline(ctx, metrics.outline, scale, x_pos + metrics.x_shift * customScale, y_pos + metrics.y_shift * customScale);\n        return metrics;\n    }\n    static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        ctx.beginPath();\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    ctx.moveTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.LINE:\n                    ctx.lineTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.quadraticCurveTo(go.nextX(), go.nextY(), x, y);\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.bezierCurveTo(go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    break;\n            }\n        }\n        ctx.fill();\n    }\n    static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        const bboxComp = new BoundingBoxComputation();\n        // (penX, penY) hold the pen position: the start of each stroke.\n        let penX = x_pos;\n        let penY = y_pos;\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    // Note that we don't add any points to the bounding box until a srroke is actually drawn.\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    break;\n                case OutlineCode.LINE:\n                    bboxComp.addPoint(penX, penY);\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    bboxComp.addPoint(penX, penY);\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addQuadraticCurve(penX, penY, go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addBezierCurve(penX, penY, go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n            }\n        }\n        return new BoundingBox(bboxComp.getX1(), bboxComp.getY1(), bboxComp.width(), bboxComp.height());\n    }\n    static getWidth(code, point, category) {\n        const data = Glyph.cache.lookup(code, category);\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const scale = (point * 72) / (data.metrics.font.getResolution() * 100);\n        return data.bbox.getW() * scale;\n    }\n    /**\n     * @param code\n     * @param point\n     * @param options\n     */\n    constructor(code, point, options) {\n        super();\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.bbox = new BoundingBox(0, 0, 0, 0);\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        this.options = {};\n        this.scale = 1;\n        this.code = code;\n        this.point = point;\n        this.originShift = { x: 0, y: 0 };\n        this.x_shift = 0;\n        this.y_shift = 0;\n        if (options) {\n            this.setOptions(options);\n        }\n        else {\n            this.reset();\n        }\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n    getCode() {\n        return this.code;\n    }\n    // eslint-disable-next-line\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.reset();\n    }\n    setPoint(point) {\n        this.point = point;\n        return this;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    setXShift(x_shift) {\n        this.x_shift = x_shift;\n        return this;\n    }\n    getYshift() {\n        return this.y_shift;\n    }\n    setYShift(y_shift) {\n        this.y_shift = y_shift;\n        return this;\n    }\n    reset() {\n        const data = Glyph.cache.lookup(this.code, this.options.category);\n        this.metrics = data.metrics;\n        // Override point from metrics file\n        if (data.point != -1) {\n            this.point = data.point;\n        }\n        this.scale = (this.point * 72) / (this.metrics.font.getResolution() * 100);\n        this.bbox = new BoundingBox(data.bbox.getX() * this.scale, data.bbox.getY() * this.scale, data.bbox.getW() * this.scale, data.bbox.getH() * this.scale);\n    }\n    checkMetrics() {\n        return defined(this.metrics, 'BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n    getMetrics() {\n        const metrics = this.checkMetrics();\n        const metricsScale = metrics.scale;\n        return {\n            x_min: metrics.x_min * this.scale * metricsScale,\n            x_max: metrics.x_max * this.scale * metricsScale,\n            width: this.bbox.getW(),\n            height: this.bbox.getH(),\n            scale: this.scale * metricsScale,\n            x_shift: metrics.x_shift,\n            y_shift: metrics.y_shift,\n            outline: metrics.outline,\n            font: metrics.font,\n            ha: metrics.ha,\n        };\n    }\n    setOriginX(x) {\n        const { bbox } = this;\n        const originX = Math.abs(bbox.getX() / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.originShift.x = -xShift;\n    }\n    setOriginY(y) {\n        const { bbox } = this;\n        const originY = Math.abs(bbox.getY() / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.originShift.y = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n    render(ctx, x, y) {\n        const metrics = this.checkMetrics();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle(ctx);\n        const xPos = x + this.originShift.x + metrics.x_shift;\n        const yPos = y + this.originShift.y + metrics.y_shift;\n        Glyph.renderOutline(ctx, outline, scale, xPos, yPos);\n        this.restoreStyle(ctx);\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    renderToStave(x) {\n        const context = this.checkContext();\n        const metrics = this.checkMetrics();\n        const stave = this.checkStave();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle();\n        const xPos = x + this.x_shift + metrics.x_shift;\n        const yPos = stave.getYForGlyphs() + this.y_shift + metrics.y_shift;\n        Glyph.renderOutline(context, outline, scale, xPos, yPos);\n        this.restoreStyle();\n    }\n}\nGlyph.cache = new GlyphCache();\n// The current cache key for GlyphCache above.\n// Computed when Flow.setMusicFont(...) is called.\n// It is set to a comma separated list of font names.\nGlyph.CURRENT_CACHE_KEY = '';\n// Used by the GlyphCache above.\n// Set when Flow.setMusicFont(...) is called.\nGlyph.MUSIC_FONT_STACK = [];\nexport { Glyph };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n    /**\n     * Modifiers category string. Every modifier has a different category.\n     * The `ModifierContext` uses this to determine the type and order of the modifiers.\n     */\n    static get CATEGORY() {\n        return Category.Modifier;\n    }\n    /** Modifiers can be positioned almost anywhere, relative to a note. */\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    constructor() {\n        super();\n        this.width = 0;\n        // The `text_line` is reserved space above or below a stave.\n        this.text_line = 0;\n        this.position = Modifier.Position.LEFT;\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.spacingFromNextModifier = 0;\n    }\n    /** Called when position changes. */\n    reset() {\n        // DO NOTHING.\n    }\n    /** Get modifier widths. */\n    getWidth() {\n        return this.width;\n    }\n    /** Set modifier widths. */\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    /**\n     * Used in draw() to check and get the attached note (`StaveNote`, `TabNote`, etc.).\n     * Also verifies that the index is valid.\n     */\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    /**\n     * Set attached note.\n     * @param note (`StaveNote`, `TabNote`, etc.)\n     */\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    /** Get note index, which is a specific note in a chord. */\n    getIndex() {\n        return this.index;\n    }\n    /** Check and get note index, which is a specific note in a chord. */\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    /** Set note index, which is a specific note in a chord. */\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'Modifier Context Required');\n    }\n    /** Every modifier must be part of a `ModifierContext`. */\n    setModifierContext(c) {\n        this.modifierContext = c;\n        return this;\n    }\n    /** Get position. */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Set position.\n     * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n     */\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    /** Set the `text_line` for the modifier. */\n    setTextLine(line) {\n        this.text_line = line;\n        return this;\n    }\n    /** Shift modifier down `y` pixels. Negative values shift up. */\n    setYShift(y) {\n        this.y_shift = y;\n        return this;\n    }\n    /** Set spacing from next modifier. */\n    setSpacingFromNextModifier(x) {\n        this.spacingFromNextModifier = x;\n    }\n    /** Get spacing from next modifier. */\n    getSpacingFromNextModifier() {\n        return this.spacingFromNextModifier;\n    }\n    /**\n     * Shift modifier `x` pixels in the direction of the modifier. Negative values\n     * shift reverse.\n     */\n    setXShift(x) {\n        this.x_shift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.x_shift -= x;\n        }\n        else {\n            this.x_shift += x;\n        }\n        return this;\n    }\n    /** Get shift modifier `x` */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render the modifier onto the canvas. */\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n    alignSubNotesWithNote(subNotes, note) {\n        // Shift over the tick contexts of each note\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { RuntimeError } from './util';\n/** Music implements some standard music theory routines. */\nexport class Music {\n    /** Number of an canonical notes (12). */\n    static get NUM_TONES() {\n        return this.canonical_notes.length;\n    }\n    /** Names of root notes ('c', 'd',...) */\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    /** Values of the root notes.*/\n    static get root_values() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    /** Indices of the root notes.*/\n    static get root_indices() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    /** Names of canonical notes ('c', 'c#', 'd',...). */\n    static get canonical_notes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n    static get diatonic_intervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    /** NoteAccidental associated to diatonic intervals. */\n    static get diatonic_accidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    /** Semitones shift associated to intervals .*/\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    /** Semitones shifts associated with scales. */\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    /** Scales associated with m (minor) and M (major). */\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    /** Accidentals abbreviations. */\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    /** Note values. */\n    static get noteValues() {\n        return {\n            c: { root_index: 0, int_val: 0 },\n            cn: { root_index: 0, int_val: 0 },\n            'c#': { root_index: 0, int_val: 1 },\n            'c##': { root_index: 0, int_val: 2 },\n            cb: { root_index: 0, int_val: 11 },\n            cbb: { root_index: 0, int_val: 10 },\n            d: { root_index: 1, int_val: 2 },\n            dn: { root_index: 1, int_val: 2 },\n            'd#': { root_index: 1, int_val: 3 },\n            'd##': { root_index: 1, int_val: 4 },\n            db: { root_index: 1, int_val: 1 },\n            dbb: { root_index: 1, int_val: 0 },\n            e: { root_index: 2, int_val: 4 },\n            en: { root_index: 2, int_val: 4 },\n            'e#': { root_index: 2, int_val: 5 },\n            'e##': { root_index: 2, int_val: 6 },\n            eb: { root_index: 2, int_val: 3 },\n            ebb: { root_index: 2, int_val: 2 },\n            f: { root_index: 3, int_val: 5 },\n            fn: { root_index: 3, int_val: 5 },\n            'f#': { root_index: 3, int_val: 6 },\n            'f##': { root_index: 3, int_val: 7 },\n            fb: { root_index: 3, int_val: 4 },\n            fbb: { root_index: 3, int_val: 3 },\n            g: { root_index: 4, int_val: 7 },\n            gn: { root_index: 4, int_val: 7 },\n            'g#': { root_index: 4, int_val: 8 },\n            'g##': { root_index: 4, int_val: 9 },\n            gb: { root_index: 4, int_val: 6 },\n            gbb: { root_index: 4, int_val: 5 },\n            a: { root_index: 5, int_val: 9 },\n            an: { root_index: 5, int_val: 9 },\n            'a#': { root_index: 5, int_val: 10 },\n            'a##': { root_index: 5, int_val: 11 },\n            ab: { root_index: 5, int_val: 8 },\n            abb: { root_index: 5, int_val: 7 },\n            b: { root_index: 6, int_val: 11 },\n            bn: { root_index: 6, int_val: 11 },\n            'b#': { root_index: 6, int_val: 0 },\n            'b##': { root_index: 6, int_val: 1 },\n            bb: { root_index: 6, int_val: 10 },\n            bbb: { root_index: 6, int_val: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonical_notes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonic_intervals.length;\n    }\n    /** Return root and accidental associated to a note. */\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    /** Return root, accidental and type associated to a key. */\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            // Unspecified type implies major\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    /** Note value associated to a note name. */\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.int_val;\n    }\n    /** Interval value associated to an interval name. */\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    /** Canonical note name associated to a value. */\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonical_notes[noteValue];\n    }\n    /** Interval name associated to a value. */\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonic_intervals[intervalValue];\n    }\n    /**\n     * Given a note, interval, and interval direction, produce the relative note.\n     */\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    /**\n     * Given a root and note value, produce the relative note name.\n     */\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            // Possibly wrap around. (Add +1 for modulo operator)\n            const reverse_interval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverse_interval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverse_interval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    /**\n     * Return scale tones, given intervals. Each successive interval is\n     * relative to the previous one, e.g., Major Scale:\n     *\n     *   TTSTTTS = [2,2,1,2,2,2,1]\n     *\n     * When used with key = 0, returns C scale (which is isomorphic to\n     * interval list).\n     */\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    /**\n     * Return the interval of a note, given a diatonic scale.\n     * e.g., given the scale C, and the note E, returns M3.\n     */\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    /**\n     * Create a scale map that represents the pitch state for a\n     * `keySignature`. For example, passing a `G` to `keySignature` would\n     * return a scale map with every note naturalized except for `F` which\n     * has an `F#` state.\n     */\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.root_indices[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Music } from './music';\nimport { Tables } from './tables';\nimport { Category, isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('Vex.Flow.Accidental', args);\n}\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.ts` for usage examples.\n */\nclass Accidental extends Modifier {\n    /** Accidentals category string. */\n    static get CATEGORY() {\n        return Category.Accidental;\n    }\n    /** Arrange accidentals inside a ModifierContext. */\n    static format(accidentals, state) {\n        // If there are no accidentals, no need to format their positions.\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const musicFont = Tables.currentMusicFont();\n        const noteheadAccidentalPadding = musicFont.lookupMetric('accidental.noteheadAccidentalPadding');\n        const leftShift = state.left_shift + noteheadAccidentalPadding;\n        const accidentalSpacing = musicFont.lookupMetric('accidental.accidentalSpacing');\n        const additionalPadding = musicFont.lookupMetric('accidental.leftPadding'); // padding to the left of all accidentals\n        const accidentalLinePositionsAndSpaceNeeds = [];\n        let prevNote = undefined;\n        let extraXSpaceNeededForLeftDisplacedNotehead = 0;\n        // First determine the accidentals' Y positions from the note.keys\n        for (let i = 0; i < accidentals.length; ++i) {\n            const acc = accidentals[i];\n            const note = acc.getNote();\n            const stave = note.getStave();\n            const index = acc.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    // If the current extra left-space needed isn't as big as this note's,\n                    // then we need to use this note's.\n                    extraXSpaceNeededForLeftDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), extraXSpaceNeededForLeftDisplacedNotehead);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    y,\n                    line: accLine,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    acc,\n                    spacingBetweenStaveLines: lineSpace,\n                });\n            }\n            else {\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    line: props.line,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    acc,\n                });\n            }\n        }\n        // Sort accidentals by line number.\n        accidentalLinePositionsAndSpaceNeeds.sort((a, b) => b.line - a.line);\n        const staveLineAccidentalLayoutMetrics = [];\n        // amount by which all accidentals must be shifted right or left for\n        // stem flipping, notehead shifting concerns.\n        let maxExtraXSpaceNeeded = 0;\n        // Create an array of unique line numbers (staveLineAccidentalLayoutMetrics)\n        // from accidentalLinePositionsAndSpaceNeeds\n        for (let i = 0; i < accidentalLinePositionsAndSpaceNeeds.length; i++) {\n            const accidentalLinePositionAndSpaceNeeds = accidentalLinePositionsAndSpaceNeeds[i];\n            const priorLineMetric = staveLineAccidentalLayoutMetrics[staveLineAccidentalLayoutMetrics.length - 1];\n            let currentLineMetric;\n            // if this is the first line, or a new line, add a staveLineAccidentalLayoutMetric\n            if (!priorLineMetric || (priorLineMetric === null || priorLineMetric === void 0 ? void 0 : priorLineMetric.line) !== accidentalLinePositionAndSpaceNeeds.line) {\n                currentLineMetric = {\n                    line: accidentalLinePositionAndSpaceNeeds.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                };\n                staveLineAccidentalLayoutMetrics.push(currentLineMetric);\n            }\n            else {\n                currentLineMetric = priorLineMetric;\n            }\n            // if this accidental is not a flat, the accidental needs 3.0 lines lower\n            // clearance instead of 2.5 lines for b or bb.\n            if (accidentalLinePositionAndSpaceNeeds.acc.type !== 'b' &&\n                accidentalLinePositionAndSpaceNeeds.acc.type !== 'bb') {\n                currentLineMetric.flatLine = false;\n            }\n            // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n            if (accidentalLinePositionAndSpaceNeeds.acc.type !== '##') {\n                currentLineMetric.dblSharpLine = false;\n            }\n            // Track how many accidentals are on this line:\n            currentLineMetric.numAcc++;\n            // Track the total x_offset needed for this line which will be needed\n            // for formatting lines w/ multiple accidentals:\n            // width = accidental width + universal spacing between accidentals\n            currentLineMetric.width += accidentalLinePositionAndSpaceNeeds.acc.getWidth() + accidentalSpacing;\n            // if this extraXSpaceNeeded is the largest so far, use it as the starting point for\n            // all accidental columns.\n            maxExtraXSpaceNeeded = Math.max(accidentalLinePositionAndSpaceNeeds.extraXSpaceNeeded, maxExtraXSpaceNeeded);\n        }\n        // ### Place Accidentals in Columns\n        //\n        // Default to a classic triangular layout (middle accidental farthest left),\n        // but follow exceptions as outlined in G. Read's _Music Notation_ and\n        // Elaine Gould's _Behind Bars_.\n        //\n        // Additionally, this implements different vertical collision rules for\n        // flats (only need 2.5 lines clearance below) and double sharps (only\n        // need 2.5 lines of clearance above or below).\n        //\n        // Classic layouts and exception patterns are found in the 'tables.js'\n        // in 'Tables.accidentalColumnsTable'\n        //\n        // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n        // using as few columns as possible for the verticle structure.\n        //\n        // TODO (?): Allow column to be specified for an accidental at run-time?\n        let totalColumns = 0;\n        // establish the boundaries for a group of notes with clashing accidentals:\n        for (let i = 0; i < staveLineAccidentalLayoutMetrics.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < staveLineAccidentalLayoutMetrics.length && !noFurtherConflicts) {\n                // if this note conflicts with the next:\n                if (this.checkCollision(staveLineAccidentalLayoutMetrics[groupEnd], staveLineAccidentalLayoutMetrics[groupEnd + 1])) {\n                    // include the next note in the group:\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            // Gets an a line from the `lineList`, relative to the current group\n            const getGroupLine = (index) => staveLineAccidentalLayoutMetrics[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n            // Set columns for the lines in this group:\n            const groupLength = groupEnd - groupStart + 1;\n            // Set the accidental column for each line of the group\n            let endCase = this.checkCollision(staveLineAccidentalLayoutMetrics[groupStart], staveLineAccidentalLayoutMetrics[groupEnd])\n                ? 'a'\n                : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'second_on_bottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spaced_out_tetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spaced_out_pentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'very_spaced_out_pentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spaced_out_hexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'very_spaced_out_hexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            // If the group contains seven members or more, use ascending parallel lines\n            // of accidentals, using as few columns as possible while avoiding collisions.\n            if (groupLength >= 7) {\n                // First, determine how many columns to use:\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < staveLineAccidentalLayoutMetrics.length; line++) {\n                        if (this.checkCollision(staveLineAccidentalLayoutMetrics[line], staveLineAccidentalLayoutMetrics[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                // Then, assign a column to each line of accidentals\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                // If the group contains fewer than seven members, use the layouts from\n                // the Tables.accidentalColumnsTable (See: tables.ts).\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            // Increment i to the last note that was set, so that if a lower set of notes\n            // does not conflict at all with this group, it can have its own classic shape.\n            i = groupEnd;\n        }\n        // ### Convert Columns to x_offsets\n        //\n        // This keeps columns aligned, even if they have different accidentals within them\n        // which sometimes results in a larger x_offset than is an accidental might need\n        // to preserve the symmetry of the accidental shape.\n        //\n        // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n        // music with complex chord clusters.\n        //\n        // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n        // parallel columns.\n        // track each column's max width, which will be used as initial shift of later columns:\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = leftShift + maxExtraXSpaceNeeded;\n        columnXOffsets[0] = leftShift;\n        // Fill columnWidths with widest needed x-space;\n        // this is what keeps the columns parallel.\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            // this column's offset = this column's width + previous column's offset\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        // Set the xShift for each accidental according to column offsets:\n        let accCount = 0;\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            // handle all of the accidentals on a given line:\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth + maxExtraXSpaceNeeded;\n                accidentalLinePositionsAndSpaceNeeds[accCount].acc.setXShift(xShift);\n                // keep track of the width of accidentals we've added so far, so that when\n                // we loop, we add space for them.\n                lineWidth += accidentalLinePositionsAndSpaceNeeds[accCount].acc.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        // update the overall layout with the full width of the accidental shapes:\n        state.left_shift = totalShift + additionalPadding;\n    }\n    /** Helper function to determine whether two lines of accidentals collide vertically */\n    static checkCollision(line1, line2) {\n        let clearance = line2.line - line1.line;\n        let clearanceRequired = 3;\n        // But less clearance is required for certain accidentals: b, bb and ##.\n        if (clearance > 0) {\n            // then line 2 is on top\n            clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n            if (line1.dblSharpLine)\n                clearance -= 0.5;\n        }\n        else {\n            // line 1 is on top\n            clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n            if (line2.dblSharpLine)\n                clearance -= 0.5;\n        }\n        const collision = Math.abs(clearance) < clearanceRequired;\n        L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n        return collision;\n    }\n    /**\n     * Use this method to automatically apply accidentals to a set of `voices`.\n     * The accidentals will be remembered between all the voices provided.\n     * Optionally, you can also provide an initial `keySignature`.\n     */\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        // Sort the tickables in each voice by their tick position in the voice.\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        // Default key signature is C major.\n        if (!keySignature)\n            keySignature = 'C';\n        // Get the scale map, which represents the current state of each pitch.\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            // Array to store all pitches that modified accidental states\n            // at this tick position\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                // Only StaveNote implements .addModifier(), which is used below.\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                // Go through each key and determine if an accidental should be applied.\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    // Force a natural for every key without an accidental\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    // Determine if the current pitch has the same accidental\n                    // as the scale state\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    // Determine if an identical pitch in the chord already\n                    // modified the accidental state\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    // Remove accidentals\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    // Add the accidental to the StaveNote\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        // Modify the scale map so that the root pitch has an\n                        // updated state\n                        scaleMap[key.root + octave] = pitch;\n                        // Create the accidental\n                        const accidental = new Accidental(accidentalString);\n                        // Attach the accidental to the StaveNote\n                        staveNote.addModifier(accidental, keyIndex);\n                        // Add the pitch to list of pitches that modified accidentals\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                // process grace notes\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    /**\n     * Create accidental.\n     * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n     * For example: `#`, `##`, `b`, `n`, etc.\n     */\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            // Font size for glyphs\n            font_scale: Tables.NOTATION_FONT_SCALE,\n            // Padding between accidental and parentheses on each side\n            parenLeftPadding: 2,\n            parenRightPadding: 2,\n        };\n        this.accidental = Tables.accidentalCodes(this.type);\n        defined(this.accidental, 'ArgumentError', `Unknown accidental type: ${type}`);\n        // Cautionary accidentals have parentheses around them\n        this.cautionary = false;\n        this.reset();\n    }\n    reset() {\n        const fontScale = this.render_options.font_scale;\n        this.glyph = new Glyph(this.accidental.code, fontScale);\n        this.glyph.setOriginX(1.0);\n        if (this.cautionary) {\n            this.parenLeft = new Glyph(Tables.accidentalCodes('{').code, fontScale);\n            this.parenRight = new Glyph(Tables.accidentalCodes('}').code, fontScale);\n            this.parenLeft.setOriginX(1.0);\n            this.parenRight.setOriginX(1.0);\n        }\n    }\n    /** Get width in pixels. */\n    getWidth() {\n        if (this.cautionary) {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            const parenWidth = parenLeft.getMetrics().width +\n                parenRight.getMetrics().width +\n                this.render_options.parenLeftPadding +\n                this.render_options.parenRightPadding;\n            return this.glyph.getMetrics().width + parenWidth;\n        }\n        else {\n            return this.glyph.getMetrics().width;\n        }\n    }\n    /** Attach this accidental to `note`, which must be a `StaveNote`. */\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        // Accidentals attached to grace notes are rendered smaller.\n        if (isGraceNote(note)) {\n            this.render_options.font_scale = 25;\n            this.reset();\n        }\n        return this;\n    }\n    /** If called, draws parenthesis around accidental. */\n    setAsCautionary() {\n        this.cautionary = true;\n        this.render_options.font_scale = 28;\n        this.reset();\n        return this;\n    }\n    /** Render accidental onto canvas. */\n    draw() {\n        const { type, position, index, cautionary, x_shift, y_shift, glyph, render_options: { parenLeftPadding, parenRightPadding }, } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // Figure out the start `x` and `y` coordinates for note and index.\n        const start = note.getModifierStartXY(position, index);\n        let accX = start.x + x_shift;\n        const accY = start.y + y_shift;\n        L('Rendering: ', type, accX, accY);\n        if (!cautionary) {\n            glyph.render(ctx, accX, accY);\n        }\n        else {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            // Render the accidental in parentheses.\n            parenRight.render(ctx, accX, accY);\n            accX -= parenRight.getMetrics().width;\n            accX -= parenRightPadding;\n            accX -= this.accidental.parenRightPaddingAdjustment;\n            glyph.render(ctx, accX, accY);\n            accX -= glyph.getMetrics().width;\n            accX -= parenLeftPadding;\n            parenLeft.render(ctx, accX, accY);\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\nAccidental.DEBUG = false;\nexport { Accidental };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('Vex.Flow.Stem', args);\n}\nclass Stem extends Element {\n    static get CATEGORY() {\n        return Category.Stem;\n    }\n    // Stem directions\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    // Theme\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    constructor(options) {\n        super();\n        this.stem_up_y_offset = 0;\n        this.stem_down_y_offset = 0;\n        this.stem_up_y_base_offset = 0;\n        this.stem_down_y_base_offset = 0;\n        // Default notehead x bounds\n        this.x_begin = (options === null || options === void 0 ? void 0 : options.x_begin) || 0;\n        this.x_end = (options === null || options === void 0 ? void 0 : options.x_end) || 0;\n        // Y bounds for top/bottom most notehead\n        this.y_top = (options === null || options === void 0 ? void 0 : options.y_top) || 0;\n        this.y_bottom = (options === null || options === void 0 ? void 0 : options.y_bottom) || 0;\n        // Stem top extension\n        this.stem_extension = (options === null || options === void 0 ? void 0 : options.stem_extension) || 0;\n        // Direction of the stem\n        this.stem_direction = (options === null || options === void 0 ? void 0 : options.stem_direction) || 0;\n        // Flag to override all draw calls\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (options === null || options === void 0 ? void 0 : options.stemletHeight) || 0;\n        // Use to adjust the rendered height without affecting\n        // the results of `.getExtents()`\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        // Changing where the stem meets the head\n        this.stem_up_y_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_offset) || 0;\n        this.stem_down_y_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_offset) || 0;\n        this.stem_up_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_base_offset) || 0;\n        this.stem_down_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_base_offset) || 0;\n    }\n    // Set the x bounds for the default notehead\n    setNoteHeadXBounds(x_begin, x_end) {\n        this.x_begin = x_begin;\n        this.x_end = x_end;\n        return this;\n    }\n    // Set the direction of the stem in relation to the noteheads\n    setDirection(direction) {\n        this.stem_direction = direction;\n    }\n    // Set the extension for the stem, generally for flags or beams\n    setExtension(ext) {\n        this.stem_extension = ext;\n    }\n    getExtension() {\n        return this.stem_extension;\n    }\n    // The the y bounds for the top and bottom noteheads\n    setYBounds(y_top, y_bottom) {\n        this.y_top = y_top;\n        this.y_bottom = y_bottom;\n    }\n    // Gets the entire height for the stem\n    getHeight() {\n        const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n        const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension); // parentheses just for grouping.\n        return unsigned_height * this.stem_direction;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    // Get the y coordinates for the very base of the stem to the top of\n    // the extension\n    getExtents() {\n        const isStemUp = this.stem_direction === Stem.UP;\n        const ys = [this.y_top, this.y_bottom];\n        const stemHeight = Stem.HEIGHT + this.stem_extension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Tables.currentMusicFont().lookupMetric('stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    // Render the stem onto the canvas\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stem_x;\n        let stem_y;\n        const stem_direction = this.stem_direction;\n        let y_base_offset = 0;\n        if (stem_direction === Stem.DOWN) {\n            // Down stems are rendered to the left of the head.\n            stem_x = this.x_begin;\n            stem_y = this.y_top + this.stem_down_y_offset;\n            y_base_offset = this.stem_down_y_base_offset;\n        }\n        else {\n            // Up stems are rendered to the right of the head.\n            stem_x = this.x_end;\n            stem_y = this.y_bottom - this.stem_up_y_offset;\n            y_base_offset = this.stem_up_y_base_offset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n        // The offset from the stem's base which is required fo satisfy the stemlet height\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n        // Draw the stem\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('stem', this.getAttribute('id'), { pointerBBox: true });\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n        ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n        ctx.stroke();\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`. */\nStem.DEBUG = false;\nexport { Stem };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextFormatter.DEBUG)\n        log('Vex.Flow.TextFormatter', args);\n}\n/**\n * Text widths are stored in a cache, so we don't have to recompute widths\n * for the same font + string combination.\n *\n * The cache is first keyed by the font information. The key is of the form:\n *   `${family}-${size}-${weight}-${style}`\n * The second level key is the specific text to be measured.\n *\n * The stored value is the measured width in `em` units.\n *   textWidth == textWidthCache[cacheKey][textToMeasure]\n */\nconst textWidthCache = {};\nconst textHeightCache = {};\n/**\n * Applications may register additional fonts via `TextFormatter.registerInfo(info)`.\n * The metrics for those fonts will be made available to the application.\n */\nconst registry = {};\nclass TextFormatter {\n    /**\n     * Return all registered font families.\n     */\n    static getFontFamilies() {\n        const registeredFonts = [];\n        for (const fontFamily in registry) {\n            const formatterInfo = registry[fontFamily];\n            registeredFonts.push(Object.assign({}, formatterInfo));\n        }\n        return registeredFonts;\n    }\n    /**\n     * Call `TextFormatter.registerInfo(info)` to register font information before using this method.\n     *\n     * This method creates a formatter for the font that most closely matches the requested font.\n     * We compare font family, bold, and italic attributes.\n     * This method will return a fallback formatter if there are no matches.\n     */\n    static create(requestedFont = {}) {\n        L('create: ', requestedFont);\n        if (!requestedFont.family) {\n            requestedFont.family = Font.SANS_SERIF;\n        }\n        // TODO: One potential (small) optimization is to cache the TextFormatter object\n        // returned for each font info. We would probably want to clear the cache if\n        // the registry is ever updated.\n        const candidates = [];\n        // The incoming font family is a string of comma-separated font family names.\n        // (e.g., `PetalumaScript, Arial, sans-serif`).\n        const requestedFamilies = requestedFont.family.split(/\\s*,\\s*/);\n        for (const requestedFamily of requestedFamilies) {\n            for (const fontFamily in registry) {\n                // Support cases where the registry contains 'Roboto Slab Medium',\n                // but the requestedFont.family is 'Roboto Slab'.\n                if (fontFamily.startsWith(requestedFamily)) {\n                    candidates.push(registry[fontFamily]);\n                }\n            }\n            if (candidates.length > 0) {\n                break;\n            }\n        }\n        let formatter;\n        if (candidates.length === 0) {\n            // No match, so return a fallback text formatter.\n            formatter = new TextFormatter(Object.values(registry)[0]);\n        }\n        else if (candidates.length === 1) {\n            formatter = new TextFormatter(candidates[0]);\n        }\n        else {\n            const bold = Font.isBold(requestedFont.weight);\n            const italic = Font.isItalic(requestedFont.style);\n            const perfectMatch = candidates.find((f) => f.bold === bold && f.italic === italic);\n            if (perfectMatch) {\n                formatter = new TextFormatter(perfectMatch);\n            }\n            else {\n                const partialMatch = candidates.find((f) => f.italic === italic || f.bold === bold);\n                if (partialMatch) {\n                    formatter = new TextFormatter(partialMatch);\n                }\n                else {\n                    formatter = new TextFormatter(candidates[0]);\n                }\n            }\n        }\n        const fontSize = requestedFont.size;\n        if (typeof fontSize !== 'undefined') {\n            const fontSizeInPt = Font.convertSizeToPointValue(fontSize);\n            formatter.setFontSize(fontSizeInPt);\n        }\n        return formatter;\n    }\n    /**\n     * @param fontFamily used as a key to the font registry.\n     * @returns the same info object that was passed in via `TextFormatter.registerInfo(info)`\n     */\n    static getInfo(fontFamily) {\n        return registry[fontFamily];\n    }\n    /**\n     * Apps may register their own fonts and metrics, and those metrics\n     * will be available to the app for formatting.\n     *\n     * Metrics can be generated from a font file using fontgen_text.js in the tools/fonts directory.\n     * @param info\n     * @param overwrite\n     */\n    static registerInfo(info, overwrite = false) {\n        L('registerInfo: ', info, overwrite);\n        const fontFamily = info.family;\n        const currFontInfo = registry[fontFamily];\n        if (currFontInfo === undefined || overwrite) {\n            registry[fontFamily] = info;\n        }\n    }\n    /**\n     * Use `TextFormatter.create(...)` to build an instance from information previously\n     * registered via `TextFormatter.registerInfo(info)`.\n     */\n    constructor(formatterInfo) {\n        /** Font family. */\n        this.family = '';\n        /** Specified in `pt` units. */\n        this.size = 14;\n        /** Font metrics are extracted at 1000 upem (units per em). */\n        this.resolution = 1000;\n        /**\n         * For text formatting, we do not require glyph outlines, but instead rely on glyph\n         * bounding box metrics such as:\n         * ```\n         * {\n         *    x_min: 48,\n         *    x_max: 235,\n         *    y_min: -17,\n         *    y_max: 734,\n         *    ha: 751,\n         *    leftSideBearing: 48,\n         *    advanceWidth: 286,\n         *  }\n         * ```\n         */\n        this.glyphs = {};\n        this.serifs = false;\n        this.monospaced = false;\n        this.italic = false;\n        this.bold = false;\n        this.superscriptOffset = 0;\n        this.subscriptOffset = 0;\n        this.maxSizeGlyph = '@';\n        // This is an internal key used to index the `textWidthCache`.\n        this.cacheKey = '';\n        this.updateParams(formatterInfo);\n    }\n    get localHeightCache() {\n        var _a;\n        if (textHeightCache[this.cacheKey] === undefined) {\n            textHeightCache[this.cacheKey] = {};\n        }\n        return (_a = textHeightCache[this.cacheKey]) !== null && _a !== void 0 ? _a : {};\n    }\n    updateParams(params) {\n        if (params.family)\n            this.family = params.family;\n        if (params.resolution)\n            this.resolution = params.resolution;\n        if (params.glyphs)\n            this.glyphs = params.glyphs;\n        if (params.serifs)\n            this.serifs = params.serifs;\n        if (params.monospaced)\n            this.monospaced = params.monospaced;\n        if (params.italic)\n            this.italic = params.italic;\n        if (params.bold)\n            this.bold = params.bold;\n        if (params.maxSizeGlyph)\n            this.maxSizeGlyph = params.maxSizeGlyph;\n        if (params.superscriptOffset)\n            this.superscriptOffset = params.superscriptOffset;\n        if (params.subscriptOffset)\n            this.subscriptOffset = params.subscriptOffset;\n        this.updateCacheKey();\n    }\n    /** Create a hash with the current font data, so we can cache computed widths. */\n    updateCacheKey() {\n        const family = this.family.replace(/\\s+/g, '_');\n        const size = this.size;\n        const weight = this.bold ? FontWeight.BOLD : FontWeight.NORMAL;\n        const style = this.italic ? FontStyle.ITALIC : FontStyle.NORMAL;\n        // Use the same key format as SVGContext.\n        this.cacheKey = `${family}%${size}%${weight}%${style}`;\n    }\n    /**\n     * The glyphs table is indexed by the character (e.g., 'C', '@').\n     * See: robotoslab_glyphs.ts & petalumascript_glyphs.ts.\n     */\n    getGlyphMetrics(character) {\n        if (this.glyphs[character]) {\n            return this.glyphs[character];\n        }\n        else {\n            return this.glyphs[this.maxSizeGlyph];\n        }\n    }\n    get maxHeight() {\n        const metrics = this.getGlyphMetrics(this.maxSizeGlyph);\n        return (metrics.ha / this.resolution) * this.fontSizeInPixels;\n    }\n    /**\n     * Retrieve the character's advanceWidth as a fraction of an `em` unit.\n     * For the space character ' ' as defined in the:\n     *   petalumascript_glyphs.ts: 250 advanceWidth in the 1000 unitsPerEm font returns 0.25.\n     *   robotoslab_glyphs.ts:     509 advanceWidth in the 2048 unitsPerEm font returns 0.2485.\n     */\n    getWidthForCharacterInEm(c) {\n        var _a;\n        const metrics = this.getGlyphMetrics(c);\n        if (!metrics) {\n            // An arbitrary number, close to the `em` width of the '#' and '5' characters in PetalumaScript.\n            return 0.65;\n        }\n        else {\n            const advanceWidth = (_a = metrics.advanceWidth) !== null && _a !== void 0 ? _a : 0;\n            return advanceWidth / this.resolution;\n        }\n    }\n    /**\n     * Retrieve the character's y bounds (ymin, ymax) and height.\n     */\n    getYForCharacterInPx(c) {\n        const metrics = this.getGlyphMetrics(c);\n        const rv = { yMin: 0, yMax: this.maxHeight, height: this.maxHeight };\n        if (!metrics) {\n            return rv;\n        }\n        else {\n            if (typeof metrics.y_min === 'number') {\n                rv.yMin = (metrics.y_min / this.resolution) * this.fontSizeInPixels;\n            }\n            if (typeof metrics.y_max === 'number') {\n                rv.yMax = (metrics.y_max / this.resolution) * this.fontSizeInPixels;\n            }\n            rv.height = rv.yMax - rv.yMin;\n            return rv;\n        }\n    }\n    getYForStringInPx(str) {\n        const entry = this.localHeightCache;\n        const extent = { yMin: 0, yMax: this.maxHeight, height: this.maxHeight };\n        const cache = entry[str];\n        if (cache !== undefined) {\n            return cache;\n        }\n        for (let i = 0; i < str.length; ++i) {\n            const curY = this.getYForCharacterInPx(str[i]);\n            extent.yMin = Math.min(extent.yMin, curY.yMin);\n            extent.yMax = Math.max(extent.yMax, curY.yMax);\n            extent.height = extent.yMax - extent.yMin;\n        }\n        entry[str] = extent;\n        return extent;\n    }\n    /**\n     * Retrieve the total width of `text` in `em` units.\n     */\n    getWidthForTextInEm(text) {\n        const key = this.cacheKey;\n        // Get the cache for this specific font family, size, weight, style combination.\n        // The cache contains previously computed widths for different `text` strings.\n        let cachedWidths = textWidthCache[key];\n        if (cachedWidths === undefined) {\n            cachedWidths = {};\n            textWidthCache[key] = cachedWidths;\n        }\n        let width = cachedWidths[text];\n        if (width === undefined) {\n            width = 0;\n            for (let i = 0; i < text.length; ++i) {\n                width += this.getWidthForCharacterInEm(text[i]);\n            }\n            cachedWidths[text] = width;\n        }\n        return width;\n    }\n    /** The width of the text (in `em`) is scaled by the font size (in `px`). */\n    getWidthForTextInPx(text) {\n        return this.getWidthForTextInEm(text) * this.fontSizeInPixels;\n    }\n    /**\n     * @param size in pt.\n     */\n    setFontSize(size) {\n        this.size = size;\n        // The width cache key depends on the current font size.\n        this.updateCacheKey();\n        return this;\n    }\n    /** `this.size` is specified in points. Convert to pixels. */\n    get fontSizeInPixels() {\n        return this.size * Font.scaleToPxFrom.pt;\n    }\n    getResolution() {\n        return this.resolution;\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextFormatter.DEBUG` to `true`. */\nTextFormatter.DEBUG = false;\nexport { TextFormatter };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote, isTabNote } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('Vex.Flow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nclass Annotation extends Modifier {\n    /** Annotations category string. */\n    static get CATEGORY() {\n        return Category.Annotation;\n    }\n    // Use the same padding for annotations as note head so the\n    // words don't run into each other.\n    static get minAnnotationPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /** Arrange annotations within a `ModifierContext` */\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            const textFormatter = TextFormatter.create(annotation.textFont);\n            // Text height is expressed in fractional stave spaces.\n            const textLines = (2 + textFormatter.getYForStringInPx(annotation.text).height) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const glyphWidth = note.getGlyphProps().getWidth();\n            // Get the text width from the font metrics.\n            const textWidth = textFormatter.getWidthForTextInPx(annotation.text);\n            if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n                maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n            }\n            else if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n                maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                rightWidth = Math.max(rightWidth, textWidth);\n            }\n            else {\n                leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n                rightWidth = Math.max(rightWidth, textWidth / 2);\n                maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n            }\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (isTabNote(note)) {\n                if (note.render_options.draw_stem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (isTabNote(note)) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.top_text_line + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.top_text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.top_text_line);\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (isTabNote(note)) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.text_line + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.text_line);\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.text_line);\n            }\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    /**\n     * Annotations inherit from `Modifier` and is positioned correctly when\n     * in a `ModifierContext`.\n     * Create a new `Annotation` with the string `text`.\n     */\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        // warning: the default in the constructor is TOP, but in the factory the default is BOTTOM.\n        // this is to support legacy application that may expect this.\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n        this.resetFont();\n        // The default width is calculated from the text.\n        this.setWidth(Tables.textWidth(text));\n    }\n    /**\n     * Set vertical position of text (above or below stave).\n     * @param just value in `AnnotationVerticalJustify`.\n     */\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    /**\n     * Get horizontal justification.\n     */\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    /**\n     * Set horizontal justification.\n     * @param justification value in `Annotation.Justify`.\n     */\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    /** Render text beside the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const textFormatter = TextFormatter.create(this.textFont);\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        // Apply style might not save context, if this.style is undefined, so we\n        // still need to save context state just before this, since we will be\n        // changing ctx parameters below.\n        this.applyStyle();\n        ctx.openGroup('annotation', this.getAttribute('id'));\n        ctx.setFont(this.textFont);\n        const text_width = textFormatter.getWidthForTextInPx(this.text);\n        const text_height = textFormatter.getYForStringInPx(this.text).height;\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - text_width;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - text_width / 2;\n        } /* CENTER_STEM */\n        else {\n            x = note.getStemX() - text_width / 2;\n        }\n        let stem_ext = {};\n        let spacing = 0;\n        const has_stem = note.hasStem();\n        const stave = note.checkStave();\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        if (has_stem) {\n            stem_ext = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            // Use the largest (lowest) Y value\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE + text_height;\n            if (has_stem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stem_ext.topY + text_height + spacing * this.text_line);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.text_line) - 1;\n            const yb = stave.getYForBottomText(this.text_line);\n            y = yt + (yb - yt) / 2 + text_height / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            const topY = Math.min(...note.getYs());\n            y = topY - (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (has_stem && stemDirection === Stem.UP) {\n                // If the stem is above the stave already, go with default line width vs. actual\n                // since the lines between don't really matter.\n                spacing = stem_ext.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stem_ext.topY - spacing * (this.text_line + 1));\n            }\n        } /* CENTER_STEM */\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        ctx.fillText(this.text, x, y);\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\nAnnotation.DEBUG = false;\nAnnotation.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n/** Text annotations can be positioned and justified relative to the note. */\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\nexport { Annotation };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('Vex.Flow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\n// This includes both staff and ledger lines\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    // Initially, snap to nearest staff line or space\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\n// Helper function for checking if a Note object is either a StaveNote or a GraceNote.\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nfunction getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nfunction getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\n/**\n * Get the initial offset of the articulation from the y value of the starting position.\n * This is required because the top/bottom text positions already have spacing applied to\n * provide a \"visually pleasant\" default position. However the y values provided from\n * the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n * normalizes this asymmetry.\n * @param note\n * @param position\n * @returns\n */\nfunction getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            // this amount is larger than the stem-tip offset because we start from\n            // the center of the notehead\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.ts` for usage examples.\n */\nclass Articulation extends Modifier {\n    /** Articulations category string. */\n    static get CATEGORY() {\n        return Category.Articulation;\n    }\n    /**\n     * FIXME:\n     * Most of the complex formatting logic (ie: snapping to space) is\n     * actually done in .render(). But that logic belongs in this method.\n     *\n     * Unfortunately, this isn't possible because, by this point, stem lengths\n     * have not yet been finalized. Finalized stem lengths are required to determine the\n     * initial position of any stem-side articulation.\n     *\n     * This indicates that all objects should have their stave set before being\n     * formatted. It can't be an optional if you want accurate vertical positioning.\n     * Consistently positioned articulations that play nice with other modifiers\n     * won't be possible until we stop relying on render-time formatting.\n     *\n     * Ideally, when this function has completed, the vertical articulation positions\n     * should be ready to render without further adjustment. But the current state\n     * is far from this ideal.\n     */\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        let maxGlyphWidth = 0;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), defined(articulation.glyph.getMetrics().height) / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            maxGlyphWidth = Math.max(note.getGlyphProps().getWidth(), maxGlyphWidth);\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            // Decide if we need to consider beam direction in placement.\n            if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.top_text_line, ABOVE);\n                const curTop = noteLine + state.top_text_line + 0.5;\n                // If articulation must be above stave, add lines between note and stave top\n                if (!articulation.articulation.between_lines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.top_text_line);\n                state.top_text_line += increment;\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.text_line, BELOW);\n                const curBottom = noteLine + state.text_line + 0.5;\n                // if articulation must be below stave, add lines from note to stave bottom\n                if (!articulation.articulation.between_lines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.text_line);\n                state.text_line += increment;\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        const overlap = Math.min(Math.max(width - maxGlyphWidth, 0), Math.max(width - (state.left_shift + state.right_shift), 0));\n        state.left_shift += overlap / 2;\n        state.right_shift += overlap / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(artic, 0));\n    }\n    /**\n     * Create a new articulation.\n     * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts` or Glyph code.\n     *\n     * Notes (by default):\n     * - Glyph codes ending with 'Above' will be positioned ABOVE\n     * - Glyph codes ending with 'Below' will be positioned BELOW\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.position = ABOVE;\n        this.render_options = {\n            font_scale: Tables.NOTATION_FONT_SCALE,\n        };\n        this.reset();\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        // Use type as glyph code, if not defined as articulation code\n        if (!this.articulation) {\n            this.articulation = { code: this.type, between_lines: false };\n            if (this.type.endsWith('Above'))\n                this.position = ABOVE;\n            if (this.type.endsWith('Below'))\n                this.position = BELOW;\n        }\n        const code = (this.position === ABOVE ? this.articulation.aboveCode : this.articulation.belowCode) || this.articulation.code;\n        this.glyph = new Glyph(code !== null && code !== void 0 ? code : '', this.render_options.font_scale);\n        defined(this.glyph, 'ArgumentError', `Articulation not found: ${this.type}`);\n        this.setWidth(defined(this.glyph.getMetrics().width));\n    }\n    /** Set if articulation should be rendered between lines. */\n    setBetweenLines(betweenLines = true) {\n        this.articulation.between_lines = betweenLines;\n        return this;\n    }\n    /** Render articulation in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, glyph, text_line: textLine } = this;\n        const canSitBetweenLines = this.articulation.between_lines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        // Articulations are centered over/under the note head.\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        const padding = Tables.currentMusicFont().lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n        let y = {\n            [ABOVE]: () => {\n                glyph.setOrigin(0.5, 1);\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                glyph.setOrigin(0.5, 0);\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                glyph.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + padding * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        glyph.render(ctx, x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\nexport { Articulation };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2021.\n// MIT License\nimport { Category } from './typeguard';\nexport class RenderContext {\n    static get CATEGORY() {\n        return Category.RenderContext;\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n    /**\n     * This is kept for backwards compatibility with 3.0.9.\n     * @deprecated use `setFont(...)` instead since it now supports CSS font shorthand.\n     */\n    setRawFont(f) {\n        this.setFont(f);\n        return this;\n    }\n}\n/**\n * Draw a tiny dot marker on the specified context. A great debugging aid.\n * @param ctx context\n * @param x dot x coordinate\n * @param y dot y coordinate\n * @param color\n */\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    // draw a circle\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport class Tickable extends Element {\n    static get CATEGORY() {\n        return Category.Tickable;\n    }\n    constructor() {\n        super();\n        this._preFormatted = false;\n        this._postFormatted = false;\n        // These properties represent the duration of\n        // this tickable element.\n        this.ticks = new Fraction(0, 1); // Fractional value of ticks\n        this.intrinsicTicks = 0; // Floating point value of ticks\n        this.tickMultiplier = new Fraction(1, 1);\n        // Formatter metrics\n        this.width = 0;\n        this.x_shift = 0; // Shift from tick context\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.align_center = false;\n        this.center_x_shift = 0; // Shift from tick context if center aligned\n        // This flag tells the formatter to ignore this tickable during\n        // formatting and justification. It is set by tickables such as BarNote.\n        this.ignore_ticks = false;\n        // This is a space for an external formatting class or function to maintain\n        // metrics.\n        this.formatterMetrics = {\n            // The freedom of a tickable is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n            // The simplified rational duration of this tick as a string. It can be\n            // used as an index to a map or hashtable.\n            duration: '',\n            // The number of formatting iterations undergone.\n            iterations: 0,\n            // The space in pixels allocated by this formatter, along with the mean space\n            // for tickables of this duration, and the deviation from the mean.\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    /** Reset the Tickable, this function will be overloaded. */\n    reset() {\n        return this;\n    }\n    /** Return the ticks. */\n    getTicks() {\n        return this.ticks;\n    }\n    /** Check if it ignores the ticks. */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Ignore the ticks. */\n    setIgnoreTicks(flag) {\n        this.ignore_ticks = flag;\n        return this;\n    }\n    /** Set width of note. Used by the formatter for positioning. */\n    setWidth(width) {\n        this.width = width;\n    }\n    /** Get width of note. Used by the formatter for positioning. */\n    getWidth() {\n        if (!this._preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    /** Displace note by `x` pixels. Used by the formatter. */\n    setXShift(x) {\n        this.x_shift = x;\n        return this;\n    }\n    /** Get the `x` displaced pixels of the note. */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Get `x` position of this tick context. */\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.x_shift;\n    }\n    /** Return the formatterMetrics. */\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    /** Return the center `x` shift. */\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.center_x_shift;\n        }\n        return 0;\n    }\n    /** Set the center `x` shift. */\n    setCenterXShift(centerXShift) {\n        this.center_x_shift = centerXShift;\n        return this;\n    }\n    // Check if tickable is center aligned. */\n    isCenterAligned() {\n        return this.align_center;\n    }\n    // Set/unset center alignment. */\n    setCenterAlignment(align_center) {\n        this.align_center = align_center;\n        return this;\n    }\n    /**\n     * Return the associated voice. Every tickable must be associated with a voice.\n     * This allows formatters and preFormatter to associate them with the right modifierContexts.\n     */\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    /** Set the associated voice. */\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    /** Get the tuplet. */\n    getTuplet() {\n        return this.tuplet;\n    }\n    /** Return a list of Tuplets. */\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    /**\n     * Reset the specific Tuplet (if this is not provided, all tuplets are reset).\n     * Remove any prior tuplets from the tick calculation and\n     * reset the intrinsic tick value.\n     */\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                // Revert old multiplier by inverting numerator & denom.:\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            // Revert old multiplier by inverting numerator & denom.:\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    /** Attach to new tuplet. */\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    /**\n     * Add self to the provided ModifierContext `mc`.\n     * If this tickable has modifiers, set modifierContext.\n     * @returns this\n     */\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        this._preFormatted = false;\n        return this;\n    }\n    /**\n     * Optional, if tickable has modifiers, associate a Modifier.\n     * @param mod the modifier\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        this._preFormatted = false;\n        return this;\n    }\n    /** Get the list of associated modifiers. */\n    getModifiers() {\n        return this.modifiers;\n    }\n    /** Set the Tick Context. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this._preFormatted = false;\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    /** Preformat the Tickable. */\n    preFormat() {\n        if (this._preFormatted)\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    /** Set preformatted status. */\n    set preFormatted(value) {\n        this._preFormatted = value;\n    }\n    get preFormatted() {\n        return this._preFormatted;\n    }\n    /** Postformat the Tickable. */\n    postFormat() {\n        if (this._postFormatted)\n            return this;\n        this._postFormatted = true;\n        return this;\n    }\n    /** Set postformatted status. */\n    set postFormatted(value) {\n        this._postFormatted = value;\n    }\n    get postFormatted() {\n        return this._postFormatted;\n    }\n    /** Return the intrinsic ticks. */\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    /** Set the intrinsic ticks. */\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Get the tick multiplier. */\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    /** Apply a tick multiplier. */\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Set the duration. */\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    /** Attach this note to a modifier context. */\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { drawDot } from './rendercontext';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport class Note extends Tickable {\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Note;\n    }\n    /** Debug helper. Displays various note metrics for the given note. */\n    static plotMetrics(ctx, note, yPos) {\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        // Preserve backwards-compatibility\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        // If specified type is invalid, return undefined.\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        // If no type specified, check duration or custom types\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            // If we have keys, try and check if we've got a custom glyph\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    // We have a custom glyph specified after the note eg. /X2\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        // Calculate the tick duration of the note\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        // Are there any dots?\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        // Add ticks as necessary depending on the numbr of dots\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    /**\n     * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n     * positioning and layout.\n     *\n     * @param noteStruct To create a new note you need to provide a `noteStruct`.\n     */\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        /** Parses `noteStruct` and get note properties. */\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        // Set note properties from parameters.\n        this.keys = noteStruct.keys || [];\n        // per-pitch properties\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.duration_override) {\n            // Custom duration\n            this.setDuration(noteStruct.duration_override);\n        }\n        else {\n            // Default duration\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        // Get the glyph code for this note from the font.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Tables.getGlyphProps(this.duration, t));\n        // Note to play for audio players.\n        this.playNote = undefined;\n        // Positioning contexts used by the Formatter.\n        this.ignore_ticks = false;\n        // Positioning variables\n        this.width = 0; // Width in pixels calculated after preFormat\n        this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n        this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n        this.x_shift = 0; // X shift from tick context X\n        this.ys = []; // list of y coordinates for each note\n        // we need to hold on to these for ties and beams.\n        if (noteStruct.align_center) {\n            this.setCenterAlignment(noteStruct.align_center);\n        }\n        // The render surface.\n        this.render_options = {\n            annotation_spacing: 5,\n            glyph_font_scale: 1,\n            stroke_px: 1,\n            scale: 1,\n            font: '',\n            y_shift: 0,\n        };\n    }\n    /**\n     * Get the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    getPlayNote() {\n        return this.playNote;\n    }\n    /**\n     * Set the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    /**\n     * @returns true if this note is a type of rest.\n     *\n     * Rests don't have pitches, but take up space in the score.\n     * Subclasses should override this default implementation.\n     */\n    isRest() {\n        return false;\n    }\n    /** Add stroke. */\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the target stave. */\n    getStave() {\n        return this.stave;\n    }\n    /** Check and get the target stave. */\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /** Set the target stave. */\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    /** Get spacing to the left of the notes. */\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    /** Get spacing to the right of the notes. */\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    /** Set spacing to the left of the notes. */\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    /** Set spacing to the right of the notes. */\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Get the stave line number for the note. */\n    // eslint-disable-next-line\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    /** Get the stave line number for rest. */\n    getLineForRest() {\n        return 0;\n    }\n    /**\n     * @deprecated Use `getGlyphProps()` instead.\n     */\n    // eslint-disable-next-line\n    getGlyph() {\n        return this.glyphProps;\n    }\n    /** Get the glyph associated with this note. */\n    getGlyphProps() {\n        return this.glyphProps;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return this.glyphProps.getWidth(this.render_options.glyph_font_scale);\n    }\n    /**\n     * Set Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    /**\n     * Get Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    /**\n     * Get the Y position of the space above the stave onto which text can\n     * be rendered.\n     */\n    getYForTopText(text_line) {\n        return this.checkStave().getYForTopText(text_line);\n    }\n    /** Return the voice that this note belongs in. */\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    /** Attach this note to `voice`. */\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the `TickContext` for this note. */\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    /** Set the `TickContext` for this note. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Accessor to duration. */\n    getDuration() {\n        return this.duration;\n    }\n    /** Accessor to isDotted. */\n    isDotted() {\n        return this.getModifiersByType(Category.Dot).length > 0;\n    }\n    /** Accessor to hasStem. */\n    hasStem() {\n        return false;\n    }\n    /** Accessor to note type. */\n    getNoteType() {\n        return this.noteType;\n    }\n    /** Get the beam. */\n    getBeam() {\n        return this.beam;\n    }\n    /** Check and get the beam. */\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    /** Check it has a beam. */\n    hasBeam() {\n        return this.beam != undefined;\n    }\n    /** Set the beam. */\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    /**\n     * Attach a modifier to this note.\n     * @param modifier the Modifier to add.\n     * @param index of the key to modify.\n     * @returns this\n     */\n    addModifier(modifier, index = 0) {\n        const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n        // Backwards compatibility with 3.0.9.\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            // eslint-disable-next-line\n            console.warn(signature + ' expected a number for `index`, but received a string.');\n        }\n        // Some versions of VexFlow had the two parameters reversed.\n        // Check here and throw an error if the argument types are not correct.\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        super.addModifier(modifier);\n        return this;\n    }\n    /** Get all modifiers of a specific type in `this.modifiers`. */\n    getModifiersByType(type) {\n        return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n    }\n    /** Get the coordinates for where modifiers begin. */\n    // eslint-disable-next-line\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    getRightParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n    }\n    getLeftParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getLeftDisplacedHeadPx() - this.x_shift : -this.x_shift;\n    }\n    getFirstDotPx() {\n        let px = this.getRightDisplacedHeadPx();\n        if (this.checkModifierContext().getMembers('Parenthesis').length !== 0)\n            px += Tables.currentMusicFont().lookupMetric('parenthesis.default.width');\n        return px;\n    }\n    /** Get the metrics for this note. */\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.getState().left_shift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.getState().right_shift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx - // subtract left modifiers\n            modRightPx - // subtract right modifiers\n            this.leftDisplacedHeadPx - // subtract left displaced head\n            this.rightDisplacedHeadPx; // subtract right displaced head\n        // NOTE: If you change this, remember to update MockTickable.getMetrics() in the tests/ directory.\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            // Modifier spacing.\n            modLeftPx,\n            modRightPx,\n            // Displaced note head on left or right.\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    /**\n     * Get the absolute `X` position of this note's tick context. This\n     * excludes x_shift, so you'll need to factor it in if you're\n     * looking for the post-formatted x-position.\n     */\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        // Position note to left edge of tick context.\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Tables.currentMusicFont().lookupMetric('stave.padding');\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    /** Get point for notes. */\n    static getPoint(size) {\n        // for sizes other than 'default', note is 2/3 of the default value\n        return size == 'default' ? Tables.NOTATION_FONT_SCALE : (Tables.NOTATION_FONT_SCALE / 5) * 3;\n    }\n    /** Get the direction of the stem. */\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the top and bottom `y` values of the stem. */\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the `x` coordinate to the right of the note. */\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const note_glyph_width = this.glyphProps.getWidth();\n        tieStartX += note_glyph_width / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    /** Get the `x` coordinate to the left of the note. */\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const note_glyph_width = this.glyphProps.getWidth();\n        tieEndX += note_glyph_width / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    // Get the pitches in the note\n    getKeys() {\n        return this.keys;\n    }\n    // Get the properties for all the keys in the note\n    getKeyProps() {\n        return this.keyProps;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    static get CATEGORY() {\n        return Category.StaveModifier;\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    constructor() {\n        super();\n        this.width = 0;\n        this.x = 0;\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /**\n     * Runs setYShift() for the Glyph object so that it matches the position of line for\n     * the Stave provided.  A `customShift` can also be given (measured in the same units\n     * as `setYShift` not in lines) and this will be added after all other positions are\n     * calculated from the Stave.\n     *\n     * Note that this routine only sets the yShift; it does not actually \"place\" (meaning\n     * draw) the Glyph on the Stave.  Call .draw() afterwards to do that.\n     */\n    placeGlyphOnLine(glyph, stave, line, customShift = 0) {\n        glyph.setYShift(stave.getYForLine(line !== null && line !== void 0 ? line : 0) - stave.getYForGlyphs() + customShift);\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Barline;\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    // Draw barlines\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('stavebarline', this.getAttribute('id'));\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                // If the barline is shifted over (in front of clef/time/key)\n                // Draw vertical bar at the beginning.\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n    drawVerticalBar(stave, x, double_bar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (double_bar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let x_shift = 3;\n        if (!begin) {\n            x_shift = -5;\n        }\n        staveCtx.fillRect(x + x_shift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dot_radius = 2;\n        // Shift dots left or right\n        if (begin) {\n            x_shift += 4;\n        }\n        else {\n            x_shift -= 4;\n        }\n        const dot_x = x + x_shift + dot_radius / 2;\n        // calculate the y offset based on number of stave lines\n        let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dot_y = topY + y_offset + dot_radius / 2;\n        // draw the top repeat dot\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        // draw the bottom repeat dot\n        dot_y += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author: Aaron (@AaronDavidNewman)\n//\n// This implements chord symbols above/below a chord.\n// Chord symbols are modifiers that can be attached to notes.\n// They can contain multiple 'blocks' which represent text or\n// glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.ts` for usage examples.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('Vex.Flow.ChordSymbol', args);\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolTypes;\n(function (SymbolTypes) {\n    SymbolTypes[SymbolTypes[\"GLYPH\"] = 1] = \"GLYPH\";\n    SymbolTypes[SymbolTypes[\"TEXT\"] = 2] = \"TEXT\";\n    SymbolTypes[SymbolTypes[\"LINE\"] = 3] = \"LINE\";\n})(SymbolTypes || (SymbolTypes = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\n/**\n * ChordSymbol is a modifier that creates a chord symbol above/below a chord.\n * As a modifier, it is attached to an existing note.\n */\nclass ChordSymbol extends Modifier {\n    static get CATEGORY() {\n        return Category.ChordSymbol;\n    }\n    static get superSubRatio() {\n        return ChordSymbol.metrics.global.superSubRatio;\n    }\n    /** Currently unused: Globally turn off text formatting, if the built-in formatting does not work for your font. */\n    static set NO_TEXT_FORMAT(val) {\n        ChordSymbol.noFormat = val;\n    }\n    static get NO_TEXT_FORMAT() {\n        return ChordSymbol.noFormat;\n    }\n    static getMetricForGlyph(glyphCode) {\n        if (ChordSymbol.metrics.glyphs[glyphCode]) {\n            return ChordSymbol.metrics.glyphs[glyphCode];\n        }\n        return undefined;\n    }\n    static get engravingFontResolution() {\n        return Tables.currentMusicFont().getResolution();\n    }\n    static get spacingBetweenBlocks() {\n        return ChordSymbol.metrics.global.spacing / ChordSymbol.engravingFontResolution;\n    }\n    static getWidthForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0.65; // probably should do something here.\n        }\n        return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n    }\n    static getYShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return metric.yOffset / ChordSymbol.engravingFontResolution;\n    }\n    static getXShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n    }\n    static get superscriptOffset() {\n        return ChordSymbol.metrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get subscriptOffset() {\n        return ChordSymbol.metrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get kerningOffset() {\n        return ChordSymbol.metrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get metrics() {\n        const chordSymbol = Tables.currentMusicFont().getMetrics().chordSymbol;\n        if (!chordSymbol)\n            throw new RuntimeError('BadMetrics', `chordSymbol missing`);\n        return chordSymbol;\n    }\n    static get lowerKerningText() {\n        // For example, see: `bravura_metrics.ts`\n        // BravuraMetrics.glyphs.chordSymbol.global.lowerKerningText, which returns an array of letters.\n        // ['D', 'F', 'P', 'T', 'V', 'Y']\n        return ChordSymbol.metrics.global.lowerKerningText;\n    }\n    static get upperKerningText() {\n        return ChordSymbol.metrics.global.upperKerningText;\n    }\n    static isSuperscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    static isSubscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /**\n     * Estimate the width of the whole chord symbol, based on the sum of the widths of the individual blocks.\n     * Estimate how many lines above/below the staff we need.\n     */\n    static format(symbols, state) {\n        var _a;\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let nonSuperWidth = 0;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (const symbol of symbols) {\n            const fontSize = Font.convertSizeToPointValue((_a = symbol.textFont) === null || _a === void 0 ? void 0 : _a.size);\n            const fontAdj = Font.scaleSize(fontSize, 0.05);\n            const glyphAdj = fontAdj * 2;\n            const note = symbol.checkAttachedNote();\n            let symbolWidth = 0;\n            let lineSpaces = 1;\n            let vAlign = false;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = ChordSymbol.isSuperscript(block);\n                const sub = ChordSymbol.isSubscript(block);\n                const superSubScale = sup || sub ? ChordSymbol.superSubRatio : 1;\n                const adj = block.symbolType === SymbolTypes.GLYPH ? glyphAdj * superSubScale : fontAdj * superSubScale;\n                // If there are super/subscripts, they extend beyond the line so\n                // assume they take up 2 lines\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                // If there is a symbol-specific offset, add it but consider font\n                // size since font and glyphs will be interspersed.\n                const fontSize = symbol.textFormatter.fontSizeInPixels;\n                const superSubFontSize = fontSize * superSubScale;\n                if (block.symbolType === SymbolTypes.GLYPH && block.glyph !== undefined) {\n                    block.width = ChordSymbol.getWidthForGlyph(block.glyph) * superSubFontSize;\n                    block.yShift += ChordSymbol.getYShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.xShift += ChordSymbol.getXShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.glyph.scale = block.glyph.scale * adj;\n                }\n                else if (block.symbolType === SymbolTypes.TEXT) {\n                    block.width = block.width * superSubFontSize;\n                    block.yShift += symbol.getYOffsetForText(block.text) * adj;\n                }\n                if (block.symbolType === SymbolTypes.GLYPH &&\n                    block.glyph !== undefined &&\n                    block.glyph.code === ChordSymbol.glyphs.over.code) {\n                    lineSpaces = 2;\n                }\n                block.width += ChordSymbol.spacingBetweenBlocks * fontSize * superSubScale;\n                // If a subscript immediately  follows a superscript block, try to\n                // overlay them.\n                if (sup && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (!ChordSymbol.isSuperscript(prev)) {\n                        nonSuperWidth = width;\n                    }\n                }\n                if (sub && nonSuperWidth > 0) {\n                    vAlign = true;\n                    // slide the symbol over so it lines up with superscript\n                    block.xShift = block.xShift + (nonSuperWidth - width);\n                    width = nonSuperWidth;\n                    nonSuperWidth = 0;\n                    // If we have vertically lined up, turn kerning off.\n                    symbol.setEnableKerning(false);\n                }\n                if (!sup && !sub) {\n                    nonSuperWidth = 0;\n                }\n                block.vAlign = vAlign;\n                width += block.width;\n                symbolWidth = width;\n            }\n            // make kerning adjustments after computing super/subscripts\n            symbol.updateKerningAdjustments();\n            symbol.updateOverBarAdjustments();\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.top_text_line);\n                state.top_text_line += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.text_line + 1);\n                state.text_line += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth() && isStemmableNote(note)) {\n                const glyphWidth = note.getGlyphProps().getWidth();\n                if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.LEFT) {\n                    maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                    leftWidth = Math.max(leftWidth, symbolWidth) + ChordSymbol.minPadding;\n                }\n                else if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.RIGHT) {\n                    maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                    rightWidth = Math.max(rightWidth, symbolWidth);\n                }\n                else {\n                    leftWidth = Math.max(leftWidth, symbolWidth / 2) + ChordSymbol.minPadding;\n                    rightWidth = Math.max(rightWidth, symbolWidth / 2);\n                    maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                    maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n                }\n            }\n            width = 0; // reset symbol width\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.useKerning = true;\n        this.reportWidth = true;\n        this.resetFont();\n    }\n    /**\n     * Default text font.\n     * Choose a font family that works well with the current music engraving font.\n     * @override `Element.TEXT_FONT`.\n     */\n    static get TEXT_FONT() {\n        let family = 'Roboto Slab, Times, serif';\n        if (Tables.currentMusicFont().getName() === 'Petaluma') {\n            // Fixes Issue #1180\n            family = 'PetalumaScript, Arial, sans-serif';\n        }\n        return {\n            family,\n            size: 12,\n            weight: FontWeight.NORMAL,\n            style: FontStyle.NORMAL,\n        };\n    }\n    /**\n     * The offset is specified in `em`. Scale this value by the font size in pixels.\n     */\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    updateOverBarAdjustments() {\n        const barIndex = this.symbolBlocks.findIndex(({ symbolType, glyph }) => symbolType === SymbolTypes.GLYPH && glyph !== undefined && glyph.code === 'csymDiagonalArrangementSlash');\n        if (barIndex < 0) {\n            return;\n        }\n        const bar = this.symbolBlocks[barIndex];\n        const xoff = bar.width / 4;\n        const yoff = 0.25 * this.textFormatter.fontSizeInPixels;\n        let symIndex = 0;\n        for (symIndex === 0; symIndex < barIndex; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift + xoff;\n            symbol.yShift = symbol.yShift - yoff;\n        }\n        for (symIndex = barIndex + 1; symIndex < this.symbolBlocks.length; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift - xoff;\n            symbol.yShift = symbol.yShift + yoff;\n        }\n    }\n    updateKerningAdjustments() {\n        let accum = 0;\n        for (let j = 0; j < this.symbolBlocks.length; ++j) {\n            const symbol = this.symbolBlocks[j];\n            accum += this.getKerningAdjustment(j);\n            symbol.xShift += accum;\n        }\n    }\n    /** Do some basic kerning so that letter chords like 'A' don't have the extensions hanging off to the right. */\n    getKerningAdjustment(j) {\n        if (!this.useKerning) {\n            return 0;\n        }\n        const currSymbol = this.symbolBlocks[j];\n        const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : undefined;\n        let adjustment = 0;\n        // Move things into the '/' over bar\n        if (currSymbol.symbolType === SymbolTypes.GLYPH &&\n            currSymbol.glyph !== undefined &&\n            currSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += currSymbol.glyph.metrics.x_shift;\n        }\n        if (prevSymbol !== undefined &&\n            prevSymbol.symbolType === SymbolTypes.GLYPH &&\n            prevSymbol.glyph !== undefined &&\n            prevSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += prevSymbol.glyph.metrics.x_shift;\n        }\n        // For superscripts that follow a letter without much top part, move it to the left slightly\n        let preKernUpper = false;\n        let preKernLower = false;\n        if (prevSymbol !== undefined && prevSymbol.symbolType === SymbolTypes.TEXT) {\n            preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n            preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n        }\n        const kerningOffsetPixels = ChordSymbol.kerningOffset * this.textFormatter.fontSizeInPixels;\n        // TODO: adjust kern for font size.\n        // Where should this constant live?\n        if (preKernUpper && currSymbol.symbolModifier === SymbolModifiers.SUPERSCRIPT) {\n            adjustment += kerningOffsetPixels;\n        }\n        if (preKernLower && currSymbol.symbolType === SymbolTypes.TEXT) {\n            if (currSymbol.text[0] >= 'a' && currSymbol.text[0] <= 'z') {\n                adjustment += kerningOffsetPixels / 2;\n            }\n            if (ChordSymbol.upperKerningText.some((xx) => xx === (prevSymbol === null || prevSymbol === void 0 ? void 0 : prevSymbol.text[prevSymbol.text.length - 1]))) {\n                adjustment += kerningOffsetPixels / 2;\n            }\n        }\n        return adjustment;\n    }\n    /**\n     * ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n     * Each block can have its own vertical orientation.\n     */\n    // eslint-disable-next-line\n    getSymbolBlock(params = {}) {\n        var _a, _b, _c;\n        const symbolType = (_a = params.symbolType) !== null && _a !== void 0 ? _a : SymbolTypes.TEXT;\n        const symbolBlock = {\n            text: (_b = params.text) !== null && _b !== void 0 ? _b : '',\n            symbolType,\n            symbolModifier: (_c = params.symbolModifier) !== null && _c !== void 0 ? _c : SymbolModifiers.NONE,\n            xShift: 0,\n            yShift: 0,\n            vAlign: false,\n            width: 0,\n        };\n        // Note: symbol widths are resolution and font-independent.\n        // We convert to pixel values when we know what the font is.\n        if (symbolType === SymbolTypes.GLYPH && typeof params.glyph === 'string') {\n            const glyphArgs = ChordSymbol.glyphs[params.glyph];\n            const glyphPoints = 20;\n            symbolBlock.glyph = new Glyph(glyphArgs.code, glyphPoints, { category: 'chordSymbol' });\n        }\n        else if (symbolType === SymbolTypes.TEXT) {\n            symbolBlock.width = this.textFormatter.getWidthForTextInEm(symbolBlock.text);\n        }\n        else if (symbolType === SymbolTypes.LINE) {\n            symbolBlock.width = params.width;\n        }\n        return symbolBlock;\n    }\n    /** Add a symbol to this chord, could be text, glyph or line. */\n    // eslint-disable-next-line\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    // ### Convenience functions for creating different types of chord symbol parts.\n    /** Add a text block. */\n    // eslint-disable-next-line\n    addText(text, parameters = {}) {\n        const symbolType = SymbolTypes.TEXT;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text, symbolType }));\n    }\n    /** Add a text block with superscript modifier. */\n    addTextSuperscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a text block with subscript modifier. */\n    addTextSubscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a glyph block with superscript modifier. */\n    addGlyphSuperscript(glyph) {\n        const symbolType = SymbolTypes.GLYPH;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ glyph, symbolType, symbolModifier });\n    }\n    /** Add a glyph block. */\n    // eslint-disable-next-line\n    addGlyph(glyph, params = {}) {\n        const symbolType = SymbolTypes.GLYPH;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { glyph, symbolType }));\n    }\n    /**\n     * Add a glyph for each character in 'text'. If the glyph is not available, use text from the font.\n     * e.g. `addGlyphOrText('(+5#11)')` will use text for the '5' and '11', and glyphs for everything else.\n     */\n    // eslint-disable-next-line\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            if (ChordSymbol.glyphs[char]) {\n                if (str.length > 0) {\n                    this.addText(str, params);\n                    str = '';\n                }\n                this.addGlyph(char, params);\n            }\n            else {\n                // Collect consecutive characters with no glyphs.\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    /** Add a line of the given width, used as a continuation of the previous symbol in analysis, or lyrics, etc. */\n    // eslint-disable-next-line\n    addLine(width, params = {}) {\n        const symbolType = SymbolTypes.LINE;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { symbolType, width }));\n    }\n    /**\n     * Set the chord symbol's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     *\n     * @override See: Element.\n     */\n    setFont(f, size, weight, style) {\n        super.setFont(f, size, weight, style);\n        this.textFormatter = TextFormatter.create(this.textFont);\n        return this;\n    }\n    setEnableKerning(val) {\n        this.useKerning = val;\n        return this;\n    }\n    /** Set vertical position of text (above or below stave). */\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    /** Set horizontal justification. */\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    getWidth() {\n        let width = 0;\n        this.symbolBlocks.forEach((symbol) => {\n            width += symbol.vAlign ? 0 : symbol.width;\n        });\n        return width;\n    }\n    getYOffsetForText(text) {\n        var _a;\n        let acc = 0;\n        let i = 0;\n        for (i = 0; i < text.length; ++i) {\n            const metrics = this.textFormatter.getGlyphMetrics(text[i]);\n            if (metrics) {\n                const yMax = (_a = metrics.y_max) !== null && _a !== void 0 ? _a : 0;\n                acc = yMax < acc ? yMax : acc;\n            }\n        }\n        const resolution = this.textFormatter.getResolution();\n        return i > 0 ? -1 * (acc / resolution) : 0;\n    }\n    /** Render text and glyphs above/below the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('chordsymbol', this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.textFont);\n        let y;\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            // HACK: We need to compensate for the text's height since its origin is bottom-right.\n            y = stave.getYForBottomText(this.text_line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stem_base = note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n                y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n            }\n        }\n        else {\n            // (this.vertical === VerticalJustify.TOP)\n            const topY = Math.min(...note.getYs());\n            y = Math.min(stave.getYForTopText(this.text_line), topY - 10);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            // HorizontalJustify.CENTER_STEM\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', this.textFormatter, x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            const isSuper = ChordSymbol.isSuperscript(symbol);\n            const isSub = ChordSymbol.isSubscript(symbol);\n            let curY = y;\n            L('shift was ', symbol.xShift, symbol.yShift);\n            L('curY pre sub ', curY);\n            if (isSuper) {\n                curY += this.superscriptOffset;\n            }\n            if (isSub) {\n                curY += this.subscriptOffset;\n            }\n            L('curY sup/sub ', curY);\n            if (symbol.symbolType === SymbolTypes.TEXT) {\n                if (isSuper || isSub) {\n                    ctx.save();\n                    if (this.textFont) {\n                        const { family, size, weight, style } = this.textFont;\n                        const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n                        ctx.setFont(family, smallerFontSize, weight, style);\n                    }\n                }\n                // TODO???\n                // We estimate the text width, fill it in with the empirical value so the formatting is even.\n                // const textDim = ctx.measureText(symbol.text);\n                // symbol.width = textDim.width;\n                L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                ctx.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                if (isSuper || isSub) {\n                    ctx.restore();\n                }\n            }\n            else if (symbol.symbolType === SymbolTypes.GLYPH && symbol.glyph) {\n                curY += symbol.yShift;\n                L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n                symbol.glyph.render(ctx, x + symbol.xShift, curY);\n            }\n            else if (symbol.symbolType === SymbolTypes.LINE) {\n                L('Rendering Line : ', symbol.width, x, curY);\n                ctx.beginPath();\n                ctx.setLineWidth(1); // ?\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + symbol.width, curY);\n                ctx.stroke();\n            }\n            x += symbol.width;\n            if (symbol.vAlign) {\n                x += symbol.xShift;\n            }\n        });\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\nChordSymbol.DEBUG = false;\n// Chord symbols can be positioned and justified relative to the note.\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\n// Glyph data\nChordSymbol.glyphs = {\n    diminished: {\n        code: 'csymDiminished',\n    },\n    dim: {\n        code: 'csymDiminished',\n    },\n    halfDiminished: {\n        code: 'csymHalfDiminished',\n    },\n    '+': {\n        code: 'csymAugmented',\n    },\n    augmented: {\n        code: 'csymAugmented',\n    },\n    majorSeventh: {\n        code: 'csymMajorSeventh',\n    },\n    minor: {\n        code: 'csymMinor',\n    },\n    '-': {\n        code: 'csymMinor',\n    },\n    '(': {\n        code: 'csymParensLeftTall',\n    },\n    leftParen: {\n        code: 'csymParensLeftTall',\n    },\n    ')': {\n        code: 'csymParensRightTall',\n    },\n    rightParen: {\n        code: 'csymParensRightTall',\n    },\n    leftBracket: {\n        code: 'csymBracketLeftTall',\n    },\n    rightBracket: {\n        code: 'csymBracketRightTall',\n    },\n    leftParenTall: {\n        code: 'csymParensLeftVeryTall',\n    },\n    rightParenTall: {\n        code: 'csymParensRightVeryTall',\n    },\n    '/': {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    over: {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    '#': {\n        code: 'accidentalSharp',\n    },\n    b: {\n        code: 'accidentalFlat',\n    },\n};\nChordSymbol.symbolTypes = SymbolTypes;\nChordSymbol.symbolModifiers = SymbolModifiers;\n/** Currently unused. */\nChordSymbol.noFormat = false;\nexport { ChordSymbol };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('Vex.Flow.BarNote', args);\n}\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.ts` for usage examples.\n */\nclass BarNote extends Note {\n    static get CATEGORY() {\n        return Category.BarNote;\n    }\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        // Tell the formatter that bar notes have no duration.\n        this.ignore_ticks = true;\n        this.setType(type);\n    }\n    /** Get the type of bar note.*/\n    getType() {\n        return this.type;\n    }\n    /** Set the type of bar note. */\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        // Set width to width of relevant `Barline`.\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    /** Overridden to ignore. */\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render note to stave. */\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        this.applyStyle(ctx);\n        const barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.draw(this.checkStave());\n        this.restoreStyle(ctx);\n        this.setRendered();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\nBarNote.DEBUG = false;\nexport { BarNote };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { TextFormatter } from './textformatter';\nimport { Category, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n/** Bend implements tablature bends. */\nclass Bend extends Modifier {\n    static get CATEGORY() {\n        return Category.Bend;\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    // Arrange bends in `ModifierContext`\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let last_width = 0;\n        // Format Bends\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (isTabNote(note)) {\n                const stringPos = note.leastString() - 1;\n                if (state.top_text_line < stringPos) {\n                    state.top_text_line = stringPos;\n                }\n            }\n            bend.setXShift(last_width);\n            last_width = bend.getWidth();\n            bend.setTextLine(state.top_text_line);\n        }\n        state.right_shift += last_width;\n        state.top_text_line += 1;\n        return true;\n    }\n    /**\n     * Example of a phrase:\n     * ```\n     *    [{\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"half\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"1 1/2\"\n     *     width: 8;\n     *   }]\n     * ```\n     * @param text text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n     * @param release if true, render a release. (DEPRECATED)\n     * @param phrase if set, ignore \"text\" and \"release\", and use the more sophisticated phrase specified\n     */\n    constructor(text, release = false, phrase) {\n        super();\n        this.text = text;\n        this.x_shift = 0;\n        this.release = release;\n        this.tap = '';\n        this.resetFont();\n        this.render_options = {\n            line_width: 1.5,\n            line_style: '#777777',\n            bend_width: 8,\n            release_width: 8,\n        };\n        if (phrase) {\n            this.phrase = phrase;\n        }\n        else {\n            // Backward compatibility\n            this.phrase = [{ type: Bend.UP, text: this.text }];\n            if (this.release)\n                this.phrase.push({ type: Bend.DOWN, text: '' });\n        }\n        this.updateWidth();\n    }\n    /** Set horizontal shift in pixels. */\n    setXShift(value) {\n        this.x_shift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    /** Get text provided in the constructor. */\n    getText() {\n        return this.text;\n    }\n    getTextHeight() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        return textFormatter.maxHeight;\n    }\n    /** Recalculate width. */\n    updateWidth() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        const measureText = (text) => {\n            return textFormatter.getWidthForTextInPx(text);\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additional_width = bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n                bend.width = Math.max(additional_width, measureText(bend.text)) + 3;\n                bend.draw_width = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.x_shift);\n        return this;\n    }\n    /** Draw the bend on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const x_shift = this.x_shift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        // this.text_line is relative to top string in the group.\n        const bend_height = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) + 3;\n        const annotation_y = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cp_x = x + width;\n            const cp_y = y;\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderRelease = (x, y, width, height) => {\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y); // tip of the arrow\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const render_x = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, render_x, annotation_y);\n            ctx.restore();\n        };\n        let last_bend = undefined;\n        let last_bend_draw_width = 0;\n        let last_drawn_width = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.draw_width)\n                bend.draw_width = 0;\n            if (i === 0)\n                bend.draw_width += x_shift;\n            last_drawn_width = bend.draw_width + last_bend_draw_width - (i === 1 ? x_shift : 0);\n            if (bend.type === Bend.UP) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderArrowHead(start.x, bend_height, +1);\n                }\n                renderBend(start.x, start.y, last_drawn_width, bend_height);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (last_bend && last_bend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (!last_bend) {\n                    last_drawn_width = bend.draw_width;\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n            }\n            renderText(start.x + last_drawn_width, bend.text);\n            last_bend = bend;\n            last_bend_draw_width = bend.draw_width;\n            last_bend.x = start.x;\n            start.x += last_drawn_width;\n        }\n        if (!last_bend || last_bend.x == undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        // Final arrowhead and text\n        if (last_bend.type === Bend.UP) {\n            renderArrowHead(last_bend.x + last_drawn_width, bend_height, +1);\n        }\n        else if (last_bend.type === Bend.DOWN) {\n            renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n        }\n    }\n}\n/** Default text font. */\nBend.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\nexport { Bend };\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\nimport { Modifier } from './modifier';\nimport { Category, isGraceNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Dot extends Modifier {\n    static get CATEGORY() {\n        return Category.Dot;\n    }\n    /** Returns the dots associated to a Note. */\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    /** Add a dot on the specified keys to the notes. */\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                    note.addModifier(dot, i);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) != undefined) {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                note.addModifier(dot, options === null || options === void 0 ? void 0 : options.index);\n            }\n            else {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                note.addModifier(dot, 0);\n            }\n        }\n    }\n    // Arrange dots inside a ModifierContext.\n    static format(dots, state) {\n        const right_shift = state.right_shift;\n        const dot_spacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dot_list = [];\n        const max_shift_map = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                // consider right displaced head with no previous modifier\n                shift = note.getFirstDotPx();\n            }\n            else if (isTabNote(note)) {\n                props = { line: 0.5 }; // Shim key props for dot placement\n                shift = right_shift;\n            }\n            else {\n                // note object is not StaveNote or TabNote.\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const note_id = note.getAttribute('id');\n            dot_list.push({ line: props.line, note, note_id, dot });\n            max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n        }\n        // Sort dots by line number.\n        dot_list.sort((a, b) => b.line - a.line);\n        let dot_shift = right_shift;\n        let x_width = 0;\n        let last_line = null;\n        let last_note = null;\n        let prev_dotted_space = null;\n        let half_shiftY = 0;\n        for (let i = 0; i < dot_list.length; ++i) {\n            const { dot, note, note_id, line } = dot_list[i];\n            // Reset the position of the dot every line.\n            if (line !== last_line || note !== last_note) {\n                dot_shift = max_shift_map[note_id];\n            }\n            if (!note.isRest() && line !== last_line) {\n                if (Math.abs(line % 1) === 0.5) {\n                    // note is on a space, so no dot shift\n                    half_shiftY = 0;\n                }\n                else {\n                    // note is on a line, so shift dot to space above the line\n                    half_shiftY = 0.5;\n                    if (last_note != null && !last_note.isRest() && last_line != null && last_line - line === 0.5) {\n                        // previous note on a space, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                    else if (line + half_shiftY === prev_dotted_space) {\n                        // previous space is dotted, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                }\n            }\n            // convert half_shiftY to a multiplier for dots.draw()\n            if (note.isRest()) {\n                dot.dot_shiftY += -half_shiftY;\n            }\n            else {\n                dot.dot_shiftY = -half_shiftY;\n            }\n            prev_dotted_space = line + half_shiftY;\n            dot.setXShift(dot_shift);\n            dot_shift += dot.getWidth() + dot_spacing; // spacing\n            x_width = dot_shift > x_width ? dot_shift : x_width;\n            last_line = line;\n            last_note = note;\n        }\n        // Update state.\n        state.right_shift += x_width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.radius = 2;\n        this.setWidth(5);\n        this.dot_shiftY = 0;\n    }\n    setNote(note) {\n        this.note = note;\n        if (isGraceNote(note)) {\n            this.radius *= 0.5;\n            this.setWidth(3);\n        }\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dot_shiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        // Set the starting y coordinate to the base of the stem for TabNotes.\n        if (isTabNote(note)) {\n            start.y = note.getStemExtents().baseY;\n        }\n        const x = start.x + this.x_shift + this.width - this.radius;\n        const y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nclass FretHandFinger extends Modifier {\n    static get CATEGORY() {\n        return Category.FretHandFinger;\n    }\n    // Arrange fingerings inside a ModifierContext.\n    static format(nums, state) {\n        const { left_shift, right_shift } = state;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const textFormatter = TextFormatter.create(num.textFont);\n            const textHeight = textFormatter.maxHeight;\n            if (num.position === ModifierPosition.ABOVE) {\n                state.top_text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (num.position === ModifierPosition.BELOW) {\n                state.text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (right_shift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prev_note = note;\n            }\n            nums_list.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort fingernumbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = left_shift + shiftL;\n                numShiftR = right_shift + shiftR;\n            }\n            const numWidth = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift + numShiftL);\n                num_shift = left_shift + numWidth; // spacing\n                xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                num_shift = shiftRight + numWidth; // spacing\n                xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.left_shift += xWidthL;\n        state.right_shift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(fingering, index));\n    }\n    constructor(finger) {\n        super();\n        this.finger = finger;\n        this.width = 7;\n        this.position = Modifier.Position.LEFT; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.resetFont();\n    }\n    setFretHandFinger(finger) {\n        this.finger = finger;\n        return this;\n    }\n    getFretHandFinger() {\n        return this.finger;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let dot_y = start.y + this.y_shift + this.y_offset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dot_x -= 4;\n                dot_y -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dot_x -= 2;\n                dot_y += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        ctx.save();\n        ctx.setFont(this.textFont);\n        ctx.fillText('' + this.finger, dot_x, dot_y);\n        ctx.restore();\n    }\n}\nFretHandFinger.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { FretHandFinger };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('Vex.Flow.NoteHead', args);\n}\n/**\n * Draw slashnote head manually. No glyph exists for this.\n * @param ctx the Canvas context\n * @param duration the duration of the note. ex: \"4\"\n * @param x the x coordinate to draw at\n * @param y the y coordinate to draw at\n * @param stem_direction the direction of the stem\n */\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n    const width = Tables.SLASH_NOTEHEAD_WIDTH;\n    ctx.save();\n    ctx.setLineWidth(Tables.STEM_WIDTH);\n    let fill = false;\n    if (Tables.durationToNumber(duration) > 2) {\n        fill = true;\n    }\n    if (!fill)\n        x -= (Tables.STEM_WIDTH / 2) * stem_direction;\n    ctx.beginPath();\n    ctx.moveTo(x, y + staveSpace);\n    ctx.lineTo(x, y + 1);\n    ctx.lineTo(x + width, y - staveSpace);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x, y + staveSpace);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    else {\n        ctx.stroke();\n    }\n    if (Tables.durationToFraction(duration).equals(0.5)) {\n        const breve_lines = [-3, -1, width + 1, width + 3];\n        for (let i = 0; i < breve_lines.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(x + breve_lines[i], y - 10);\n            ctx.lineTo(x + breve_lines[i], y + 11);\n            ctx.stroke();\n        }\n    }\n    ctx.restore();\n}\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nclass NoteHead extends Note {\n    static get CATEGORY() {\n        return Category.NoteHead;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.custom_glyph = false;\n        this.stem_up_x_offset = 0;\n        this.stem_down_x_offset = 0;\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.note_type)\n            this.noteType = noteStruct.note_type;\n        this.displaced = noteStruct.displaced || false;\n        this.stem_direction = noteStruct.stem_direction || Stem.UP;\n        this.line = noteStruct.line || 0;\n        // Get glyph code based on duration and note type. This could be\n        // regular notes, rests, or other custom codes.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // Swap out the glyph with ledger lines\n        if ((this.line > 5 || this.line < 0) && this.glyphProps.ledger_code_head) {\n            this.glyphProps.code_head = this.glyphProps.ledger_code_head;\n        }\n        this.glyph_code = this.glyphProps.code_head;\n        this.x_shift = noteStruct.x_shift || 0;\n        if (noteStruct.custom_glyph_code) {\n            this.custom_glyph = true;\n            this.glyph_code = noteStruct.custom_glyph_code;\n            this.stem_up_x_offset = noteStruct.stem_up_x_offset || 0;\n            this.stem_down_x_offset = noteStruct.stem_down_x_offset || 0;\n        }\n        this.setStyle(noteStruct.style);\n        this.slashed = noteStruct.slashed || false;\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE });\n        this.setWidth(this.custom_glyph &&\n            !this.glyph_code.startsWith('noteheadSlashed') &&\n            !this.glyph_code.startsWith('noteheadCircled')\n            ? Glyph.getWidth(this.glyph_code, this.render_options.glyph_font_scale)\n            : this.glyphProps.getWidth(this.render_options.glyph_font_scale));\n    }\n    /** Get the width of the notehead. */\n    getWidth() {\n        return this.width;\n    }\n    /** Determine if the notehead is displaced. */\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    /** Set the X coordinate. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Get the Y coordinate. */\n    getY() {\n        return this.y;\n    }\n    /** Set the Y coordinate. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Get the stave line the notehead is placed on. */\n    getLine() {\n        return this.line;\n    }\n    /** Set the stave line the notehead is placed on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Get the canvas `x` coordinate position of the notehead. */\n    getAbsoluteX() {\n        // If the note has not been preformatted, then get the static x value\n        // Otherwise, it's been formatted and we should use it's x value relative\n        // to its tick context\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        // For a more natural displaced notehead, we adjust the displacement amount\n        // by half the stem width in order to maintain a slight overlap with the stem\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        const musicFont = Tables.currentMusicFont();\n        const fontShift = musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n        const displacedFontShift = musicFont.lookupMetric('noteHead.displacedShiftX', 0) * this.stem_direction;\n        return (x +\n            fontShift +\n            (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0));\n    }\n    /** Get the `BoundingBox` for the `NoteHead`. */\n    getBoundingBox() {\n        const spacing = this.checkStave().getSpacingBetweenLines();\n        const half_spacing = spacing / 2;\n        const min_y = this.y - half_spacing;\n        return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n    }\n    /** Set notehead to a provided `stave`. */\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n        this.setWidth(width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the notehead. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let head_x = this.getAbsoluteX();\n        if (this.custom_glyph) {\n            // head_x += this.x_shift;\n            head_x +=\n                this.stem_direction === Stem.UP\n                    ? this.stem_up_x_offset +\n                        (this.glyphProps.stem ? this.glyphProps.getWidth(this.render_options.glyph_font_scale) - this.width : 0)\n                    : this.stem_down_x_offset;\n        }\n        const y = this.y;\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", head_x, y);\n        // Begin and end positions for head.\n        const stem_direction = this.stem_direction;\n        const glyph_font_scale = this.render_options.glyph_font_scale;\n        const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n        if (this.noteType === 's') {\n            const staveSpace = this.checkStave().getSpacingBetweenLines();\n            drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n        }\n        else {\n            Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n                category: `noteHead.${categorySuffix}`,\n            });\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\nNoteHead.DEBUG = false;\nexport { NoteHead };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StemmableNote extends Note {\n    static get CATEGORY() {\n        return Category.StemmableNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n    }\n    // Get and set the note's `Stem`\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        this.addChildElement(stem);\n        return this;\n    }\n    // Builds and sets a new stem\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag(category = 'flag') {\n        const { glyphProps } = this;\n        if (this.hasFlag()) {\n            const flagCode = this.getStemDirection() === Stem.DOWN ? glyphProps.code_flag_downstem : glyphProps.code_flag_upstem;\n            if (flagCode)\n                this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, { category });\n        }\n    }\n    // Get the custom glyph associated with the outer note head on the base of the stem.\n    getBaseCustomNoteHeadGlyphProps() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    // Get the full length of stem\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    // Get the number of beams for this duration\n    getBeamCount() {\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            return glyphProps.beam_count;\n        }\n        else {\n            return 0;\n        }\n    }\n    // Get the minimum length of stem\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        let length = frac.value() <= 1 ? 0 : 20;\n        // if note is flagged, cannot shorten beam\n        switch (this.duration) {\n            case '8':\n                if (this.beam == undefined)\n                    length = 35;\n                break;\n            case '16':\n                length = this.beam == undefined ? 35 : 25;\n                break;\n            case '32':\n                length = this.beam == undefined ? 45 : 35;\n                break;\n            case '64':\n                length = this.beam == undefined ? 50 : 40;\n                break;\n            case '128':\n                length = this.beam == undefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    // Get/set the direction of the stem\n    getStemDirection() {\n        if (!this.stem_direction)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem_direction;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stem_direction = direction;\n        // Reset and reformat everything. Flag has to be built before calling getStemExtension.\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n            // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n            // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n            const glyphProps = this.getBaseCustomNoteHeadGlyphProps() || this.getGlyphProps();\n            // Get the font-specific customizations for the note heads.\n            const offsets = Tables.currentMusicFont().lookupMetric(`stem.noteHead.${glyphProps.code_head}`, {\n                offsetYBaseStemUp: 0,\n                offsetYTopStemUp: 0,\n                offsetYBaseStemDown: 0,\n                offsetYTopStemDown: 0,\n            });\n            // Configure the stem to use these offsets.\n            this.stem.setOptions({\n                stem_up_y_offset: offsets.offsetYTopStemUp,\n                stem_down_y_offset: offsets.offsetYTopStemDown,\n                stem_up_y_base_offset: offsets.offsetYBaseStemUp,\n                stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n            });\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    // Get the `x` coordinate of the stem\n    getStemX() {\n        const x_begin = this.getAbsoluteX() + this.x_shift;\n        const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n        const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n        return stem_x;\n    }\n    // Get the `x` coordinate for the center of the glyph.\n    // Used for `TabNote` stems and stemlets over rests\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n    }\n    // Get the stem extension for the current duration\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        if (this.stem_extension_override != undefined) {\n            return this.stem_extension_override;\n        }\n        // Use stem_beam_extension with beams\n        if (this.beam) {\n            return glyphProps.stem_beam_extension;\n        }\n        if (glyphProps) {\n            return this.getStemDirection() === Stem.UP ? glyphProps.stem_up_extension : glyphProps.stem_down_extension;\n        }\n        return 0;\n    }\n    // Set the stem length to a specific. Will override the default length.\n    setStemLength(height) {\n        this.stem_extension_override = height - Stem.HEIGHT;\n        return this;\n    }\n    // Get the top and bottom `y` values of the stem.\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return Tables.getGlyphProps(this.duration).flag == true && !this.beam;\n    }\n    /** Post formats the note. */\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    /** Renders the stem onto the canvas. */\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).draw();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.\n//\n// See `tests/stavenote_tests.ts` for usage examples.\nimport { BoundingBox } from './boundingbox';\nimport { Modifier } from './modifier';\nimport { NoteHead } from './notehead';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\nfunction showDeprecationWarningForNoteHeads() {\n    // eslint-disable-next-line\n    console.warn('StaveNote.note_heads is deprecated. Use StaveNote.noteHeads instead.', 'This accessor will be removed in VexFlow 5.0.');\n}\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('Vex.Flow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nclass StaveNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.StaveNote;\n    }\n    /**\n     * @deprecated Use Stem.UP.\n     */\n    static get STEM_UP() {\n        return Stem.UP;\n    }\n    /**\n     * @deprecated Use Stem.DOWN.\n     */\n    static get STEM_DOWN() {\n        return Stem.DOWN;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /** Format notes inside a ModifierContext. */\n    static format(notes, state) {\n        var _a, _b;\n        if (!notes || notes.length < 2)\n            return false;\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            // Formatting uses sortedKeyProps to calculate line and minL.\n            const props = notes[i].sortedKeyProps;\n            const line = props[0].keyProps.line;\n            let minL = props[props.length - 1].keyProps.line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL = line + notes[i].glyphProps.line_above;\n                minL = line - notes[i].glyphProps.line_below;\n            }\n            else {\n                maxL =\n                    stemDirection === 1 ? props[props.length - 1].keyProps.line + stemMax : props[props.length - 1].keyProps.line;\n                minL = stemDirection === 1 ? props[0].keyProps.line : props[0].keyProps.line - stemMax;\n            }\n            notesList.push({\n                line: props[0].keyProps.line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection: stemDirection,\n                stemMax,\n                stemMin,\n                voice_shift: notes[i].getVoiceShiftWidth(),\n                is_displaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        let voices = 0;\n        let noteU = undefined;\n        let noteM = undefined;\n        let noteL = undefined;\n        const draw = [false, false, false];\n        for (let i = 0; i < notesList.length; i++) {\n            draw[i] = notesList[i].note.render_options.draw == false ? false : true;\n        }\n        if (draw[0] && draw[1] && draw[2]) {\n            // Three visible notes\n            voices = 3;\n            noteU = notesList[0];\n            noteM = notesList[1];\n            noteL = notesList[2];\n        }\n        else if (draw[0] && draw[1]) {\n            // Two visible notes, 0 & 1\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[1];\n        }\n        else if (draw[0] && draw[2]) {\n            // Two visible notes, 0 & 2\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[2];\n        }\n        else if (draw[1] && draw[2]) {\n            // Two visible notes, 1 & 2\n            voices = 2;\n            noteU = notesList[1];\n            noteL = notesList[2];\n        }\n        else {\n            // No shift required for less than 2 visible notes\n            return true;\n        }\n        // for two voice backward compatibility, ensure upper voice is stems up\n        // for three voices, the voices must be in order (upper, middle, lower)\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n        let xShift = 0;\n        // Test for two voice note intersection\n        if (voices === 2) {\n            const lineSpacing = noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n                noteL.note.render_options.draw = false;\n            }\n            else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    // shift rest up\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    // shift rest down\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    //Instead of shifting notes, remove the appropriate flag\n                    //If we are sharing a line, switch one notes stem direction.\n                    //If we are sharing a line and in the same voice, only then offset one note\n                    const lineDiff = Math.abs(noteU.line - noteL.line);\n                    if (noteU.note.hasStem() && noteL.note.hasStem()) {\n                        const noteUHead = Tables.codeNoteHead((_a = noteU.note.sortedKeyProps[0].keyProps.code) !== null && _a !== void 0 ? _a : 'N', noteU.note.duration);\n                        const noteLHead = Tables.codeNoteHead((_b = noteL.note.sortedKeyProps[noteL.note.sortedKeyProps.length - 1].keyProps.code) !== null && _b !== void 0 ? _b : 'N', noteL.note.duration);\n                        if (\n                        // If unison is not configured, shift\n                        !Tables.UNISON ||\n                            // If we have different noteheads, shift\n                            noteUHead !== noteLHead ||\n                            // If we have different dot values, shift\n                            noteU.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                                .length !==\n                                noteL.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                                    .length ||\n                            // If the notes are quite close but not on the same line, shift\n                            (lineDiff < 1 && lineDiff > 0) ||\n                            // If styles are different, shift\n                            JSON.stringify(noteU.note.getStyle()) !== JSON.stringify(noteL.note.getStyle())) {\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (noteU.note.voice !== noteL.note.voice) {\n                            //If we are not in the same voice\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                if (noteU.line != noteL.line) {\n                                    xShift = voiceXShift + 2;\n                                    noteU.note.setXShift(xShift);\n                                }\n                                else {\n                                    //same line, swap stem direction for one note\n                                    if (noteL.stemDirection === 1) {\n                                        noteL.stemDirection = -1;\n                                        noteL.note.setStemDirection(-1);\n                                    }\n                                }\n                            }\n                        } //Very close whole notes\n                    }\n                    else if (lineDiff < 1) {\n                        xShift = voiceXShift + 2;\n                        if (noteU.note.duration < noteL.note.duration) {\n                            // upper voice is shorter, so shift it right\n                            noteU.note.setXShift(xShift);\n                        }\n                        else {\n                            // shift lower voice right\n                            noteL.note.setXShift(xShift);\n                        }\n                    }\n                    else if (noteU.note.hasStem()) {\n                        noteU.stemDirection = -noteU.note.getStemDirection();\n                        noteU.note.setStemDirection(noteU.stemDirection);\n                    }\n                    else if (noteL.note.hasStem()) {\n                        noteL.stemDirection = -noteL.note.getStemDirection();\n                        noteL.note.setStemDirection(noteL.stemDirection);\n                    }\n                }\n            }\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        // For three voices, test if rests can be repositioned\n        //\n        // Special case 1 :: middle voice rest between two notes\n        //\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    // center middle voice rest between the upper and lower voices\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 2; // shift middle rest right\n                    noteM.note.setXShift(xShift);\n                    if (noteL.note.hasBeam() === false) {\n                        noteL.stemDirection = -1;\n                        noteL.note.setStemDirection(-1);\n                    }\n                    if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                        noteU.stemDirection = 1;\n                        noteU.note.setStemDirection(1);\n                    }\n                }\n                // format complete\n                state.right_shift += xShift;\n                return true;\n            }\n        }\n        // Special case 2 :: all voices are rests\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            // Hide upper voice rest\n            noteU.note.render_options.draw = false;\n            // Hide lower voice rest\n            noteL.note.render_options.draw = false;\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        // Test if any other rests can be repositioned\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            // shift upper voice rest up;\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            // shift lower voice rest down\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        // If middle voice intersects upper or lower voice\n        if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n            // shift middle note right\n            xShift = voiceXShift + 2;\n            noteM.note.setXShift(xShift);\n            if (noteL.note.hasBeam() === false) {\n                noteL.stemDirection = -1;\n                noteL.note.setStemDirection(-1);\n            }\n            if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                noteU.stemDirection = 1;\n                noteU.note.setStemDirection(1);\n            }\n        }\n        state.right_shift += xShift;\n        return true;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.minLine = 0;\n        this.maxLine = 0;\n        // Sorted variant of keyProps used internally\n        this.sortedKeyProps = [];\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octave_shift = (_b = noteStruct.octave_shift) !== null && _b !== void 0 ? _b : 0;\n        // Pull note rendering properties.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // if true, displace note to right\n        this.displaced = false;\n        this.dot_shiftY = 0;\n        // for displaced ledger lines\n        this.use_default_head_x = false;\n        // Drawing\n        this._noteHeads = [];\n        this.modifiers = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE, \n            // number of stroke px to the left and right of head\n            stroke_px: noteStruct.stroke_px || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        // Set the stem direction\n        if (noteStruct.auto_stem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stem_direction) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    reset() {\n        super.reset();\n        // Save prior noteHead styles & reapply them after making new noteheads.\n        const noteHeadStyles = this._noteHeads.map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        this._noteHeads.forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this.setStave(stave);\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        // Update stem extension if a beam is assigned.\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    // Builds a `Stem` for the note\n    buildStem() {\n        this.setStem(new Stem({ hide: !!this.isRest() }));\n        return this;\n    }\n    // Builds a `NoteHead` for each key in the note\n    buildNoteHeads() {\n        this._noteHeads = [];\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        // Draw notes from bottom to top.\n        // For down-stem notes, we draw from top to bottom.\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            // Building noteheads rely on sortedKeNotes in order to calculate the displacements\n            const noteProps = this.sortedKeyProps[i].keyProps;\n            const line = noteProps.line;\n            // Keep track of last line with a note head, so that consecutive heads\n            // are correctly displaced.\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.use_default_head_x = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                note_type: this.noteType,\n                displaced,\n                stem_direction: stemDirection,\n                custom_glyph_code: noteProps.code,\n                glyph_font_scale: this.render_options.glyph_font_scale,\n                x_shift: noteProps.shift_right,\n                stem_up_x_offset: noteProps.stem_up_x_offset,\n                stem_down_x_offset: noteProps.stem_down_x_offset,\n                line: noteProps.line,\n            });\n            this.addChildElement(notehead);\n            this._noteHeads[this.sortedKeyProps[i].index] = notehead;\n        }\n        return this._noteHeads;\n    }\n    // Automatically sets the stem direction based on the keys in the note\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        // Figure out optimal stem direction based on given notes\n        // minLine & maxLine rely on sortedKeyProps\n        this.minLine = this.sortedKeyProps[0].keyProps.line;\n        this.maxLine = this.sortedKeyProps[this.keyProps.length - 1].keyProps.line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    // Calculates and stores the properties for each key in the note\n    calculateKeyProps() {\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            // All rests use the same position on the line.\n            // if (this.glyph.rest) key = this.glyph.position;\n            if (this.glyphProps.rest)\n                this.glyphProps.position = key;\n            const options = { octave_shift: this.octave_shift || 0, duration: this.duration };\n            const props = Tables.keyProperties(key, this.clef, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            // Override line placement for default rests\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            // Calculate displacement of this note\n            const line = props.line;\n            if (lastLine == undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) === 0.5) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    // Have to mark the previous note as\n                    // displaced as well, for modifier placement\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        // Sort the notes from lowest line to highest line in sortedKeyProps\n        // Warn no longer required as keyProps remains unsorted\n        this.keyProps.forEach((keyProps, index) => {\n            this.sortedKeyProps.push({ keyProps, index });\n        });\n        this.sortedKeyProps.sort((a, b) => a.keyProps.line - b.keyProps.line);\n    }\n    // Get the `BoundingBox` for the entire note\n    getBoundingBox() {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const { width: w, modLeftPx, leftDisplacedHeadPx } = this.getMetrics();\n        const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n        let minY = 0;\n        let maxY = 0;\n        const halfLineSpacing = ((_b = (_a = this.getStave()) === null || _a === void 0 ? void 0 : _a.getSpacingBetweenLines()) !== null && _b !== void 0 ? _b : 0) / 2;\n        const lineSpacing = halfLineSpacing * 2;\n        if (this.isRest()) {\n            const y = this.ys[0];\n            const frac = Tables.durationToFraction(this.duration);\n            if (frac.equals(1) || frac.equals(2)) {\n                minY = y - halfLineSpacing;\n                maxY = y + halfLineSpacing;\n            }\n            else {\n                minY = y - this.glyphProps.line_above * lineSpacing;\n                maxY = y + this.glyphProps.line_below * lineSpacing;\n            }\n        }\n        else if (this.glyphProps.stem) {\n            const ys = this.getStemExtents();\n            ys.baseY += halfLineSpacing * this.getStemDirection();\n            minY = Math.min(ys.topY, ys.baseY);\n            maxY = Math.max(ys.topY, ys.baseY);\n        }\n        else {\n            minY = 0;\n            maxY = 0;\n            for (let i = 0; i < this.ys.length; ++i) {\n                const yy = this.ys[i];\n                if (i === 0) {\n                    minY = yy;\n                    maxY = yy;\n                }\n                else {\n                    minY = Math.min(yy, minY);\n                    maxY = Math.max(yy, maxY);\n                }\n            }\n            minY -= halfLineSpacing;\n            maxY += halfLineSpacing;\n        }\n        return new BoundingBox(x, minY, w, maxY - minY);\n    }\n    // Gets the line number of the bottom note in the chord.\n    // If `isTopNote` is `true` then get the top note's line number instead\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        // No precondition assumed for sortedness of keyProps array\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return this.glyphProps.rest;\n    }\n    // Determine if the current note is a chord\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    // Determine if the `StaveNote` has a stem\n    hasStem() {\n        return this.glyphProps.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            // We adjust the origin of the stem because we want the stem left-aligned\n            // with the notehead if stemmed-down, and right-aligned if stemmed-up\n            return super.getStemX() + (this.stem_direction ? Stem.WIDTH / (2 * -this.stem_direction) : 0);\n        }\n    }\n    // Get the `y` coordinate for text placed on the top/bottom of a\n    // note at a desired `text_line`\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n    }\n    // Sets the current note to the provided `stave`. This applies\n    // `y` values to the `NoteHeads`.\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = this._noteHeads.map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(y_top, y_bottom);\n        }\n        return this;\n    }\n    // Check if note is shifted to the right\n    isDisplaced() {\n        return this.displaced;\n    }\n    // Sets whether shift note to the right. `displaced` is a `boolean`\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    // Get the starting `x` coordinate for a `StaveTie`\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    // Get the ending `x` coordinate for a `StaveTie`\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    // Get the stave line on which to place a rest\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    // Get the default `x` and `y` coordinates for the provided `position`\n    // and key `index`\n    getModifierStartXY(position, index, options = {}) {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            // FIXME: Left modifier padding, move to font file\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            // FIXME: Right modifier padding, move to font file\n            x = this.getGlyphWidth() + this.x_shift + 2;\n            if (this.stem_direction === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += (_b = (_a = this === null || this === void 0 ? void 0 : this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().width) !== null && _b !== void 0 ? _b : 0;\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Sets the style of the complete StaveNote, including all keys\n    // and the stem.\n    setStyle(style) {\n        return super.setGroupStyle(style);\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        if (stem)\n            stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        var _a;\n        (_a = this.flag) === null || _a === void 0 ? void 0 : _a.setStyle(style);\n    }\n    getFlagStyle() {\n        var _a;\n        return (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    // Sets the notehead at `index` to the provided coloring `style`.\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    setKeyStyle(index, style) {\n        this._noteHeads[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    // Get the width of the note if it is displaced. Used for `Voice`\n    // formatting\n    getVoiceShiftWidth() {\n        // TODO: may need to accommodate for dot here.\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    // Calculates and sets the extra pixels to the left or right\n    // if the note is displaced.\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stem_direction === Stem.DOWN ? this.getGlyphWidth() : 0);\n        // For upstems with flags, the extra space is unnecessary, since it's taken\n        // up by the flag.\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stem_direction === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            // If there are no modifiers on this note, make sure there is adequate padding\n            // between the notes.\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        // For upward flagged notes, the width of the flag needs to be added\n        if (this.shouldDrawFlag() && this.stem_direction === Stem.UP) {\n            width += this.getGlyphWidth();\n            // TODO: Add flag width as a separate metric\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    /**\n     * @typedef {Object} noteHeadBounds\n     * @property {number} y_top the highest notehead bound\n     * @property {number} y_bottom the lowest notehead bound\n     * @property {number|Null} displaced_x the starting x for displaced noteheads\n     * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n     * @property {number} highest_line the highest notehead line in traditional music line\n     *  numbering (bottom line = 1, top line = 5)\n     * @property {number} lowest_line the lowest notehead line\n     * @property {number|false} highest_displaced_line the highest staff line number\n     *   for a displaced notehead\n     * @property {number|false} lowest_displaced_line\n     * @property {number} highest_non_displaced_line\n     * @property {number} lowest_non_displaced_line\n     */\n    /**\n     * Get the staff line and y value for the highest & lowest noteheads\n     * @returns {noteHeadBounds}\n     */\n    getNoteHeadBounds() {\n        // Top and bottom Y values for stem.\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        this._noteHeads.forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            y_top: yTop,\n            y_bottom: yBottom,\n            displaced_x: displacedX,\n            non_displaced_x: nonDisplacedX,\n            highest_line: highestLine,\n            lowest_line: lowestLine,\n            highest_displaced_line: highestDisplacedLine,\n            lowest_displaced_line: lowestDisplacedLine,\n            highest_non_displaced_line: highestNonDisplacedLine,\n            lowest_non_displaced_line: lowestNonDisplacedLine,\n        };\n    }\n    // Get the starting `x` coordinate for the noteheads\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.x_shift;\n    }\n    // Get the ending `x` coordinate for the noteheads\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return this._noteHeads.slice();\n    }\n    /** @deprecated use StaveNote.noteHeads instead. */\n    get note_heads() {\n        showDeprecationWarningForNoteHeads();\n        return this.noteHeads;\n    }\n    // Draw the ledger lines between the stave and the highest/lowest keys\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { glyphProps, render_options: { stroke_px }, } = this;\n        const ctx = this.checkContext();\n        const width = glyphProps.getWidth() + stroke_px * 2;\n        const doubleWidth = 2 * (glyphProps.getWidth() + stroke_px) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highest_line, lowest_line, highest_displaced_line, highest_non_displaced_line, lowest_displaced_line, lowest_non_displaced_line, displaced_x, non_displaced_x, } = this.getNoteHeadBounds();\n        // Early out if there are no ledger lines to draw.\n        if (highest_line < 6 && lowest_line > 0)\n            return;\n        const min_x = Math.min(displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0, non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = min_x - stroke_px;\n            else if (normal)\n                x = (non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0) - stroke_px;\n            else\n                x = (displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0) - stroke_px;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        this.applyStyle(ctx, style);\n        // Draw ledger lines below the staff:\n        for (let line = 6; line <= highest_line; ++line) {\n            const normal = non_displaced_x !== undefined && line <= highest_non_displaced_line;\n            const displaced = highest_displaced_line !== undefined && line <= highest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        // Draw ledger lines above the staff:\n        for (let line = 0; line >= lowest_line; --line) {\n            const normal = non_displaced_x !== undefined && line >= lowest_non_displaced_line;\n            const displaced = lowest_displaced_line !== undefined && line >= lowest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        this.restoreStyle(ctx, style);\n    }\n    // Draw all key modifiers\n    drawModifiers(noteheadParam) {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = this._noteHeads[index];\n            if (notehead == noteheadParam) {\n                const noteheadStyle = notehead.getStyle();\n                notehead.applyStyle(ctx, noteheadStyle);\n                modifier.setContext(ctx);\n                modifier.drawWithStyle();\n                notehead.restoreStyle(ctx, noteheadStyle);\n            }\n        }\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyphProps.flag == true;\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam;\n    }\n    // Draw the flag for the note\n    drawFlag() {\n        var _a, _b, _c, _d, _e;\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            // eslint-disable-next-line\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX();\n            // What's with the magic +/- 2\n            // ANSWER: a corner of the note stem pokes out beyond the tip of the flag.\n            // The extra +/- 2 pushes the flag glyph outward so it covers the stem entirely.\n            // Alternatively, we could shorten the stem.\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    y_top -\n                        noteStemHeight +\n                        2 -\n                        (this.glyphProps ? this.glyphProps.stem_down_extension : 0) * this.getStaveNoteScale() -\n                        ((_b = (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().y_shift) !== null && _b !== void 0 ? _b : 0) * (1 - this.getStaveNoteScale())\n                : // Up stems are above the note head and have flags on the right.\n                    y_bottom -\n                        noteStemHeight -\n                        2 +\n                        (this.glyphProps ? this.glyphProps.stem_up_extension : 0) * this.getStaveNoteScale() -\n                        ((_d = (_c = this.flag) === null || _c === void 0 ? void 0 : _c.getMetrics().y_shift) !== null && _d !== void 0 ? _d : 0) * (1 - this.getStaveNoteScale());\n            // Draw the Flag\n            (_e = this.flag) === null || _e === void 0 ? void 0 : _e.render(ctx, flagX, flagY);\n        }\n    }\n    // Draw the NoteHeads\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        this._noteHeads.forEach((notehead) => {\n            notehead.applyStyle(ctx);\n            ctx.openGroup('notehead', notehead.getAttribute('id'), { pointerBBox: true });\n            notehead.setContext(ctx).draw();\n            this.drawModifiers(notehead);\n            ctx.closeGroup();\n            notehead.restoreStyle(ctx);\n        });\n    }\n    drawStem(stemOptions) {\n        // GCR TODO: I can't find any context in which this is called with the stemStruct\n        // argument in the codebase or tests. Nor can I find a case where super.drawStem\n        // is called at all. Perhaps these should be removed?\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        // If we will render a flag, we shorten the stem so that the tip\n        // does not poke through the flag.\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        if (this.stem) {\n            this.stem.setContext(ctx).draw();\n        }\n    }\n    /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n    getStaveNoteScale() {\n        return 1.0;\n    }\n    /**\n     * Override stemmablenote stem extension to adjust for distance from middle line.\n     */\n    getStemExtension() {\n        const super_stem_extension = super.getStemExtension();\n        if (!this.glyphProps.stem) {\n            return super_stem_extension;\n        }\n        const stem_direction = this.getStemDirection();\n        if (stem_direction !== this.calculateOptimalStemDirection()) {\n            return super_stem_extension; // no adjustment for manually set stem direction.\n        }\n        let mid_line_distance;\n        const MIDDLE_LINE = 3;\n        if (stem_direction === Stem.UP) {\n            // Note that the use of maxLine here instead of minLine might\n            // seem counterintuitive, but in the case of (say) treble clef\n            // chord(F2, E4) stem up, we do not want to extend the stem because\n            // of F2, when a normal octave-length stem above E4 is fine.\n            //\n            // maxLine and minLine are set in calculateOptimalStemDirection() so\n            // will be known.\n            mid_line_distance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            mid_line_distance = this.minLine - MIDDLE_LINE;\n        }\n        // how many lines more than an octave is the relevant notehead?\n        const lines_over_octave_from_mid_line = mid_line_distance - 3.5;\n        if (lines_over_octave_from_mid_line <= 0) {\n            return super_stem_extension;\n        }\n        const stave = this.getStave();\n        let spacing_between_lines = 10;\n        if (stave != undefined) {\n            spacing_between_lines = stave.getSpacingBetweenLines();\n        }\n        return super_stem_extension + lines_over_octave_from_mid_line * spacing_between_lines;\n    }\n    // Draws all the `StaveNote` parts. This is the main drawing method.\n    draw() {\n        if (this.render_options.draw === false)\n            return;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        // Format note head x positions\n        this._noteHeads.forEach((notehead) => notehead.setX(xBegin));\n        if (this.stem) {\n            // Format stem x positions\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n        }\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        // Apply the overall style -- may be contradicted by local settings:\n        this.applyStyle();\n        ctx.openGroup('stavenote', this.getAttribute('id'));\n        this.drawLedgerLines();\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        ctx.closeGroup();\n        this.restoreStyle();\n        this.setRendered();\n    }\n}\nStaveNote.DEBUG = false;\nexport { StaveNote };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nclass StaveTie extends Element {\n    static get CATEGORY() {\n        return Category.StaveTie;\n    }\n    /**\n     * @param notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.render_options = {\n            cp1: 8,\n            cp2: 12,\n            text_shift_x: 0,\n            first_x_shift: 0,\n            last_x_shift: 0,\n            y_shift: 7,\n            tie_spacing: 0,\n        };\n        this.resetFont();\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    /**\n     * Set the notes to attach this tie to.\n     *\n     * @param {!Object} notes The notes to tie up.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices) {\n            notes.first_indices = [0];\n        }\n        if (!notes.last_indices) {\n            notes.last_indices = [0];\n        }\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indices.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.notes.first_note || !this.notes.last_note;\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.render_options.cp1;\n        let cp2 = this.render_options.cp2;\n        if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n            cp1 = 2;\n            cp2 = 8;\n        }\n        const first_x_shift = this.render_options.first_x_shift;\n        const last_x_shift = this.render_options.last_x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        // setNotes(...) verified that first_indices and last_indices are not undefined.\n        // As a result, we use the ! non-null assertion operator here.\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        // eslint-disable-next-line\n        const last_indices = this.notes.last_indices;\n        this.applyStyle();\n        ctx.openGroup('stavetie', this.getAttribute('id'));\n        for (let i = 0; i < first_indices.length; ++i) {\n            const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n            const first_y_px = params.first_ys[first_indices[i]] + y_shift;\n            const last_y_px = params.last_ys[last_indices[i]] + y_shift;\n            if (isNaN(first_y_px) || isNaN(last_y_px)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n            }\n            const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n            const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n            ctx.beginPath();\n            ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n            ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n            ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n            ctx.closePath();\n            ctx.fill();\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n    renderText(first_x_px, last_x_px) {\n        var _a, _b, _c;\n        if (!this.text)\n            return;\n        const ctx = this.checkContext();\n        let center_x = (first_x_px + last_x_px) / 2;\n        center_x -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.first_note) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.last_note) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n            ctx.restore();\n        }\n    }\n    /**\n     * Returns the TieNotes structure of the first and last note this tie connects.\n     */\n    getNotes() {\n        return this.notes;\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.notes.first_note;\n        const last_note = this.notes.last_note;\n        // Provide some default values so the compiler doesn't complain.\n        let first_x_px = 0;\n        let last_x_px = 0;\n        let first_ys = [0];\n        let last_ys = [0];\n        let stem_direction = 0;\n        if (first_note) {\n            first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n            stem_direction = first_note.getStemDirection();\n            first_ys = first_note.getYs();\n        }\n        else if (last_note) {\n            const stave = last_note.checkStave();\n            first_x_px = stave.getTieStartX();\n            first_ys = last_note.getYs();\n            this.notes.first_indices = this.notes.last_indices;\n        }\n        if (last_note) {\n            last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n            stem_direction = last_note.getStemDirection();\n            last_ys = last_note.getYs();\n        }\n        else if (first_note) {\n            const stave = first_note.checkStave();\n            last_x_px = stave.getTieEndX();\n            last_ys = first_note.getYs();\n            this.notes.last_indices = this.notes.first_indices;\n        }\n        if (this.direction) {\n            stem_direction = this.direction;\n        }\n        this.renderTie({\n            first_x_px,\n            last_x_px,\n            first_ys,\n            last_ys,\n            direction: stem_direction,\n        });\n        this.renderText(first_x_px, last_x_px);\n        return true;\n    }\n}\n/** Default text font. */\nStaveTie.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\nexport { StaveTie };\n","// / [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { StaveTie } from './stavetie';\nimport { Category } from './typeguard';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return Category.TabTie;\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    /**\n     * @param notes is a struct that has:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super(notes, text);\n        this.render_options.cp1 = 9;\n        this.render_options.cp2 = 11;\n        this.render_options.y_shift = 3;\n        this.direction = -1; // Tab tie's are always face up.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError, sumArray } from './util';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n    static get CATEGORY() {\n        return Category.Voice;\n    }\n    /**\n     * Modes allow the addition of ticks in three different ways:\n     * - STRICT: This is the default. Ticks must fill the voice.\n     * - SOFT: Ticks can be added without restrictions.\n     * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n     */\n    static get Mode() {\n        return VoiceMode;\n    }\n    constructor(time) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = {\n            softmaxFactor: Tables.SOFTMAX_FACTOR,\n        };\n        // Convert the `time` string into a VoiceTime object if necessary.\n        let voiceTime;\n        if (typeof time === 'string') {\n            // Time signature shortcut: \"4/4\", \"3/8\", etc.\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    num_beats: parseInt(match[1]),\n                    beat_value: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        // Default time signature is 4/4.\n        this.time = Object.assign({ num_beats: 4, beat_value: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        // Recalculate total ticks.\n        this.totalTicks = new Fraction(this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n        // until tickables are added, the smallestTickCount is the same as the stated totalTicks duration.\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    /** Get the total ticks in the voice. */\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    /** Get the total ticks used in the voice by all the tickables. */\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    /** Get the largest width of all the tickables. */\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    /** Get the tick count for the shortest tickable */\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    /** Get the tickables in the voice. */\n    getTickables() {\n        return this.tickables;\n    }\n    /** Get the voice mode (Voice.Mode.SOFT, STRICT, or FULL) */\n    getMode() {\n        return this.mode;\n    }\n    /**\n     * Set the voice mode.\n     * @param mode value from `VoiceMode` or Voice.Mode\n     */\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    /** Get the resolution multiplier for the voice. */\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    /** Get the actual tick resolution for the voice. */\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    /** Set the voice's stave. */\n    setStave(stave) {\n        this.stave = stave;\n        // Reset the bounding box so we can reformat.\n        this.boundingBox = undefined;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    /** Get the bounding box for the voice. */\n    getBoundingBox() {\n        if (!this.boundingBox) {\n            const stave = this.checkStave();\n            let boundingBox = undefined;\n            for (let i = 0; i < this.tickables.length; ++i) {\n                const tickable = this.tickables[i];\n                if (!tickable.getStave())\n                    tickable.setStave(stave);\n                const bb = tickable.getBoundingBox();\n                if (bb) {\n                    boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n                }\n            }\n            this.boundingBox = boundingBox;\n        }\n        return this.boundingBox;\n    }\n    /** Set the voice mode to strict or soft. */\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    /** Determine if the voice is complete according to the voice mode. */\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * We use softmax to layout the tickables proportional to the exponent of\n     * their duration. The softmax factor is used to determine the 'linearness' of\n     * the layout.\n     *\n     * The softmax of all the tickables in this voice should sum to 1.\n     */\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        this.expTicksUsed = 0; // reset\n        return this;\n    }\n    /**\n     * Calculate the sum of the exponents of all the ticks in this voice to use\n     * as the denominator of softmax.  (It is not the sum of the softmax(t) over all tickables)\n     *\n     * Note that the \"exp\" of \"expTicksUsed\" stands for \"expontential\" ticks used,\n     * not \"expected\" ticks used.\n     */\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = sumArray(this.tickables.map(exp));\n        return this.expTicksUsed;\n    }\n    /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    /** Add a tickable to the voice. */\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            // Update the total ticks for this line.\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0; // reset\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            // Track the smallest tickable for formatting.\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            // Expand total ticks using denominator from ticks used.\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        // Add the tickable to the line.\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    /** Add an array of tickables to the voice. */\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    /** Preformat the voice by applying the voice's stave to each note. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /**\n     * Render the voice onto the canvas `context` and an optional `stave`.\n     * If `stave` is omitted, it is expected that the notes have staves\n     * already set.\n     *\n     * This method also calculates the voice's boundingBox while drawing\n     * the notes. Note the similarities with this.getBoundingBox().\n     */\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        let boundingBox = undefined;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            // Set the stave if provided.\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            const bb = tickable.getBoundingBox();\n            if (bb) {\n                boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n            }\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n        this.boundingBox = boundingBox;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\nimport { Beam } from './beam';\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { Tables } from './tables';\nimport { TabTie } from './tabtie';\nimport { Category, isStaveNote } from './typeguard';\nimport { log } from './util';\nimport { Voice } from './voice';\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('Vex.Flow.GraceNoteGroup', args);\n}\n/** GraceNoteGroup is used to format and render grace notes. */\nclass GraceNoteGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.GraceNoteGroup;\n    }\n    /** Arranges groups inside a `ModifierContext`. */\n    static format(gracenote_groups, state) {\n        const group_spacing_stave = 4;\n        const group_spacing_tab = 0;\n        if (!gracenote_groups || gracenote_groups.length === 0)\n            return false;\n        const group_list = [];\n        let prev_note = null;\n        let shiftL = 0;\n        for (let i = 0; i < gracenote_groups.length; ++i) {\n            const gracenote_group = gracenote_groups[i];\n            const note = gracenote_group.getNote();\n            const is_stavenote = isStaveNote(note);\n            const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n            if (is_stavenote && note !== prev_note) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prev_note = note;\n            }\n            group_list.push({ shift: shiftL, gracenote_group, spacing });\n        }\n        // If first note left shift in case it is displaced\n        let group_shift = group_list[0].shift;\n        let formatWidth;\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            gracenote_group.preFormat();\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            group_shift = Math.max(formatWidth, group_shift);\n        }\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift) + StaveNote.minNoteheadPadding);\n        }\n        state.left_shift += group_shift;\n        return true;\n    }\n    //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n    constructor(grace_notes, show_slur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.grace_notes = grace_notes;\n        this.width = 0;\n        this.show_slur = show_slur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.render_options = {\n            slur_y_shift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.grace_notes);\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(grace_notes) {\n        grace_notes = grace_notes || this.grace_notes;\n        if (grace_notes.length > 1) {\n            const beam = new Beam(grace_notes);\n            beam.render_options.beam_width = 3;\n            beam.render_options.partial_beam_length = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width + StaveNote.minNoteheadPadding;\n    }\n    getGraceNotes() {\n        return this.grace_notes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n        // Draw grace notes.\n        this.grace_notes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n        // Draw beams.\n        this.beams.forEach((beam) => beam.setContext(ctx).draw());\n        if (this.show_slur) {\n            // Create and draw slur.\n            const is_stavenote = isStaveNote(note);\n            const TieClass = is_stavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                last_note: this.grace_notes[0],\n                first_note: note,\n                first_indices: [0],\n                last_indices: [0],\n            });\n            this.slur.render_options.cp2 = 12;\n            this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n            this.slur.setContext(ctx).draw();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\nexport { GraceNoteGroup };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { Voice } from './voice';\nexport class NoteSubGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.NoteSubGroup;\n    }\n    // Arrange groups inside a `ModifierContext`\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.left_shift += width;\n        return true;\n    }\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\nimport { Fraction } from './fraction';\nimport { RuntimeError } from './util';\n/**\n * TickContext formats abstract tickable objects, such as notes, chords, tabs, etc.\n */\nexport class TickContext {\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    constructor(options) {\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = options && options.tickID ? options.tickID : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined; // Biggest tickable\n        this.minTicks = undefined; // this can remian null if all tickables have ignore_ticks\n        this.minTickable = undefined;\n        this.padding = 1; // padding on each side (width += padding * 2)\n        this.x = 0;\n        this.xBase = 0; // base x position without xOffset\n        this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n        this.tickables = []; // Notes, tabs, chords, lyrics.\n        this.tickablesByVoice = {}; // Tickables indexed by voice number\n        // Formatting metrics\n        this.notePx = 0; // width of widest note in this context\n        this.glyphPx = 0; // width of glyph (note head)\n        this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n        this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n        this.modLeftPx = 0; // Left modifier pixels\n        this.modRightPx = 0; // Right modifier pixels\n        this.totalLeftPx = 0; // Total left pixels\n        this.totalRightPx = 0; // Total right pixels\n        this.tContexts = []; // Parent array of tick contexts\n        this.width = 0;\n        this.formatterMetrics = {\n            // The freedom of a tickcontext is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    } // use of xBase and xOffset is optional, avoids offset creep\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    /**\n     * Introduced on 2020-04-17 as getTickablesForVoice(voiceIndex).\n     *   https://github.com/0xfe/vexflow/blame/dc97b0cc5bb93171c0038638c34362dc958222ca/src/tickcontext.js#L63\n     * Renamed on 2021-08-05 to getTickableForVoice(voiceIndex). Method renamed to singular, since it returns one Tickable.\n     */\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    /** Gets widths context, note and left/right modifiers for formatting. */\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks == null) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex || 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            // Maintain max displaced head pixels from all tickables in the context\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            // Maintain the widest note for all tickables in the context\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            // Maintain the widest note head\n            this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth || 0);\n            // Total modifier shift\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            // Total shift\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            // Recalculate the tick context total width\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { Category, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('Vex.Flow.Ornament', args);\n}\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nclass Ornament extends Modifier {\n    /** Ornaments category string. */\n    static get CATEGORY() {\n        return Category.Ornament;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /** Arrange ornaments inside `ModifierContext` */\n    static format(ornaments, state) {\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0; // width is used by ornaments, which are always centered on the note head\n        let right_shift = state.right_shift; // jazz ornaments calculate r/l shift separately\n        let left_shift = state.left_shift;\n        let yOffset = 0;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n                ornament.x_shift += right_shift + 2;\n            }\n            if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n                ornament.x_shift -= left_shift + 2;\n            }\n            if (ornament.reportedWidth && ornament.x_shift < 0) {\n                left_shift += ornament.reportedWidth;\n            }\n            else if (ornament.reportedWidth && ornament.x_shift >= 0) {\n                right_shift += ornament.reportedWidth + Ornament.minPadding;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n            }\n            // articulations above/below the line can be stacked.\n            if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n                // Unfortunately we don't know the stem direction.  So we base it\n                // on the line number, but also allow it to be overridden.\n                const ornamentNote = defined(ornament.note, 'NoAttachedNote');\n                if (ornamentNote.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n                    state.top_text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset -= ornament.glyph.bbox.getH();\n                }\n                else {\n                    state.text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset += ornament.glyph.bbox.getH();\n                }\n            }\n            else {\n                if (ornament.getPosition() === Modifier.Position.ABOVE) {\n                    ornament.setTextLine(state.top_text_line);\n                    state.top_text_line += increment;\n                }\n                else {\n                    ornament.setTextLine(state.text_line);\n                    state.text_line += increment;\n                }\n            }\n        }\n        // Note: 'legit' ornaments don't consider other modifiers when calculating their\n        // X position, but jazz ornaments sometimes need to.\n        state.left_shift = left_shift + width / 2;\n        state.right_shift = right_shift + width / 2;\n        return true;\n    }\n    /**\n     * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n     * these are generally on the top of the staff.\n     */\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    /**\n     * ornamentAttack indicates something that happens in the attach, placed before the note and\n     * any accidentals\n     */\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    /**\n     * The ornament is aligned based on the note head, but without regard to whether the\n     * stem goes up or down.\n     */\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n    }\n    /**\n     * An ornament that happens on the release of the note, generally placed after the\n     * note and overlapping the next beat/measure..\n     */\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    /** ornamentArticulation goes above/below the note based on space availablity */\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    /**\n     * Legacy ornaments have hard-coded metrics.  If additional ornament types are\n     * added, get their metrics here.\n     */\n    getMetrics() {\n        const ornamentMetrics = Tables.currentMusicFont().getMetrics().ornament;\n        if (!ornamentMetrics)\n            throw new RuntimeError('BadMetrics', `ornament missing`);\n        return ornamentMetrics[this.ornament.code];\n    }\n    /**\n     * Create a new ornament of type `type`, which is an entry in\n     * `Vex.Flow.ornamentCodes` in `tables.ts`.\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.delayed = false;\n        this.render_options = {\n            font_scale: Tables.NOTATION_FONT_SCALE,\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        this.ornament = Tables.ornamentCodes(this.type);\n        // new ornaments have their origin at the origin, and have more specific\n        // metrics.  Legacy ornaments do some\n        // x scaling, and have hard-coded metrics\n        const metrics = this.getMetrics();\n        // some jazz ornaments are above or below depending on stem direction.\n        this.adjustForStemDirection = false;\n        // some jazz ornaments like falls are supposed to overlap with future bars\n        // and so we report a different width than they actually take up.\n        this.reportedWidth = metrics && metrics.reportedWidth ? metrics.reportedWidth : 0;\n        this.stemUpYOffset = metrics && metrics.stemUpYOffset ? metrics.stemUpYOffset : 0;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        if (!this.ornament) {\n            throw new RuntimeError('ArgumentError', `Ornament not found: '${this.type}'`);\n        }\n        this.x_shift = metrics ? metrics.xOffset : 0;\n        this.y_shift = metrics ? metrics.yOffset : 0;\n        this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, {\n            category: `ornament.${this.ornament.code}`,\n        });\n        // Is this a jazz ornament that goes between this note and the next note.\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n        // happen if I don't set it.\n        if (!metrics) {\n            this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n        }\n    }\n    /** Set whether the ornament is to be delayed. */\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    /** Set the upper accidental for the ornament. */\n    setUpperAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalUpper = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalUpper.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Set the lower accidental for the ornament. */\n    setLowerAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalLower = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalLower.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Render ornament in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDir = note.getStemDirection();\n        const stave = note.checkStave();\n        this.applyStyle();\n        ctx.openGroup('ornament', this.getAttribute('id'));\n        // Get stem extents\n        const stemExtents = note.checkStem().getExtents();\n        let y = stemDir === Stem.DOWN ? stemExtents.baseY : stemExtents.topY;\n        // TabNotes don't have stems attached to them. Tab stems are rendered outside the stave.\n        if (isTabNote(note)) {\n            if (note.hasStem()) {\n                if (stemDir === Stem.DOWN) {\n                    y = stave.getYForTopText(this.text_line);\n                }\n            }\n            else {\n                // Without a stem\n                y = stave.getYForTopText(this.text_line);\n            }\n        }\n        const isPlacedOnNoteheadSide = stemDir === Stem.DOWN;\n        const spacing = stave.getSpacingBetweenLines();\n        let lineSpacing = 1;\n        // Beamed stems are longer than quarter note stems, adjust accordingly\n        if (!isPlacedOnNoteheadSide && note.hasBeam()) {\n            lineSpacing += 0.5;\n        }\n        const totalSpacing = spacing * (this.text_line + lineSpacing);\n        const glyphYBetweenLines = y - totalSpacing;\n        // Get initial coordinates for the modifier position\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        // If the ornament is aligned with the note head, don't consider the stave y\n        // but use the 'natural' modifier y\n        let glyphY = this.ornamentAlignWithNoteHead\n            ? start.y\n            : Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n        glyphY += this.y_shift;\n        // Ajdust x position if ornament is delayed\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = glyphX - (stave.getX() - 10);\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                delayXShift += this.glyph.getMetrics().width / 2;\n                const nextContext = TickContext.getNextContext(note.getTickContext());\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - startX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.render(ctx, glyphX, glyphY);\n            glyphY -= this.accidentalLower.getMetrics().height;\n            glyphY -= this.render_options.accidentalLowerPadding;\n        }\n        if (this.stemUpYOffset && note.hasStem() && note.getStemDirection() === 1) {\n            glyphY += this.stemUpYOffset;\n        }\n        if (note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            glyphY = note.checkStave().getBoundingBox().getY() + 40;\n        }\n        this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n        if (this.accidentalUpper) {\n            glyphY -= this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding;\n            this.accidentalUpper.render(ctx, glyphX, glyphY);\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\nOrnament.DEBUG = false;\nexport { Ornament };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Rodrigo Vilar\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Parenthesis implements parenthesis modifiers for notes. */\nexport class Parenthesis extends Modifier {\n    static get CATEGORY() {\n        return Category.Parenthesis;\n    }\n    /** Add parentheses to the notes. */\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    /** Arrange parentheses inside a ModifierContext. */\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                x_widthR = x_widthR > shift + parenthesis.width ? x_widthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index);\n                x_widthL = x_widthL > shift + parenthesis.width ? x_widthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    /**\n     * Constructor\n     *\n     * @param position Modifier.Position.LEFT (default) or Modifier.Position.RIGHT\n     */\n    constructor(position) {\n        var _a;\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        this.point = (_a = Tables.currentMusicFont().lookupMetric('parenthesis.default.point')) !== null && _a !== void 0 ? _a : Note.getPoint('default');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n    }\n    /** Set the associated note. */\n    setNote(note) {\n        var _a, _b;\n        this.note = note;\n        this.point = (_a = Tables.currentMusicFont().lookupMetric('parenthesis.default.point')) !== null && _a !== void 0 ? _a : Note.getPoint('default');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n        if (isGraceNote(note)) {\n            this.point = (_b = Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.point')) !== null && _b !== void 0 ? _b : Note.getPoint('gracenote');\n            this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.width'));\n        }\n        return this;\n    }\n    /** Render the parenthesis. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        const x = start.x + this.x_shift;\n        const y = start.y + this.y_shift;\n        if (this.position == Modifier.Position.RIGHT) {\n            Glyph.renderGlyph(ctx, x + 1, y, this.point, 'noteheadParenthesisRight', {\n                category: `noteHead.standard.noteheadParenthesisRight`,\n            });\n        }\n        else if (this.position == Modifier.Position.LEFT) {\n            Glyph.renderGlyph(ctx, x - 2, y, this.point, 'noteheadParenthesisLeft', {\n                category: `noteHead.standard.noteheadParenthesisLeft`,\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n//\n// Utilities for working with Web APIs.\n// See: https://developer.mozilla.org/en-US/docs/Web/API\nimport { globalObject } from './util';\n// eslint-disable-next-line\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLCanvasElement class,\n    (typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        // OR it's pretending to be a <canvas> element. Good enough!\n        // Do not rely on .tagName, because node-canvas doesn't provide a tagName.\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\n// eslint-disable-next-line\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLDivElement class.\n    (typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        // OR it's pretending to be a <div>. See: svgcontext.ts.\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { RenderContext } from './rendercontext';\nimport { globalObject, warn } from './util';\nimport { isHTMLCanvas } from './web';\n/**\n * A rendering context for the Canvas backend. This class serves as a proxy for the\n * underlying CanvasRenderingContext2D object, part of the browser's API.\n */\nexport class CanvasContext extends RenderContext {\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n    }\n    /**\n     * Ensure that width and height do not exceed the browser limit.\n     * @returns array of [width, height] clamped to the browser limit.\n     */\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    constructor(context) {\n        super();\n        /** Height of one line of text (in pixels). */\n        this.textHeight = 0;\n        this.context2D = context;\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    /**\n     * Set all pixels to transparent black rgba(0,0,0,0).\n     */\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // eslint-disable-next-line\n    openGroup(cls, id, attrs) {\n        // Containers not implemented.\n    }\n    closeGroup() {\n        // Containers not implemented.\n    }\n    // eslint-disable-next-line\n    add(child) {\n        // Containers not implemented.\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    /** CanvasContext ignores `setBackgroundFillStyle()`. */\n    // eslint-disable-next-line\n    setBackgroundFillStyle(style) {\n        // DO NOTHING\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        // CanvasRenderingContext2D does not scale the shadow blur by the current\n        // transform, so we have to do it manually. We assume uniform scaling\n        // (though allow for rotation) because the blur can only be scaled\n        // uniformly anyway.\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height, devicePixelRatio) {\n        var _a;\n        const canvas = this.context2D.canvas;\n        const dpr = (_a = devicePixelRatio !== null && devicePixelRatio !== void 0 ? devicePixelRatio : globalObject().devicePixelRatio) !== null && _a !== void 0 ? _a : 1;\n        // Scale the canvas size by the device pixel ratio clamping to the maximum supported size.\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * dpr, height * dpr);\n        // Divide back down by the pixel ratio and convert to integers.\n        width = (width / dpr) | 0;\n        height = (height / dpr) | 0;\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        // The canvas could be an instance of either HTMLCanvasElement or an OffscreenCanvas.\n        // Only HTMLCanvasElement has a style attribute.\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(dpr, dpr);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    /**\n     * Set the pixels in a rectangular area to transparent black rgba(0,0,0,0).\n     */\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        // Return x, y, width & height in the same manner as svg getBBox\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Gregory Ristow (2015)\nimport { Font, FontStyle, FontWeight } from './font';\nimport { RenderContext } from './rendercontext';\nimport { Tables } from './tables';\nimport { normalizeAngle, prefix, RuntimeError } from './util';\n/** For a particular element type (e.g., rect), we will not apply certain presentation attributes. */\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\nclass MeasureTextCache {\n    constructor() {\n        // The cache is keyed first by the text string, then by the font attributes\n        // joined together.\n        this.cache = {};\n    }\n    lookup(text, svg, attributes) {\n        let entries = this.cache[text];\n        if (entries === undefined) {\n            entries = {};\n            this.cache[text] = entries;\n        }\n        const family = attributes['font-family'];\n        const size = attributes['font-size'];\n        const weight = attributes['font-weight'];\n        const style = attributes['font-style'];\n        const key = `${family}%${size}%${weight}%${style}`;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = this.measureImpl(text, svg, attributes);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n    measureImpl(text, svg, attributes) {\n        let txt = this.txt;\n        if (!txt) {\n            // Create the SVG text element that will be used to measure text in the event\n            // of a cache miss.\n            txt = document.createElementNS(SVG_NS, 'text');\n            this.txt = txt;\n        }\n        txt.textContent = text;\n        if (attributes['font-family'])\n            txt.setAttributeNS(null, 'font-family', attributes['font-family']);\n        if (attributes['font-size'])\n            txt.setAttributeNS(null, 'font-size', `${attributes['font-size']}`);\n        if (attributes['font-style'])\n            txt.setAttributeNS(null, 'font-style', attributes['font-style']);\n        if (attributes['font-weight'])\n            txt.setAttributeNS(null, 'font-weight', `${attributes['font-weight']}`);\n        svg.appendChild(txt);\n        const bbox = txt.getBBox();\n        svg.removeChild(txt);\n        return { x: bbox.x, y: bbox.y, width: bbox.width, height: bbox.height };\n    }\n}\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nclass SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        this.width = 0;\n        this.height = 0;\n        this.precision = 1;\n        this.backgroundFillStyle = 'white';\n        /** Formatted as CSS font shorthand (e.g., 'italic bold 12pt Arial') */\n        this.fontCSSString = '';\n        this.element = element;\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n        // Create a SVG element and add it to the container element.\n        const svg = this.create('svg');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        this.lineWidth = 1.0;\n        const defaultFontAttributes = {\n            'font-family': Font.SANS_SERIF,\n            'font-size': Font.SIZE + 'pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scaleX: 1, scaleY: 1 }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 0.3, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black' }, defaultFontAttributes);\n        this.groupAttributes = [];\n        this.applyAttributes(svg, this.attributes);\n        this.groupAttributes.push(Object.assign({}, this.attributes));\n        this.shadow_attributes = {\n            width: 0,\n            color: 'black',\n        };\n        this.state_stack = [];\n    }\n    round(n) {\n        return Math.round(n * this.precision) / this.precision;\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    // Allow grouping elements in containers for interactivity.\n    openGroup(cls, id, attrs) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        if (attrs && attrs.pointerBBox) {\n            group.setAttribute('pointer-events', 'bounding-box');\n        }\n        this.applyAttributes(group, this.attributes);\n        this.groupAttributes.push(Object.assign(Object.assign({}, this.groupAttributes[this.groupAttributes.length - 1]), this.attributes));\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.groupAttributes.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    /**\n     * Used to set the fill color for `clearRect()`. This allows us to simulate\n     * cutting a \"hole\" into the SVG drawing.\n     */\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.shadow_attributes.color = color;\n        return this;\n    }\n    /**\n     * @param blur A non-negative float specifying the level of shadow blur, where 0\n     *             represents no blur and larger numbers represent increasingly more blur.\n     * @returns this\n     */\n    setShadowBlur(blur) {\n        this.shadow_attributes.width = blur;\n        return this;\n    }\n    /**\n     * @param width\n     * @returns this\n     */\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n        return this;\n    }\n    /**\n     * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n     * @returns this\n     *\n     * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n     */\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    /**\n     * @param capType\n     * @returns this\n     */\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    // ### Sizing & Scaling Methods:\n    // TODO (GCR): See note at scale() -- separate our internal\n    // conception of pixel-based width/height from the style.width\n    // and style.height properties eventually to allow users to\n    // apply responsive sizing attributes to the SVG.\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scaleX, this.state.scaleY);\n        return this;\n    }\n    scale(x, y) {\n        // uses viewBox to scale\n        // TODO (GCR): we may at some point want to distinguish the\n        // style.width / style.height properties that are applied to\n        // the SVG object from our internal conception of the SVG\n        // width/height.  This would allow us to create automatically\n        // scaling SVG's that filled their containers, for instance.\n        //\n        // As this isn't implemented in Canvas contexts,\n        // I've left as is for now, but in using the viewBox to\n        // handle internal scaling, am trying to make it possible\n        // for us to eventually move in that direction.\n        this.state.scaleX = this.state.scaleX ? this.state.scaleX * x : x;\n        this.state.scaleY = this.state.scaleY ? this.state.scaleY * y : y;\n        const visibleWidth = this.width / this.state.scaleX;\n        const visibleHeight = this.height / this.state.scaleY;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    /**\n     * 1 arg: string in the \"x y w h\" format\n     * 4 args: x:number, y:number, w:number, h:number\n     */\n    setViewBox(viewBox_or_minX, minY, width, height) {\n        if (typeof viewBox_or_minX === 'string') {\n            this.svg.setAttribute('viewBox', viewBox_or_minX);\n        }\n        else {\n            const viewBoxString = viewBox_or_minX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    // ### Drawing helper methods:\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            if (attributes[attrName] &&\n                (this.groupAttributes.length == 0 ||\n                    attributes[attrName] != this.groupAttributes[this.groupAttributes.length - 1][attrName]))\n                element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    // ### Shape & Path Methods:\n    clear() {\n        // Clear the SVG by removing all inner children.\n        // (This approach is usually slightly more efficient\n        // than removing the old SVG & adding a new one to\n        // the container element, since it does not cause the\n        // container to resize twice.  Also, the resize\n        // triggered by removing the entire SVG can trigger\n        // a touchcancel event when the element resizes away\n        // from a touch point.)\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n        // Replace the viewbox attribute we just removed.\n        this.scale(this.state.scaleX, this.state.scaleY);\n    }\n    // ## Rectangles:\n    rect(x, y, width, height, attributes) {\n        // Avoid invalid negative height attributes by flipping the rectangle on its head:\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.lineWidth, stroke: 'black' };\n        x = this.round(x);\n        y = this.round(y);\n        width = this.round(width);\n        height = this.round(height);\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill, stroke: 'none' };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        // Currently this fills a rect with the backgroundFillStyle, rather\n        // than \"cut a hole\" into the existing shapes.\n        //\n        // Since tabNote seems to be the only module that makes use of this\n        // it may be worth creating a separate tabStave that would\n        // draw lines around locations of tablature fingering.\n        this.rect(x, y, width, height, { fill: this.backgroundFillStyle, stroke: 'none' });\n        return this;\n    }\n    // ## Paths:\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        x2 = this.round(x2);\n        y2 = this.round(y2);\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        let x0 = x + radius * Math.cos(startAngle);\n        let y0 = y + radius * Math.sin(startAngle);\n        x0 = this.round(x0);\n        y0 = this.round(y0);\n        // svg behavior different from canvas.  Don't normalize angles if\n        // we are drawing a circle because they both normalize to 0\n        const tmpStartTest = normalizeAngle(startAngle);\n        const tmpEndTest = normalizeAngle(endAngle);\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI) ||\n            tmpStartTest === tmpEndTest) {\n            let x1 = x + radius * Math.cos(startAngle + Math.PI);\n            let y1 = y + radius * Math.sin(startAngle + Math.PI);\n            // There's no way to specify a completely circular arc in SVG so we have to\n            // use two semi-circular arcs.\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            let x1 = x + radius * Math.cos(endAngle);\n            let y1 = y + radius * Math.sin(endAngle);\n            startAngle = tmpStartTest;\n            endAngle = tmpEndTest;\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    getShadowStyle() {\n        const sa = this.shadow_attributes;\n        // A CSS drop-shadow filter blur looks different than a canvas shadowBlur\n        // of the same radius, so we scale the drop-shadow radius here to make it\n        // look close to the canvas shadow.\n        return `filter: drop-shadow(0 0 ${sa.width / 1.5}px ${sa.color})`;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', 'stroke-width': this.lineWidth, d: this.path });\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    // ## Text Methods:\n    measureText(text) {\n        return SVGContext.measureTextCache.lookup(text, this.svg, this.attributes);\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        x = this.round(x);\n        y = this.round(y);\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    // TODO: State should be deep-copied.\n    save() {\n        this.state_stack.push({\n            state: {\n                'font-family': this.state['font-family'],\n                'font-weight': this.state['font-weight'],\n                'font-style': this.state['font-style'],\n                'font-size': this.state['font-size'],\n                scale: this.state.scale,\n            },\n            attributes: {\n                'font-family': this.attributes['font-family'],\n                'font-weight': this.attributes['font-weight'],\n                'font-style': this.attributes['font-style'],\n                'font-size': this.attributes['font-size'],\n                fill: this.attributes.fill,\n                stroke: this.attributes.stroke,\n                'stroke-width': this.attributes['stroke-width'],\n                'stroke-dasharray': this.attributes['stroke-dasharray'],\n            },\n            shadow_attributes: {\n                width: this.shadow_attributes.width,\n                color: this.shadow_attributes.color,\n            },\n            lineWidth: this.lineWidth,\n        });\n        return this;\n    }\n    // TODO: State should be deep-restored.\n    restore() {\n        const savedState = this.state_stack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state['font-family'] = state.state['font-family'];\n            this.state['font-weight'] = state.state['font-weight'];\n            this.state['font-style'] = state.state['font-style'];\n            this.state['font-size'] = state.state['font-size'];\n            this.state.scale = state.state.scale;\n            this.attributes['font-family'] = state.attributes['font-family'];\n            this.attributes['font-weight'] = state.attributes['font-weight'];\n            this.attributes['font-style'] = state.attributes['font-style'];\n            this.attributes['font-size'] = state.attributes['font-size'];\n            this.attributes.fill = state.attributes.fill;\n            this.attributes.stroke = state.attributes.stroke;\n            this.attributes['stroke-width'] = state.attributes['stroke-width'];\n            this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n            this.shadow_attributes.width = state.shadow_attributes.width;\n            this.shadow_attributes.color = state.shadow_attributes.color;\n            this.lineWidth = state.lineWidth;\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900). It is inserted\n     *               into the font-weight attribute (e.g., font-weight=\"bold\")\n     * @param style is a string (e.g., 'italic', 'normal') that is inserted into the\n     *              font-style attribute (e.g., font-style=\"italic\")\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.fontCSSString;\n    }\n}\nSVGContext.measureTextCache = new MeasureTextCache();\nexport { SVGContext };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { CanvasContext } from './canvascontext';\nimport { SVGContext } from './svgcontext';\nimport { isRenderContext } from './typeguard';\nimport { RuntimeError } from './util';\nimport { isHTMLCanvas, isHTMLDiv } from './web';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\n// End of line types\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\n/**\n * Support Canvas & SVG rendering contexts.\n */\nclass Renderer {\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    // Draw a dashed line (horizontal, vertical or diagonal\n    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n    // setting the second number to 0 draws a solid line.\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    constructor(arg0, arg1) {\n        if (isRenderContext(arg0)) {\n            // The user has provided what looks like a RenderContext, let's just use it.\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                // The backend must be specified if the render context isn't directly provided.\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 == 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            // Verify backend and create context\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d', { willReadFrequently: true });\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\n// Used by vexflow_test_helpers.ts\n// Should this be private?\n// Can we do this in a cleaner way?\nRenderer.lastContext = undefined;\nexport { Renderer };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var TextJustification;\n(function (TextJustification) {\n    TextJustification[TextJustification[\"LEFT\"] = 1] = \"LEFT\";\n    TextJustification[TextJustification[\"CENTER\"] = 2] = \"CENTER\";\n    TextJustification[TextJustification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(TextJustification || (TextJustification = {}));\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nclass TextNote extends Note {\n    static get CATEGORY() {\n        return Category.TextNote;\n    }\n    /** Glyph data. */\n    static get GLYPHS() {\n        return {\n            segno: {\n                code: 'segno',\n            },\n            tr: {\n                code: 'ornamentTrill',\n            },\n            mordent: {\n                code: 'ornamentMordent',\n            },\n            mordent_upper: {\n                code: 'ornamentShortTrill',\n            },\n            mordent_lower: {\n                code: 'ornamentMordent',\n            },\n            f: {\n                code: 'dynamicForte',\n            },\n            p: {\n                code: 'dynamicPiano',\n            },\n            m: {\n                code: 'dynamicMezzo',\n            },\n            s: {\n                code: 'dynamicSforzando',\n            },\n            z: {\n                code: 'dynamicZ',\n            },\n            coda: {\n                code: 'coda',\n            },\n            pedal_open: {\n                code: 'keyboardPedalPed',\n            },\n            pedal_close: {\n                code: 'keyboardPedalUp',\n            },\n            caesura_straight: {\n                code: 'caesura',\n            },\n            caesura_curved: {\n                code: 'caesuraCurved',\n            },\n            breath: {\n                code: 'breathMarkComma',\n            },\n            tick: {\n                code: 'breathMarkTick',\n            },\n            turn: {\n                code: 'ornamentTurn',\n            },\n            turn_inverted: {\n                code: 'ornamentTurnSlash',\n            },\n        };\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.text = noteStruct.text || '';\n        this.superscript = noteStruct.superscript;\n        this.subscript = noteStruct.subscript;\n        this.setFont(noteStruct.font);\n        this.line = noteStruct.line || 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignore_ticks = noteStruct.ignore_ticks || false;\n        this.justification = TextJustification.LEFT;\n        // Determine and set initial note width. Note that the text width is\n        // an approximation and isn't very accurate. The only way to accurately\n        // measure the length of text is with `CanvasRenderingContext2D.measureText()`.\n        if (noteStruct.glyph) {\n            const struct = TextNote.GLYPHS[noteStruct.glyph];\n            if (!struct)\n                throw new RuntimeError('Invalid glyph type: ' + noteStruct.glyph);\n            this.glyph = new Glyph(struct.code, Tables.NOTATION_FONT_SCALE, { category: 'textNote' });\n            this.setWidth(this.glyph.getMetrics().width);\n        }\n        else {\n            this.glyph = undefined;\n        }\n    }\n    /** Set the horizontal justification of the TextNote. */\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Return the Stave line on which the TextNote is placed. */\n    getLine() {\n        return this.line;\n    }\n    /** Return the unformatted text of this TextNote. */\n    getText() {\n        return this.text;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.smooth) {\n            this.setWidth(0);\n        }\n        else {\n            if (this.glyph) {\n                // Width already set.\n            }\n            else {\n                const ctx = this.checkContext();\n                ctx.setFont(this.textFont);\n                this.setWidth(ctx.measureText(this.text).width);\n            }\n        }\n        if (this.justification === TextJustification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        // We reposition to the center of the note head\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    /**\n     * Renders the TextNote.\n     * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        // Reposition to center of note head\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        // Align based on tick-context width.\n        const width = this.getWidth();\n        if (this.justification === TextJustification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            x -= width;\n        }\n        let y;\n        if (this.glyph) {\n            y = stave.getYForLine(this.line + -3);\n            this.glyph.render(ctx, x, y);\n        }\n        else {\n            y = stave.getYForLine(this.line + -3);\n            this.applyStyle(ctx);\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, x, y);\n            const height = ctx.measureText(this.text).height;\n            // We called this.setFont(...) in the constructor, so we know this.textFont is available.\n            // eslint-disable-next-line\n            const { family, size, weight, style } = this.textFont;\n            // Scale the font size by 1/1.3.\n            const smallerFontSize = Font.scaleSize(size, 0.769231);\n            if (this.superscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.superscript, x + this.width + 2, y - height / 2.2);\n            }\n            if (this.subscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.subscript, x + this.width + 2, y + height / 2.2 - 1);\n            }\n            this.restoreStyle(ctx);\n        }\n    }\n}\nTextNote.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 12,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nTextNote.Justification = TextJustification;\nexport { TextNote };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nclass Volta extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Volta;\n    }\n    static get type() {\n        return VoltaType;\n    }\n    constructor(type, number, x, y_shift) {\n        super();\n        this.volta = type;\n        this.x = x;\n        this.y_shift = y_shift;\n        this.number = number;\n        this.resetFont();\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x; // don't include x (offset) for width\n        const top_y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        const vert_height = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.volta) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            default:\n                break;\n        }\n        // If the beginning of a volta, draw measure number\n        if (this.volta === VoltaType.BEGIN || this.volta === VoltaType.BEGIN_END) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n            ctx.restore();\n        }\n        ctx.fillRect(this.x + x, top_y, width, 1);\n        return this;\n    }\n}\nVolta.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { Volta };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Renderer } from './renderer';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isStaveNote, isStemmableNote } from './typeguard';\nimport { RuntimeError } from './util';\nclass StringNumber extends Modifier {\n    static get CATEGORY() {\n        return Category.StringNumber;\n    }\n    static get metrics() {\n        var _a;\n        return ((_a = Tables.currentMusicFont().getMetrics().stringNumber) !== null && _a !== void 0 ? _a : {\n            verticalPadding: 0,\n            stemPadding: 0,\n            leftPadding: 0,\n            rightPadding: 0,\n        });\n    }\n    // ## Static Methods\n    // Arrange string numbers inside a `ModifierContext`\n    static format(nums, state) {\n        /**\n         * The modifier context's left_shift state.\n         */\n        const left_shift = state.left_shift;\n        /**\n         * The modifier context's right_shift state.\n         */\n        const right_shift = state.right_shift;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let extraXSpaceForDisplacedNotehead = 0;\n        let shift_right = 0;\n        const modLines = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const mc = note.getModifierContext();\n            const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n            if (mc) {\n                if (pos === ModifierPosition.ABOVE) {\n                    num.text_line = mc.getState().top_text_line;\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n                else if (pos === ModifierPosition.BELOW) {\n                    num.text_line = mc.getState().text_line;\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (pos === Modifier.Position.LEFT) {\n                        extraXSpaceForDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx(), extraXSpaceForDisplacedNotehead);\n                    }\n                    if (right_shift === 0) {\n                        shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n                    }\n                }\n                prev_note = note;\n            }\n            const glyphLine = modLines === 0 ? props.line : modLines;\n            nums_list.push({\n                pos,\n                note,\n                num,\n                line: glyphLine,\n                shiftL: extraXSpaceForDisplacedNotehead,\n                shiftR: shift_right,\n            });\n        }\n        // Sort string numbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let num_shiftR = 0;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        let last_line = null;\n        let last_note = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            const note = nums_list[i].note;\n            const pos = nums_list[i].pos;\n            const num = nums_list[i].num;\n            const line = nums_list[i].line;\n            const shiftR = nums_list[i].shiftR;\n            // Reset the position of the string number every line.\n            if (line !== last_line || note !== last_note) {\n                num_shiftR = right_shift + shiftR;\n            }\n            const num_width = num.getWidth() + num_spacing;\n            let num_x_shift = 0;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift + extraXSpaceForDisplacedNotehead);\n                num_x_shift = num_width; // spacing\n                x_widthL = Math.max(num_x_shift, x_widthL);\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(num_shiftR);\n                num_x_shift += num_width; // spacing\n                x_widthR = num_x_shift > x_widthR ? num_x_shift : x_widthR;\n            }\n            last_line = line;\n            last_note = note;\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    constructor(number) {\n        super();\n        this.string_number = number;\n        this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.text_line = 0;\n        this.stem_offset = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.dashed = true; // true - draw dashed extension  false - no extension\n        this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n        this.radius = 8;\n        this.drawCircle = true;\n        this.setWidth(this.radius * 2 + 4);\n        this.resetFont();\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.string_number = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.last_note = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    setDrawCircle(drawCircle) {\n        this.drawCircle = drawCircle;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let stem_ext = {};\n        if (note.hasStem()) {\n            stem_ext = note.checkStem().getExtents();\n        }\n        let dot_y = start.y + this.y_shift + this.y_offset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a < b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.UP) {\n                        dot_y = stem_ext.topY + StringNumber.metrics.stemPadding;\n                    }\n                    dot_y -= this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.BELOW:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a > b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.DOWN) {\n                        dot_y = stem_ext.topY - StringNumber.metrics.stemPadding;\n                    }\n                    dot_y += this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.radius / 2 + StringNumber.metrics.leftPadding;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += this.radius / 2 + StringNumber.metrics.rightPadding;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        ctx.save();\n        if (this.drawCircle) {\n            ctx.beginPath();\n            ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n            ctx.setLineWidth(1.5);\n            ctx.stroke();\n        }\n        ctx.setFont(this.textFont);\n        const x = dot_x - ctx.measureText(this.string_number).width / 2;\n        ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n        const lastNote = this.last_note;\n        if (isStemmableNote(lastNote)) {\n            // Only StemmableNote objects have getStemX().\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n        ctx.restore();\n    }\n}\nStringNumber.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { StringNumber };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category, isNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nclass Stroke extends Modifier {\n    static get CATEGORY() {\n        return Category.Stroke;\n    }\n    // Arrange strokes inside `ModifierContext`\n    static format(strokes, state) {\n        const left_shift = state.left_shift;\n        const stroke_spacing = 0;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                // Only StaveNote objects have getKeyProps().\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                // Only TabNote objects have getPositions().\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = left_shift;\n        // There can only be one stroke .. if more than one, they overlay each other\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n        }, 0);\n        state.left_shift += xShift;\n        return true;\n    }\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ all_voices: true }, options);\n        // multi voice - span stroke across all voices if true\n        this.all_voices = this.options.all_voices;\n        // multi voice - end note of stroke, set in draw()\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            font_scale: Tables.NOTATION_FONT_SCALE,\n        };\n        this.resetFont();\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.note_end = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let ys = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const line_space = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                // Only Note objects have getYs().\n                // note is an instance of either StaveNote or TabNote.\n                ys = note.getYs();\n                for (let n = 0; n < ys.length; n++) {\n                    if (this.note === notes[i] || this.all_voices) {\n                        topY = Math.min(topY, ys[n]);\n                        botY = Math.max(botY, ys[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrow_shift_x = 0;\n        let arrow_y = 0;\n        let text_shift_x = 0;\n        let text_y = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                arrow_y = topY - line_space / 2 + 10;\n                botY += line_space / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = 0.5;\n                arrow_y = botY + line_space / 2;\n                topY -= line_space / 2;\n                break;\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASQUEDO_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                text_shift_x = this.x_shift + arrow_shift_x - 2;\n                if (isStaveNote(note)) {\n                    topY += 1.5 * line_space;\n                    if ((botY - topY) % 2 !== 0) {\n                        botY += 0.5 * line_space;\n                    }\n                    else {\n                        botY += line_space;\n                    }\n                    arrow_y = topY - line_space;\n                    text_y = botY + line_space + 2;\n                }\n                else {\n                    topY += 1.5 * line_space;\n                    botY += line_space;\n                    arrow_y = topY - 0.75 * line_space;\n                    text_y = botY + 0.25 * line_space;\n                }\n                break;\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASQUEDO_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = -4;\n                text_shift_x = this.x_shift + arrow_shift_x - 1;\n                if (isStaveNote(note)) {\n                    arrow_y = line_space / 2;\n                    topY += 0.5 * line_space;\n                    if ((botY - topY) % 2 === 0) {\n                        botY += line_space / 2;\n                    }\n                    arrow_y = botY + 0.5 * line_space;\n                    text_y = topY - 1.25 * line_space;\n                }\n                else {\n                    topY += 0.25 * line_space;\n                    botY += 0.5 * line_space;\n                    arrow_y = botY + 0.25 * line_space;\n                    text_y = topY - line_space;\n                }\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY += 0.5 * line_space;\n                botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        let strokeLine = 'straight';\n        // Draw the stroke\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n        }\n        else {\n            strokeLine = 'wiggly';\n            if (isStaveNote(note)) {\n                for (let i = topY; i <= botY; i += line_space) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n            }\n            else {\n                let i;\n                for (i = topY; i <= botY; i += 10) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n                if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n                    text_y = i + 0.25 * line_space;\n                }\n            }\n        }\n        if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n            return; // skip drawing arrow heads or text\n        }\n        // Draw the arrow head\n        Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n            category: `stroke_${strokeLine}.${arrow}`,\n        });\n        // Draw the rasquedo \"R\"\n        if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText('R', x + text_shift_x, text_y);\n            ctx.restore();\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n};\nStroke.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\nexport { Stroke };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Bend } from './bend';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n    static get CATEGORY() {\n        return Category.Vibrato;\n    }\n    /** Arrange vibratos inside a `ModifierContext`. */\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        // Vibratos are always on top.\n        let text_line = state.top_text_line;\n        let width = 0;\n        let shift = state.right_shift - 7;\n        // If there's a bend, drop the text line\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            text_line = text_line - (bendHeight + 1);\n        }\n        else {\n            state.top_text_line += 1;\n        }\n        // Format Vibratos\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(text_line);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.right_shift += width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.render_options = {\n            harsh: false,\n            vibrato_width: 20,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n        };\n        this.setVibratoWidth(this.render_options.vibrato_width);\n    }\n    /** Set harsh vibrato. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Set vibrato width in pixels. */\n    setVibratoWidth(width) {\n        this.render_options.vibrato_width = width;\n        this.setWidth(width);\n        return this;\n    }\n    /** Draw the vibrato on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x + this.x_shift;\n        const vy = note.getYForTopText(this.text_line) + 2;\n        Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n    }\n    /**\n     * Static rendering method that can be called from\n     * other classes (e.g. VibratoBracket).\n     */\n    static renderVibrato(ctx, x, y, opts) {\n        const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n        const num_waves = vibrato_width / wave_width;\n        ctx.beginPath();\n        let i;\n        if (harsh) {\n            ctx.moveTo(x, y + wave_girth + 1);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x + wave_width, y - wave_height / 2);\n                x += wave_width;\n                ctx.lineTo(x + wave_width, y + wave_height / 2);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n                ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n        else {\n            ctx.moveTo(x, y + wave_girth);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n                x += wave_width;\n                ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n                ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.).  The ModifierContext works with tickables\n// that are at the same tick to ensure that they and their modifiers\n// all have proper alignment.  (Note that the ModifierContext also\n// runs the spacing of the tickable).\n//\n// see https://github.com/0xfe/vexflow/wiki/How-Formatting-Works\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Bend } from './bend';\nimport { ChordSymbol } from './chordsymbol';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { StaveNote } from './stavenote';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\nimport { Vibrato } from './vibrato';\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('Vex.Flow.ModifierContext', args);\n}\nclass ModifierContext {\n    constructor() {\n        // Formatting data.\n        this.state = {\n            left_shift: 0,\n            right_shift: 0,\n            text_line: 0,\n            top_text_line: 0,\n        };\n        // Current members -- a mapping of Category (string) to a list of Tickables, Modifiers,\n        // StaveNotes, TabNotes, etc.\n        this.members = {};\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.formatted = false;\n        this.width = 0;\n        this.spacing = 0;\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    /**\n     * this.members maps CATEGORY strings to arrays of Tickable | Modifier | StaveNote | TabNote.\n     * Here we add a new member to this.members, and create a new array if needed.\n     * @param member\n     * @returns this\n     */\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    /**\n     * @deprecated\n     */\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        var _a;\n        return (_a = this.members[category]) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Get the width of the entire\n     */\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.left_shift;\n    }\n    getRightShift() {\n        return this.state.right_shift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.left_shift + this.state.right_shift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        L('Preformatting ModifierContext');\n        const state = this.state;\n        const members = this.members;\n        // The ordering below determines when different members are formatted and rendered.\n        StaveNote.format(members[Category.StaveNote], state);\n        Parenthesis.format(members[Category.Parenthesis], state);\n        Dot.format(members[Category.Dot], state);\n        FretHandFinger.format(members[Category.FretHandFinger], state);\n        Accidental.format(members[Category.Accidental], state);\n        Stroke.format(members[Category.Stroke], state);\n        GraceNoteGroup.format(members[Category.GraceNoteGroup], state);\n        NoteSubGroup.format(members[Category.NoteSubGroup], state);\n        StringNumber.format(members[Category.StringNumber], state);\n        Articulation.format(members[Category.Articulation], state);\n        Ornament.format(members[Category.Ornament], state);\n        Annotation.format(members[Category.Annotation], state);\n        ChordSymbol.format(members[Category.ChordSymbol], state);\n        Bend.format(members[Category.Bend], state);\n        Vibrato.format(members[Category.Vibrato], state, this);\n        // Update width of this member context\n        this.width = state.left_shift + state.right_shift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        L('Postformatting ModifierContext');\n        // If post-formatting is required for an element, add more lines below.\n        StaveNote.postFormat(this.getMembers(Category.StaveNote));\n    }\n}\nModifierContext.DEBUG = false;\nexport { ModifierContext };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n// MIT License\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('Vex.Flow.Clef', args);\n}\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nclass Clef extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Clef;\n    }\n    /**\n     * Every clef name is associated with a glyph code from the font file\n     * and a default stave line number.\n     */\n    static get types() {\n        return {\n            treble: {\n                code: 'gClef',\n                line: 3,\n            },\n            bass: {\n                code: 'fClef',\n                line: 1,\n            },\n            alto: {\n                code: 'cClef',\n                line: 2,\n            },\n            tenor: {\n                code: 'cClef',\n                line: 1,\n            },\n            percussion: {\n                code: 'unpitchedPercussionClef1',\n                line: 2,\n            },\n            soprano: {\n                code: 'cClef',\n                line: 4,\n            },\n            'mezzo-soprano': {\n                code: 'cClef',\n                line: 3,\n            },\n            'baritone-c': {\n                code: 'cClef',\n                line: 0,\n            },\n            'baritone-f': {\n                code: 'fClef',\n                line: 2,\n            },\n            subbass: {\n                code: 'fClef',\n                line: 0,\n            },\n            french: {\n                code: 'gClef',\n                line: 4,\n            },\n            tab: {\n                code: '6stringTabClef',\n                line: 2.5,\n            },\n        };\n    }\n    static get annotationSmufl() {\n        return {\n            '8va': 'timeSig8',\n            '8vb': 'timeSig8',\n        };\n    }\n    /** Create a new clef. */\n    constructor(type, size, annotation) {\n        super();\n        /**\n         * The attribute `clef` must be a key from\n         * `Clef.types`\n         */\n        this.clef = Clef.types['treble'];\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clef_${this.size}`));\n        L('Creating clef:', type);\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef = Clef.types[type];\n        if (size === undefined) {\n            this.size = 'default';\n        }\n        else {\n            this.size = size;\n        }\n        const musicFont = Tables.currentMusicFont();\n        // If an annotation, such as 8va, is specified, add it to the Clef object.\n        if (annotation !== undefined) {\n            const code = Clef.annotationSmufl[annotation];\n            const point = (Clef.getPoint(this.size) / 5) * 3;\n            const line = musicFont.lookupMetric(`clef_${this.size}.annotations.${annotation}.${this.type}.line`);\n            const x_shift = musicFont.lookupMetric(`clef_${this.size}.annotations.${annotation}.${this.type}.shiftX`);\n            this.annotation = { code, point, line, x_shift };\n            this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n            this.attachment.metrics.x_max = 0;\n            this.attachment.setXShift(this.annotation.x_shift);\n        }\n        else {\n            this.annotation = undefined;\n        }\n        return this;\n    }\n    /** Get clef width. */\n    getWidth() {\n        if (this.type === 'tab') {\n            defined(this.stave, 'ClefError', \"Can't get width without stave.\");\n        }\n        return this.width;\n    }\n    /** Get point for clefs. */\n    static getPoint(size) {\n        // for sizes other than 'default', clef is 2/3 of the default value\n        return size == 'default' ? Tables.NOTATION_FONT_SCALE : (Tables.NOTATION_FONT_SCALE / 3) * 2;\n    }\n    /** Set associated stave. */\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    /** Render clef. */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('clef', this.getAttribute('id'));\n        Glyph.renderGlyph(ctx, this.x, stave.getYForLine(this.clef.line), Clef.getPoint(this.size), this.clef.code, {\n            category: `clef_${this.size}`,\n        });\n        if (this.annotation !== undefined && this.attachment !== undefined) {\n            this.placeGlyphOnLine(this.attachment, stave, this.annotation.line);\n            this.attachment.setStave(stave);\n            this.attachment.setContext(ctx);\n            this.attachment.renderToStave(this.x);\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n/** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\nClef.DEBUG = false;\nexport { Clef };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nclass KeySignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.KeySignature;\n    }\n    // Create a new Key Signature based on a `key_spec`\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.glyphFontScale = Tables.NOTATION_FONT_SCALE;\n        this.glyphs = [];\n        this.xPositions = []; // relative to this.x\n        this.paddingForced = false;\n    }\n    // Add an accidental glyph to the `KeySignature` instance which represents\n    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n    // spacing will be included in the glyph's position\n    convertToGlyph(acc, nextAcc) {\n        const accGlyphData = Tables.accidentalCodes(acc.type);\n        const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n        // Determine spacing between current accidental and the next accidental\n        let extraWidth = 1;\n        if (acc.type === 'n' && nextAcc) {\n            const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n            if (spacing) {\n                const isAbove = nextAcc.line >= acc.line;\n                extraWidth = isAbove ? spacing.above : spacing.below;\n            }\n        }\n        // Place the glyph on the stave\n        this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n        this.glyphs.push(glyph);\n        const xPosition = this.xPositions[this.xPositions.length - 1];\n        const glyphWidth = glyph.getMetrics().width + extraWidth;\n        // Store the next accidental's x position\n        this.xPositions.push(xPosition + glyphWidth);\n        // Expand size of key signature\n        this.width += glyphWidth;\n    }\n    // Cancel out a key signature provided in the `spec` parameter. This will\n    // place appropriate natural accidentals before the key signature.\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        // Get the accidental list for the cancelled key signature\n        const cancel_accList = Tables.keySignature(spec);\n        // If the cancelled key has a different accidental type, ie: # vs b\n        const different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n        // Determine how many naturals needed to add\n        const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n        // Return if no naturals needed\n        if (naturals < 1)\n            return undefined;\n        // Get the line position for each natural\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!different_types) {\n                index = cancel_accList.length - naturals + i;\n            }\n            const acc = cancel_accList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        // Combine naturals with main accidental list for the key signature\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancel_accList[0].type,\n        };\n    }\n    // Deprecated\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    // Apply the accidental staff line placement based on the `clef` and\n    // the  accidental `type` for the key signature ('# or 'b').\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0; // if clef === \"treble\"\n        let customLines; // when clef doesn't follow treble key sig shape\n        switch (clef) {\n            // Treble & Subbass both have offsets of 0, so are not included.\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        // If there's a special case, assign those lines/spaces:\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    // Alter the accidentals of a key spec one by one.\n    // Each alteration is a new accidental that replaces the\n    // original accidental (or the canceled one).\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        const stave = this.checkStave();\n        this.width = 0;\n        this.glyphs = [];\n        this.xPositions = [0]; // initialize with initial x position\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n            }\n        }\n        this.formatted = true;\n    }\n    /**\n     * Return the Glyph objects making up this KeySignature.\n     */\n    getGlyphs() {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.glyphs.length; i++) {\n            const glyph = this.glyphs[i];\n            const x = this.x + this.xPositions[i];\n            glyph.setStave(stave);\n            glyph.setContext(ctx);\n            glyph.renderToStave(x);\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n// Space between natural and following accidental depending\n// on vertical position\nKeySignature.accidentalSpacing = {\n    '#': {\n        above: 6,\n        below: 4,\n    },\n    b: {\n        above: 4,\n        below: 7,\n    },\n    n: {\n        above: 4,\n        below: 1,\n    },\n    '##': {\n        above: 6,\n        below: 4,\n    },\n    bb: {\n        above: 4,\n        below: 7,\n    },\n    db: {\n        above: 4,\n        below: 7,\n    },\n    d: {\n        above: 4,\n        below: 7,\n    },\n    bbs: {\n        above: 4,\n        below: 7,\n    },\n    '++': {\n        above: 6,\n        below: 4,\n    },\n    '+': {\n        above: 6,\n        below: 4,\n    },\n    '+-': {\n        above: 6,\n        below: 4,\n    },\n    '++-': {\n        above: 6,\n        below: 4,\n    },\n    bs: {\n        above: 4,\n        below: 10,\n    },\n    bss: {\n        above: 4,\n        below: 10,\n    },\n};\nexport { KeySignature };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nclass Repetition extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Repetition;\n    }\n    constructor(type, x, y_shift) {\n        super();\n        this.symbol_type = type;\n        this.x = x;\n        this.x_shift = 0;\n        this.y_shift = y_shift;\n        this.resetFont();\n    }\n    setShiftX(x) {\n        this.x_shift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        this.setRendered();\n        switch (this.symbol_type) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSignoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSignoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.coda.offsetY'), 40, 'coda', { category: 'coda' });\n        return this;\n    }\n    drawSignoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.segno.offsetY'), 30, 'segno', { category: 'segno' });\n        return this;\n    }\n    drawSymbolText(stave, x, text, draw_coda) {\n        var _a;\n        const ctx = stave.checkContext();\n        ctx.save();\n        ctx.setFont(this.textFont);\n        let text_x = 0;\n        let symbol_x = 0;\n        const modifierWidth = stave.getNoteStartX() - this.x;\n        switch (this.symbol_type) {\n            // To the left with symbol\n            case Repetition.type.CODA_LEFT:\n                // Offset Coda text to right of stave beginning\n                text_x = this.x + stave.getVerticalBarWidth();\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n            // To the right without symbol\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width;\n                break;\n            // To the right with symbol\n            default:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) +\n            this.y_shift +\n            Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetY');\n        if (draw_coda) {\n            Glyph.renderGlyph(ctx, symbol_x, y, Font.convertSizeToPointValue((_a = this.textFont) === null || _a === void 0 ? void 0 : _a.size) * 2, 'coda', {\n                category: 'coda',\n            });\n        }\n        ctx.fillText(text, text_x, y + 5);\n        ctx.restore();\n        return this;\n    }\n}\nRepetition.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Tables.NOTATION_FONT_SCALE / 3,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13, // To Coda at end of stave\n};\nexport { Repetition };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nclass StaveSection extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveSection;\n    }\n    constructor(section, x, shift_y, drawRect = true) {\n        super();\n        this.setWidth(16);\n        this.section = section;\n        this.x = x;\n        this.shift_x = 0;\n        this.shift_y = shift_y;\n        this.drawRect = drawRect;\n        this.resetFont();\n    }\n    setStaveSection(section) {\n        this.section = section;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const borderWidth = 2;\n        const padding = 2;\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(borderWidth);\n        ctx.setFont(this.textFont);\n        const textFormatter = TextFormatter.create(this.textFont);\n        const textWidth = textFormatter.getWidthForTextInPx(this.section);\n        const textY = textFormatter.getYForStringInPx(this.section);\n        const textHeight = textY.height;\n        const headroom = -1 * textY.yMin;\n        const width = textWidth + 2 * padding; // add left & right padding\n        const height = textHeight + 2 * padding; // add top & bottom padding\n        //  Seems to be a good default y\n        const y = stave.getYForTopText(1.5) + this.shift_y;\n        const x = this.x + shift_x;\n        if (this.drawRect) {\n            ctx.beginPath();\n            ctx.rect(x, y - height + headroom, width, height);\n            ctx.stroke();\n        }\n        ctx.fillText(this.section, x + padding, y - padding);\n        ctx.restore();\n        return this;\n    }\n}\nStaveSection.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { StaveSection };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nclass StaveTempo extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveTempo;\n    }\n    constructor(tempo, x, shift_y) {\n        super();\n        /** Font size for note. */\n        this.render_options = { glyph_font_scale: 30 };\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.shift_x = 10;\n        this.shift_y = shift_y;\n        this.resetFont();\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const options = this.render_options;\n        const scale = options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n        const name = this.tempo.name;\n        const duration = this.tempo.duration;\n        const dots = this.tempo.dots || 0;\n        const bpm = this.tempo.bpm;\n        let x = this.x + this.shift_x + shift_x;\n        const y = stave.getYForTopText(1) + this.shift_y;\n        ctx.save();\n        const textFormatter = TextFormatter.create(this.textFont);\n        if (name) {\n            ctx.setFont(this.textFont);\n            ctx.fillText(name, x, y);\n            x += textFormatter.getWidthForTextInPx(name);\n        }\n        if (duration && bpm) {\n            // Override the weight and style.\n            const noteTextFont = Object.assign(Object.assign({}, this.textFont), { weight: 'normal', style: 'normal' });\n            ctx.setFont(noteTextFont);\n            const noteTextFormatter = TextFormatter.create(noteTextFont);\n            if (name) {\n                x += noteTextFormatter.getWidthForTextInPx('|');\n                ctx.fillText('(', x, y);\n                x += noteTextFormatter.getWidthForTextInPx('(');\n            }\n            const glyphProps = Tables.getGlyphProps(duration);\n            x += 3 * scale;\n            Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, glyphProps.code_head);\n            x += Glyph.getWidth(glyphProps.code_head, options.glyph_font_scale);\n            // Draw stem and flags\n            if (glyphProps.stem) {\n                let stem_height = 30;\n                if (glyphProps.beam_count)\n                    stem_height += 3 * (glyphProps.beam_count - 1);\n                stem_height *= scale;\n                const y_top = y - stem_height;\n                ctx.fillRect(x - scale, y_top, scale, stem_height);\n                if (glyphProps.code && glyphProps.code_flag_upstem) {\n                    const flagMetrics = Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, glyphProps.code_flag_upstem, {\n                        category: 'flag.staveTempo',\n                    });\n                    x += (flagMetrics.width * Tables.NOTATION_FONT_SCALE) / flagMetrics.font.getData().resolution;\n                }\n            }\n            // Draw dot\n            for (let i = 0; i < dots; i++) {\n                x += 6 * scale;\n                ctx.beginPath();\n                ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n                ctx.fill();\n            }\n            ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n        }\n        ctx.restore();\n        return this;\n    }\n}\nStaveTempo.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 14,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { StaveTempo };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { TextJustification, TextNote } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nclass StaveText extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveText;\n    }\n    constructor(text, position, options = {}) {\n        super();\n        this.setWidth(16);\n        this.text = text;\n        this.position = position;\n        this.options = Object.assign({ shift_x: 0, shift_y: 0, justification: TextNote.Justification.CENTER }, options);\n        this.resetFont();\n    }\n    setStaveText(text) {\n        this.text = text;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText('' + this.text).width;\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - text_width - 24 + this.options.shift_x;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX() + this.options.shift_x;\n                if (this.options.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - text_width / 2;\n                }\n                else if (this.options.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - text_width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2) + this.options.shift_y;\n                }\n                else {\n                    y = stave.getYForBottomText(2) + this.options.shift_y;\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        ctx.fillText('' + this.text, x, y + 4);\n        ctx.restore();\n        return this;\n    }\n}\nStaveText.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nexport { StaveText };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Renders time signatures glyphs for staffs\n// This class is used by TimeSignature to render the associated glyphs\nimport { Glyph } from './glyph';\nimport { defined } from './util';\nexport class TimeSignatureGlyph extends Glyph {\n    constructor(timeSignature, topDigits, botDigits, code, point, options) {\n        var _a;\n        super(code, point, options);\n        this.timeSignature = timeSignature;\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        let topWidth = 0;\n        let height = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            let timeSigType = topDigits[i];\n            switch (topDigits[i]) {\n                case '-':\n                    timeSigType = 'Minus';\n                    break;\n                case '+':\n                    timeSigType = botDigits.length > 0 ? 'PlusSmall' : 'Plus';\n                    break;\n                case '(':\n                    timeSigType = botDigits.length > 0 ? 'ParensLeftSmall' : 'ParensLeft';\n                    break;\n                case ')':\n                    timeSigType = botDigits.length > 0 ? 'ParensRightSmall' : 'ParensRight';\n                    break;\n            }\n            const topGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.topGlyphs.push(topGlyph);\n            topWidth += (_a = topGlyph.getMetrics().width) !== null && _a !== void 0 ? _a : 0;\n            height = Math.max(height, topGlyph.getMetrics().height);\n        }\n        let botWidth = 0;\n        for (let i = 0; i < botDigits.length; ++i) {\n            let timeSigType = botDigits[i];\n            switch (botDigits[i]) {\n                case '+':\n                    timeSigType = 'PlusSmall';\n                    break;\n                case '(':\n                    timeSigType = 'ParensLeftSmall';\n                    break;\n                case ')':\n                    timeSigType = 'ParensRightSmall';\n                    break;\n            }\n            const botGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.botGlyphs.push(botGlyph);\n            botWidth += defined(botGlyph.getMetrics().width);\n            height = Math.max(height, botGlyph.getMetrics().height);\n        }\n        // If the height of the digits is more than two staff spaces (20), shift to the next line\n        // in order to center the digits on lines 1 and 5 rather than 2 and 4.\n        this.lineShift = height > 22 ? 1 : 0;\n        this.width = Math.max(topWidth, botWidth);\n        this.xMin = this.getMetrics().x_min;\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n        this.reset();\n    }\n    getMetrics() {\n        return {\n            x_min: this.xMin,\n            x_max: this.xMin + this.width,\n            width: this.width,\n        };\n    }\n    renderToStave(x) {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        let start_x = x + this.topStartX;\n        let y = 0;\n        if (this.botGlyphs.length > 0)\n            y = stave.getYForLine(this.timeSignature.topLine - this.lineShift);\n        else\n            y = (stave.getYForLine(this.timeSignature.topLine) + stave.getYForLine(this.timeSignature.bottomLine)) / 2;\n        for (let i = 0; i < this.topGlyphs.length; ++i) {\n            const glyph = this.topGlyphs[i];\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + this.x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n        start_x = x + this.botStartX;\n        y = stave.getYForLine(this.timeSignature.bottomLine + this.lineShift);\n        for (let i = 0; i < this.botGlyphs.length; ++i) {\n            const glyph = this.botGlyphs[i];\n            this.timeSignature.placeGlyphOnLine(glyph, stave, this.timeSignature.getLine());\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + glyph.getMetrics().x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignatureGlyph } from './timesigglyph';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    if (numbers.length !== 2 && numbers[0] !== '+' && numbers[0] !== '-') {\n        throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`);\n    }\n    numbers.forEach((number) => {\n        // Characters consisting in number 0..9, '+', '-', '(' or ')'\n        if (/^[0-9+\\-()]+$/.test(number) == false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\n/**\n * A TimeSignature is a StaveModifier that can make its appropriate Glyphs directly from\n * a provided \"timeSpec\" such as \"4/4\", \"C|\" (cut time), or even something more advanced\n * such as \"3/4(6/8)\" or \"2/4+5/8\".\n */\nexport class TimeSignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.TimeSignature;\n    }\n    static get glyphs() {\n        return {\n            C: {\n                code: 'timeSigCommon',\n                line: 2,\n            },\n            'C|': {\n                code: 'timeSigCutCommon',\n                line: 2,\n            },\n        };\n    }\n    constructor(timeSpec = '4/4', customPadding = 15, validate_args = true) {\n        super();\n        this.timeSpec = '4/4';\n        this.line = 0;\n        this.is_numeric = true;\n        this.validate_args = validate_args;\n        const padding = customPadding;\n        // point must be defined before parsing spec.\n        const musicFont = Tables.currentMusicFont();\n        this.point = musicFont.lookupMetric('digits.point') || Tables.NOTATION_FONT_SCALE;\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.topLine = 2 + fontLineShift;\n        this.bottomLine = 4 + fontLineShift;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setTimeSig(timeSpec);\n        this.setPadding(padding);\n    }\n    /**\n     * Return TimeSignatureInfo given a string, consisting of line (number),\n     * num (boolean: same as TimeSignature.getIsNumeric()), and glyph (a Glyph or\n     * TimeSignatureGlyph object).\n     */\n    parseTimeSpec(timeSpec) {\n        var _a, _b;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const { line, code } = TimeSignature.glyphs[timeSpec];\n            return {\n                line,\n                num: false,\n                glyph: new Glyph(code, Tables.NOTATION_FONT_SCALE),\n            };\n        }\n        if (this.validate_args) {\n            assertIsValidTimeSig(timeSpec);\n        }\n        const parts = timeSpec.split('/');\n        return {\n            line: 0,\n            num: true,\n            glyph: this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : ''),\n        };\n    }\n    /**\n     * Returns a new TimeSignatureGlyph (a Glyph subclass that knows how to draw both\n     * top and bottom digits along with plus signs etc.)\n     */\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        // note that 'code' is ignored by TimeSignatureGlyph when rendering.\n        return new TimeSignatureGlyph(this, topDigits, botDigits, 'timeSig0', this.point);\n    }\n    /**\n     * Returns {line, num (=getIsNumeric), glyph} --\n     * but these can also be accessed directly w/ getters and setters.\n     */\n    getInfo() {\n        const { line, is_numeric, glyph } = this;\n        return { line, num: is_numeric, glyph };\n    }\n    /**\n     * Set a new time signature specification without changing customPadding, etc.\n     *\n     * The getter for this is `getTimeSpec` not `getTimeSig`.\n     */\n    setTimeSig(timeSpec) {\n        this.timeSpec = timeSpec;\n        const info = this.parseTimeSpec(timeSpec);\n        this.setGlyph(info.glyph);\n        this.is_numeric = info.num;\n        this.line = info.line;\n        return this;\n    }\n    /**\n     * Return the timeSpec (such as '4/4' or 'C|' or even '2/4+3/8') of the TimeSignature\n     */\n    getTimeSpec() {\n        return this.timeSpec;\n    }\n    /**\n     * Return the staff line that the TimeSignature sits on.  Generally 0 for numerator/\n     * denominator time signatures such as 3/4 and 2 for cut/common.\n     */\n    getLine() {\n        return this.line;\n    }\n    /**\n     * Set the line number that the TimeSignature sits on.  Half-values are acceptable\n     * for spaces, etc. Can be altered, for instance, for signatures that sit above the\n     * staff in large orchestral scores.\n     */\n    setLine(line) {\n        this.line = line;\n    }\n    /**\n     * Get the Glyph object used to create the time signature.  Numeric time signatures\n     * such as 3/8 have a composite Glyph stored as a single Glyph object.\n     */\n    getGlyph() {\n        return this.glyph;\n    }\n    /**\n     * Set the Glyph object used to draw the time signature, and update the width of the\n     * TimeSignature to match.  The Glyph must define width in its metrics.\n     */\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(defined(this.glyph.getMetrics().width));\n    }\n    /**\n     * Return a boolean on whether this TimeSignature is drawn with one or more numbers\n     * (such as 4/4) or not (as in cut time).\n     */\n    getIsNumeric() {\n        return this.is_numeric;\n    }\n    /**\n     * Set whether this TimeSignature is drawn with one or more numbers.\n     */\n    setIsNumeric(isNumeric) {\n        this.is_numeric = isNumeric;\n    }\n    /**\n     * Draw the time signature on a Stave using its RenderContext.  Both setStave\n     * and setContext must already be run.\n     */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        this.glyph.setStave(stave);\n        this.glyph.setContext(ctx);\n        this.placeGlyphOnLine(this.glyph, stave, this.line);\n        this.glyph.renderToStave(this.x);\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { KeySignature } from './keysignature';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { Volta } from './stavevolta';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { RuntimeError } from './util';\n// Used by Stave.format() to sort the modifiers at the beginning and end of a stave.\n// The keys (computed property names) match the CATEGORY property in the\n// Barline, Clef, KeySignature, TimeSignature classes.\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nclass Stave extends Element {\n    static get CATEGORY() {\n        return Category.Stave;\n    }\n    // This is the sum of the padding that normally goes on left + right of a stave during\n    // drawing. Used to size staves correctly with content width.\n    static get defaultPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.padding') + musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    // Right padding, used by system if startX is already determined.\n    static get rightPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    constructor(x, y, width, options) {\n        super();\n        // Initialized by the constructor via this.resetLines().\n        this.height = 0;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.start_x = x + 5;\n        this.end_x = x + width;\n        this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.resetFont();\n        this.options = Object.assign({ vertical_bar_width: 10, num_lines: 5, fill_style: '#999999', left_bar: true, right_bar: true, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, space_above_staff_ln: 4, space_below_staff_ln: 4, top_text_position: 1, bottom_text_position: 4, line_config: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 1.4 };\n        this.resetLines();\n        // beg bar\n        this.addModifier(new Barline(this.options.left_bar ? BarlineType.SINGLE : BarlineType.NONE));\n        // end bar\n        this.addEndModifier(new Barline(this.options.right_bar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    /** Set default style for ledger lines. */\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    /** Get default style for ledger lines. */\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacing_between_lines_px * spacing;\n    }\n    resetLines() {\n        this.options.line_config = [];\n        for (let i = 0; i < this.options.num_lines; i++) {\n            this.options.line_config.push({ visible: true });\n        }\n        this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n        this.options.bottom_text_position = this.options.num_lines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.start_x = x;\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.start_x;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.end_x;\n    }\n    getTieStartX() {\n        return this.start_x;\n    }\n    getTieEndX() {\n        return this.end_x;\n    }\n    getX() {\n        return this.x;\n    }\n    getNumLines() {\n        return this.options.num_lines;\n    }\n    setNumLines(n) {\n        this.options.num_lines = n;\n        this.resetLines();\n        return this;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    getY() {\n        return this.y;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0) - Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    getBottomLineBottomY() {\n        return this.getYForLine(this.getNumLines() - 1) + Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.start_x += shift;\n        this.end_x += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.end_x = this.x + width;\n        // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n        // this.modifiers[1].setX(this.end_x);\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    getStyle() {\n        return Object.assign({ fillStyle: this.options.fill_style, strokeStyle: this.options.fill_style, lineWidth: Tables.STAVE_LINE_THICKNESS }, super.getStyle());\n    }\n    /**\n     * Set the measure number of this Stave.\n     */\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    /**\n     * Return the measure number of this Stave.\n     */\n    getMeasure() {\n        return this.measure;\n    }\n    /**\n     * Gets the pixels to shift from the beginning of the stave\n     * following the modifier at the provided index\n     * @param  {Number} index The index from which to determine the shift\n     * @return {Number}       The amount of pixels shifted\n     */\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let start_x = this.start_x - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n            start_x -= begBarline.getWidth();\n        }\n        return start_x;\n    }\n    /** Coda & Segno Symbol functions */\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    // Volta functions\n    setVoltaType(type, number_t, y) {\n        this.modifiers.push(new Volta(type, number_t, this.x, y));\n        return this;\n    }\n    // Section functions\n    setSection(section, y, xOffset = 0, fontSize, drawRect = true) {\n        const staveSection = new StaveSection(section, this.x + xOffset, y, drawRect);\n        if (fontSize)\n            staveSection.setFontSize(fontSize);\n        this.modifiers.push(staveSection);\n        return this;\n    }\n    // Tempo functions\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    // Text functions\n    setText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacing_between_lines_px;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n        return score_bottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.num_lines);\n    }\n    // This returns\n    /** @returns the y for the *center* of a staff line */\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        // Does the reverse of getYForLine - somewhat dumb and just calls\n        // getYForLine until the right value is reaches\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.top_text_position);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottom_text_position + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    // This method adds a stave modifier to the stave. Note that the first two\n    // modifiers (BarLines) are automatically added upon construction.\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    // Bar Line functions\n    setBegBarType(type) {\n        // Only valid bar types at beginning of stave is none, single or begin repeat\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        // Repeat end not valid at end of stave\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a key signature to the stave.\n     *\n     * Example:\n     * `stave.addKeySignature('Db');`\n     * @param keySpec new key specification `[A-G][b|#]?`\n     * @param cancelKeySpec\n     * @param position\n     * @returns\n     */\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    /**\n     * Add a clef to the stave.\n     *\n     * Example:\n     *\n     * stave.addClef('treble')\n     * @param clef clef (treble|bass|...) see {@link Clef.types}\n     * @param size\n     * @param annotation\n     * @param position\n     * @returns\n     */\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a time signature to the stave\n     *\n     * Example:\n     *\n     * `stave.addTimeSignature('4/4');`\n     * @param timeSpec time signature specification `(C\\||C|\\d\\/\\d)`\n     * @param customPadding\n     * @param position\n     * @returns\n     */\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    // Deprecated\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    /**\n     * @param position\n     * @param category\n     * @returns array of StaveModifiers that match the provided position and category.\n     */\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            // A category was provided.\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            // A position was provided.\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            // Both position and category were provided!\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    /**\n     * Use the modifier's `getCategory()` as a key for the `order` array.\n     * The retrieved value is used to sort modifiers from left to right (0 to to 3).\n     */\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.start_x = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = layoutMetrics.xMax || 0;\n                    widths.paddingRight = layoutMetrics.paddingRight || 0;\n                }\n                widths.left = -layoutMetrics.xMin || 0;\n                widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    /**\n     * All drawing functions below need the context to be set.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.applyStyle();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const num_lines = this.options.num_lines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        // Render lines\n        for (let line = 0; line < num_lines; line++) {\n            y = this.getYForLine(line);\n            if (this.options.line_config[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + width, y);\n                ctx.stroke();\n            }\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n        // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            // Only draw modifier if it has a draw function\n            if (typeof modifier.draw === 'function') {\n                modifier.applyStyle(ctx);\n                modifier.draw(this, this.getModifierXShift(i));\n                modifier.restoreStyle(ctx);\n            }\n        }\n        // Render measure numbers\n        if (this.measure > 0) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n            ctx.restore();\n        }\n        return this;\n    }\n    getVerticalBarWidth() {\n        return this.options.vertical_bar_width;\n    }\n    /**\n     * Get the current configuration for the Stave.\n     * @return {Array} An array of configuration objects.\n     */\n    getConfigForLines() {\n        return this.options.line_config;\n    }\n    /**\n     * Configure properties of the lines in the Stave\n     * @param line_number The index of the line to configure.\n     * @param line_config An configuration object for the specified line.\n     * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n     *   range of the number of lines specified in the constructor.\n     */\n    setConfigForLine(line_number, line_config) {\n        if (line_number >= this.options.num_lines || line_number < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (line_config.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof line_config.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.line_config[line_number] = line_config;\n        return this;\n    }\n    /**\n     * Set the staff line configuration array for all of the lines at once.\n     * @param lines_configuration An array of line configuration objects.  These objects\n     *   are of the same format as the single one passed in to setLineConfiguration().\n     *   The caller can set null for any line config entry if it is desired that the default be used\n     * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n     *   exactly the same number of elements as the num_lines configuration object set in\n     *   the constructor.\n     */\n    setConfigForLines(lines_configuration) {\n        if (lines_configuration.length !== this.options.num_lines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        // Make sure the defaults are present in case an incomplete set of\n        //  configuration options were supplied.\n        // eslint-disable-next-line\n        for (const line_config in lines_configuration) {\n            // Allow '{}' to be used if the caller just wants the default for a particular node.\n            if (lines_configuration[line_config].visible == undefined) {\n                lines_configuration[line_config] = this.options.line_config[line_config];\n            }\n            this.options.line_config[line_config] = Object.assign(Object.assign({}, this.options.line_config[line_config]), lines_configuration[line_config]);\n        }\n        this.options.line_config = lines_configuration;\n        return this;\n    }\n    static formatBegModifiers(staves) {\n        const adjustCategoryStartX = (category) => {\n            let minStartX = 0;\n            // Calculate min start X for the category\n            staves.forEach((stave) => {\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                // Consider only the first instance\n                if (modifiers.length > 0 && modifiers[0].getX() > minStartX)\n                    minStartX = modifiers[0].getX();\n            });\n            let adjustX = 0;\n            staves.forEach((stave) => {\n                adjustX = 0;\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                // Calculate adjustement required for the stave\n                modifiers.forEach((modifier) => {\n                    if (minStartX - modifier.getX() > adjustX)\n                        adjustX = minStartX - modifier.getX();\n                });\n                const allModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n                let bAdjust = false;\n                // Apply adjustment to all the modifiers in and beyond the category\n                allModifiers.forEach((modifier) => {\n                    if (modifier.getCategory() === category)\n                        bAdjust = true;\n                    if (bAdjust && adjustX > 0)\n                        modifier.setX(modifier.getX() + adjustX);\n                });\n                // Apply adjustment also to note start.\n                stave.setNoteStartX(stave.getNoteStartX() + adjustX);\n            });\n        };\n        // Make sure that staves are formatted\n        staves.forEach((stave) => {\n            if (!stave.formatted)\n                stave.format();\n        });\n        // Align Clefs\n        adjustCategoryStartX(Category.Clef);\n        // Align key signatures\n        adjustCategoryStartX(Category.KeySignature);\n        // Align time signatures\n        adjustCategoryStartX(Category.TimeSignature);\n        let maxX = 0;\n        // align note start\n        staves.forEach((stave) => {\n            if (stave.getNoteStartX() > maxX)\n                maxX = stave.getNoteStartX();\n        });\n        staves.forEach((stave) => {\n            stave.setNoteStartX(maxX);\n        });\n        maxX = 0;\n        // align REPEAT_BEGIN\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    if (modifier.getX() > maxX)\n                        maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    modifier.setX(maxX);\n            });\n        });\n    }\n}\nStave.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 8,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nexport { Stave };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let x_shift = 3;\n    let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    const thickLineOffset = 2; // For aesthetics\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        x_shift = -5; // Flips the side of the thin line\n        variableWidth = 3;\n    }\n    // Thin line\n    ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n/** StaveConnector implements the connector lines between staves of a system. */\nclass StaveConnector extends Element {\n    static get CATEGORY() {\n        return Category.StaveConnector;\n    }\n    constructor(top_stave, bottom_stave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.width = 3;\n        this.top_stave = top_stave;\n        this.bottom_stave = bottom_stave;\n        this.type = StaveConnector.type.DOUBLE;\n        this.resetFont();\n        // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n        // 2. Offset BRACE type not to overlap with another StaveConnector\n        this.x_shift = 0;\n        this.texts = [];\n    }\n    /**\n     * Set type.\n     * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n     */\n    setType(type) {\n        const newType = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        // Be certain that the type is a valid type:\n        if (Object.values(StaveConnector.type).includes(newType)) {\n            this.type = newType;\n        }\n        return this;\n    }\n    /**\n     * Get type.\n     * @returns number {@link StaveConnector.type}\n     */\n    getType() {\n        return this.type;\n    }\n    /** Set optional associated Text. */\n    setText(text, options = {}) {\n        this.texts.push({\n            content: text,\n            options: Object.assign({ shift_x: 0, shift_y: 0 }, options),\n        });\n        return this;\n    }\n    setXShift(x_shift) {\n        if (typeof x_shift !== 'number') {\n            throw new RuntimeError('InvalidType', 'x_shift must be a Number');\n        }\n        this.x_shift = x_shift;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render connector and associated text. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.top_stave.getYForLine(0);\n        let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n        let width = this.width;\n        let topX = this.top_stave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.top_stave.getX() + this.top_stave.getWidth();\n        }\n        let attachment_height = botY - topY;\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= this.width + 2;\n                topY -= this.thickness;\n                attachment_height += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                // May need additional code to draw brace\n                const x1 = this.top_stave.getX() - 2 + this.x_shift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachment_height / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachment_height;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachment_height;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachment_height;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachment_height;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachment_height;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachment_height;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachment_height = botY - topY;\n                Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n                Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n                topX -= this.width + 2;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachment_height -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachment_height);\n        }\n        // If the connector is a thin double barline, draw the paralell line\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachment_height);\n        }\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        // Add stave connector text\n        for (let i = 0; i < this.texts.length; i++) {\n            const text = this.texts[i];\n            const text_width = ctx.measureText('' + text.content).width;\n            const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n            const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n            ctx.fillText('' + text.content, x, y + 4);\n        }\n        ctx.restore();\n    }\n}\nStaveConnector.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n/**\n * SINGLE_LEFT and SINGLE are the same value for compatibility\n * with older versions of vexflow which didn't have right sided\n * stave connectors.\n */\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\n/**\n * Connector type:\n * * \"singleRight\"\n * * \"singleLeft\"\n * * \"single\"\n * * \"double\"\n * * \"brace\"\n * * \"bracket\"\n * * \"boldDoubleLeft\"\n * * \"boldDoubleRight\"\n * * \"thinDouble\"\n * * \"none\"\n */\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\nexport { StaveConnector };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Beam } from './beam';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { ModifierContext } from './modifiercontext';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { isNote, isStaveNote } from './typeguard';\nimport { defined, log, midLine, RuntimeError, sumArray } from './util';\nimport { Voice } from './voice';\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts(voices, makeContext, addToContext) {\n    if (voices.length == 0)\n        return {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n    // Initialize tick maps.\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach((voice, voiceIndex) => {\n        // Use resolution multiplier as denominator so that no additional expansion\n        // of fractional tick values is needed.\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            // If we have no tick context for this tick, create one.\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                // Maintain a list of unique integerTicks.\n                tickList.push(integerTicks);\n            }\n            // Add this tickable to the TickContext.\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('Vex.Flow.Formatter', args);\n}\n/**\n * Get the rest line number of the next non-rest note(s).\n * @param notes array of Notes\n * @param currRestLine\n * @param currNoteIndex current note index\n * @param compare if true, return the midpoint between the current rest line and the next rest line\n * @returns a line number, which determines the vertical position of a rest.\n */\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    // If no valid next note group, nextRestLine is same as current.\n    let nextRestLine = currRestLine;\n    // Start with the next note and keep going until we find a valid non-rest note group.\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    // Locate the mid point between two lines.\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nclass Formatter {\n    /**\n     * Helper function to layout \"notes\" one after the other without\n     * regard for proportions. Useful for tests and debugging.\n     */\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tick = new TickContext().addTickable(note).preFormat();\n            const metrics = tick.getMetrics();\n            tick.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    /** Helper function to plot formatter debug info. */\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        options = Object.assign({ stavePadding: Tables.currentMusicFont().lookupMetric('stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    /**\n     * Helper function to format and draw a single voice. Returns a bounding\n     * box for the notation.\n     * @param ctx  the rendering context\n     * @param stave the stave to which to draw (`Stave` or `TabStave`)\n     * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n     * @param params one of below:\n     *    * Setting `autobeam` only `(context, stave, notes, true)` or\n     *      `(ctx, stave, notes, {autobeam: true})`\n     *    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n     *    * Setting both a struct is needed `(context, stave, notes, {\n     *      autobeam: true, align_rests: true})`\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            auto_beam: false,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.auto_beam = params;\n        }\n        // Start by creating a voice and adding all the notes to it.\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Then create beams, if requested.\n        const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n        // Instantiate a `Formatter` and format the notes.\n        new Formatter()\n            .joinVoices([voice]) // , { align_rests: options.align_rests })\n            .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n        // Render the voice and beams to the stave.\n        voice.setStave(stave).draw(ctx, stave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Return the bounding box of the voice.\n        return voice.getBoundingBox();\n    }\n    /**\n     * Helper function to format and draw aligned tab and stave notes in two\n     * separate staves.\n     * @param ctx the rendering context\n     * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n     * @param stave a `Stave` instance on which to render `Note`s.\n     * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n     * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n     * @param autobeam automatically generate beams.\n     * @param params a configuration object:\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n        let opts = {\n            auto_beam: autobeam,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.auto_beam = params;\n        }\n        // Create a `4/4` voice for `notes`.\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Create a `4/4` voice for `tabnotes`.\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        // Then create beams, if requested.\n        const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n        // Instantiate a `Formatter` and align tab and stave notes.\n        new Formatter()\n            .joinVoices([notevoice]) // , { align_rests: opts.align_rests })\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n        // Render voices and beams to staves.\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Draw a connector between tab and note staves.\n        new StaveConnector(stave, tabstave).setContext(ctx).draw();\n    }\n    /**\n     * Automatically set the vertical position of rests based on previous/next note positions.\n     * @param tickables an array of Tickables.\n     * @param alignAllNotes If `false`, only align rests that are within a group of beamed notes.\n     * @param alignTuplets If `false`, ignores tuplets.\n     */\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                // If activated rests not on default can be rendered as specified.\n                const position = currTickable.getGlyphProps().position.toUpperCase();\n                if (position !== 'R/4' && position !== 'B/4') {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    // Align rests with previous/next notes.\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        // If previous tickable is a rest, use its line number.\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                // Get the rest line for next valid non-rest note group.\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: Tables.SOFTMAX_FACTOR, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        // Minimum width required to render all the notes in the voices.\n        this.minTotalWidth = 0;\n        // This is set to `true` after `minTotalWidth` is calculated.\n        this.hasMinTotalWidth = false;\n        // Arrays of tick and modifier contexts.\n        this.tickContexts = {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n        this.modifierContexts = [];\n        // Gaps between contexts, for free movement of notes post\n        // formatting.\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    /**\n     * Find all the rests in each of the `voices` and align them to neighboring notes.\n     *\n     * @param voices\n     * @param alignAllNotes If `false`, only align rests within beamed groups of notes. If `true`, align all rests.\n     */\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    /**\n     * Estimate the width required to render 'voices'.  This is done by:\n     * 1. Sum the widths of all the tick contexts\n     * 2. Estimate the padding.\n     * The latter is done by calculating the padding 3 different ways, and taking the\n     * greatest value:\n     * 1. the padding required for unaligned notes in different voices\n     * 2. the padding based on the stddev of the tickable widths\n     * 3. the padding based on the stddev of the tickable durations.\n     *\n     * The last 2 quantities estimate a 'width entropy', where notes might need more\n     * room than the proportional formatting gives them.  A measure of all same duration\n     * and width will need no extra padding, and all these quantities will be\n     * zero in that case.\n     *\n     * Note: joinVoices has to be called before calling preCalculateMinTotalWidth.\n     *\n     * @param voices the voices that contain the notes\n     * @returns the estimated width in pixels\n     */\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Tables.currentMusicFont().lookupMetric('stave.unalignedNotePadding');\n        // Calculate additional padding based on 3 methods:\n        // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        // Cache results.\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        // Create tick contexts.\n        if (!voices) {\n            throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n        }\n        this.createTickContexts(voices);\n        // eslint-disable-next-line\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        // Go through each tick context and calculate total width,\n        // and also accumulate values used in padding hints\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            // If this TC doesn't have all the voices on it, it's unaligned.\n            // so increment the unaligned padding accumulator\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            // Calculate the 'width entropy' over all the Tickables.\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        // Find max of 3 methods pad the width with that\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    /**\n     * Get minimum width required to render all voices. Either `format` or\n     * `preCalculateMinTotalWidth` must be called before this method.\n     */\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    /** Calculate the resolution multiplier for `voices`. */\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    /** Create a `ModifierContext` for each tick in `voices`. */\n    createModifierContexts(voices) {\n        if (voices.length == 0)\n            return;\n        const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n        // Initialize tick maps.\n        const tickToContextMap = new Map();\n        const contexts = [];\n        // For each voice, extract notes and create a context for every\n        // new tick that hasn't been seen before.\n        voices.forEach((voice) => {\n            // Use resolution multiplier as denominator so that no additional expansion\n            // of fractional tick values is needed.\n            const ticksUsed = new Fraction(0, resolutionMultiplier);\n            voice.getTickables().forEach((tickable) => {\n                const integerTicks = ticksUsed.numerator;\n                let staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                // If we have no tick context for this tick, create one.\n                if (!staveTickToContextMap) {\n                    tickToContextMap.set(tickable.getStave(), {});\n                    staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                }\n                if (!(staveTickToContextMap ? staveTickToContextMap[integerTicks] : undefined)) {\n                    const newContext = new ModifierContext();\n                    contexts.push(newContext);\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    staveTickToContextMap[integerTicks] = newContext;\n                }\n                // Add this tickable to the TickContext.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tickable.addToModifierContext(staveTickToContextMap[integerTicks]);\n                ticksUsed.add(tickable.getTicks());\n            });\n        });\n        this.modifierContexts.push({\n            map: tickToContextMap,\n            array: contexts,\n            resolutionMultiplier,\n        });\n    }\n    /**\n     * Create a `TickContext` for each tick in `voices`. Also calculate the\n     * total number of ticks in voices.\n     */\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    /**\n     * Get the AlignmentContexts of TickContexts that were created by createTickContexts.\n     * Returns undefined if createTickContexts has not yet been run.\n     */\n    getTickContexts() {\n        return this.tickContexts;\n    }\n    /**\n     * This is the core formatter logic. Format voices and justify them\n     * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n     * that can't retrieve widths without a canvas. This method sets the `x` positions\n     * of all the tickables/notes in the formatter.\n     */\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        // Initialize context maps.\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        // Reset loss history for evaluator.\n        this.lossHistory = [];\n        // If voices and a stave were provided, set the Stave for each voice\n        // and preFormat to apply Y values to the notes;\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        // Now distribute the ticks to each tick context, and assign them their\n        // own X positions.\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        // Pass 1: Give each note maximum width requested by context.\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            // Make sure that all tickables in this context have calculated their\n            // space requirements.\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            // Calculate shift for the next tick.\n            shift = width - metrics.totalLeftPx;\n        });\n        // Use softmax based on all notes across all staves. (options.globalSoftmax)\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        // No justification needed. End formatting.\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        // Start justification. Subtract the right extra pixels of the final context because the formatter\n        // justifies based on the context's X position, which is the left-most part of the note head.\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n        // the softmax of the ticks.\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    // Go through each tickable and search backwards for another tickable\n                    // in the same voice. If found, use that duration (ticks) to calculate\n                    // the expected distance.\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        // Look for matching voices between tick contexts.\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            // Found matching voices, get largest duration\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                // Calculate the limits of the shift based on modifiers, etc.\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                // Don't allow shifting if notes in the same voice can collide\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n                            // so that two different tick contexts don't align across staves.\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            // Calculate the expected distance of the current context from the last matching tickable. The\n                            // distance is scaled down by the softmax for the voice.\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            // Distribute ticks to the contexts based on the calculated distance error.\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                // Move center aligned tickables to middle\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const musicFont = Tables.currentMusicFont();\n        const configMinPadding = musicFont.lookupMetric('stave.endPaddingMin');\n        const configMaxPadding = musicFont.lookupMetric('stave.endPaddingMax');\n        const leftPadding = musicFont.lookupMetric('stave.padding');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        // Just one context. Done formatting.\n        if (contextList.length === 1)\n            return 0;\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        // right justify to either the configured padding, or the min distance between notes, whichever is greatest.\n        // This * 2 keeps the existing formatting unless there is 'a lot' of extra whitespace, which won't break\n        // existing visual regression tests.\n        const paddingMaxCalc = (curTargetWidth) => {\n            let lastTickablePadding = 0;\n            const lastTickable = lastContext && lastContext.getMaxTickable();\n            if (lastTickable) {\n                const voice = lastTickable.getVoice();\n                // If the number of actual ticks in the measure <> configured ticks, right-justify\n                // because the softmax won't yield the correct value\n                if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n                    return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n                }\n                const tickWidth = lastTickable.getWidth();\n                lastTickablePadding =\n                    voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n            }\n            return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n        };\n        let paddingMax = paddingMaxCalc(targetWidth);\n        let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        // Adjust justification width until the right margin is as close as possible to the calculated padding,\n        // without going over\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            paddingMax = paddingMaxCalc(targetWidth);\n            paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    /** Calculate the total cost of this formatting decision. */\n    evaluate() {\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        // Calculate available slack per tick context. This works out how much freedom\n        // to move a context has in either direction, without affecting other notes.\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            // Calculate X position of right edge of previous note\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            // Calculate X position of left edge of current note\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            // Tell the tick contexts how much they can reposition themselves.\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        // Calculate mean distance in each voice for each duration type, then calculate\n        // how far each note is from the mean.\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1 };\n            }\n            else {\n                stats.count += 1;\n                stats.mean = (stats.mean + space) / 2;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        // Calculate how much each note deviates from the mean. Loss function is square\n        // root of the sum of squared deviations.\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    /**\n     * Run a single iteration of rejustification. At a high level, this method calculates\n     * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n     * attempt to reduce the cost. You can call this method multiple times until it finds\n     * and oscillates around a global minimum.\n     * @param options[alpha] the \"learning rate\" for the formatter. It determines how much of a shift\n     * the formatter should make based on its cost function.\n     */\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n        // on adjacent tickcontexts.\n        function move(current, shift, prev, next) {\n            current.setX(current.getX() + shift);\n            current.getFormatterMetrics().freedom.left += shift;\n            current.getFormatterMetrics().freedom.right -= shift;\n            if (prev)\n                prev.getFormatterMetrics().freedom.right += shift;\n            if (next)\n                next.getFormatterMetrics().freedom.left -= shift;\n        }\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            move(context, shift, prevContext, nextContext);\n            const cost = -sumArray(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    /**\n     * This is the top-level call for all formatting logic completed\n     * after `x` *and* `y` values have been computed for the notes\n     * in the voices.\n     */\n    postFormat() {\n        this.modifierContexts.forEach((modifierContexts) => {\n            modifierContexts.array.forEach((mc) => mc.postFormat());\n        });\n        this.tickContexts.list.forEach((tick) => {\n            this.tickContexts.map[tick].postFormat();\n        });\n        return this;\n    }\n    /**\n     * Take all `voices` and create `ModifierContext`s out of them. This tells\n     * the formatters that the voices belong on a single stave.\n     */\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    /**\n     * Align rests in voices, justify the contexts, and position the notes\n     * so voices are aligned and ready to render onto the stave. This method\n     * mutates the `x` positions of all tickables in `voices`.\n     *\n     * Voices are full justified to fit in `justifyWidth` pixels.\n     *\n     * Set `options.context` to the rendering context. Set `options.align_rests`\n     * to true to enable rest alignment.\n     */\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ align_rests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.align_rests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        // Only postFormat if a stave was supplied for y value formatting\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    // This method is just like `format` except that the `justifyWidth` is inferred from the `stave`.\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        // eslint-disable-next-line\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nFormatter.DEBUG = false;\nexport { Formatter };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var TupletLocation;\n(function (TupletLocation) {\n    TupletLocation[TupletLocation[\"BOTTOM\"] = -1] = \"BOTTOM\";\n    TupletLocation[TupletLocation[\"TOP\"] = 1] = \"TOP\";\n})(TupletLocation || (TupletLocation = {}));\nexport class Tuplet extends Element {\n    static get CATEGORY() {\n        return Category.Tuplet;\n    }\n    static get LOCATION_TOP() {\n        return TupletLocation.TOP;\n    }\n    static get LOCATION_BOTTOM() {\n        return TupletLocation.BOTTOM;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    static get metrics() {\n        const tupletMetrics = Tables.currentMusicFont().getMetrics().tuplet;\n        if (!tupletMetrics)\n            throw new RuntimeError('BadMetrics', `tuplet missing`);\n        return tupletMetrics;\n    }\n    constructor(notes, options = {}) {\n        super();\n        this.numerator_glyphs = [];\n        this.denom_glyphs = [];\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.options = options;\n        this.notes = notes;\n        this.num_notes = this.options.num_notes != undefined ? this.options.num_notes : notes.length;\n        // We accept beats_occupied, but warn that it's deprecated:\n        // the preferred property name is now notes_occupied.\n        if (this.options.beats_occupied) {\n            this.beatsOccupiedDeprecationWarning();\n        }\n        this.notes_occupied = this.options.notes_occupied || this.options.beats_occupied || 2;\n        if (this.options.bracketed != undefined) {\n            this.bracketed = this.options.bracketed;\n        }\n        else {\n            this.bracketed = notes.some((note) => !note.hasBeam());\n        }\n        this.ratioed =\n            this.options.ratioed != undefined ? this.options.ratioed : Math.abs(this.notes_occupied - this.num_notes) > 1;\n        this.point = (Tables.NOTATION_FONT_SCALE * 3) / 5;\n        this.y_pos = 16;\n        this.x_pos = 100;\n        this.width = 200;\n        this.setTupletLocation(this.options.location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    /**\n     * Set whether or not the bracket is drawn.\n     */\n    setBracketed(bracketed) {\n        this.bracketed = !!bracketed;\n        return this;\n    }\n    /**\n     * Set whether or not the ratio is shown.\n     */\n    setRatioed(ratioed) {\n        this.ratioed = !!ratioed;\n        return this;\n    }\n    /**\n     * Set the tuplet indicator to be displayed either on the top or bottom of the stave.\n     */\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            // eslint-disable-next-line\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.num_notes;\n    }\n    beatsOccupiedDeprecationWarning() {\n        // eslint-disable-next-line\n        console.warn('beats_occupied has been deprecated as an option for tuplets. Please use notes_occupied instead.', 'Calls to getBeatsOccupied / setBeatsOccupied should now be routed to getNotesOccupied / setNotesOccupied.', 'The old methods will be removed in VexFlow 5.0.');\n    }\n    getBeatsOccupied() {\n        this.beatsOccupiedDeprecationWarning();\n        return this.getNotesOccupied();\n    }\n    setBeatsOccupied(beats) {\n        this.beatsOccupiedDeprecationWarning();\n        return this.setNotesOccupied(beats);\n    }\n    getNotesOccupied() {\n        return this.notes_occupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.notes_occupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        this.numerator_glyphs = [];\n        let n = this.num_notes;\n        while (n >= 1) {\n            this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n        this.denom_glyphs = [];\n        n = this.notes_occupied;\n        while (n >= 1) {\n            this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n    }\n    // determine how many tuplets are nested within this tuplet\n    // on the same side (above/below), to calculate a y\n    // offset for this tuplet:\n    getNestedTupletCount() {\n        const location = this.location;\n        const first_note = this.notes[0];\n        let maxTupletCount = countTuplets(first_note, location);\n        let minTupletCount = countTuplets(first_note, location);\n        // Count the tuplets that are on the same side (above/below)\n        // as this tuplet:\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    // determine the y position of the tuplet:\n    getYPosition() {\n        // offset the tuplet for any nested tuplets between\n        // it and the notes:\n        const nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n        // offset the tuplet for any manual y_offset:\n        const y_offset = this.options.y_offset || 0;\n        // now iterate through the notes and find our highest\n        // or lowest locations, to form a base y_pos\n        const first_note = this.notes[0];\n        let y_pos;\n        if (this.location === Tuplet.LOCATION_TOP) {\n            y_pos = first_note.checkStave().getYForLine(0) - Tuplet.metrics.topModifierOffset;\n            // check modifiers above note to see if they will collide with tuplet beam\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().top_text_line);\n                }\n                const modY = note.getYForTopText(modLines) - Tuplet.metrics.noteHeadOffset;\n                if (note.hasStem() || note.isRest()) {\n                    const top_y = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tuplet.metrics.stemOffset\n                        : note.getStemExtents().baseY - Tuplet.metrics.noteHeadOffset;\n                    y_pos = Math.min(top_y, y_pos);\n                    if (modLines > 0) {\n                        y_pos = Math.min(modY, y_pos);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = Tuplet.metrics.bottomLine; // tuplet default on line 4\n            // check modifiers below note to see if they will collide with tuplet beam\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().text_line + 1);\n                }\n            });\n            y_pos = first_note.checkStave().getYForLine(lineCheck) + Tuplet.metrics.noteHeadOffset;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + Tuplet.metrics.noteHeadOffset\n                        : this.notes[i].getStemExtents().topY + Tuplet.metrics.stemOffset;\n                    if (bottom_y > y_pos) {\n                        y_pos = bottom_y;\n                    }\n                }\n            }\n        }\n        return y_pos + nested_tuplet_y_offset + y_offset;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        // determine x value of left bound of tuplet\n        const first_note = this.notes[0];\n        const last_note = this.notes[this.notes.length - 1];\n        if (!this.bracketed) {\n            this.x_pos = first_note.getStemX();\n            this.width = last_note.getStemX() - this.x_pos;\n        }\n        else {\n            this.x_pos = first_note.getTieLeftX() - 5;\n            this.width = last_note.getTieRightX() - this.x_pos + 5;\n        }\n        // determine y value for tuplet\n        this.y_pos = this.getYPosition();\n        const addGlyphWidth = (width, glyph) => width + defined(glyph.getMetrics().width);\n        // calculate total width of tuplet notation\n        let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n        if (this.ratioed) {\n            width = this.denom_glyphs.reduce(addGlyphWidth, width);\n            width += this.point * 0.32;\n        }\n        const notation_center_x = this.x_pos + this.width / 2;\n        const notation_start_x = notation_center_x - width / 2;\n        // draw bracket if the tuplet is not beamed\n        if (this.bracketed) {\n            const line_width = this.width / 2 - width / 2 - 5;\n            // only draw the bracket if it has positive length\n            if (line_width > 0) {\n                ctx.fillRect(this.x_pos, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n                ctx.fillRect(this.x_pos + this.width, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n            }\n        }\n        // draw numerator glyphs\n        const shiftY = Tables.currentMusicFont().lookupMetric('digits.shiftY', 0);\n        let x_offset = 0;\n        this.numerator_glyphs.forEach((glyph) => {\n            glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n            x_offset += defined(glyph.getMetrics().width);\n        });\n        // display colon and denominator if the ratio is to be shown\n        if (this.ratioed) {\n            const colon_x = notation_start_x + x_offset + this.point * 0.16;\n            const colon_radius = this.point * 0.06;\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n            x_offset += this.point * 0.32;\n            this.denom_glyphs.forEach((glyph) => {\n                glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n                x_offset += defined(glyph.getMetrics().width);\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TupletLocation } from './tuplet';\nimport { Category, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n    static get CATEGORY() {\n        return Category.Beam;\n    }\n    /** Get the direction of the beam */\n    getStemDirection() {\n        return this.stem_direction;\n    }\n    /**\n     * Get the default beam groups for a provided time signature.\n     * Attempt to guess if the time signature is not found in table.\n     * Currently this is fairly naive.\n     */\n    static getDefaultBeamGroups(time_sig) {\n        if (!time_sig || time_sig === 'c') {\n            time_sig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[time_sig];\n        if (groups === undefined) {\n            // If no beam groups found, naively determine\n            // the beam groupings from the time signature\n            const beatTotal = parseInt(time_sig.split('/')[0], 10);\n            const beatValue = parseInt(time_sig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    /**\n     * A helper function to automatically build basic beams for a voice. For more\n     * complex auto-beaming use `Beam.generateBeams()`.\n     * @param voice the voice to generate the beams for\n     * @param stem_direction a stem direction to apply to the entire voice\n     * @param groups an array of `Fraction` representing beat groupings for the beam\n     */\n    static applyAndGetBeams(voice, stem_direction, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stem_direction });\n    }\n    /**\n     * A helper function to autimatically build beams for a voice with\n     * configuration options.\n     *\n     * Example configuration object:\n     *\n     * ```\n     * config = {\n     *   groups: [new Vex.Flow.Fraction(2, 8)],\n     *   stem_direction: -1,\n     *   beam_rests: true,\n     *   beam_middle_only: true,\n     *   show_stemlets: false\n     * };\n     * ```\n     * @param notes an array of notes to create the beams for\n     * @param config the configuration object\n     * @param config.stem_direction set to apply the same direction to all notes\n     * @param config.beam_rests set to `true` to include rests in the beams\n     * @param config.beam_middle_only set to `true` to only beam rests in the middle of the beat\n     * @param config.show_stemlets set to `true` to draw stemlets for rests\n     * @param config.maintain_stem_directions set to `true` to not apply new stem directions\n     * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n     *\n     */\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        // Convert beam groups to tick amounts\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(vf_notes) {\n            return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            // number of ticks in current group\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return; // Ignore untickables (like bar notes)\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                // Double the amount of ticks in a group, if it's an unbeamable tuplet\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                // If the note that was just added overflows the group tick total\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    // If the overflow note can be beamed, start the next group\n                    // with it. Unbeamable notes leave the group overflowed.\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    // We have overflown, so we're going to next tick group. As we might have\n                    // overflown by more than 1 group, we need to go forward as many times as\n                    // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n                    // in current groups as we go forward.\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            // Adds any remainder notes beam\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        // Splits up groups by Rest\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beam_rests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    // Determine if the group should be broken at this note\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        // Add current group\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        // Start a new group. Include the current note if the group\n                        // was broken up by stem direction, as that note needs to start\n                        // the next group of notes\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        // Add note to group\n                        tempGroup.push(note);\n                    }\n                });\n                // If there is a remaining group, add it as well\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintain_stem_directions) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stem_direction) {\n                        stemDirection = config.stem_direction;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        // Get all of the tuplets in all of the note groups\n        function getTuplets() {\n            const uniqueTuplets = [];\n            // Go through all of the note groups and inspect for tuplets\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        // Using closures to store the variables throughout the various functions\n        // IMO Keeps it this process lot cleaner - but not super consistent with\n        // the rest of the API's style - Silverwolf90 (Cyril)\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        // Get the notes to be beamed\n        const beamedNoteGroups = getBeamGroups();\n        // Get the tuplets in order to format them accurately\n        const allTuplets = getTuplets();\n        // Create a Vex.Flow.Beam from each group of notes to be beamed\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.show_stemlets) {\n                beam.render_options.show_stemlets = true;\n            }\n            if (config.secondary_breaks) {\n                beam.render_options.secondary_break_ticks = Tables.durationToTicks(config.secondary_breaks);\n            }\n            if (config.flat_beams === true) {\n                beam.render_options.flat_beams = true;\n                beam.render_options.flat_beam_offset = config.flat_beam_offset;\n            }\n            beams.push(beam);\n        });\n        // Reformat tuplets\n        allTuplets.forEach((tuplet) => {\n            // Set the tuplet location based on the stem direction\n            const direction = tuplet.notes[0].stem_direction === Stem.DOWN ? TupletLocation.BOTTOM : TupletLocation.TOP;\n            tuplet.setTupletLocation(direction);\n            // If any of the notes in the tuplet are not beamed, draw a bracket.\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    constructor(notes, auto_stem = false) {\n        super();\n        this.slope = 0;\n        this.y_shift = 0;\n        /**\n         * Overrides to default beam directions for secondary-level beams that do not\n         * connect to any other note. See further explanation at\n         * `setPartialBeamSideAt`\n         */\n        this.forcedPartialDirections = {};\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        // Validate beam line, direction and ticks.\n        this.ticks = notes[0].getIntrinsicTicks();\n        if (this.ticks >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i; // shared iterator\n        let note;\n        this.stem_direction = notes[0].getStemDirection();\n        let stem_direction = this.stem_direction;\n        // Figure out optimal stem direction based on given notes\n        if (auto_stem && isStaveNote(notes[0])) {\n            stem_direction = calculateStemDirection(notes);\n        }\n        else if (auto_stem && isTabNote(notes[0])) {\n            // Auto Stem TabNotes\n            const stem_weight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        // Apply stem directions and attach beam to notes\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (auto_stem) {\n                note.setStemDirection(stem_direction);\n                this.stem_direction = stem_direction;\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        this.beam_count = this.getBeamCount();\n        this.break_on_indices = [];\n        this.render_options = {\n            beam_width: 5,\n            max_slope: 0.25,\n            min_slope: -0.25,\n            slope_iterations: 20,\n            slope_cost: 100,\n            show_stemlets: false,\n            stemlet_extension: 7,\n            partial_beam_length: 10,\n            flat_beams: false,\n            min_flat_beam_offset: 15,\n        };\n    }\n    /** Get the notes in this beam. */\n    getNotes() {\n        return this.notes;\n    }\n    /** Get the max number of beams in the set of notes. */\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyphProps().beam_count);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    /** Set which note `indices` to break the secondary beam at. */\n    breakSecondaryAt(indices) {\n        this.break_on_indices = indices;\n        return this;\n    }\n    /**\n     * Forces the direction of a partial beam (a secondary-level beam that exists\n     * on one note only of the beam group). This is useful in rhythms such as 6/8\n     * eighth-sixteenth-eighth-sixteenth, where the direction of the beam on the\n     * first sixteenth note can help imply whether the rhythm is to be felt as\n     * three groups of eighth notes (typical) or as two groups of three-sixteenths\n     * (less common):\n     * ```\n     *  ┌───┬──┬──┐      ┌──┬──┬──┐\n     *  │   ├─ │ ─┤  vs  │ ─┤  │ ─┤\n     *  │   │  │  │      │  │  │  │\n     * ```\n     */\n    setPartialBeamSideAt(noteIndex, side) {\n        this.forcedPartialDirections[noteIndex] = side;\n        return this;\n    }\n    /**\n     * Restore the default direction of a partial beam (a secondary-level beam\n     * that does not connect to any other notes).\n     */\n    unsetPartialBeamSideAt(noteIndex) {\n        delete this.forcedPartialDirections[noteIndex];\n        return this;\n    }\n    /** Return the y coordinate for linear function. */\n    getSlopeY(x, first_x_px, first_y_px, slope) {\n        return first_y_px + (x - first_x_px) * slope;\n    }\n    /** Calculate the best possible slope for the provided notes. */\n    calculateSlope() {\n        const { notes, stem_direction: stemDirection, render_options: { max_slope, min_slope, slope_iterations, slope_cost }, } = this;\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (max_slope - min_slope) / slope_iterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        // iterate through slope values to find best weighted fit\n        for (let slope = min_slope; slope <= max_slope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            // iterate through notes, calculating y shift and stem extension\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    // beam needs to be shifted up to accommodate note\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        // beam overshoots note, account for the difference\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            // most engraving books suggest aiming for a slope about half the angle of the\n            // difference between the first and last notes' stem length;\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            // This tries to align most beams to something closer to the idealSlope, but\n            // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n            const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n            // update state when a more ideal slope is found\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        this.y_shift = yShift;\n    }\n    /** Calculate a slope and y-shift for flat beams. */\n    calculateFlatSlope() {\n        const { notes, stem_direction, render_options: { beam_width, min_flat_beam_offset, flat_beam_offset }, } = this;\n        // If a flat beam offset has not yet been supplied or calculated,\n        // generate one based on the notes in this particular note group\n        let total = 0;\n        let extremeY = 0; // Store the highest or lowest note here\n        let extremeBeamCount = 0; // The beam count of the extreme note\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            // Total up all of the offsets so we can average them out later\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            // Store the highest (stems-up) or lowest (stems-down) note so the\n            //  offset can be adjusted in case the average isn't enough\n            if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        // Average the offsets to try and come up with a reasonable one that\n        //  works for all of the notes in the beam group.\n        let offset = total / notes.length;\n        // In case the average isn't long enough, add or subtract some more\n        //  based on the highest or lowest note (again, based on the stem\n        //  direction). This also takes into account the added height due to\n        //  the width of the beams.\n        const beamWidth = beam_width * 1.5;\n        const extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n        const newOffset = extremeY + extremeTest * -stem_direction;\n        if (stem_direction === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stem_direction === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flat_beam_offset) {\n            // Set the offset for the group based on the calculations above.\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        // for flat beams, the slope and y_shift are simply 0\n        this.slope = 0;\n        this.y_shift = 0;\n    }\n    /** Return the Beam y offset. */\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        // For flat beams, set the first and last Y to the offset, rather than\n        //  using the note's stem extents.\n        if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n            beamY = this.render_options.flat_beam_offset;\n        }\n        return beamY;\n    }\n    /**\n     * Create new stems for the notes in the beam, so that each stem\n     * extends into the beams.\n     */\n    applyStemExtensions() {\n        const { notes, slope, y_shift, beam_count, render_options: { show_stemlets, stemlet_extension, beam_width }, } = this;\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = note.getStemDirection() === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                // Determine necessary extension for cross-stave notes in the beam group\n                let crossStemExtension = 0;\n                if (note.getStemDirection() !== this.stem_direction) {\n                    const beamCount = note.getGlyphProps().beam_count;\n                    crossStemExtension = (1 + (beamCount - 1) * 1.5) * this.render_options.beam_width;\n                    /* This will be required if the partial beams are moved to the note side.\n                    if (i > 0 && note.getGlyph().beam_count > 1) {\n                      const prevBeamCount = this.notes[i - 1].getGlyph().beam_count;\n                      const beamDiff = Math.abs(prevBeamCount - beamCount);\n                      if (beamDiff > 0) crossStemExtension -= beamDiff * (this.render_options.beam_width * 1.5);\n                    }\n                    */\n                }\n                stem.setExtension(preBeamExtension + beamExtension + crossStemExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && show_stemlets) {\n                    const beamWidth = beam_width;\n                    const totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n                }\n            }\n        }\n    }\n    /** Return upper level beam direction. */\n    lookupBeamDirection(duration, prev_tick, tick, next_tick, noteIndex) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const forcedBeamDirection = this.forcedPartialDirections[noteIndex];\n        if (forcedBeamDirection)\n            return forcedBeamDirection;\n        const lookup_duration = `${Tables.durationToNumber(duration) / 2}`;\n        const prev_note_gets_beam = prev_tick < Tables.durationToTicks(lookup_duration);\n        const next_note_gets_beam = next_tick < Tables.durationToTicks(lookup_duration);\n        const note_gets_beam = tick < Tables.durationToTicks(lookup_duration);\n        if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_BOTH;\n        }\n        else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n            return BEAM_LEFT;\n        }\n        else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick, noteIndex);\n    }\n    /** Get the x coordinates for the beam lines of specific `duration`. */\n    getBeamLines(duration) {\n        const tick_of_duration = Tables.durationToTicks(duration);\n        let beam_started = false;\n        const beam_lines = [];\n        let current_beam = undefined;\n        const partial_beam_length = this.render_options.partial_beam_length;\n        let previous_should_break = false;\n        let tick_tally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            // See if we need to break secondary beams on this note.\n            const ticks = note.getTicks().value();\n            tick_tally += ticks;\n            let should_break = false;\n            // 8th note beams are always drawn.\n            if (parseInt(duration, 10) >= 8) {\n                // First, check to see if any indices were set up through breakSecondaryAt()\n                should_break = this.break_on_indices.indexOf(i) !== -1;\n                // If the secondary breaks were auto-configured in the render options,\n                //  handle that as well.\n                if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n                    tick_tally = 0;\n                    should_break = true;\n                }\n            }\n            const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n            const stem_x = note.getStemX() - Stem.WIDTH / 2;\n            // Check to see if the next note in the group will get a beam at this\n            //  level. This will help to inform the partial beam logic below.\n            const prev_note = this.notes[i - 1];\n            const next_note = this.notes[i + 1];\n            const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n            const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n            const beam_alone = prev_note && next_note && note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            if (note_gets_beam) {\n                // This note gets a beam at the current level\n                if (beam_started) {\n                    // We're currently in the middle of a beam. Just continue it on to\n                    //  the stem X of the current note.\n                    current_beam = beam_lines[beam_lines.length - 1];\n                    current_beam.end = stem_x;\n                    // If a secondary beam break is set up, end the beam right now.\n                    if (should_break) {\n                        beam_started = false;\n                        if (next_note && !next_note_gets_beam && current_beam.end === undefined) {\n                            // This note gets a beam,.but the next one does not. This means\n                            //  we need a partial pointing right.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                }\n                else {\n                    // No beam started yet. Start a new one.\n                    current_beam = { start: stem_x, end: undefined };\n                    beam_started = true;\n                    if (beam_alone) {\n                        // previous and next beam exists and does not get a beam but current gets it.\n                        const prev_tick = prev_note.getIntrinsicTicks();\n                        const next_tick = next_note.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick, i);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                        else {\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                    }\n                    else if (!next_note_gets_beam) {\n                        // The next note doesn't get a beam. Draw a partial.\n                        if ((previous_should_break || i === 0) && next_note) {\n                            // This is the first note (but not the last one), or it is\n                            //  following a secondary break. Draw a partial to the right.\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                        else {\n                            // By default, draw a partial to the left.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                    else if (should_break) {\n                        // This note should have a secondary break after it. Even though\n                        //  we just started a beam, it needs to end immediately.\n                        current_beam.end = current_beam.start - partial_beam_length;\n                        beam_started = false;\n                    }\n                    beam_lines.push(current_beam);\n                }\n            }\n            else {\n                // The current note does not get a beam.\n                beam_started = false;\n            }\n            // Store the secondary break flag to inform the partial beam logic in\n            //  the next iteration of the loop.\n            previous_should_break = should_break;\n        }\n        // Add a partial beam pointing left if this is the last note in the group\n        const last_beam = beam_lines[beam_lines.length - 1];\n        if (last_beam && last_beam.end === undefined) {\n            last_beam.end = last_beam.start - partial_beam_length;\n        }\n        return beam_lines;\n    }\n    /** Render the stems for each note. */\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                const stem_x = note.getStemX();\n                stem.setNoteHeadXBounds(stem_x, stem_x);\n                stem.setContext(ctx).draw();\n            }\n        }, this);\n    }\n    // Render the beam lines\n    drawBeamLines(ctx) {\n        const valid_beam_durations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.render_options.beam_width * this.stem_direction;\n        // Draw the beams.\n        for (let i = 0; i < valid_beam_durations.length; ++i) {\n            const duration = valid_beam_durations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beam_line = beamLines[j];\n                const startBeamX = beam_line.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beam_line.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    /** Pre-format the beam. */\n    preFormat() {\n        return this;\n    }\n    /**\n     * Post-format the beam. This can only be called after\n     * the notes in the beam have both `x` and `y` values. ie: they've\n     * been formatted and have staves.\n     */\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        // Calculate a smart slope if we're not forcing the beams to be flat.\n        if (isTabNote(this.notes[0]) || this.render_options.flat_beams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    /** Render the beam to the canvas context */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (this.unbeamable)\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        this.drawStems(ctx);\n        this.applyStyle();\n        ctx.openGroup('beam', this.getAttribute('id'));\n        this.drawBeamLines(ctx);\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n// MIT License\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n    static get CATEGORY() {\n        return Category.ClefNote;\n    }\n    constructor(type, size, annotation) {\n        super({ duration: 'b' });\n        this.type = type;\n        const clef = new Clef(type, size, annotation);\n        this.clef = clef.clef;\n        this.annotation = clef.annotation;\n        this.size = size === undefined ? 'default' : size;\n        this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clefNote_${this.size}`));\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.size = size;\n        const clef = new Clef(type, size, annotation);\n        this.clef = clef.clef;\n        this.annotation = clef.annotation;\n        this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clefNote_${this.size}`));\n        return this;\n    }\n    /** Get associated clef. */\n    getClef() {\n        return this.clef;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render clef note. */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        const abs_x = this.getAbsoluteX();\n        Glyph.renderGlyph(ctx, abs_x, stave.getYForLine(this.clef.line), Clef.getPoint(this.size), this.clef.code, {\n            category: `clefNote_${this.size}`,\n        });\n        // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n        if (this.annotation !== undefined) {\n            const attachment = new Glyph(this.annotation.code, this.annotation.point);\n            attachment.setContext(ctx);\n            attachment.setStave(stave);\n            attachment.setYShift(stave.getYForLine(this.annotation.line) - stave.getYForGlyphs());\n            attachment.setXShift(this.annotation.x_shift);\n            attachment.renderToStave(abs_x);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('Vex.Flow.Crescendo', args);\n}\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n    const begin_x = params.begin_x;\n    const end_x = params.end_x;\n    const y = params.y;\n    const half_height = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(begin_x, y - half_height);\n        ctx.lineTo(end_x, y);\n        ctx.lineTo(begin_x, y + half_height);\n    }\n    else {\n        ctx.moveTo(end_x, y - half_height);\n        ctx.lineTo(begin_x, y);\n        ctx.lineTo(end_x, y + half_height);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nclass Crescendo extends Note {\n    /** Crescendo category string. */\n    static get CATEGORY() {\n        return Category.Crescendo;\n    }\n    // Initialize the crescendo's properties\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.options = {\n            // Extensions to the length of the crescendo on either side\n            extend_left: 0,\n            extend_right: 0,\n            // Vertical shift\n            y_shift: 0,\n        };\n        // Whether the object is a decrescendo\n        this.decrescendo = false;\n        // The staff line to be placed on\n        this.line = noteStruct.line || 0;\n        // The height at the open end of the cresc/decresc\n        this.height = 15;\n    }\n    // Set the line to center the element on\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Set the full height at the open end\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    // Set whether the sign should be a descresendo by passing a bool\n    // to `decresc`\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    // Preformat the note\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    // Render the Crescendo object onto the canvas\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tick_context = this.getTickContext();\n        const next_context = TickContext.getNextContext(tick_context);\n        const begin_x = this.getAbsoluteX();\n        const end_x = next_context ? next_context.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n        renderHairpin(ctx, {\n            begin_x: begin_x - this.options.extend_left,\n            end_x: end_x + this.options.extend_right,\n            y: y + this.options.y_shift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\nexport { Crescendo };\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    static get CATEGORY() {\n        return Category.Curve;\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    // from: Start note\n    // to: End note\n    // options:\n    //    cps: List of control points\n    //    x_shift: pixels to shift\n    //    y_shift: pixels to shift\n    constructor(from, to, options) {\n        super();\n        this.render_options = Object.assign({ thickness: 2, x_shift: 0, y_shift: 10, position: CurvePosition.NEAR_HEAD, position_end: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ] }, options);\n        this.from = from;\n        this.to = to;\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        const ctx = this.checkContext();\n        const x_shift = this.render_options.x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        const first_x = params.first_x + x_shift;\n        const first_y = params.first_y + y_shift;\n        const last_x = params.last_x - x_shift;\n        const last_y = params.last_y + y_shift;\n        const thickness = this.render_options.thickness;\n        const cps = this.render_options.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const cp_spacing = (last_x - first_x) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(first_x, first_y);\n        ctx.bezierCurveTo(first_x + cp_spacing + cp0x, first_y + cp0y * params.direction, last_x - cp_spacing + cp1x, last_y + cp1y * params.direction, last_x, last_y);\n        ctx.bezierCurveTo(last_x - cp_spacing + cp1x, last_y + (cp1y + thickness) * params.direction, first_x + cp_spacing + cp0x, first_y + (cp0y + thickness) * params.direction, first_x, first_y);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.from;\n        const last_note = this.to;\n        let first_x;\n        let last_x;\n        let first_y;\n        let last_y;\n        let stem_direction = 0;\n        let metric = 'baseY';\n        let end_metric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.render_options.position);\n        const position_end = getPosition(this.render_options.position_end);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            end_metric = 'topY';\n        }\n        if (position_end === CurvePosition.NEAR_HEAD) {\n            end_metric = 'baseY';\n        }\n        else if (position_end === CurvePosition.NEAR_TOP) {\n            end_metric = 'topY';\n        }\n        if (first_note) {\n            first_x = first_note.getTieRightX();\n            stem_direction = first_note.getStemDirection();\n            first_y = first_note.getStemExtents()[metric];\n        }\n        else {\n            const stave = last_note.checkStave();\n            first_x = stave.getTieStartX();\n            first_y = last_note.getStemExtents()[metric];\n        }\n        if (last_note) {\n            last_x = last_note.getTieLeftX();\n            stem_direction = last_note.getStemDirection();\n            last_y = last_note.getStemExtents()[end_metric];\n        }\n        else {\n            const stave = first_note.checkStave();\n            last_x = stave.getTieEndX();\n            last_y = first_note.getStemExtents()[end_metric];\n        }\n        this.renderCurve({\n            first_x,\n            last_x,\n            first_y,\n            last_y,\n            direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('Vex.Flow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString; // string\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches); // nested array\n}\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nclass Parser {\n    // For an example of a simple grammar, take a look at tests/parser_tests.ts or\n    // the EasyScore grammar in easyscore.ts.\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Parse `line` using current grammar. Returns `{success: true}` if the\n    // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n    // where `errorPos` is the location of the error in the string.\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Look for `token` in this.line[this.pos], and return success\n    // if one is found. `token` is specified as a regular expression.\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n    // set, then return success even if the token is not found, but reset\n    // the position before exiting.\n    // TODO: expectOne(...) is never called with the `maybe` parameter.\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        // Execute all sub rules in sequence.\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                // If `rule.or` is set, then return success if any one\n                // of the subrules match, else all subrules must match.\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n    // then a failed match is also a success (but the position is reset).\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    // Execute the rule produced by the provided `rules` function. This\n    // offloads to one of the above matchers and consolidates the results. It is also\n    // responsible for executing any code triggered by the rule (in `rule.run`.)\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        // Get rule from Grammar class.\n        // expect(...) handles both lexing & parsing:\n        // - lexer rules produce tokens.\n        // - parser rules produce expressions which may trigger code via the\n        //   { run: () => ... } trigger functions in easyscore.ts.\n        //   These functions build the VexFlow objects that are displayed on screen.\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            // A lexer rule has a `token` property.\n            // Base case: parse the regex and throw an error if the\n            // line doesn't match.\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                // Token match! Update position and throw away parsed portion\n                // of string.\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            // A parser rule has an `expect` property.\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        // If there's a trigger attached to this rule, then run it.\n        // Make the matches accessible through `state.matches` in the\n        // `run: (state) => ...` trigger.\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\nexport { Parser };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Articulation } from './articulation';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Music } from './music';\nimport { Parser } from './parser';\nimport { Stem } from './stem';\nimport { defined, log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('Vex.Flow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                // eslint-disable-next-line\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    // notes is an array with 3 entries\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n); // n => [string, string | null, string]\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n        // e.g., auto | up | down\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        // e.g., treble | bass\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        // Create a string[] that will be assigned to the .keys property of the StaveNote.\n        // Each string in the array represents a note pitch and is of the form: {NoteName}{Accidental}/{Octave}\n        // Only standard accidentals are included in the .keys property. Microtonal accidentals are not included.\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const auto_stem = stem === 'auto'; // StaveNoteStruct expects the underscore & lowercase.\n        // Build a GhostNote or StaveNote using the information we gathered.\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) == 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, auto_stem });\n        if (!auto_stem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        // Attach accidentals.\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(accidental, index);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        // Attach dots.\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\n// Used by setClass() below.\nconst commaSeparatedRegex = /\\s*,\\s*/;\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\n/**\n * EasyScore implements a parser for a simple language to generate VexFlow objects.\n */\nclass EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Set the score defaults.\n     * clef must be set appropriately to avoid errors when adding Staves.\n     * @param defaults.clef default clef ( treble | bass ...) see {@link Clef.types}\n     * @param defaults.time default time signature ( 4/4 | 9/8 ...)\n     * @param defaults.stem default stem arrangement (auto | up | down)\n     * @returns this\n     */\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    /**\n     * @param options.factory is required.\n     * @returns this\n     */\n    setOptions(options) {\n        var _a, _b;\n        // eslint-disable-next-line\n        const factory = options.factory; // ! operator, because options.factory was set in Factory.EasyScore().\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\nexport { EasyScore };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\nimport { StemmableNote } from './stemmablenote';\nimport { Category, isAnnotation } from './typeguard';\nimport { RuntimeError } from './util';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.GhostNote;\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            // Preserve backwards-compatibility\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        // Note properties\n        this.setWidth(0);\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        // Draw Annotations\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (isAnnotation(modifier)) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Any glyph that is set to appear on a Stave and take up musical time and graphical space.\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class GlyphNote extends Note {\n    static get CATEGORY() {\n        return Category.GlyphNote;\n    }\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        // Note properties\n        this.ignore_ticks = this.options.ignoreTicks;\n        this.setGlyph(glyph);\n    }\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    getBoundingBox() {\n        return this.glyph.getBoundingBox();\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return this.glyph.getMetrics().width;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        // Context is set when setStave is called on Note\n        const glyph = this.glyph;\n        if (!glyph.getContext()) {\n            glyph.setContext(ctx);\n        }\n        glyph.setStave(stave);\n        glyph.setYShift(stave.getYForLine(this.options.line) - stave.getYForGlyphs());\n        const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        glyph.renderToStave(x);\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class GraceNote extends StaveNote {\n    static get CATEGORY() {\n        return Category.GraceNote;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    static get SCALE() {\n        return 0.66;\n    }\n    constructor(noteStruct) {\n        super(Object.assign({ glyph_font_scale: Tables.NOTATION_FONT_SCALE * GraceNote.SCALE, stroke_px: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 3;\n    }\n    getStemExtension() {\n        if (this.stem_extension_override) {\n            return this.stem_extension_override;\n        }\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            let ret = super.getStemExtension();\n            if (glyphProps.stem) {\n                const staveNoteScale = this.getStaveNoteScale();\n                ret = (Stem.HEIGHT + ret) * staveNoteScale - Stem.HEIGHT;\n            }\n            return ret;\n        }\n        return 0;\n    }\n    getStaveNoteScale() {\n        return this.render_options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const staveNoteScale = this.getStaveNoteScale();\n            // some magic numbers are based on the staveNoteScale 0.66.\n            const offsetScale = staveNoteScale / 0.66;\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                // FIXME: should render slash after beam?\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale, 8 * offsetScale, {\n                    stem: 6 * offsetScale,\n                    beam: 5 * offsetScale,\n                });\n            }\n            else {\n                const stem_direction = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteStemHeight = stem.getHeight();\n                let x = this.getAbsoluteX();\n                let y = stem_direction === Stem.DOWN\n                    ? noteHeadBounds.y_top - noteStemHeight\n                    : noteHeadBounds.y_bottom - noteStemHeight;\n                const defaultStemExtention = stem_direction === Stem.DOWN ? this.glyphProps.stem_down_extension : this.glyphProps.stem_up_extension;\n                let defaultOffsetY = Tables.STEM_HEIGHT;\n                defaultOffsetY -= defaultOffsetY / 2.8;\n                defaultOffsetY += defaultStemExtention;\n                y += defaultOffsetY * staveNoteScale * stem_direction;\n                const offsets = stem_direction === Stem.UP\n                    ? {\n                        x1: 1,\n                        y1: 0,\n                        x2: 13,\n                        y2: -9,\n                    }\n                    : {\n                        x1: -4,\n                        y1: 1,\n                        x2: 13,\n                        y2: 9,\n                    };\n                x += offsets.x1 * offsetScale;\n                y += offsets.y1 * offsetScale;\n                slashBBox = {\n                    x1: x,\n                    y1: y,\n                    x2: x + offsets.x2 * offsetScale,\n                    y2: y + offsets.y2 * offsetScale,\n                };\n            }\n            // FIXME: avoid staff lines, ledger lines or others.\n            const ctx = this.checkContext();\n            ctx.save();\n            ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.restore();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beam_slope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beam_angle = Math.atan(beam_slope * scaleX);\n        // slash line intersecting point on beam.\n        const iPointOnBeam = {\n            dx: Math.cos(beam_angle) * slashBeamOffset,\n            dy: Math.sin(beam_angle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n        const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n        const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n        const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beam_slope;\n        const ret = {\n            x1: stemX - protrusion_stem_dx,\n            y1: stemY + slashStemOffset - protrusion_stem_dy,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusion_beam_dx,\n            y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n        };\n        return ret;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\nimport { KeySignature } from './keysignature';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class KeySigNote extends Note {\n    static get CATEGORY() {\n        return Category.KeySigNote;\n    }\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.draw();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests.\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { defined } from './util';\nlet semibreve_rest;\nfunction get_semibreve_rest() {\n    if (!semibreve_rest) {\n        const noteHead = new NoteHead({ duration: 'w', note_type: 'r' });\n        semibreve_rest = {\n            glyph_font_scale: noteHead.render_options.glyph_font_scale,\n            glyph_code: noteHead.glyph_code,\n            width: noteHead.getWidth(),\n        };\n    }\n    return semibreve_rest;\n}\nexport class MultiMeasureRest extends Element {\n    static get CATEGORY() {\n        return Category.MultiMeasureRest;\n    }\n    /**\n     *\n     * @param number_of_measures Number of measures.\n     * @param options The options object.\n     */\n    constructor(number_of_measures, options) {\n        var _a;\n        super();\n        this.xs = { left: NaN, right: NaN };\n        this.hasPaddingLeft = false;\n        this.hasPaddingRight = false;\n        this.hasLineThickness = false;\n        this.hasSymbolSpacing = false;\n        this.number_of_measures = number_of_measures;\n        // Keep track of whether these four options were provided.\n        this.hasPaddingLeft = typeof options.padding_left === 'number';\n        this.hasPaddingRight = typeof options.padding_right === 'number';\n        this.hasLineThickness = typeof options.line_thickness === 'number';\n        this.hasSymbolSpacing = typeof options.symbol_spacing === 'number';\n        const musicFont = Tables.currentMusicFont();\n        this.render_options = Object.assign({ use_symbols: false, show_number: true, number_line: -0.5, number_glyph_point: (_a = musicFont.lookupMetric('digits.point')) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE, line: 2, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, serif_thickness: 2, semibreve_rest_glyph_scale: Tables.NOTATION_FONT_SCALE, padding_left: 0, padding_right: 0, line_thickness: 5, symbol_spacing: 0 }, options);\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.render_options.number_line += fontLineShift;\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right, spacingBetweenLines) {\n        const options = this.render_options;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let lineThicknessHalf;\n        if (this.hasLineThickness) {\n            lineThicknessHalf = options.line_thickness * 0.5;\n        }\n        else {\n            lineThicknessHalf = spacingBetweenLines * 0.25;\n        }\n        const serifThickness = options.serif_thickness;\n        const top = y - spacingBetweenLines;\n        const bot = y + spacingBetweenLines;\n        const leftIndented = left + serifThickness;\n        const rightIndented = right - serifThickness;\n        const lineTop = y - lineThicknessHalf;\n        const lineBottom = y + lineThicknessHalf;\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(left, top);\n        ctx.lineTo(leftIndented, top);\n        ctx.lineTo(leftIndented, lineTop);\n        ctx.lineTo(rightIndented, lineTop);\n        ctx.lineTo(rightIndented, top);\n        ctx.lineTo(right, top);\n        ctx.lineTo(right, bot);\n        ctx.lineTo(rightIndented, bot);\n        ctx.lineTo(rightIndented, lineBottom);\n        ctx.lineTo(leftIndented, lineBottom);\n        ctx.lineTo(leftIndented, bot);\n        ctx.lineTo(left, bot);\n        ctx.closePath();\n        ctx.fill();\n    }\n    drawSymbols(stave, ctx, left, right, spacingBetweenLines) {\n        const n4 = Math.floor(this.number_of_measures / 4);\n        const n = this.number_of_measures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.render_options;\n        // FIXME: TODO: invalidate semibreve_rest at the appropriate time\n        // (e.g., if the system font settings are changed).\n        semibreve_rest = undefined;\n        const rest = get_semibreve_rest();\n        const rest_scale = options.semibreve_rest_glyph_scale;\n        const rest_width = rest.width * (rest_scale / rest.glyph_font_scale);\n        const glyphs = {\n            2: {\n                width: rest_width * 0.5,\n                height: spacingBetweenLines,\n            },\n            1: {\n                width: rest_width,\n            },\n        };\n        /* 10: normal spacingBetweenLines */\n        const spacing = this.hasSymbolSpacing ? options.symbol_spacing : 10;\n        const width = n4 * glyphs[2].width + n2 * glyphs[2].width + n1 * glyphs[1].width + (n4 + n2 + n1 - 1) * spacing;\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        const yBottom = stave.getYForLine(line + 1);\n        ctx.save();\n        ctx.setStrokeStyle('none');\n        ctx.setLineWidth(0);\n        for (let i = 0; i < n4; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n2; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n1; ++i) {\n            Glyph.renderGlyph(ctx, x, yTop, rest_scale, rest.glyph_code);\n            x += glyphs[1].width + spacing;\n        }\n        ctx.restore();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        // FIXME: getNoteStartX() returns x + 5(barline width)\n        //        getNoteEndX() returns x + width(no barline width)\n        // See Stave constructor. How do we fix this?\n        // Here, we subtract the barline width.\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.render_options;\n        if (this.hasPaddingLeft) {\n            left = stave.getX() + options.padding_left;\n        }\n        if (this.hasPaddingRight) {\n            right = stave.getX() + stave.getWidth() - options.padding_right;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        const spacingBetweenLines = options.spacing_between_lines_px;\n        if (options.use_symbols) {\n            this.drawSymbols(stave, ctx, left, right, spacingBetweenLines);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right, spacingBetweenLines);\n        }\n        if (options.show_number) {\n            const timeSpec = '/' + this.number_of_measures;\n            const timeSig = new TimeSignature(timeSpec, 0, false);\n            timeSig.point = options.number_glyph_point;\n            timeSig.setTimeSig(timeSpec);\n            timeSig.setStave(stave);\n            timeSig.setX(left + (right - left) * 0.5 - timeSig.getInfo().glyph.getMetrics().width * 0.5);\n            timeSig.bottomLine = options.number_line;\n            timeSig.setContext(ctx).draw();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('Vex.Flow.PedalMarking', args);\n}\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name, context, x, y, point) {\n    const glyph_data = PedalMarking.GLYPHS[name];\n    const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n    // Center the middle of the glyph with the middle of the note head (Tables.STAVE_LINE_DISTANCE / 2)\n    glyph.render(context, x - (glyph.getMetrics().width - Tables.STAVE_LINE_DISTANCE) / 2, y);\n}\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nclass PedalMarking extends Element {\n    static get CATEGORY() {\n        return Category.PedalMarking;\n    }\n    /**\n     * Create a sustain pedal marking. Returns the defaults PedalMarking.\n     * Which uses the traditional \"Ped\" and \"*\"\" markings.\n     */\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    /** Create a sostenuto pedal marking */\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    /** Create an una corda pedal marking */\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        // Custom text for the release/depress markings\n        this.custom_depress_text = '';\n        this.custom_release_text = '';\n        this.resetFont();\n        this.render_options = {\n            bracket_height: 10,\n            text_margin_right: 6,\n            bracket_line_width: 1,\n            color: 'black',\n        };\n    }\n    /** Set pedal type. */\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    /**\n     * Set custom text for the `depress`/`release` pedal markings. No text is\n     * set if the parameter is falsy.\n     */\n    setCustomText(depress, release) {\n        this.custom_depress_text = depress || '';\n        this.custom_release_text = release || '';\n        return this;\n    }\n    /** Set the staff line to render the markings on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Draw the bracket based pedal markings. */\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        let prev_x;\n        let prev_y;\n        // Iterate through each note\n        this.notes.forEach((note, index, notes) => {\n            var _a;\n            // Each note triggers the opposite pedal action\n            is_pedal_depressed = !is_pedal_depressed;\n            // Get the initial coordinates for the note\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            // Throw if current note is positioned before the previous note\n            if (x < prev_x) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            // Determine if the previous or next note are the same\n            // as the current note. We need to keep track of this for\n            // when adjustments are made for the release+depress action\n            const next_is_same = notes[index + 1] === note;\n            const prev_is_same = notes[index - 1] === note;\n            let x_shift = 0;\n            const point = (_a = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`)) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE;\n            if (is_pedal_depressed) {\n                // Adjustment for release+depress\n                x_shift = prev_is_same ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n                    // For MIXED style, start with text instead of bracket\n                    if (this.custom_depress_text) {\n                        // If we have custom text, use instead of the default \"Ped\" glyph\n                        const text_width = ctx.measureText(this.custom_depress_text).width;\n                        ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                        x_shift = text_width / 2 + this.render_options.text_margin_right;\n                    }\n                    else {\n                        // Render the Ped glyph in position\n                        drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                        x_shift = 20 + this.render_options.text_margin_right;\n                    }\n                }\n                else {\n                    // Draw start bracket\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.render_options.bracket_height);\n                    ctx.lineTo(x + x_shift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                // Adjustment for release+depress\n                x_shift = next_is_same ? -5 : 0;\n                // Draw end bracket\n                ctx.beginPath();\n                ctx.moveTo(prev_x, prev_y);\n                ctx.lineTo(x + x_shift, y);\n                ctx.lineTo(x, y - this.render_options.bracket_height);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            // Store previous coordinates\n            prev_x = x + x_shift;\n            prev_y = y;\n        });\n    }\n    /**\n     * Draw the text based pedal markings. This defaults to the traditional\n     * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n     */\n    drawText() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        // Iterate through each note, placing glyphs or custom text accordingly\n        this.notes.forEach((note) => {\n            var _a;\n            is_pedal_depressed = !is_pedal_depressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            const point = (_a = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`)) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE;\n            let text_width = 0;\n            if (is_pedal_depressed) {\n                if (this.custom_depress_text) {\n                    text_width = ctx.measureText(this.custom_depress_text).width;\n                    ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                }\n            }\n            else {\n                if (this.custom_release_text) {\n                    text_width = ctx.measureText(this.custom_release_text).width;\n                    ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_release', ctx, x, y, point);\n                }\n            }\n        });\n    }\n    /** Render the pedal marking in position on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setStrokeStyle(this.render_options.color);\n        ctx.setFillStyle(this.render_options.color);\n        ctx.setFont(this.textFont);\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.render_options.bracket_line_width);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\nPedalMarking.DEBUG = false;\nPedalMarking.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n/** Glyph data */\nPedalMarking.GLYPHS = {\n    pedal_depress: {\n        code: 'keyboardPedalPed',\n    },\n    pedal_release: {\n        code: 'keyboardPedalUp',\n    },\n};\n/** Pedal type as number. */\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\n/** Pedal type as string. */\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\nexport { PedalMarking };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n// Map `type` to SMuFL glyph code.\nconst CODES = {\n    '1': 'repeat1Bar',\n    '2': 'repeat2Bars',\n    '4': 'repeat4Bars',\n    slash: 'repeatBarSlash',\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return Category.RepeatNote;\n    }\n    constructor(type, noteStruct, options) {\n        const glyphCode = CODES[type] || 'repeat1Bar';\n        const glyph = new Glyph(glyphCode, Tables.currentMusicFont().lookupMetric('repeatNote.point', 40), {\n            category: 'repeatNote',\n        });\n        super(glyph, Object.assign({ duration: 'q', align_center: type !== 'slash' }, noteStruct), options);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { TextJustification } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nclass StaveLine extends Element {\n    static get CATEGORY() {\n        return Category.StaveLine;\n    }\n    // Initialize the StaveLine with the given `notes`.\n    //\n    // `notes` is a struct that has:\n    //\n    //  ```\n    //  {\n    //    first_note: Note,\n    //    last_note: Note,\n    //    first_indices: [n1, n2, n3],\n    //    last_indices: [n1, n2, n3]\n    //  }\n    //  ```\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.resetFont();\n        this.render_options = {\n            // Space to add to the left or the right\n            padding_left: 4,\n            padding_right: 3,\n            // The width of the line in pixels\n            line_width: 1,\n            // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n            line_dash: undefined,\n            // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n            rounded_end: true,\n            // The color of the line and arrowheads\n            color: undefined,\n            // Flags to draw arrows on each end of the line\n            draw_start_arrow: false,\n            draw_end_arrow: false,\n            // The length of the arrowhead sides\n            arrowhead_length: 10,\n            // The angle of the arrowhead\n            arrowhead_angle: Math.PI / 8,\n            // The position of the text\n            text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n            text_justification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    // The the annotation for the `StaveLine`\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    // Set the notes for the `StaveLine`\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices)\n            notes.first_indices = [0];\n        if (!notes.last_indices)\n            notes.last_indices = [0];\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indices.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.first_indices = notes.first_indices;\n        this.last_note = notes.last_note;\n        this.last_indices = notes.last_indices;\n        return this;\n    }\n    // Apply the style of the `StaveLine` to the context\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const render_options = this.render_options;\n        if (render_options.line_dash) {\n            ctx.setLineDash(render_options.line_dash);\n        }\n        if (render_options.line_width) {\n            ctx.setLineWidth(render_options.line_width);\n        }\n        if (render_options.rounded_end) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    // Apply the text styling to the context\n    applyFontStyle() {\n        const ctx = this.checkContext();\n        ctx.setFont(this.textFont);\n        const render_options = this.render_options;\n        const color = render_options.color;\n        if (color) {\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n        }\n    }\n    // Helper function to draw a line with arrow heads\n    drawArrowLine(ctx, pt1, pt2) {\n        const both_arrows = this.render_options.draw_start_arrow && this.render_options.draw_end_arrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        // For ends with arrow we actually want to stop before we get to the arrow\n        // so that wide lines won't put a flat end on the arrow.\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.render_options.arrowhead_length / 3) / distance;\n        let end_x;\n        let end_y;\n        let start_x;\n        let start_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            end_x = Math.round(x1 + (x2 - x1) * ratio);\n            end_y = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            end_x = x2;\n            end_y = y2;\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            start_x = x1 + (x2 - x1) * (1 - ratio);\n            start_y = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            start_x = x1;\n            start_y = y1;\n        }\n        if (this.render_options.color) {\n            ctx.setStrokeStyle(this.render_options.color);\n            ctx.setFillStyle(this.render_options.color);\n        }\n        // Draw the shaft of the arrow\n        ctx.beginPath();\n        ctx.moveTo(start_x, start_y);\n        ctx.lineTo(end_x, end_y);\n        ctx.stroke();\n        ctx.closePath();\n        // calculate the angle of the line\n        const line_angle = Math.atan2(y2 - y1, x2 - x1);\n        // h is the line length of a side of the arrow head\n        const h = Math.abs(this.render_options.arrowhead_length / Math.cos(this.render_options.arrowhead_angle));\n        let angle1;\n        let angle2;\n        let top_x;\n        let top_y;\n        let bottom_x;\n        let bottom_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            angle1 = line_angle + Math.PI + this.render_options.arrowhead_angle;\n            top_x = x2 + Math.cos(angle1) * h;\n            top_y = y2 + Math.sin(angle1) * h;\n            angle2 = line_angle + Math.PI - this.render_options.arrowhead_angle;\n            bottom_x = x2 + Math.cos(angle2) * h;\n            bottom_y = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            angle1 = line_angle + this.render_options.arrowhead_angle;\n            top_x = x1 + Math.cos(angle1) * h;\n            top_y = y1 + Math.sin(angle1) * h;\n            angle2 = line_angle - this.render_options.arrowhead_angle;\n            bottom_x = x1 + Math.cos(angle2) * h;\n            bottom_y = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n        }\n    }\n    // Renders the `StaveLine` on the context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const first_note = this.first_note;\n        const last_note = this.last_note;\n        const render_options = this.render_options;\n        ctx.save();\n        this.applyLineStyle();\n        // Cycle through each set of indices and draw lines\n        let start_position = { x: 0, y: 0 };\n        let end_position = { x: 0, y: 0 };\n        this.first_indices.forEach((first_index, i) => {\n            const last_index = this.last_indices[i];\n            // Get initial coordinates for the start/end of the line\n            start_position = first_note.getModifierStartXY(2, first_index);\n            end_position = last_note.getModifierStartXY(1, last_index);\n            const upwards_slope = start_position.y > end_position.y;\n            // Adjust `x` coordinates for modifiers\n            start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n            end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n            // Adjust first `x` coordinates for displacements\n            const notehead_width = first_note.getGlyphProps().getWidth();\n            const first_displaced = first_note.getKeyProps()[first_index].displaced;\n            if (first_displaced && first_note.getStemDirection() === 1) {\n                start_position.x += notehead_width + render_options.padding_left;\n            }\n            // Adjust last `x` coordinates for displacements\n            const last_displaced = last_note.getKeyProps()[last_index].displaced;\n            if (last_displaced && last_note.getStemDirection() === -1) {\n                end_position.x -= notehead_width + render_options.padding_right;\n            }\n            // Adjust y position better if it's not coming from the center of the note\n            start_position.y += upwards_slope ? -3 : 1;\n            end_position.y += upwards_slope ? 2 : 0;\n            this.drawArrowLine(ctx, start_position, end_position);\n        });\n        ctx.restore();\n        // Determine the x coordinate where to start the text\n        const text_width = ctx.measureText(this.text).width;\n        const justification = render_options.text_justification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = start_position.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const delta_x = end_position.x - start_position.x;\n            const center_x = delta_x / 2 + start_position.x;\n            x = center_x - text_width / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = end_position.x - text_width;\n        }\n        // Determine the y value to start the text\n        let y = 0;\n        const vertical_position = render_options.text_position_vertical;\n        if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n            y = first_note.checkStave().getYForTopText();\n        }\n        else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = first_note.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        // Draw the text\n        ctx.save();\n        this.applyFontStyle();\n        ctx.fillText(this.text, x, y);\n        ctx.restore();\n        return this;\n    }\n}\n/** Default text font. */\nStaveLine.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n// Text Positioning\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = TextJustification;\nexport { StaveLine };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n    static get CATEGORY() {\n        return Category.System;\n    }\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.partStaves = [];\n        this.partStaveInfos = [];\n        this.partVoices = [];\n    }\n    /** Set formatting options. */\n    setOptions(options = {}) {\n        if (!options.factory) {\n            throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n        }\n        this.factory = options.factory;\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    /** Get origin X. */\n    getX() {\n        return this.options.x;\n    }\n    /** Set origin X. */\n    setX(x) {\n        this.options.x = x;\n        this.partStaves.forEach((s) => {\n            s.setX(x);\n        });\n    }\n    /** Get origin y. */\n    getY() {\n        return this.options.y;\n    }\n    /** Set origin y. */\n    setY(y) {\n        this.options.y = y;\n        this.partStaves.forEach((s) => {\n            s.setY(y);\n        });\n    }\n    /** Get associated staves. */\n    getStaves() {\n        return this.partStaves;\n    }\n    /** Get associated voices. */\n    getVoices() {\n        return this.partVoices;\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    /**\n     * Add connector between staves.\n     * @param type see {@link StaveConnector.typeString}\n     */\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            top_stave: this.partStaves[0],\n            bottom_stave: this.partStaves[this.partStaves.length - 1],\n            type,\n        });\n        return this.connector;\n    }\n    /**\n     * Add a stave to the system.\n     *\n     * Example (one voice):\n     *\n     * `system.addStave({voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]});`\n     *\n     * Example (two voices):\n     *\n     * `system.addStave({voices: [`\n     *   `score.voice(score.notes('C#5/q, B4, A4, G#4', {stem: 'up'})),`\n     *   `score.voice(score.notes('C#4/h, C#4', {stem: 'down'}))`\n     * `]});`\n     */\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ left_bar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => {\n            voice\n                .setContext(ctx)\n                .setStave(stave)\n                .getTickables()\n                .forEach((tickable) => tickable.setStave(stave));\n            this.partVoices.push(voice);\n        });\n        this.partStaves.push(stave);\n        this.partStaveInfos.push(p);\n        return stave;\n    }\n    /**\n     * Add voices to the system with stave already assigned.\n     */\n    addVoices(voices) {\n        const ctx = this.getContext();\n        voices.forEach((voice) => {\n            voice.setContext(ctx);\n            this.partVoices.push(voice);\n        });\n    }\n    /** Format the system. */\n    format() {\n        const options_details = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(options_details);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        const debugNoteMetricsYs = [];\n        this.partStaves.forEach((part, index) => {\n            y = y + part.space(this.partStaveInfos[index].spaceAbove);\n            part.setY(y);\n            y = y + part.space(this.partStaveInfos[index].spaceBelow);\n            y = y + part.space(this.options.spaceBetweenStaves);\n            if (this.partStaveInfos[index].debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, stave: part });\n                y += 15;\n            }\n            startX = Math.max(startX, part.getNoteStartX());\n        });\n        // Re-assign Stave to update y position\n        this.partVoices.forEach((voice) => {\n            voice.getTickables().forEach((tickable) => {\n                const stave = tickable.getStave();\n                if (stave)\n                    tickable.setStave(stave);\n            });\n        });\n        // Join the voices\n        formatter.joinVoices(this.partVoices);\n        // Update the start position of all staves.\n        this.partStaves.forEach((part) => part.setNoteStartX(startX));\n        if (this.options.autoWidth && this.partVoices.length > 0) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(this.partVoices);\n            this.options.width = justifyWidth + Stave.rightPadding + (startX - this.options.x);\n            this.partStaves.forEach((part) => {\n                part.setWidth(this.options.width);\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - (startX - this.options.x)\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        if (this.partVoices.length > 0) {\n            formatter.format(this.partVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        }\n        formatter.postFormat();\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(options_details);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        this.boundingBox = new BoundingBox(this.options.x, this.options.y, this.options.width, this.lastY - this.options.y);\n        Stave.formatBegModifiers(this.partStaves);\n    }\n    /** Render the system. */\n    draw() {\n        // Render debugging information, if requested.\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            this.partVoices.forEach((voice) => {\n                voice.getTickables().forEach((tickable) => {\n                    if (tickable.getStave() === d.stave)\n                        Note.plotMetrics(ctx, tickable, d.y);\n                });\n            });\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isDot } from './typeguard';\nimport { defined, RuntimeError } from './util';\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n    const stem_through = [];\n    let group = [];\n    for (let string = 1; string <= num_lines; string++) {\n        const is_used = strings_used.indexOf(string) > -1;\n        if (!is_used) {\n            group.push(string);\n        }\n        else {\n            stem_through.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stem_through.push(group);\n    return stem_through;\n}\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n    const up_stem = stem_direction !== 1;\n    const down_stem = stem_direction !== -1;\n    const line_spacing = stave.getSpacingBetweenLines();\n    const total_lines = stave.getNumLines();\n    const stem_lines = [];\n    unused_strings.forEach((strings) => {\n        const containsLastString = strings.indexOf(total_lines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((up_stem && containsFirstString) || (down_stem && containsLastString)) {\n            return;\n        }\n        // If there's only one string in the group, push a duplicate value.\n        // We do this because we need 2 strings to convert into upper/lower y\n        // values.\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const line_ys = [];\n        // Iterate through each group string and store it's y position\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === total_lines;\n            // Get the y value for the appropriate staff line,\n            // we adjust for a 0 index array, since string numbers are index 1\n            let y = stave.getYForLine(string - 1);\n            // Unless the string is the first or last, add padding to each side\n            // of the line\n            if (index === 0 && !isTopBound) {\n                y -= line_spacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += line_spacing / 2 - 1;\n            }\n            // Store the y value\n            line_ys.push(y);\n            // Store a subsequent y value connecting this group to the main\n            // stem above/below the stave if it's the top/bottom string\n            if (stem_direction === 1 && isTopBound) {\n                line_ys.push(stem_y - 2);\n            }\n            else if (stem_direction === -1 && isBottomBound) {\n                line_ys.push(stem_y + 2);\n            }\n        });\n        // Add the sorted y values to the\n        stem_lines.push(line_ys.sort((a, b) => a - b));\n    });\n    return stem_lines;\n}\nexport class TabNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.TabNote;\n    }\n    // Initialize the TabNote with a `noteStruct` full of properties\n    // and whether to `draw_stem` when rendering the note\n    constructor(noteStruct, draw_stem = false) {\n        super(noteStruct);\n        this.glyphPropsArr = [];\n        // Return the number of the greatest string, which is the string lowest on the display\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        // Return the number of the least string, which is the string highest on the display\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false; // Renders parenthesis around notes\n        // Note properties\n        // The fret positions in the note. An array of `{ str: X, fret: X }`\n        this.positions = noteStruct.positions || [];\n        // Render Options\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: Tables.TABLATURE_FONT_SCALE, \n            // Flag to draw a stem\n            draw_stem, \n            // Flag to draw dot modifiers\n            draw_dots: draw_stem, \n            // Flag to extend the main stem through the stave and fret positions\n            draw_stem_through_stave: false, \n            // vertical shift from stave line\n            y_shift: 0, \n            // normal glyph scale\n            scale: 1.0, \n            // default tablature font\n            font: `${Font.SIZE}pt ${Font.SANS_SERIF}` });\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stem_direction) {\n            this.setStemDirection(noteStruct.stem_direction);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        // Renders parenthesis around notes\n        this.ghost = false;\n        this.updateWidth();\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n    // Often used for indicating frets that are being bent to\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    // Determine if the note has a stem\n    hasStem() {\n        if (this.render_options.draw_stem)\n            return true;\n        return false;\n    }\n    // Get the default stem extension for the note\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        if (this.stem_extension_override != null) {\n            return this.stem_extension_override;\n        }\n        if (glyphProps) {\n            return this.getStemDirection() === Stem.UP\n                ? glyphProps.tabnote_stem_up_extension\n                : glyphProps.tabnote_stem_down_extension;\n        }\n        return 0;\n    }\n    // Calculate and store the width of the note\n    updateWidth() {\n        this.glyphPropsArr = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const glyphProps = Tables.tabToGlyphProps(fret.toString(), this.render_options.scale);\n            this.glyphPropsArr.push(glyphProps);\n            this.width = Math.max(glyphProps.getWidth(), this.width);\n        }\n        // For some reason we associate a notehead glyph with a TabNote, and this\n        // glyph is used for certain width calculations. Of course, this is totally\n        // incorrect since a notehead is a poor approximation for the dimensions of\n        // a fret number which can have multiple digits. As a result, we must\n        // overwrite getWidth() to return the correct width\n        this.glyphProps.getWidth = () => this.width;\n    }\n    // Set the `stave` to the note\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        // Calculate the fret number width based on font used\n        if (ctx) {\n            this.width = 0;\n            for (let i = 0; i < this.glyphPropsArr.length; ++i) {\n                const glyphProps = this.glyphPropsArr[i];\n                const text = '' + glyphProps.text;\n                if (text.toUpperCase() !== 'X') {\n                    ctx.save();\n                    ctx.setFont(this.render_options.font);\n                    glyphProps.width = ctx.measureText(text).width;\n                    ctx.restore();\n                    glyphProps.getWidth = () => glyphProps.width;\n                }\n                this.width = Math.max(glyphProps.getWidth(), this.width);\n            }\n            this.glyphProps.getWidth = () => this.width;\n        }\n        // we subtract 1 from `line` because getYForLine expects a 0-based index,\n        // while the position.str is a 1-based index\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    // Get the fret positions for the note\n    getPositions() {\n        return this.positions;\n    }\n    // Get the default `x` and `y` coordinates for a modifier at a specific\n    // `position` at a fret position `index`\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const note_glyph_width = this.glyphProps.getWidth();\n            x = note_glyph_width / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Get the default line for rest\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        // width is already set during init()\n        this.preFormatted = true;\n    }\n    // Get the x position for the stem\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    // Get the y position for the stem\n    getStemY() {\n        const num_lines = this.checkStave().getNumLines();\n        // The decimal staff line amounts provide optimal spacing between the\n        // fret number and the stem\n        const stemUpLine = -0.5;\n        const stemDownLine = num_lines - 0.5;\n        const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    // Get the stem extents for the tabnote\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    // Draw the fal onto the context\n    drawFlag() {\n        var _a;\n        const { beam, glyphProps, render_options: { draw_stem }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam == undefined && draw_stem;\n        // Now it's the flag's turn.\n        if (glyphProps.flag && shouldDrawFlag) {\n            const flag_x = this.getStemX();\n            const flag_y = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() - (this.glyphProps ? this.glyphProps.stem_down_extension : 0)\n                : // Up stems are above the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() + (this.glyphProps ? this.glyphProps.stem_up_extension : 0);\n            // Draw the Flag\n            //this.flag?.setOptions({ category: 'flag.tabStem' });\n            (_a = this.flag) === null || _a === void 0 ? void 0 : _a.render(context, flag_x, flag_y);\n            //Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, { category: 'flag.tabStem' });\n        }\n    }\n    // Render the modifiers onto the context.\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            // Only draw the dots if enabled.\n            if (isDot(modifier) && !this.render_options.draw_dots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    // Render the stem extension through the fret positions\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.render_options.draw_stem;\n        const stemThrough = this.render_options.draw_stem_through_stave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.save();\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n            ctx.restore();\n        }\n    }\n    // Render the fret positions onto the context\n    drawPositions() {\n        var _a;\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.render_options.y_shift;\n            const glyphProps = this.glyphPropsArr[i];\n            // Center the fret text beneath the notation note head\n            const note_glyph_width = this.glyphProps.getWidth();\n            const tab_x = x + note_glyph_width / 2 - glyphProps.getWidth() / 2;\n            // FIXME: Magic numbers.\n            ctx.clearRect(tab_x - 2, y - 3, glyphProps.getWidth() + 4, 6);\n            if (glyphProps.code) {\n                Glyph.renderGlyph(ctx, tab_x, y, this.render_options.glyph_font_scale * this.render_options.scale, glyphProps.code);\n            }\n            else {\n                ctx.save();\n                ctx.setFont(this.render_options.font);\n                const text = (_a = glyphProps.text) !== null && _a !== void 0 ? _a : '';\n                ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n                ctx.restore();\n            }\n        }\n    }\n    // The main rendering function for the entire note.\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const render_stem = this.beam == undefined && this.render_options.draw_stem;\n        this.applyStyle();\n        ctx.openGroup('tabnote', this.getAttribute('id'), { pointerBBox: true });\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && render_stem) {\n            const stem_x = this.getStemX();\n            this.stem.setNoteHeadXBounds(stem_x, stem_x);\n            this.stem.setContext(ctx).draw();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return Category.TabStave;\n    }\n    constructor(x, y, width, options) {\n        const tab_options = Object.assign({ spacing_between_lines_px: 13, num_lines: 6, top_text_position: 1 }, options);\n        super(x, y, width, tab_options);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    // Deprecated\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// This file implements `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Renderer } from './renderer';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nclass TextBracket extends Element {\n    static get CATEGORY() {\n        return Category.TextBracket;\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    /**\n     * @deprecated Use `TextBracket.Position` instead.\n     */\n    static get Positions() {\n        L('Positions is deprecated, use TextBracketPosition instead.');\n        return TextBracketPosition;\n    }\n    /**\n     * @deprecated Use `TextBracket.PositionString` instead.\n     */\n    static get PositionsString() {\n        L('PositionsString is deprecated, use PositionString instead.');\n        return TextBracket.PositionString;\n    }\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.text = text;\n        this.superscript = superscript;\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.resetFont();\n        this.render_options = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            line_width: 1,\n            show_bracket: true,\n            bracket_height: 8,\n            // In the BOTTOM position, the bracket line can extend\n            // under the superscript.\n            underline_superscript: true,\n        };\n    }\n    /**\n     * Apply the text backet styling to the provided context.\n     * @param ctx\n     * @returns this\n     */\n    applyStyle(ctx) {\n        ctx.setFont(this.font);\n        const options = this.render_options;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.line_width);\n        return this;\n    }\n    // Set whether the bracket line should be `dashed`. You can also\n    // optionally set the `dash` pattern by passing in an array of numbers\n    setDashed(dashed, dash) {\n        this.render_options.dashed = dashed;\n        if (dash)\n            this.render_options.dash = dash;\n        return this;\n    }\n    // Set the rendering `context` for the octave bracket\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Draw the octave bracket on the rendering context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        // Get the preliminary start and stop coordintates for the bracket\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracket_height = this.render_options.bracket_height * this.position;\n        ctx.save();\n        this.applyStyle(ctx);\n        // Draw text\n        ctx.fillText(this.text, start.x, start.y);\n        // Get the width and height for the octave number\n        const main_measure = ctx.measureText(this.text);\n        const main_width = main_measure.width;\n        const main_height = main_measure.height;\n        // Calculate the y position for the super script\n        const super_y = start.y - main_height / 2.5;\n        // We called this.resetFont() in the constructor, so we know this.textFont is available.\n        // eslint-disable-next-line\n        const { family, size, weight, style } = this.textFont;\n        // To draw the superscript, we scale the font size by 1/1.4.\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n        // Determine width and height of the superscript\n        const super_measure = ctx.measureText(this.superscript);\n        const super_width = super_measure.width;\n        const super_height = super_measure.height;\n        // Setup initial coordinates for the bracket line\n        let start_x = start.x;\n        let line_y = super_y;\n        const end_x = stop.x + this.stop.getGlyphProps().getWidth();\n        // Adjust x and y coordinates based on position\n        if (this.position === TextBracketPosition.TOP) {\n            start_x += main_width + super_width + 5;\n            line_y -= super_height / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            line_y += super_height / 2.7;\n            start_x += main_width + 2;\n            if (!this.render_options.underline_superscript) {\n                start_x += super_width;\n            }\n        }\n        if (this.render_options.dashed) {\n            // Main line\n            Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n            // Ending Bracket\n            if (this.render_options.show_bracket) {\n                Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(start_x, line_y);\n            // Main line\n            ctx.lineTo(end_x, line_y);\n            if (this.render_options.show_bracket) {\n                // Ending bracket\n                ctx.lineTo(end_x, line_y + bracket_height);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n}\nTextBracket.DEBUG = false;\nTextBracket.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 15,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.ITALIC,\n};\nexport { TextBracket };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('Vex.Flow.TextDynamics', args);\n}\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nclass TextDynamics extends Note {\n    static get CATEGORY() {\n        return Category.TextDynamics;\n    }\n    /** The glyph data for each dynamics letter. */\n    static get GLYPHS() {\n        return {\n            f: {\n                code: 'dynamicForte',\n                width: 12,\n            },\n            p: {\n                code: 'dynamicPiano',\n                width: 14,\n            },\n            m: {\n                code: 'dynamicMezzo',\n                width: 17,\n            },\n            s: {\n                code: 'dynamicSforzando',\n                width: 10,\n            },\n            z: {\n                code: 'dynamicZ',\n                width: 12,\n            },\n            r: {\n                code: 'dynamicRinforzando',\n                width: 12,\n            },\n        };\n    }\n    /**\n     * Create the dynamics marking.\n     *\n     * A `TextDynamics` object inherits from `Note` so that it can be formatted\n     * within a `Voice`.\n     *\n     * @param noteStruct an object that contains a `duration` property and a\n     * `sequence` of letters that represents the letters to render.\n     */\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.sequence = (noteStruct.text || '').toLowerCase();\n        this.line = noteStruct.line || 0;\n        this.glyphs = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { glyph_font_size: Tables.NOTATION_FONT_SCALE });\n        L('New Dynamics Text: ', this.sequence);\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Preformat the dynamics text. */\n    preFormat() {\n        let total_width = 0;\n        // length of this.glyphs must be <=\n        // length of this.sequence, so if we're formatted before\n        // create new glyphs.\n        this.glyphs = [];\n        // Iterate through each letter\n        this.sequence.split('').forEach((letter) => {\n            // Get the glyph data for the letter\n            const glyph_data = TextDynamics.GLYPHS[letter];\n            if (!glyph_data)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            const size = defined(this.render_options.glyph_font_size);\n            const glyph = new Glyph(glyph_data.code, size, { category: 'textNote' });\n            // Add the glyph\n            this.glyphs.push(glyph);\n            total_width += glyph_data.width;\n        });\n        // Store the width of the text\n        this.setWidth(total_width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the dynamics text on the rendering context. */\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        let letter_x = x;\n        this.glyphs.forEach((glyph, index) => {\n            const current_letter = this.sequence[index];\n            glyph.render(this.checkContext(), letter_x, y);\n            letter_x += TextDynamics.GLYPHS[current_letter].width;\n        });\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\nTextDynamics.DEBUG = false;\nexport { TextDynamics };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nimport { Category } from './typeguard';\nexport class TimeSigNote extends Note {\n    static get CATEGORY() {\n        return Category.TimeSigNote;\n    }\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        this.timeSig = new TimeSignature(timeSpec, customPadding);\n        this.setWidth(this.timeSig.getGlyph().getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        const tsGlyph = this.timeSig.getGlyph();\n        if (!tsGlyph.getContext()) {\n            tsGlyph.setContext(ctx);\n        }\n        tsGlyph.setStave(stave);\n        tsGlyph.setYShift(stave.getYForLine(2) - stave.getYForGlyphs());\n        tsGlyph.renderToStave(this.getAbsoluteX());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { log } from './util';\nimport { Vibrato } from './vibrato';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('Vex.Flow.VibratoBracket', args);\n}\n/** `VibratoBracket` renders vibrato effect between two notes. */\nclass VibratoBracket extends Element {\n    static get CATEGORY() {\n        return Category.VibratoBracket;\n    }\n    /**\n     * Either the stop or start note must be set, or both of them.\n     * An undefined value for the start or stop note indicates that the vibrato\n     * is drawn from the beginning or until the end of the stave accordingly.\n     */\n    constructor(bracket_data) {\n        super();\n        if (bracket_data.start)\n            this.start = bracket_data.start;\n        if (bracket_data.stop)\n            this.stop = bracket_data.stop;\n        this.line = 1;\n        this.render_options = {\n            harsh: false,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n            vibrato_width: 0,\n        };\n    }\n    /** Set line position of the vibrato bracket. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Set harsh vibrato bracket. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Draw the vibrato bracket on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        // If start note is not set then vibrato will be drawn\n        // from the beginning of the stave\n        const start_x = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        // If stop note is not set then vibrato will be drawn\n        // until the end of the stave\n        const stop_x = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.render_options.vibrato_width = stop_x - start_x;\n        L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n        Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\nVibratoBracket.DEBUG = false;\nexport { VibratoBracket };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { ChordSymbol } from './chordsymbol';\nimport { ClefNote } from './clefnote';\nimport { Curve } from './curve';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { KeySigNote } from './keysignote';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StringNumber } from './stringnumber';\nimport { System } from './system';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSigNote } from './timesignote';\nimport { Tuplet } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nimport { isHTMLCanvas } from './web';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('Vex.Flow.Factory', args);\n}\n/**\n * Factory implements a high level API around VexFlow.\n */\nclass Factory {\n    /**\n     * Static simplified function to access constructor without providing FactoryOptions\n     *\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = Vex.Flow.Factory.newFromElementId('boo', 1200, 600 );`\n     */\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    /**\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});`\n     */\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n            font: Factory.TEXT_FONT,\n        };\n        this.setOptions(options);\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined; // current stave\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId == null) {\n            return;\n        }\n        if (elementId == '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            // We use a custom type check here, because node-canvas mimics canvas,\n            // but is not an instance of window.HTMLCanvasElement.\n            // In fact, `window` might be undefined here.\n            // See: https://www.npmjs.com/package/canvas\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    /** Return pixels from current stave spacing. */\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center', kerning: true, reportWidth: true }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        chordSymbol.setEnableKerning(p.kerning);\n        chordSymbol.setReportWidth(p.reportWidth);\n        // There is a default font based on the engraving font.  Only set then\n        // font if it is specific, else use the default\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        var _a;\n        const articulation = new Articulation((_a = params === null || params === void 0 ? void 0 : params.type) !== null && _a !== void 0 ? _a : 'a.');\n        if ((params === null || params === void 0 ? void 0 : params.position) != undefined)\n            articulation.setPosition(params.position);\n        if ((params === null || params === void 0 ? void 0 : params.betweenLines) != undefined)\n            articulation.setBetweenLines(params.betweenLines);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    Ornament(type, params) {\n        const options = Object.assign({ type, position: 0, accidental: '' }, params);\n        const ornament = new Ornament(type);\n        ornament.setPosition(options.position);\n        if (options.upperAccidental) {\n            ornament.setUpperAccidental(options.upperAccidental);\n        }\n        if (options.lowerAccidental) {\n            ornament.setLowerAccidental(options.lowerAccidental);\n        }\n        if (typeof options.delayed !== 'undefined') {\n            ornament.setDelayed(options.delayed);\n        }\n        ornament.setContext(this.context);\n        return ornament;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params, drawCircle = true) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        stringNumber.setDrawCircle(drawCircle);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.number_of_measures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.harsh)\n            vibratoBracket.setHarsh(params.options.harsh);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    /**\n     * Creates EasyScore. Normally the first step after constructing a Factory. For example:\n     * ```\n     * const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});\n     * const score: EasyScore = vf.EasyScore();\n     * ```\n     * @param options.factory optional instance of Factory\n     * @param options.builder instance of Builder\n     * @param options.commitHooks function to call after a note element is created\n     * @param options.throwOnError throw error in case of parsing error\n     */\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    /** Render the score. */\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).draw());\n        this.voices.forEach((v) => v.setContext(ctx).draw());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).draw();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).draw());\n        this.reset();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`. */\nFactory.DEBUG = false;\n/** Default text font. */\nFactory.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\nexport { Factory };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { TabNote } from './tabnote';\nimport { Category } from './typeguard';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return Category.GraceTabNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // vertical shift from stave line\n            y_shift: 0.3, \n            // grace glyph scale\n            scale: 0.6, \n            // grace tablature font\n            font: `7.5pt ${Font.SANS_SERIF}` });\n        this.updateWidth();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\nimport { Music } from './music';\nimport { RuntimeError } from './util';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const is_supported_type = Music.scaleTypes[this.keyParts.type];\n        if (!is_supported_type) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.root_indices[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        // First look for matching note in our altered scale\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in our altered scale\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote != null) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in the original scale\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote != null) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        // Then try to unmodify a currently modified note.\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        // Last resort -- shitshoot\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Author: Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either crescendo or decrescendo.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nclass StaveHairpin extends Element {\n    static get CATEGORY() {\n        return Category.StaveHairpin;\n    }\n    /* Helper function to convert ticks into pixels.\n     * Requires a Formatter with voices joined and formatted (to\n     * get pixels per tick)\n     *\n     * options is struct that has:\n     *\n     *  {\n     *   height: px,\n     *   y_shift: px,         // vertical offset\n     *   left_shift_ticks: 0, // left horizontal offset expressed in ticks\n     *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n     *  }\n     *\n     **/\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt == null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const l_shift_px = ppt * ((_a = options.left_shift_ticks) !== null && _a !== void 0 ? _a : 0);\n        const r_shift_px = ppt * ((_b = options.right_shift_ticks) !== null && _b !== void 0 ? _b : 0);\n        const hairpin_options = {\n            height: options.height,\n            y_shift: options.y_shift,\n            left_shift_px: l_shift_px,\n            right_shift_px: r_shift_px,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n        new StaveHairpin({\n            first_note: notes.first_note,\n            last_note: notes.last_note,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpin_options)\n            .setPosition(position)\n            .draw();\n    }\n    /**\n     * Create a new hairpin from the specified notes.\n     *\n     * @param {!Object} notes The notes to tie up.\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     * @param {!Object} type The type of hairpin\n     */\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.render_options = {\n            height: 10,\n            y_shift: 0,\n            left_shift_px: 0,\n            right_shift_px: 0,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        if (options.height != null &&\n            options.y_shift != null &&\n            options.left_shift_px != null &&\n            options.right_shift_px != null) {\n            this.render_options = options;\n        }\n        return this;\n    }\n    /**\n     * Set the notes to attach this hairpin to.\n     *\n     * @param {!Object} notes The start and end notes.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.last_note = notes.last_note;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.render_options.y_shift + 20;\n        let y_shift = params.first_y;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            y_shift = params.first_y - params.staff_height;\n        }\n        const l_shift = this.render_options.left_shift_px;\n        const r_shift = this.render_options.right_shift_px;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.first_note;\n        const lastNote = this.last_note;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            first_x: start.x,\n            last_x: end.x,\n            first_y: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            last_y: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staff_height: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\nexport { StaveHairpin };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { TabTie } from './tabtie';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nclass TabSlide extends TabTie {\n    static get CATEGORY() {\n        return Category.TabSlide;\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    /**\n     * @param notes is a struct of the form:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     * @param notes.first_note the starting note of the slide\n     * @param notes.last_note the ending note of the slide\n     * @param notes.first_indices specifies which string + fret positions of the TabNote are used in this slide. zero indexed.\n     * @param notes.last_indices currently unused. we assume it's the same as first_indices.\n     *\n     * @param direction TabSlide.SLIDE_UP or TabSlide.SLIDE_DOWN\n     */\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        // Determine the direction automatically if it is not provided.\n        if (!direction) {\n            let first_fret = notes.first_note.getPositions()[0].fret;\n            if (typeof first_fret === 'string') {\n                first_fret = parseInt(first_fret, 10);\n            }\n            let last_fret = notes.last_note.getPositions()[0].fret;\n            if (typeof last_fret === 'string') {\n                last_fret = parseInt(last_fret, 10);\n            }\n            // If either of the frets are 'X', parseInt() above will return NaN.\n            // Choose TabSlide.SLIDE_UP by default.\n            if (isNaN(first_fret) || isNaN(last_fret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = first_fret > last_fret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.render_options.cp1 = 11;\n        this.render_options.cp2 = 14;\n        this.render_options.y_shift = 0.5;\n        this.resetFont();\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const first_x_px = params.first_x_px;\n        const first_ys = params.first_ys;\n        const last_x_px = params.last_x_px;\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const slide_y = first_ys[first_indices[i]] + this.render_options.y_shift;\n            if (isNaN(slide_y)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(first_x_px, slide_y + 3 * direction);\n            ctx.lineTo(last_x_px, slide_y - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\nTabSlide.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\nexport { TabSlide };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n// MIT License\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n    static get CATEGORY() {\n        return Category.Tremolo;\n    }\n    /**\n     * @param num number of bars\n     */\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.code = 'tremolo1';\n        // big strokes scales initialised to 1 (no scale)\n        this.y_spacing_scale = 1;\n        this.extra_stroke_scale = 1;\n    }\n    /** Draw the tremolo on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let x = start.x;\n        const gn = isGraceNote(note);\n        const scale = gn ? GraceNote.SCALE : 1;\n        const category = `tremolo.${gn ? 'grace' : 'default'}`;\n        const musicFont = Tables.currentMusicFont();\n        let y_spacing = musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n        // add y_spacing_scale for big strokes (#1258)\n        y_spacing *= this.y_spacing_scale;\n        const height = this.num * y_spacing;\n        let y = note.getStemExtents().baseY - height;\n        if (stemDirection < 0) {\n            y += musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n        }\n        else {\n            y += musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n        }\n        const fontScale = (_a = musicFont.lookupMetric(`${category}.point`)) !== null && _a !== void 0 ? _a : Note.getPoint(gn ? 'grace' : 'default');\n        x += musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n        for (let i = 0; i < this.num; ++i) {\n            Glyph.renderGlyph(ctx, x, y, fontScale, this.code, { category, scale: this.extra_stroke_scale });\n            y += y_spacing;\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n        };\n    }\n    /**\n     * Constructor.\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        // Default to standard tuning.\n        this.setTuning(tuningString);\n    }\n    /** Return the note number associated to the note string. */\n    noteToInteger(noteString) {\n        var _a;\n        return (_a = Tables.keyProperties(noteString).int_value) !== null && _a !== void 0 ? _a : -1;\n    }\n    /**\n     * Set tuning identified by tuning name (eg. 'dagdad')\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    /** Return the note number associated with a tablature string. */\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    /** Return the note number associated with a tablature string and fret. */\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    /** Return the note string associated with tablature string and fret. */\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { CanvasContext } from './canvascontext';\nimport { ChordSymbol, ChordSymbolHorizontalJustify, ChordSymbolVerticalJustify, SymbolModifiers, SymbolTypes, } from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve, CurvePosition } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { Repetition } from './staverepetition';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Volta, VoltaType } from './stavevolta';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { SVGContext } from './svgcontext';\nimport { System } from './system';\nimport { Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket, TextBracketPosition } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextFormatter } from './textformatter';\nimport { TextJustification, TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { DATE, ID, VERSION } from './version';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice, VoiceMode } from './voice';\nclass Flow {\n    static get BUILD() {\n        return {\n            /** version number. */\n            VERSION: VERSION,\n            /** git commit ID that this library was built from. */\n            ID: ID,\n            /** The date when this library was compiled. */\n            DATE: DATE,\n        };\n    }\n    /**\n     * Examples:\n     * ```\n     * Vex.Flow.setMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Bravura', 'Gonville');\n     * ```\n     *\n     * **CASE 1**: You are using `vexflow.js`, which includes all music fonts (Bravura, Gonville, Petaluma, Custom).\n     * In this case, calling this method is optional, since VexFlow already defaults to a music font stack of:\n     * 'Bravura', 'Gonville', 'Custom'.\n     *\n     * **CASE 2**: You are using `vexflow-bravura.js` or `vexflow-petaluma.js` or `vexflow-gonville.js`,\n     * which includes a single music font. Calling this method is unnecessary.\n     *\n     * **CASE 3**: You are using the light weight `vexflow-core.js` to take advantage of lazy loading for fonts.\n     * In this case, the default music font stack is empty.\n     * Example:\n     * ```\n     * await Vex.Flow.fetchMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Petaluma');\n     * ... (do VexFlow stuff) ...\n     * ```\n     * See `demos/fonts/` for more examples.\n     *\n     * @returns an array of Font objects corresponding to the provided `fontNames`.\n     */\n    static setMusicFont(...fontNames) {\n        // Convert the array of font names into an array of Font objects.\n        const fonts = fontNames.map((fontName) => Font.load(fontName));\n        Tables.MUSIC_FONT_STACK = fonts;\n        Glyph.MUSIC_FONT_STACK = fonts.slice();\n        Glyph.CURRENT_CACHE_KEY = fontNames.join(',');\n        return fonts;\n    }\n    /**\n     * Used with vexflow-core which supports dynamic font loading.\n     */\n    // eslint-disable-next-line\n    static fetchMusicFont(fontName, fontModuleOrPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The default implementation does nothing.\n            // See vexflow-core.ts for the implementation that vexflow-core.js uses.\n        });\n    }\n    static getMusicFont() {\n        const fonts = Tables.MUSIC_FONT_STACK;\n        return fonts.map((font) => font.getName());\n    }\n    static getMusicFontStack() {\n        return Tables.MUSIC_FONT_STACK;\n    }\n    static get RENDER_PRECISION_PLACES() {\n        return Tables.RENDER_PRECISION_PLACES;\n    }\n    static set RENDER_PRECISION_PLACES(precision) {\n        Tables.RENDER_PRECISION_PLACES = precision;\n    }\n    static get SOFTMAX_FACTOR() {\n        return Tables.SOFTMAX_FACTOR;\n    }\n    static set SOFTMAX_FACTOR(factor) {\n        Tables.SOFTMAX_FACTOR = factor;\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return Tables.STAVE_LINE_THICKNESS;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        Tables.STAVE_LINE_THICKNESS = value;\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get accidentalMap() {\n        return Tables.accidentalMap;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    // eslint-disable-next-line\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nFlow.Accidental = Accidental;\nFlow.Annotation = Annotation;\nFlow.Articulation = Articulation;\nFlow.Barline = Barline;\nFlow.BarNote = BarNote;\nFlow.Beam = Beam;\nFlow.Bend = Bend;\nFlow.BoundingBox = BoundingBox;\nFlow.BoundingBoxComputation = BoundingBoxComputation;\nFlow.CanvasContext = CanvasContext;\nFlow.ChordSymbol = ChordSymbol;\nFlow.Clef = Clef;\nFlow.ClefNote = ClefNote;\nFlow.Crescendo = Crescendo;\nFlow.Curve = Curve;\nFlow.Dot = Dot;\nFlow.EasyScore = EasyScore;\nFlow.Element = Element;\nFlow.Factory = Factory;\nFlow.Font = Font;\nFlow.Formatter = Formatter;\nFlow.Fraction = Fraction;\nFlow.FretHandFinger = FretHandFinger;\nFlow.GhostNote = GhostNote;\nFlow.Glyph = Glyph;\nFlow.GlyphNote = GlyphNote;\nFlow.GraceNote = GraceNote;\nFlow.GraceNoteGroup = GraceNoteGroup;\nFlow.GraceTabNote = GraceTabNote;\nFlow.KeyManager = KeyManager;\nFlow.KeySignature = KeySignature;\nFlow.KeySigNote = KeySigNote;\nFlow.Modifier = Modifier;\nFlow.ModifierContext = ModifierContext;\nFlow.MultiMeasureRest = MultiMeasureRest;\nFlow.Music = Music;\nFlow.Note = Note;\nFlow.NoteHead = NoteHead;\nFlow.NoteSubGroup = NoteSubGroup;\nFlow.Ornament = Ornament;\nFlow.Parenthesis = Parenthesis;\nFlow.Parser = Parser;\nFlow.PedalMarking = PedalMarking;\nFlow.Registry = Registry;\nFlow.RenderContext = RenderContext;\nFlow.Renderer = Renderer;\nFlow.RepeatNote = RepeatNote;\nFlow.Repetition = Repetition;\nFlow.Stave = Stave;\nFlow.StaveConnector = StaveConnector;\nFlow.StaveHairpin = StaveHairpin;\nFlow.StaveLine = StaveLine;\nFlow.StaveModifier = StaveModifier;\nFlow.StaveNote = StaveNote;\nFlow.StaveTempo = StaveTempo;\nFlow.StaveText = StaveText;\nFlow.StaveTie = StaveTie;\nFlow.Stem = Stem;\nFlow.StringNumber = StringNumber;\nFlow.Stroke = Stroke;\nFlow.SVGContext = SVGContext;\nFlow.System = System;\nFlow.TabNote = TabNote;\nFlow.TabSlide = TabSlide;\nFlow.TabStave = TabStave;\nFlow.TabTie = TabTie;\nFlow.TextBracket = TextBracket;\nFlow.TextDynamics = TextDynamics;\nFlow.TextFormatter = TextFormatter;\nFlow.TextNote = TextNote;\nFlow.TickContext = TickContext;\nFlow.TimeSignature = TimeSignature;\nFlow.TimeSigNote = TimeSigNote;\nFlow.Tremolo = Tremolo;\nFlow.Tuning = Tuning;\nFlow.Tuplet = Tuplet;\nFlow.Vibrato = Vibrato;\nFlow.VibratoBracket = VibratoBracket;\nFlow.Voice = Voice;\nFlow.Volta = Volta;\n// Exported Enums.\n// Sorted by the module / file they are exported from.\nFlow.AnnotationHorizontalJustify = AnnotationHorizontalJustify;\nFlow.AnnotationVerticalJustify = AnnotationVerticalJustify;\nFlow.ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\nFlow.ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\nFlow.SymbolTypes = SymbolTypes;\nFlow.SymbolModifiers = SymbolModifiers;\nFlow.CurvePosition = CurvePosition;\nFlow.FontWeight = FontWeight;\nFlow.FontStyle = FontStyle;\nFlow.ModifierPosition = ModifierPosition;\nFlow.RendererBackends = RendererBackends;\nFlow.RendererLineEndType = RendererLineEndType;\nFlow.BarlineType = BarlineType;\nFlow.StaveModifierPosition = StaveModifierPosition;\nFlow.VoltaType = VoltaType;\nFlow.TextBracketPosition = TextBracketPosition;\nFlow.TextJustification = TextJustification;\nFlow.VoiceMode = VoiceMode;\nexport { Flow };\n","export const VERSION = '4.2.3';\nexport const ID = '62087494cafd5bf226201aab96c90a747c05a52c';\nexport const DATE = '2023-08-16T07:06:43.824Z';\n","export const CommonMetrics = {\n    smufl: true,\n    stave: {\n        padding: 12,\n        endPaddingMax: 10,\n        endPaddingMin: 5,\n        unalignedNotePadding: 10,\n    },\n    accidental: {\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    chordSymbol: {\n        global: {\n            superscriptOffset: -400,\n            subscriptOffset: 300,\n            kerningOffset: -250,\n            lowerKerningText: ['D', 'F', 'P', 'T', 'V', 'Y'],\n            upperKerningText: ['A', 'L'],\n            spacing: 100,\n            superSubRatio: 0.66,\n        },\n        glyphs: {\n            csymDiminished: {\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymHalfDiminished: {\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymAugmented: {\n                leftSideBearing: 0,\n                advanceWidth: 530,\n                yOffset: 0,\n            },\n            csymParensLeftTall: {\n                leftSideBearing: -20,\n                advanceWidth: 184,\n                yOffset: 250,\n            },\n            csymParensRightTall: {\n                leftSideBearing: 0,\n                advanceWidth: 189,\n                yOffset: 250,\n            },\n            csymBracketLeftTall: {\n                leftSideBearing: 0,\n                advanceWidth: 328,\n                yOffset: 0,\n            },\n            csymBracketRightTall: {\n                leftSideBearing: 1,\n                advanceWidth: 600,\n                yOffset: 0,\n            },\n            csymParensLeftVeryTall: {\n                leftSideBearing: 50,\n                advanceWidth: 121,\n                yOffset: 350,\n            },\n            csymParensRightVeryTall: {\n                leftSideBearing: 0,\n                advanceWidth: 111,\n                yOffset: 350,\n            },\n            csymDiagonalArrangementSlash: {\n                leftSideBearing: 250,\n                advanceWidth: 990,\n                yOffset: 300,\n            },\n            csymMinor: {\n                leftSideBearing: 0,\n                advanceWidth: 482,\n                yOffset: 0,\n            },\n            csymMajorSeventh: {\n                leftSideBearing: 200,\n                yOffset: 0,\n                advanceWidth: 600,\n            },\n            accidentalSharp: {\n                leftSideBearing: 20,\n                advanceWidth: 250,\n                yOffset: -302,\n            },\n            accidentalFlat: {\n                leftSideBearing: -20,\n                advanceWidth: 226,\n                yOffset: -184,\n            },\n        },\n    },\n    clef_default: {\n        width: 26,\n        annotations: {\n            '8va': {\n                treble: {\n                    line: -2,\n                    shiftX: 12,\n                },\n            },\n            '8vb': {\n                treble: {\n                    line: 6.5,\n                    shiftX: 10,\n                },\n                bass: {\n                    line: 4,\n                    shiftX: 1,\n                },\n            },\n        },\n    },\n    clef_small: {\n        width: 20,\n        annotations: {\n            '8va': {\n                treble: {\n                    line: -0.2,\n                    shiftX: 8,\n                },\n            },\n            '8vb': {\n                treble: {\n                    line: 5.3,\n                    shiftX: 6,\n                },\n                bass: {\n                    line: 3.1,\n                    shiftX: 0.5,\n                },\n            },\n        },\n    },\n    ornament: {\n        brassScoop: {\n            xOffset: -12,\n            yOffset: 0,\n            stemUpYOffset: 0,\n            reportedWidth: 20,\n        },\n        brassDoitMedium: {\n            xOffset: 16,\n            yOffset: 0,\n            stemUpYOffset: 0,\n            reportedWidth: 22,\n        },\n        brassFallLipShort: {\n            xOffset: 16,\n            yOffset: 0,\n            stemUpYOffset: 0,\n            reportedWidth: 15,\n        },\n        brassLiftMedium: {\n            xOffset: 16,\n            yOffset: 5,\n            stemUpYOffset: 0,\n            reportedWidth: 5,\n        },\n        brassFallRoughMedium: {\n            xOffset: 16,\n            yOffset: 28,\n            stemUpYOffset: 0,\n            reportedWidth: 5,\n        },\n        brassBend: {\n            xOffset: 2,\n            yOffset: -8,\n            stemUpYOffset: 25,\n            reportedWidth: 5,\n        },\n        brassMuteClosed: {\n            xOffset: 3,\n            yOffset: -8,\n            stemUpYOffset: 25,\n            reportedWidth: 5,\n        },\n        brassMuteOpen: {\n            xOffset: 3,\n            yOffset: -7,\n            stemUpYOffset: 25,\n            reportedWidth: 5,\n        },\n        brassFlip: {\n            xOffset: 10,\n            yOffset: 0,\n            stemUpYOffset: 7,\n            reportedWidth: 10,\n        },\n        brassJazzTurn: {\n            xOffset: 0,\n            yOffset: 0,\n            stemUpYOffset: 8,\n            reportedWidth: 31,\n        },\n        brassSmear: {\n            xOffset: 10,\n            yOffset: 0,\n            stemUpYOffset: 8,\n            reportedWidth: 5,\n        },\n    },\n    parenthesis: {\n        default: {\n            width: 7,\n        },\n        gracenote: {\n            width: 3,\n        },\n    },\n    pedalMarking: {},\n    // These are for numeric digits, such as in time signatures\n    digits: {\n        // used by TimeSignature objects\n        shiftLine: -1,\n        // used by tuplets\n        shiftY: -6,\n    },\n    articulation: {\n        articStaccatissimoAbove: {\n            padding: 2,\n        },\n        articStaccatissimoBelow: {\n            padding: 2,\n        },\n    },\n    tremolo: {\n        default: {\n            spacing: 7,\n            offsetYStemUp: -8,\n            offsetYStemDown: 8,\n            offsetXStemUp: 11,\n            offsetXStemDown: 1,\n        },\n        grace: {\n            spacing: (7 * 3) / 5,\n            offsetYStemUp: -(8 * 3) / 5,\n            offsetYStemDown: (8 * 3) / 5,\n            offsetXStemUp: 7,\n            offsetXStemDown: 1,\n        },\n    },\n    staveRepetition: {\n        symbolText: {\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 10,\n        },\n    },\n    noteHead: {\n        minPadding: 2,\n    },\n    stem: {\n        heightAdjustmentForFlag: -3,\n        // These are stem (Y) offsets to the note heads. To shift the\n        // noteheads (x-position) themselves, see glyphs.notehead.custom.\n        noteHead: {\n            noteheadTriangleUpHalf: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpBlack: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpWhole: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXHalf: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXBlack: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXWhole: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadHalf: {\n                offsetYBaseStemUp: -2.55,\n                offsetYBaseStemDown: 2.65,\n            },\n            noteheadBlack: {\n                offsetYBaseStemUp: -2,\n                offsetYBaseStemDown: 2,\n            },\n            noteheadSquareWhite: {\n                offsetYBaseStemDown: -5,\n                offsetYBaseStemUp: 5,\n            },\n        },\n    },\n    stringNumber: {\n        verticalPadding: 8,\n        stemPadding: 2,\n        leftPadding: 5,\n        rightPadding: 6,\n    },\n    tuplet: {\n        noteHeadOffset: 20,\n        stemOffset: 10,\n        bottomLine: 4,\n        topModifierOffset: 15,\n    },\n    // Values under here are used by the Glyph class to reposition and rescale\n    // glyphs based on their category. This should be the first stop for\n    // custom font glyph repositioning.\n    //\n    // The glyph loader first looks up a specific set of settings based on the\n    // glyph code, and if not found, uses the defaults from the category. See\n    // glyphs.textNote for an example of this.\n    //\n    // Details in Glyph.lookupFontMetrics.\n    glyphs: {\n        coda: {\n            shiftX: -7,\n            shiftY: 8,\n        },\n        segno: {\n            shiftX: -7,\n        },\n        flag: {\n            shiftX: -0.75,\n            staveTempo: {\n                shiftX: -1,\n            },\n        },\n        clef_default: {},\n        clef_small: {\n            gClef: {\n                shiftY: 1.5,\n            },\n        },\n        clefNote_default: {},\n        clefNote_small: {},\n        stroke_straight: {\n            arrowheadBlackDown: {\n                shiftX: -4.5,\n            },\n            arrowheadBlackUp: {\n                shiftX: -0.85,\n            },\n        },\n        stroke_wiggly: {\n            arrowheadBlackDown: {\n                shiftX: -1,\n                shiftY: 1,\n            },\n            arrowheadBlackUp: {\n                shiftX: -1,\n                shiftY: 1,\n            },\n        },\n        textNote: {\n            breathMarkTick: {\n                shiftY: 9,\n            },\n            breathMarkComma: {},\n            segno: {\n                shiftX: -7,\n                shiftY: 8,\n            },\n            coda: {\n                shiftX: -7,\n                shiftY: 8,\n            },\n            ornamentTrill: {\n                shiftX: -8,\n                shiftY: 8,\n            },\n            ornamentTurn: {},\n            ornamentTurnSlash: {},\n            ornamentMordent: {\n                shiftX: -8,\n            },\n            ornamentShortTrill: {\n                shiftX: -8,\n            },\n        },\n        noteHead: {},\n        chordSymbol: {\n            scale: 0.8,\n        },\n    },\n};\n","export const CustomFont = {\n    resolution: 1000,\n    fontFamily: 'VexFlowCustom',\n    glyphs: {\n        vexAccidentalMicrotonal1: {\n            x_min: -171.5,\n            x_max: 483.1875,\n            ha: 493,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 ',\n        },\n        vexAccidentalMicrotonal3: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z ',\n        },\n        vexAccidentalMicrotonal4: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z ',\n        },\n        vexNoteHeadRectBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 ',\n        },\n        vexNoteHeadRectWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100',\n        },\n        vexWiggleArpeggioUp: {\n            x_min: 58.53125,\n            x_max: 228.671875,\n            ha: 294,\n            o: 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 ',\n        },\n    },\n};\n","export const GonvilleSmuflFont = {\n    glyphs: {\n        bracketTop: {\n            x_min: 0,\n            x_max: 412,\n            y_min: -18,\n            y_max: 223,\n            ha: 241,\n            o: 'm 569 315 b 583 321 575 319 579 321 b 591 316 586 321 589 319 b 593 310 592 314 593 312 b 579 289 593 306 589 301 b 385 111 517 219 449 156 b 372 101 379 106 373 102 b 244 28 340 78 285 46 b 21 -26 168 -6 88 -26 b 2 -21 6 -26 5 -25 b 0 47 1 -19 0 14 b 2 114 0 79 1 112 b 29 120 5 119 6 119 b 569 315 209 124 395 191 z',\n        },\n        bracketBottom: {\n            x_min: 0,\n            x_max: 412,\n            y_min: -223,\n            y_max: 18,\n            ha: 241,\n            o: 'm 5 24 b 21 26 7 25 12 26 b 63 23 32 26 47 25 b 342 -81 155 13 249 -22 b 388 -113 353 -89 382 -108 b 400 -122 389 -114 395 -118 b 578 -289 459 -166 522 -225 b 593 -310 589 -301 593 -306 b 591 -316 593 -312 592 -314 b 583 -321 588 -319 586 -321 b 568 -315 579 -321 575 -319 b 29 -120 395 -191 209 -124 b 1 -114 5 -119 5 -119 b 0 -47 0 -112 0 -111 b 0 -22 0 -37 0 -29 b 5 24 0 25 0 21 z',\n        },\n        barlineTick: {\n            x_min: -59,\n            x_max: 59,\n            y_min: -139,\n            y_max: 139,\n            ha: 279,\n            o: 'm 24 200 b 34 201 26 200 30 201 b 51 198 40 201 47 200 b 84 152 72 191 84 174 b 84 149 84 151 84 150 b 68 103 84 139 83 137 b -64 -195 3 -44 -63 -194 b -74 -201 -66 -199 -70 -201 b -83 -195 -77 -201 -81 -199 b -84 -191 -84 -194 -84 -193 b -78 -155 -84 -186 -83 -177 b -25 104 -45 8 -35 53 b -11 167 -18 136 -12 164 b 24 200 -6 183 6 195 z',\n        },\n        breathMarkTick: {\n            x_min: -151,\n            x_max: 272,\n            y_min: 0,\n            y_max: 429,\n            ha: 429,\n            o: 'm 367 613 b 382 618 373 616 378 618 b 392 607 388 618 392 614 b 376 592 392 601 390 599 b 309 546 354 580 331 565 b 46 47 185 439 88 256 b 0 0 39 14 26 0 b -44 39 -23 0 -36 12 b -203 270 -68 118 -125 202 b -217 288 -213 279 -217 284 b -215 294 -217 290 -217 292 b -208 299 -213 297 -211 299 b -193 293 -204 299 -199 297 b -19 144 -124 249 -66 199 b -14 138 -16 141 -14 138 b -9 149 -14 138 -11 143 b 367 613 72 359 220 541 z',\n        },\n        segno: {\n            x_min: 7,\n            x_max: 493,\n            y_min: -50,\n            y_max: 650,\n            ha: 699,\n            o: 'm 218 934 b 237 935 224 935 231 935 b 394 820 306 935 371 889 b 398 794 397 811 398 802 b 333 730 398 758 372 730 b 269 777 302 730 280 746 b 183 851 254 823 219 851 b 158 846 175 851 166 849 b 120 786 133 835 120 815 b 122 766 120 780 121 773 b 347 511 138 672 227 570 b 368 500 356 506 366 501 l 371 499 l 372 501 b 485 672 373 502 404 550 b 560 786 506 704 540 755 b 617 873 581 818 607 857 b 645 910 639 906 640 907 b 660 915 650 914 655 915 b 687 888 674 915 687 904 b 687 886 687 887 687 887 b 665 844 687 878 687 878 b 610 761 655 830 631 792 b 462 537 551 672 501 595 b 425 480 443 508 426 482 l 422 476 l 431 472 b 628 269 521 423 591 352 b 658 136 649 225 658 179 b 518 -68 658 36 606 -48 b 484 -71 507 -70 495 -71 b 327 43 415 -71 351 -26 b 322 70 324 52 322 61 b 387 134 322 106 348 134 b 451 86 419 134 440 118 b 537 13 466 41 501 13 b 563 18 545 13 554 15 b 600 78 587 29 600 49 b 598 98 600 84 599 91 b 374 353 582 192 493 293 b 352 363 364 358 354 363 l 349 365 l 348 363 b 235 192 347 361 315 313 b 160 77 214 160 180 109 b 103 -9 139 46 113 7 b 75 -47 81 -42 80 -43 b 60 -51 70 -50 65 -51 b 33 -24 46 -51 33 -40 b 33 -22 33 -23 33 -23 b 55 19 33 -14 33 -14 b 259 329 84 63 162 181 b 297 386 279 360 296 385 l 298 388 l 290 392 b 92 594 200 441 130 512 b 62 728 71 639 62 685 b 218 934 62 834 121 922 z m 630 616 b 643 618 634 617 639 618 b 699 589 665 618 687 607 b 709 552 706 578 709 565 b 699 515 709 539 706 526 b 644 486 686 496 665 486 b 596 507 626 486 609 493 b 578 551 584 520 578 536 b 630 616 578 581 598 609 z m 62 376 b 75 378 67 377 71 378 b 124 357 93 378 112 370 b 142 312 136 344 142 328 b 131 275 142 299 138 286 b 76 246 118 256 97 246 b 28 267 59 246 41 253 b 11 311 16 280 11 296 b 62 376 11 341 30 369 z',\n        },\n        coda: {\n            x_min: 22,\n            x_max: 478,\n            y_min: -31,\n            y_max: 531,\n            ha: 563,\n            o: 'm 350 764 b 359 765 352 765 355 765 b 367 764 362 765 365 765 b 381 753 373 762 378 758 b 386 706 386 746 386 747 b 387 670 386 672 386 670 b 448 647 396 670 430 657 b 597 395 532 601 587 507 l 598 386 l 632 386 b 677 382 670 386 670 386 b 689 359 685 376 689 367 b 677 336 689 350 685 341 b 632 331 670 331 670 331 l 598 331 l 597 322 b 396 50 585 186 504 77 b 387 48 392 49 388 48 b 386 12 386 48 386 46 l 386 8 b 380 -36 386 -29 386 -28 b 359 -45 375 -42 367 -45 b 338 -36 351 -45 342 -42 b 331 8 331 -28 331 -29 l 331 12 b 330 48 331 46 331 48 b 269 70 321 48 288 60 b 120 322 186 117 130 210 l 119 331 l 86 331 b 43 336 50 331 50 331 b 31 359 35 341 31 350 b 50 385 31 370 38 381 b 86 386 53 386 60 386 l 119 386 l 120 395 b 269 647 130 508 186 601 b 330 670 288 657 321 670 b 331 706 331 670 331 672 b 332 746 331 736 332 744 b 350 764 335 754 342 762 z m 331 502 b 331 617 331 565 331 617 b 310 599 329 617 317 607 b 229 393 266 555 235 477 l 229 386 l 280 386 l 331 386 z m 393 613 b 386 617 390 615 387 617 b 386 502 386 617 386 565 l 386 386 l 437 386 l 488 386 l 488 393 b 393 613 482 486 443 575 z m 331 216 l 331 331 l 280 331 l 229 331 l 229 324 b 310 118 235 241 266 162 b 331 100 317 111 329 100 b 331 216 331 100 331 152 z m 488 324 l 488 331 l 437 331 l 386 331 l 386 216 b 386 100 386 152 386 100 b 408 118 388 100 400 111 b 488 324 452 162 482 241 z',\n        },\n        gClef: {\n            x_min: 0,\n            x_max: 623,\n            y_min: -632,\n            y_max: 1082,\n            ha: 1713,\n            o: 'm 521 1558 b 524 1558 522 1558 523 1558 b 579 1515 537 1558 556 1543 b 718 1118 662 1415 718 1254 b 717 1089 718 1108 718 1098 b 505 667 707 930 639 793 b 470 633 493 655 477 640 l 456 620 l 483 495 b 510 369 498 426 510 369 b 510 369 510 369 510 369 b 519 370 511 369 514 370 b 558 372 525 371 542 372 b 590 371 572 372 585 371 b 897 45 760 350 885 217 b 898 22 897 38 898 30 b 666 -316 898 -120 805 -256 b 657 -320 661 -318 657 -320 b 675 -403 657 -320 665 -357 b 695 -500 685 -448 694 -491 b 704 -596 701 -534 704 -566 b 642 -796 704 -677 683 -744 b 407 -909 582 -871 495 -909 b 176 -804 323 -909 238 -874 b 137 -704 150 -774 137 -739 b 168 -612 137 -672 147 -640 b 291 -550 198 -571 245 -550 b 405 -604 333 -550 376 -568 b 437 -694 427 -632 437 -663 b 305 -834 437 -764 384 -831 l 294 -835 l 298 -836 b 405 -861 330 -853 367 -861 b 539 -823 453 -861 501 -848 b 655 -596 617 -774 655 -699 b 644 -490 655 -564 651 -528 b 611 -336 640 -471 611 -336 b 611 -336 611 -336 611 -336 b 598 -339 610 -336 605 -337 b 536 -349 579 -343 558 -347 b 498 -350 529 -350 514 -350 b 449 -349 478 -350 457 -350 b 0 149 189 -320 0 -110 b 102 460 0 264 33 364 b 342 742 175 562 250 650 l 374 774 l 360 839 b 342 922 352 874 344 912 b 321 1024 329 983 323 1013 b 312 1124 315 1057 312 1091 b 477 1523 312 1275 371 1420 b 521 1558 501 1546 513 1556 z m 591 1349 b 574 1351 586 1350 580 1351 b 471 1297 542 1351 506 1332 b 376 1044 410 1236 376 1145 b 383 967 376 1019 378 993 b 415 814 385 956 414 814 b 415 814 415 814 415 814 b 460 860 416 814 450 848 b 644 1242 578 991 644 1132 b 639 1295 644 1261 643 1278 b 591 1349 632 1327 618 1342 z m 418 565 b 415 577 417 571 416 577 b 290 431 412 577 327 479 b 160 220 210 331 182 284 b 135 74 143 172 135 122 b 209 -162 135 -11 160 -94 b 495 -314 278 -259 385 -314 b 550 -310 514 -314 532 -313 b 602 -296 570 -306 602 -298 b 574 -164 602 -295 590 -236 b 522 81 559 -92 535 18 b 497 196 508 144 497 196 b 497 196 497 196 497 196 b 457 179 493 196 469 186 b 358 16 391 144 358 79 b 438 -128 358 -40 384 -95 b 455 -151 449 -135 455 -143 b 448 -165 455 -156 452 -160 b 434 -172 444 -169 440 -172 b 401 -159 427 -172 417 -168 b 256 82 305 -110 256 -15 b 386 322 256 172 299 264 b 462 358 408 337 453 358 b 462 359 462 358 462 358 b 462 360 462 359 462 359 b 418 565 462 362 422 547 z m 581 203 b 558 204 576 204 565 204 l 545 204 l 546 202 b 589 -1 546 201 565 109 b 634 -214 613 -112 633 -208 b 642 -251 636 -220 639 -237 l 648 -277 l 651 -275 b 776 -137 710 -241 752 -195 b 795 -42 789 -106 795 -73 b 581 203 795 78 707 188 z',\n        },\n        cClef: {\n            x_min: 0,\n            x_max: 643,\n            y_min: -508,\n            y_max: 508,\n            ha: 1016,\n            o: 'm 0 0 l 0 731 l 87 731 l 175 731 l 175 0 l 175 -731 l 87 -731 l 0 -731 z m 240 0 l 240 731 l 262 731 l 284 731 l 284 382 l 284 32 l 291 38 b 374 145 318 61 351 104 b 439 314 402 196 423 251 b 458 341 444 338 447 341 b 475 319 470 341 474 335 b 647 120 483 206 560 120 b 665 122 653 120 659 121 b 771 330 741 132 766 181 b 772 404 772 357 772 381 b 707 662 772 557 753 630 b 615 687 684 679 651 687 b 517 666 582 687 548 680 b 504 660 509 663 504 660 b 504 660 504 660 504 660 b 578 578 545 658 578 621 b 578 575 578 577 578 576 b 492 494 576 524 534 494 b 419 534 465 494 437 506 b 403 584 408 550 403 567 b 434 651 403 608 413 632 b 616 721 485 698 550 721 b 884 565 720 721 826 665 b 925 406 912 515 925 460 b 719 99 925 272 846 140 b 648 87 694 91 671 87 b 543 122 610 87 576 99 b 536 126 540 124 536 126 b 535 126 535 126 535 126 b 497 63 535 126 518 98 l 459 0 l 497 -63 b 535 -126 518 -98 535 -126 b 536 -126 535 -126 535 -126 b 543 -122 536 -126 540 -124 b 648 -87 575 -99 610 -87 b 677 -89 657 -87 667 -88 b 924 -382 811 -110 913 -230 b 925 -407 925 -391 925 -399 b 639 -720 925 -570 803 -706 b 615 -721 631 -720 623 -721 b 430 -647 545 -721 478 -694 b 403 -585 412 -629 403 -607 b 492 -494 403 -538 439 -494 b 497 -494 493 -494 495 -494 b 578 -578 545 -496 578 -536 b 564 -625 578 -594 574 -610 b 504 -660 551 -644 525 -659 b 504 -660 504 -660 504 -660 b 517 -666 504 -660 509 -663 b 615 -687 548 -680 582 -687 b 707 -662 651 -687 684 -679 b 772 -404 753 -630 772 -557 b 771 -330 772 -381 772 -357 b 665 -122 766 -181 741 -132 b 647 -120 659 -121 653 -120 b 475 -319 560 -120 483 -206 b 458 -341 474 -335 470 -341 b 439 -314 447 -341 444 -338 b 374 -145 423 -251 402 -196 b 291 -38 351 -104 317 -61 l 284 -32 l 284 -382 l 284 -731 l 262 -731 l 240 -731 z',\n        },\n        fClef: {\n            x_min: 0,\n            x_max: 661,\n            y_min: -545,\n            y_max: 254,\n            ha: 798,\n            o: 'm 326 364 b 356 365 336 365 346 365 b 647 278 464 365 575 332 b 788 -2 740 207 788 112 b 785 -51 788 -18 787 -34 b 161 -747 750 -356 500 -634 b 16 -784 110 -764 31 -784 b 0 -768 7 -784 0 -778 b 24 -747 0 -758 3 -755 b 601 -72 353 -625 575 -364 b 603 -10 602 -51 603 -30 b 469 298 603 133 556 243 b 346 332 432 321 389 332 b 100 185 248 332 146 277 b 89 161 97 178 89 162 b 89 161 89 161 89 161 b 95 164 90 161 92 162 b 169 185 118 179 144 185 b 308 74 232 185 293 142 b 311 42 310 63 311 53 b 167 -101 311 -36 248 -101 b 147 -99 161 -101 154 -100 b 9 79 65 -88 9 -15 l 9 79 b 326 364 9 228 148 353 z m 888 225 b 894 225 889 225 891 225 b 914 223 901 225 910 224 b 952 171 940 214 952 192 b 914 118 952 149 939 127 b 898 116 910 117 904 116 b 881 118 892 116 886 117 b 843 170 856 127 843 149 b 888 225 843 195 859 219 z m 888 -116 b 894 -116 889 -116 891 -116 b 914 -118 901 -116 910 -117 b 952 -170 940 -127 952 -149 b 914 -223 952 -192 939 -214 b 898 -225 910 -224 904 -225 b 881 -223 892 -225 886 -224 b 843 -171 856 -214 843 -193 b 888 -116 843 -146 859 -122 z',\n        },\n        unpitchedPercussionClef1: {\n            x_min: -4,\n            x_max: 337,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm -6 0 l -6 360 l 75 360 l 157 360 l 157 0 l 157 -360 l 75 -360 l -6 -360 z m 321 0 l 321 360 l 403 360 l 485 360 l 485 0 l 485 -360 l 403 -360 l 321 -360 z',\n        },\n        '6stringTabClef': {\n            x_min: 0,\n            x_max: 501,\n            y_min: -735,\n            y_max: 753,\n            ha: 1487,\n            o: 'm 633 1083 b 639 1084 635 1084 637 1084 b 669 1072 650 1084 661 1079 b 681 1043 677 1063 681 1053 b 657 1004 681 1028 673 1013 b 467 964 609 980 535 964 l 452 964 l 452 959 b 456 874 455 932 456 903 b 418 611 456 781 443 686 b 245 415 380 495 327 435 b 195 409 228 411 214 409 b 147 412 182 409 167 410 b 110 453 124 414 110 433 b 122 482 110 464 114 474 b 151 494 130 490 141 494 b 184 478 163 494 175 489 b 194 475 186 476 190 475 b 224 486 202 475 213 479 b 283 575 246 500 263 527 b 335 871 317 657 335 760 b 331 967 335 903 334 935 l 330 980 l 321 982 b 260 992 301 989 280 992 b 139 927 206 992 160 968 b 90 895 128 906 109 895 b 42 933 70 895 49 908 b 40 947 40 937 40 942 b 105 1020 40 972 61 996 b 263 1058 150 1045 207 1058 b 350 1047 293 1058 323 1054 b 465 1030 389 1036 429 1030 b 612 1073 526 1030 579 1045 b 633 1083 618 1078 625 1082 z m 441 376 b 448 376 443 376 445 376 b 470 374 456 376 465 375 b 511 321 494 366 509 346 b 534 155 515 283 525 210 b 621 -190 556 21 589 -109 b 668 -253 632 -220 651 -245 l 672 -254 l 676 -253 b 687 -252 680 -252 683 -252 b 721 -287 707 -252 721 -269 b 705 -316 721 -298 716 -309 b 676 -321 699 -320 689 -321 b 650 -319 668 -321 659 -321 b 506 -206 588 -312 533 -269 b 444 0 487 -163 460 -72 b 441 8 443 4 441 8 b 441 8 441 8 441 8 b 436 -3 441 7 438 2 b 381 -99 422 -33 400 -72 b 375 -109 377 -105 375 -107 b 381 -114 375 -111 377 -112 b 435 -133 398 -126 415 -132 b 452 -138 446 -134 448 -134 b 457 -150 455 -141 457 -145 b 446 -166 457 -156 453 -163 b 406 -174 434 -171 420 -174 b 344 -160 385 -174 363 -169 l 337 -156 l 334 -159 b 49 -314 250 -255 145 -311 b 39 -315 45 -315 42 -315 b 10 -305 23 -315 18 -312 b 0 -281 3 -298 0 -290 b 34 -247 0 -264 14 -247 b 40 -248 36 -247 38 -247 b 46 -248 42 -248 44 -248 b 144 -208 69 -248 108 -233 b 390 306 283 -115 381 90 b 394 334 391 320 392 328 b 441 376 401 356 419 372 z m 376 -371 b 408 -371 383 -371 395 -371 b 451 -372 425 -371 444 -371 b 529 -388 482 -376 502 -380 b 689 -546 621 -417 689 -484 b 563 -696 689 -599 639 -658 l 552 -701 l 561 -705 b 700 -882 646 -748 700 -818 b 699 -896 700 -887 700 -892 b 503 -1054 689 -974 608 -1039 b 451 -1058 486 -1057 468 -1058 b 272 -1010 389 -1058 329 -1042 b 248 -972 257 -1001 248 -987 b 249 -963 248 -969 248 -966 l 250 -959 l 249 -960 b 241 -966 248 -961 244 -964 b 124 -1015 208 -992 168 -1009 b 90 -1017 118 -1016 104 -1017 b 48 -1015 72 -1017 52 -1016 b 19 -977 30 -1009 19 -993 b 31 -949 19 -967 23 -957 b 59 -937 39 -941 49 -937 b 85 -947 68 -937 77 -941 l 88 -951 l 94 -951 b 210 -845 134 -951 183 -906 b 220 -821 212 -840 216 -830 b 286 -526 264 -724 286 -623 b 283 -469 286 -507 285 -488 b 282 -459 283 -463 282 -459 b 282 -459 282 -459 282 -459 b 256 -469 281 -459 266 -464 b 141 -563 201 -491 160 -526 b 94 -592 130 -583 112 -592 b 43 -540 68 -592 43 -573 b 88 -476 43 -518 51 -505 b 376 -371 158 -418 261 -381 z m 432 -437 b 411 -437 427 -437 418 -437 l 399 -437 l 400 -440 b 406 -505 402 -448 405 -478 b 407 -527 407 -512 407 -520 b 334 -840 407 -628 382 -737 b 284 -925 315 -881 304 -901 b 280 -930 281 -928 280 -929 b 281 -930 280 -930 280 -930 b 284 -930 281 -930 282 -930 b 291 -929 286 -929 288 -929 b 320 -941 300 -929 310 -933 b 452 -991 362 -975 405 -991 l 452 -991 b 580 -883 531 -991 580 -941 b 538 -791 580 -852 566 -820 b 421 -733 508 -761 470 -742 b 392 -715 405 -730 397 -724 b 388 -698 389 -709 388 -703 b 420 -665 388 -681 401 -667 b 567 -563 490 -658 555 -613 b 569 -546 568 -557 569 -552 b 432 -437 569 -493 510 -444 z',\n        },\n        timeSig0: {\n            x_min: 0,\n            x_max: 380,\n            y_min: -250,\n            y_max: 236,\n            ha: 486,\n            o: 'm 249 313 b 272 314 256 314 264 314 b 428 259 325 314 385 293 b 547 0 505 196 547 105 b 544 -49 547 -16 546 -32 b 273 -314 526 -197 407 -314 b 32 -149 175 -314 81 -250 b 0 0 11 -105 0 -53 b 32 150 0 53 11 106 b 249 313 78 242 158 302 z m 293 279 b 273 281 286 280 280 281 b 203 251 242 281 216 270 b 170 -3 185 224 170 102 b 172 -59 170 -23 171 -42 b 203 -251 178 -163 189 -231 b 273 -281 216 -270 243 -281 b 306 -277 284 -281 295 -280 b 366 -160 344 -267 356 -243 b 376 0 373 -103 376 -51 b 366 160 376 51 373 103 b 293 279 355 250 341 272 z m 273 -360 l 275 -360 l 272 -360 z m 273 340 l 275 340 l 272 340 z',\n        },\n        timeSig1: {\n            x_min: 0,\n            x_max: 254,\n            y_min: -250,\n            y_max: 236,\n            ha: 486,\n            o: 'm 135 302 b 210 303 137 303 141 303 b 235 303 219 303 228 303 b 290 298 290 303 286 303 b 295 70 295 293 295 314 b 300 -219 295 -201 295 -202 b 352 -269 307 -239 324 -255 b 366 -287 361 -274 366 -280 b 361 -298 366 -291 364 -295 b 266 -303 357 -303 367 -303 b 210 -303 250 -303 232 -303 b 154 -303 188 -303 170 -303 b 59 -298 53 -303 63 -303 b 54 -287 55 -295 54 -291 b 68 -269 54 -280 59 -274 b 120 -219 96 -255 113 -239 b 125 -50 124 -205 125 -193 b 125 24 125 -29 125 -4 l 125 189 l 120 181 b 90 136 116 176 103 156 b 48 72 77 116 58 87 b 16 38 26 38 26 38 b 0 54 6 38 0 45 b 0 56 0 55 0 55 l 0 60 l 64 178 b 135 302 128 296 130 299 z m 183 -360 l 184 -360 l 182 -360 z m 183 340 l 184 340 l 182 340 z',\n        },\n        timeSig2: {\n            x_min: 0,\n            x_max: 337,\n            y_min: -250,\n            y_max: 236,\n            ha: 486,\n            o: 'm 210 313 b 232 314 217 314 224 314 b 317 303 261 314 293 310 b 459 147 407 277 459 217 b 441 77 459 124 453 101 b 258 -67 409 10 349 -37 b 76 -181 173 -95 117 -130 l 73 -185 l 77 -182 b 226 -128 121 -146 174 -128 b 322 -152 260 -128 293 -136 b 378 -173 346 -165 359 -170 b 395 -174 383 -174 389 -174 b 454 -149 421 -174 446 -164 b 470 -139 457 -142 464 -139 b 486 -155 478 -139 486 -145 b 462 -217 486 -165 474 -197 b 319 -313 428 -276 373 -313 l 318 -313 b 273 -300 296 -313 290 -311 b 133 -256 226 -271 178 -256 b 93 -260 119 -256 106 -257 b 32 -294 68 -265 41 -280 b 15 -303 28 -300 21 -303 b 1 -292 9 -303 3 -299 b 0 -284 0 -291 0 -288 b 6 -234 0 -271 3 -249 b 180 -36 28 -147 90 -75 b 303 122 246 -7 290 50 b 305 146 305 130 305 138 b 272 225 305 177 294 204 b 185 259 249 248 220 259 b 163 257 178 259 170 258 b 152 256 155 257 152 256 b 155 253 152 255 153 254 b 191 188 180 238 191 213 b 138 112 191 156 173 124 b 112 108 129 109 120 108 b 29 191 67 108 29 146 b 33 214 29 199 30 206 b 210 313 46 263 122 305 z m 243 -360 l 244 -360 l 241 -360 z m 243 340 l 244 340 l 241 340 z',\n        },\n        timeSig3: {\n            x_min: 0,\n            x_max: 302,\n            y_min: -250,\n            y_max: 236,\n            ha: 486,\n            o: 'm 179 313 b 209 314 189 314 199 314 b 429 163 327 314 429 247 b 282 29 429 110 369 56 l 272 26 l 275 25 b 430 -111 354 -1 413 -53 b 435 -147 433 -123 435 -136 b 268 -308 435 -222 369 -288 b 211 -314 249 -312 230 -314 b 24 -241 140 -314 72 -288 b 0 -185 7 -224 0 -204 b 82 -100 0 -142 35 -100 b 97 -101 87 -100 92 -100 b 162 -180 140 -109 162 -145 b 113 -251 162 -209 146 -239 b 110 -253 111 -252 110 -252 b 120 -256 110 -253 113 -254 b 164 -261 136 -260 150 -261 b 248 -228 197 -261 226 -250 b 281 -145 270 -206 281 -178 b 278 -112 281 -135 280 -123 b 157 10 264 -42 215 7 b 135 27 141 11 135 16 b 157 44 135 39 141 43 b 272 137 210 47 257 85 b 276 162 275 145 276 154 b 194 256 276 206 244 245 b 167 258 188 258 178 258 b 124 255 152 258 136 257 l 119 254 l 123 252 b 162 186 149 238 162 212 b 108 110 162 154 144 121 b 83 105 100 107 91 105 b 0 189 37 105 0 144 b 8 224 0 200 3 212 b 179 313 28 266 103 305 z m 217 -360 l 219 -360 l 216 -360 z m 217 340 l 219 340 l 216 340 z',\n        },\n        timeSig4: {\n            x_min: 0,\n            x_max: 345,\n            y_min: -250,\n            y_max: 236,\n            ha: 486,\n            o: 'm 184 302 b 304 303 186 303 247 303 b 403 302 354 303 401 303 b 412 286 409 299 412 294 b 392 256 412 280 411 278 b 260 108 374 236 318 173 b 222 67 243 89 226 71 b 165 3 218 62 193 34 b 90 -82 138 -28 104 -66 b 65 -111 77 -97 65 -110 b 64 -111 64 -111 64 -111 b 160 -112 64 -112 74 -112 l 257 -112 l 257 -43 b 259 27 257 24 257 25 b 307 82 259 28 281 53 b 373 156 332 110 362 144 b 409 188 402 189 401 188 b 425 179 416 188 422 185 b 426 32 426 176 426 171 l 426 -112 l 452 -112 b 481 -113 476 -112 477 -112 b 494 -134 489 -116 494 -125 b 488 -149 494 -139 492 -145 b 452 -156 482 -155 481 -156 l 426 -156 l 426 -162 b 427 -183 427 -165 427 -175 b 484 -269 428 -227 441 -248 b 497 -287 493 -274 497 -280 b 493 -298 497 -291 496 -295 b 397 -303 488 -303 499 -303 b 341 -303 382 -303 363 -303 b 285 -303 320 -303 301 -303 b 190 -298 184 -303 195 -303 b 185 -287 187 -295 185 -291 b 199 -269 185 -280 190 -274 b 256 -183 242 -248 255 -227 b 256 -162 256 -175 256 -165 l 257 -156 l 135 -156 b 90 -156 117 -156 102 -156 b 5 -151 2 -156 9 -155 b 0 -140 2 -148 0 -144 b 9 -122 0 -135 3 -129 b 174 272 110 -9 170 134 b 184 302 175 295 176 298 z m 249 -360 l 250 -360 l 247 -360 z m 249 340 l 250 340 l 247 340 z',\n        },\n        timeSig5: {\n            x_min: 0,\n            x_max: 302,\n            y_min: -250,\n            y_max: 236,\n            ha: 486,\n            o: 'm 51 302 b 57 303 53 302 55 303 b 71 300 61 303 65 302 b 224 275 117 283 170 275 b 391 300 279 275 336 283 b 406 303 398 302 402 303 b 417 298 411 303 414 301 b 421 288 420 295 421 292 b 411 260 421 282 418 274 b 278 157 378 194 340 165 b 226 154 262 155 244 154 b 78 175 177 154 124 161 b 66 179 72 177 66 179 b 56 64 66 178 56 68 b 56 64 56 64 56 64 b 56 64 56 64 56 64 b 63 67 57 64 60 65 b 159 96 89 81 124 92 b 201 98 168 97 185 98 b 227 97 212 98 222 98 b 434 -104 351 80 434 -1 l 434 -105 b 239 -312 434 -208 353 -294 b 212 -314 230 -313 221 -314 b 23 -229 148 -314 76 -282 b 0 -174 7 -213 0 -193 b 82 -89 0 -131 35 -89 b 97 -90 87 -89 92 -89 b 162 -168 140 -98 162 -133 b 108 -242 162 -199 145 -230 l 102 -244 l 109 -247 b 159 -259 127 -255 143 -259 b 215 -241 178 -259 197 -253 b 281 -99 258 -212 281 -161 b 277 -51 281 -84 280 -68 b 211 62 267 6 241 51 l 205 64 l 189 64 b 57 24 142 64 96 50 b 37 14 43 14 42 14 b 20 30 26 14 20 20 b 43 293 20 41 42 290 b 51 302 44 297 48 300 z m 222 -276 b 222 -276 222 -276 222 -276 b 218 -277 221 -276 221 -276 b 216 -279 217 -278 216 -279 b 216 -279 216 -279 216 -279 b 222 -276 217 -279 222 -276 z m 217 -360 l 219 -360 l 216 -360 z m 217 340 l 219 340 l 216 340 z',\n        },\n        timeSig6: {\n            x_min: 0,\n            x_max: 349,\n            y_min: -250,\n            y_max: 236,\n            ha: 486,\n            o: 'm 272 313 b 295 314 278 314 286 314 b 350 308 314 314 336 312 b 473 226 402 295 458 259 b 481 191 479 215 481 203 b 399 108 481 147 444 108 b 373 112 390 108 382 109 b 319 187 337 124 319 156 b 372 260 319 218 337 249 b 378 263 375 262 378 263 b 378 263 378 263 378 263 b 347 275 378 264 358 271 b 305 280 333 278 319 280 b 220 242 270 280 239 267 b 178 110 201 217 187 173 b 170 31 175 88 170 41 b 170 29 170 30 170 29 b 170 29 170 29 170 29 b 180 32 171 29 175 30 b 273 52 213 45 243 52 b 364 33 302 52 332 45 b 487 -64 422 11 466 -24 b 502 -128 497 -83 502 -105 b 479 -208 502 -156 494 -185 b 272 -314 439 -268 345 -314 b 239 -310 260 -314 249 -313 b 9 -77 129 -284 35 -188 b 0 6 3 -53 0 -23 b 5 65 0 26 2 47 b 272 313 27 193 137 296 z m 290 17 b 273 19 284 18 279 19 b 227 2 254 19 236 13 b 198 -122 209 -17 198 -69 b 201 -175 198 -140 199 -158 b 274 -280 214 -258 229 -280 l 274 -280 b 341 -193 315 -280 329 -262 b 349 -123 346 -166 349 -145 b 344 -66 349 -105 347 -87 b 290 17 334 -9 321 12 z m 251 -360 l 253 -360 l 250 -360 z m 251 340 l 253 340 l 250 340 z',\n        },\n        timeSig7: {\n            x_min: 0,\n            x_max: 326,\n            y_min: -250,\n            y_max: 236,\n            ha: 486,\n            o: 'm 162 314 b 179 315 168 315 174 315 b 333 260 232 315 290 294 b 361 249 343 252 350 249 b 370 250 364 249 367 249 b 435 291 395 253 417 267 b 453 303 442 299 447 303 b 460 302 455 303 457 303 b 469 288 466 299 469 296 b 456 233 469 279 465 263 b 369 16 433 146 396 56 b 290 -268 322 -53 293 -159 b 280 -302 289 -295 289 -298 b 192 -303 278 -303 235 -303 b 105 -302 150 -303 107 -303 b 96 -281 98 -298 96 -294 b 96 -280 96 -280 96 -280 b 178 -54 96 -212 128 -124 b 279 57 207 -12 235 18 b 399 198 335 107 368 146 b 404 207 402 204 404 206 b 403 207 404 207 404 207 b 400 205 403 207 402 206 b 258 155 357 172 306 155 b 132 201 212 155 167 171 b 90 222 117 215 103 222 b 58 201 78 222 67 215 b 33 141 49 187 41 168 b 16 128 30 133 23 128 b 1 138 10 128 4 131 b 0 216 0 140 0 178 b 1 293 0 253 0 291 b 15 303 4 300 9 303 b 30 298 20 303 25 301 b 52 289 37 292 43 289 b 96 300 62 289 75 293 b 162 314 124 309 140 312 z m 234 -360 l 236 -360 l 233 -360 z m 234 340 l 236 340 l 233 340 z',\n        },\n        timeSig8: {\n            x_min: 0,\n            x_max: 360,\n            y_min: -250,\n            y_max: 236,\n            ha: 486,\n            o: 'm 246 314 b 260 314 252 314 258 314 b 261 314 261 314 261 314 b 275 313 263 314 269 314 b 399 276 317 312 363 298 b 486 136 456 242 486 189 b 441 29 486 99 471 61 l 435 23 l 441 19 b 518 -119 492 -16 518 -67 b 483 -217 518 -153 507 -187 b 259 -314 435 -279 349 -314 b 138 -291 218 -314 176 -307 b 0 -118 48 -256 0 -187 b 76 18 0 -69 25 -20 l 83 23 l 77 30 b 32 137 48 61 32 99 b 42 189 32 155 36 172 b 246 314 70 260 152 310 z m 282 267 b 260 269 276 269 268 269 b 228 266 249 269 237 268 b 168 214 192 258 168 235 b 171 202 168 210 169 206 b 354 62 190 162 270 101 l 359 60 l 362 65 b 380 136 375 88 380 112 b 282 267 380 196 342 254 z m 148 -20 b 139 -16 144 -18 139 -16 b 139 -16 139 -16 139 -16 b 119 -36 137 -16 124 -29 b 91 -118 100 -62 91 -90 b 188 -255 91 -174 126 -229 b 257 -269 210 -265 234 -269 b 356 -229 298 -269 336 -255 b 368 -196 364 -218 368 -208 b 350 -151 368 -183 362 -168 b 166 -28 317 -101 256 -61 b 148 -20 161 -26 153 -23 z m 259 -360 l 261 -360 l 258 -360 z m 259 340 l 261 340 l 258 340 z',\n        },\n        timeSig9: {\n            x_min: 0,\n            x_max: 349,\n            y_min: -250,\n            y_max: 236,\n            ha: 486,\n            o: 'm 208 313 b 227 314 214 314 220 314 b 332 284 259 314 295 304 b 497 61 420 236 480 155 b 503 -4 501 42 503 19 b 498 -65 503 -26 501 -47 b 279 -303 479 -176 393 -269 b 204 -314 253 -310 228 -314 b 98 -287 166 -314 130 -305 b 25 -216 58 -265 33 -241 b 22 -191 23 -208 22 -199 b 104 -108 22 -146 59 -108 b 130 -112 112 -108 121 -109 b 184 -187 166 -124 184 -156 b 131 -260 184 -218 166 -249 b 125 -263 128 -262 125 -263 b 125 -263 125 -263 125 -263 b 156 -275 125 -264 144 -271 b 197 -280 170 -278 184 -280 b 279 -247 231 -280 260 -269 b 324 -117 300 -223 313 -182 b 333 -31 328 -93 333 -42 b 332 -29 333 -30 333 -29 b 332 -29 332 -29 332 -29 b 323 -32 332 -29 328 -30 b 230 -52 289 -45 260 -52 b 173 -44 211 -52 192 -49 b 23 50 108 -27 51 9 b 0 128 8 74 0 101 b 34 222 0 161 11 194 b 208 313 70 266 142 304 z m 248 278 b 231 281 243 280 237 281 b 195 272 217 281 203 277 b 156 156 176 259 163 221 b 154 124 154 146 154 135 b 183 -2 154 72 166 16 b 230 -19 194 -13 212 -19 b 276 -2 248 -19 266 -13 b 305 122 294 17 305 69 b 301 175 305 140 304 158 b 248 278 290 246 278 270 z m 251 -360 l 253 -360 l 250 -360 z m 251 340 l 253 340 l 250 340 z',\n        },\n        timeSigCommon: {\n            x_min: 0,\n            x_max: 409,\n            y_min: -233,\n            y_max: 233,\n            ha: 466,\n            o: 'm 315 334 b 343 336 324 335 334 336 b 558 227 431 336 512 296 b 575 174 570 210 575 192 b 475 74 575 122 533 74 b 472 74 474 74 473 74 b 380 167 417 76 380 120 b 402 225 380 187 387 207 b 469 256 418 244 444 256 b 484 254 474 256 479 255 b 487 254 485 254 487 254 b 488 254 488 254 488 254 b 479 260 488 254 485 256 b 346 302 439 289 398 302 l 345 302 b 154 -3 205 302 154 220 b 154 -3 154 -3 154 -3 b 316 -302 154 -225 195 -300 b 321 -302 318 -302 320 -302 b 556 -108 438 -302 536 -221 b 573 -87 558 -92 562 -87 b 589 -105 584 -87 589 -93 b 582 -144 589 -114 587 -127 b 393 -327 556 -233 484 -302 b 321 -336 371 -333 346 -336 b 248 -327 296 -336 271 -333 b 7 -69 125 -296 32 -196 b 0 -1 2 -46 0 -24 b 315 334 0 170 131 317 z',\n        },\n        timeSigCutCommon: {\n            x_min: 0,\n            x_max: 409,\n            y_min: -394,\n            y_max: 394,\n            ha: 788,\n            o: 'm 308 566 b 316 568 311 567 314 568 b 337 554 325 568 334 562 b 338 446 338 550 338 549 l 338 341 l 355 341 b 558 232 437 339 514 298 b 575 179 570 216 575 197 b 475 79 575 128 533 79 b 472 79 474 79 473 79 b 380 172 417 81 380 126 b 402 231 380 192 387 213 b 469 261 418 250 444 261 b 484 260 474 261 479 261 b 487 259 485 259 487 259 b 488 259 488 259 488 259 b 479 266 488 260 485 262 b 354 307 442 292 400 306 l 338 308 l 338 6 l 338 -297 l 340 -296 b 347 -296 341 -296 344 -296 b 555 -103 449 -288 538 -205 b 573 -82 558 -87 562 -82 b 589 -100 584 -82 589 -87 b 582 -138 589 -109 587 -121 b 374 -326 554 -234 473 -307 b 342 -330 366 -327 356 -328 l 338 -330 l 338 -440 b 339 -489 338 -460 339 -476 b 332 -561 339 -563 338 -555 b 317 -568 328 -566 322 -568 b 296 -554 308 -568 299 -563 b 295 -440 295 -550 295 -549 l 295 -330 l 293 -329 b 282 -328 291 -329 287 -328 b 7 -63 146 -310 35 -203 b 0 4 2 -41 0 -18 b 259 331 0 156 103 291 b 294 338 269 333 292 338 b 295 444 295 338 295 385 b 296 554 295 549 295 550 b 308 566 298 559 303 564 z m 295 4 b 294 303 295 288 295 303 b 284 301 293 303 288 302 b 154 3 190 276 154 192 l 154 2 b 291 -295 154 -204 190 -283 l 295 -295 z',\n        },\n        timeSigPlus: {\n            x_min: 0,\n            x_max: 235,\n            y_min: -118,\n            y_max: 118,\n            ha: 235,\n            o: 'm 159 168 b 169 169 162 169 166 169 b 198 153 180 169 192 163 b 202 97 202 146 202 147 l 202 87 l 202 33 l 257 33 l 267 33 b 322 29 317 33 315 33 b 339 0 333 22 339 11 b 323 -28 339 -11 333 -22 b 266 -33 315 -33 317 -33 l 257 -33 l 202 -33 l 202 -87 l 202 -97 b 198 -153 202 -148 202 -146 b 169 -169 191 -164 180 -169 b 141 -153 158 -169 147 -164 b 137 -97 137 -146 137 -147 l 137 -87 l 137 -33 l 82 -33 l 72 -33 b 16 -28 22 -33 23 -33 b 0 0 5 -22 0 -11 b 16 28 0 11 5 22 b 72 33 23 33 22 33 l 82 33 l 137 33 l 137 87 l 137 97 b 141 153 137 148 137 146 b 159 168 145 160 151 165 z',\n        },\n        timeSigPlusSmall: {\n            x_min: 0,\n            x_max: 235,\n            y_min: -118,\n            y_max: 118,\n            ha: 235,\n            o: 'm 159 168 b 169 169 162 169 166 169 b 198 153 180 169 192 163 b 202 97 202 146 202 147 l 202 87 l 202 33 l 257 33 l 267 33 b 322 29 317 33 315 33 b 339 0 333 22 339 11 b 323 -28 339 -11 333 -22 b 266 -33 315 -33 317 -33 l 257 -33 l 202 -33 l 202 -87 l 202 -97 b 198 -153 202 -148 202 -146 b 169 -169 191 -164 180 -169 b 141 -153 158 -169 147 -164 b 137 -97 137 -146 137 -147 l 137 -87 l 137 -33 l 82 -33 l 72 -33 b 16 -28 22 -33 23 -33 b 0 0 5 -22 0 -11 b 16 28 0 11 5 22 b 72 33 23 33 22 33 l 82 33 l 137 33 l 137 87 l 137 97 b 141 153 137 148 137 146 b 159 168 145 160 151 165 z',\n        },\n        timeSigMinus: {\n            x_min: 0,\n            x_max: 235,\n            y_min: -23,\n            y_max: 23,\n            ha: 46,\n            o: 'm 23 32 b 177 33 26 32 103 33 b 315 32 246 33 312 32 b 338 0 331 27 338 14 b 315 -32 338 -14 331 -27 b 169 -33 312 -33 241 -33 b 23 -32 98 -33 26 -33 b 0 0 8 -27 0 -14 b 23 32 0 13 8 26 z',\n        },\n        timeSigParensRight: {\n            x_min: 19,\n            x_max: 122,\n            y_min: -267,\n            y_max: 267,\n            ha: 535,\n            o: 'm 36 384 b 44 385 38 385 41 385 b 65 367 52 385 55 383 b 176 0 139 251 176 126 b 65 -367 176 -125 139 -250 b 44 -385 56 -380 51 -385 b 36 -383 42 -385 39 -384 b 27 -370 30 -380 27 -377 b 33 -349 27 -365 29 -359 b 99 0 77 -242 99 -121 b 33 350 99 122 77 243 b 27 371 29 359 27 366 b 36 384 27 377 30 381 z',\n        },\n        timeSigParensRightSmall: {\n            x_min: 19,\n            x_max: 122,\n            y_min: -267,\n            y_max: 267,\n            ha: 535,\n            o: 'm 36 384 b 44 385 38 385 41 385 b 65 367 52 385 55 383 b 176 0 139 251 176 126 b 65 -367 176 -125 139 -250 b 44 -385 56 -380 51 -385 b 36 -383 42 -385 39 -384 b 27 -370 30 -380 27 -377 b 33 -349 27 -365 29 -359 b 99 0 77 -242 99 -121 b 33 350 99 122 77 243 b 27 371 29 359 27 366 b 36 384 27 377 30 381 z',\n        },\n        timeSigParensLeft: {\n            x_min: -122,\n            x_max: -19,\n            y_min: -267,\n            y_max: 267,\n            ha: 534,\n            o: 'm -51 383 b -44 385 -49 384 -46 385 b -29 375 -38 385 -31 381 b -27 369 -28 373 -27 372 b -33 349 -27 365 -29 360 b -98 54 -71 259 -91 167 b -99 0 -98 44 -99 22 b -98 -54 -99 -22 -98 -45 b -33 -349 -91 -167 -71 -259 b -27 -368 -28 -363 -27 -365 b -44 -385 -27 -378 -34 -385 b -65 -367 -52 -385 -55 -383 b -176 0 -139 -251 -176 -125 b -65 367 -176 125 -139 251 b -51 383 -57 379 -55 381 z',\n        },\n        timeSigParensLeftSmall: {\n            x_min: -122,\n            x_max: -19,\n            y_min: -267,\n            y_max: 267,\n            ha: 534,\n            o: 'm -51 383 b -44 385 -49 384 -46 385 b -29 375 -38 385 -31 381 b -27 369 -28 373 -27 372 b -33 349 -27 365 -29 360 b -98 54 -71 259 -91 167 b -99 0 -98 44 -99 22 b -98 -54 -99 -22 -98 -45 b -33 -349 -91 -167 -71 -259 b -27 -368 -28 -363 -27 -365 b -44 -385 -27 -378 -34 -385 b -65 -367 -52 -385 -55 -383 b -176 0 -139 -251 -176 -125 b -65 367 -176 125 -139 251 b -51 383 -57 379 -55 381 z',\n        },\n        noteheadDoubleWhole: {\n            x_min: 0,\n            x_max: 663,\n            y_min: -174,\n            y_max: 174,\n            ha: 349,\n            o: 'm 19 250 b 27 251 21 251 24 251 b 36 250 31 251 34 251 b 50 239 41 248 47 244 b 55 93 54 233 55 247 b 55 0 55 67 55 37 b 55 -93 55 -37 55 -67 b 50 -239 55 -247 54 -233 b 28 -251 45 -247 36 -251 b 1 -232 16 -251 5 -244 b 0 4 0 -230 0 -112 b 1 232 0 117 0 230 b 19 250 4 240 11 247 z m 117 250 b 126 251 119 251 122 251 b 134 250 129 251 132 251 b 152 232 142 247 149 240 b 153 128 153 229 153 214 b 154 31 153 48 153 31 b 154 31 154 31 154 31 b 417 191 176 112 281 176 b 478 194 437 193 458 194 b 801 31 636 194 776 127 b 801 31 801 31 801 31 b 802 128 802 31 802 48 b 805 237 802 235 802 232 b 830 251 811 246 821 251 b 852 239 839 251 847 247 b 857 93 857 233 857 247 b 857 0 857 67 857 37 b 857 -93 857 -37 857 -67 b 852 -239 857 -247 857 -233 b 830 -251 847 -247 838 -251 b 807 -239 821 -251 812 -247 b 802 -128 802 -232 802 -239 b 801 -31 802 -48 802 -31 b 801 -31 801 -31 801 -31 b 539 -191 779 -112 675 -176 b 477 -194 518 -193 498 -194 b 154 -31 319 -194 180 -127 b 154 -31 154 -31 154 -31 b 153 -128 153 -31 153 -48 b 148 -239 153 -239 153 -232 b 126 -251 143 -247 134 -251 b 99 -232 114 -251 103 -244 b 98 4 99 -230 98 -112 b 99 232 98 117 99 230 b 117 250 102 240 109 247 z m 458 168 b 439 169 452 169 445 169 b 332 44 375 169 332 116 b 344 -25 332 22 336 -1 b 517 -169 377 -116 452 -169 b 613 -101 558 -169 595 -148 b 623 -44 620 -83 623 -64 b 458 168 623 50 549 154 z m 919 250 b 928 251 921 251 924 251 b 936 250 931 251 934 251 b 951 239 942 248 947 244 b 955 93 955 233 955 247 b 955 0 955 67 955 36 b 955 -93 955 -37 955 -67 b 951 -239 955 -247 955 -233 b 928 -251 945 -247 937 -251 b 902 -232 917 -251 905 -244 b 900 4 901 -230 900 -112 b 901 232 900 117 901 230 b 919 250 904 240 911 247 z',\n        },\n        noteheadWhole: {\n            x_min: 0,\n            x_max: 455,\n            y_min: -135,\n            y_max: 135,\n            ha: 269,\n            o: 'm 291 193 b 326 194 303 194 315 194 b 649 38 482 194 619 129 b 655 0 653 25 655 12 b 327 -194 655 -106 513 -194 b 0 0 144 -194 0 -109 b 291 193 0 100 124 182 z m 308 168 b 289 169 301 169 295 169 b 181 44 224 169 181 116 b 194 -26 181 22 185 -1 b 366 -169 226 -116 302 -169 b 463 -101 408 -169 445 -148 b 473 -45 470 -83 473 -64 b 308 168 473 50 398 154 z',\n        },\n        noteheadHalf: {\n            x_min: 0,\n            x_max: 316,\n            y_min: -135,\n            y_max: 135,\n            ha: 269,\n            o: 'm 270 193 b 281 194 272 194 276 194 b 322 192 294 194 315 193 b 455 53 411 178 455 120 b 307 -156 455 -20 405 -104 b 166 -194 260 -182 211 -194 b 3 -81 84 -194 17 -153 b 0 -52 1 -72 0 -62 b 270 193 0 62 123 178 z m 388 139 b 372 141 383 140 378 141 b 99 -26 307 141 174 61 b 50 -116 68 -62 50 -96 b 60 -136 50 -125 53 -132 b 83 -141 66 -139 74 -141 b 367 40 152 -141 296 -52 b 405 115 392 72 405 98 b 388 139 405 127 399 135 z',\n        },\n        noteheadBlack: {\n            x_min: 0,\n            x_max: 316,\n            y_min: -135,\n            y_max: 135,\n            ha: 269,\n            o: 'm 270 193 b 281 194 272 194 276 194 b 322 192 294 194 315 193 b 455 53 411 178 455 120 b 307 -156 455 -20 405 -104 b 166 -194 260 -182 211 -194 b 3 -81 84 -194 17 -153 b 0 -52 1 -72 0 -62 b 270 193 0 62 123 178 z',\n        },\n        noteheadXWhole: {\n            x_min: 0,\n            x_max: 440,\n            y_min: -133,\n            y_max: 133,\n            ha: 265,\n            o: 'm 67 190 b 82 191 71 191 76 191 b 97 190 88 191 94 191 b 216 138 108 188 116 184 l 317 91 l 417 138 b 548 191 529 190 532 191 b 551 191 549 191 550 191 b 634 109 601 191 634 151 b 611 52 634 89 627 69 b 549 17 601 41 597 39 b 513 0 529 8 513 0 b 549 -17 513 0 529 -8 b 611 -52 597 -39 601 -41 b 634 -109 627 -69 634 -89 b 551 -191 634 -151 601 -191 b 548 -191 550 -191 549 -191 b 417 -138 532 -191 529 -190 l 317 -91 l 216 -138 b 86 -191 105 -190 102 -191 b 83 -191 85 -191 84 -191 b 0 -109 33 -191 0 -151 b 23 -52 0 -89 7 -69 b 85 -17 33 -41 37 -39 b 121 0 105 -8 121 0 b 85 17 121 0 105 8 b 23 52 37 39 33 41 b 0 109 7 69 0 89 b 67 190 0 146 26 182 z m 91 141 b 82 142 88 142 85 142 b 49 109 63 142 49 126 b 59 86 49 101 52 92 b 159 37 64 81 55 85 b 238 0 202 17 238 0 b 159 -37 238 0 202 -17 b 59 -86 55 -85 64 -81 b 49 -109 52 -92 49 -101 b 82 -142 49 -126 62 -142 l 82 -142 b 206 -88 91 -142 91 -141 b 317 -37 267 -60 317 -37 b 428 -88 317 -37 367 -60 b 551 -142 542 -141 543 -142 l 552 -142 b 584 -109 572 -142 584 -126 b 574 -86 584 -101 581 -92 b 475 -37 569 -81 578 -85 b 396 0 431 -17 396 0 b 475 37 396 0 431 17 b 574 86 578 85 569 81 b 584 109 581 92 584 101 b 552 142 584 126 572 142 l 551 142 b 428 88 543 142 542 141 b 317 37 367 60 317 37 b 206 88 317 37 267 60 b 91 141 145 117 93 140 z',\n        },\n        noteheadXHalf: {\n            x_min: 0,\n            x_max: 300,\n            y_min: -133,\n            y_max: 133,\n            ha: 265,\n            o: 'm 60 189 b 76 191 65 190 71 191 b 118 179 91 191 106 187 b 169 138 121 177 144 159 l 216 100 l 262 138 b 325 185 312 179 314 181 b 355 191 335 189 345 191 b 431 115 397 191 431 156 b 426 86 431 105 430 96 b 372 29 419 69 415 64 b 337 0 353 14 337 0 b 372 -29 337 0 353 -14 b 426 -86 415 -64 419 -69 b 431 -115 430 -96 431 -105 b 355 -191 431 -156 397 -191 b 325 -185 345 -191 335 -189 b 262 -138 314 -181 312 -179 l 216 -100 l 169 -138 b 106 -185 120 -179 117 -181 b 76 -191 96 -189 86 -191 b 0 -115 35 -191 0 -156 b 6 -86 0 -105 2 -96 b 59 -29 12 -69 17 -64 b 94 0 78 -14 94 0 b 59 29 94 0 78 14 b 20 63 40 45 22 61 b 0 114 6 78 0 97 b 60 189 0 148 23 181 z m 88 140 b 77 142 85 141 81 142 b 56 133 69 142 61 139 b 49 115 51 128 49 121 b 55 98 49 109 51 103 b 114 48 56 96 82 74 b 171 0 146 22 171 0 b 114 -48 171 0 146 -22 b 55 -98 82 -74 56 -96 b 49 -114 51 -103 49 -109 b 65 -140 49 -125 55 -135 b 77 -142 68 -141 72 -142 b 88 -140 81 -142 85 -141 b 154 -87 91 -138 114 -120 b 216 -36 188 -59 216 -36 b 278 -87 216 -36 244 -59 b 343 -140 318 -120 341 -138 b 355 -142 346 -141 350 -142 b 367 -140 359 -142 364 -141 b 382 -114 377 -135 382 -125 b 377 -98 382 -109 381 -103 b 317 -48 376 -96 349 -74 b 260 0 286 -22 260 0 b 317 48 260 0 286 22 b 377 98 349 74 376 96 b 382 114 381 103 382 109 b 367 140 382 125 377 135 b 355 142 364 141 359 142 b 343 140 350 142 346 141 b 278 87 341 138 318 120 b 216 36 244 59 216 36 b 154 87 216 36 188 59 b 88 140 112 121 91 138 z',\n        },\n        noteheadXBlack: {\n            x_min: 0,\n            x_max: 300,\n            y_min: -133,\n            y_max: 133,\n            ha: 265,\n            o: 'm 24 190 b 32 191 26 191 29 191 b 46 189 37 191 43 190 b 135 114 52 186 50 187 b 216 44 179 76 216 44 b 296 114 216 44 252 76 b 396 191 392 197 384 190 b 398 191 397 191 398 191 b 432 158 418 191 432 175 b 422 135 432 150 429 142 b 343 66 420 133 384 102 b 267 0 301 30 267 0 b 343 -66 267 0 301 -30 b 422 -135 384 -102 420 -133 b 432 -158 429 -142 432 -150 b 398 -191 432 -175 418 -191 b 396 -191 398 -191 397 -191 b 296 -114 384 -190 392 -197 b 216 -44 252 -76 216 -44 b 135 -114 216 -44 179 -76 b 35 -191 40 -197 48 -190 b 33 -191 35 -191 34 -191 b 0 -158 13 -191 0 -175 b 10 -135 0 -150 3 -142 b 89 -66 12 -133 48 -102 b 164 0 131 -30 164 0 b 89 66 164 0 131 30 b 10 135 48 102 12 133 b 0 158 3 142 0 150 b 24 190 0 172 9 186 z',\n        },\n        noteheadCircleX: {\n            x_min: 0,\n            x_max: 357,\n            y_min: -178,\n            y_max: 178,\n            ha: 357,\n            o: 'm 242 256 b 256 257 249 257 253 257 b 270 256 260 257 263 257 b 514 0 412 248 514 131 b 496 -95 514 -31 508 -63 b 255 -257 454 -200 355 -257 b 61 -166 184 -257 112 -228 b 0 -2 19 -117 0 -58 b 242 256 0 126 96 248 z m 267 190 b 257 191 262 190 259 191 b 245 190 254 191 251 190 b 153 159 212 188 179 177 l 147 156 l 202 101 l 257 46 l 311 101 l 366 156 l 361 159 b 267 190 334 177 302 188 z m 155 -55 l 210 0 l 155 54 l 101 109 l 97 104 b 66 0 77 74 66 37 b 71 -44 66 -15 68 -30 b 97 -105 77 -66 86 -87 l 101 -110 z m 416 104 b 413 109 414 107 413 109 b 358 54 413 109 388 84 l 304 0 l 358 -55 l 413 -110 l 416 -105 b 447 0 437 -74 447 -37 b 416 104 447 36 437 73 z m 312 -102 b 257 -47 282 -72 257 -47 b 202 -102 257 -47 232 -72 l 147 -156 l 153 -160 b 257 -191 183 -180 220 -191 b 361 -160 294 -191 330 -180 l 366 -156 z',\n        },\n        noteheadTriangleUpWhole: {\n            x_min: 0,\n            x_max: 462,\n            y_min: -149,\n            y_max: 149,\n            ha: 297,\n            o: 'm 326 213 b 333 214 327 214 330 214 b 355 194 342 214 344 212 b 647 -174 447 44 562 -101 b 659 -184 652 -178 657 -182 b 666 -198 664 -188 666 -193 b 650 -214 666 -207 660 -214 b 598 -200 645 -214 641 -213 b 333 -161 514 -174 423 -161 b 68 -200 242 -161 152 -174 b 16 -214 25 -213 20 -214 b 0 -198 7 -214 0 -208 b 12 -179 0 -190 1 -189 b 311 194 100 -106 216 40 b 326 213 320 208 322 211 z m 338 141 b 333 153 336 147 333 153 b 327 141 333 153 330 147 b 190 -130 285 41 232 -63 b 185 -138 187 -134 185 -138 b 185 -138 185 -138 185 -138 b 185 -138 185 -138 185 -138 b 195 -137 187 -138 190 -138 b 224 -134 201 -136 214 -135 b 333 -128 260 -130 296 -128 b 410 -131 359 -128 384 -129 b 470 -137 425 -132 454 -135 b 480 -138 475 -138 479 -138 b 481 -138 481 -138 481 -138 b 481 -138 481 -138 481 -138 b 478 -133 481 -138 479 -135 b 338 141 436 -67 381 40 z',\n        },\n        noteheadTriangleUpHalf: {\n            x_min: 0,\n            x_max: 323,\n            y_min: -149,\n            y_max: 149,\n            ha: 298,\n            o: 'm 225 213 b 232 214 227 214 230 214 b 253 191 242 214 245 212 b 447 -169 316 42 385 -85 b 465 -198 461 -187 465 -193 b 463 -204 465 -200 464 -202 b 450 -214 461 -211 457 -214 b 431 -208 446 -214 439 -212 b 233 -162 368 -178 300 -162 b 33 -208 165 -162 97 -178 b 15 -214 25 -212 19 -214 b 5 -209 11 -214 8 -213 b 0 -199 2 -206 0 -203 b 9 -181 0 -194 3 -188 b 213 194 67 -109 149 42 b 225 213 218 208 220 211 z m 280 51 b 264 85 274 62 267 78 l 258 98 l 248 83 b 93 -135 201 9 143 -73 b 87 -143 90 -139 87 -143 b 87 -144 87 -144 87 -144 b 87 -144 87 -144 87 -144 b 94 -141 87 -144 90 -142 b 297 -98 162 -113 233 -98 b 354 -102 317 -98 336 -99 b 363 -104 359 -103 363 -104 b 363 -104 363 -104 363 -104 b 360 -97 363 -103 361 -101 b 280 51 337 -60 304 2 z',\n        },\n        noteheadTriangleUpBlack: {\n            x_min: 0,\n            x_max: 322,\n            y_min: -149,\n            y_max: 149,\n            ha: 297,\n            o: 'm 224 213 b 232 214 226 213 229 214 b 250 197 241 214 244 211 b 277 135 269 152 270 149 b 288 111 280 127 285 117 b 336 12 296 92 330 23 b 344 -3 336 12 340 5 b 376 -60 360 -32 363 -38 b 452 -177 406 -112 430 -148 b 463 -198 463 -191 463 -191 b 447 -214 463 -208 458 -214 l 447 -214 l 441 -214 l 430 -208 b 232 -163 368 -178 300 -163 b 33 -208 163 -163 95 -178 l 22 -214 l 16 -214 l 16 -214 b 0 -198 6 -214 0 -208 b 11 -177 0 -191 0 -191 b 75 -81 29 -154 52 -120 b 119 -3 93 -52 102 -36 b 127 12 123 5 127 12 b 176 111 133 23 167 92 b 186 135 178 117 183 127 b 213 197 193 149 194 152 b 224 213 218 207 220 210 z',\n        },\n        noteheadDiamondWhole: {\n            x_min: 0,\n            x_max: 462,\n            y_min: -138,\n            y_max: 138,\n            ha: 277,\n            o: 'm 326 198 b 333 199 328 199 330 199 b 350 189 340 199 342 198 b 638 20 417 112 517 53 b 654 16 645 19 652 17 b 666 0 662 14 666 7 b 654 -16 666 -7 662 -14 b 638 -20 652 -17 645 -19 b 352 -186 518 -53 419 -110 b 333 -199 342 -198 340 -199 b 316 -189 326 -199 324 -198 b 28 -20 249 -112 149 -53 b 12 -16 21 -19 14 -17 b 0 0 4 -14 0 -7 b 12 16 0 7 4 14 b 28 20 14 17 21 19 b 316 189 149 53 249 112 b 326 198 321 194 324 197 z m 338 143 b 333 149 335 146 333 149 b 328 143 333 149 331 146 b 172 4 290 85 233 35 b 165 0 168 2 165 0 b 172 -4 165 0 168 -2 b 328 -143 233 -35 290 -85 b 333 -149 331 -147 332 -149 b 335 -146 334 -149 334 -148 b 494 -4 370 -91 432 -35 b 501 0 498 -2 501 0 b 494 4 501 0 498 2 b 338 143 433 35 376 85 z',\n        },\n        noteheadDiamondHalf: {\n            x_min: 0,\n            x_max: 322,\n            y_min: -138,\n            y_max: 138,\n            ha: 277,\n            o: 'm 225 198 b 232 199 227 199 229 199 b 251 183 240 199 243 197 b 445 19 295 109 362 52 b 464 0 461 13 464 10 b 447 -18 464 -9 460 -13 b 251 -183 365 -49 294 -109 b 232 -199 243 -197 240 -199 b 213 -183 224 -199 221 -197 b 19 -19 169 -109 102 -52 b 0 0 3 -13 0 -10 b 17 18 0 9 3 13 b 213 183 99 50 169 109 b 225 198 218 193 221 196 z m 255 119 b 251 122 253 121 252 122 b 244 114 250 122 249 120 b 98 -17 208 61 151 10 l 95 -19 l 98 -21 b 211 -120 138 -44 176 -78 b 213 -123 212 -122 212 -123 b 213 -122 213 -123 213 -122 b 366 17 244 -72 311 -11 l 369 19 l 366 21 b 255 119 327 44 283 82 z',\n        },\n        noteheadDiamondBlack: {\n            x_min: 0,\n            x_max: 322,\n            y_min: -138,\n            y_max: 138,\n            ha: 277,\n            o: 'm 225 198 b 232 199 227 199 229 199 b 253 180 241 199 243 197 b 444 19 297 107 363 52 b 464 0 461 13 464 10 b 444 -19 464 -10 461 -13 b 253 -180 363 -52 297 -107 b 232 -199 243 -197 241 -199 b 211 -180 223 -199 221 -197 b 19 -19 167 -107 101 -52 b 0 0 3 -13 0 -10 b 19 19 0 10 3 13 b 211 180 101 52 167 107 b 225 198 219 194 221 196 z',\n        },\n        augmentationDot: {\n            x_min: -63,\n            x_max: 63,\n            y_min: -63,\n            y_max: 63,\n            ha: 126,\n            o: 'm -18 89 b 0 90 -12 90 -6 90 b 90 0 49 90 90 49 b 89 -18 90 -6 90 -12 b -1 -90 79 -64 39 -90 b -70 -57 -26 -90 -52 -80 b -90 -1 -84 -40 -90 -20 b -18 89 -90 40 -63 79 z',\n        },\n        tremolo1: {\n            x_min: -252,\n            x_max: 216,\n            y_min: -185,\n            y_max: 148,\n            ha: 333,\n            o: 'm 265 211 b 275 213 269 212 272 213 b 311 175 295 213 311 194 b 301 151 311 166 308 158 b 243 110 297 147 295 145 b 175 64 224 97 194 77 b 107 18 156 52 126 31 b 40 -27 89 6 58 -15 b -28 -73 21 -40 -9 -60 b -95 -119 -46 -86 -77 -106 b -162 -164 -113 -131 -144 -152 b -230 -210 -181 -177 -211 -197 b -285 -247 -249 -223 -274 -240 b -310 -263 -297 -255 -308 -263 b -326 -267 -315 -266 -321 -267 b -363 -230 -346 -267 -363 -250 b -357 -212 -363 -224 -361 -218 b -309 -174 -353 -205 -350 -202 b -203 -103 -287 -160 -240 -128 b -68 -11 -167 -78 -106 -37 b 67 80 -30 14 31 55 b 194 166 104 105 161 143 b 265 211 255 207 259 210 z',\n        },\n        flag8thUp: {\n            x_min: -17,\n            x_max: 234,\n            y_min: -745,\n            y_max: -4,\n            ha: 741,\n            o: 'm -25 -167 l -25 -5 l -21 -5 b 1 -29 -9 -5 -3 -12 b 183 -326 32 -144 91 -241 b 336 -686 285 -421 336 -551 b 219 -1028 336 -802 298 -923 b 172 -1072 191 -1065 183 -1072 b 150 -1052 158 -1072 150 -1063 b 158 -1032 150 -1046 153 -1039 b 284 -707 241 -935 284 -818 b 185 -446 284 -610 251 -517 b -24 -328 144 -402 72 -361 b -25 -167 -24 -328 -25 -295 z',\n        },\n        flag8thDown: {\n            x_min: -15,\n            x_max: 271,\n            y_min: 4,\n            y_max: 745,\n            ha: 741,\n            o: 'm 242 1071 b 252 1073 246 1072 249 1073 b 277 1051 260 1073 267 1066 b 390 687 352 938 390 810 b 343 464 390 609 374 533 b 248 331 319 413 285 365 b 60 125 166 256 110 194 b 0 21 35 90 10 47 b -19 5 -4 11 -12 5 l -22 5 l -22 167 l -22 328 l -17 328 b 105 350 13 328 69 338 b 334 722 241 396 334 547 b 240 1027 334 826 301 934 b 229 1050 230 1041 229 1044 b 242 1071 229 1060 234 1068 z',\n        },\n        flag16thUp: {\n            x_min: -17,\n            x_max: 234,\n            y_min: -847,\n            y_max: -4,\n            ha: 843,\n            o: 'm -25 -151 l -25 -5 l -21 -5 b 0 -23 -11 -5 -5 -11 b 208 -289 31 -96 103 -189 b 336 -592 292 -369 336 -477 b 311 -740 336 -641 328 -691 l 308 -751 l 312 -762 b 336 -906 328 -808 336 -857 b 241 -1185 336 -1004 304 -1103 b 202 -1220 218 -1215 213 -1220 b 180 -1198 188 -1220 180 -1210 b 187 -1181 180 -1193 182 -1187 b 286 -923 252 -1106 286 -1015 b 283 -873 286 -906 285 -890 b 278 -844 281 -861 279 -849 b 274 -830 277 -842 276 -836 b 152 -651 255 -758 210 -692 b -10 -612 119 -628 51 -612 b -22 -611 -16 -612 -21 -612 l -25 -611 l -25 -465 l -25 -319 l -21 -319 b 0 -336 -11 -319 -5 -325 b 207 -602 31 -410 105 -504 b 275 -685 235 -628 260 -658 b 277 -688 276 -687 277 -688 b 280 -680 278 -688 279 -685 b 286 -609 284 -657 286 -633 b 280 -541 286 -586 284 -563 b 278 -530 280 -537 279 -532 b 274 -516 277 -528 276 -522 b 152 -337 255 -444 210 -378 b -10 -298 119 -315 51 -298 b -22 -298 -16 -298 -21 -298 l -25 -297 z',\n        },\n        flag16thDown: {\n            x_min: -15,\n            x_max: 267,\n            y_min: 4,\n            y_max: 745,\n            ha: 741,\n            o: 'm 319 1071 b 328 1073 322 1072 325 1073 b 350 1054 337 1073 344 1067 b 384 901 373 1008 384 955 b 360 766 384 856 376 810 l 356 756 l 360 745 b 384 615 376 703 384 659 b 273 336 384 516 346 416 b 217 282 258 319 241 302 b -1 19 125 204 42 104 b -19 5 -5 11 -13 5 l -22 5 l -22 146 l -22 287 l -12 288 b 212 369 90 304 162 330 b 339 620 294 433 339 524 b 330 691 339 644 336 668 l 329 699 l 323 690 b 217 569 296 645 265 610 b -1 305 125 491 42 390 b -19 292 -5 297 -13 292 l -22 292 l -22 433 l -22 573 l -12 575 b 194 643 78 589 147 611 b 339 908 286 704 339 806 b 313 1030 339 950 330 991 b 306 1050 306 1045 306 1045 b 319 1071 306 1060 311 1068 z',\n        },\n        flag32ndUp: {\n            x_min: -17,\n            x_max: 233,\n            y_min: -1005,\n            y_max: 96,\n            ha: 1101,\n            o: 'm -25 -6 l -25 139 l -21 139 b 1 121 -11 139 -6 134 b 172 -93 31 61 97 -21 b 201 -121 182 -103 195 -115 b 328 -375 266 -184 311 -274 b 335 -464 333 -404 335 -434 b 317 -612 335 -513 329 -564 l 313 -626 l 315 -632 b 328 -689 320 -647 325 -670 b 335 -778 333 -717 335 -747 b 317 -926 335 -827 329 -878 l 313 -940 l 315 -946 b 328 -1002 320 -961 325 -984 b 335 -1092 333 -1032 335 -1062 b 280 -1346 335 -1177 316 -1264 b 228 -1441 265 -1380 236 -1432 b 213 -1447 224 -1445 218 -1447 b 191 -1425 202 -1447 191 -1438 b 198 -1406 191 -1419 192 -1416 b 284 -1118 254 -1317 284 -1215 b 281 -1072 284 -1103 283 -1087 b 118 -798 269 -948 207 -844 b 6 -778 93 -785 60 -779 l -25 -778 l -25 -634 l -25 -489 l -21 -489 b 1 -507 -11 -489 -6 -494 b 172 -720 31 -567 97 -649 b 275 -848 229 -774 249 -800 l 281 -858 l 282 -849 b 284 -806 283 -834 284 -820 b 118 -484 284 -663 220 -537 b 6 -465 93 -471 60 -465 l -25 -464 l -25 -320 l -25 -175 l -21 -175 b 1 -193 -11 -175 -6 -180 b 172 -406 31 -253 97 -335 b 275 -534 229 -460 249 -486 l 281 -544 l 282 -535 b 284 -492 283 -521 284 -506 b 118 -170 284 -349 220 -223 b 6 -151 93 -157 60 -151 l -25 -151 z',\n        },\n        flag32ndDown: {\n            x_min: -15,\n            x_max: 270,\n            y_min: -96,\n            y_max: 895,\n            ha: 991,\n            o: 'm 292 1287 b 300 1288 294 1288 297 1288 b 309 1287 303 1288 306 1288 b 374 1151 324 1281 359 1209 b 388 1039 383 1115 388 1077 b 368 904 388 993 381 947 l 365 896 l 368 886 b 374 864 370 881 372 871 b 388 752 383 828 388 790 b 368 618 388 706 381 660 l 365 609 l 368 599 b 374 578 370 594 372 584 b 388 467 384 541 388 504 b 236 128 388 339 334 215 b 201 99 226 119 226 119 b 0 -122 110 27 36 -55 b -19 -139 -5 -133 -12 -139 l -22 -139 l -22 0 l -22 138 l -16 138 b 200 215 66 150 144 178 b 340 485 287 273 340 376 b 336 531 340 501 339 516 l 335 540 l 333 537 b 236 415 306 488 275 449 b 201 385 226 406 226 405 b 0 164 110 313 36 231 b -19 148 -5 153 -12 148 l -22 148 l -22 286 l -22 424 l -16 425 b 200 501 66 437 144 464 b 340 772 287 559 340 663 b 336 818 340 787 339 803 l 335 827 l 333 823 b 236 701 306 774 275 735 b 201 672 226 692 226 692 b 0 451 110 600 36 518 b -19 434 -5 440 -12 434 l -22 434 l -22 572 l -22 711 l -16 711 b 219 802 77 725 165 759 b 339 1058 298 865 339 959 b 286 1246 339 1122 322 1187 b 278 1267 279 1258 278 1260 b 292 1287 278 1276 284 1284 z',\n        },\n        flag64thUp: {\n            x_min: -17,\n            x_max: 233,\n            y_min: -933,\n            y_max: 296,\n            ha: 1230,\n            o: 'm -25 282 l -25 427 l -21 427 b 2 404 -9 427 -4 421 b 148 203 25 333 72 268 b 313 -42 230 134 277 64 b 335 -182 328 -86 335 -134 b 309 -332 335 -233 327 -284 l 307 -339 l 312 -354 b 335 -496 328 -399 335 -447 b 309 -646 335 -547 327 -598 l 307 -653 l 312 -668 b 335 -809 328 -713 335 -761 b 309 -960 335 -860 327 -911 l 307 -966 l 312 -981 b 335 -1122 328 -1027 335 -1075 b 288 -1325 335 -1191 320 -1260 b 265 -1344 281 -1340 276 -1344 b 243 -1322 252 -1344 243 -1335 b 251 -1300 243 -1317 243 -1316 b 289 -1125 276 -1244 289 -1184 b 173 -854 289 -1018 248 -915 b 34 -798 127 -816 83 -798 b -9 -802 20 -798 5 -800 b -21 -804 -14 -803 -20 -804 l -25 -804 l -25 -659 l -25 -515 l -21 -515 b 2 -537 -9 -515 -4 -520 b 148 -738 25 -609 72 -673 b 274 -892 204 -785 247 -838 b 279 -900 277 -898 279 -900 b 280 -898 280 -900 280 -899 b 282 -886 280 -897 281 -892 b 289 -811 287 -861 289 -836 b 173 -540 289 -703 246 -600 b 34 -484 127 -502 83 -484 b -9 -489 20 -484 5 -486 b -21 -490 -14 -489 -20 -490 l -25 -490 l -25 -346 l -25 -201 l -21 -201 b 2 -224 -9 -201 -4 -207 b 148 -424 25 -295 72 -360 b 274 -578 204 -471 247 -524 b 279 -586 277 -584 279 -586 b 280 -584 280 -586 280 -585 b 282 -573 280 -583 281 -578 b 289 -497 287 -548 289 -522 b 173 -226 289 -389 246 -286 b 34 -171 127 -188 83 -171 b -9 -175 20 -171 5 -172 b -21 -176 -14 -176 -20 -176 l -25 -176 l -25 -32 l -25 113 l -21 113 b 2 90 -9 113 -4 107 b 148 -110 25 19 72 -46 b 274 -264 204 -158 247 -210 b 279 -272 277 -270 279 -272 b 280 -270 280 -272 280 -272 b 282 -259 280 -269 281 -264 b 289 -184 287 -234 289 -208 b 173 88 289 -75 246 28 b 34 143 127 125 83 143 b -9 139 20 143 5 142 b -21 137 -14 138 -20 137 l -25 137 z',\n        },\n        flag64thDown: {\n            x_min: -15,\n            x_max: 271,\n            y_min: -296,\n            y_max: 820,\n            ha: 1116,\n            o: 'm 272 1179 b 281 1181 275 1180 278 1181 b 297 1174 286 1181 292 1178 b 359 1098 322 1154 344 1127 b 390 972 380 1059 390 1016 b 357 836 390 926 379 879 l 351 825 l 353 823 b 359 812 354 822 357 817 b 390 685 380 773 390 729 b 357 549 390 639 379 593 l 351 539 l 353 536 b 359 526 354 535 357 530 b 390 399 380 486 390 443 b 357 263 390 353 379 306 l 351 252 l 353 250 b 390 113 374 218 390 162 b 390 113 390 113 390 113 b 246 -148 390 9 339 -84 b -1 -411 129 -228 30 -334 b -18 -426 -4 -420 -11 -426 l -22 -427 l -22 -291 l -22 -156 l -13 -155 b 156 -124 51 -152 115 -140 b 338 126 266 -80 338 23 b 326 195 338 150 334 173 b 321 207 324 204 323 207 b 318 203 321 207 319 205 b 246 139 299 180 276 159 b -1 -125 129 59 30 -48 b -18 -140 -4 -134 -11 -139 l -22 -140 l -22 -5 l -22 131 l -13 131 b 156 163 51 134 115 146 b 338 413 266 206 338 310 b 326 482 338 436 334 459 b 321 493 324 490 323 493 b 318 489 321 493 319 492 b 246 425 299 466 276 446 b -1 162 129 345 30 239 b -18 147 -4 153 -11 147 l -22 146 l -22 282 l -22 417 l -13 418 b 156 449 51 421 115 433 b 338 699 266 493 338 596 b 326 768 338 723 334 746 b 321 780 324 777 323 780 b 318 776 320 780 319 778 b 246 712 299 753 276 732 b -1 448 129 632 30 525 b -19 433 -4 439 -11 434 l -22 433 l -22 568 l -22 704 l -13 704 b 156 736 51 707 115 719 b 338 985 264 778 337 879 l 338 985 b 272 1137 338 1045 313 1103 b 259 1159 262 1146 259 1150 b 272 1179 259 1168 265 1176 z',\n        },\n        flag128thUp: {\n            x_min: -17,\n            x_max: 231,\n            y_min: -987,\n            y_max: 496,\n            ha: 1484,\n            o: 'm -25 582 l -25 715 l -21 715 b 3 693 -11 715 -6 710 b 150 501 30 639 82 570 b 237 396 191 459 212 434 b 333 93 300 302 333 195 b 311 -46 333 45 326 -2 b 307 -60 308 -54 307 -57 b 310 -72 307 -63 308 -65 b 332 -220 325 -121 332 -171 b 311 -359 332 -269 325 -316 b 307 -374 308 -368 307 -371 b 310 -386 307 -377 308 -379 b 332 -534 325 -434 332 -485 b 311 -673 332 -583 325 -630 b 307 -688 308 -682 307 -685 b 310 -700 307 -690 308 -693 b 332 -848 325 -748 332 -799 b 311 -987 332 -896 325 -944 b 307 -1001 308 -995 307 -998 b 310 -1013 307 -1004 308 -1007 b 333 -1161 325 -1062 333 -1113 b 268 -1391 333 -1246 311 -1326 b 235 -1422 251 -1417 246 -1422 b 213 -1402 221 -1422 213 -1413 b 220 -1382 213 -1396 215 -1389 b 286 -1176 265 -1322 286 -1250 b 163 -883 286 -1073 244 -966 b -16 -806 122 -841 54 -812 b -23 -805 -19 -806 -22 -806 l -25 -805 l -25 -673 l -25 -541 l -21 -541 b 3 -562 -11 -541 -6 -545 b 150 -754 30 -617 82 -685 b 273 -921 209 -814 242 -860 l 280 -933 l 281 -927 b 287 -861 285 -906 287 -884 b 163 -569 287 -756 243 -650 b -16 -492 122 -527 54 -498 b -23 -492 -19 -492 -22 -492 l -25 -491 l -25 -359 l -25 -227 l -21 -227 b 3 -248 -11 -227 -6 -231 b 150 -441 30 -303 82 -372 b 273 -608 209 -500 242 -546 l 280 -620 l 281 -614 b 287 -548 285 -592 287 -570 b 163 -255 287 -442 243 -336 b -16 -179 122 -213 54 -184 b -23 -178 -19 -178 -22 -178 l -25 -178 l -25 -45 l -25 87 l -21 87 b 3 66 -11 87 -6 83 b 150 -127 30 11 82 -58 b 273 -294 209 -186 242 -232 l 280 -306 l 281 -300 b 287 -234 285 -278 287 -256 b 163 59 287 -129 243 -23 b -16 135 122 100 54 129 b -23 136 -19 135 -22 136 l -25 136 l -25 268 l -25 401 l -21 401 b 3 379 -11 401 -6 397 b 150 187 30 325 82 256 b 273 20 209 127 242 82 l 280 8 l 281 14 b 287 80 285 36 287 58 b 163 372 287 185 243 291 b -16 449 122 414 54 443 b -23 450 -19 449 -22 449 l -25 450 z',\n        },\n        flag128thDown: {\n            x_min: -15,\n            x_max: 270,\n            y_min: -496,\n            y_max: 870,\n            ha: 1366,\n            o: 'm 292 1251 b 301 1253 295 1252 298 1253 b 325 1235 309 1253 316 1247 b 389 1031 368 1174 389 1103 b 364 898 389 986 381 941 l 359 888 l 364 876 b 389 745 381 834 389 789 b 364 612 389 700 381 654 l 359 601 l 364 589 b 389 458 381 547 389 503 b 364 325 389 413 381 368 l 359 315 l 364 303 b 389 172 381 261 389 216 b 364 39 389 127 381 81 l 359 28 l 364 16 b 390 -115 381 -26 390 -71 b 260 -391 390 -219 344 -320 b 0 -698 135 -495 36 -613 b -19 -715 -5 -709 -11 -715 l -22 -715 l -22 -582 l -21 -449 l -14 -447 b 124 -400 25 -439 79 -420 b 213 -349 168 -379 189 -367 b 340 -101 294 -288 340 -196 b 332 -36 340 -79 337 -57 b 330 -27 331 -30 331 -27 b 326 -31 329 -27 328 -29 b 260 -104 309 -57 286 -82 b 0 -412 135 -209 36 -326 b -19 -428 -5 -422 -11 -428 l -22 -428 l -22 -295 l -21 -162 l -14 -161 b 124 -113 25 -153 79 -134 b 213 -63 168 -92 189 -81 b 340 186 294 -2 340 91 b 332 251 340 207 337 229 b 330 259 331 257 331 259 b 326 255 329 259 328 258 b 260 182 309 229 286 204 b 0 -125 135 78 36 -40 b -19 -142 -5 -136 -11 -142 l -22 -142 l -22 -9 l -21 124 l -14 126 b 124 173 25 134 79 152 b 213 224 168 194 189 206 b 340 472 294 285 340 377 b 332 537 340 494 337 516 b 330 546 331 543 331 546 b 326 542 329 546 328 544 b 255 465 307 514 286 491 b 0 161 135 364 35 245 b -19 145 -4 151 -11 145 l -22 145 l -22 278 l -21 411 l -14 412 b 124 460 25 420 79 439 b 213 510 168 481 189 492 b 340 759 294 571 340 664 b 332 824 340 780 337 802 b 330 832 331 830 331 832 b 326 828 329 832 328 831 b 255 751 308 801 286 777 b 0 448 135 650 35 532 b -19 431 -4 437 -11 431 l -22 431 l -22 564 l -21 697 l -14 699 b 124 746 25 707 79 725 b 213 797 168 767 189 779 b 340 1046 295 859 340 953 b 285 1213 340 1105 322 1163 b 278 1232 281 1220 278 1226 b 292 1251 278 1241 283 1248 z',\n        },\n        accidentalFlat: {\n            x_min: -15,\n            x_max: 185,\n            y_min: -165,\n            y_max: 457,\n            ha: 622,\n            o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 398 22 640 22 640 l 22 155 l 24 158 b 146 208 64 191 106 208 b 194 200 163 208 179 205 b 267 89 241 183 267 140 b 243 1 267 61 259 30 b 107 -148 220 -41 190 -73 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 l -22 -220 l -22 210 l -22 640 l -20 644 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z',\n        },\n        accidentalNatural: {\n            x_min: 0,\n            x_max: 176,\n            y_min: -334,\n            y_max: 334,\n            ha: 667,\n            o: 'm 13 479 b 21 480 16 480 19 480 b 42 467 30 480 39 475 b 44 339 44 463 44 462 b 44 214 44 250 44 214 b 136 237 45 214 86 224 b 234 259 209 255 227 259 b 240 258 237 259 238 259 b 252 246 245 256 251 251 l 254 242 l 254 -111 l 254 -463 l 252 -467 b 232 -480 249 -475 241 -480 b 216 -474 226 -480 221 -478 b 210 -392 211 -468 210 -477 b 210 -336 210 -377 210 -358 b 209 -209 210 -245 210 -209 b 117 -231 209 -209 168 -219 b 19 -254 45 -249 27 -254 b 13 -252 17 -254 15 -253 b 1 -240 8 -251 3 -245 l 0 -237 l 0 113 l 0 463 l 1 467 b 13 479 3 472 8 477 z m 210 23 b 210 74 210 44 210 61 b 209 121 210 118 210 121 l 209 121 b 126 101 208 121 171 112 l 44 81 l 44 -18 b 44 -62 44 -35 44 -50 b 44 -116 44 -104 44 -116 b 128 -96 45 -116 82 -107 l 210 -75 z',\n        },\n        accidentalSharp: {\n            x_min: 0,\n            x_max: 239,\n            y_min: -388,\n            y_max: 388,\n            ha: 775,\n            o: 'm 232 557 b 240 558 234 558 237 558 b 261 545 249 558 258 553 b 262 405 262 541 262 540 b 263 269 262 278 262 269 b 263 269 263 269 263 269 b 322 282 275 273 319 282 b 343 269 331 282 340 277 b 344 217 344 266 344 241 b 343 165 344 192 344 168 b 295 144 339 155 337 154 l 262 136 l 262 22 b 263 -91 262 -83 262 -91 b 263 -91 263 -91 263 -91 b 322 -78 275 -88 319 -78 b 338 -84 329 -78 333 -80 b 344 -129 344 -90 344 -88 b 344 -143 344 -133 344 -138 b 344 -157 344 -148 344 -153 b 338 -203 344 -198 344 -197 b 295 -217 333 -207 333 -207 l 262 -225 l 262 -362 b 261 -504 262 -499 262 -500 b 240 -517 258 -512 249 -517 b 225 -511 235 -517 229 -515 b 218 -430 219 -505 218 -514 b 218 -368 218 -413 218 -393 b 218 -235 218 -295 218 -235 b 171 -247 218 -235 197 -241 b 123 -259 145 -253 123 -259 b 123 -400 123 -259 123 -322 b 122 -545 123 -540 123 -541 b 101 -558 118 -553 110 -558 b 86 -552 95 -558 90 -556 b 79 -469 80 -546 79 -556 b 79 -405 79 -452 79 -431 b 78 -270 79 -279 79 -270 b 78 -270 78 -270 78 -270 b 22 -282 65 -273 25 -282 b 2 -269 13 -282 5 -277 b 0 -217 1 -266 0 -242 b 2 -165 0 -192 1 -168 b 48 -144 5 -155 7 -154 l 79 -136 l 79 -23 b 78 90 79 83 79 90 b 78 90 78 90 78 90 b 22 78 65 87 25 78 b 2 91 13 78 5 83 b 0 143 1 94 0 119 b 2 195 0 168 1 192 b 48 216 5 205 7 206 l 79 224 l 79 362 b 81 504 79 499 79 500 b 101 517 84 512 93 517 b 117 511 107 517 112 515 b 123 430 123 505 123 515 b 123 367 123 413 123 392 b 123 235 123 294 123 235 b 171 246 123 235 145 240 b 218 258 197 253 218 258 b 218 399 218 258 218 322 b 220 545 218 540 218 541 b 232 557 222 549 227 555 z m 218 11 b 218 125 218 102 218 125 l 218 125 b 201 121 217 125 210 123 b 154 109 193 119 171 113 l 123 102 l 123 -12 b 123 -126 123 -74 123 -126 b 171 -114 123 -126 145 -120 b 218 -102 197 -107 218 -102 b 218 11 218 -102 218 -51 z',\n        },\n        accidentalDoubleSharp: {\n            x_min: 0,\n            x_max: 271,\n            y_min: -135,\n            y_max: 135,\n            ha: 271,\n            o: 'm 0 130 l 0 195 l 65 195 l 131 195 l 131 145 l 131 96 l 163 64 l 195 32 l 227 64 l 259 96 l 259 145 l 259 195 l 325 195 l 390 195 l 390 130 l 390 64 l 341 64 l 291 64 l 259 32 l 227 0 l 259 -32 l 291 -64 l 341 -64 l 390 -64 l 390 -130 l 390 -195 l 325 -195 l 259 -195 l 259 -145 l 259 -96 l 227 -64 l 195 -32 l 163 -64 l 131 -96 l 131 -145 l 131 -195 l 65 -195 l 0 -195 l 0 -130 l 0 -64 l 50 -64 l 99 -64 l 131 -32 l 163 0 l 131 32 l 99 64 l 50 64 l 0 64 z',\n        },\n        accidentalDoubleFlat: {\n            x_min: -15,\n            x_max: 356,\n            y_min: -165,\n            y_max: 457,\n            ha: 622,\n            o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 398 22 640 22 640 l 22 155 l 24 158 b 149 208 64 191 109 208 b 220 187 175 208 200 201 l 223 184 l 224 413 l 224 642 l 226 645 b 246 657 229 653 237 657 b 266 644 254 657 263 653 b 267 398 267 640 267 640 l 267 155 l 270 158 b 392 208 309 191 351 208 b 440 200 408 208 424 205 b 512 89 486 183 512 140 b 488 1 512 61 505 30 b 352 -148 466 -41 436 -73 b 271 -222 307 -188 297 -198 b 246 -237 256 -236 254 -237 b 230 -231 239 -237 234 -236 b 224 -164 224 -225 224 -232 b 224 -125 224 -153 224 -140 l 224 -29 l 218 -36 b 107 -148 194 -67 170 -91 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 l -22 -220 l -22 210 l -22 640 l -20 644 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z m 364 137 b 347 139 360 138 352 139 b 342 139 345 139 343 139 b 272 92 315 135 290 118 l 267 84 l 267 -39 l 267 -161 l 271 -157 b 399 88 349 -73 399 24 b 397 107 399 95 398 101 b 364 137 394 122 382 134 z',\n        },\n        accidentalParensLeft: {\n            x_min: -122,\n            x_max: -19,\n            y_min: -267,\n            y_max: 267,\n            ha: 534,\n            o: 'm -51 383 b -44 385 -49 384 -46 385 b -29 375 -38 385 -31 381 b -27 369 -28 373 -27 372 b -33 349 -27 365 -29 360 b -98 54 -71 259 -91 167 b -99 0 -98 44 -99 22 b -98 -54 -99 -22 -98 -45 b -33 -349 -91 -167 -71 -259 b -27 -368 -28 -363 -27 -365 b -44 -385 -27 -378 -34 -385 b -65 -367 -52 -385 -55 -383 b -176 0 -139 -251 -176 -125 b -65 367 -176 125 -139 251 b -51 383 -57 379 -55 381 z',\n        },\n        accidentalParensRight: {\n            x_min: 19,\n            x_max: 122,\n            y_min: -267,\n            y_max: 267,\n            ha: 535,\n            o: 'm 36 384 b 44 385 38 385 41 385 b 65 367 52 385 55 383 b 176 0 139 251 176 126 b 65 -367 176 -125 139 -250 b 44 -385 56 -380 51 -385 b 36 -383 42 -385 39 -384 b 27 -370 30 -380 27 -377 b 33 -349 27 -365 29 -359 b 99 0 77 -242 99 -121 b 33 350 99 122 77 243 b 27 371 29 359 27 366 b 36 384 27 377 30 381 z',\n        },\n        accidentalQuarterToneFlatStein: {\n            x_min: 0,\n            x_max: 200,\n            y_min: -165,\n            y_max: 457,\n            ha: 622,\n            o: 'm 258 656 b 266 658 261 657 264 658 b 287 644 275 658 284 652 l 289 640 l 289 210 l 289 -220 l 287 -224 b 267 -237 284 -232 276 -237 b 241 -222 258 -237 256 -236 b 163 -151 216 -199 200 -183 b 24 2 78 -75 47 -41 b 0 88 8 31 0 61 b 73 200 0 140 26 183 b 120 208 88 205 104 208 b 242 158 161 208 203 191 l 245 155 l 245 398 b 246 644 245 640 245 640 b 258 656 248 649 253 654 z m 179 137 b 159 139 174 138 165 139 b 155 139 157 139 156 139 b 115 107 131 134 118 124 b 113 88 114 101 113 95 b 241 -157 113 24 163 -73 l 245 -161 l 245 -39 l 245 84 l 240 92 b 179 137 224 116 203 131 z',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            x_min: 0,\n            x_max: 446,\n            y_min: -165,\n            y_max: 457,\n            ha: 622,\n            o: 'm 258 656 b 266 658 261 657 264 658 b 287 644 275 658 284 652 l 289 640 l 289 210 l 289 -220 l 287 -224 b 267 -237 284 -232 276 -237 b 241 -222 258 -237 256 -236 b 163 -151 216 -199 200 -183 b 24 2 78 -75 47 -41 b 0 88 8 31 0 61 b 73 200 0 140 26 183 b 120 208 88 205 104 208 b 242 158 161 208 203 191 l 245 155 l 245 398 b 246 644 245 640 245 640 b 258 656 248 649 253 654 z m 179 137 b 159 139 174 138 165 139 b 155 139 157 139 156 139 b 115 107 131 134 118 124 b 113 88 114 101 113 95 b 241 -157 113 24 163 -73 l 245 -161 l 245 -39 l 245 84 l 240 92 b 179 137 224 116 203 131 z m 367 656 b 375 658 370 657 373 658 b 396 644 384 658 393 652 b 398 398 398 640 398 640 l 398 155 l 400 158 b 522 208 440 191 482 208 b 570 200 538 208 554 205 b 643 89 617 183 643 140 b 619 1 643 61 635 30 b 483 -148 596 -41 566 -73 b 401 -222 438 -188 427 -198 b 376 -237 386 -236 384 -237 b 355 -224 366 -237 358 -232 l 354 -220 l 354 210 l 354 640 l 355 644 b 367 656 357 649 362 654 z m 495 137 b 477 139 491 138 482 139 b 472 139 475 139 473 139 b 403 92 445 135 420 118 l 398 84 l 398 -39 l 398 -161 l 401 -157 b 529 88 479 -73 529 24 b 528 107 529 95 529 101 b 495 137 525 122 512 134 z',\n        },\n        accidentalQuarterToneSharpStein: {\n            x_min: 0,\n            x_max: 142,\n            y_min: -373,\n            y_max: 373,\n            ha: 747,\n            o: 'm 92 536 b 101 538 95 537 98 538 b 122 524 110 538 118 532 b 123 390 123 520 123 519 l 123 259 l 151 268 b 182 277 175 276 178 277 b 184 277 183 277 183 277 b 203 265 193 276 199 272 l 204 262 l 205 213 b 205 187 205 202 205 194 b 201 154 205 159 204 159 b 158 136 197 149 194 148 l 123 125 l 123 10 b 124 -104 123 -64 123 -104 b 150 -94 124 -104 136 -100 b 179 -85 164 -89 177 -85 b 183 -84 181 -84 182 -84 b 203 -98 192 -84 200 -90 b 205 -157 204 -101 205 -130 b 204 -201 205 -179 205 -199 b 158 -226 200 -211 199 -212 l 123 -239 l 123 -380 l 123 -522 l 121 -525 b 101 -538 117 -533 109 -538 b 85 -531 95 -538 90 -536 b 79 -450 80 -526 79 -535 b 79 -387 79 -433 79 -413 b 79 -254 79 -314 79 -254 b 54 -263 79 -254 67 -258 b 19 -273 36 -270 26 -273 b 6 -267 14 -273 10 -271 b 0 -222 0 -261 0 -263 b 0 -207 0 -217 0 -213 b 0 -195 0 -203 0 -199 b 6 -148 0 -152 0 -154 b 47 -131 10 -144 10 -144 l 79 -120 l 79 -5 b 79 110 79 58 79 110 b 53 101 79 110 67 106 b 19 93 35 95 25 93 b 6 99 14 93 10 95 b 0 144 0 105 0 103 b 0 158 0 148 0 153 b 0 185 0 169 0 178 b 45 233 0 222 3 219 l 79 244 l 79 382 b 81 524 79 519 79 520 b 92 536 82 529 88 534 z',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            x_min: 0,\n            x_max: 335,\n            y_min: -391,\n            y_max: 391,\n            ha: 782,\n            o: 'm 373 562 b 379 563 375 563 377 563 b 399 551 388 563 395 559 l 401 548 l 401 410 l 401 272 l 403 273 b 432 278 403 273 417 275 b 463 282 448 281 457 282 b 477 276 470 282 473 280 b 483 241 482 271 483 271 b 483 216 483 234 483 226 l 483 167 l 481 164 b 471 153 479 160 475 155 b 402 140 469 152 405 140 b 401 25 401 140 401 88 l 401 -91 l 403 -90 b 432 -85 403 -90 417 -88 b 463 -80 448 -82 457 -80 b 477 -87 470 -80 473 -83 b 483 -122 482 -92 483 -91 b 483 -147 483 -128 483 -137 l 483 -196 l 481 -199 b 471 -209 479 -203 475 -207 b 402 -223 469 -210 405 -223 b 401 -359 401 -223 401 -284 l 401 -496 l 399 -500 b 379 -512 395 -507 388 -512 b 359 -500 371 -512 363 -507 l 357 -496 l 357 -363 b 356 -231 357 -240 357 -231 b 356 -231 356 -231 356 -231 b 309 -240 356 -232 334 -235 l 262 -249 l 262 -384 b 262 -448 262 -410 262 -431 b 256 -531 262 -535 261 -526 b 240 -538 251 -536 246 -538 b 220 -525 232 -538 224 -533 l 219 -522 l 218 -389 l 218 -257 l 171 -265 b 123 -274 144 -270 123 -274 b 123 -411 123 -274 123 -336 l 122 -548 l 121 -551 b 101 -563 116 -559 109 -563 b 81 -551 93 -563 85 -559 l 79 -548 l 79 -415 b 79 -282 79 -342 79 -282 b 52 -287 78 -282 66 -285 b 20 -292 36 -290 26 -292 b 6 -286 13 -292 10 -290 b 0 -241 0 -280 0 -282 b 0 -226 0 -236 0 -232 b 0 -212 0 -221 0 -216 b 6 -167 0 -171 0 -173 b 48 -155 11 -162 13 -162 l 79 -150 l 79 -35 b 79 80 79 29 79 80 b 52 76 78 80 66 78 b 20 71 36 73 26 71 b 6 77 13 71 10 73 b 0 122 0 83 0 81 b 0 136 0 126 0 131 b 0 151 0 142 0 146 b 6 196 0 192 0 190 b 48 207 11 201 13 201 l 79 213 l 79 354 l 79 496 l 81 500 b 101 512 85 508 93 512 b 121 500 109 512 116 508 l 122 497 l 123 359 l 123 221 l 171 230 b 218 239 197 235 218 239 b 218 380 218 239 218 302 b 220 524 218 519 218 520 b 240 538 223 533 231 538 b 256 531 246 538 251 536 b 262 448 261 526 262 535 b 262 384 262 431 262 410 b 263 247 262 295 262 247 b 310 255 263 247 284 251 b 357 264 335 260 357 264 b 358 406 357 264 357 328 l 358 548 l 359 551 b 373 562 362 557 367 561 z m 357 16 b 357 132 357 108 357 132 l 357 132 b 309 123 356 132 335 128 l 262 114 l 262 -1 b 263 -116 262 -76 262 -116 b 310 -107 263 -116 284 -112 b 357 -99 335 -103 357 -99 b 357 16 357 -99 357 -48 z m 218 -124 b 218 -56 218 -124 218 -96 b 218 -9 218 -42 218 -26 l 218 106 l 171 97 b 123 88 145 93 123 89 b 123 21 123 88 123 61 b 123 -27 123 6 123 -10 l 123 -142 l 170 -133 b 218 -124 196 -128 218 -124 z',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: -125,\n            x_max: 185,\n            y_min: -165,\n            y_max: 457,\n            ha: 622,\n            o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 575 22 640 22 639 b 23 510 22 524 22 510 b 23 510 23 510 23 510 b 164 557 49 520 160 557 b 186 534 177 557 186 546 b 176 516 186 527 183 520 b 98 489 175 515 140 503 l 22 463 l 22 405 b 22 378 22 394 22 386 b 23 347 22 354 22 347 b 23 347 23 347 23 347 b 164 393 49 356 160 393 b 186 371 177 393 186 382 b 176 352 186 364 183 357 b 98 325 175 352 140 339 l 22 300 l 22 228 l 22 155 l 24 158 b 146 208 64 191 106 208 b 194 200 163 208 179 205 b 267 89 241 183 267 140 b 243 1 267 61 259 30 b 107 -148 220 -41 190 -73 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 b -22 32 -22 -220 -22 -220 b -22 284 -22 171 -22 284 b -88 262 -23 284 -52 274 b -160 240 -141 245 -154 240 b -167 241 -163 240 -164 241 b -180 262 -175 245 -180 254 b -169 281 -180 270 -176 278 b -30 329 -168 282 -92 308 l -22 332 l -22 390 b -22 448 -22 422 -22 448 b -88 426 -23 448 -52 438 b -160 404 -141 408 -154 404 b -167 405 -163 404 -164 404 b -180 426 -175 408 -180 417 b -169 445 -180 434 -176 441 b -30 493 -168 446 -92 472 l -22 495 l -22 568 b -20 644 -22 639 -22 641 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z',\n        },\n        accidentalBuyukMucennebSharp: {\n            x_min: 0,\n            x_max: 284,\n            y_min: -388,\n            y_max: 388,\n            ha: 775,\n            o: 'm 264 557 b 272 558 267 558 269 558 b 293 545 281 558 290 553 b 294 435 294 541 294 540 b 295 329 294 337 294 329 b 296 329 296 329 296 329 b 355 342 308 333 351 342 b 375 329 364 342 372 337 b 376 277 376 326 376 302 b 375 225 376 252 376 228 b 327 204 371 215 369 214 l 294 196 l 294 142 b 295 89 294 94 294 89 b 296 89 295 89 296 89 b 389 110 314 94 384 110 b 389 110 389 110 389 110 b 407 98 397 110 403 105 l 409 95 l 409 45 b 409 25 409 37 409 30 b 404 -13 409 -11 408 -8 b 345 -32 400 -18 398 -19 b 295 -44 317 -39 295 -44 b 294 -98 294 -44 294 -68 b 295 -151 294 -147 294 -151 b 296 -151 295 -151 296 -151 b 355 -138 308 -148 351 -138 b 375 -151 364 -138 372 -143 b 376 -203 376 -154 376 -179 b 375 -255 376 -228 376 -252 b 327 -277 371 -265 369 -266 l 294 -285 l 294 -392 b 293 -504 294 -499 294 -500 b 272 -517 290 -512 281 -517 b 257 -511 267 -517 261 -515 b 251 -443 251 -505 251 -512 b 251 -398 251 -430 251 -416 b 250 -295 251 -341 251 -295 b 203 -307 250 -295 229 -301 b 156 -319 177 -313 156 -319 b 155 -430 155 -319 155 -369 b 154 -545 155 -540 155 -541 b 133 -558 151 -553 142 -558 b 118 -552 128 -558 122 -556 b 112 -482 112 -546 112 -553 b 112 -435 112 -469 112 -454 b 110 -330 112 -337 111 -330 b 110 -330 110 -330 110 -330 b 54 -342 98 -333 58 -342 b 34 -329 45 -342 37 -337 b 32 -277 33 -326 32 -302 b 34 -225 32 -252 33 -228 b 80 -204 38 -215 39 -214 l 112 -196 l 112 -143 b 111 -90 112 -94 111 -90 b 110 -90 110 -90 110 -90 b 20 -110 89 -96 25 -110 b 20 -110 20 -110 20 -110 b 2 -98 12 -110 5 -105 l 0 -95 l 0 -45 b 0 -25 0 -37 0 -30 b 5 13 0 11 0 8 b 62 32 9 18 10 19 b 111 44 89 38 111 44 b 112 97 111 44 112 68 b 111 150 112 146 111 150 b 110 150 110 150 110 150 b 54 138 98 147 58 138 b 34 151 45 138 37 143 b 32 203 33 154 32 179 b 34 255 32 228 33 252 b 80 276 38 265 39 266 l 112 284 l 112 392 b 113 504 112 499 112 500 b 133 517 116 512 125 517 b 149 511 139 517 145 515 b 155 443 155 505 155 512 b 155 397 155 430 155 415 b 155 295 155 341 155 295 b 203 306 156 295 177 300 b 250 318 229 313 250 318 b 251 429 251 318 251 368 b 252 545 251 540 251 541 b 264 557 254 549 259 555 z m 251 131 b 250 185 251 174 250 185 l 250 185 b 233 181 249 185 242 183 b 186 169 225 179 204 173 l 155 162 l 155 108 b 155 55 155 79 155 55 b 203 66 156 55 177 60 b 250 78 229 73 250 78 b 251 131 251 78 251 102 z m 251 -109 b 250 -55 251 -67 250 -55 l 250 -55 b 233 -59 249 -55 242 -57 b 186 -71 225 -62 204 -67 l 155 -79 l 155 -132 b 155 -186 155 -161 155 -186 b 203 -174 156 -186 177 -180 b 250 -162 229 -168 250 -162 b 251 -109 251 -162 251 -138 z',\n        },\n        accidentalBakiyeFlat: {\n            x_min: -129,\n            x_max: 185,\n            y_min: -165,\n            y_max: 457,\n            ha: 622,\n            o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 524 22 640 22 639 b 22 407 22 460 22 407 b 90 441 22 407 53 422 l 157 474 l 163 475 b 164 475 163 475 163 475 b 186 453 177 475 186 465 b 184 445 186 450 185 447 b 99 396 181 436 184 438 l 22 357 l 22 256 l 22 155 l 24 158 b 146 208 64 191 106 208 b 194 200 163 208 179 205 b 267 89 241 183 267 140 b 243 1 267 61 259 30 b 107 -148 220 -41 190 -73 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 b -22 57 -22 -220 -22 -220 b -22 335 -22 210 -22 335 b -90 301 -22 335 -53 320 l -157 268 l -163 268 b -164 268 -163 268 -163 268 b -186 289 -177 268 -186 277 b -184 298 -186 292 -185 295 b -99 347 -181 306 -184 304 l -22 385 l -22 513 b -20 644 -22 639 -22 640 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z',\n        },\n        accidentalKomaSharp: {\n            x_min: 0,\n            x_max: 142,\n            y_min: -373,\n            y_max: 373,\n            ha: 747,\n            o: 'm 92 536 b 101 538 95 537 98 538 b 122 524 110 538 118 532 b 123 390 123 520 123 519 l 123 259 l 151 268 b 182 277 175 276 178 277 b 184 277 183 277 183 277 b 203 265 193 276 199 272 l 204 262 l 205 213 b 205 187 205 202 205 194 b 201 154 205 159 204 159 b 158 136 197 149 194 148 l 123 125 l 123 10 b 124 -104 123 -64 123 -104 b 150 -94 124 -104 136 -100 b 179 -85 164 -89 177 -85 b 183 -84 181 -84 182 -84 b 203 -98 192 -84 200 -90 b 205 -157 204 -101 205 -130 b 204 -201 205 -179 205 -199 b 158 -226 200 -211 199 -212 l 123 -239 l 123 -380 l 123 -522 l 121 -525 b 101 -538 117 -533 109 -538 b 85 -531 95 -538 90 -536 b 79 -450 80 -526 79 -535 b 79 -387 79 -433 79 -413 b 79 -254 79 -314 79 -254 b 54 -263 79 -254 67 -258 b 19 -273 36 -270 26 -273 b 6 -267 14 -273 10 -271 b 0 -222 0 -261 0 -263 b 0 -207 0 -217 0 -213 b 0 -195 0 -203 0 -199 b 6 -148 0 -152 0 -154 b 47 -131 10 -144 10 -144 l 79 -120 l 79 -5 b 79 110 79 58 79 110 b 53 101 79 110 67 106 b 19 93 35 95 25 93 b 6 99 14 93 10 95 b 0 144 0 105 0 103 b 0 158 0 148 0 153 b 0 185 0 169 0 178 b 45 233 0 222 3 219 l 79 244 l 79 382 b 81 524 79 519 79 520 b 92 536 82 529 88 534 z',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -373,\n            y_max: 373,\n            ha: 747,\n            o: 'm 127 536 b 135 538 129 537 132 538 b 156 524 144 538 153 532 b 157 420 157 520 157 519 l 157 319 l 185 328 b 216 337 209 336 212 337 b 218 337 217 337 217 337 b 237 325 227 336 233 332 l 239 322 l 239 273 b 239 247 239 262 239 254 b 235 214 239 219 238 219 b 192 196 231 209 229 208 l 157 185 l 157 129 b 158 75 157 86 157 75 b 158 75 158 75 158 75 b 202 89 158 75 178 81 l 245 103 l 250 103 b 268 91 258 102 265 98 l 270 88 l 270 39 b 270 13 270 28 270 20 b 266 -20 270 -15 270 -15 b 208 -43 262 -25 261 -25 l 157 -60 l 157 -112 b 157 -127 157 -117 157 -122 b 158 -164 157 -151 157 -164 b 184 -154 158 -164 170 -160 b 214 -145 198 -149 212 -145 b 217 -144 215 -144 216 -144 b 238 -158 226 -144 235 -150 b 239 -217 239 -161 239 -190 b 238 -261 239 -239 239 -259 b 192 -286 235 -271 233 -272 l 157 -299 l 157 -410 b 155 -525 157 -522 157 -522 b 135 -538 152 -533 143 -538 b 120 -531 130 -538 124 -536 b 113 -463 114 -525 113 -532 b 113 -417 113 -450 113 -435 b 113 -314 113 -361 113 -314 b 88 -323 113 -314 102 -318 b 53 -333 70 -330 60 -333 b 41 -327 48 -333 45 -331 b 34 -282 35 -321 34 -323 b 34 -267 34 -277 34 -273 b 34 -255 34 -263 34 -259 b 40 -208 34 -212 35 -214 b 81 -191 44 -204 44 -204 l 113 -180 l 113 -127 b 113 -75 113 -86 113 -75 b 113 -75 113 -75 113 -75 b 69 -89 112 -75 92 -81 l 26 -103 l 21 -103 b 1 -89 12 -102 4 -97 b 0 -43 0 -86 0 -65 b 2 15 0 -16 1 12 b 63 43 5 24 4 24 l 113 60 l 113 115 b 113 130 113 120 113 125 b 113 170 113 153 113 170 b 87 161 113 170 101 166 b 53 153 69 156 60 153 b 41 159 48 153 45 155 b 34 204 35 165 34 163 b 34 218 34 208 34 213 b 34 245 34 229 34 238 b 79 293 34 282 38 279 l 113 304 l 113 412 b 115 524 113 519 113 520 b 127 536 117 529 122 534 z',\n        },\n        articAccentAbove: {\n            x_min: -256,\n            x_max: 19,\n            y_min: -114,\n            y_max: 114,\n            ha: 227,\n            o: 'm -350 163 b -341 164 -348 163 -344 164 b -333 163 -338 164 -335 163 b -312 151 -330 162 -327 160 b -9 30 -231 99 -122 56 b 13 24 8 27 11 26 b 28 0 23 18 28 9 b 3 -28 28 -12 19 -24 b -19 -33 -1 -29 -11 -31 b -315 -153 -129 -58 -238 -102 b -341 -164 -331 -163 -333 -164 b -369 -136 -357 -164 -369 -151 b -364 -121 -369 -131 -367 -126 b -346 -107 -361 -117 -358 -114 b -135 -8 -285 -67 -213 -34 b -111 0 -122 -4 -111 0 b -135 8 -111 0 -122 4 b -346 107 -213 34 -285 67 b -364 121 -358 114 -361 116 b -368 136 -367 126 -368 131 b -350 163 -368 148 -361 159 z',\n        },\n        articAccentBelow: {\n            x_min: -256,\n            x_max: 19,\n            y_min: -114,\n            y_max: 114,\n            ha: 227,\n            o: 'm -350 163 b -341 164 -348 163 -344 164 b -333 163 -338 164 -335 163 b -312 151 -330 162 -327 160 b -9 30 -231 99 -122 56 b 13 24 8 27 11 26 b 28 0 23 18 28 9 b 3 -28 28 -12 19 -24 b -19 -33 -1 -29 -11 -31 b -315 -153 -129 -58 -238 -102 b -341 -164 -331 -163 -333 -164 b -369 -136 -357 -164 -369 -151 b -364 -121 -369 -131 -367 -126 b -346 -107 -361 -117 -358 -114 b -135 -8 -285 -67 -213 -34 b -111 0 -122 -4 -111 0 b -135 8 -111 0 -122 4 b -346 107 -213 34 -285 67 b -364 121 -358 114 -361 116 b -368 136 -367 126 -368 131 b -350 163 -368 148 -361 159 z',\n        },\n        articTenutoAbove: {\n            x_min: -154,\n            x_max: 154,\n            y_min: -15,\n            y_max: 15,\n            ha: 30,\n            o: 'm -208 20 b 2 22 -205 21 -101 22 b 208 20 104 22 205 21 b 221 0 216 17 221 9 b 215 -16 221 -6 219 -11 b 101 -22 209 -21 225 -22 b 0 -22 75 -22 41 -22 b -101 -22 -41 -22 -75 -22 b -215 -16 -225 -22 -209 -21 b -221 0 -219 -11 -221 -6 b -208 20 -221 8 -216 17 z',\n        },\n        articTenutoBelow: {\n            x_min: -154,\n            x_max: 154,\n            y_min: -15,\n            y_max: 15,\n            ha: 30,\n            o: 'm -208 20 b 2 22 -205 21 -101 22 b 208 20 104 22 205 21 b 221 0 216 17 221 9 b 215 -16 221 -6 219 -11 b 101 -22 209 -21 225 -22 b 0 -22 75 -22 41 -22 b -101 -22 -41 -22 -75 -22 b -215 -16 -225 -22 -209 -21 b -221 0 -219 -11 -221 -6 b -208 20 -221 8 -216 17 z',\n        },\n        articStaccatoAbove: {\n            x_min: -49,\n            x_max: 49,\n            y_min: -49,\n            y_max: 49,\n            ha: 99,\n            o: 'm -13 70 b -1 71 -9 71 -5 71 b 59 40 23 71 46 59 b 71 0 67 28 71 14 b 40 -59 71 -23 60 -46 b 0 -71 28 -67 14 -71 b -59 -40 -23 -71 -46 -60 b -71 0 -67 -28 -71 -14 b -13 70 -71 32 -48 64 z',\n        },\n        articStaccatoBelow: {\n            x_min: -49,\n            x_max: 49,\n            y_min: -49,\n            y_max: 49,\n            ha: 99,\n            o: 'm -13 70 b -1 71 -9 71 -5 71 b 59 40 23 71 46 59 b 71 0 67 28 71 14 b 40 -59 71 -23 60 -46 b 0 -71 28 -67 14 -71 b -59 -40 -23 -71 -46 -60 b -71 0 -67 -28 -71 -14 b -13 70 -71 32 -48 64 z',\n        },\n        articStaccatissimoAbove: {\n            x_min: -53,\n            x_max: 53,\n            y_min: 0,\n            y_max: 184,\n            ha: 184,\n            o: 'm -76 263 l -77 265 l 0 265 l 77 265 l 76 263 b 0 0 75 259 0 0 b -76 263 0 0 -75 259 z',\n        },\n        articStaccatissimoBelow: {\n            x_min: -53,\n            x_max: 53,\n            y_min: -184,\n            y_max: 0,\n            ha: 184,\n            o: 'm -38 -131 b 0 0 -17 -59 0 0 b 76 -263 0 0 75 -259 l 77 -265 l 0 -265 l -77 -265 l -76 -263 b -38 -131 -76 -262 -59 -203 z',\n        },\n        articMarcatoAbove: {\n            x_min: -114,\n            x_max: 114,\n            y_min: -256,\n            y_max: 19,\n            ha: 275,\n            o: 'm -9 26 b 0 28 -6 27 -3 28 b 28 3 13 28 24 18 b 33 -19 29 -1 31 -11 b 153 -315 58 -129 102 -238 b 164 -341 163 -331 164 -333 b 136 -368 164 -357 152 -368 b 107 -346 124 -368 118 -364 b 8 -135 67 -285 34 -213 b 0 -111 4 -122 0 -111 b -8 -135 0 -111 -4 -122 b -107 -346 -34 -213 -67 -285 b -136 -368 -118 -364 -124 -368 b -164 -341 -152 -368 -164 -357 b -151 -312 -164 -333 -163 -332 b -30 -9 -99 -231 -56 -122 b -21 18 -26 11 -26 12 b -9 26 -19 21 -13 25 z',\n        },\n        articMarcatoBelow: {\n            x_min: -114,\n            x_max: 114,\n            y_min: -19,\n            y_max: 256,\n            ha: 275,\n            o: 'm -145 367 b -136 369 -142 368 -139 369 b -107 346 -125 369 -117 362 b -8 135 -67 285 -34 213 b 0 111 -4 122 0 111 b 8 135 0 111 4 122 b 107 346 34 213 67 285 b 121 364 114 358 117 361 b 136 369 126 367 131 369 b 164 341 151 369 164 357 b 153 315 164 333 163 331 b 30 9 101 235 56 124 b 21 -18 26 -11 26 -12 b 0 -27 16 -24 8 -27 b -21 -18 -8 -27 -16 -24 b -30 9 -26 -12 -26 -11 b -151 312 -56 122 -99 231 b -164 341 -163 332 -164 333 b -145 367 -164 353 -156 364 z',\n        },\n        fermataAbove: {\n            x_min: -324,\n            x_max: 324,\n            y_min: 0,\n            y_max: 353,\n            ha: 353,\n            o: 'm -33 507 b 0 508 -22 508 -11 508 b 459 112 228 508 419 345 b 467 31 464 85 467 51 b 465 14 467 22 466 16 b 445 0 462 5 453 0 b 429 7 439 0 433 2 b 422 32 424 12 423 15 b 0 365 414 221 231 365 b -63 362 -33 365 -39 365 b -422 32 -265 338 -415 200 b -429 7 -423 15 -424 12 b -445 0 -433 2 -439 0 b -465 14 -453 0 -462 5 b -467 31 -466 16 -467 22 b -459 112 -467 51 -464 85 b -33 507 -422 332 -249 492 z m -15 196 b 0 197 -10 197 -5 197 b 74 163 27 197 56 184 b 98 99 91 145 98 121 b 55 17 98 67 83 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -65 187 z',\n        },\n        fermataBelow: {\n            x_min: -324,\n            x_max: 324,\n            y_min: -353,\n            y_max: 0,\n            ha: 353,\n            o: 'm -453 -2 b -445 0 -451 -1 -448 0 b -429 -7 -439 0 -433 -3 b -422 -33 -424 -12 -423 -15 b 0 -365 -414 -221 -231 -365 b 63 -362 33 -365 39 -365 b 422 -33 265 -338 415 -201 b 429 -7 423 -15 424 -12 b 445 0 433 -2 439 0 b 465 -14 453 0 462 -5 b 467 -31 466 -17 467 -23 b 463 -87 467 -46 465 -68 b 35 -507 434 -319 259 -490 b -1 -508 23 -508 11 -508 b -459 -112 -228 -508 -419 -345 b -467 -31 -464 -85 -467 -51 b -465 -14 -467 -23 -466 -17 b -453 -2 -463 -9 -458 -4 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n        },\n        fermataLongAbove: {\n            x_min: -286,\n            x_max: 286,\n            y_min: 0,\n            y_max: 364,\n            ha: 364,\n            o: 'm -399 523 b 0 524 -395 524 -392 524 l 395 524 l 399 523 b 411 511 404 521 409 516 b 412 262 412 507 412 507 b 412 141 412 213 412 173 b 406 7 412 -8 412 12 b 390 0 402 2 396 0 b 382 2 387 0 385 1 b 370 14 377 4 372 9 b 368 183 368 17 368 18 l 368 350 l 0 350 l -368 350 l -368 183 b -370 14 -368 18 -368 17 b -390 0 -373 5 -381 0 b -411 14 -399 0 -407 5 b -412 262 -412 17 -412 139 b -411 511 -412 385 -412 508 b -399 523 -409 516 -403 521 z m -15 196 b 0 197 -10 197 -5 197 b 75 163 27 197 56 184 b 98 99 91 145 98 121 b 56 17 98 67 84 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -64 187 z',\n        },\n        fermataLongBelow: {\n            x_min: -286,\n            x_max: 286,\n            y_min: -364,\n            y_max: 0,\n            ha: 364,\n            o: 'm -399 -2 b -391 0 -396 -1 -393 0 b -370 -14 -382 0 -373 -6 b -368 -184 -368 -18 -368 -18 l -368 -350 l 0 -350 l 368 -350 l 368 -184 b 370 -14 368 -18 368 -18 b 390 0 373 -5 382 0 b 411 -14 399 0 407 -5 b 412 -262 412 -17 412 -140 b 411 -511 412 -385 412 -508 b 399 -523 409 -516 404 -521 l 395 -524 l 0 -524 l -395 -524 l -399 -523 b -411 -511 -404 -521 -409 -516 b -412 -262 -412 -508 -412 -385 b -411 -14 -412 -140 -412 -17 b -399 -2 -409 -9 -404 -4 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n        },\n        fermataVeryLongAbove: {\n            x_min: -286,\n            x_max: 286,\n            y_min: 0,\n            y_max: 438,\n            ha: 438,\n            o: 'm -399 629 b 0 631 -395 631 -392 631 l 395 631 l 399 629 b 411 617 404 627 409 622 b 412 315 412 614 412 465 b 411 14 412 166 412 17 b 390 0 407 5 399 0 b 370 14 382 0 373 5 b 368 237 368 17 368 18 l 368 456 l 0 456 l -368 456 l -368 237 b -370 14 -368 18 -368 17 b -390 0 -373 5 -382 0 b -411 14 -399 0 -407 5 b -412 315 -412 17 -412 166 b -411 617 -412 465 -412 614 b -399 629 -409 622 -404 627 z m -290 384 b 3 385 -287 385 -141 385 b 289 384 145 385 287 385 b 301 372 294 382 300 377 b 303 193 303 369 303 281 b 301 14 303 105 303 17 b 281 0 298 5 290 0 b 265 7 275 0 270 2 b 259 80 260 12 259 4 b 259 130 259 94 259 111 l 259 243 l 0 243 l -259 243 l -259 130 b -259 80 -259 111 -259 94 b -265 7 -259 4 -260 12 b -281 0 -270 2 -275 0 b -301 14 -290 0 -298 5 b -303 193 -303 17 -303 105 b -301 372 -303 281 -303 369 b -290 384 -300 376 -294 382 z m -15 196 b 0 197 -10 197 -5 197 b 74 163 27 197 56 184 b 98 99 91 145 98 121 b 55 17 98 67 83 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -65 187 z',\n        },\n        fermataVeryLongBelow: {\n            x_min: -286,\n            x_max: 286,\n            y_min: -438,\n            y_max: 0,\n            ha: 438,\n            o: 'm -399 -2 b -391 0 -396 -1 -393 0 b -370 -14 -382 0 -373 -6 b -368 -237 -368 -18 -368 -18 l -368 -456 l 0 -456 l 368 -456 l 368 -237 b 370 -14 368 -18 368 -18 b 390 0 373 -5 382 0 b 411 -14 399 0 407 -5 b 412 -316 412 -17 412 -166 b 411 -617 412 -465 412 -614 b 399 -629 409 -622 404 -628 l 395 -631 l 0 -631 l -395 -631 l -399 -629 b -411 -617 -404 -628 -409 -622 b -412 -316 -412 -614 -412 -465 b -411 -14 -412 -166 -412 -17 b -399 -2 -409 -9 -404 -4 z m -290 -2 b -281 0 -287 -1 -284 0 b -261 -14 -272 0 -264 -6 b -259 -130 -259 -18 -259 -19 l -259 -243 l 0 -243 l 259 -243 l 259 -130 b 259 -81 259 -111 259 -94 b 265 -7 259 -5 260 -13 b 281 0 270 -2 275 0 b 301 -14 290 0 298 -5 b 303 -193 303 -17 303 -105 b 301 -372 303 -281 303 -369 b 289 -384 300 -377 294 -382 b 0 -385 287 -385 143 -385 b -289 -384 -143 -385 -287 -385 b -301 -372 -294 -382 -300 -377 b -303 -193 -303 -369 -303 -281 b -301 -14 -303 -105 -303 -17 b -290 -2 -300 -9 -294 -4 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n        },\n        fermataVeryShortAbove: {\n            x_min: -351,\n            x_max: 351,\n            y_min: 0,\n            y_max: 571,\n            ha: 571,\n            o: 'm -9 820 b 0 822 -6 821 -3 822 b 8 820 3 822 6 821 b 35 785 15 818 17 815 b 68 733 45 770 59 747 b 98 684 76 720 90 698 b 146 606 107 670 128 635 b 193 532 164 578 185 544 b 227 477 200 519 216 495 b 313 337 277 396 301 358 b 362 260 321 325 343 290 b 406 188 380 230 400 197 b 436 140 412 179 425 157 b 505 25 500 37 505 30 b 505 22 505 24 505 23 b 491 2 505 13 499 5 b 450 0 488 1 469 0 b 409 2 431 0 412 1 b 382 37 403 4 400 7 b 350 89 373 52 358 75 b 319 138 342 102 328 124 b 271 216 311 152 289 187 b 225 290 253 244 232 278 b 191 345 217 302 202 327 b 104 485 142 424 117 464 b 8 639 73 534 24 613 b -21 686 -2 655 -15 676 b -33 704 -27 696 -33 704 b -44 686 -33 704 -38 696 b -73 639 -51 676 -64 655 b -170 485 -89 614 -133 543 b -203 430 -177 472 -192 448 b -290 290 -253 351 -277 311 b -337 216 -298 278 -319 244 b -385 138 -355 187 -376 152 b -415 89 -393 124 -407 102 b -448 37 -424 75 -438 52 b -474 2 -466 7 -468 4 b -483 0 -477 1 -480 0 b -505 22 -495 0 -505 9 b -505 25 -505 23 -505 24 b -436 140 -505 30 -500 37 b -406 188 -425 157 -412 179 b -362 260 -400 197 -380 230 b -313 337 -343 290 -321 325 b -227 477 -301 358 -277 396 b -193 532 -216 495 -200 519 b -146 606 -185 544 -164 578 b -98 684 -128 635 -107 670 b -68 733 -90 697 -76 720 b -35 785 -59 747 -45 770 b -9 820 -17 814 -14 818 z m -36 506 b -28 508 -33 507 -30 508 b -12 502 -22 508 -16 506 b 280 30 -8 498 278 36 b 281 22 281 28 281 25 b 268 2 281 14 276 5 b 226 0 265 1 246 0 b 185 2 207 0 188 1 b 58 199 178 4 182 -1 b -60 389 -7 304 -60 389 b -178 199 -60 389 -114 304 b -305 2 -302 -1 -298 4 b -314 0 -308 1 -311 0 b -336 22 -326 0 -336 10 b -334 30 -336 25 -335 27 b -43 502 -332 36 -46 498 b -36 506 -41 504 -38 506 z m -56 196 b -41 197 -51 197 -46 197 b 33 163 -14 197 15 184 b 57 99 50 145 57 121 b 15 17 57 67 43 36 b -41 0 -3 5 -22 0 b -139 99 -92 0 -139 40 b -56 196 -139 148 -105 187 z',\n        },\n        fermataVeryShortBelow: {\n            x_min: -351,\n            x_max: 351,\n            y_min: -571,\n            y_max: 0,\n            ha: 571,\n            o: 'm 9 -820 b 0 -822 6 -821 3 -822 b -8 -820 -3 -822 -6 -821 b -35 -785 -15 -818 -17 -815 b -68 -733 -45 -770 -59 -747 b -98 -684 -76 -720 -90 -698 b -146 -606 -107 -670 -128 -635 b -193 -532 -164 -578 -185 -544 b -227 -477 -200 -519 -216 -495 b -313 -337 -277 -396 -301 -358 b -362 -260 -321 -325 -343 -290 b -406 -188 -380 -230 -400 -197 b -436 -140 -412 -179 -425 -157 b -505 -25 -500 -37 -505 -30 b -505 -22 -505 -24 -505 -23 b -491 -2 -505 -13 -499 -5 b -450 0 -488 -1 -469 0 b -409 -2 -431 0 -412 -1 b -382 -37 -403 -4 -400 -7 b -350 -89 -373 -52 -358 -75 b -319 -138 -342 -102 -328 -124 b -271 -216 -311 -152 -289 -187 b -225 -290 -253 -244 -232 -278 b -191 -345 -217 -302 -202 -327 b -104 -485 -142 -424 -117 -464 b -8 -639 -73 -534 -24 -613 b 21 -686 2 -655 15 -676 b 33 -704 27 -696 33 -704 b 44 -686 33 -704 38 -696 b 73 -639 51 -676 64 -655 b 170 -485 89 -614 133 -543 b 203 -430 177 -472 192 -448 b 290 -290 253 -351 277 -311 b 337 -216 298 -278 319 -244 b 385 -138 355 -187 376 -152 b 415 -89 393 -124 407 -102 b 448 -37 424 -75 438 -52 b 474 -2 466 -7 468 -4 b 483 0 477 -1 480 0 b 505 -22 495 0 505 -9 b 505 -25 505 -23 505 -24 b 436 -140 505 -30 500 -37 b 406 -188 425 -157 412 -179 b 362 -260 400 -197 380 -230 b 313 -337 343 -290 321 -325 b 227 -477 301 -358 277 -396 b 193 -532 216 -495 200 -519 b 146 -606 185 -544 164 -578 b 98 -684 128 -635 107 -670 b 68 -733 90 -697 76 -720 b 35 -785 59 -747 45 -770 b 9 -820 17 -814 14 -818 z m 36 -506 b 28 -508 33 -507 30 -508 b 12 -502 22 -508 16 -506 b -280 -30 8 -498 -278 -36 b -281 -22 -281 -28 -281 -25 b -268 -2 -281 -14 -276 -5 b -226 0 -265 -1 -246 0 b -185 -2 -207 0 -188 -1 b -58 -199 -178 -4 -182 1 b 60 -389 7 -304 60 -389 b 178 -199 60 -389 114 -304 b 305 -2 302 1 298 -4 b 314 0 308 -1 311 0 b 336 -22 326 0 336 -10 b 334 -30 336 -25 335 -27 b 43 -502 332 -36 46 -498 b 36 -506 41 -504 38 -506 z m 56 -196 b 41 -197 51 -197 46 -197 b -33 -163 14 -197 -15 -184 b -57 -99 -50 -145 -57 -121 b -15 -17 -57 -67 -43 -36 b 41 0 3 -5 22 0 b 139 -99 92 0 139 -40 b 56 -196 139 -148 105 -187 z',\n        },\n        fermataShortAbove: {\n            x_min: -286,\n            x_max: 286,\n            y_min: 0,\n            y_max: 469,\n            ha: 469,\n            o: 'm -9 674 b 0 676 -6 675 -3 676 b 15 670 6 676 11 674 b 74 576 17 667 37 637 b 233 319 105 526 176 410 b 373 92 290 227 353 125 b 411 30 393 59 410 31 b 412 23 412 27 412 25 b 398 2 412 14 407 5 b 357 0 396 1 376 0 b 316 2 338 0 319 1 b 250 100 309 4 309 4 b 91 357 220 150 148 266 b -22 541 35 449 -17 532 b -33 558 -28 550 -33 558 b -42 544 -33 558 -37 551 b -137 389 -47 536 -89 467 b -240 223 -185 312 -231 237 b -382 2 -387 -16 -374 4 b -390 0 -385 1 -387 0 b -412 22 -402 0 -412 9 l -412 22 b -375 90 -412 29 -412 29 b -253 286 -285 236 -269 261 b -182 402 -244 301 -212 354 b -34 641 -127 491 -64 593 b -9 674 -17 668 -15 672 z m -15 196 b -1 197 -10 197 -5 197 b 74 163 27 197 56 184 b 98 99 90 145 98 121 b 55 17 98 67 83 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -65 187 z',\n        },\n        fermataShortBelow: {\n            x_min: -286,\n            x_max: 286,\n            y_min: -469,\n            y_max: 0,\n            ha: 469,\n            o: 'm -399 -2 b -390 0 -396 -1 -393 0 b -375 -6 -385 0 -379 -3 b -316 -100 -373 -9 -353 -39 b -157 -358 -285 -150 -214 -266 b -43 -541 -100 -449 -49 -532 b -33 -558 -38 -550 -33 -558 b -24 -544 -32 -558 -28 -552 b 20 -473 -19 -536 1 -505 b 72 -390 39 -442 62 -405 b 143 -274 81 -375 113 -322 b 291 -35 198 -185 261 -83 b 316 -2 308 -8 310 -4 b 357 0 319 -1 338 0 b 399 -2 377 0 396 -1 b 412 -23 407 -5 412 -14 b 411 -30 412 -25 412 -27 b 392 -62 410 -31 402 -46 b 355 -122 382 -78 365 -105 b 253 -287 345 -138 299 -212 b 152 -451 207 -361 162 -435 b 76 -573 142 -467 108 -522 b 4 -676 16 -671 13 -676 b 0 -676 3 -676 1 -676 b -4 -676 -1 -676 -3 -676 b -74 -576 -13 -676 -16 -671 b -233 -319 -105 -526 -176 -411 b -373 -92 -290 -227 -353 -125 b -411 -30 -393 -59 -410 -31 b -412 -23 -412 -27 -412 -25 b -399 -2 -412 -14 -407 -5 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n        },\n        breathMarkComma: {\n            x_min: 0,\n            x_max: 168,\n            y_min: -155,\n            y_max: 155,\n            ha: 311,\n            o: 'm 96 223 b 107 224 100 224 103 224 b 236 104 164 224 218 174 b 242 55 240 88 242 71 b 66 -209 242 -42 175 -144 b 33 -224 48 -219 39 -224 b 25 -219 30 -224 28 -222 b 23 -213 24 -216 23 -215 b 36 -199 23 -208 28 -204 b 130 -56 96 -166 130 -110 b 111 8 130 -34 124 -12 l 110 10 l 100 11 b 6 82 58 12 19 42 b 0 117 2 94 0 105 b 96 223 0 170 40 217 z',\n        },\n        breathMarkUpbow: {\n            x_min: -125,\n            x_max: 125,\n            y_min: 0,\n            y_max: 409,\n            ha: 409,\n            o: 'm -171 588 b -130 589 -168 589 -166 589 l -123 589 b -83 585 -87 589 -88 589 b -23 385 -80 581 -84 594 b 34 193 8 280 34 193 b 91 385 34 193 60 280 b 149 580 122 491 148 579 b 164 590 151 586 157 590 b 179 580 170 590 176 586 b 180 577 179 579 180 579 b 99 292 180 569 169 533 b 13 6 18 16 15 6 b 13 6 13 6 13 6 b 12 5 13 6 13 6 b 0 0 9 2 5 0 b -16 11 -7 0 -13 4 b -180 573 -25 41 -180 570 b -171 588 -180 580 -177 586 z',\n        },\n        caesura: {\n            x_min: 0,\n            x_max: 457,\n            y_min: -202,\n            y_max: 303,\n            ha: 504,\n            o: 'm 423 434 b 431 436 426 435 428 436 b 453 414 443 436 453 426 b 452 406 453 411 453 409 b 37 -284 450 401 41 -281 b 23 -290 33 -289 28 -290 b 0 -268 11 -290 0 -281 b 1 -261 0 -266 0 -263 b 416 430 3 -256 413 427 b 423 434 418 431 421 433 z m 627 434 b 636 436 630 435 633 436 b 658 414 648 436 658 426 b 657 406 658 411 658 409 b 242 -284 655 401 245 -281 b 227 -290 238 -289 232 -290 b 205 -268 216 -290 205 -281 b 206 -261 205 -266 205 -263 b 621 430 208 -256 618 427 b 627 434 623 431 625 433 z',\n        },\n        caesuraCurved: {\n            x_min: 0,\n            x_max: 370,\n            y_min: -207,\n            y_max: 310,\n            ha: 517,\n            o: 'm 291 447 b 296 447 293 447 294 447 b 328 410 314 447 328 431 b 328 403 328 408 328 406 b 325 384 328 401 326 392 b 44 -284 299 206 196 -38 b 22 -298 38 -293 30 -298 b 7 -291 16 -298 11 -296 b 0 -278 2 -287 0 -283 b 11 -251 0 -272 3 -264 b 262 409 146 -12 245 246 b 291 447 264 433 273 444 z m 496 447 b 501 447 498 447 499 447 b 533 410 519 447 533 431 b 533 403 533 408 533 406 b 530 384 532 401 531 392 b 248 -284 504 206 401 -38 b 226 -298 242 -293 234 -298 b 211 -291 221 -298 216 -296 b 205 -278 207 -287 205 -283 b 215 -251 205 -272 208 -264 b 466 409 351 -12 449 246 b 496 447 469 433 477 444 z',\n        },\n        restMaxima: {\n            x_min: 0,\n            x_max: 853,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 0 0 l 0 360 l 205 360 l 409 360 l 409 0 l 409 -360 l 205 -360 l 0 -360 z m 819 0 l 819 360 l 1023 360 l 1228 360 l 1228 0 l 1228 -360 l 1023 -360 l 819 -360 z',\n        },\n        restDoubleWhole: {\n            x_min: 0,\n            x_max: 284,\n            y_min: 0,\n            y_max: 250,\n            ha: 250,\n            o: 'm 0 180 l 0 360 l 205 360 l 409 360 l 409 180 l 409 0 l 205 0 l 0 0 z',\n        },\n        restWhole: {\n            x_min: 0,\n            x_max: 330,\n            y_min: -125,\n            y_max: 0,\n            ha: 125,\n            o: 'm 0 -90 l 0 0 l 237 0 l 475 0 l 475 -90 l 475 -180 l 237 -180 l 0 -180 z',\n        },\n        restWholeLegerLine: {\n            x_min: 0,\n            x_max: 542,\n            y_min: -125,\n            y_max: 11,\n            ha: 137,\n            o: 'm 9 15 b 427 17 11 16 226 17 b 771 15 603 17 769 16 b 780 0 777 13 780 6 b 771 -15 780 -6 777 -13 b 698 -16 768 -16 760 -16 l 628 -16 l 628 -98 l 628 -180 l 390 -180 l 153 -180 l 153 -98 l 153 -16 l 83 -16 b 10 -15 21 -16 12 -16 b 0 0 3 -13 0 -6 b 9 15 0 6 3 12 z',\n        },\n        restHalf: {\n            x_min: 0,\n            x_max: 330,\n            y_min: 0,\n            y_max: 125,\n            ha: 125,\n            o: 'm 0 90 l 0 180 l 237 180 l 475 180 l 475 90 l 475 0 l 237 0 l 0 0 z',\n        },\n        restHalfLegerLine: {\n            x_min: 0,\n            x_max: 542,\n            y_min: -11,\n            y_max: 125,\n            ha: 137,\n            o: 'm 153 98 l 153 180 l 390 180 l 628 180 l 628 98 l 628 16 l 698 16 b 771 15 760 16 769 16 b 781 0 777 13 781 6 b 771 -15 781 -6 777 -13 b 427 -17 769 -16 603 -17 b 9 -15 226 -17 11 -16 b 0 0 3 -12 0 -6 b 4 12 0 4 1 8 b 58 16 9 16 5 16 b 83 16 65 16 73 16 l 153 16 z',\n        },\n        restQuarter: {\n            x_min: 0,\n            x_max: 221,\n            y_min: -365,\n            y_max: 365,\n            ha: 730,\n            o: 'm 50 524 b 56 526 52 525 54 526 b 74 516 62 526 67 523 b 96 497 78 513 88 504 b 118 478 105 489 115 481 b 181 423 143 456 154 447 b 311 305 302 317 311 310 b 310 302 311 304 310 303 b 310 299 310 301 310 300 b 298 278 310 295 310 294 b 234 132 268 233 245 181 b 222 39 226 100 222 69 b 306 -177 222 -46 251 -123 b 319 -198 318 -190 319 -191 b 303 -214 319 -208 313 -214 b 291 -212 299 -214 295 -213 b 260 -208 281 -209 270 -208 b 155 -260 221 -208 181 -227 b 122 -353 133 -287 122 -320 b 185 -490 122 -400 143 -450 b 197 -510 193 -498 197 -505 b 191 -521 197 -514 195 -517 b 181 -526 188 -524 185 -526 b 136 -495 173 -526 161 -517 b 0 -270 48 -420 0 -340 l 0 -270 l 0 -253 l 2 -243 b 157 -146 19 -182 78 -146 b 217 -152 176 -146 196 -148 l 228 -155 l 226 -152 b 124 -62 223 -150 168 -101 b 19 37 23 27 19 31 b 19 39 19 38 19 39 l 19 40 b 29 59 19 46 19 47 b 117 312 87 138 117 229 b 53 489 117 382 96 446 b 41 509 42 500 41 503 b 50 524 41 516 44 521 z',\n        },\n        rest8th: {\n            x_min: 0,\n            x_max: 258,\n            y_min: -197,\n            y_max: 219,\n            ha: 416,\n            o: 'm 98 315 b 110 316 102 315 106 316 b 177 293 132 316 159 307 b 218 207 204 271 218 239 b 191 137 218 182 209 157 l 187 132 l 193 134 b 326 260 251 150 302 198 b 331 270 328 264 330 269 b 349 279 336 276 343 279 b 371 257 360 279 371 270 b 213 -273 371 253 216 -267 b 194 -283 209 -280 202 -283 b 173 -270 185 -283 176 -279 b 172 -265 172 -268 172 -268 b 230 -62 172 -257 180 -228 b 289 134 263 46 289 134 b 289 134 289 134 289 134 b 280 128 289 134 285 131 b 149 84 241 98 194 84 b 39 121 108 84 69 96 b 0 204 13 142 0 173 b 31 282 0 232 10 260 b 98 315 48 300 69 311 z',\n        },\n        rest16th: {\n            x_min: 0,\n            x_max: 331,\n            y_min: -443,\n            y_max: 219,\n            ha: 662,\n            o: 'm 205 315 b 216 316 208 315 212 316 b 283 293 239 316 265 307 b 324 207 310 271 324 239 b 298 137 324 182 316 157 l 293 132 l 299 134 b 433 260 358 150 409 198 b 438 270 434 264 437 269 b 455 279 443 276 449 279 b 477 257 467 279 477 270 b 213 -627 477 253 216 -621 b 194 -638 209 -635 202 -638 b 173 -625 185 -638 176 -634 b 172 -620 172 -623 172 -622 b 230 -417 172 -612 180 -583 b 289 -221 263 -309 289 -221 b 289 -221 289 -221 289 -221 b 280 -227 289 -221 285 -223 b 149 -271 241 -256 194 -271 b 39 -234 108 -271 69 -259 b 0 -150 13 -213 0 -182 b 31 -73 0 -123 10 -95 b 110 -39 52 -50 81 -39 b 207 -100 149 -39 188 -60 b 218 -147 214 -114 218 -131 b 191 -218 218 -173 209 -199 l 187 -223 l 193 -221 b 326 -96 251 -205 302 -157 b 395 134 328 -91 395 133 b 395 134 395 134 395 134 b 387 128 395 134 391 131 b 256 84 347 98 301 84 b 145 121 215 84 175 96 b 106 204 119 142 106 173 b 137 282 106 232 116 260 b 205 315 155 300 176 311 z',\n        },\n        rest32nd: {\n            x_min: 0,\n            x_max: 405,\n            y_min: -443,\n            y_max: 466,\n            ha: 909,\n            o: 'm 311 670 b 322 670 315 670 318 670 b 390 647 345 670 371 662 b 431 562 417 626 431 594 b 404 492 431 536 422 511 l 400 487 l 406 488 b 539 614 464 504 515 552 b 544 625 541 619 543 623 b 562 633 549 631 555 633 b 584 612 573 633 584 625 b 213 -627 584 607 216 -621 b 194 -638 209 -635 202 -638 b 173 -625 185 -638 176 -634 b 172 -620 172 -623 172 -622 b 230 -417 172 -612 180 -583 b 289 -221 263 -309 289 -221 b 289 -221 289 -221 289 -221 b 280 -227 289 -221 285 -223 b 149 -271 241 -256 194 -271 b 39 -234 108 -271 69 -259 b 0 -150 13 -213 0 -182 b 31 -73 0 -123 10 -95 b 110 -39 52 -50 81 -39 b 207 -100 149 -39 188 -60 b 218 -147 214 -114 218 -131 b 191 -218 218 -173 209 -199 l 187 -223 l 193 -221 b 326 -96 251 -205 302 -157 b 395 134 328 -91 395 133 b 395 134 395 134 395 134 b 387 128 395 134 391 131 b 256 84 347 98 301 84 b 145 121 215 84 175 96 b 106 204 119 142 106 173 b 137 282 106 232 116 260 b 216 315 159 304 187 315 b 314 255 255 315 295 294 b 324 208 321 240 324 224 b 298 137 324 182 315 156 l 293 132 l 299 134 b 432 258 357 149 409 198 b 502 489 434 264 502 487 b 502 489 502 489 502 489 b 493 483 502 489 498 486 b 362 438 454 453 407 438 b 251 475 321 438 282 451 b 213 559 226 496 213 528 b 243 636 213 587 223 615 b 311 670 261 655 282 665 z',\n        },\n        rest64th: {\n            x_min: 0,\n            x_max: 479,\n            y_min: -689,\n            y_max: 466,\n            ha: 1155,\n            o: 'm 417 670 b 429 670 421 670 425 670 b 496 647 451 670 478 662 b 537 562 523 626 537 594 b 510 492 537 536 529 511 l 506 487 l 512 488 b 646 614 570 504 621 552 b 651 625 647 619 650 623 b 668 633 655 631 662 633 b 690 612 679 633 690 625 b 213 -982 690 607 216 -976 b 194 -993 209 -989 202 -993 b 173 -979 185 -993 176 -988 b 172 -974 172 -978 172 -977 b 230 -771 172 -966 180 -938 b 289 -575 263 -664 289 -575 b 289 -575 289 -575 289 -575 b 280 -582 289 -575 285 -578 b 149 -626 241 -611 194 -626 b 39 -589 108 -626 69 -613 b 0 -505 13 -568 0 -537 b 31 -428 0 -477 10 -449 b 110 -394 52 -405 81 -394 b 207 -454 149 -394 188 -415 b 218 -502 214 -469 218 -485 b 191 -572 218 -528 209 -553 l 187 -577 l 193 -576 b 326 -451 251 -560 302 -512 b 395 -221 328 -446 395 -222 b 395 -221 395 -221 395 -221 b 387 -227 395 -221 391 -223 b 256 -271 347 -256 301 -271 b 145 -234 215 -271 175 -259 b 106 -150 119 -213 106 -182 b 137 -73 106 -123 116 -95 b 216 -39 159 -50 187 -39 b 314 -100 255 -39 295 -60 b 324 -147 321 -114 324 -131 b 298 -218 324 -173 315 -199 l 293 -223 l 299 -221 b 432 -96 357 -205 409 -157 b 502 134 434 -91 502 133 b 502 134 502 134 502 134 b 493 128 502 134 498 131 b 362 84 454 98 407 84 b 251 121 321 84 282 96 b 213 204 226 142 213 173 b 243 282 213 232 223 260 b 322 315 265 304 294 315 b 420 255 362 315 401 294 b 431 208 427 240 431 224 b 404 137 431 182 422 156 l 400 132 l 406 134 b 539 258 463 149 515 198 b 608 489 541 264 608 487 b 608 489 608 489 608 489 b 599 483 608 489 604 486 b 468 438 560 453 513 438 b 358 475 428 438 388 451 b 319 559 332 496 319 528 b 350 636 319 587 329 615 b 417 670 368 655 388 665 z',\n        },\n        rest128th: {\n            x_min: 0,\n            x_max: 553,\n            y_min: -689,\n            y_max: 712,\n            ha: 1401,\n            o: 'm 524 1024 b 535 1025 527 1025 531 1025 b 603 1002 558 1025 584 1016 b 644 916 630 981 644 949 b 617 846 644 891 635 866 l 612 841 l 619 843 b 752 969 677 859 728 907 b 757 979 754 973 756 978 b 775 988 762 985 768 988 b 797 966 786 988 797 980 b 213 -982 797 962 216 -976 b 194 -993 209 -989 202 -993 b 173 -979 185 -993 176 -988 b 172 -974 172 -978 172 -977 b 230 -771 172 -966 180 -938 b 289 -575 263 -664 289 -575 b 289 -575 289 -575 289 -575 b 280 -582 289 -575 285 -578 b 149 -626 241 -611 194 -626 b 39 -589 108 -626 69 -613 b 0 -505 13 -568 0 -537 b 31 -428 0 -477 10 -449 b 110 -394 52 -405 81 -394 b 207 -454 149 -394 188 -415 b 218 -502 214 -469 218 -485 b 191 -572 218 -528 209 -553 l 187 -577 l 193 -576 b 326 -451 251 -560 302 -512 b 395 -221 328 -446 395 -222 b 395 -221 395 -221 395 -221 b 387 -227 395 -221 391 -223 b 256 -271 347 -256 301 -271 b 145 -234 215 -271 175 -259 b 106 -150 119 -213 106 -182 b 137 -73 106 -123 116 -95 b 216 -39 159 -50 187 -39 b 314 -100 255 -39 295 -60 b 324 -147 321 -114 324 -131 b 298 -218 324 -173 315 -199 l 293 -223 l 299 -221 b 432 -96 357 -205 409 -157 b 502 134 434 -91 502 133 b 502 134 502 134 502 134 b 493 128 502 134 498 131 b 362 84 454 98 407 84 b 251 121 321 84 282 96 b 213 204 226 142 213 173 b 243 282 213 232 223 260 b 322 315 265 304 294 315 b 420 255 362 315 401 294 b 431 208 427 240 431 224 b 404 137 431 182 422 156 l 400 132 l 406 134 b 539 258 463 149 515 198 b 608 489 541 264 608 487 b 608 489 608 489 608 489 b 599 483 608 489 604 486 b 468 438 560 453 513 438 b 358 475 428 438 388 451 b 319 559 332 496 319 528 b 350 636 319 587 329 615 b 429 670 372 659 400 670 b 526 610 468 670 507 649 b 537 563 534 595 537 579 b 511 492 537 536 528 511 l 506 487 l 512 488 b 645 613 570 504 621 553 b 715 843 647 618 715 842 b 715 843 715 843 715 843 b 706 837 714 843 711 841 b 575 793 667 808 620 793 b 464 830 534 793 495 805 b 426 914 439 851 426 882 b 456 991 426 941 436 969 b 524 1024 474 1010 495 1020 z',\n        },\n        dynamicPiano: {\n            x_min: -39,\n            x_max: 378,\n            y_min: -178,\n            y_max: 277,\n            ha: 455,\n            o: 'm 197 399 b 208 399 201 399 205 399 b 305 314 255 399 298 362 l 306 308 l 312 315 b 405 382 339 346 376 373 b 430 386 413 385 421 386 b 494 362 451 386 474 378 b 544 249 526 336 544 296 b 377 -30 544 116 475 1 b 334 -37 362 -34 347 -37 b 291 -25 316 -37 300 -33 b 281 -17 289 -23 285 -20 b 240 43 262 -1 248 20 b 237 52 238 47 237 52 b 237 53 237 52 237 53 b 198 -74 236 53 229 30 b 159 -207 166 -181 159 -202 b 160 -209 159 -208 160 -208 b 194 -221 165 -213 179 -218 b 206 -224 198 -222 204 -224 b 217 -240 213 -226 217 -233 b 208 -255 217 -246 214 -252 b 81 -257 206 -256 144 -257 b -46 -255 18 -257 -44 -256 b -56 -240 -52 -252 -56 -246 b -51 -229 -56 -236 -54 -232 b -33 -222 -48 -225 -46 -225 b 29 -191 9 -213 24 -206 b 174 291 34 -177 173 286 b 176 303 174 294 175 299 b 178 317 177 308 178 313 b 163 336 178 329 173 336 b 157 336 161 336 159 336 b 70 239 124 326 90 288 b 56 224 65 225 63 224 b 46 233 49 224 46 227 b 49 248 46 237 47 242 b 149 376 70 302 105 347 b 161 385 154 379 160 383 b 197 399 168 391 184 397 z m 399 318 b 389 320 396 320 393 320 b 318 285 370 320 340 306 b 302 263 306 273 304 270 b 297 253 301 260 299 256 b 273 176 296 250 288 226 l 251 104 l 252 97 b 266 51 253 81 258 64 b 296 29 274 39 288 29 b 298 29 297 29 297 29 b 309 34 299 30 304 32 b 429 230 370 62 420 144 b 431 256 430 240 431 249 b 399 318 431 289 421 307 z',\n        },\n        dynamicMezzo: {\n            x_min: 35,\n            x_max: 493,\n            y_min: -19,\n            y_max: 272,\n            ha: 291,\n            o: 'm 191 390 b 206 392 196 391 201 392 b 282 350 235 392 265 376 b 291 331 285 345 291 333 b 292 330 291 330 292 330 b 297 337 292 330 294 331 b 329 371 306 350 317 362 b 339 380 332 374 336 377 b 376 392 347 388 361 392 b 434 372 395 392 418 385 b 463 331 447 362 461 341 b 464 330 463 330 463 330 b 469 337 464 330 466 331 b 501 371 478 350 489 362 b 511 380 504 374 508 377 b 548 392 519 388 533 392 b 606 372 567 392 589 385 b 641 295 628 354 641 323 b 633 260 641 282 639 270 b 576 69 631 256 576 72 b 574 59 576 68 575 63 b 573 47 573 55 573 51 b 585 25 573 35 577 25 b 586 26 585 25 585 25 b 684 127 621 30 664 74 b 699 145 690 143 692 145 b 709 135 706 145 709 142 b 696 98 709 128 705 116 b 595 -12 672 47 640 12 b 582 -20 590 -15 584 -19 b 552 -27 573 -25 563 -27 b 481 18 524 -27 495 -10 b 470 63 474 31 470 47 b 478 98 470 76 473 88 b 535 289 480 102 535 285 b 537 298 535 290 536 294 b 538 311 538 303 538 307 b 522 339 538 324 533 333 b 516 341 519 340 517 341 b 507 337 514 341 512 340 b 468 282 491 329 470 300 b 462 261 467 276 464 264 b 422 133 461 259 444 203 b 380 2 383 1 384 4 l 378 0 l 333 0 b 321 0 329 0 324 0 b 283 5 284 0 286 0 b 282 8 282 6 282 7 b 322 149 282 15 288 37 b 363 289 344 224 363 287 b 365 299 364 292 364 296 b 367 311 366 303 367 307 b 350 339 367 324 361 333 b 344 341 347 340 346 341 b 336 337 342 341 340 340 b 296 282 319 329 298 300 b 290 261 295 276 292 264 b 251 133 289 259 272 203 b 208 2 211 1 212 4 l 206 0 l 161 0 b 149 0 157 0 152 0 b 111 5 112 0 114 0 b 110 8 110 6 110 7 b 150 149 110 15 116 37 b 191 289 172 224 191 287 b 193 299 192 292 193 296 b 195 311 194 303 195 307 b 179 338 195 323 189 333 b 171 340 176 339 174 340 b 150 333 166 340 160 338 b 75 240 120 318 92 283 b 60 224 69 225 67 224 b 50 233 53 224 50 227 b 53 248 50 237 51 242 b 162 378 75 306 117 355 b 170 383 164 379 168 381 b 191 390 176 386 183 389 z',\n        },\n        dynamicForte: {\n            x_min: -87,\n            x_max: 440,\n            y_min: -182,\n            y_max: 415,\n            ha: 597,\n            o: 'm 486 597 b 491 597 487 597 489 597 b 515 596 499 597 512 597 b 528 595 517 596 523 595 b 631 522 576 591 622 559 b 633 506 632 516 633 511 b 559 433 633 466 598 433 b 532 439 550 433 541 435 b 493 499 506 450 493 475 b 518 548 493 517 501 536 b 519 550 519 549 519 549 b 519 550 519 550 519 550 b 496 537 518 550 504 542 b 371 353 445 503 399 436 b 367 341 369 347 367 341 b 407 341 367 341 385 341 b 414 341 410 341 412 341 b 459 335 452 341 451 341 b 468 314 465 330 468 322 b 459 293 468 306 465 298 b 411 286 451 287 453 286 b 399 286 407 286 404 286 l 353 286 l 351 279 b 174 -146 320 120 253 -41 b -24 -262 120 -218 45 -262 b -28 -262 -25 -262 -26 -262 b -125 -165 -83 -260 -125 -217 b -122 -140 -125 -157 -124 -148 b -53 -89 -113 -106 -83 -89 b 17 -142 -23 -89 8 -107 b 19 -158 18 -147 19 -153 b -13 -214 19 -181 7 -202 b -16 -217 -15 -216 -16 -216 b -16 -217 -16 -217 -16 -217 b -10 -215 -15 -217 -13 -216 b 80 -130 25 -205 58 -173 b 102 -74 88 -115 93 -102 b 186 245 126 -3 146 72 b 196 285 191 267 196 285 b 196 285 196 285 196 285 b 151 286 196 286 192 286 b 98 290 103 286 102 287 b 83 314 88 296 83 305 b 98 338 83 323 88 332 b 157 341 102 341 102 341 l 211 341 l 215 353 b 486 597 264 491 372 588 z',\n        },\n        dynamicRinforzando: {\n            x_min: 58,\n            x_max: 357,\n            y_min: 0,\n            y_max: 275,\n            ha: 275,\n            o: 'm 383 395 b 401 396 389 395 395 396 b 508 352 446 396 495 377 b 515 327 513 344 515 336 b 490 285 515 310 506 293 b 465 278 482 280 474 278 b 423 301 450 278 434 286 b 365 332 408 322 386 332 b 299 281 335 332 307 314 b 296 272 298 277 297 273 b 294 266 295 271 294 269 b 291 260 293 264 292 261 b 252 133 290 259 273 201 b 210 2 213 1 214 4 l 207 0 l 163 0 b 150 0 158 0 154 0 b 112 5 113 0 115 0 b 111 8 112 6 111 7 b 152 149 111 15 118 37 b 193 289 174 225 192 287 b 195 300 193 292 194 296 b 197 315 196 305 197 310 b 175 344 197 331 189 342 b 170 344 173 344 172 344 b 109 316 149 344 127 334 b 95 306 100 306 99 306 b 84 316 88 306 84 310 b 87 325 84 319 85 322 b 149 372 99 341 127 363 b 211 388 168 381 197 388 b 215 388 213 388 214 388 b 283 349 245 385 267 372 b 285 345 284 347 285 345 b 285 345 285 345 285 345 b 291 350 286 345 288 347 b 383 395 316 374 349 390 z',\n        },\n        dynamicSforzando: {\n            x_min: 52,\n            x_max: 278,\n            y_min: -22,\n            y_max: 270,\n            ha: 292,\n            o: 'm 259 388 b 271 388 263 388 267 388 b 370 362 305 388 338 379 b 396 338 385 354 391 348 b 401 315 399 331 401 323 b 359 261 401 290 384 266 b 349 260 356 260 352 260 b 300 306 322 260 300 282 b 305 327 300 313 302 320 b 308 332 307 330 308 332 b 308 332 308 332 308 332 b 287 334 308 334 297 334 b 269 333 279 334 272 334 b 220 300 245 329 226 316 b 219 295 219 299 219 297 b 273 232 219 278 243 249 b 301 215 289 223 295 219 b 373 95 347 181 373 136 b 361 49 373 79 369 63 b 219 -32 332 -4 277 -32 b 101 7 179 -32 138 -19 b 75 51 84 19 75 34 b 85 82 75 61 78 71 b 129 106 94 98 112 106 b 164 92 142 106 154 102 b 178 59 173 83 178 71 b 170 34 178 50 175 42 l 166 29 l 168 28 b 203 22 178 24 190 22 b 226 25 211 22 219 23 b 275 68 253 31 275 52 b 274 75 275 70 274 73 b 217 132 264 98 249 114 b 122 262 161 163 127 210 b 122 270 122 265 122 267 b 259 388 122 329 184 384 z',\n        },\n        dynamicZ: {\n            x_min: 23,\n            x_max: 309,\n            y_min: 2,\n            y_max: 250,\n            ha: 248,\n            o: 'm 124 360 b 222 360 125 360 168 360 b 435 359 312 360 434 360 b 445 344 442 356 445 350 b 440 331 445 339 444 335 b 314 227 438 330 382 283 b 190 124 247 172 191 125 l 188 123 l 201 123 b 205 123 202 123 204 123 b 268 101 231 123 249 117 b 320 79 284 88 305 79 b 326 80 322 79 324 79 b 340 93 330 81 334 84 b 342 97 341 96 342 97 b 342 98 342 98 342 98 b 340 97 342 98 341 97 b 330 96 336 96 333 96 b 294 134 311 96 294 113 b 295 142 294 136 294 139 b 340 176 299 163 320 176 b 371 163 351 176 363 172 b 383 124 380 154 383 139 b 359 60 383 100 375 74 b 322 30 350 51 329 35 b 239 3 295 12 266 3 b 179 21 218 3 197 9 b 117 39 161 33 138 39 b 86 35 106 39 95 38 b 67 23 79 32 76 31 b 49 14 58 15 55 14 b 33 30 39 14 33 21 b 38 42 33 34 34 38 b 73 72 41 46 60 62 b 303 262 80 77 299 258 b 303 262 303 262 303 262 b 246 263 303 262 277 263 b 146 261 203 263 150 262 b 102 239 131 259 117 252 b 88 231 94 232 92 231 b 85 230 87 230 86 230 b 69 246 76 230 69 237 l 69 247 l 69 252 l 92 302 b 116 355 104 330 115 354 b 124 360 118 357 122 359 z',\n        },\n        ornamentTrill: {\n            x_min: -249,\n            x_max: 249,\n            y_min: 0,\n            y_max: 376,\n            ha: 376,\n            o: 'm -92 502 b -29 542 -33 541 -33 542 b -21 534 -25 542 -21 539 b -70 366 -21 532 -65 383 l -71 364 l -47 364 b 125 383 13 366 71 372 b 149 387 136 386 143 387 b 167 382 156 387 160 385 b 181 370 171 380 179 373 b 182 370 181 370 181 370 b 230 380 185 370 195 372 b 304 394 286 393 290 394 b 305 394 305 394 305 394 b 357 353 330 394 349 379 b 359 336 358 349 359 342 b 354 314 359 326 357 316 b 257 291 352 312 263 291 b 257 291 257 291 257 291 b 250 299 252 292 250 294 b 251 305 250 301 250 303 b 251 314 251 308 251 311 b 234 350 251 329 245 343 l 230 353 l 224 349 b 169 287 202 334 183 313 b 127 156 163 276 166 286 b 88 37 92 43 91 39 b -8 15 84 35 -4 15 b -8 15 -8 15 -8 15 b -14 22 -12 16 -14 17 b -8 47 -14 26 -12 33 b -2 69 -5 59 -2 69 b -2 69 -2 69 -2 69 b -45 44 -2 69 -22 58 b -122 4 -102 10 -105 9 b -151 0 -132 1 -142 0 b -256 105 -208 0 -256 46 b -255 119 -256 110 -256 114 b -223 231 -254 129 -256 121 b -195 325 -208 282 -195 325 b -195 325 -195 325 -195 325 b -198 325 -196 325 -196 325 b -274 324 -206 325 -237 325 b -340 324 -310 324 -329 324 b -354 325 -351 324 -353 324 b -359 332 -357 326 -359 329 b -356 338 -359 334 -358 336 b -308 351 -355 340 -353 340 l -261 361 l -222 362 l -182 363 l -168 411 b -152 461 -160 438 -153 460 b -92 502 -152 462 -125 480 z m 62 348 b 57 349 60 349 59 349 b 40 346 55 349 51 348 b -62 330 8 339 -30 333 b -83 321 -84 329 -82 330 b -115 211 -83 318 -93 283 b -148 88 -149 94 -148 99 b -148 87 -148 88 -148 88 b -123 53 -148 67 -137 53 b -113 55 -120 53 -117 54 b 18 133 -111 57 17 132 b 46 227 19 134 46 225 b 53 251 46 231 48 239 b 78 334 57 261 78 331 b 62 348 78 340 71 347 z',\n        },\n        ornamentTurn: {\n            x_min: -310,\n            x_max: 310,\n            y_min: -143,\n            y_max: 143,\n            ha: 286,\n            o: 'm -272 205 b -264 206 -270 206 -267 206 b -202 198 -249 206 -221 202 b 44 48 -119 177 -37 127 b 261 -91 117 -24 191 -71 b 307 -100 285 -97 297 -100 b 318 -99 311 -100 314 -99 b 401 2 362 -92 396 -51 b 402 11 401 5 402 8 b 321 87 402 58 366 87 b 258 70 301 87 279 81 b 221 60 246 63 233 60 b 157 125 186 60 157 86 b 213 194 157 158 175 179 b 277 206 234 202 256 206 b 437 90 348 206 413 162 b 447 24 444 69 447 47 b 365 -163 447 -46 416 -120 b 257 -206 331 -192 297 -206 b 178 -192 233 -206 207 -201 b -47 -48 101 -168 28 -121 b -250 86 -116 20 -180 62 b -312 99 -275 94 -295 99 b -361 83 -331 99 -346 94 b -402 6 -388 65 -402 36 b -349 -77 -402 -28 -384 -62 b -314 -85 -337 -82 -326 -85 b -260 -70 -297 -85 -280 -80 b -224 -60 -247 -63 -235 -60 b -188 -71 -211 -60 -199 -64 b -160 -126 -169 -84 -160 -105 b -189 -181 -160 -147 -169 -168 b -272 -204 -211 -195 -242 -204 b -293 -202 -279 -204 -286 -203 b -447 -6 -385 -189 -447 -103 b -435 68 -447 18 -443 43 b -280 204 -411 141 -349 196 b -272 205 -277 205 -273 205 z',\n        },\n        ornamentTurnSlash: {\n            x_min: -310,\n            x_max: 310,\n            y_min: -201,\n            y_max: 201,\n            ha: 402,\n            o: 'm -10 288 b -2 289 -7 289 -4 289 b 19 276 8 289 16 284 b 21 171 21 272 21 271 l 21 71 l 43 49 b 261 -90 120 -26 191 -71 b 307 -100 285 -97 297 -100 b 318 -99 311 -100 314 -99 b 401 2 362 -91 396 -50 b 402 12 402 5 402 8 b 321 87 402 58 367 87 b 258 70 301 87 280 82 b 221 60 246 63 233 60 b 157 125 187 60 157 86 b 214 194 157 158 175 180 b 277 206 235 202 256 206 b 431 106 342 206 402 169 b 447 24 442 82 447 54 b 443 -24 447 9 446 -7 b 258 -206 423 -127 344 -206 b 257 -206 258 -206 258 -206 b 23 -109 190 -205 102 -169 l 21 -107 l 21 -190 b 21 -223 21 -203 21 -214 b 14 -283 21 -282 20 -277 b -1 -289 10 -287 5 -289 b -22 -276 -10 -289 -18 -284 b -23 -171 -23 -272 -23 -271 l -23 -71 l -46 -49 b -250 86 -119 22 -179 62 b -312 99 -275 95 -295 99 b -360 84 -330 99 -345 94 b -401 7 -388 66 -401 36 b -349 -77 -401 -28 -383 -62 b -314 -85 -337 -82 -326 -85 b -260 -69 -297 -85 -279 -80 b -223 -60 -247 -63 -235 -60 b -177 -81 -206 -60 -190 -67 b -159 -125 -165 -93 -159 -109 b -188 -180 -159 -147 -169 -168 b -268 -203 -212 -196 -240 -203 b -376 -165 -306 -203 -345 -190 b -447 -7 -425 -124 -447 -65 b -293 202 -447 86 -390 180 b -260 206 -283 204 -272 206 b -25 109 -194 206 -105 170 l -23 107 l -23 189 b -22 276 -23 271 -23 272 b -10 288 -20 281 -15 286 z',\n        },\n        ornamentMordent: {\n            x_min: -296,\n            x_max: 296,\n            y_min: -215,\n            y_max: 198,\n            ha: 413,\n            o: 'm -11 284 b -3 285 -9 285 -6 285 b 17 273 5 285 14 280 b 19 164 19 270 19 269 l 19 59 l 68 118 b 118 179 98 155 117 178 b 131 182 122 181 127 182 b 143 179 136 182 140 181 b 307 18 145 177 232 92 l 326 -1 l 356 36 b 404 81 393 81 393 81 l 404 81 b 426 59 417 81 426 71 b 424 50 426 56 426 53 b 236 -179 421 44 241 -176 b 224 -182 233 -181 228 -182 b 211 -178 219 -182 215 -181 b 119 -89 210 -178 169 -137 b 29 0 70 -40 30 0 b 29 0 29 0 29 0 b 24 -6 29 0 27 -3 l 19 -12 l 19 -152 b 19 -218 19 -179 19 -200 b 13 -303 19 -308 19 -298 b -3 -310 9 -308 3 -310 b -23 -297 -11 -310 -19 -305 b -25 -180 -24 -294 -24 -294 l -25 -66 l -70 -121 b -118 -178 -99 -156 -116 -177 b -131 -182 -122 -181 -127 -182 b -144 -178 -135 -182 -140 -181 b -307 -18 -145 -177 -233 -91 l -326 1 l -356 -36 b -404 -81 -393 -81 -393 -81 l -404 -81 b -426 -59 -417 -81 -426 -71 b -424 -50 -426 -56 -426 -53 b -236 179 -421 -44 -241 176 b -224 182 -233 181 -228 182 b -211 179 -219 182 -215 181 b -48 18 -209 177 -116 86 l -29 0 l -27 2 l -25 5 l -25 137 b -23 272 -25 267 -25 268 b -11 284 -21 277 -16 282 z',\n        },\n        ornamentShortTrill: {\n            x_min: -296,\n            x_max: 296,\n            y_min: -127,\n            y_max: 127,\n            ha: 253,\n            o: 'm -231 181 b -225 182 -229 182 -227 182 b -211 179 -220 182 -215 181 b -119 89 -210 178 -169 137 b -29 0 -70 40 -30 0 b 44 88 -29 0 4 40 b 118 179 89 144 117 178 b 131 182 122 181 127 182 b 143 179 136 182 140 181 b 307 18 145 177 232 92 l 326 -1 l 356 36 b 404 81 393 81 393 81 l 404 81 b 426 59 417 81 426 71 b 424 50 426 56 426 53 b 236 -179 421 44 241 -176 b 224 -182 233 -181 228 -182 b 211 -178 219 -182 215 -181 b 119 -89 210 -178 169 -137 b 29 0 70 -40 30 0 b -44 -88 29 0 -4 -40 b -118 -179 -89 -144 -117 -178 b -131 -182 -122 -181 -127 -182 b -144 -178 -135 -182 -140 -181 b -307 -18 -145 -177 -233 -91 l -326 1 l -356 -36 b -404 -81 -393 -81 -393 -81 l -404 -81 b -426 -59 -417 -81 -426 -71 b -424 -50 -426 -56 -426 -53 b -236 179 -421 -44 -241 176 b -231 181 -235 179 -233 181 z',\n        },\n        ornamentTremblement: {\n            x_min: -419,\n            x_max: 419,\n            y_min: -127,\n            y_max: 127,\n            ha: 253,\n            o: 'm -409 181 b -402 182 -407 182 -404 182 b -389 179 -397 182 -392 181 b -297 89 -387 178 -346 137 b -207 0 -248 40 -207 0 l -207 0 b -134 88 -206 0 -174 40 b -59 179 -88 144 -61 178 b -46 182 -55 181 -51 182 b -34 179 -42 182 -37 181 b 58 89 -33 178 9 137 b 148 0 107 40 148 0 l 148 0 b 221 88 148 0 181 40 b 296 179 267 144 294 178 b 308 182 300 181 304 182 b 321 179 313 182 317 181 b 485 18 323 177 409 92 l 503 -1 l 533 36 b 581 81 570 81 570 81 l 582 81 b 604 59 594 81 604 71 b 602 50 604 56 603 53 b 414 -179 599 44 418 -176 b 401 -182 410 -181 406 -182 b 388 -178 397 -182 392 -181 b 297 -89 387 -178 346 -137 b 207 0 248 -40 207 0 l 207 0 b 134 -88 206 0 174 -40 b 59 -179 88 -144 61 -178 b 46 -182 55 -181 51 -182 b 34 -178 42 -182 37 -181 b -58 -89 33 -178 -9 -137 b -148 0 -107 -40 -148 0 l -148 0 b -221 -88 -148 0 -181 -40 b -296 -179 -267 -144 -294 -178 b -308 -182 -300 -181 -304 -182 b -321 -178 -313 -182 -317 -181 b -485 -18 -323 -177 -411 -91 l -503 1 l -533 -36 b -581 -81 -570 -81 -570 -81 l -582 -81 b -604 -59 -594 -81 -604 -71 b -602 -50 -604 -56 -603 -53 b -414 179 -599 -44 -418 176 b -409 181 -412 179 -410 181 z',\n        },\n        ornamentPrecompAppoggTrill: {\n            x_min: -419,\n            x_max: 419,\n            y_min: -127,\n            y_max: 255,\n            ha: 381,\n            o: 'm -591 365 b -582 367 -588 366 -585 367 b -561 352 -573 367 -564 361 b -560 176 -560 351 -560 303 l -559 2 l -527 41 b -456 128 -509 63 -477 102 b -414 177 -435 154 -416 176 b -400 182 -411 181 -405 182 b -388 179 -396 182 -392 181 b -296 89 -387 178 -346 137 b -206 0 -247 40 -207 0 b -133 88 -206 0 -173 40 b -59 179 -88 144 -60 178 b -46 182 -55 181 -50 182 b -33 179 -41 182 -37 181 b 58 89 -32 178 9 137 b 148 0 108 40 148 0 l 148 0 b 221 88 149 0 182 40 b 296 179 267 144 295 178 b 309 182 300 181 304 182 b 321 179 313 182 318 181 b 485 18 323 177 410 92 l 503 -1 l 533 36 b 581 81 570 81 571 81 l 582 81 b 604 59 595 81 604 71 b 602 50 604 56 603 53 b 414 -179 599 44 419 -176 b 402 -182 410 -181 406 -182 b 389 -178 397 -182 393 -181 b 297 -89 388 -178 346 -137 b 207 0 248 -40 207 0 l 207 0 b 134 -88 207 0 174 -40 b 59 -179 89 -144 61 -178 b 47 -182 56 -181 51 -182 b 34 -178 42 -182 38 -181 b -58 -89 33 -178 -8 -137 b -148 0 -107 -40 -147 0 b -220 -88 -148 0 -181 -40 b -295 -179 -266 -144 -294 -178 b -308 -182 -299 -181 -303 -182 b -321 -178 -312 -182 -317 -181 b -484 -18 -322 -177 -426 -76 l -503 1 l -535 -38 b -570 -79 -558 -67 -567 -77 b -582 -83 -573 -81 -578 -83 b -602 -70 -590 -83 -598 -78 l -604 -67 l -604 141 l -604 349 l -603 353 b -591 365 -601 358 -596 363 z',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            x_min: -433,\n            x_max: 433,\n            y_min: -243,\n            y_max: 127,\n            ha: 370,\n            o: 'm -388 181 b -382 182 -386 182 -384 182 b -368 179 -377 182 -372 181 b -277 89 -367 178 -326 137 b -187 0 -227 40 -187 0 l -187 0 b -114 88 -186 0 -153 40 b -39 179 -68 144 -40 178 b -26 182 -35 181 -30 182 b -14 179 -22 182 -17 181 b 78 89 -12 178 29 137 b 168 0 127 40 168 0 b 241 88 169 0 201 40 b 316 179 287 144 314 178 b 329 182 320 181 324 182 b 341 179 333 182 337 181 b 505 18 343 177 430 92 l 523 -1 l 553 36 b 601 81 590 81 590 81 l 602 81 b 624 59 614 81 624 71 b 622 50 624 56 623 53 b 434 -179 619 44 439 -176 b 421 -182 430 -181 426 -182 b 409 -178 417 -182 412 -181 b 317 -89 407 -178 366 -137 b 227 0 268 -40 227 0 b 154 -88 227 0 194 -40 b 79 -179 108 -144 81 -178 b 67 -182 75 -181 71 -182 b 54 -178 62 -182 58 -181 b -38 -89 53 -178 12 -137 b -128 0 -87 -40 -127 0 b -201 -88 -128 0 -161 -40 b -276 -179 -246 -144 -274 -178 b -288 -182 -279 -181 -284 -182 b -301 -178 -293 -182 -297 -181 b -393 -88 -302 -178 -343 -137 b -483 0 -442 -40 -483 0 b -483 0 -483 0 -483 0 b -505 -27 -484 0 -497 -15 b -579 -235 -554 -92 -579 -166 b -567 -315 -579 -263 -575 -290 b -564 -330 -565 -320 -564 -325 b -585 -351 -564 -342 -572 -351 b -610 -326 -598 -351 -604 -345 b -624 -235 -619 -297 -624 -267 b -547 -8 -624 -159 -597 -79 b -492 60 -538 4 -533 10 b -426 140 -472 84 -443 120 b -388 181 -396 176 -394 179 z',\n        },\n        ornamentPrecompSlideTrillBach: {\n            x_min: -433,\n            x_max: 433,\n            y_min: -243,\n            y_max: 198,\n            ha: 442,\n            o: 'm 186 284 b 194 285 189 285 192 285 b 215 273 203 285 211 280 b 217 164 216 270 216 269 l 217 59 l 265 118 b 316 179 295 155 314 178 b 329 182 320 181 324 182 b 341 179 333 182 337 181 b 505 18 343 177 430 92 l 523 -1 l 553 36 b 601 81 590 81 590 81 l 602 81 b 624 59 614 81 624 71 b 622 50 624 56 623 53 b 434 -179 619 44 439 -176 b 421 -182 430 -181 426 -182 b 409 -178 417 -182 412 -181 b 317 -89 407 -178 366 -137 b 227 0 268 -40 227 0 b 227 0 227 0 227 0 b 222 -6 227 0 224 -3 l 217 -12 l 217 -152 b 217 -218 217 -179 217 -200 b 210 -303 217 -308 216 -298 b 195 -310 206 -308 201 -310 b 175 -297 187 -310 178 -305 b 173 -180 173 -294 173 -294 l 173 -66 l 127 -121 b 79 -178 99 -156 81 -177 b 67 -182 76 -181 71 -182 b 54 -178 62 -182 58 -181 b -38 -89 53 -178 12 -137 b -128 0 -87 -40 -127 0 b -201 -88 -128 0 -161 -40 b -276 -179 -246 -144 -274 -178 b -288 -182 -279 -181 -284 -182 b -301 -178 -293 -182 -297 -181 b -393 -88 -302 -178 -343 -137 b -483 0 -442 -40 -483 0 b -483 0 -483 0 -483 0 b -505 -27 -484 0 -497 -15 b -579 -235 -554 -92 -579 -166 b -567 -315 -579 -263 -575 -290 b -564 -330 -565 -320 -564 -325 b -586 -351 -564 -342 -572 -351 b -610 -326 -598 -351 -604 -345 b -624 -235 -619 -297 -624 -267 b -547 -8 -624 -159 -597 -79 b -492 60 -538 4 -533 10 b -426 140 -472 84 -443 120 b -393 179 -408 162 -395 178 b -381 182 -390 181 -385 182 b -368 179 -376 182 -372 181 b -277 89 -367 178 -326 137 b -187 0 -227 40 -187 0 l -187 0 b -114 88 -186 0 -153 40 b -39 179 -68 144 -40 178 b -26 182 -35 181 -30 182 b -14 179 -22 182 -17 181 b 150 18 -12 177 81 86 l 168 0 l 171 2 l 173 5 l 173 137 b 174 272 173 267 173 268 b 186 284 176 277 181 282 z',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            x_min: -433,\n            x_max: 433,\n            y_min: -127,\n            y_max: 244,\n            ha: 370,\n            o: 'm 577 349 b 585 351 580 350 582 351 b 601 345 591 351 597 349 b 624 229 613 332 624 275 b 622 204 624 220 623 211 b 559 27 615 139 595 83 b 492 -60 546 6 541 0 b 426 -140 472 -84 443 -120 b 393 -179 408 -162 395 -178 b 381 -182 390 -181 385 -182 b 368 -178 376 -182 372 -181 b 277 -89 367 -178 326 -137 b 187 0 227 -40 187 0 l 187 0 b 114 -88 186 0 153 -40 b 39 -179 68 -144 40 -178 b 26 -182 35 -181 31 -182 b 13 -178 22 -182 17 -181 b -78 -89 12 -178 -29 -137 b -168 0 -127 -40 -168 0 b -241 -88 -169 0 -201 -40 b -316 -179 -287 -144 -314 -178 b -329 -182 -320 -181 -324 -182 b -341 -178 -333 -182 -337 -181 b -505 -18 -343 -177 -431 -91 l -523 1 l -553 -36 b -601 -81 -590 -81 -590 -81 l -602 -81 b -624 -59 -614 -81 -624 -71 b -622 -50 -624 -56 -623 -53 b -434 179 -619 -44 -439 176 b -421 182 -430 181 -426 182 b -409 179 -417 182 -412 181 b -317 89 -408 178 -366 137 b -227 0 -268 40 -227 0 b -154 88 -227 0 -194 40 b -79 179 -108 144 -81 178 b -66 182 -75 181 -71 182 b -54 179 -62 182 -58 181 b 38 89 -53 178 -12 137 b 128 0 87 40 127 0 b 201 88 128 0 161 40 b 276 179 246 144 274 178 b 288 182 279 181 284 182 b 301 179 293 182 297 181 b 393 88 302 178 343 137 b 483 0 442 40 483 0 b 483 0 483 0 483 0 b 505 27 484 0 497 15 b 579 235 554 92 579 166 b 567 315 579 263 575 290 b 564 330 565 321 564 326 b 577 349 564 339 568 346 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            x_min: -439,\n            x_max: 439,\n            y_min: -127,\n            y_max: 236,\n            ha: 363,\n            o: 'm -564 338 b -555 340 -561 339 -558 340 b -534 318 -544 340 -534 331 b -534 317 -534 318 -534 317 b -541 296 -534 311 -534 311 b -588 116 -572 236 -588 175 b -583 62 -588 98 -586 80 b -554 -21 -578 34 -566 -2 l -552 -24 l -511 26 b -430 126 -488 54 -452 99 b -386 177 -407 153 -388 176 b -372 182 -382 181 -377 182 b -360 179 -368 182 -364 181 b -268 89 -359 178 -318 137 b -178 0 -219 40 -179 0 b -105 88 -178 0 -145 40 b -30 179 -60 144 -32 178 b -18 182 -27 181 -22 182 b -5 179 -13 182 -9 181 b 86 89 -4 178 37 137 b 176 0 136 40 176 0 l 176 0 b 249 88 177 0 210 40 b 324 179 295 144 323 178 b 337 182 328 181 333 182 b 349 179 341 182 346 181 b 513 18 351 177 438 92 l 532 -1 l 562 36 b 610 81 599 81 599 81 l 610 81 b 632 59 623 81 632 71 b 630 50 632 56 631 53 b 442 -179 627 44 447 -176 b 430 -182 438 -181 434 -182 b 417 -178 425 -182 421 -181 b 325 -89 416 -178 375 -137 b 235 0 276 -40 236 0 l 235 0 b 162 -88 235 0 202 -40 b 87 -179 117 -144 89 -178 b 75 -182 84 -181 79 -182 b 62 -178 70 -182 66 -181 b -29 -89 61 -178 20 -137 b -119 0 -79 -40 -119 0 b -192 -88 -120 0 -153 -40 b -267 -179 -238 -144 -266 -178 b -280 -182 -271 -181 -275 -182 b -293 -178 -284 -182 -289 -181 b -456 -18 -294 -177 -398 -76 l -475 1 l -507 -38 b -554 -83 -543 -82 -543 -83 l -554 -83 b -576 -68 -562 -83 -568 -79 b -632 115 -613 -19 -632 46 b -593 292 -632 173 -619 233 b -564 338 -579 323 -571 335 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n            x_min: -439,\n            x_max: 439,\n            y_min: -215,\n            y_max: 236,\n            ha: 451,\n            o: 'm -564 338 b -555 340 -561 339 -558 340 b -534 318 -544 340 -534 331 b -534 317 -534 318 -534 317 b -541 296 -534 311 -534 311 b -588 116 -572 236 -588 175 b -583 62 -588 98 -586 80 b -554 -21 -578 34 -566 -2 l -552 -24 l -511 26 b -430 126 -488 54 -452 99 b -386 177 -407 153 -388 176 b -372 182 -382 181 -377 182 b -360 179 -368 182 -364 181 b -268 89 -359 178 -318 137 b -178 0 -219 40 -179 0 b -105 88 -178 0 -145 40 b -30 179 -60 144 -32 178 b -18 182 -27 181 -22 182 b -5 179 -13 182 -9 181 b 158 18 -4 177 89 86 l 177 0 l 179 2 l 181 5 l 181 137 b 183 272 181 267 181 268 b 203 285 186 280 195 285 b 218 279 209 285 214 283 b 225 164 225 273 225 284 l 225 59 l 274 118 b 324 179 304 155 323 178 b 337 182 328 181 333 182 b 349 179 341 182 346 181 b 513 18 351 177 438 92 l 532 -1 l 562 36 b 610 81 599 81 599 81 l 610 81 b 632 59 623 81 632 71 b 630 50 632 56 631 53 b 442 -179 627 44 447 -176 b 430 -182 438 -181 434 -182 b 417 -178 425 -182 421 -181 b 325 -89 416 -178 375 -137 b 235 0 276 -40 236 0 b 235 0 235 0 235 0 b 230 -6 235 0 232 -3 l 225 -12 l 225 -152 b 225 -218 225 -179 225 -200 b 219 -303 225 -308 224 -298 b 203 -310 214 -308 209 -310 b 183 -297 195 -310 187 -305 b 181 -180 182 -294 182 -294 l 181 -66 l 136 -121 b 88 -178 107 -156 89 -177 b 75 -182 84 -181 79 -182 b 62 -178 70 -182 66 -181 b -29 -89 61 -178 20 -137 b -119 0 -79 -40 -119 0 b -192 -88 -120 0 -153 -40 b -267 -179 -238 -144 -266 -178 b -280 -182 -271 -181 -275 -182 b -293 -178 -284 -182 -289 -181 b -456 -18 -294 -177 -398 -76 l -475 1 l -507 -38 b -554 -83 -543 -82 -543 -83 l -554 -83 b -576 -68 -562 -83 -568 -79 b -632 115 -613 -19 -632 46 b -593 292 -632 173 -619 233 b -564 338 -579 323 -571 335 z',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            x_min: -439,\n            x_max: 439,\n            y_min: -236,\n            y_max: 127,\n            ha: 362,\n            o: 'm -437 181 b -430 182 -435 182 -433 182 b -417 179 -426 182 -420 181 b -325 89 -416 178 -375 137 b -235 0 -276 40 -235 0 l -235 0 b -162 88 -235 0 -202 40 b -87 179 -117 144 -89 178 b -75 182 -84 181 -79 182 b -62 179 -70 182 -66 181 b 29 89 -61 178 -20 137 b 119 0 79 40 119 0 b 192 88 120 0 153 40 b 267 179 238 144 266 178 b 280 182 271 181 276 182 b 292 179 284 182 289 181 b 456 18 294 177 396 77 l 475 -1 l 507 38 b 554 83 543 82 543 83 l 554 83 b 576 68 563 83 568 79 b 632 -116 613 19 632 -46 b 607 -257 632 -162 624 -210 b 571 -334 596 -287 578 -327 b 556 -340 567 -338 561 -340 b 535 -326 547 -340 538 -335 b 533 -319 534 -323 533 -321 b 541 -296 533 -314 536 -308 b 588 -117 572 -236 588 -175 b 579 -40 588 -91 585 -65 b 554 21 573 -19 563 7 l 552 24 l 511 -26 b 430 -126 488 -54 452 -99 b 386 -177 407 -153 388 -176 b 373 -182 382 -181 377 -182 b 360 -178 368 -182 364 -181 b 268 -89 359 -178 318 -137 b 178 0 219 -40 179 0 l 178 0 b 105 -88 178 0 145 -40 b 30 -179 60 -144 32 -178 b 18 -182 27 -181 22 -182 b 5 -178 13 -182 9 -181 b -86 -89 4 -178 -37 -137 b -176 0 -136 -40 -176 0 l -176 0 b -249 -88 -177 0 -210 -40 b -324 -179 -295 -144 -323 -178 b -337 -182 -328 -181 -332 -182 b -349 -178 -341 -182 -346 -181 b -513 -18 -351 -177 -439 -91 l -532 1 l -562 -36 b -610 -81 -599 -81 -599 -81 l -610 -81 b -632 -59 -623 -81 -632 -71 b -630 -50 -632 -56 -631 -53 b -442 179 -627 -44 -447 176 b -437 181 -441 179 -438 181 z',\n        },\n        stringsDownBow: {\n            x_min: -168,\n            x_max: 168,\n            y_min: 0,\n            y_max: 353,\n            ha: 353,\n            o: 'm -228 506 b 3 508 -225 507 -111 508 b 228 506 114 508 225 507 b 240 494 233 504 238 499 b 242 254 241 491 242 373 b 240 14 242 135 241 16 b 220 0 237 5 228 0 b 204 6 214 0 208 2 b 198 89 198 12 198 3 b 198 145 198 104 198 123 l 198 273 l 0 273 l -198 273 l -198 145 b -198 89 -198 123 -198 104 b -204 6 -198 3 -198 12 b -220 0 -208 2 -214 0 b -240 14 -228 0 -237 5 b -242 254 -241 16 -242 135 b -240 494 -242 373 -241 491 b -228 506 -238 499 -233 504 z',\n        },\n        stringsUpBow: {\n            x_min: -110,\n            x_max: 110,\n            y_min: 0,\n            y_max: 277,\n            ha: 277,\n            o: 'm -144 397 b -137 398 -142 398 -140 398 b -117 387 -129 398 -120 394 b -58 234 -116 385 -90 317 b 0 84 -26 152 0 84 b 58 234 0 84 26 152 b 117 387 90 317 116 385 b 136 398 121 395 128 398 b 158 376 147 398 158 390 l 158 370 l 89 191 b 20 11 51 93 20 12 b 0 0 16 4 8 0 b -19 11 -8 0 -16 4 b -158 375 -25 21 -158 370 b -158 376 -158 375 -158 376 b -144 397 -158 386 -153 394 z',\n        },\n        stringsHarmonic: {\n            x_min: -82,\n            x_max: 82,\n            y_min: -82,\n            y_max: 82,\n            ha: 163,\n            o: 'm -19 116 b 1 118 -12 117 -6 118 b 118 0 65 118 118 63 b 114 -30 118 -10 116 -20 b -1 -118 100 -85 50 -118 b -83 -83 -30 -118 -60 -107 b -118 -1 -107 -60 -118 -30 b -19 116 -118 53 -81 105 z m 14 99 b 0 100 9 100 4 100 b -101 0 -57 100 -101 53 b -90 -45 -101 -15 -97 -30 b 0 -100 -71 -82 -36 -100 b 90 -45 36 -100 71 -82 b 101 -1 97 -30 101 -15 b 14 99 101 47 65 92 z',\n        },\n        pluckedSnapPizzicatoAbove: {\n            x_min: -110,\n            x_max: 110,\n            y_min: -110,\n            y_max: 205,\n            ha: 315,\n            o: 'm -9 293 b 0 295 -6 294 -3 295 b 20 281 9 295 17 290 b 22 217 22 278 22 276 l 22 157 l 25 157 b 153 40 85 148 138 100 b 158 0 157 26 158 13 b 40 -153 158 -71 111 -135 b 0 -158 26 -157 13 -158 b -154 -40 -71 -158 -136 -111 b -158 -1 -157 -27 -158 -14 b -25 157 -158 76 -102 146 l -22 157 l -22 217 b -21 281 -22 276 -22 278 b -9 293 -19 286 -13 291 z m -22 54 b -23 112 -22 108 -22 112 b -23 112 -23 112 -23 112 b -81 80 -37 111 -65 96 b -114 1 -104 57 -114 29 b 0 -114 -114 -58 -69 -114 b 114 1 68 -114 114 -58 b 80 80 114 29 104 57 b 22 112 65 96 35 112 b 22 54 22 112 22 92 b 20 -8 22 -3 22 -5 b 0 -22 17 -17 9 -22 b -16 -16 -6 -22 -11 -20 b -22 34 -22 -10 -22 -12 b -22 54 -22 40 -22 46 z',\n        },\n        pluckedSnapPizzicatoBelow: {\n            x_min: -110,\n            x_max: 110,\n            y_min: -205,\n            y_max: 110,\n            ha: 315,\n            o: 'm 9 -293 b 0 -295 6 -294 3 -295 b -20 -281 -9 -295 -17 -290 b -22 -217 -22 -278 -22 -276 l -22 -157 l -25 -157 b -153 -40 -85 -148 -138 -100 b -158 0 -157 -26 -158 -13 b -40 153 -158 71 -111 135 b 0 158 -26 157 -13 158 b 154 40 71 158 136 111 b 158 1 157 27 158 14 b 25 -157 158 -76 102 -146 l 22 -157 l 22 -217 b 21 -281 22 -276 22 -278 b 9 -293 19 -286 13 -291 z m 22 -54 b 23 -112 22 -108 22 -112 b 23 -112 23 -112 23 -112 b 81 -80 37 -111 65 -96 b 114 -1 104 -57 114 -29 b 0 114 114 58 69 114 b -114 -1 -68 114 -114 58 b -80 -80 -114 -29 -104 -57 b -22 -112 -65 -96 -35 -112 b -22 -54 -22 -112 -22 -92 b -20 8 -22 3 -22 5 b 0 22 -17 17 -9 22 b 16 16 6 22 11 20 b 22 -34 22 10 22 12 b 22 -54 22 -40 22 -46 z',\n        },\n        pluckedLeftHandPizzicato: {\n            x_min: -155,\n            x_max: 155,\n            y_min: -157,\n            y_max: 157,\n            ha: 315,\n            o: 'm -9 225 b 0 227 -6 226 -3 227 b 20 213 9 227 17 221 b 22 116 22 209 22 208 l 22 22 l 114 22 b 152 22 129 22 141 22 b 218 16 218 22 212 21 b 224 0 222 11 224 6 b 210 -20 224 -9 219 -17 b 114 -22 207 -22 205 -22 l 22 -22 l 22 -116 b 22 -154 22 -131 22 -143 b 16 -220 22 -221 21 -214 b 0 -227 11 -225 6 -227 b -20 -213 -9 -227 -17 -222 b -22 -116 -22 -209 -22 -208 l -22 -22 l -114 -22 b -210 -20 -205 -22 -207 -22 b -224 0 -219 -17 -224 -9 b -218 16 -224 6 -222 11 b -152 22 -212 21 -218 22 b -114 22 -141 22 -129 22 l -22 22 l -22 116 b -20 213 -22 208 -22 209 b -9 225 -19 218 -13 223 z',\n        },\n        keyboardPedalPed: {\n            x_min: 0,\n            x_max: 782,\n            y_min: -1,\n            y_max: 500,\n            ha: 501,\n            o: 'm 309 719 b 335 720 318 720 327 720 b 521 650 409 720 473 696 b 582 517 561 610 582 560 b 528 423 582 476 564 441 b 483 411 513 415 498 411 b 392 480 443 411 406 437 b 384 516 386 496 384 508 b 400 535 384 529 389 535 b 417 520 409 535 414 530 b 458 494 421 503 438 494 b 498 507 472 494 486 498 b 520 552 513 517 520 533 b 469 645 520 582 502 619 b 349 687 437 670 389 687 l 344 687 l 335 671 b 286 544 299 609 286 577 b 286 543 286 544 286 543 b 341 449 286 511 298 491 b 371 411 359 430 364 424 b 385 358 380 394 385 377 b 378 317 385 345 383 331 b 302 165 365 271 336 212 b 298 159 300 162 298 159 b 298 159 298 159 298 159 b 305 160 299 159 302 159 b 336 162 315 161 326 162 b 486 106 392 162 445 143 l 492 101 l 512 117 b 533 134 523 126 532 133 b 534 136 534 135 534 135 b 533 144 534 138 534 140 b 530 188 531 159 530 174 b 571 320 530 238 544 283 b 657 390 587 342 634 380 b 686 397 666 395 676 397 b 763 335 721 397 755 372 b 766 315 765 328 766 321 b 740 251 766 291 756 267 b 699 219 736 247 702 221 b 636 172 697 218 662 192 b 614 153 618 158 614 154 b 614 153 614 153 614 153 b 645 91 621 129 636 100 b 694 73 657 78 675 73 b 797 123 728 73 769 91 l 800 127 l 799 134 b 795 176 796 148 795 162 b 947 403 795 266 851 351 b 950 405 949 404 950 405 b 944 414 950 407 948 409 b 659 583 875 496 774 556 b 636 603 641 587 636 591 b 654 620 636 614 642 620 b 666 619 658 620 662 620 b 1113 282 884 577 1062 442 b 1126 198 1122 253 1126 225 b 954 -1 1126 87 1054 -1 b 930 1 946 -1 938 0 b 817 83 883 7 841 37 b 815 87 816 85 815 87 b 808 79 814 87 812 84 b 664 0 772 29 717 0 b 620 7 649 0 634 2 b 546 92 584 19 565 40 l 544 99 l 540 97 b 480 49 539 95 512 74 b 414 1 419 0 420 1 l 414 1 b 396 17 404 1 399 5 b 284 110 381 72 333 110 b 266 108 278 110 272 110 l 258 107 l 247 94 b 164 2 213 53 169 4 b 156 0 161 0 159 0 b 139 17 147 0 139 8 b 140 23 139 19 140 21 b 144 34 141 24 142 29 b 234 137 158 79 189 114 b 260 164 244 143 244 142 b 319 290 300 217 319 259 b 281 349 319 312 313 322 b 223 453 250 376 229 414 b 222 472 223 459 222 466 b 296 673 222 522 246 587 l 303 685 l 300 685 b 290 684 299 685 294 684 b 60 496 171 668 77 591 b 59 477 59 490 59 483 b 76 426 59 453 66 431 b 100 420 84 422 92 420 b 162 487 131 420 160 448 b 179 507 163 502 168 507 b 196 479 192 507 196 501 b 196 478 196 478 196 478 b 88 335 195 397 151 338 b 83 335 86 335 84 335 b 0 443 31 335 0 375 l 0 443 b 309 719 0 583 138 706 z m 981 361 b 976 368 978 366 977 368 b 968 362 974 368 972 366 b 872 175 908 318 872 247 b 877 131 872 160 874 145 b 943 34 887 82 914 43 b 949 34 945 34 947 34 b 1018 127 973 34 1004 75 b 1027 198 1024 151 1027 174 b 981 361 1027 253 1011 309 z m 665 338 b 657 339 662 339 660 339 b 641 336 652 339 647 338 b 614 293 635 333 622 312 b 602 221 607 274 602 246 b 604 198 602 213 603 205 b 606 191 605 193 605 191 b 608 193 606 191 607 192 b 666 238 613 197 642 219 b 695 264 690 256 691 257 b 702 290 700 272 702 281 b 665 338 702 312 688 334 z',\n        },\n        keyboardPedalUp: {\n            x_min: 0,\n            x_max: 435,\n            y_min: 65,\n            y_max: 500,\n            ha: 435,\n            o: 'm 300 719 b 311 720 303 720 307 720 b 332 718 319 720 327 719 b 379 654 361 709 379 685 b 354 601 379 632 374 620 b 331 558 338 585 331 572 b 336 536 331 551 333 544 b 374 512 344 521 358 512 b 389 514 379 512 384 513 b 422 575 414 523 422 538 b 474 646 422 614 441 639 b 489 648 479 647 484 648 b 555 581 527 648 555 615 b 535 535 555 565 549 549 b 479 515 520 520 508 516 b 450 512 462 515 458 514 b 418 468 429 505 418 487 b 438 433 418 455 425 441 b 464 424 447 427 455 424 b 509 449 477 424 491 432 b 557 473 526 466 538 472 b 561 473 558 473 560 473 b 627 407 599 473 627 442 b 620 378 627 397 625 387 b 561 341 609 354 588 341 l 560 341 b 508 365 538 341 527 346 b 465 390 491 383 478 390 b 457 389 462 390 460 390 b 418 347 433 384 418 367 b 424 325 418 340 420 332 b 479 299 433 306 446 300 b 535 279 509 298 520 294 b 555 233 549 266 555 249 b 489 166 555 199 527 166 b 474 167 484 166 480 166 b 422 239 441 175 422 200 b 393 298 422 273 414 289 b 374 302 386 301 380 302 b 332 266 354 302 337 288 b 331 255 331 262 331 258 b 355 213 331 242 338 230 b 379 160 374 193 379 182 l 379 160 b 313 93 379 120 348 93 b 272 108 299 93 285 98 b 247 160 256 121 247 140 b 259 198 247 173 251 187 b 272 213 260 200 266 206 b 296 255 289 230 296 242 b 295 266 296 258 296 262 b 253 302 290 288 273 302 b 234 298 247 302 241 301 b 205 239 213 289 205 273 b 153 167 205 200 186 175 b 138 166 148 166 143 166 b 73 232 101 166 73 197 b 82 267 73 244 76 256 b 148 299 95 289 113 298 b 182 304 168 299 171 300 b 197 315 189 307 192 309 b 209 346 205 325 209 336 b 179 386 209 364 198 379 b 162 390 173 389 167 390 b 119 365 148 390 136 382 b 104 352 113 360 107 354 b 67 341 92 344 79 341 b 2 390 38 341 10 359 b 0 407 1 396 0 401 b 66 473 0 443 30 473 b 83 471 72 473 77 473 b 118 449 96 468 104 463 b 161 424 136 432 149 424 b 163 424 161 424 162 424 b 209 467 191 427 209 445 b 203 489 209 474 207 482 b 148 515 193 509 180 515 b 92 535 119 516 107 520 b 72 581 78 549 72 565 b 138 648 72 615 100 648 b 153 646 143 648 148 647 b 205 575 186 639 205 614 b 238 514 205 538 213 523 b 253 512 243 513 248 512 b 291 536 269 512 283 521 b 296 558 294 544 296 551 b 273 601 296 572 289 584 b 254 624 261 612 258 616 b 247 654 249 634 247 644 b 300 719 247 684 268 712 z m 327 475 b 313 476 322 476 318 476 b 244 407 274 476 244 443 b 252 376 244 396 247 386 b 313 338 265 350 289 338 b 375 376 338 338 362 350 b 383 407 380 386 383 396 b 327 475 383 438 361 468 z',\n        },\n        pictChokeCymbal: {\n            x_min: 0,\n            x_max: 168,\n            y_min: -155,\n            y_max: 155,\n            ha: 311,\n            o: 'm 96 223 b 107 224 100 224 103 224 b 236 104 164 224 218 174 b 242 55 240 88 242 71 b 66 -209 242 -42 175 -144 b 33 -224 48 -219 39 -224 b 25 -219 30 -224 28 -222 b 23 -213 24 -216 23 -215 b 36 -199 23 -208 28 -204 b 130 -56 96 -166 130 -110 b 111 8 130 -34 124 -12 l 110 10 l 100 11 b 6 82 58 12 19 42 b 0 117 2 94 0 105 b 96 223 0 170 40 217 z',\n        },\n        wiggleArpeggiatoUp: {\n            x_min: -8,\n            x_max: 269,\n            y_min: 0,\n            y_max: 126,\n            ha: 126,\n            o: 'm 103 180 b 118 181 108 181 113 181 b 223 126 151 181 184 164 b 299 69 250 100 280 78 b 311 67 303 68 307 67 b 359 90 325 67 342 75 b 376 102 372 101 372 102 l 376 102 b 388 91 383 102 388 96 b 385 84 388 88 387 86 b 322 25 379 76 342 42 b 258 0 301 8 280 0 b 153 56 226 0 192 18 b 78 112 127 81 97 103 b 65 114 74 114 70 114 b 17 91 51 114 35 106 b 1 80 5 80 5 80 l 0 80 b -11 91 -7 80 -11 85 b -9 97 -11 93 -10 95 b 55 156 -3 105 34 140 b 103 180 71 170 88 178 z',\n        },\n        arrowheadBlackUp: {\n            x_min: 11,\n            x_max: 239,\n            y_min: -6,\n            y_max: 269,\n            ha: 275,\n            o: 'm 171 386 b 179 387 174 387 176 387 b 201 378 187 387 196 384 b 212 345 206 372 206 372 b 333 45 237 235 282 123 b 344 19 343 29 344 27 b 317 -8 344 2 332 -8 b 299 -3 312 -8 305 -7 b 180 30 262 19 221 30 b 74 4 144 30 108 21 b 61 -3 70 2 64 -1 b 43 -8 55 -7 48 -8 b 16 19 28 -8 16 2 b 27 45 16 27 17 29 b 148 344 78 123 122 233 b 159 378 155 373 154 372 b 171 386 161 381 167 385 z',\n        },\n        arrowheadBlackDown: {\n            x_min: 11,\n            x_max: 239,\n            y_min: 6,\n            y_max: 281,\n            ha: 275,\n            o: 'm 35 403 b 43 405 37 404 40 405 b 62 398 49 405 55 403 b 79 390 65 396 73 392 b 180 367 111 374 145 367 b 298 398 221 367 262 377 b 318 404 305 402 312 404 b 344 377 332 404 344 394 b 333 351 344 369 343 367 b 212 51 282 273 237 161 b 204 23 207 28 206 26 b 180 8 199 13 189 8 b 156 23 171 8 162 13 b 150 44 154 25 153 28 b 27 351 125 158 80 271 b 16 377 17 367 16 369 b 35 403 16 389 24 400 z',\n        },\n    },\n    fontFamily: 'GonvilleSmufl',\n    resolution: 1000,\n    generatedOn: '2023-04-20T22:11:26.009Z',\n};\n","export const PetalumaScriptFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 250,\n            y_min: 0,\n            y_max: 500,\n            ha: 500,\n            leftSideBearing: 0,\n            advanceWidth: 250,\n        },\n        '0': {\n            x_min: 33,\n            x_max: 534,\n            y_min: -13,\n            y_max: 751,\n            ha: 764,\n            leftSideBearing: 33,\n            advanceWidth: 570,\n        },\n        '1': {\n            x_min: 48,\n            x_max: 235,\n            y_min: -17,\n            y_max: 734,\n            ha: 751,\n            leftSideBearing: 48,\n            advanceWidth: 286,\n        },\n        '2': {\n            x_min: 56,\n            x_max: 571,\n            y_min: -19,\n            y_max: 741,\n            ha: 760,\n            leftSideBearing: 56,\n            advanceWidth: 626,\n        },\n        '3': {\n            x_min: 50,\n            x_max: 528,\n            y_min: -7,\n            y_max: 731,\n            ha: 738,\n            leftSideBearing: 50,\n            advanceWidth: 589,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 564,\n            y_min: -13,\n            y_max: 743,\n            ha: 756,\n            leftSideBearing: 38,\n            advanceWidth: 614,\n        },\n        '5': {\n            x_min: 42,\n            x_max: 601,\n            y_min: -34,\n            y_max: 743,\n            ha: 777,\n            leftSideBearing: 42,\n            advanceWidth: 648,\n        },\n        '6': {\n            x_min: 47,\n            x_max: 606,\n            y_min: -16,\n            y_max: 743,\n            ha: 759,\n            leftSideBearing: 47,\n            advanceWidth: 667,\n        },\n        '7': {\n            x_min: 47,\n            x_max: 567,\n            y_min: 5,\n            y_max: 739,\n            ha: 734,\n            leftSideBearing: 0,\n            advanceWidth: 615,\n        },\n        '8': {\n            x_min: 40,\n            x_max: 541,\n            y_min: -15,\n            y_max: 752,\n            ha: 767,\n            leftSideBearing: 40,\n            advanceWidth: 585,\n        },\n        '9': {\n            x_min: 40,\n            x_max: 537,\n            y_min: -52,\n            y_max: 736,\n            ha: 788,\n            leftSideBearing: 40,\n            advanceWidth: 592,\n        },\n        '!': {\n            x_min: 49,\n            x_max: 180,\n            y_min: -7,\n            y_max: 761,\n            ha: 768,\n            leftSideBearing: 49,\n            advanceWidth: 230,\n        },\n        '\"': {\n            x_min: 39,\n            x_max: 304,\n            y_min: 596,\n            y_max: 804,\n            ha: 208,\n            leftSideBearing: 39,\n            advanceWidth: 353,\n        },\n        '#': {\n            x_min: 33,\n            x_max: 599,\n            y_min: -8,\n            y_max: 765,\n            ha: 773,\n            leftSideBearing: 33,\n            advanceWidth: 648,\n        },\n        $: {\n            x_min: 53,\n            x_max: 495,\n            y_min: -111,\n            y_max: 823,\n            ha: 934,\n            leftSideBearing: 53,\n            advanceWidth: 560,\n        },\n        '%': {\n            x_min: 35,\n            x_max: 656,\n            y_min: -128,\n            y_max: 808,\n            ha: 936,\n            leftSideBearing: 35,\n            advanceWidth: 711,\n        },\n        '&': {\n            x_min: 53,\n            x_max: 441,\n            y_min: -3,\n            y_max: 753,\n            ha: 756,\n            leftSideBearing: 53,\n            advanceWidth: 500,\n        },\n        \"'\": {\n            x_min: 43,\n            x_max: 161,\n            y_min: 590,\n            y_max: 811,\n            ha: 221,\n            leftSideBearing: 43,\n            advanceWidth: 217,\n        },\n        '(': {\n            x_min: 41,\n            x_max: 311,\n            y_min: -36,\n            y_max: 845,\n            ha: 881,\n            leftSideBearing: 41,\n            advanceWidth: 308,\n        },\n        ')': {\n            x_min: -8,\n            x_max: 257,\n            y_min: -21,\n            y_max: 852,\n            ha: 873,\n            leftSideBearing: -8,\n            advanceWidth: 280,\n        },\n        '*': {\n            x_min: 59,\n            x_max: 539,\n            y_min: 175,\n            y_max: 589,\n            ha: 414,\n            leftSideBearing: 59,\n            advanceWidth: 601,\n        },\n        '+': {\n            x_min: 33,\n            x_max: 361,\n            y_min: 180,\n            y_max: 587,\n            ha: 407,\n            leftSideBearing: 33,\n            advanceWidth: 400,\n        },\n        ',': {\n            x_min: 15,\n            x_max: 176,\n            y_min: -129,\n            y_max: 92,\n            ha: 221,\n            leftSideBearing: 15,\n            advanceWidth: 205,\n        },\n        '-': {\n            x_min: 40,\n            x_max: 380,\n            y_min: 317,\n            y_max: 452,\n            ha: 135,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '.': {\n            x_min: 48,\n            x_max: 185,\n            y_min: -56,\n            y_max: 84,\n            ha: 140,\n            leftSideBearing: 48,\n            advanceWidth: 227,\n        },\n        '/': {\n            x_min: -58,\n            x_max: 654,\n            y_min: -122,\n            y_max: 844,\n            ha: 966,\n            leftSideBearing: -58,\n            advanceWidth: 626,\n        },\n        ':': {\n            x_min: 65,\n            x_max: 225,\n            y_min: 97,\n            y_max: 536,\n            ha: 439,\n            leftSideBearing: 65,\n            advanceWidth: 302,\n        },\n        ';': {\n            x_min: 13,\n            x_max: 295,\n            y_min: -139,\n            y_max: 536,\n            ha: 675,\n            leftSideBearing: 13,\n            advanceWidth: 334,\n        },\n        '<': {\n            x_min: 28,\n            x_max: 438,\n            y_min: -1,\n            y_max: 607,\n            ha: 608,\n            leftSideBearing: 28,\n            advanceWidth: 475,\n        },\n        '=': {\n            x_min: 40,\n            x_max: 383,\n            y_min: 199.9598640852289,\n            y_max: 541,\n            ha: 341.0401359147711,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '>': {\n            x_min: 35,\n            x_max: 421,\n            y_min: 28,\n            y_max: 632,\n            ha: 604,\n            leftSideBearing: 35,\n            advanceWidth: 466,\n        },\n        '?': {\n            x_min: 45,\n            x_max: 548,\n            y_min: -17,\n            y_max: 767,\n            ha: 784,\n            leftSideBearing: 45,\n            advanceWidth: 592,\n        },\n        '@': {\n            x_min: 51,\n            x_max: 730,\n            y_min: -78,\n            y_max: 753,\n            ha: 831,\n            leftSideBearing: 51,\n            advanceWidth: 781,\n        },\n        A: {\n            x_min: 37,\n            x_max: 554,\n            y_min: -4,\n            y_max: 746,\n            ha: 750,\n            leftSideBearing: 37,\n            advanceWidth: 617,\n        },\n        B: {\n            x_min: 37,\n            x_max: 532,\n            y_min: 3,\n            y_max: 783,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 579,\n        },\n        C: {\n            x_min: 37,\n            x_max: 583,\n            y_min: -3,\n            y_max: 775,\n            ha: 778,\n            leftSideBearing: 37,\n            advanceWidth: 623,\n        },\n        D: {\n            x_min: 50,\n            x_max: 530,\n            y_min: -15,\n            y_max: 749,\n            ha: 764,\n            leftSideBearing: 50,\n            advanceWidth: 579,\n        },\n        E: {\n            x_min: 45,\n            x_max: 531,\n            y_min: -1,\n            y_max: 743,\n            ha: 744,\n            leftSideBearing: 45,\n            advanceWidth: 585,\n        },\n        F: {\n            x_min: 45,\n            x_max: 459,\n            y_min: 23,\n            y_max: 727,\n            ha: 704,\n            leftSideBearing: 45,\n            advanceWidth: 510,\n        },\n        G: {\n            x_min: 31,\n            x_max: 577,\n            y_min: -8,\n            y_max: 733,\n            ha: 741,\n            leftSideBearing: 31,\n            advanceWidth: 611,\n        },\n        H: {\n            x_min: 37,\n            x_max: 493,\n            y_min: -22,\n            y_max: 758,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 535,\n        },\n        I: {\n            x_min: 47,\n            x_max: 501,\n            y_min: -3,\n            y_max: 731,\n            ha: 734,\n            leftSideBearing: 47,\n            advanceWidth: 541,\n        },\n        J: {\n            x_min: 33,\n            x_max: 531,\n            y_min: -23,\n            y_max: 725,\n            ha: 748,\n            leftSideBearing: 33,\n            advanceWidth: 573,\n        },\n        K: {\n            x_min: 43,\n            x_max: 505,\n            y_min: -10,\n            y_max: 740,\n            ha: 750,\n            leftSideBearing: 43,\n            advanceWidth: 560,\n        },\n        L: {\n            x_min: 49,\n            x_max: 457,\n            y_min: -2,\n            y_max: 746,\n            ha: 748,\n            leftSideBearing: 49,\n            advanceWidth: 510,\n        },\n        M: {\n            x_min: 35,\n            x_max: 699,\n            y_min: 1,\n            y_max: 744,\n            ha: 743,\n            leftSideBearing: 35,\n            advanceWidth: 743,\n        },\n        N: {\n            x_min: 34,\n            x_max: 533,\n            y_min: -17,\n            y_max: 761,\n            ha: 778,\n            leftSideBearing: 34,\n            advanceWidth: 579,\n        },\n        O: {\n            x_min: 41,\n            x_max: 608,\n            y_min: -5,\n            y_max: 735,\n            ha: 740,\n            leftSideBearing: 41,\n            advanceWidth: 667,\n        },\n        P: {\n            x_min: 53,\n            x_max: 451,\n            y_min: -18,\n            y_max: 735,\n            ha: 753,\n            leftSideBearing: 53,\n            advanceWidth: 497,\n        },\n        Q: {\n            x_min: 40,\n            x_max: 599,\n            y_min: -67,\n            y_max: 744,\n            ha: 811,\n            leftSideBearing: 40,\n            advanceWidth: 648,\n        },\n        R: {\n            x_min: 39,\n            x_max: 487,\n            y_min: 16,\n            y_max: 735,\n            ha: 719,\n            leftSideBearing: 39,\n            advanceWidth: 535,\n        },\n        S: {\n            x_min: 35,\n            x_max: 552,\n            y_min: -47,\n            y_max: 708,\n            ha: 755,\n            leftSideBearing: 35,\n            advanceWidth: 604,\n        },\n        T: {\n            x_min: 26,\n            x_max: 656,\n            y_min: -13,\n            y_max: 718,\n            ha: 731,\n            leftSideBearing: 26,\n            advanceWidth: 705,\n        },\n        U: {\n            x_min: 41,\n            x_max: 518,\n            y_min: -20,\n            y_max: 748,\n            ha: 768,\n            leftSideBearing: 41,\n            advanceWidth: 567,\n        },\n        V: {\n            x_min: 47,\n            x_max: 509,\n            y_min: -26,\n            y_max: 744,\n            ha: 770,\n            leftSideBearing: 47,\n            advanceWidth: 567,\n        },\n        W: {\n            x_min: 44,\n            x_max: 789,\n            y_min: -35,\n            y_max: 720,\n            ha: 755,\n            leftSideBearing: 44,\n            advanceWidth: 833,\n        },\n        X: {\n            x_min: 63,\n            x_max: 635,\n            y_min: -10,\n            y_max: 745,\n            ha: 755,\n            leftSideBearing: 63,\n            advanceWidth: 680,\n        },\n        Y: {\n            x_min: 43,\n            x_max: 503,\n            y_min: -21,\n            y_max: 734,\n            ha: 755,\n            leftSideBearing: 43,\n            advanceWidth: 541,\n        },\n        Z: {\n            x_min: 42,\n            x_max: 584,\n            y_min: -10,\n            y_max: 739,\n            ha: 749,\n            leftSideBearing: 42,\n            advanceWidth: 629,\n        },\n        '[': {\n            x_min: 46,\n            x_max: 346,\n            y_min: -150,\n            y_max: 884,\n            ha: 1034,\n            leftSideBearing: 46,\n            advanceWidth: 291,\n        },\n        '\\\\': {\n            x_min: 20,\n            x_max: 616,\n            y_min: -100,\n            y_max: 797,\n            ha: 897,\n            leftSideBearing: 20,\n            advanceWidth: 645,\n        },\n        ']': {\n            x_min: -76,\n            x_max: 226,\n            y_min: -150,\n            y_max: 881,\n            ha: 1031,\n            leftSideBearing: -76,\n            advanceWidth: 297,\n        },\n        '^': {\n            x_min: 43,\n            x_max: 437,\n            y_min: 517,\n            y_max: 812,\n            ha: 295,\n            leftSideBearing: 43,\n            advanceWidth: 478,\n        },\n        _: {\n            x_min: 29,\n            x_max: 563,\n            y_min: -110,\n            y_max: -1,\n            ha: 109,\n            leftSideBearing: 29,\n            advanceWidth: 598,\n        },\n        '`': {\n            x_min: 54,\n            x_max: 321,\n            y_min: 540,\n            y_max: 747,\n            ha: 207,\n            leftSideBearing: 54,\n            advanceWidth: 368,\n        },\n        a: {\n            x_min: 20,\n            x_max: 447,\n            y_min: -17,\n            y_max: 495,\n            ha: 512,\n            leftSideBearing: 20,\n            advanceWidth: 494,\n        },\n        b: {\n            x_min: 37,\n            x_max: 466,\n            y_min: -27,\n            y_max: 770,\n            ha: 797,\n            leftSideBearing: 37,\n            advanceWidth: 510,\n        },\n        c: {\n            x_min: 35,\n            x_max: 456,\n            y_min: -9,\n            y_max: 507,\n            ha: 516,\n            leftSideBearing: 35,\n            advanceWidth: 460,\n        },\n        d: {\n            x_min: 45,\n            x_max: 520,\n            y_min: -15,\n            y_max: 764,\n            ha: 779,\n            leftSideBearing: 45,\n            advanceWidth: 560,\n        },\n        e: {\n            x_min: 33,\n            x_max: 370,\n            y_min: -5,\n            y_max: 501,\n            ha: 506,\n            leftSideBearing: 33,\n            advanceWidth: 397,\n        },\n        f: {\n            x_min: 35,\n            x_max: 411,\n            y_min: -13,\n            y_max: 695,\n            ha: 708,\n            leftSideBearing: 35,\n            advanceWidth: 453,\n        },\n        g: {\n            x_min: 33,\n            x_max: 551,\n            y_min: -257,\n            y_max: 505,\n            ha: 762,\n            leftSideBearing: 33,\n            advanceWidth: 611,\n        },\n        h: {\n            x_min: 32,\n            x_max: 458,\n            y_min: -29,\n            y_max: 743,\n            ha: 772,\n            leftSideBearing: 32,\n            advanceWidth: 491,\n        },\n        i: {\n            x_min: 45,\n            x_max: 167,\n            y_min: -13,\n            y_max: 631,\n            ha: 644,\n            leftSideBearing: 45,\n            advanceWidth: 220,\n        },\n        j: {\n            x_min: -127,\n            x_max: 261,\n            y_min: -231,\n            y_max: 601,\n            ha: 832,\n            leftSideBearing: -127,\n            advanceWidth: 308,\n        },\n        k: {\n            x_min: 39,\n            x_max: 443,\n            y_min: -3,\n            y_max: 700,\n            ha: 703,\n            leftSideBearing: 39,\n            advanceWidth: 497,\n        },\n        l: {\n            x_min: 58,\n            x_max: 168,\n            y_min: -8,\n            y_max: 686,\n            ha: 694,\n            leftSideBearing: 58,\n            advanceWidth: 227,\n        },\n        m: {\n            x_min: 39,\n            x_max: 688,\n            y_min: -14,\n            y_max: 501,\n            ha: 515,\n            leftSideBearing: 39,\n            advanceWidth: 718,\n        },\n        n: {\n            x_min: 45,\n            x_max: 491,\n            y_min: -32,\n            y_max: 512,\n            ha: 544,\n            leftSideBearing: 45,\n            advanceWidth: 541,\n        },\n        o: {\n            x_min: 41,\n            x_max: 424,\n            y_min: -12,\n            y_max: 493,\n            ha: 505,\n            leftSideBearing: 41,\n            advanceWidth: 447,\n        },\n        p: {\n            x_min: 25,\n            x_max: 529,\n            y_min: -260,\n            y_max: 500,\n            ha: 760,\n            leftSideBearing: 25,\n            advanceWidth: 573,\n        },\n        q: {\n            x_min: 53,\n            x_max: 603,\n            y_min: -235,\n            y_max: 514,\n            ha: 749,\n            leftSideBearing: 53,\n            advanceWidth: 623,\n        },\n        r: {\n            x_min: 32,\n            x_max: 407,\n            y_min: -7,\n            y_max: 492,\n            ha: 499,\n            leftSideBearing: 32,\n            advanceWidth: 460,\n        },\n        s: {\n            x_min: 49,\n            x_max: 416,\n            y_min: -12,\n            y_max: 519,\n            ha: 531,\n            leftSideBearing: 49,\n            advanceWidth: 460,\n        },\n        t: {\n            x_min: 32,\n            x_max: 442,\n            y_min: -5,\n            y_max: 684,\n            ha: 689,\n            leftSideBearing: 32,\n            advanceWidth: 469,\n        },\n        u: {\n            x_min: 41,\n            x_max: 487,\n            y_min: -5,\n            y_max: 507,\n            ha: 512,\n            leftSideBearing: 41,\n            advanceWidth: 510,\n        },\n        v: {\n            x_min: 16,\n            x_max: 441,\n            y_min: -20,\n            y_max: 542,\n            ha: 562,\n            leftSideBearing: 16,\n            advanceWidth: 456,\n        },\n        w: {\n            x_min: 39,\n            x_max: 639,\n            y_min: -22,\n            y_max: 505,\n            ha: 527,\n            leftSideBearing: 39,\n            advanceWidth: 661,\n        },\n        x: {\n            x_min: 15,\n            x_max: 505,\n            y_min: -39,\n            y_max: 539,\n            ha: 578,\n            leftSideBearing: 15,\n            advanceWidth: 541,\n        },\n        y: {\n            x_min: -98,\n            x_max: 501,\n            y_min: -242,\n            y_max: 511,\n            ha: 753,\n            leftSideBearing: -98,\n            advanceWidth: 548,\n        },\n        z: {\n            x_min: 27,\n            x_max: 479,\n            y_min: -3,\n            y_max: 494,\n            ha: 497,\n            leftSideBearing: 27,\n            advanceWidth: 494,\n        },\n        '{': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '|': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '}': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '~': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n    },\n    fontFamily: 'PetalumaScript',\n    resolution: 1000,\n    generatedOn: '2020-06-14T18:33:25.407Z',\n};\n","export const RobotoSlabFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 509,\n            y_min: 0,\n            y_max: 2000,\n            ha: 2000,\n            leftSideBearing: 0,\n            advanceWidth: 509,\n        },\n        '0': {\n            x_min: 121,\n            x_max: 1048,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1168,\n        },\n        '1': {\n            x_min: 117,\n            x_max: 767,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 117,\n            advanceWidth: 844,\n        },\n        '2': {\n            x_min: 75.8474576645637,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 75,\n            advanceWidth: 1131,\n        },\n        '3': {\n            x_min: 74.85365853658536,\n            x_max: 994,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1106,\n        },\n        '4': {\n            x_min: 63,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1187,\n        },\n        '5': {\n            x_min: 96.8448275474953,\n            x_max: 982,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 96,\n            advanceWidth: 1081,\n        },\n        '6': {\n            x_min: 121,\n            x_max: 1067,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1144,\n        },\n        '7': {\n            x_min: 76,\n            x_max: 1060,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: -30,\n            advanceWidth: 1128,\n        },\n        '8': {\n            x_min: 92,\n            x_max: 1039,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 92,\n            advanceWidth: 1131,\n        },\n        '9': {\n            x_min: 84,\n            x_max: 1026,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 84,\n            advanceWidth: 1154,\n        },\n        '!': {\n            x_min: 143,\n            x_max: 340,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 143,\n            advanceWidth: 483,\n        },\n        '\"': {\n            x_min: 166,\n            x_max: 634,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 770,\n        },\n        '#': {\n            x_min: 63,\n            x_max: 1179,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1246,\n        },\n        $: {\n            x_min: 81.92156915727656,\n            x_max: 1012,\n            y_min: -208,\n            y_max: 1693,\n            ha: 1901,\n            leftSideBearing: 81,\n            advanceWidth: 1110,\n        },\n        '%': {\n            x_min: 77,\n            x_max: 1384,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 77,\n            advanceWidth: 1460,\n        },\n        '&': {\n            x_min: 74,\n            x_max: 1242,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1289,\n        },\n        \"'\": {\n            x_min: 166,\n            x_max: 324,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 460,\n        },\n        '(': {\n            x_min: 114,\n            x_max: 650,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 114,\n            advanceWidth: 662,\n        },\n        ')': {\n            x_min: 11,\n            x_max: 547,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 11,\n            advanceWidth: 654,\n        },\n        '*': {\n            x_min: 66,\n            x_max: 893,\n            y_min: 607,\n            y_max: 1456,\n            ha: 849,\n            leftSideBearing: 66,\n            advanceWidth: 958,\n        },\n        '+': {\n            x_min: 73,\n            x_max: 1071,\n            y_min: 146,\n            y_max: 1206,\n            ha: 1060,\n            leftSideBearing: 73,\n            advanceWidth: 1145,\n        },\n        ',': {\n            x_min: 23,\n            x_max: 315,\n            y_min: -311,\n            y_max: 221,\n            ha: 532,\n            leftSideBearing: 23,\n            advanceWidth: 404,\n        },\n        '-': {\n            x_min: 154,\n            x_max: 643,\n            y_min: 538,\n            y_max: 692,\n            ha: 154,\n            leftSideBearing: 154,\n            advanceWidth: 797,\n        },\n        '.': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 202,\n            ha: 202,\n            leftSideBearing: 145,\n            advanceWidth: 493,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 774,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 0,\n            advanceWidth: 824,\n        },\n        ':': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 145,\n            advanceWidth: 419,\n        },\n        ';': {\n            x_min: 53,\n            x_max: 345,\n            y_min: -311,\n            y_max: 1082,\n            ha: 1393,\n            leftSideBearing: 53,\n            advanceWidth: 424,\n        },\n        '<': {\n            x_min: 76,\n            x_max: 892,\n            y_min: 107,\n            y_max: 1013,\n            ha: 906,\n            leftSideBearing: 76,\n            advanceWidth: 1017,\n        },\n        '=': {\n            x_min: 147,\n            x_max: 981,\n            y_min: 407,\n            y_max: 987,\n            ha: 580,\n            leftSideBearing: 147,\n            advanceWidth: 1127,\n        },\n        '>': {\n            x_min: 125,\n            x_max: 980,\n            y_min: 87,\n            y_max: 993,\n            ha: 906,\n            leftSideBearing: 125,\n            advanceWidth: 1060,\n        },\n        '?': {\n            x_min: 65.92660602419838,\n            x_max: 890,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 65,\n            advanceWidth: 953,\n        },\n        '@': {\n            x_min: 84.3592218305664,\n            x_max: 1705.2346925277395,\n            y_min: -453,\n            y_max: 1431,\n            ha: 1884,\n            leftSideBearing: 84,\n            advanceWidth: 1821,\n        },\n        A: {\n            x_min: 70,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 70,\n            advanceWidth: 1533,\n        },\n        B: {\n            x_min: 81,\n            x_max: 1253,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1322,\n        },\n        C: {\n            x_min: 80,\n            x_max: 1174,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1290,\n        },\n        D: {\n            x_min: 81,\n            x_max: 1291,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1356,\n        },\n        E: {\n            x_min: 81,\n            x_max: 1190,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1306,\n        },\n        F: {\n            x_min: 81,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1256,\n        },\n        G: {\n            x_min: 80,\n            x_max: 1226,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1346,\n        },\n        H: {\n            x_min: 81,\n            x_max: 1497,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1578,\n        },\n        I: {\n            x_min: 81,\n            x_max: 604,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 685,\n        },\n        J: {\n            x_min: 60,\n            x_max: 1100,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 60,\n            advanceWidth: 1169,\n        },\n        K: {\n            x_min: 81,\n            x_max: 1427,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1501,\n        },\n        L: {\n            x_min: 81,\n            x_max: 1130,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1210,\n        },\n        M: {\n            x_min: 94,\n            x_max: 1888,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 94,\n            advanceWidth: 1982,\n        },\n        N: {\n            x_min: 83,\n            x_max: 1509,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 83,\n            advanceWidth: 1592,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1281,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 70,\n            advanceWidth: 1351,\n        },\n        P: {\n            x_min: 81,\n            x_max: 1242,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1297,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1348,\n            y_min: -245,\n            y_max: 1477,\n            ha: 1722,\n            leftSideBearing: 70,\n            advanceWidth: 1376,\n        },\n        R: {\n            x_min: 81,\n            x_max: 1285,\n            y_min: 0,\n            y_max: 1455,\n            ha: 1455,\n            leftSideBearing: 81,\n            advanceWidth: 1385,\n        },\n        S: {\n            x_min: 115,\n            x_max: 1116,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 115,\n            advanceWidth: 1206,\n        },\n        T: {\n            x_min: 96,\n            x_max: 1306,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 96,\n            advanceWidth: 1406,\n        },\n        U: {\n            x_min: 70,\n            x_max: 1452,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 70,\n            advanceWidth: 1522,\n        },\n        V: {\n            x_min: 65,\n            x_max: 1443,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1508,\n        },\n        W: {\n            x_min: 72,\n            x_max: 2057,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 72,\n            advanceWidth: 2129,\n        },\n        X: {\n            x_min: 80,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 80,\n            advanceWidth: 1529,\n        },\n        Y: {\n            x_min: 65,\n            x_max: 1396,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1461,\n        },\n        Z: {\n            x_min: 90,\n            x_max: 1107,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 90,\n            advanceWidth: 1197,\n        },\n        '[': {\n            x_min: 157,\n            x_max: 541,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 157,\n            advanceWidth: 573,\n        },\n        '\\\\': {\n            x_min: 36,\n            x_max: 830,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 36,\n            advanceWidth: 841,\n        },\n        ']': {\n            x_min: 23,\n            x_max: 408,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 23,\n            advanceWidth: 552,\n        },\n        '^': {\n            x_min: 71,\n            x_max: 802,\n            y_min: 729,\n            y_max: 1456,\n            ha: 727,\n            leftSideBearing: 71,\n            advanceWidth: 864,\n        },\n        _: {\n            x_min: 119,\n            x_max: 1041,\n            y_min: -154,\n            y_max: 0,\n            ha: 154,\n            leftSideBearing: 119,\n            advanceWidth: 1168,\n        },\n        '`': {\n            x_min: 40,\n            x_max: 456,\n            y_min: 1288,\n            y_max: 1560,\n            ha: 272,\n            leftSideBearing: 40,\n            advanceWidth: 496,\n        },\n        a: {\n            x_min: 79,\n            x_max: 1053,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 79,\n            advanceWidth: 1132,\n        },\n        b: {\n            x_min: -16,\n            x_max: 1071,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: -16,\n            advanceWidth: 1145,\n        },\n        c: {\n            x_min: 78,\n            x_max: 988,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1067,\n        },\n        d: {\n            x_min: 78,\n            x_max: 1156,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: 78,\n            advanceWidth: 1218,\n        },\n        e: {\n            x_min: 74,\n            x_max: 980,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 74,\n            advanceWidth: 1059,\n        },\n        f: {\n            x_min: 64,\n            x_max: 731,\n            y_min: 0,\n            y_max: 1581,\n            ha: 1581,\n            leftSideBearing: 64,\n            advanceWidth: 725,\n        },\n        g: {\n            x_min: 78,\n            x_max: 1133,\n            y_min: -437,\n            y_max: 1102,\n            ha: 1539,\n            leftSideBearing: 78,\n            advanceWidth: 1157,\n        },\n        h: {\n            x_min: 49,\n            x_max: 1255,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 49,\n            advanceWidth: 1315,\n        },\n        i: {\n            x_min: 67,\n            x_max: 590,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 67,\n            advanceWidth: 652,\n        },\n        j: {\n            x_min: -56,\n            x_max: 381,\n            y_min: -437,\n            y_max: 1560,\n            ha: 1997,\n            leftSideBearing: -56,\n            advanceWidth: 525,\n        },\n        k: {\n            x_min: 64,\n            x_max: 1248,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 1287,\n        },\n        l: {\n            x_min: 64,\n            x_max: 587,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 653,\n        },\n        m: {\n            x_min: 74,\n            x_max: 1905,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1977,\n        },\n        n: {\n            x_min: 74,\n            x_max: 1278,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1343,\n        },\n        o: {\n            x_min: 78,\n            x_max: 1046,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1124,\n        },\n        p: {\n            x_min: 34,\n            x_max: 1119,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 34,\n            advanceWidth: 1197,\n        },\n        q: {\n            x_min: 78,\n            x_max: 1135,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 78,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 72,\n            x_max: 808,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 72,\n            advanceWidth: 854,\n        },\n        s: {\n            x_min: 104,\n            x_max: 933,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 104,\n            advanceWidth: 1022,\n        },\n        t: {\n            x_min: 24,\n            x_max: 678,\n            y_min: -17,\n            y_max: 1343,\n            ha: 1360,\n            leftSideBearing: 24,\n            advanceWidth: 730,\n        },\n        u: {\n            x_min: 52,\n            x_max: 1181,\n            y_min: -21,\n            y_max: 1082,\n            ha: 1103,\n            leftSideBearing: 52,\n            advanceWidth: 1245,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 26,\n            advanceWidth: 1206,\n        },\n        w: {\n            x_min: 52,\n            x_max: 1777,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 52,\n            advanceWidth: 1823,\n        },\n        x: {\n            x_min: 42,\n            x_max: 1163,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 42,\n            advanceWidth: 1203,\n        },\n        y: {\n            x_min: 24,\n            x_max: 1172,\n            y_min: -437,\n            y_max: 1082,\n            ha: 1519,\n            leftSideBearing: 24,\n            advanceWidth: 1192,\n        },\n        z: {\n            x_min: 88,\n            x_max: 960,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 88,\n            advanceWidth: 1032,\n        },\n        '{': {\n            x_min: 63,\n            x_max: 671,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 63,\n            advanceWidth: 701,\n        },\n        '|': {\n            x_min: 150,\n            x_max: 307,\n            y_min: -270,\n            y_max: 1456,\n            ha: 1726,\n            leftSideBearing: 150,\n            advanceWidth: 451,\n        },\n        '}': {\n            x_min: 27,\n            x_max: 635,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 27,\n            advanceWidth: 701,\n        },\n        '~': {\n            x_min: 121,\n            x_max: 1257,\n            y_min: 401,\n            y_max: 803,\n            ha: 402,\n            leftSideBearing: 121,\n            advanceWidth: 1386,\n        },\n    },\n    fontFamily: 'Roboto Slab',\n    resolution: 2048,\n    generatedOn: '2020-06-15T19:12:58.120Z',\n};\n","export const SansFontBold = {\n    glyphs: {\n        '0': {\n            x_min: 86,\n            x_max: 1038,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        '1': {\n            x_min: 162,\n            x_max: 806,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 162,\n            advanceWidth: 1139,\n        },\n        '2': {\n            x_min: 51,\n            x_max: 1036,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 51,\n            advanceWidth: 1139,\n        },\n        '3': {\n            x_min: 77,\n            x_max: 1051,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 77,\n            advanceWidth: 1139,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 1092,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 38,\n            advanceWidth: 1139,\n        },\n        '5': {\n            x_min: 91,\n            x_max: 1077,\n            y_min: -25,\n            y_max: 1446,\n            ha: 1471,\n            leftSideBearing: 91,\n            advanceWidth: 1139,\n        },\n        '6': {\n            x_min: 87,\n            x_max: 1066,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 87,\n            advanceWidth: 1139,\n        },\n        '7': {\n            x_min: 87,\n            x_max: 1048,\n            y_min: 0,\n            y_max: 1446,\n            ha: 1446,\n            leftSideBearing: 87,\n            advanceWidth: 1139,\n        },\n        '8': {\n            x_min: 83,\n            x_max: 1047,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 83,\n            advanceWidth: 1139,\n        },\n        '9': {\n            x_min: 65,\n            x_max: 1044,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 65,\n            advanceWidth: 1139,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        '!': {\n            x_min: 184,\n            x_max: 488,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 184,\n            advanceWidth: 682,\n        },\n        '\"': {\n            x_min: 112,\n            x_max: 869,\n            y_min: 945,\n            y_max: 1466,\n            ha: 521,\n            leftSideBearing: 112,\n            advanceWidth: 971,\n        },\n        '#': {\n            x_min: 18,\n            x_max: 1115,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 18,\n            advanceWidth: 1139,\n        },\n        $: {\n            x_min: 70,\n            x_max: 1048,\n            y_min: -205,\n            y_max: 1584,\n            ha: 1789,\n            leftSideBearing: 70,\n            advanceWidth: 1139,\n        },\n        '%': {\n            x_min: 89,\n            x_max: 1725,\n            y_min: -59,\n            y_max: 1491,\n            ha: 1550,\n            leftSideBearing: 89,\n            advanceWidth: 1821,\n        },\n        '&': {\n            x_min: 90,\n            x_max: 1446,\n            y_min: -38,\n            y_max: 1491,\n            ha: 1529,\n            leftSideBearing: 90,\n            advanceWidth: 1479,\n        },\n        \"'\": {\n            x_min: 92,\n            x_max: 398,\n            y_min: 945,\n            y_max: 1466,\n            ha: 521,\n            leftSideBearing: 92,\n            advanceWidth: 487,\n        },\n        '(': {\n            x_min: 107,\n            x_max: 616,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 107,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 67,\n            x_max: 576,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 67,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 28,\n            x_max: 753,\n            y_min: 792,\n            y_max: 1491,\n            ha: 699,\n            leftSideBearing: 28,\n            advanceWidth: 797,\n        },\n        '+': {\n            x_min: 85,\n            x_max: 1110,\n            y_min: 211,\n            y_max: 1236,\n            ha: 1025,\n            leftSideBearing: 85,\n            advanceWidth: 1196,\n        },\n        ',': {\n            x_min: 117,\n            x_max: 421,\n            y_min: -327,\n            y_max: 281,\n            ha: 608,\n            leftSideBearing: 117,\n            advanceWidth: 569,\n        },\n        '-': {\n            x_min: 115,\n            x_max: 667,\n            y_min: 391,\n            y_max: 672,\n            ha: 281,\n            leftSideBearing: 115,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 281,\n            ha: 281,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        '/': {\n            x_min: -3,\n            x_max: 571,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: -3,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 201,\n            x_max: 482,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 201,\n            advanceWidth: 682,\n        },\n        ';': {\n            x_min: 170,\n            x_max: 474,\n            y_min: -327,\n            y_max: 1062,\n            ha: 1389,\n            leftSideBearing: 170,\n            advanceWidth: 682,\n        },\n        '<': {\n            x_min: 95,\n            x_max: 1100,\n            y_min: 167,\n            y_max: 1281,\n            ha: 1114,\n            leftSideBearing: 95,\n            advanceWidth: 1196,\n        },\n        '=': {\n            x_min: 85,\n            x_max: 1110,\n            y_min: 372,\n            y_max: 1074,\n            ha: 702,\n            leftSideBearing: 85,\n            advanceWidth: 1196,\n        },\n        '>': {\n            x_min: 95,\n            x_max: 1101,\n            y_min: 166,\n            y_max: 1279,\n            ha: 1113,\n            leftSideBearing: 95,\n            advanceWidth: 1196,\n        },\n        '?': {\n            x_min: 106,\n            x_max: 1158,\n            y_min: 0,\n            y_max: 1481,\n            ha: 1481,\n            leftSideBearing: 106,\n            advanceWidth: 1251,\n        },\n        '@': {\n            x_min: 61,\n            x_max: 1990,\n            y_min: -431,\n            y_max: 1492,\n            ha: 1923,\n            leftSideBearing: 61,\n            advanceWidth: 1997,\n        },\n        A: {\n            x_min: 0,\n            x_max: 1471,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 0,\n            advanceWidth: 1479,\n        },\n        B: {\n            x_min: 150,\n            x_max: 1378,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        C: {\n            x_min: 97,\n            x_max: 1374,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 97,\n            advanceWidth: 1479,\n        },\n        D: {\n            x_min: 148,\n            x_max: 1377,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 148,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 149,\n            x_max: 1264,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 149,\n            advanceWidth: 1366,\n        },\n        F: {\n            x_min: 151,\n            x_max: 1156,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 151,\n            advanceWidth: 1251,\n        },\n        G: {\n            x_min: 98,\n            x_max: 1469,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 98,\n            advanceWidth: 1593,\n        },\n        H: {\n            x_min: 150,\n            x_max: 1322,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 140,\n            x_max: 436,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 140,\n            advanceWidth: 569,\n        },\n        J: {\n            x_min: 35,\n            x_max: 973,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 35,\n            advanceWidth: 1139,\n        },\n        K: {\n            x_min: 153,\n            x_max: 1475,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 153,\n            advanceWidth: 1479,\n        },\n        L: {\n            x_min: 157,\n            x_max: 1189,\n            y_min: 0,\n            y_max: 1454,\n            ha: 1454,\n            leftSideBearing: 157,\n            advanceWidth: 1251,\n        },\n        M: {\n            x_min: 145,\n            x_max: 1561,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 145,\n            advanceWidth: 1706,\n        },\n        N: {\n            x_min: 152,\n            x_max: 1315,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 152,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 89,\n            x_max: 1511,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 89,\n            advanceWidth: 1593,\n        },\n        P: {\n            x_min: 149,\n            x_max: 1272,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 149,\n            advanceWidth: 1366,\n        },\n        Q: {\n            x_min: 89,\n            x_max: 1566,\n            y_min: -147,\n            y_max: 1491,\n            ha: 1638,\n            leftSideBearing: 89,\n            advanceWidth: 1593,\n        },\n        R: {\n            x_min: 150,\n            x_max: 1468,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        S: {\n            x_min: 74,\n            x_max: 1266,\n            y_min: -26,\n            y_max: 1491,\n            ha: 1517,\n            leftSideBearing: 74,\n            advanceWidth: 1366,\n        },\n        T: {\n            x_min: 44,\n            x_max: 1209,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 44,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 147,\n            x_max: 1316,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 147,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: -1,\n            x_max: 1364,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -1,\n            advanceWidth: 1366,\n        },\n        W: {\n            x_min: 7,\n            x_max: 1931,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 7,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 0,\n            x_max: 1363,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 0,\n            advanceWidth: 1366,\n        },\n        Y: {\n            x_min: -3,\n            x_max: 1368,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -3,\n            advanceWidth: 1366,\n        },\n        Z: {\n            x_min: 22,\n            x_max: 1213,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 22,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 146,\n            x_max: 644,\n            y_min: -413,\n            y_max: 1466,\n            ha: 1879,\n            leftSideBearing: 146,\n            advanceWidth: 682,\n        },\n        '\\\\': {\n            x_min: -3,\n            x_max: 571,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: -3,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 38,\n            x_max: 536,\n            y_min: -413,\n            y_max: 1466,\n            ha: 1879,\n            leftSideBearing: 38,\n            advanceWidth: 682,\n        },\n        '^': {\n            x_min: 115,\n            x_max: 1080,\n            y_min: 692,\n            y_max: 1491,\n            ha: 799,\n            leftSideBearing: 115,\n            advanceWidth: 1196,\n        },\n        _: {\n            x_min: -19,\n            x_max: 1149,\n            y_min: -405,\n            y_max: -223,\n            ha: 182,\n            leftSideBearing: -19,\n            advanceWidth: 1139,\n        },\n        '`': {\n            x_min: 42,\n            x_max: 495,\n            y_min: 1192,\n            y_max: 1491,\n            ha: 299,\n            leftSideBearing: 42,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 73,\n            x_max: 1070,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 73,\n            advanceWidth: 1139,\n        },\n        b: {\n            x_min: 135,\n            x_max: 1172,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 135,\n            advanceWidth: 1251,\n        },\n        c: {\n            x_min: 85,\n            x_max: 1087,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        d: {\n            x_min: 84,\n            x_max: 1121,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 84,\n            advanceWidth: 1251,\n        },\n        e: {\n            x_min: 65,\n            x_max: 1057.2517482517483,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 65,\n            advanceWidth: 1139,\n        },\n        f: {\n            x_min: 24,\n            x_max: 742,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 24,\n            advanceWidth: 682,\n        },\n        g: {\n            x_min: 84,\n            x_max: 1120,\n            y_min: -431,\n            y_max: 1086,\n            ha: 1517,\n            leftSideBearing: 84,\n            advanceWidth: 1251,\n        },\n        h: {\n            x_min: 146,\n            x_max: 1113,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 146,\n            advanceWidth: 1251,\n        },\n        i: {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        j: {\n            x_min: -94,\n            x_max: 422,\n            y_min: -431,\n            y_max: 1466,\n            ha: 1897,\n            leftSideBearing: -94,\n            advanceWidth: 569,\n        },\n        k: {\n            x_min: 137,\n            x_max: 1119,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 137,\n            advanceWidth: 1139,\n        },\n        l: {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        m: {\n            x_min: 126,\n            x_max: 1688,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 126,\n            advanceWidth: 1821,\n        },\n        n: {\n            x_min: 145,\n            x_max: 1113,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 145,\n            advanceWidth: 1251,\n        },\n        o: {\n            x_min: 82,\n            x_max: 1178,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 82,\n            advanceWidth: 1251,\n        },\n        p: {\n            x_min: 139,\n            x_max: 1175,\n            y_min: -404,\n            y_max: 1086,\n            ha: 1490,\n            leftSideBearing: 139,\n            advanceWidth: 1251,\n        },\n        q: {\n            x_min: 91,\n            x_max: 1122,\n            y_min: -404,\n            y_max: 1086,\n            ha: 1490,\n            leftSideBearing: 91,\n            advanceWidth: 1251,\n        },\n        r: {\n            x_min: 135,\n            x_max: 823,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 797,\n        },\n        s: {\n            x_min: 48,\n            x_max: 1040,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 48,\n            advanceWidth: 1139,\n        },\n        t: {\n            x_min: 31,\n            x_max: 657,\n            y_min: -24,\n            y_max: 1437,\n            ha: 1461,\n            leftSideBearing: 31,\n            advanceWidth: 682,\n        },\n        u: {\n            x_min: 141,\n            x_max: 1107,\n            y_min: -24,\n            y_max: 1062,\n            ha: 1086,\n            leftSideBearing: 141,\n            advanceWidth: 1251,\n        },\n        v: {\n            x_min: 11,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 11,\n            advanceWidth: 1139,\n        },\n        w: {\n            x_min: 9,\n            x_max: 1592,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 9,\n            advanceWidth: 1593,\n        },\n        x: {\n            x_min: 12,\n            x_max: 1120,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 12,\n            advanceWidth: 1139,\n        },\n        y: {\n            x_min: 14,\n            x_max: 1106,\n            y_min: -431,\n            y_max: 1062,\n            ha: 1493,\n            leftSideBearing: 14,\n            advanceWidth: 1139,\n        },\n        z: {\n            x_min: 34,\n            x_max: 982,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 34,\n            advanceWidth: 1024,\n        },\n        '{': {\n            x_min: 60,\n            x_max: 744,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 60,\n            advanceWidth: 797,\n        },\n        '|': {\n            x_min: 176,\n            x_max: 399,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 176,\n            advanceWidth: 573,\n        },\n        '}': {\n            x_min: 45,\n            x_max: 729,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 45,\n            advanceWidth: 797,\n        },\n        '~': {\n            x_min: 67,\n            x_max: 1129,\n            y_min: 519,\n            y_max: 924,\n            ha: 405,\n            leftSideBearing: 67,\n            advanceWidth: 1196,\n        },\n    },\n    fontFamily: 'Arial',\n    resolution: 2048,\n    generatedOn: '2022-11-04T20:05:21.000Z',\n};\n","export const SansFont = {\n    smufl: false,\n    name: 'SANS',\n    spacing: 50,\n    Description: 'Built-in sans-serif font',\n    bold: true,\n    italic: true,\n    monospaced: false,\n    serifs: false,\n    glyphs: {\n        '0': {\n            x_min: 85,\n            x_max: 1041,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        '1': {\n            x_min: 223,\n            x_max: 763,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 223,\n            advanceWidth: 1139,\n        },\n        '2': {\n            x_min: 61.840001123045234,\n            x_max: 1031,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 61,\n            advanceWidth: 1139,\n        },\n        '3': {\n            x_min: 86,\n            x_max: 1046,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        '4': {\n            x_min: 26,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 26,\n            advanceWidth: 1139,\n        },\n        '5': {\n            x_min: 85,\n            x_max: 1057,\n            y_min: -25,\n            y_max: 1446,\n            ha: 1471,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        '6': {\n            x_min: 77,\n            x_max: 1045,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 77,\n            advanceWidth: 1139,\n        },\n        '7': {\n            x_min: 97,\n            x_max: 1046,\n            y_min: 0,\n            y_max: 1447,\n            ha: 1447,\n            leftSideBearing: 97,\n            advanceWidth: 1139,\n        },\n        '8': {\n            x_min: 83,\n            x_max: 1049,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 83,\n            advanceWidth: 1139,\n        },\n        '9': {\n            x_min: 85,\n            x_max: 1049,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        '!': {\n            x_min: 176,\n            x_max: 399,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 176,\n            advanceWidth: 569,\n        },\n        '\"': {\n            x_min: 94,\n            x_max: 631,\n            y_min: 947,\n            y_max: 1466,\n            ha: 519,\n            leftSideBearing: 94,\n            advanceWidth: 727,\n        },\n        '#': {\n            x_min: 21,\n            x_max: 1113,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 21,\n            advanceWidth: 1139,\n        },\n        $: {\n            x_min: 73,\n            x_max: 1043,\n            y_min: -211,\n            y_max: 1601,\n            ha: 1812,\n            leftSideBearing: 73,\n            advanceWidth: 1139,\n        },\n        '%': {\n            x_min: 119,\n            x_max: 1695,\n            y_min: -54,\n            y_max: 1491,\n            ha: 1545,\n            leftSideBearing: 119,\n            advanceWidth: 1821,\n        },\n        '&': {\n            x_min: 88,\n            x_max: 1319,\n            y_min: -34,\n            y_max: 1491,\n            ha: 1525,\n            leftSideBearing: 88,\n            advanceWidth: 1366,\n        },\n        \"'\": {\n            x_min: 90,\n            x_max: 295,\n            y_min: 947,\n            y_max: 1466,\n            ha: 519,\n            leftSideBearing: 90,\n            advanceWidth: 391,\n        },\n        '(': {\n            x_min: 124,\n            x_max: 608,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 124,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 124,\n            x_max: 608,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 124,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 64,\n            x_max: 725,\n            y_min: 867,\n            y_max: 1491,\n            ha: 624,\n            leftSideBearing: 64,\n            advanceWidth: 797,\n        },\n        '+': {\n            x_min: 114,\n            x_max: 1082,\n            y_min: 237,\n            y_max: 1206,\n            ha: 969,\n            leftSideBearing: 114,\n            advanceWidth: 1196,\n        },\n        ',': {\n            x_min: 170,\n            x_max: 387,\n            y_min: -290,\n            y_max: 205,\n            ha: 495,\n            leftSideBearing: 170,\n            advanceWidth: 569,\n        },\n        '-': {\n            x_min: 65,\n            x_max: 618,\n            y_min: 440,\n            y_max: 621,\n            ha: 181,\n            leftSideBearing: 65,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 186,\n            x_max: 391,\n            y_min: 0,\n            y_max: 205,\n            ha: 205,\n            leftSideBearing: 186,\n            advanceWidth: 569,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 569,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 185,\n            x_max: 390,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 185,\n            advanceWidth: 569,\n        },\n        ';': {\n            x_min: 170,\n            x_max: 387,\n            y_min: -290,\n            y_max: 1062,\n            ha: 1352,\n            leftSideBearing: 170,\n            advanceWidth: 569,\n        },\n        '<': {\n            x_min: 112,\n            x_max: 1083,\n            y_min: 226,\n            y_max: 1219,\n            ha: 993,\n            leftSideBearing: 112,\n            advanceWidth: 1196,\n        },\n        '=': {\n            x_min: 114,\n            x_max: 1082,\n            y_min: 417,\n            y_max: 1030,\n            ha: 613,\n            leftSideBearing: 114,\n            advanceWidth: 1196,\n        },\n        '>': {\n            x_min: 112,\n            x_max: 1083,\n            y_min: 226,\n            y_max: 1219,\n            ha: 993,\n            leftSideBearing: 112,\n            advanceWidth: 1196,\n        },\n        '?': {\n            x_min: 90,\n            x_max: 1036,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 90,\n            advanceWidth: 1139,\n        },\n        '@': {\n            x_min: 111,\n            x_max: 2005,\n            y_min: -431,\n            y_max: 1493,\n            ha: 1924,\n            leftSideBearing: 111,\n            advanceWidth: 2079,\n        },\n        A: {\n            x_min: -3,\n            x_max: 1369,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -3,\n            advanceWidth: 1366,\n        },\n        B: {\n            x_min: 150,\n            x_max: 1257,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1366,\n        },\n        C: {\n            x_min: 102,\n            x_max: 1398,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 102,\n            advanceWidth: 1479,\n        },\n        D: {\n            x_min: 158,\n            x_max: 1370,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 158,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 162,\n            x_max: 1256,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 162,\n            advanceWidth: 1366,\n        },\n        F: {\n            x_min: 168,\n            x_max: 1157,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 168,\n            advanceWidth: 1251,\n        },\n        G: {\n            x_min: 109,\n            x_max: 1465,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 109,\n            advanceWidth: 1593,\n        },\n        H: {\n            x_min: 164,\n            x_max: 1314,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 164,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 191,\n            x_max: 385,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 191,\n            advanceWidth: 569,\n        },\n        J: {\n            x_min: 58.84976474807333,\n            x_max: 865,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 58,\n            advanceWidth: 1024,\n        },\n        K: {\n            x_min: 150,\n            x_max: 1362,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1366,\n        },\n        L: {\n            x_min: 150,\n            x_max: 1066,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1139,\n        },\n        M: {\n            x_min: 152,\n            x_max: 1551,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 152,\n            advanceWidth: 1706,\n        },\n        N: {\n            x_min: 156,\n            x_max: 1311,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 156,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 99,\n            x_max: 1501,\n            y_min: -25,\n            y_max: 1492,\n            ha: 1517,\n            leftSideBearing: 99,\n            advanceWidth: 1593,\n        },\n        P: {\n            x_min: 158,\n            x_max: 1277,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 158,\n            advanceWidth: 1366,\n        },\n        Q: {\n            x_min: 88,\n            x_max: 1518,\n            y_min: -114,\n            y_max: 1492,\n            ha: 1606,\n            leftSideBearing: 88,\n            advanceWidth: 1593,\n        },\n        R: {\n            x_min: 161,\n            x_max: 1453,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 161,\n            advanceWidth: 1479,\n        },\n        S: {\n            x_min: 92,\n            x_max: 1259,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 92,\n            advanceWidth: 1366,\n        },\n        T: {\n            x_min: 48,\n            x_max: 1210,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 48,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 161,\n            x_max: 1314,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 161,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: 9,\n            x_max: 1350,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 9,\n            advanceWidth: 1366,\n        },\n        W: {\n            x_min: 25,\n            x_max: 1910,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 25,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 9,\n            x_max: 1353,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 9,\n            advanceWidth: 1366,\n        },\n        Y: {\n            x_min: 6,\n            x_max: 1350,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 6,\n            advanceWidth: 1366,\n        },\n        Z: {\n            x_min: 41,\n            x_max: 1200,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 41,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 139,\n            x_max: 536,\n            y_min: -407,\n            y_max: 1466,\n            ha: 1873,\n            leftSideBearing: 139,\n            advanceWidth: 569,\n        },\n        '\\\\': {\n            x_min: 0,\n            x_max: 569,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 39,\n            x_max: 436,\n            y_min: -407,\n            y_max: 1466,\n            ha: 1873,\n            leftSideBearing: 39,\n            advanceWidth: 569,\n        },\n        '^': {\n            x_min: 54,\n            x_max: 907,\n            y_min: 690,\n            y_max: 1491,\n            ha: 801,\n            leftSideBearing: 54,\n            advanceWidth: 961,\n        },\n        _: {\n            x_min: -31,\n            x_max: 1162,\n            y_min: -407,\n            y_max: -277,\n            ha: 130,\n            leftSideBearing: -31,\n            advanceWidth: 1139,\n        },\n        '`': {\n            x_min: 89,\n            x_max: 465,\n            y_min: 1194,\n            y_max: 1474,\n            ha: 280,\n            leftSideBearing: 89,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 74,\n            x_max: 1052,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 74,\n            advanceWidth: 1139,\n        },\n        b: {\n            x_min: 134,\n            x_max: 1055,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 134,\n            advanceWidth: 1139,\n        },\n        c: {\n            x_min: 80,\n            x_max: 1005,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 80,\n            advanceWidth: 1024,\n        },\n        d: {\n            x_min: 70,\n            x_max: 991,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 70,\n            advanceWidth: 1139,\n        },\n        e: {\n            x_min: 75,\n            x_max: 1054,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 75,\n            advanceWidth: 1139,\n        },\n        f: {\n            x_min: 19,\n            x_max: 640,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 19,\n            advanceWidth: 569,\n        },\n        g: {\n            x_min: 66,\n            x_max: 1002,\n            y_min: -431,\n            y_max: 1086,\n            ha: 1517,\n            leftSideBearing: 66,\n            advanceWidth: 1139,\n        },\n        h: {\n            x_min: 135,\n            x_max: 1000,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        i: {\n            x_min: 136,\n            x_max: 316,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 136,\n            advanceWidth: 455,\n        },\n        j: {\n            x_min: -94,\n            x_max: 314,\n            y_min: -431,\n            y_max: 1466,\n            ha: 1897,\n            leftSideBearing: -94,\n            advanceWidth: 455,\n        },\n        k: {\n            x_min: 136,\n            x_max: 1016,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 136,\n            advanceWidth: 1024,\n        },\n        l: {\n            x_min: 131,\n            x_max: 311,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 131,\n            advanceWidth: 455,\n        },\n        m: {\n            x_min: 135,\n            x_max: 1574,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 1706,\n        },\n        n: {\n            x_min: 135,\n            x_max: 998,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        o: {\n            x_min: 68,\n            x_max: 1063,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 68,\n            advanceWidth: 1139,\n        },\n        p: {\n            x_min: 135,\n            x_max: 1057,\n            y_min: -407,\n            y_max: 1086,\n            ha: 1493,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        q: {\n            x_min: 72,\n            x_max: 992,\n            y_min: -407,\n            y_max: 1086,\n            ha: 1493,\n            leftSideBearing: 72,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 133,\n            x_max: 710,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 133,\n            advanceWidth: 682,\n        },\n        s: {\n            x_min: 63,\n            x_max: 945,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 63,\n            advanceWidth: 1024,\n        },\n        t: {\n            x_min: 36,\n            x_max: 554,\n            y_min: -14,\n            y_max: 1433,\n            ha: 1447,\n            leftSideBearing: 36,\n            advanceWidth: 569,\n        },\n        u: {\n            x_min: 131,\n            x_max: 992,\n            y_min: -24,\n            y_max: 1062,\n            ha: 1086,\n            leftSideBearing: 131,\n            advanceWidth: 1139,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1000,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 26,\n            advanceWidth: 1024,\n        },\n        w: {\n            x_min: 6,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 6,\n            advanceWidth: 1479,\n        },\n        x: {\n            x_min: 15,\n            x_max: 1009,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 15,\n            advanceWidth: 1024,\n        },\n        y: {\n            x_min: 33,\n            x_max: 1006,\n            y_min: -431,\n            y_max: 1062,\n            ha: 1493,\n            leftSideBearing: 33,\n            advanceWidth: 1024,\n        },\n        z: {\n            x_min: 40,\n            x_max: 980,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 40,\n            advanceWidth: 1024,\n        },\n        '{': {\n            x_min: 57,\n            x_max: 636,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 57,\n            advanceWidth: 684,\n        },\n        '|': {\n            x_min: 188,\n            x_max: 345,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 188,\n            advanceWidth: 532,\n        },\n        '}': {\n            x_min: 47,\n            x_max: 626,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 47,\n            advanceWidth: 684,\n        },\n        '~': {\n            x_min: 87,\n            x_max: 1110,\n            y_min: 557,\n            y_max: 885,\n            ha: 328,\n            leftSideBearing: 87,\n            advanceWidth: 1196,\n        },\n    },\n    fontFamily: 'sans-serif',\n    resolution: 2048,\n    generatedOn: '2020-10-18T18:48:11.823Z',\n};\n","export const SerifFont = {\n    smufl: false,\n    name: 'SERIF',\n    spacing: 50,\n    Description: 'Built-in serif font',\n    bold: true,\n    italic: true,\n    monospaced: false,\n    serifs: true,\n    glyphs: {\n        '0': {\n            x_min: 49,\n            x_max: 975,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 49,\n            advanceWidth: 1024,\n        },\n        '1': {\n            x_min: 227,\n            x_max: 811,\n            y_min: 0,\n            y_max: 1383,\n            ha: 1383,\n            leftSideBearing: 227,\n            advanceWidth: 1024,\n        },\n        '2': {\n            x_min: 61,\n            x_max: 965,\n            y_min: 0,\n            y_max: 1383,\n            ha: 1383,\n            leftSideBearing: 61,\n            advanceWidth: 1024,\n        },\n        '3': {\n            x_min: 88,\n            x_max: 883,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 88,\n            advanceWidth: 1024,\n        },\n        '4': {\n            x_min: 25,\n            x_max: 967,\n            y_min: 0,\n            y_max: 1384,\n            ha: 1384,\n            leftSideBearing: 25,\n            advanceWidth: 1024,\n        },\n        '5': {\n            x_min: 66,\n            x_max: 898,\n            y_min: -27,\n            y_max: 1409,\n            ha: 1436,\n            leftSideBearing: 66,\n            advanceWidth: 1024,\n        },\n        '6': {\n            x_min: 70,\n            x_max: 958,\n            y_min: -27,\n            y_max: 1401,\n            ha: 1428,\n            leftSideBearing: 70,\n            advanceWidth: 1024,\n        },\n        '7': {\n            x_min: 41,\n            x_max: 920,\n            y_min: -16,\n            y_max: 1356,\n            ha: 1372,\n            leftSideBearing: 41,\n            advanceWidth: 1024,\n        },\n        '8': {\n            x_min: 115,\n            x_max: 911,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 115,\n            advanceWidth: 1024,\n        },\n        '9': {\n            x_min: 61,\n            x_max: 940,\n            y_min: -41,\n            y_max: 1383,\n            ha: 1424,\n            leftSideBearing: 61,\n            advanceWidth: 1024,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 512,\n        },\n        '!': {\n            x_min: 266,\n            x_max: 488,\n            y_min: -22,\n            y_max: 1383,\n            ha: 1405,\n            leftSideBearing: 266,\n            advanceWidth: 682,\n        },\n        '\"': {\n            x_min: 157.2000021972655,\n            x_max: 678.2500021457677,\n            y_min: 881,\n            y_max: 1385,\n            ha: 504,\n            leftSideBearing: 157,\n            advanceWidth: 836,\n        },\n        '#': {\n            x_min: 10,\n            x_max: 1016,\n            y_min: -1,\n            y_max: 1356,\n            ha: 1357,\n            leftSideBearing: 10,\n            advanceWidth: 1024,\n        },\n        $: {\n            x_min: 90,\n            x_max: 936,\n            y_min: -180,\n            y_max: 1492,\n            ha: 1672,\n            leftSideBearing: 90,\n            advanceWidth: 1024,\n        },\n        '%': {\n            x_min: 125,\n            x_max: 1581,\n            y_min: -30,\n            y_max: 1388,\n            ha: 1418,\n            leftSideBearing: 125,\n            advanceWidth: 1706,\n        },\n        '&': {\n            x_min: 86,\n            x_max: 1536,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 86,\n            advanceWidth: 1593,\n        },\n        \"'\": {\n            x_min: 97.20000219726548,\n            x_max: 273.2500021457677,\n            y_min: 881,\n            y_max: 1385,\n            ha: 504,\n            leftSideBearing: 97,\n            advanceWidth: 369,\n        },\n        '(': {\n            x_min: 98,\n            x_max: 623,\n            y_min: -363,\n            y_max: 1383,\n            ha: 1746,\n            leftSideBearing: 98,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 59,\n            x_max: 584,\n            y_min: -363,\n            y_max: 1383,\n            ha: 1746,\n            leftSideBearing: 59,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 137.96078522291893,\n            x_max: 886.039214777081,\n            y_min: 543,\n            y_max: 1383,\n            ha: 840,\n            leftSideBearing: 137,\n            advanceWidth: 1024,\n        },\n        '+': {\n            x_min: 61,\n            x_max: 1093,\n            y_min: 2,\n            y_max: 1034,\n            ha: 1032,\n            leftSideBearing: 61,\n            advanceWidth: 1155,\n        },\n        ',': {\n            x_min: 115,\n            x_max: 399,\n            y_min: -291,\n            y_max: 208,\n            ha: 499,\n            leftSideBearing: 115,\n            advanceWidth: 512,\n        },\n        '-': {\n            x_min: 80,\n            x_max: 584,\n            y_min: 396,\n            y_max: 525,\n            ha: 129,\n            leftSideBearing: 80,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 143,\n            x_max: 371,\n            y_min: -22,\n            y_max: 205,\n            ha: 227,\n            leftSideBearing: 143,\n            advanceWidth: 512,\n        },\n        '/': {\n            x_min: -17,\n            x_max: 586,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: -17,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 166,\n            x_max: 394,\n            y_min: -22,\n            y_max: 943,\n            ha: 965,\n            leftSideBearing: 166,\n            advanceWidth: 569,\n        },\n        ';': {\n            x_min: 164,\n            x_max: 448,\n            y_min: -290,\n            y_max: 943,\n            ha: 1233,\n            leftSideBearing: 164,\n            advanceWidth: 569,\n        },\n        '<': {\n            x_min: 57,\n            x_max: 1098,\n            y_min: -15,\n            y_max: 1051,\n            ha: 1066,\n            leftSideBearing: 57,\n            advanceWidth: 1155,\n        },\n        '=': {\n            x_min: 61,\n            x_max: 1093,\n            y_min: 246,\n            y_max: 791,\n            ha: 545,\n            leftSideBearing: 61,\n            advanceWidth: 1155,\n        },\n        '>': {\n            x_min: 57,\n            x_max: 1098,\n            y_min: -15,\n            y_max: 1051,\n            ha: 1066,\n            leftSideBearing: 57,\n            advanceWidth: 1155,\n        },\n        '?': {\n            x_min: 139,\n            x_max: 848,\n            y_min: -15,\n            y_max: 1383,\n            ha: 1398,\n            leftSideBearing: 139,\n            advanceWidth: 909,\n        },\n        '@': {\n            x_min: 238,\n            x_max: 1657,\n            y_min: -29,\n            y_max: 1386,\n            ha: 1415,\n            leftSideBearing: 238,\n            advanceWidth: 1886,\n        },\n        A: {\n            x_min: 31,\n            x_max: 1445,\n            y_min: 0,\n            y_max: 1380,\n            ha: 1380,\n            leftSideBearing: 31,\n            advanceWidth: 1479,\n        },\n        B: {\n            x_min: 35,\n            x_max: 1214,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1366,\n        },\n        C: {\n            x_min: 57,\n            x_max: 1296,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 57,\n            advanceWidth: 1366,\n        },\n        D: {\n            x_min: 33,\n            x_max: 1403,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 33,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 25,\n            x_max: 1222,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1251,\n        },\n        F: {\n            x_min: 25,\n            x_max: 1119,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1139,\n        },\n        G: {\n            x_min: 66,\n            x_max: 1452,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 66,\n            advanceWidth: 1479,\n        },\n        H: {\n            x_min: 39,\n            x_max: 1438,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 39,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 37,\n            x_max: 642,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 37,\n            advanceWidth: 682,\n        },\n        J: {\n            x_min: 20,\n            x_max: 758,\n            y_min: -28,\n            y_max: 1356,\n            ha: 1384,\n            leftSideBearing: 20,\n            advanceWidth: 797,\n        },\n        K: {\n            x_min: 70,\n            x_max: 1479,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        L: {\n            x_min: 25,\n            x_max: 1224,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1251,\n        },\n        M: {\n            x_min: 25,\n            x_max: 1768,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1821,\n        },\n        N: {\n            x_min: 25,\n            x_max: 1450,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 25,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1409,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        P: {\n            x_min: 33,\n            x_max: 1110,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 33,\n            advanceWidth: 1139,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1435,\n            y_min: -364.28571588721996,\n            y_max: 1383,\n            ha: 1747.28571588722,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        R: {\n            x_min: 35,\n            x_max: 1347,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1366,\n        },\n        S: {\n            x_min: 86,\n            x_max: 1006,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        T: {\n            x_min: 35,\n            x_max: 1214,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 29,\n            x_max: 1444,\n            y_min: -28,\n            y_max: 1356,\n            ha: 1384,\n            leftSideBearing: 29,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: 33,\n            x_max: 1428,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 33,\n            advanceWidth: 1479,\n        },\n        W: {\n            x_min: 10,\n            x_max: 1906,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 10,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 20,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 20,\n            advanceWidth: 1479,\n        },\n        Y: {\n            x_min: 45,\n            x_max: 1441,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 45,\n            advanceWidth: 1479,\n        },\n        Z: {\n            x_min: 18,\n            x_max: 1222,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 18,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 180,\n            x_max: 612,\n            y_min: -319,\n            y_max: 1355,\n            ha: 1674,\n            leftSideBearing: 180,\n            advanceWidth: 682,\n        },\n        '\\\\': {\n            x_min: -17,\n            x_max: 586,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: -17,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 70,\n            x_max: 502,\n            y_min: -319,\n            y_max: 1355,\n            ha: 1674,\n            leftSideBearing: 70,\n            advanceWidth: 682,\n        },\n        '^': {\n            x_min: 49,\n            x_max: 914,\n            y_min: 608,\n            y_max: 1355,\n            ha: 747,\n            leftSideBearing: 49,\n            advanceWidth: 961,\n        },\n        _: {\n            x_min: 0,\n            x_max: 1024,\n            y_min: -255,\n            y_max: -153,\n            ha: 102,\n            leftSideBearing: 0,\n            advanceWidth: 1024,\n        },\n        '`': {\n            x_min: 39,\n            x_max: 499,\n            y_min: 1037,\n            y_max: 1392.509803639748,\n            ha: 355.50980363974804,\n            leftSideBearing: 39,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 76,\n            x_max: 905,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 76,\n            advanceWidth: 909,\n        },\n        b: {\n            x_min: 6,\n            x_max: 958,\n            y_min: -20,\n            y_max: 1399,\n            ha: 1419,\n            leftSideBearing: 6,\n            advanceWidth: 1024,\n        },\n        c: {\n            x_min: 51,\n            x_max: 843,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 51,\n            advanceWidth: 909,\n        },\n        d: {\n            x_min: 55,\n            x_max: 1006,\n            y_min: -20,\n            y_max: 1399,\n            ha: 1419,\n            leftSideBearing: 55,\n            advanceWidth: 1024,\n        },\n        e: {\n            x_min: 51,\n            x_max: 868,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 51,\n            advanceWidth: 909,\n        },\n        f: {\n            x_min: 41,\n            x_max: 783,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 41,\n            advanceWidth: 682,\n        },\n        g: {\n            x_min: 57,\n            x_max: 963,\n            y_min: -446,\n            y_max: 942,\n            ha: 1388,\n            leftSideBearing: 57,\n            advanceWidth: 1024,\n        },\n        h: {\n            x_min: 18,\n            x_max: 997,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 18,\n            advanceWidth: 1024,\n        },\n        i: {\n            x_min: 33,\n            x_max: 516,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 33,\n            advanceWidth: 569,\n        },\n        j: {\n            x_min: -142,\n            x_max: 397,\n            y_min: -446,\n            y_max: 1399,\n            ha: 1845,\n            leftSideBearing: -142,\n            advanceWidth: 569,\n        },\n        k: {\n            x_min: 14,\n            x_max: 1029,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 14,\n            advanceWidth: 1024,\n        },\n        l: {\n            x_min: 39,\n            x_max: 523,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 39,\n            advanceWidth: 569,\n        },\n        m: {\n            x_min: 33,\n            x_max: 1587,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 33,\n            advanceWidth: 1593,\n        },\n        n: {\n            x_min: 33,\n            x_max: 993,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 33,\n            advanceWidth: 1024,\n        },\n        o: {\n            x_min: 59,\n            x_max: 963,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 59,\n            advanceWidth: 1024,\n        },\n        p: {\n            x_min: 10,\n            x_max: 964,\n            y_min: -443,\n            y_max: 944,\n            ha: 1387,\n            leftSideBearing: 10,\n            advanceWidth: 1024,\n        },\n        q: {\n            x_min: 49,\n            x_max: 999,\n            y_min: -443,\n            y_max: 942.0135137169275,\n            ha: 1385.0135137169275,\n            leftSideBearing: 49,\n            advanceWidth: 1024,\n        },\n        r: {\n            x_min: 10,\n            x_max: 685,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 10,\n            advanceWidth: 682,\n        },\n        s: {\n            x_min: 104,\n            x_max: 713,\n            y_min: -20,\n            y_max: 942.0263161804552,\n            ha: 962.0263161804552,\n            leftSideBearing: 104,\n            advanceWidth: 797,\n        },\n        t: {\n            x_min: 27,\n            x_max: 572,\n            y_min: -18,\n            y_max: 1186,\n            ha: 1204,\n            leftSideBearing: 27,\n            advanceWidth: 569,\n        },\n        u: {\n            x_min: 18,\n            x_max: 981,\n            y_min: -21,\n            y_max: 921,\n            ha: 942,\n            leftSideBearing: 18,\n            advanceWidth: 1024,\n        },\n        v: {\n            x_min: 39,\n            x_max: 976,\n            y_min: -28,\n            y_max: 921,\n            ha: 949,\n            leftSideBearing: 39,\n            advanceWidth: 1024,\n        },\n        w: {\n            x_min: 43,\n            x_max: 1423,\n            y_min: -28,\n            y_max: 921,\n            ha: 949,\n            leftSideBearing: 43,\n            advanceWidth: 1479,\n        },\n        x: {\n            x_min: 35,\n            x_max: 989,\n            y_min: 0,\n            y_max: 921,\n            ha: 921,\n            leftSideBearing: 35,\n            advanceWidth: 1024,\n        },\n        y: {\n            x_min: 29,\n            x_max: 976,\n            y_min: -445,\n            y_max: 921,\n            ha: 1366,\n            leftSideBearing: 29,\n            advanceWidth: 1024,\n        },\n        z: {\n            x_min: 55,\n            x_max: 855,\n            y_min: 0,\n            y_max: 921,\n            ha: 921,\n            leftSideBearing: 55,\n            advanceWidth: 909,\n        },\n        '{': {\n            x_min: 205,\n            x_max: 717,\n            y_min: -377,\n            y_max: 1397,\n            ha: 1774,\n            leftSideBearing: 205,\n            advanceWidth: 983,\n        },\n        '|': {\n            x_min: 137,\n            x_max: 273,\n            y_min: -512,\n            y_max: 1535,\n            ha: 2047,\n            leftSideBearing: 137,\n            advanceWidth: 410,\n        },\n        '}': {\n            x_min: 266,\n            x_max: 778,\n            y_min: -377,\n            y_max: 1397,\n            ha: 1774,\n            leftSideBearing: 266,\n            advanceWidth: 983,\n        },\n        '~': {\n            x_min: 82,\n            x_max: 1028,\n            y_min: 380,\n            y_max: 666,\n            ha: 286,\n            leftSideBearing: 82,\n            advanceWidth: 1108,\n        },\n    },\n    fontFamily: 'serif',\n    resolution: 2048,\n    generatedOn: '2020-10-18T19:03:12.514Z',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Utility methods used by the rest of the VexFlow codebase.\nimport { Flow } from './flow';\nimport { log, RuntimeError } from './util';\nclass Vex {\n    // Users of `Vex.forEach(a, fn)` should use `Array.prototype.forEach()` instead.\n    // static forEach<T>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => void) {\n    //   arr.forEach(callbackFn);\n    // }\n    /**\n     * Take `arr` and return a new list consisting of the sorted, unique,\n     * contents of arr. Does not modify `arr`.\n     */\n    // eslint-disable-next-line\n    static sortAndUnique(arr, cmp, eq) {\n        if (arr.length > 1) {\n            const newArr = [];\n            let last;\n            arr.sort(cmp);\n            for (let i = 0; i < arr.length; ++i) {\n                if (i === 0 || !eq(arr[i], last)) {\n                    newArr.push(arr[i]);\n                }\n                last = arr[i];\n            }\n            return newArr;\n        }\n        else {\n            return arr;\n        }\n    }\n    /** Check if array `arr` contains `obj`. */\n    // eslint-disable-next-line\n    static contains(arr, obj) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n    // Get the 2D Canvas context from DOM element `canvas_sel`.\n    static getCanvasContext(canvasSelector) {\n        if (!canvasSelector) {\n            throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvasSelector);\n        }\n        const canvas = document.getElementById(canvasSelector);\n        if (!(canvas && canvas.getContext)) {\n            throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n        }\n        return canvas.getContext('2d');\n    }\n    /** Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds. */\n    // eslint-disable-next-line\n    static benchmark(s, f) {\n        const start_time = new Date().getTime();\n        f();\n        const elapsed = new Date().getTime() - start_time;\n        log(s, elapsed + 'ms');\n    }\n    // Get stack trace.\n    static stackTrace() {\n        const err = new Error();\n        return err.stack;\n    }\n}\nVex.Flow = Flow;\nexport { Vex };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { GonvilleSmuflFont } from './gonville_glyphs';\nexport function loadGonville() {\n    Font.load('Gonville', GonvilleSmuflFont, CommonMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { CustomFont } from './custom_glyphs';\nexport function loadCustom() {\n    Font.load('Custom', CustomFont, CommonMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// vexflow-gonville.ts is the entry point for vexflow-gonville.js.\n// This version bundles the Gonville music engraving font.\nimport { Flow } from '../src/flow';\nimport { loadCustom } from '../src/fonts/load_custom';\nimport { loadGonville } from '../src/fonts/load_gonville';\nimport { loadTextFonts } from '../src/fonts/textfonts';\nloadGonville();\nloadCustom();\nFlow.setMusicFont('Gonville', 'Custom');\nloadTextFonts();\n// Re-export all exports from index.ts.\nexport * from '../src/index';\n// Also collect all exports into a default export for CJS projects.\nexport * as default from '../src/index';\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { TextFormatter } from '../textformatter';\nimport { PetalumaScriptFont } from './petalumascript_glyphs';\nimport { RobotoSlabFont } from './robotoslab_glyphs';\nimport { SansFontBold } from './sans_bold_text_metrics';\nimport { SansFont } from './sans_text_metrics';\nimport { SerifFont } from './serif_text_metrics';\nexport function loadTextFonts() {\n    // Sans-serif fallback font, very close to Arial\n    {\n        const fontData = SansFontBold;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Usually @ is the tallest and widest character, although not the\n        // highest since it starts below the baseline.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: true,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Generic SANS font',\n        });\n    }\n    // Sans-serif fallback font, very close to Arial\n    {\n        const fontData = SansFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Usually @ is the tallest and widest character, although not the\n        // highest since it starts below the baseline.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Generic SANS font',\n        });\n    }\n    // Serif fallback font, very close to Times\n    {\n        const fontData = SerifFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Generic SERIF font',\n        });\n    }\n    // Roboto Slab\n    {\n        const fontData = RobotoSlabFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Previously we used 'H', but it isn't actually the tallest or the widest.\n        // Interestingly, the lowercase 'b' is the tallest glyph.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Text font to pair with the Bravura / Gonville music fonts.',\n        });\n    }\n    // PetalumaScript\n    {\n        const fontData = PetalumaScriptFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Text font to pair with the Petaluma music font.',\n        });\n    }\n}\n"],"names":["root","factory","exports","module","define","amd","window","globalThis","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","Function","e","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","isCategory","category","checkAncestors","constructorFcn","constructor","CATEGORY","getPrototypeOf","isAccidental","Category","Accidental","isAnnotation","Annotation","isBarline","Barline","isDot","Dot","isGraceNote","GraceNote","isGraceNoteGroup","GraceNoteGroup","isNote","Note","isRenderContext","RenderContext","isStaveNote","StaveNote","isStemmableNote","StemmableNote","isTabNote","TabNote","RuntimeError","Error","code","message","super","globalObject","self","defined","x","undefined","log","block","args","line","Array","slice","join","console","warn","err","stack","midLine","a","b","mid_line","n","parseInt","prefix","text","normalizeAngle","Math","PI","sumArray","arr","reduce","Fraction","GCD","Number","isNaN","t","LCM","LCMM","length","shift","numerator","denominator","set","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","__staticFractionA","copy","__staticFractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","floor","remainder","makeAbs","abs","toString","toSimplifiedString","__staticFractionTmp","toMixedString","s","q","f","parse","str","i","split","BoundingBox","that","y","w","h","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","new_x","new_y","new_w","max","new_h","BoundingBoxComputation","x1","NaN","y1","x2","y2","getX1","getY1","width","height","addPoint","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","p01x","denom","it","p01y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","t1","sqrt","t2","FontWeight","FontStyle","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","fontParser","Fonts","Font","convertSizeToPixelValue","fontSize","SIZE","_a","scaleToPxFrom","pt","parseFloat","unit","replace","toLowerCase","convertSizeToPointValue","validate","size","weight","style","fromCSSString","family","SANS_SERIF","NORMAL","cssFontShorthand","document","createElement","font","fontFamily","fontWeight","fontStyle","toCSSString","fontInfo","st","trim","wt","sz","scaleSize","scaleFactor","isBold","parsedWeight","isItalic","ITALIC","loadWebFont","fontName","woffURL","includeWoff2","fontFace","FontFace","load","fonts","loadWebFonts","host","WEB_FONT_HOST","files","WEB_FONT_FILES","fontPath","data","metrics","setData","setMetrics","name","getName","getData","getMetrics","hasData","getResolution","resolution","getGlyphs","glyphs","lookupMetric","defaultValue","keyParts","currObj","SERIF","px","em","in","mm","cm","PetalumaScript","Index","id","type","class","Registry","getDefaultRegistry","defaultRegistry","enableDefaultRegistry","registry","disableDefaultRegistry","index","clear","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","_b","getElementsByAttribute","attribute","index_attr","index_attr_val","keys","map","k","getElementsByType","getElementsByClass","className","onUpdate","info","includes","Element","newID","ID","children","attrs","getCategory","rendered","addChildElement","child","push","setStyle","setGroupStyle","forEach","getStyle","applyStyle","context","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","indexOf","addClass","removeClass","splice","isRendered","setRendered","getAttributes","getSVGElement","suffix","element","oldID","getBoundingBox","getContext","setContext","setFont","textFont","defaultTextFont","TEXT_FONT","fontIsObject","fontIsString","fontIsUndefined","sizeWeightStyleAreUndefined","assign","getFont","resetFont","setFontSize","getFontSize","fontSizeInPoints","fontSizeInPixels","RESOLUTION","durations","durationAliases","keySignatures","C","num","Am","F","acc","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","G","Em","D","Bm","A","E","B","clefs","treble","line_shift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","int_val","CN","accidental","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","rest","X","octave","shift_right","accidentals","parenRightPaddingAdjustment","bb","db","bs","bss","bbs","ashs","afhf","accSagittal5v7KleismaUp","accSagittal5v7KleismaDown","accSagittal5CommaUp","accSagittal5CommaDown","accSagittal7CommaUp","accSagittal7CommaDown","accSagittal25SmallDiesisUp","accSagittal25SmallDiesisDown","accSagittal35MediumDiesisUp","accSagittal35MediumDiesisDown","accSagittal11MediumDiesisUp","accSagittal11MediumDiesisDown","accSagittal11LargeDiesisUp","accSagittal11LargeDiesisDown","accSagittal35LargeDiesisUp","accSagittal35LargeDiesisDown","accSagittalSharp25SDown","accSagittalFlat25SUp","accSagittalSharp7CDown","accSagittalFlat7CUp","accSagittalSharp5CDown","accSagittalFlat5CUp","accSagittalSharp5v7kDown","accSagittalFlat5v7kUp","accSagittalSharp","accSagittalFlat","accSagittalSharp5v7kUp","accSagittalFlat5v7kDown","accSagittalSharp5CUp","accSagittalFlat5CDown","accSagittalSharp7CUp","accSagittalFlat7CDown","accSagittalSharp25SUp","accSagittalFlat25SDown","accSagittalSharp35MUp","accSagittalFlat35MDown","accSagittalSharp11MUp","accSagittalFlat11MDown","accSagittalSharp11LUp","accSagittalFlat11LDown","accSagittalSharp35LUp","accSagittalFlat35LDown","accSagittalDoubleSharp25SDown","accSagittalDoubleFlat25SUp","accSagittalDoubleSharp7CDown","accSagittalDoubleFlat7CUp","accSagittalDoubleSharp5CDown","accSagittalDoubleFlat5CUp","accSagittalDoubleSharp5v7kDown","accSagittalDoubleFlat5v7kUp","accSagittalDoubleSharp","accSagittalDoubleFlat","accSagittal7v11KleismaUp","accSagittal7v11KleismaDown","accSagittal17CommaUp","accSagittal17CommaDown","accSagittal55CommaUp","accSagittal55CommaDown","accSagittal7v11CommaUp","accSagittal7v11CommaDown","accSagittal5v11SmallDiesisUp","accSagittal5v11SmallDiesisDown","accSagittalSharp5v11SDown","accSagittalFlat5v11SUp","accSagittalSharp7v11CDown","accSagittalFlat7v11CUp","accSagittalSharp55CDown","accSagittalFlat55CUp","accSagittalSharp17CDown","accSagittalFlat17CUp","accSagittalSharp7v11kDown","accSagittalFlat7v11kUp","accSagittalSharp7v11kUp","accSagittalFlat7v11kDown","accSagittalSharp17CUp","accSagittalFlat17CDown","accSagittalSharp55CUp","accSagittalFlat55CDown","accSagittalSharp7v11CUp","accSagittalFlat7v11CDown","accSagittalSharp5v11SUp","accSagittalFlat5v11SDown","accSagittalDoubleSharp5v11SDown","accSagittalDoubleFlat5v11SUp","accSagittalDoubleSharp7v11CDown","accSagittalDoubleFlat7v11CUp","accSagittalDoubleSharp55CDown","accSagittalDoubleFlat55CUp","accSagittalDoubleSharp17CDown","accSagittalDoubleFlat17CUp","accSagittalDoubleSharp7v11kDown","accSagittalDoubleFlat7v11kUp","accSagittal23CommaUp","accSagittal23CommaDown","accSagittal5v19CommaUp","accSagittal5v19CommaDown","accSagittal5v23SmallDiesisUp","accSagittal5v23SmallDiesisDown","accSagittalSharp5v23SDown","accSagittalFlat5v23SUp","accSagittalSharp5v19CDown","accSagittalFlat5v19CUp","accSagittalSharp23CDown","accSagittalFlat23CUp","accSagittalSharp23CUp","accSagittalFlat23CDown","accSagittalSharp5v19CUp","accSagittalFlat5v19CDown","accSagittalSharp5v23SUp","accSagittalFlat5v23SDown","accSagittalDoubleSharp5v23SDown","accSagittalDoubleFlat5v23SUp","accSagittalDoubleSharp5v19CDown","accSagittalDoubleFlat5v19CUp","accSagittalDoubleSharp23CDown","accSagittalDoubleFlat23CUp","accSagittal19SchismaUp","accSagittal19SchismaDown","accSagittal17KleismaUp","accSagittal17KleismaDown","accSagittal143CommaUp","accSagittal143CommaDown","accSagittal11v49CommaUp","accSagittal11v49CommaDown","accSagittal19CommaUp","accSagittal19CommaDown","accSagittal7v19CommaUp","accSagittal7v19CommaDown","accSagittal49SmallDiesisUp","accSagittal49SmallDiesisDown","accSagittal23SmallDiesisUp","accSagittal23SmallDiesisDown","accSagittal5v13MediumDiesisUp","accSagittal5v13MediumDiesisDown","accSagittal11v19MediumDiesisUp","accSagittal11v19MediumDiesisDown","accSagittal49MediumDiesisUp","accSagittal49MediumDiesisDown","accSagittal5v49MediumDiesisUp","accSagittal5v49MediumDiesisDown","accSagittal49LargeDiesisUp","accSagittal49LargeDiesisDown","accSagittal11v19LargeDiesisUp","accSagittal11v19LargeDiesisDown","accSagittal5v13LargeDiesisUp","accSagittal5v13LargeDiesisDown","accSagittalSharp23SDown","accSagittalFlat23SUp","accSagittalSharp49SDown","accSagittalFlat49SUp","accSagittalSharp7v19CDown","accSagittalFlat7v19CUp","accSagittalSharp19CDown","accSagittalFlat19CUp","accSagittalSharp11v49CDown","accSagittalFlat11v49CUp","accSagittalSharp143CDown","accSagittalFlat143CUp","accSagittalSharp17kDown","accSagittalFlat17kUp","accSagittalSharp19sDown","accSagittalFlat19sUp","accSagittalSharp19sUp","accSagittalFlat19sDown","accSagittalSharp17kUp","accSagittalFlat17kDown","accSagittalSharp143CUp","accSagittalFlat143CDown","accSagittalSharp11v49CUp","accSagittalFlat11v49CDown","accSagittalSharp19CUp","accSagittalFlat19CDown","accSagittalSharp7v19CUp","accSagittalFlat7v19CDown","accSagittalSharp49SUp","accSagittalFlat49SDown","accSagittalSharp23SUp","accSagittalFlat23SDown","accSagittalSharp5v13MUp","accSagittalFlat5v13MDown","accSagittalSharp11v19MUp","accSagittalFlat11v19MDown","accSagittalSharp49MUp","accSagittalFlat49MDown","accSagittalSharp5v49MUp","accSagittalFlat5v49MDown","accSagittalSharp49LUp","accSagittalFlat49LDown","accSagittalSharp11v19LUp","accSagittalFlat11v19LDown","accSagittalSharp5v13LUp","accSagittalFlat5v13LDown","accSagittalDoubleSharp23SDown","accSagittalDoubleFlat23SUp","accSagittalDoubleSharp49SDown","accSagittalDoubleFlat49SUp","accSagittalDoubleSharp7v19CDown","accSagittalDoubleFlat7v19CUp","accSagittalDoubleSharp19CDown","accSagittalDoubleFlat19CUp","accSagittalDoubleSharp11v49CDown","accSagittalDoubleFlat11v49CUp","accSagittalDoubleSharp143CDown","accSagittalDoubleFlat143CUp","accSagittalDoubleSharp17kDown","accSagittalDoubleFlat17kUp","accSagittalDoubleSharp19sDown","accSagittalDoubleFlat19sUp","accSagittalShaftUp","accSagittalShaftDown","accSagittalAcute","accSagittalGrave","accSagittal1MinaUp","accSagittal1MinaDown","accSagittal2MinasUp","accSagittal2MinasDown","accSagittal1TinaUp","accSagittal1TinaDown","accSagittal2TinasUp","accSagittal2TinasDown","accSagittal3TinasUp","accSagittal3TinasDown","accSagittal4TinasUp","accSagittal4TinasDown","accSagittal5TinasUp","accSagittal5TinasDown","accSagittal6TinasUp","accSagittal6TinasDown","accSagittal7TinasUp","accSagittal7TinasDown","accSagittal8TinasUp","accSagittal8TinasDown","accSagittal9TinasUp","accSagittal9TinasDown","accSagittalFractionalTinaUp","accSagittalFractionalTinaDown","accidentalNarrowReversedFlat","accidentalNarrowReversedFlatAndFlat","accidentalWilsonPlus","accidentalWilsonMinus","articulations","between_lines","av","aboveCode","belowCode","ao","ah","am","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","Tables","currentMusicFont","MUSIC_FONT_STACK","clefProperties","clef","keyProperties","keyOctaveGlyph","params","options","octave_shift","duration","sanitizeDuration","pieces","toUpperCase","stroke","int_value","customNoteHeadProps","glyphName","codeNoteHead","displaced","integerToNote","integer","noteValue","tabToGlyphProps","fret","scale","glyph","shift_y","glyphMetrics","Glyph","TABLATURE_FONT_SCALE","textWidth","getWidth","articulationCodes","artic","accidentalCodes","ornamentCodes","keySignature","spec","keySpec","notes","acc_list","getKeySignatures","hasKeySignature","durationNumber","durationToFraction","durationToNumber","durationToTicks","ticks","getGlyphProps","durationCodes","glyphTypeProperties","code_head","common","NOTATION_FONT_SCALE","UNISON","SOFTMAX_FACTOR","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RENDER_PRECISION_PLACES","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalMap","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","unicode","sharp","String","fromCharCode","flat","natural","triangle","degrees","circle","validTypes","m","ci","cx","sf","sb","sq","tu","td","TIME4_4","num_beats","beat_value","stem","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","ledger_code_head","beam_count","stem_beam_extension","code_flag_upstem","code_flag_downstem","OutlineCode","ModifierPosition","GlyphCacheEntry","fontStack","point","loadMetrics","bbox","getOutlineBoundingBox","outline","x_shift","y_shift","lookupFontMetric","GlyphOutline","originX","originY","precision","round","nextX","nextY","parts","MOVE","LINE","QUADRATIC","BEZIER","lookupGlyph","x_min","x_max","ha","cached_outline","renderGlyph","ctx","x_pos","y_pos","cache","lookup","customScale","renderOutline","go","beginPath","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","fill","bboxComp","penX","penY","topGlyphs","botGlyphs","originShift","setOptions","reset","getCode","setPoint","setStave","stave","getXShift","setXShift","getYshift","setYShift","checkMetrics","metricsScale","setOriginX","xShift","setOriginY","yShift","setOrigin","render","xPos","yPos","checkStave","renderToStave","getYForGlyphs","Map","entries","CURRENT_CACHE_KEY","entry","Modifier","Position","PositionString","center","CENTER","above","ABOVE","below","BELOW","left","LEFT","right","RIGHT","text_line","spacingFromNextModifier","setWidth","getNote","note","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifierContext","checkModifierContext","setModifierContext","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setXOffset","Music","NUM_TONES","canonical_notes","roots","root_values","root_indices","diatonic_intervals","diatonic_accidentals","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","noteValues","root_index","cn","cb","cbb","dn","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","match","exec","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySigParts","scaleName","keySigString","noteLocation","scaleMap","rootName","noteName","L","DEBUG","format","state","musicFont","noteheadAccidentalPadding","leftShift","left_shift","accidentalSpacing","additionalPadding","accidentalLinePositionsAndSpaceNeeds","prevNote","extraXSpaceNeededForLeftDisplacedNotehead","props","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","extraXSpaceNeeded","spacingBetweenStaveLines","sort","staveLineAccidentalLayoutMetrics","maxExtraXSpaceNeeded","accidentalLinePositionAndSpaceNeeds","priorLineMetric","currentLineMetric","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","clearance","clearanceRequired","collision","applyAccidentals","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","getModifiers","modifier","addModifier","getGraceNotes","render_options","font_scale","parenLeftPadding","parenRightPadding","cautionary","fontScale","parenLeft","parenRight","parenWidth","setAsCautionary","start","getModifierStartXY","accX","accY","Stem","UP","DOWN","WIDTH","HEIGHT","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","getHeight","y_offset","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","min","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stem_x","stem_y","y_base_offset","stemletYOffset","openGroup","pointerBBox","closeGroup","TextFormatter","textWidthCache","textHeightCache","getFontFamilies","registeredFonts","formatterInfo","create","requestedFont","candidates","requestedFamilies","requestedFamily","startsWith","formatter","values","bold","italic","perfectMatch","find","partialMatch","fontSizeInPt","getInfo","registerInfo","overwrite","serifs","monospaced","superscriptOffset","subscriptOffset","maxSizeGlyph","cacheKey","updateParams","localHeightCache","updateCacheKey","BOLD","getGlyphMetrics","character","maxHeight","getWidthForCharacterInEm","advanceWidth","getYForCharacterInPx","rv","yMin","yMax","y_min","y_max","getYForStringInPx","extent","curY","getWidthForTextInEm","cachedWidths","getWidthForTextInPx","AnnotationHorizontalJustify","AnnotationVerticalJustify","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","textFormatter","verticalSpaceNeeded","glyphWidth","horizontalJustification","stemDirection","hasStem","getStemDirection","lines","draw_stem","getStem","getNoteType","getNumLines","verticalJustification","VerticalJustify","TOP","noteLine","getLineNumber","leastString","top_text_line","BOTTOM","greatestString","curBottom","rightOverlap","right_shift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","text_width","text_height","getStemX","stem_ext","spacing","has_stem","checkStem","getYs","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","fillText","HorizontalJustify","centerStem","CENTER_STEM","top","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveOrGraceNote","Articulation","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","easyScoreHook","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","endsWith","setBetweenLines","betweenLines","textLine","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","padding","stemTipY","stemBaseY","getTopY","INITIAL_OFFSET","getBottomY","offsetDirection","articLine","snappedLine","snapLineToStaff","setRawFont","drawDot","color","arc","closePath","Tickable","_preFormatted","_postFormatted","intrinsicTicks","tickMultiplier","modifiers","tupletStack","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","centerXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","pop","setTuplet","addToModifierContext","mc","addMember","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","plotMetrics","xStart","leftDisplacedHeadPx","xPre1","xAbs","xPost1","notePx","xPost2","rightDisplacedHeadPx","xEnd","xFreedomRight","xWidth","yy","spaceDeviation","parseDuration","durationString","dots","parseNoteStruct","noteStruct","durationProps","customTypes","currentTicks","parsedNoteStruct","JSON","stringify","keyProps","noteType","duration_override","glyphProps","customGlyphs","playNote","annotation_spacing","glyph_font_scale","stroke_px","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getGlyph","getGlyphWidth","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","filter","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","getMembers","getState","glyphPx","getNoteStartX","getPoint","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifierPosition","BarlineType","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","SymbolTypes","SymbolModifiers","StaveModifier","placeGlyphOnLine","customShift","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","typeString","single","SINGLE","double","DOUBLE","end","END","repeatBegin","REPEAT_BEGIN","repeatEnd","REPEAT_END","repeatBoth","REPEAT_BOTH","none","NONE","thickness","TYPE","widths","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","setType","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","staveCtx","botY","getBottomLineBottomY","fillRect","begin","dot_x","dot_radius","dot_y","BarNote","barline","Bend","bends","last_width","stringPos","release","phrase","tap","line_width","line_style","bend_width","release_width","updateWidth","setTap","getText","getTextHeight","totalWidth","additional_width","draw_width","lowestY","bend_height","annotation_y","renderBend","cp_x","cp_y","renderRelease","renderArrowHead","yBase","renderText","render_x","measureText","last_bend","last_bend_draw_width","last_drawn_width","ChordSymbol","superSubRatio","global","NO_TEXT_FORMAT","val","noFormat","getMetricForGlyph","glyphCode","engravingFontResolution","spacingBetweenBlocks","getWidthForGlyph","metric","getYShiftForGlyph","yOffset","getXShiftForGlyph","leftSideBearing","kerningOffset","chordSymbol","lowerKerningText","upperKerningText","isSuperscript","symbolModifier","SUPERSCRIPT","isSubscript","SUBSCRIPT","minPadding","symbols","nonSuperWidth","symbol","fontAdj","glyphAdj","symbolWidth","lineSpaces","vAlign","j","symbolBlocks","sup","sub","superSubScale","adj","symbolType","GLYPH","superSubFontSize","TEXT","getYOffsetForText","over","prev","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","getReportWidth","getHorizontal","horizontal","vertical","useKerning","reportWidth","setReportWidth","barIndex","findIndex","xoff","yoff","symIndex","accum","getKerningAdjustment","currSymbol","prevSymbol","adjustment","preKernUpper","preKernLower","some","xx","kerningOffsetPixels","getSymbolBlock","_c","symbolBlock","glyphArgs","glyphPoints","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","stem_base","isSuper","isSub","smallerFontSize","diminished","dim","halfDiminished","augmented","majorSeventh","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","symbolTypes","symbolModifiers","getDots","buildAndAttach","all","dot","setDotShiftY","dot_list","max_shift_map","note_id","dot_shift","x_width","last_line","last_note","prev_dotted_space","half_shiftY","radius","forceFlagRight","FretHandFinger","nums","nums_list","prev_note","shiftLeft","shiftRight","pos","textHeight","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","lastLine","lastNote","num_shift","numWidth","fingerings","fingeringString","number","Fingering","fingering","finger","x_offset","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","NoteHead","custom_glyph","stem_up_x_offset","stem_down_x_offset","note_type","glyph_code","custom_glyph_code","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","fontShift","displacedFontShift","half_spacing","min_y","getYForNote","head_x","categorySuffix","staveSpace","breve_lines","drawSlashNoteHead","setStem","buildStem","buildFlag","hasFlag","flagCode","getBaseCustomNoteHeadGlyphProps","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","setStemDirection","offsets","offsetYBaseStemUp","offsetYTopStemUp","offsetYBaseStemDown","offsetYTopStemDown","getCenterGlyphX","stem_extension_override","setStemLength","drawStem","stemOptions","shiftRestVertical","dir","delta","maxLine","minLine","setKeyLine","getKeyLine","STEM_UP","STEM_DOWN","LEDGER_LINE_OFFSET","minNoteheadPadding","notesList","sortedKeyProps","minL","stemMax","stemMin","maxL","isrest","voice_shift","getVoiceShiftWidth","is_displaced","noteU","noteM","noteL","voiceXShift","lineSpacing","lineDiff","noteUHead","noteLHead","centerRest","ledgerLineStyle","use_default_head_x","_noteHeads","calculateKeyProps","auto_stem","autoStem","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","calcNoteDisplacements","noteProps","notehead","calculateOptimalStemDirection","minY","maxY","halfLineSpacing","frac","resultLine","thisLine","isChord","getNoteHeadBounds","setNoteDisplaced","getRightShift","restLine","isInnerNoteIndex","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","getFlagStyle","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","yTop","Infinity","yBottom","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","noteHeads","note_heads","drawLedgerLines","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","drawModifiers","noteheadParam","noteheadStyle","hasNoBeam","drawFlag","_d","_e","noteStemHeight","flagX","flagY","getStaveNoteScale","drawNoteHeads","super_stem_extension","mid_line_distance","lines_over_octave_from_mid_line","spacing_between_lines","xBegin","shouldRenderStem","stemX","StaveTie","setNotes","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","first_note","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","first_x_px","first_y_px","last_y_px","top_cp_y","bottom_cp_y","center_x","getNotes","getTieStartX","getTieEndX","TabTie","createHammeron","createPulloff","VoiceMode","Voice","Mode","time","voiceTime","resolutionMultiplier","mode","STRICT","ticksUsed","largestTickWidth","softmaxFactor","totalTicks","smallestTickCount","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","tickable","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","expTicksUsed","reCalculateExpTicksUsed","softmax","tickValue","v","exp","addTickable","addTickables","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","grace_notes","show_slur","slur","slur_y_shift","beams","Formatter","joinVoices","getMinTotalWidth","beamNotes","Beam","beam_width","partial_beam_length","graceNote","TieClass","NoteSubGroup","groups","group","TickContext","getNextContext","tContext","contexts","tContexts","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","totalLeftPx","totalRightPx","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","getCurrentTick","setCurrentTick","tick","Ornament","ornament","ornamentRelease","ornamentAttack","reportedWidth","ornamentArticulation","ornamentNoteTransition","ornamentAlignWithNoteHead","ornamentMetrics","delayed","accidentalLowerPadding","accidentalUpperPadding","adjustForStemDirection","stemUpYOffset","setDelayed","setUpperAccidental","accid","accidentalUpper","setLowerAccidental","accidentalLower","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","nextContext","Parenthesis","parentheses","x_widthL","x_widthR","parenthesis","isHTMLCanvas","HTMLCanvasElement","toDataURL","isHTMLDiv","HTMLDivElement","appendChild","CanvasContext","CANVAS_BROWSER_SIZE_LIMIT","sanitizeCanvasDims","limit","context2D","canvas","clearRect","cls","setBackgroundFillStyle","blur","getTransform","setLineCap","capType","lineCap","setLineDash","dash","resize","devicePixelRatio","dpr","rect","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","ATTRIBUTES_TO_IGNORE","path","SVG_NS","TWO_PI","SVGContext","backgroundFillStyle","fontCSSString","svg","parent","pen","defaultFontAttributes","scaleX","scaleY","attributes","groupAttributes","applyAttributes","shadow_attributes","state_stack","svgElementType","createElementNS","lineDash","visibleWidth","visibleHeight","setViewBox","viewBox_or_minX","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","removeChild","rectangle","x0","cos","y0","sin","tmpStartTest","tmpEndTest","large","sweep","getShadowStyle","sa","measureTextCache","txt","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","TextJustification","VoltaType","measureImpl","getBBox","Renderer","buildContext","elementId","backend","background","renderer","lastContext","getCanvasContext","Backends","CANVAS","getSVGContext","SVG","drawDashedLine","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","arg0","arg1","maybeElement","willReadFrequently","LineEndType","StringNumber","stringNumber","verticalPadding","stemPadding","leftPadding","rightPadding","extraXSpaceForDisplacedNotehead","glyphLine","num_shiftR","num_width","num_x_shift","string_number","stem_offset","dashed","leg","drawCircle","setLineEndType","setStringNumber","setLastNote","setDashed","setDrawCircle","len","pattern","Stroke","strokes","strokeList","string","getPositions","strokeShift","all_voices","addEndNote","note_end","line_space","arrow","arrow_shift_x","arrow_y","text_y","Type","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","Vibrato","vibratos","vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","setHarsh","vx","vy","renderVibrato","opts","num_waves","ModifierContext","members","formatted","member","getLeftShift","Clef","types","tab","annotationSmufl","attachment","KeySignature","cancelKeySpec","alterKeySpec","accList","setKeySig","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","xPosition","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","concat","addToStave","convertAccLines","customLines","offset","alterKey","convertToAlterAccList","firstAccidentalType","cancelAccList","getEndClef","getClef","Repetition","symbol_type","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSignoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","draw_coda","text_x","symbol_x","modifierWidth","getVerticalBarWidth","StaveSection","section","drawRect","shift_x","setStaveSection","textY","headroom","StaveTempo","tempo","setTempo","bpm","noteTextFont","noteTextFormatter","stem_height","flagMetrics","TextNote","GLYPHS","segno","mordent_upper","mordent_lower","p","z","coda","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","superscript","subscript","smooth","justification","struct","Justification","StaveText","setStaveText","setText","getBottomLineY","Volta","volta","top_y","vert_height","BEGIN_END","TimeSignatureGlyph","timeSignature","topDigits","botDigits","topWidth","timeSigType","topGlyph","botWidth","botGlyph","lineShift","topStartX","botStartX","start_x","topLine","bottomLine","TimeSignature","timeSpec","customPadding","validate_args","is_numeric","fontLineShift","setTimeSig","parseTimeSpec","numbers","test","assertIsValidTimeSig","makeTimeSignatureGlyph","setGlyph","getTimeSpec","getIsNumeric","setIsNumeric","isNumeric","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","Stave","defaultPadding","end_x","measure","endClef","vertical_bar_width","num_lines","fill_style","left_bar","right_bar","spacing_between_lines_px","space_above_staff_ln","space_below_staff_ln","top_text_position","bottom_text_position","line_config","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","setDefaultLedgerLineStyle","visible","setNoteStartX","getNoteEndX","setNumLines","mod","setMeasure","getMeasure","getModifierXShift","begBarline","setRepetitionType","setVoltaType","number_t","setSection","staveSection","getLineForY","setBegBarType","setEndBarType","setClef","clefSpec","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","formatBegModifiers","staves","adjustCategoryStartX","minStartX","adjustX","allModifiers","bAdjust","maxX","drawBoldDoubleLine","topX","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","texts","newType","content","SINGLE_RIGHT","THIN_DOUBLE","attachment_height","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","noteIndex","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","SimpleFormat","paddingBetween","accumulator","plotDebugging","stavePadding","contextGaps","gaps","gap","totalCost","toFixed","total","FormatAndDraw","auto_beam","align_rests","applyAndGetBeams","formatToStave","FormatAndDrawTab","tabstave","tabnotes","autobeam","notevoice","tabvoice","AlignRestsToNotes","alignAllNotes","alignTuplets","currTickable","prevTickable","formatterOptions","globalSoftmax","maxIterations","justifyWidth","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","array","list","modifierContexts","lossHistory","alignRests","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","tickToContextMap","integerTicks","staveTickToContextMap","newContext","makeContext","addToContext","tickList","createContexts","contextArray","getTickContexts","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","calcMinDistance","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","tune","alpha","current","cost","optionsParam","TupletLocation","Tuplet","LOCATION_TOP","LOCATION_BOTTOM","NESTING_OFFSET","tupletMetrics","numerator_glyphs","denom_glyphs","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","ratioed","setTupletLocation","location","resolveGlyphs","attach","detach","setBracketed","setRatioed","getBeatsOccupied","setBeatsOccupied","beats","setNotesOccupied","unshift","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nested_tuplet_y_offset","topModifierOffset","modLines","modY","noteHeadOffset","stemOffset","lineCheck","nn","bottom_y","addGlyphWidth","notation_start_x","shiftY","colon_x","colon_radius","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_RIGHT","BEAM_BOTH","getDefaultBeamGroups","time_sig","beatTotal","beatValue","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","vf_notes","memo","unbeamable","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","show_stemlets","secondary_breaks","secondary_break_ticks","flat_beams","flat_beam_offset","slope","forcedPartialDirections","stem_weight","break_on_indices","max_slope","min_slope","slope_iterations","slope_cost","stemlet_extension","min_flat_beam_offset","beamCount","breakSecondaryAt","indices","setPartialBeamSideAt","side","unsetPartialBeamSideAt","getSlopeY","calculateSlope","firstNote","initialSlope","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","crossStemExtension","totalBeamWidth","lookupBeamDirection","prev_tick","next_tick","forcedBeamDirection","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","getBeamLines","tick_of_duration","beam_started","beam_lines","current_beam","previous_should_break","tick_tally","should_break","next_note","beam_alone","beam_direction","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","ClefNote","abs_x","Crescendo","extend_left","extend_right","decrescendo","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","renderHairpin","CurvePosition","Curve","nearHead","NEAR_HEAD","nearTop","NEAR_TOP","from","to","position_end","invert","cps","renderCurve","first_x","first_y","last_x","last_y","cp0x","cp0y","cp_spacing","end_metric","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","bind","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","standardAccidentals","notePiece","GhostNote","setId","commaSeparatedRegex","setClass","defaults","throwOnError","parser","ERROR_MSG","parameter","GlyphNote","ignoreTicks","SCALE","slash","ret","staveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beam_slope","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","KeySigNote","semibreve_rest","MultiMeasureRest","number_of_measures","xs","hasPaddingLeft","hasPaddingRight","hasLineThickness","hasSymbolSpacing","padding_left","padding_right","line_thickness","symbol_spacing","use_symbols","show_number","number_line","number_glyph_point","serif_thickness","semibreve_rest_glyph_scale","getXs","drawLine","spacingBetweenLines","lineThicknessHalf","serifThickness","bot","leftIndented","rightIndented","lineTop","lineBottom","drawSymbols","n4","n2","n1","get_semibreve_rest","rest_scale","rest_width","yMiddle","timeSig","drawPedalGlyph","glyph_data","PedalMarking","createSustain","createSostenuto","pedal","MIXED","setCustomText","createUnaCorda","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","pedal_depress","pedal_release","mixed","CODES","RepeatNote","drawArrowHead","StaveLine","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","applyLineStyle","applyFontStyle","drawArrowLine","pt1","pt2","both_arrows","distance","ratio","end_y","start_y","line_angle","angle1","angle2","top_x","bottom_x","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","vertical_position","System","partStaves","partStaveInfos","partVoices","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","getStaves","getVoices","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","addVoices","options_details","debugNoteMetricsYs","part","lastY","glyphPropsArr","positions","ghost","draw_dots","draw_stem_through_stave","setGhost","getStemY","stemDownLine","stemStartLine","flag_x","flag_y","drawStemThrough","stemThrough","stemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","strings","containsLastString","containsFirstString","line_ys","isTopBound","isBottomBound","getPartialStemLines","strings_used","stem_through","getUnusedStringGroups","drawPositions","tab_x","render_stem","TabStave","addTabGlyph","TextBracket","TextBracketPosition","Positions","PositionsString","stop","show_bracket","underline_superscript","main_measure","main_width","main_height","super_y","super_measure","super_width","super_height","line_y","TextDynamics","sequence","glyph_font_size","total_width","letter","letter_x","current_letter","TimeSigNote","tsGlyph","VibratoBracket","bracket_data","stop_x","Factory","newFromElementId","renderQ","systems","initRenderer","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","kerning","upperAccidental","lowerAccidental","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","curve","tie","vibratoBracket","textBracket","system","GraceTabNote","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","StaveHairpin","FormatByTicksAndDraw","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","left_shift_px","right_shift_px","setRenderOptions","hairpin","dis","staff_height","l_shift","r_shift","CRESC","DECRESC","TabSlide","SLIDE_UP","SLIDE_DOWN","createSlideUp","createSlideDown","first_fret","last_fret","slide_y","Tremolo","y_spacing_scale","extra_stroke_scale","y_spacing","Tuning","names","standard","dagdad","dropd","standardBanjo","tuningString","tuningValues","setTuning","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","Flow","BUILD","VERSION","DATE","setMusicFont","fontNames","fetchMusicFont","fontModuleOrPath","getMusicFont","getMusicFontStack","CommonMetrics","smufl","endPaddingMax","endPaddingMin","unalignedNotePadding","csymDiminished","csymHalfDiminished","csymAugmented","csymParensLeftTall","csymParensRightTall","csymBracketLeftTall","csymBracketRightTall","csymParensLeftVeryTall","csymParensRightVeryTall","csymDiagonalArrangementSlash","csymMinor","csymMajorSeventh","accidentalSharp","accidentalFlat","clef_default","shiftX","clef_small","brassScoop","brassDoitMedium","brassFallLipShort","brassLiftMedium","brassFallRoughMedium","brassBend","brassMuteClosed","brassMuteOpen","brassFlip","brassJazzTurn","brassSmear","default","gracenote","pedalMarking","digits","shiftLine","articStaccatissimoAbove","articStaccatissimoBelow","tremolo","offsetYStemUp","offsetYStemDown","offsetXStemUp","offsetXStemDown","grace","staveRepetition","symbolText","offsetX","offsetY","heightAdjustmentForFlag","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadTriangleUpWhole","noteheadXHalf","noteheadXBlack","noteheadXWhole","noteheadHalf","noteheadBlack","noteheadSquareWhite","staveTempo","gClef","clefNote_default","clefNote_small","stroke_straight","arrowheadBlackDown","arrowheadBlackUp","stroke_wiggly","breathMarkTick","breathMarkComma","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentShortTrill","CustomFont","vexAccidentalMicrotonal1","vexAccidentalMicrotonal3","vexAccidentalMicrotonal4","vexNoteHeadRectBlack","vexNoteHeadRectWhite","vexWiggleArpeggioUp","GonvilleSmuflFont","bracketTop","bracketBottom","barlineTick","cClef","fClef","unpitchedPercussionClef1","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","timeSigPlus","timeSigPlusSmall","timeSigMinus","timeSigParensRight","timeSigParensRightSmall","timeSigParensLeft","timeSigParensLeftSmall","noteheadDoubleWhole","noteheadWhole","noteheadCircleX","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalNatural","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalBuyukMucennebFlat","accidentalBuyukMucennebSharp","accidentalBakiyeFlat","accidentalKomaSharp","accidentalKucukMucennebSharp","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articMarcatoAbove","articMarcatoBelow","fermataAbove","fermataBelow","fermataLongAbove","fermataLongBelow","fermataVeryLongAbove","fermataVeryLongBelow","fermataVeryShortAbove","fermataVeryShortBelow","fermataShortAbove","fermataShortBelow","breathMarkUpbow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restWholeLegerLine","restHalf","restHalfLegerLine","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedSnapPizzicatoBelow","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","wiggleArpeggiatoUp","generatedOn","PetalumaScriptFont","$","I","J","K","N","O","Q","U","V","Y","Z","_","l","RobotoSlabFont","SansFontBold","SansFont","Description","SerifFont","Vex","sortAndUnique","cmp","eq","newArr","last","contains","canvasSelector","benchmark","start_time","Date","getTime","stackTrace","fontData","description","loadTextFonts"],"sourceRoot":""}