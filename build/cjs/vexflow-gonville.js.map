{"version":3,"file":"vexflow-gonville.js","mappings":"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","sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/webpack/runtime/define property getters","webpack://Vex/webpack/runtime/global","webpack://Vex/webpack/runtime/hasOwnProperty shorthand","webpack://Vex/webpack/runtime/make namespace object","webpack://Vex/./src/typeguard.ts","webpack://Vex/./src/util.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/boundingboxcomputation.ts","webpack://Vex/./src/font.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/glyph.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/textformatter.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/rendercontext.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/parenthesis.ts","webpack://Vex/./src/web.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/timesigglyph.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/flow.ts","webpack://Vex/./src/version.ts","webpack://Vex/./src/fonts/custom_glyphs.ts","webpack://Vex/./src/fonts/custom_metrics.ts","webpack://Vex/./src/fonts/gonville_glyphs.ts","webpack://Vex/./src/fonts/gonville_metrics.ts","webpack://Vex/./src/fonts/petalumascript_glyphs.ts","webpack://Vex/./src/fonts/robotoslab_glyphs.ts","webpack://Vex/./src/vex.ts","webpack://Vex/./src/fonts/load_gonville.ts","webpack://Vex/./src/fonts/load_custom.ts","webpack://Vex/./entry/vexflow-gonville.ts","webpack://Vex/./src/fonts/textfonts.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})((typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : this), function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Use instead of `instanceof` as a more flexible type guard.\n * @param obj check if this object's CATEGORY matches the provided category.\n * @param category a string representing a category of VexFlow objects.\n * @param checkAncestors defaults to `true`, so we walk up the prototype chain to look for a matching `CATEGORY`.\n *        If `false`, we do not check the superclass or other ancestors.\n * @returns true if `obj` has a static `CATEGORY` property that matches `category`.\n */\nexport function isCategory(obj, category, checkAncestors = true) {\n    // obj is undefined, a number, a primitive string, or null.\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    // `obj.constructor` is a reference to the constructor function that created the `obj` instance.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\n    let constructorFcn = obj.constructor;\n    // Check if the object's static .CATEGORY matches the provided category.\n    if (checkAncestors) {\n        // Walk up the prototype chain to look for a matching obj.constructor.CATEGORY.\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        // Do not walk up the prototype chain. Just check this particular object's static .CATEGORY string.\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n    }\n}\nexport const isAccidental = (obj) => isCategory(obj, Category.Accidental);\nexport const isAnnotation = (obj) => isCategory(obj, Category.Annotation);\nexport const isBarline = (obj) => isCategory(obj, Category.Barline);\nexport const isDot = (obj) => isCategory(obj, Category.Dot);\nexport const isGraceNote = (obj) => isCategory(obj, Category.GraceNote);\nexport const isGraceNoteGroup = (obj) => isCategory(obj, Category.GraceNoteGroup);\nexport const isNote = (obj) => isCategory(obj, Category.Note);\nexport const isRenderContext = (obj) => isCategory(obj, Category.RenderContext);\nexport const isStaveNote = (obj) => isCategory(obj, Category.StaveNote);\nexport const isStemmableNote = (obj) => isCategory(obj, Category.StemmableNote);\nexport const isTabNote = (obj) => isCategory(obj, Category.TabNote);\n// 'const' enums are erased by the TypeScript compiler. The string values are inlined at all the use sites.\n// See: https://www.typescriptlang.org/docs/handbook/enums.html#const-enums\nexport var Category;\n(function (Category) {\n    Category[\"Accidental\"] = \"Accidental\";\n    Category[\"Annotation\"] = \"Annotation\";\n    Category[\"Articulation\"] = \"Articulation\";\n    Category[\"Barline\"] = \"Barline\";\n    Category[\"BarNote\"] = \"BarNote\";\n    Category[\"Beam\"] = \"Beam\";\n    Category[\"Bend\"] = \"Bend\";\n    Category[\"ChordSymbol\"] = \"ChordSymbol\";\n    Category[\"Clef\"] = \"Clef\";\n    Category[\"ClefNote\"] = \"ClefNote\";\n    Category[\"Crescendo\"] = \"Crescendo\";\n    Category[\"Curve\"] = \"Curve\";\n    Category[\"Dot\"] = \"Dot\";\n    Category[\"Element\"] = \"Element\";\n    Category[\"Fraction\"] = \"Fraction\";\n    Category[\"FretHandFinger\"] = \"FretHandFinger\";\n    Category[\"GhostNote\"] = \"GhostNote\";\n    Category[\"Glyph\"] = \"Glyph\";\n    Category[\"GlyphNote\"] = \"GlyphNote\";\n    Category[\"GraceNote\"] = \"GraceNote\";\n    Category[\"GraceNoteGroup\"] = \"GraceNoteGroup\";\n    Category[\"GraceTabNote\"] = \"GraceTabNote\";\n    Category[\"KeySignature\"] = \"KeySignature\";\n    Category[\"KeySigNote\"] = \"KeySigNote\";\n    Category[\"Modifier\"] = \"Modifier\";\n    Category[\"MultiMeasureRest\"] = \"MultiMeasureRest\";\n    Category[\"Note\"] = \"Note\";\n    Category[\"NoteHead\"] = \"NoteHead\";\n    Category[\"NoteSubGroup\"] = \"NoteSubGroup\";\n    Category[\"Ornament\"] = \"Ornament\";\n    Category[\"Parenthesis\"] = \"Parenthesis\";\n    Category[\"PedalMarking\"] = \"PedalMarking\";\n    Category[\"RenderContext\"] = \"RenderContext\";\n    Category[\"RepeatNote\"] = \"RepeatNote\";\n    Category[\"Repetition\"] = \"Repetition\";\n    Category[\"Stave\"] = \"Stave\";\n    Category[\"StaveConnector\"] = \"StaveConnector\";\n    Category[\"StaveHairpin\"] = \"StaveHairpin\";\n    Category[\"StaveLine\"] = \"StaveLine\";\n    Category[\"StaveModifier\"] = \"StaveModifier\";\n    Category[\"StaveNote\"] = \"StaveNote\";\n    Category[\"StaveSection\"] = \"StaveSection\";\n    Category[\"StaveTempo\"] = \"StaveTempo\";\n    Category[\"StaveText\"] = \"StaveText\";\n    Category[\"StaveTie\"] = \"StaveTie\";\n    Category[\"Stem\"] = \"Stem\";\n    Category[\"StemmableNote\"] = \"StemmableNote\";\n    Category[\"StringNumber\"] = \"StringNumber\";\n    Category[\"Stroke\"] = \"Stroke\";\n    Category[\"System\"] = \"System\";\n    Category[\"TabNote\"] = \"TabNote\";\n    Category[\"TabSlide\"] = \"TabSlide\";\n    Category[\"TabStave\"] = \"TabStave\";\n    Category[\"TabTie\"] = \"TabTie\";\n    Category[\"TextBracket\"] = \"TextBracket\";\n    Category[\"TextDynamics\"] = \"TextDynamics\";\n    Category[\"TextNote\"] = \"TextNote\";\n    Category[\"Tickable\"] = \"Tickable\";\n    Category[\"TimeSignature\"] = \"TimeSignature\";\n    Category[\"TimeSigNote\"] = \"TimeSigNote\";\n    Category[\"Tremolo\"] = \"Tremolo\";\n    Category[\"Tuplet\"] = \"Tuplet\";\n    Category[\"Vibrato\"] = \"Vibrato\";\n    Category[\"VibratoBracket\"] = \"VibratoBracket\";\n    Category[\"Voice\"] = \"Voice\";\n    Category[\"Volta\"] = \"Volta\";\n})(Category || (Category = {}));\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// Note: Keep this module free of imports to reduce the chance of circular dependencies.\n/** `RuntimeError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\n/** VexFlow can be used outside of the browser (e.g., Node) where `window` may not be defined. */\n// eslint-disable-next-line\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\n/**\n * Check that `x` is of type `T` and not `undefined`.\n * If `x` is `undefined`, throw a RuntimeError with the optionally provided error code and message.\n */\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\n/** Default log function sends all arguments to console. */\n// eslint-disable-next-line\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\n/** Dump warning to console. */\n// eslint-disable-next-line\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a, b) {\n    let mid_line = b + (a - b) / 2;\n    if (mid_line % 2 > 0) {\n        mid_line = roundN(mid_line * 10, 5) / 10;\n    }\n    return mid_line;\n}\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text) {\n    return `vf-${text}`;\n}\n/**\n * Convert an arbitrary angle in radians to the equivalent one in the range [0, pi).\n */\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// Author: Joshua Koo / @zz85\n// Author: @incompleteopus\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/** Fraction represents a rational number. */\nexport class Fraction {\n    /** Set the numerator and denominator. */\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    static get CATEGORY() {\n        return Category.Fraction;\n    }\n    /**\n     * GCD: Greatest common divisor using the Euclidean algorithm.\n     * Note: GCD(0, 0) => 0 and GCD(0, n) => n.\n     */\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    /** LCM: Lowest common multiple. */\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    /** Lowest common multiple for more than two numbers. */\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            // args.shift() removes the first number.\n            // LCM the first number with the rest of the numbers.\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    /** Set the numerator and denominator. */\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    /** Return the value of the fraction. */\n    value() {\n        return this.numerator / this.denominator;\n    }\n    /** Simplify numerator and denominator using GCD. */\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    /** Add value of another fraction. */\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Substract value of another fraction. */\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Multiply by value of another fraction. */\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    /** Divide by value of another Fraction. */\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    /** Simplify both sides and check if they are equal. */\n    equals(compare) {\n        const a = Fraction.__staticFractionA.copy(compare).simplify();\n        const b = Fraction.__staticFractionB.copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    /** Greater than operator. */\n    greaterThan(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    /** Greater than or equals operator. */\n    greaterThanEquals(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    /** Less than operator. */\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    /** Less than or equals operator. */\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    /** Return a new copy with current values. */\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    /** Copy value of another fraction. */\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other, 1);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    /** Return the integer component (eg. 5/2 => 2). */\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    /** Return the remainder component (eg. 5/2 => 1). */\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    /** Calculate absolute value. */\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    /** Return a raw string representation (eg. \"5/2\"). */\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    /** Return a simplified string respresentation. */\n    toSimplifiedString() {\n        return Fraction.__staticFractionTmp.copy(this).simplify().toString();\n    }\n    /** Return string representation in mixed form. */\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = Fraction.__staticFractionTmp.copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    /** Parse a fraction string. */\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\n// Cached objects for comparisons.\nFraction.__staticFractionA = new Fraction();\nFraction.__staticFractionB = new Fraction();\nFraction.__staticFractionTmp = new Fraction();\n/** Helper function to extract the numerator and denominator from another fraction. */\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        // Both params are numbers, so we return them as [numerator, denominator].\n        return [n, d];\n    }\n    else {\n        // First param is a Fraction object. We ignore the second param.\n        return [n.numerator, n.denominator];\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nexport class BoundingBox {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    /**\n     * Create a new copy.\n     */\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    /** Get x position. */\n    getX() {\n        return this.x;\n    }\n    /** Get y position. */\n    getY() {\n        return this.y;\n    }\n    /** Get width. */\n    getW() {\n        return this.w;\n    }\n    /** Get height. */\n    getH() {\n        return this.h;\n    }\n    /** Set x position. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Set y position. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Set width. */\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    /** Set height. */\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    /** Move to position. */\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    /** Clone. */\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    /**\n     * Merge my box with given box. Creates a bigger bounding box unless\n     * the given box is contained in this one.\n     */\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const new_x = this.x < that.x ? this.x : that.x;\n        const new_y = this.y < that.y ? this.y : that.y;\n        const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n        const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n        this.x = new_x;\n        this.y = new_y;\n        this.w = new_w;\n        this.h = new_h;\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n/**\n * BoundingBoxComputation computes metrics for a bounding box by continuously\n * taking canvas path commands.\n *\n * Warning: This class is merely a crutch to get bounding box information without\n * explicit metadata. This is likely to get deprecated following SMuFL support.\n *\n * based on: https://github.com/canvg/canvg/blob/master/src/BoundingBox.ts (MIT License)\n */\nexport class BoundingBoxComputation {\n    constructor() {\n        this.x1 = Number.NaN;\n        this.y1 = Number.NaN;\n        this.x2 = Number.NaN;\n        this.y2 = Number.NaN;\n    }\n    /** Get calculated X1. */\n    getX1() {\n        return this.x1;\n    }\n    /** Get calculated Y1. */\n    getY1() {\n        return this.y1;\n    }\n    /** Get calculated width. */\n    width() {\n        return this.x2 - this.x1;\n    }\n    /** Get calculated height. */\n    height() {\n        return this.y2 - this.y1;\n    }\n    /** Add point to BoundingBox. */\n    addPoint(x, y) {\n        if (isNaN(this.x1) || x < this.x1)\n            this.x1 = x;\n        if (isNaN(this.x2) || x > this.x2)\n            this.x2 = x;\n        if (isNaN(this.y1) || y < this.y1)\n            this.y1 = y;\n        if (isNaN(this.y2) || y > this.y2)\n            this.y2 = y;\n    }\n    /** Add X to BoundingBox. */\n    addX(x) {\n        this.addPoint(x, this.y1);\n    }\n    /** Add Y to BoundingBox. */\n    addY(y) {\n        this.addPoint(this.x1, y);\n    }\n    /** Add quadratic curve to BoundingBox. */\n    addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n        this.addPoint(p0x, p0y);\n        this.addPoint(p2x, p2y);\n        const p01x = p1x - p0x;\n        const p12x = p2x - p1x;\n        let denom = p01x - p12x;\n        if (denom != 0) {\n            const t = p01x / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addX(it * it * p0x + 2 * it * t * p1x + t * t * p2x);\n            }\n        }\n        const p01y = p1y - p0y;\n        const p12y = p2y - p1y;\n        denom = p01y - p12y;\n        if (denom != 0) {\n            const t = p01y / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addY(it * it * p0y + 2 * it * t * p1y + t * t * p2y);\n            }\n        }\n    }\n    /** Add bezier curve to BoundingBox. */\n    addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n        // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n        const p0 = [p0x, p0y];\n        const p1 = [p1x, p1y];\n        const p2 = [p2x, p2y];\n        const p3 = [p3x, p3y];\n        let i;\n        this.addPoint(p0[0], p0[1]);\n        this.addPoint(p3[0], p3[1]);\n        const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n            3 * Math.pow(1 - t, 2) * t * p1[i] +\n            3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n            Math.pow(t, 3) * p3[i];\n        for (i = 0; i <= 1; i++) {\n            const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            const c = 3 * p1[i] - 3 * p0[i];\n            if (a === 0) {\n                if (b === 0)\n                    continue;\n                const t = -c / b;\n                if (0 < t && t < 1) {\n                    if (i === 0)\n                        this.addX(f(t, i));\n                    if (i === 1)\n                        this.addY(f(t, i));\n                }\n                continue;\n            }\n            const b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0)\n                continue;\n            const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                if (i === 0)\n                    this.addX(f(t1, i));\n                if (i === 1)\n                    this.addY(f(t1, i));\n            }\n            const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                if (i === 0)\n                    this.addX(f(t2, i));\n                if (i === 1)\n                    this.addY(f(t2, i));\n            }\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defined } from './util';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\n// Internal <span></span> element for parsing CSS font shorthand strings.\nlet fontParser;\nconst Fonts = {};\nexport class Font {\n    /**\n     * Use `Font.load(fontName)` to get a Font object.\n     * Do not call this constructor directly.\n     */\n    constructor(fontName) {\n        this.name = fontName;\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of pixels that is equivalent to `fontSize`\n     */\n    static convertSizeToPixelValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of points that is equivalent to `fontSize`\n     */\n    static convertSizeToPointValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param f\n     * @param size\n     * @param weight\n     * @param style\n     * @returns the `size` field will include the units (e.g., '12pt', '16px').\n     */\n    static validate(f, size, weight, style) {\n        // If f is a string but all other arguments are undefined, we assume that\n        // f is CSS font shorthand (e.g., 'italic bold 10pt Arial').\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            // f is a FontInfo object, so we extract its fields.\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            // f is a string representing the font family name or undefined.\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Font.SANS_SERIF;\n        size = size !== null && size !== void 0 ? size : Font.SIZE + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        // If size is a number, we assume the unit is `pt`.\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        // If weight is a number (e.g., 900), turn it into a string representation of that number.\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        // At this point, `family`, `size`, `weight`, and `style` are all strings.\n        return { family, size, weight, style };\n    }\n    /**\n     * @param cssFontShorthand a string formatted as CSS font shorthand (e.g., 'italic bold 15pt Arial').\n     */\n    static fromCSSString(cssFontShorthand) {\n        // Let the browser parse this string for us.\n        // First, create a span element.\n        // Then, set its style.font and extract it back out.\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    /**\n     * @returns a CSS font shorthand string of the form `italic bold 16pt Arial`.\n     */\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = ''; // no space! Omit the style section.\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = ''; // no space! Omit the weight section.\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Font.SIZE + 'pt ';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            // size is already a string.\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Font.SANS_SERIF;\n        return `${style}${weight}${size}${family}`;\n    }\n    /**\n     * @param fontSize a number representing a font size, or a string font size with units.\n     * @param scaleFactor multiply the size by this factor.\n     * @returns size * scaleFactor (e.g., 16pt * 3 = 48pt, 8px * 0.5 = 4px, 24 * 2 = 48).\n     * If the fontSize argument was a number, the return value will be a number.\n     * If the fontSize argument was a string, the return value will be a string.\n     */\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, ''); // Remove all numbers, dots, spaces.\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    /**\n     * @param weight a string (e.g., 'bold') or a number (e.g., 600 / semi-bold in the OpenType spec).\n     * @returns true if the font weight indicates bold.\n     */\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            // a string can be 'bold' or '700'\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    /**\n     * @param style\n     * @returns true if the font style indicates 'italic'.\n     */\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    /**\n     * @param fontName\n     * @param woffURL The absolute or relative URL to the woff file.\n     * @param includeWoff2 If true, we assume that a woff2 file is in\n     * the same folder as the woff file, and will append a `2` to the url.\n     */\n    // Support distributions of the typescript compiler that do not yet include the FontFace API declarations.\n    // eslint-disable-next-line\n    // @ts-ignore\n    static loadWebFont(fontName, woffURL, includeWoff2 = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const woff2URL = includeWoff2 ? `url(${woffURL}2) format('woff2'), ` : '';\n            const woff1URL = `url(${woffURL}) format('woff')`;\n            const woffURLs = woff2URL + woff1URL;\n            // eslint-disable-next-line\n            // @ts-ignore\n            const fontFace = new FontFace(fontName, woffURLs);\n            yield fontFace.load();\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.fonts.add(fontFace);\n            return fontFace;\n        });\n    }\n    /**\n     * Load the web fonts that are used by ChordSymbol. For example, `flow.html` calls:\n     *   `await Vex.Flow.Font.loadWebFonts();`\n     * Alternatively, you may load web fonts with a stylesheet link (e.g., from Google Fonts),\n     * and a @font-face { font-family: ... } rule in your CSS.\n     * If you do not load either of these fonts, ChordSymbol will fall back to Times or Arial,\n     * depending on the current music engraving font.\n     *\n     * You can customize `Font.WEB_FONT_HOST` and `Font.WEB_FONT_FILES` to load different fonts\n     * for your app.\n     */\n    static loadWebFonts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const host = Font.WEB_FONT_HOST;\n            const files = Font.WEB_FONT_FILES;\n            for (const fontName in files) {\n                const fontPath = files[fontName];\n                Font.loadWebFont(fontName, host + fontPath);\n            }\n        });\n    }\n    /**\n     * @param fontName\n     * @param data optionally set the Font object's `.data` property.\n     *   This is usually done when setting up a font for the first time.\n     * @param metrics optionally set the Font object's `.metrics` property.\n     *   This is usually done when setting up a font for the first time.\n     * @returns a Font object with the given `fontName`.\n     *   Reuse an existing Font object if a matching one is found.\n     */\n    static load(fontName, data, metrics) {\n        let font = Fonts[fontName];\n        if (!font) {\n            font = new Font(fontName);\n            Fonts[fontName] = font;\n        }\n        if (data) {\n            font.setData(data);\n        }\n        if (metrics) {\n            font.setMetrics(metrics);\n        }\n        return font;\n    }\n    getName() {\n        return this.name;\n    }\n    getData() {\n        return defined(this.data, 'FontError', 'Missing font data');\n    }\n    getMetrics() {\n        return defined(this.metrics, 'FontError', 'Missing metrics');\n    }\n    setData(data) {\n        this.data = data;\n    }\n    setMetrics(metrics) {\n        this.metrics = metrics;\n    }\n    hasData() {\n        return this.data !== undefined;\n    }\n    getResolution() {\n        return this.getData().resolution;\n    }\n    getGlyphs() {\n        return this.getData().glyphs;\n    }\n    /**\n     * Use the provided key to look up a value in this font's metrics file (e.g., bravura_metrics.ts, petaluma_metrics.ts).\n     * @param key is a string separated by periods (e.g., stave.endPaddingMax, clef.lineCount.'5'.shiftY).\n     * @param defaultValue is returned if the lookup fails.\n     * @returns the retrieved value (or `defaultValue` if the lookup fails).\n     */\n    // eslint-disable-next-line\n    lookupMetric(key, defaultValue) {\n        const keyParts = key.split('.');\n        // Start with the top level font metrics object, and keep looking deeper into the object (via each part of the period-delimited key).\n        let currObj = this.getMetrics();\n        for (let i = 0; i < keyParts.length; i++) {\n            const keyPart = keyParts[i];\n            const value = currObj[keyPart];\n            if (value === undefined) {\n                // If the key lookup fails, we fall back to the defaultValue.\n                return defaultValue;\n            }\n            // The most recent lookup succeeded, so we drill deeper into the object.\n            currObj = value;\n        }\n        // After checking every part of the key (i.e., the loop completed), return the most recently retrieved value.\n        return currObj;\n    }\n    /** For debugging. */\n    toString() {\n        return '[' + this.name + ' Font]';\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// STATIC MEMBERS\n/** Default sans-serif font family. */\nFont.SANS_SERIF = 'Arial, sans-serif';\n/** Default serif font family. */\nFont.SERIF = 'Times New Roman, serif';\n/** Default font size in `pt`. */\nFont.SIZE = 10;\n// CSS Font Sizes: 36pt == 48px == 3em == 300% == 0.5in\n/** Given a length (for units: pt, px, em, %, in, mm, cm) what is the scale factor to convert it to px? */\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\n/**\n * Customize this field to specify a different CDN for delivering web fonts.\n * Alternative: https://cdn.jsdelivr.net/npm/vexflow-fonts@1.0.3/\n * Or you can use your own host.\n */\nFont.WEB_FONT_HOST = 'https://unpkg.com/vexflow-fonts@1.0.3/';\n/**\n * These font files will be loaded from the CDN specified by `Font.WEB_FONT_HOST` when\n * `await Font.loadWebFonts()` is called. Customize this field to specify a different\n * set of fonts to load. See: `Font.loadWebFonts()`.\n */\nFont.WEB_FONT_FILES = {\n    'Roboto Slab': 'robotoslab/RobotoSlab-Medium_2.001.woff',\n    PetalumaScript: 'petaluma/PetalumaScript_1.10_FS.woff',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\nimport { RuntimeError } from './util';\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    constructor() {\n        this.index = new Index();\n    }\n    static getDefaultRegistry() {\n        return Registry.defaultRegistry;\n    }\n    // If you call `enableDefaultRegistry`, any new elements will auto-register with\n    // the provided registry as soon as they're constructed.\n    static enableDefaultRegistry(registry) {\n        Registry.defaultRegistry = registry;\n    }\n    static disableDefaultRegistry() {\n        Registry.defaultRegistry = undefined;\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    // Updates the indexes for element 'id'. If an element's attribute changes\n    // from A -> B, make sure to remove the element from A.\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    /**\n     * Register element `elem` with this registry.\n     * This adds the element to its index and watches it for attribute changes.\n     * @param elem\n     * @param id\n     * @returns this\n     */\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        // Manually add id to index, then update other indexes.\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _a, _b;\n        return (_b = (_a = this.index.id) === null || _a === void 0 ? void 0 : _a[id]) === null || _b === void 0 ? void 0 : _b[id]; // return undefined if the id is not found.\n    }\n    getElementsByAttribute(attribute, value) {\n        const index_attr = this.index[attribute];\n        if (index_attr) {\n            const index_attr_val = index_attr[value];\n            if (index_attr_val) {\n                const keys = Object.keys(index_attr_val);\n                return keys.map((k) => index_attr_val[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    // This is called by the element when an attribute value changes. If an indexed\n    // attribute changes, then update the local index.\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Registry } from './registry';\nimport { Category } from './typeguard';\nimport { defined, prefix } from './util';\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n */\nexport class Element {\n    constructor() {\n        var _a;\n        this.children = [];\n        this.attrs = {\n            id: Element.newID(),\n            el: undefined,\n            type: this.getCategory(),\n            classes: {},\n        };\n        this.rendered = false;\n        // If a default registry exist, then register with it right away.\n        (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n    }\n    static get CATEGORY() {\n        return Category.Element;\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    addChildElement(child) {\n        this.children.push(child);\n        return this;\n    }\n    getCategory() {\n        return this.constructor.CATEGORY;\n    }\n    /**\n     * Set the element style used to render.\n     *\n     * Example:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.draw();\n     * ```\n     * Note: If the element draws additional sub-elements (ie.: Modifiers in a Stave),\n     * the style can be applied to all of them by means of the context:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.getContext().setFillStyle('red');\n     * element.getContext().setStrokeStyle('red');\n     * element.draw();\n     * ```\n     * or using drawWithStyle:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.drawWithStyle();\n     * ```\n     */\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    /** Set the element & associated children style used for rendering. */\n    setGroupStyle(style) {\n        this.style = style;\n        this.children.forEach((child) => child.setGroupStyle(style));\n        return this;\n    }\n    /** Get the element style used for rendering. */\n    getStyle() {\n        return this.style;\n    }\n    /** Apply the element style to `context`. */\n    applyStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.save();\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        return this;\n    }\n    /** Restore the style of `context`. */\n    restoreStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.restore();\n        return this;\n    }\n    /**\n     * Draw the element and all its sub-elements (ie.: Modifiers in a Stave)\n     * with the element style.\n     */\n    drawWithStyle() {\n        this.checkContext();\n        this.applyStyle();\n        this.draw();\n        this.restoreStyle();\n    }\n    /** Check if it has a class label (An element can have multiple class labels).  */\n    hasClass(className) {\n        return this.attrs.classes[className] === true;\n    }\n    /** Add a class label (An element can have multiple class labels).  */\n    addClass(className) {\n        var _a;\n        this.attrs.classes[className] = true;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    /** Remove a class label (An element can have multiple class labels).  */\n    removeClass(className) {\n        var _a;\n        delete this.attrs.classes[className];\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    /** Call back from registry after the element is registered. */\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    /** Return the rendered status. */\n    isRendered() {\n        return this.rendered;\n    }\n    /** Set the rendered status. */\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    /** Return the element attributes. */\n    getAttributes() {\n        return this.attrs;\n    }\n    /** Return an attribute. */\n    // eslint-disable-next-line\n    getAttribute(name) {\n        return this.attrs[name];\n    }\n    /** Return associated SVGElement. */\n    getSVGElement(suffix = '') {\n        const id = prefix(this.attrs.id + suffix);\n        const element = document.getElementById(id);\n        if (element)\n            return element;\n    }\n    /** Set an attribute. */\n    // eslint-disable-next-line\n    setAttribute(name, value) {\n        var _a;\n        const oldID = this.attrs.id;\n        const oldValue = this.attrs[name];\n        this.attrs[name] = value;\n        // Register with old id to support id changes.\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    /** Get the boundingBox. */\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    /** Return the context. */\n    getContext() {\n        return this.context;\n    }\n    /** Set the context. */\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    /** Validate and return the context. */\n    checkContext() {\n        return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // Font Handling\n    /**\n     * Provide a CSS compatible font string (e.g., 'bold 16px Arial').\n     */\n    set font(f) {\n        this.setFont(f);\n    }\n    /** Returns the CSS compatible font string. */\n    get font() {\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Set the element's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     * @param font is 1) a `FontInfo` object or\n     *                2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *                3) a string representing the font family (at least one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     * If no arguments are provided, then the font is set to the default font.\n     * Each Element subclass may specify its own default by overriding the static `TEXT_FONT` property.\n     */\n    setFont(font, size, weight, style) {\n        // Allow subclasses to override `TEXT_FONT`.\n        const defaultTextFont = this.constructor.TEXT_FONT;\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const fontIsUndefined = font === undefined;\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        if (fontIsObject) {\n            // `font` is case 1) a FontInfo object\n            this.textFont = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            // `font` is case 2) CSS font shorthand.\n            this.textFont = Font.fromCSSString(font);\n        }\n        else if (fontIsUndefined && sizeWeightStyleAreUndefined) {\n            // All arguments are undefined. Do not check for `arguments.length === 0`,\n            // which fails on the edge case: `setFont(undefined)`.\n            // TODO: See if we can remove this case entirely without introducing a visual diff.\n            // The else case below seems like it should be equivalent to this case.\n            this.textFont = Object.assign({}, defaultTextFont);\n        }\n        else {\n            // `font` is case 3) a font family string (e.g., 'Times New Roman').\n            // The other parameters represent the size, weight, and style.\n            // It is okay for `font` to be undefined while one or more of the other arguments is provided.\n            // Following CSS conventions, unspecified params are reset to the default.\n            this.textFont = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        return this;\n    }\n    getFont() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Reset the text font to the style indicated by the static `TEXT_FONT` property.\n     * Subclasses can call this to initialize `textFont` for the first time.\n     */\n    resetFont() {\n        this.setFont();\n    }\n    /** Return a copy of the current FontInfo object. */\n    get fontInfo() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        // We can cast to Required<FontInfo> here, because\n        // we just called resetFont() above to ensure this.textFont is set.\n        return Object.assign({}, this.textFont);\n    }\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    /** Change the font size, while keeping everything else the same. */\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     * See Element.fontSizeInPixels or Element.fontSizeInPoints if you need to get a number for calculation purposes.\n     */\n    getFontSize() {\n        return this.fontSize;\n    }\n    /**\n     * The size is 1) a string of the form '10pt' or '16px', compatible with the CSS font-size property.\n     *          or 2) a number, which is interpreted as a point size (i.e. 12 == '12pt').\n     */\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     */\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    /**\n     * @returns the font size in `pt`.\n     */\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    /**\n     * @returns the font size in `px`.\n     */\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    /**\n     * @returns a CSS font-style string (e.g., 'italic').\n     */\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    /**\n     * @returns a CSS font-weight string (e.g., 'bold').\n     * As in CSS, font-weight is always returned as a string, even if it was set as a number.\n     */\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n}\nElement.ID = 1000;\n/**\n * Default font for text. This is not related to music engraving. Instead, see `Flow.setMusicFont(...fontNames)`\n * to customize the font for musical symbols placed on the score.\n */\nElement.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { RuntimeError } from './util';\nconst RESOLUTION = 16384;\n/**\n * Map duration numbers to 'ticks', the unit of duration used throughout VexFlow.\n * For example, a quarter note is 4, so it maps to RESOLUTION / 4 = 4096 ticks.\n */\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    // This is the default duration used to render bars (BarNote). Bars no longer\n    // consume ticks, so this should be a no-op.\n    // TODO(0xfe): This needs to be cleaned up.\n    b: '256',\n};\nconst keySignatures = {\n    C: { num: 0 },\n    Am: { num: 0 },\n    F: { acc: 'b', num: 1 },\n    Dm: { acc: 'b', num: 1 },\n    Bb: { acc: 'b', num: 2 },\n    Gm: { acc: 'b', num: 2 },\n    Eb: { acc: 'b', num: 3 },\n    Cm: { acc: 'b', num: 3 },\n    Ab: { acc: 'b', num: 4 },\n    Fm: { acc: 'b', num: 4 },\n    Db: { acc: 'b', num: 5 },\n    Bbm: { acc: 'b', num: 5 },\n    Gb: { acc: 'b', num: 6 },\n    Ebm: { acc: 'b', num: 6 },\n    Cb: { acc: 'b', num: 7 },\n    Abm: { acc: 'b', num: 7 },\n    G: { acc: '#', num: 1 },\n    Em: { acc: '#', num: 1 },\n    D: { acc: '#', num: 2 },\n    Bm: { acc: '#', num: 2 },\n    A: { acc: '#', num: 3 },\n    'F#m': { acc: '#', num: 3 },\n    E: { acc: '#', num: 4 },\n    'C#m': { acc: '#', num: 4 },\n    B: { acc: '#', num: 5 },\n    'G#m': { acc: '#', num: 5 },\n    'F#': { acc: '#', num: 6 },\n    'D#m': { acc: '#', num: 6 },\n    'C#': { acc: '#', num: 7 },\n    'A#m': { acc: '#', num: 7 },\n};\nconst clefs = {\n    treble: { line_shift: 0 },\n    bass: { line_shift: 6 },\n    tenor: { line_shift: 4 },\n    alto: { line_shift: 3 },\n    soprano: { line_shift: 1 },\n    percussion: { line_shift: 0 },\n    'mezzo-soprano': { line_shift: 2 },\n    'baritone-c': { line_shift: 5 },\n    'baritone-f': { line_shift: 5 },\n    subbass: { line_shift: 7 },\n    french: { line_shift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, int_val: 0 },\n    CN: { index: 0, int_val: 0, accidental: 'n' },\n    'C#': { index: 0, int_val: 1, accidental: '#' },\n    'C##': { index: 0, int_val: 2, accidental: '##' },\n    CB: { index: 0, int_val: 11, accidental: 'b' },\n    CBB: { index: 0, int_val: 10, accidental: 'bb' },\n    D: { index: 1, int_val: 2 },\n    DN: { index: 1, int_val: 2, accidental: 'n' },\n    'D#': { index: 1, int_val: 3, accidental: '#' },\n    'D##': { index: 1, int_val: 4, accidental: '##' },\n    DB: { index: 1, int_val: 1, accidental: 'b' },\n    DBB: { index: 1, int_val: 0, accidental: 'bb' },\n    E: { index: 2, int_val: 4 },\n    EN: { index: 2, int_val: 4, accidental: 'n' },\n    'E#': { index: 2, int_val: 5, accidental: '#' },\n    'E##': { index: 2, int_val: 6, accidental: '##' },\n    EB: { index: 2, int_val: 3, accidental: 'b' },\n    EBB: { index: 2, int_val: 2, accidental: 'bb' },\n    F: { index: 3, int_val: 5 },\n    FN: { index: 3, int_val: 5, accidental: 'n' },\n    'F#': { index: 3, int_val: 6, accidental: '#' },\n    'F##': { index: 3, int_val: 7, accidental: '##' },\n    FB: { index: 3, int_val: 4, accidental: 'b' },\n    FBB: { index: 3, int_val: 3, accidental: 'bb' },\n    G: { index: 4, int_val: 7 },\n    GN: { index: 4, int_val: 7, accidental: 'n' },\n    'G#': { index: 4, int_val: 8, accidental: '#' },\n    'G##': { index: 4, int_val: 9, accidental: '##' },\n    GB: { index: 4, int_val: 6, accidental: 'b' },\n    GBB: { index: 4, int_val: 5, accidental: 'bb' },\n    A: { index: 5, int_val: 9 },\n    AN: { index: 5, int_val: 9, accidental: 'n' },\n    'A#': { index: 5, int_val: 10, accidental: '#' },\n    'A##': { index: 5, int_val: 11, accidental: '##' },\n    AB: { index: 5, int_val: 8, accidental: 'b' },\n    ABB: { index: 5, int_val: 7, accidental: 'bb' },\n    B: { index: 6, int_val: 11 },\n    BN: { index: 6, int_val: 11, accidental: 'n' },\n    'B#': { index: 6, int_val: 12, accidental: '#' },\n    'B##': { index: 6, int_val: 13, accidental: '##' },\n    BB: { index: 6, int_val: 10, accidental: 'b' },\n    BBB: { index: 6, int_val: 9, accidental: 'bb' },\n    R: { index: 6, rest: true },\n    X: {\n        index: 6,\n        accidental: '',\n        octave: 4,\n        code: 'noteheadXBlack',\n        shift_right: 5.5,\n    },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n    d: { name: 'diamond' },\n    x: { name: 'x' },\n    ci: { name: 'circled' },\n    cx: { name: 'circle x' },\n    sf: { name: 'slashed' },\n    sb: { name: 'slashed backward' },\n    sq: { name: 'square' },\n    tu: { name: 'triangle up' },\n    td: { name: 'triangle down' },\n};\nconst accidentals = {\n    '#': { code: 'accidentalSharp', parenRightPaddingAdjustment: -1 },\n    '##': { code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    b: { code: 'accidentalFlat', parenRightPaddingAdjustment: -2 },\n    bb: { code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2 },\n    n: { code: 'accidentalNatural', parenRightPaddingAdjustment: -1 },\n    '{': { code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1 },\n    '}': { code: 'accidentalParensRight', parenRightPaddingAdjustment: -1 },\n    db: { code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1 },\n    d: { code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0 },\n    '++': { code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1 },\n    '+': { code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1 },\n    '+-': { code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1 },\n    bs: { code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1 },\n    bss: { code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1 },\n    o: { code: 'accidentalSori', parenRightPaddingAdjustment: -1 },\n    k: { code: 'accidentalKoron', parenRightPaddingAdjustment: -1 },\n    bbs: { code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1 },\n    '++-': { code: 'vexAccidentalMicrotonal2', parenRightPaddingAdjustment: -1 },\n    ashs: { code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1 },\n    afhf: { code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaUp: { code: 'accSagittal5v7KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaDown: { code: 'accSagittal5v7KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaUp: { code: 'accSagittal5CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaDown: { code: 'accSagittal5CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaUp: { code: 'accSagittal7CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaDown: { code: 'accSagittal7CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisUp: { code: 'accSagittal25SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisDown: { code: 'accSagittal25SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisUp: { code: 'accSagittal35MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisDown: { code: 'accSagittal35MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisUp: { code: 'accSagittal11MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisDown: { code: 'accSagittal11MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisUp: { code: 'accSagittal11LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisDown: { code: 'accSagittal11LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisUp: { code: 'accSagittal35LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisDown: { code: 'accSagittal35LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SDown: { code: 'accSagittalSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SUp: { code: 'accSagittalFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CDown: { code: 'accSagittalSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CUp: { code: 'accSagittalFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CDown: { code: 'accSagittalSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CUp: { code: 'accSagittalFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kDown: { code: 'accSagittalSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kUp: { code: 'accSagittalFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp: { code: 'accSagittalSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat: { code: 'accSagittalFlat', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kUp: { code: 'accSagittalSharp5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kDown: { code: 'accSagittalFlat5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CUp: { code: 'accSagittalSharp5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CDown: { code: 'accSagittalFlat5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CUp: { code: 'accSagittalSharp7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CDown: { code: 'accSagittalFlat7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SUp: { code: 'accSagittalSharp25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SDown: { code: 'accSagittalFlat25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35MUp: { code: 'accSagittalSharp35MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35MDown: { code: 'accSagittalFlat35MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11MUp: { code: 'accSagittalSharp11MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11MDown: { code: 'accSagittalFlat11MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11LUp: { code: 'accSagittalSharp11LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11LDown: { code: 'accSagittalFlat11LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35LUp: { code: 'accSagittalSharp35LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35LDown: { code: 'accSagittalFlat35LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp25SDown: { code: 'accSagittalDoubleSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat25SUp: { code: 'accSagittalDoubleFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7CDown: { code: 'accSagittalDoubleSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7CUp: { code: 'accSagittalDoubleFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5CDown: { code: 'accSagittalDoubleSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5CUp: { code: 'accSagittalDoubleFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v7kDown: { code: 'accSagittalDoubleSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v7kUp: { code: 'accSagittalDoubleFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp: { code: 'accSagittalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat: { code: 'accSagittalDoubleFlat', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaUp: { code: 'accSagittal7v11KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaDown: { code: 'accSagittal7v11KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaUp: { code: 'accSagittal17CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaDown: { code: 'accSagittal17CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaUp: { code: 'accSagittal55CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaDown: { code: 'accSagittal55CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaUp: { code: 'accSagittal7v11CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaDown: { code: 'accSagittal7v11CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisUp: { code: 'accSagittal5v11SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisDown: { code: 'accSagittal5v11SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SDown: { code: 'accSagittalSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SUp: { code: 'accSagittalFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CDown: { code: 'accSagittalSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CUp: { code: 'accSagittalFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CDown: { code: 'accSagittalSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CUp: { code: 'accSagittalFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CDown: { code: 'accSagittalSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CUp: { code: 'accSagittalFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kDown: { code: 'accSagittalSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kUp: { code: 'accSagittalFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kUp: { code: 'accSagittalSharp7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kDown: { code: 'accSagittalFlat7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CUp: { code: 'accSagittalSharp17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CDown: { code: 'accSagittalFlat17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CUp: { code: 'accSagittalSharp55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CDown: { code: 'accSagittalFlat55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CUp: { code: 'accSagittalSharp7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CDown: { code: 'accSagittalFlat7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SUp: { code: 'accSagittalSharp5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SDown: { code: 'accSagittalFlat5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v11SDown: { code: 'accSagittalDoubleSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v11SUp: { code: 'accSagittalDoubleFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11CDown: { code: 'accSagittalDoubleSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11CUp: { code: 'accSagittalDoubleFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp55CDown: { code: 'accSagittalDoubleSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat55CUp: { code: 'accSagittalDoubleFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17CDown: { code: 'accSagittalDoubleSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17CUp: { code: 'accSagittalDoubleFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11kDown: { code: 'accSagittalDoubleSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11kUp: { code: 'accSagittalDoubleFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaUp: { code: 'accSagittal23CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaDown: { code: 'accSagittal23CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaUp: { code: 'accSagittal5v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaDown: { code: 'accSagittal5v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisUp: { code: 'accSagittal5v23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisDown: { code: 'accSagittal5v23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SDown: { code: 'accSagittalSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SUp: { code: 'accSagittalFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CDown: { code: 'accSagittalSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CUp: { code: 'accSagittalFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CDown: { code: 'accSagittalSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CUp: { code: 'accSagittalFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CUp: { code: 'accSagittalSharp23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CDown: { code: 'accSagittalFlat23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CUp: { code: 'accSagittalSharp5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CDown: { code: 'accSagittalFlat5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SUp: { code: 'accSagittalSharp5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SDown: { code: 'accSagittalFlat5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v23SDown: { code: 'accSagittalDoubleSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v23SUp: { code: 'accSagittalDoubleFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v19CDown: { code: 'accSagittalDoubleSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v19CUp: { code: 'accSagittalDoubleFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23CDown: { code: 'accSagittalDoubleSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23CUp: { code: 'accSagittalDoubleFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaUp: { code: 'accSagittal19SchismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaDown: { code: 'accSagittal19SchismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaUp: { code: 'accSagittal17KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaDown: { code: 'accSagittal17KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaUp: { code: 'accSagittal143CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaDown: { code: 'accSagittal143CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaUp: { code: 'accSagittal11v49CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaDown: { code: 'accSagittal11v49CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaUp: { code: 'accSagittal19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaDown: { code: 'accSagittal19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaUp: { code: 'accSagittal7v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaDown: { code: 'accSagittal7v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisUp: { code: 'accSagittal49SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisDown: { code: 'accSagittal49SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisUp: { code: 'accSagittal23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisDown: { code: 'accSagittal23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisUp: { code: 'accSagittal5v13MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisDown: { code: 'accSagittal5v13MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisUp: { code: 'accSagittal11v19MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisDown: { code: 'accSagittal11v19MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisUp: { code: 'accSagittal49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisDown: { code: 'accSagittal49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisUp: { code: 'accSagittal5v49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisDown: { code: 'accSagittal5v49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisUp: { code: 'accSagittal49LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisDown: { code: 'accSagittal49LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisUp: { code: 'accSagittal11v19LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisDown: { code: 'accSagittal11v19LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisUp: { code: 'accSagittal5v13LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisDown: { code: 'accSagittal5v13LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SDown: { code: 'accSagittalSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SUp: { code: 'accSagittalFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SDown: { code: 'accSagittalSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SUp: { code: 'accSagittalFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CDown: { code: 'accSagittalSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CUp: { code: 'accSagittalFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CDown: { code: 'accSagittalSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CUp: { code: 'accSagittalFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CDown: { code: 'accSagittalSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CUp: { code: 'accSagittalFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CDown: { code: 'accSagittalSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CUp: { code: 'accSagittalFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kDown: { code: 'accSagittalSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kUp: { code: 'accSagittalFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sDown: { code: 'accSagittalSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sUp: { code: 'accSagittalFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sUp: { code: 'accSagittalSharp19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sDown: { code: 'accSagittalFlat19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kUp: { code: 'accSagittalSharp17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kDown: { code: 'accSagittalFlat17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CUp: { code: 'accSagittalSharp143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CDown: { code: 'accSagittalFlat143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CUp: { code: 'accSagittalSharp11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CDown: { code: 'accSagittalFlat11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CUp: { code: 'accSagittalSharp19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CDown: { code: 'accSagittalFlat19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CUp: { code: 'accSagittalSharp7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CDown: { code: 'accSagittalFlat7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SUp: { code: 'accSagittalSharp49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SDown: { code: 'accSagittalFlat49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SUp: { code: 'accSagittalSharp23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SDown: { code: 'accSagittalFlat23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13MUp: { code: 'accSagittalSharp5v13MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13MDown: { code: 'accSagittalFlat5v13MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19MUp: { code: 'accSagittalSharp11v19MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19MDown: { code: 'accSagittalFlat11v19MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49MUp: { code: 'accSagittalSharp49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49MDown: { code: 'accSagittalFlat49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v49MUp: { code: 'accSagittalSharp5v49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v49MDown: { code: 'accSagittalFlat5v49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49LUp: { code: 'accSagittalSharp49LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49LDown: { code: 'accSagittalFlat49LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19LUp: { code: 'accSagittalSharp11v19LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19LDown: { code: 'accSagittalFlat11v19LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13LUp: { code: 'accSagittalSharp5v13LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13LDown: { code: 'accSagittalFlat5v13LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23SDown: { code: 'accSagittalDoubleSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23SUp: { code: 'accSagittalDoubleFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp49SDown: { code: 'accSagittalDoubleSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat49SUp: { code: 'accSagittalDoubleFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v19CDown: { code: 'accSagittalDoubleSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v19CUp: { code: 'accSagittalDoubleFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19CDown: { code: 'accSagittalDoubleSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19CUp: { code: 'accSagittalDoubleFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp11v49CDown: { code: 'accSagittalDoubleSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat11v49CUp: { code: 'accSagittalDoubleFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp143CDown: { code: 'accSagittalDoubleSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat143CUp: { code: 'accSagittalDoubleFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17kDown: { code: 'accSagittalDoubleSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17kUp: { code: 'accSagittalDoubleFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19sDown: { code: 'accSagittalDoubleSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19sUp: { code: 'accSagittalDoubleFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftUp: { code: 'accSagittalShaftUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftDown: { code: 'accSagittalShaftDown', parenRightPaddingAdjustment: -1 },\n    accSagittalAcute: { code: 'accSagittalAcute', parenRightPaddingAdjustment: -1 },\n    accSagittalGrave: { code: 'accSagittalGrave', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaUp: { code: 'accSagittal1MinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaDown: { code: 'accSagittal1MinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasUp: { code: 'accSagittal2MinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasDown: { code: 'accSagittal2MinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaUp: { code: 'accSagittal1TinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaDown: { code: 'accSagittal1TinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasUp: { code: 'accSagittal2TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasDown: { code: 'accSagittal2TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasUp: { code: 'accSagittal3TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasDown: { code: 'accSagittal3TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasUp: { code: 'accSagittal4TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasDown: { code: 'accSagittal4TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasUp: { code: 'accSagittal5TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasDown: { code: 'accSagittal5TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasUp: { code: 'accSagittal6TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasDown: { code: 'accSagittal6TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasUp: { code: 'accSagittal7TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasDown: { code: 'accSagittal7TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasUp: { code: 'accSagittal8TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasDown: { code: 'accSagittal8TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasUp: { code: 'accSagittal9TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasDown: { code: 'accSagittal9TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaUp: { code: 'accSagittalFractionalTinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaDown: { code: 'accSagittalFractionalTinaDown', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlat: { code: 'accidentalNarrowReversedFlat', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlatAndFlat: {\n        code: 'accidentalNarrowReversedFlatAndFlat',\n        parenRightPaddingAdjustment: -1,\n    },\n    accidentalWilsonPlus: { code: 'accidentalWilsonPlus', parenRightPaddingAdjustment: -1 },\n    accidentalWilsonMinus: { code: 'accidentalWilsonMinus', parenRightPaddingAdjustment: -1 },\n};\n// Helps determine the layout of accidentals.\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        second_on_bottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spaced_out_tetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spaced_out_pentachord: [1, 2, 3, 2, 1],\n        very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n        very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: 'augmentationDot', between_lines: true },\n    av: {\n        aboveCode: 'articStaccatissimoAbove',\n        belowCode: 'articStaccatissimoBelow',\n        between_lines: true,\n    },\n    'a>': {\n        aboveCode: 'articAccentAbove',\n        belowCode: 'articAccentBelow',\n        between_lines: true,\n    },\n    'a-': {\n        aboveCode: 'articTenutoAbove',\n        belowCode: 'articTenutoBelow',\n        between_lines: true,\n    },\n    'a^': {\n        aboveCode: 'articMarcatoAbove',\n        belowCode: 'articMarcatoBelow',\n        between_lines: false,\n    },\n    'a+': { code: 'pluckedLeftHandPizzicato', between_lines: false },\n    ao: {\n        aboveCode: 'pluckedSnapPizzicatoAbove',\n        belowCode: 'pluckedSnapPizzicatoBelow',\n        between_lines: false,\n    },\n    ah: { code: 'stringsHarmonic', between_lines: false },\n    'a@': { aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false },\n    'a@a': { code: 'fermataAbove', between_lines: false },\n    'a@u': { code: 'fermataBelow', between_lines: false },\n    'a@s': { aboveCode: 'fermataShortAbove', belowCode: 'fermataShortBelow', between_lines: false },\n    'a@as': { code: 'fermataShortAbove', between_lines: false },\n    'a@us': { code: 'fermataShortBelow', between_lines: false },\n    'a@l': { aboveCode: 'fermataLongAbove', belowCode: 'fermataLongBelow', between_lines: false },\n    'a@al': { code: 'fermataLongAbove', between_lines: false },\n    'a@ul': { code: 'fermataLongBelow', between_lines: false },\n    'a@vl': { aboveCode: 'fermataVeryLongAbove', belowCode: 'fermataVeryLongBelow', between_lines: false },\n    'a@avl': { code: 'fermataVeryLongAbove', between_lines: false },\n    'a@uvl': { code: 'fermataVeryLongBelow', between_lines: false },\n    'a|': { code: 'stringsUpBow', between_lines: false },\n    am: { code: 'stringsDownBow', between_lines: false },\n    'a,': { code: 'pictChokeCymbal', between_lines: false }, // Choked\n};\nconst ornaments = {\n    mordent: { code: 'ornamentShortTrill' },\n    mordent_inverted: { code: 'ornamentMordent' },\n    turn: { code: 'ornamentTurn' },\n    turn_inverted: { code: 'ornamentTurnSlash' },\n    tr: { code: 'ornamentTrill' },\n    upprall: { code: 'ornamentPrecompSlideTrillDAnglebert' },\n    downprall: { code: 'ornamentPrecompDoubleCadenceUpperPrefix' },\n    prallup: { code: 'ornamentPrecompTrillSuffixDandrieu' },\n    pralldown: { code: 'ornamentPrecompTrillLowerSuffix' },\n    upmordent: { code: 'ornamentPrecompSlideTrillBach' },\n    downmordent: { code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn' },\n    lineprall: { code: 'ornamentPrecompAppoggTrill' },\n    prallprall: { code: 'ornamentTremblement' },\n    scoop: { code: 'brassScoop' },\n    doit: { code: 'brassDoitMedium' },\n    fall: { code: 'brassFallLipShort' },\n    doitLong: { code: 'brassLiftMedium' },\n    fallLong: { code: 'brassFallRoughMedium' },\n    bend: { code: 'brassBend' },\n    plungerClosed: { code: 'brassMuteClosed' },\n    plungerOpen: { code: 'brassMuteOpen' },\n    flip: { code: 'brassFlip' },\n    jazzTurn: { code: 'brassJazzTurn' },\n    smear: { code: 'brassSmear' },\n};\nexport class Tables {\n    /**\n     * @returns the `Font` object at the head of the music font stack.\n     */\n    static currentMusicFont() {\n        if (Tables.MUSIC_FONT_STACK.length === 0) {\n            throw new RuntimeError('NoFonts', 'The font stack is empty. See: await Flow.fetchMusicFont(...); Flow.setMusicFont(...).');\n        }\n        else {\n            return Tables.MUSIC_FONT_STACK[0];\n        }\n    }\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    /**\n     * @param keyOctaveGlyph a string in the format \"key/octave\" (e.g., \"c/5\") or \"key/octave/custom-note-head-code\" (e.g., \"g/5/t3\").\n     * @param clef\n     * @param params a struct with one option, `octave_shift` for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n     * @returns properties for the specified note.\n     */\n    // eslint-disable-next-line\n    static keyProperties(keyOctaveGlyph, clef = 'treble', params) {\n        let options = { octave_shift: 0, duration: '4' };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const duration = Tables.sanitizeDuration(options.duration);\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        if (value.octave)\n            pieces[1] = value.octave.toString();\n        let octave = parseInt(pieces[1], 10);\n        // Octave_shift is the shift to compensate for clef 8va/8vb.\n        octave += -1 * options.octave_shift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).line_shift;\n        let stroke = 0;\n        if (line <= 0 && (line * 2) % 2 === 0)\n            stroke = 1; // stroke up\n        if (line >= 6 && (line * 2) % 2 === 0)\n            stroke = -1; // stroke down\n        // Integer value for note arithmetic.\n        const int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : undefined;\n        // If the user specified a glyph, overwrite the glyph code.\n        const code = value.code;\n        const shift_right = value.shift_right;\n        let customNoteHeadProps = {};\n        if (pieces.length > 2 && pieces[2]) {\n            const glyphName = pieces[2].toUpperCase();\n            customNoteHeadProps = { code: this.codeNoteHead(glyphName, duration) } || {};\n        }\n        return Object.assign({ key,\n            octave,\n            line,\n            int_value, accidental: value.accidental, code,\n            stroke,\n            shift_right, displaced: false }, customNoteHeadProps);\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    static tabToGlyph(fret, scale = 1.0) {\n        let glyph = undefined;\n        let width = 0;\n        let shift_y = 0;\n        if (fret.toUpperCase() === 'X') {\n            const glyphMetrics = new Glyph('accidentalDoubleSharp', Tables.TABLATURE_FONT_SCALE).getMetrics();\n            glyph = 'accidentalDoubleSharp';\n            if (glyphMetrics.width == undefined || glyphMetrics.height == undefined)\n                throw new RuntimeError('InvalidMetrics', 'Width and height required');\n            width = glyphMetrics.width;\n            shift_y = -glyphMetrics.height / 2;\n        }\n        else {\n            width = Tables.textWidth(fret);\n        }\n        return {\n            text: fret,\n            code: glyph,\n            getWidth: () => width * scale,\n            shift_y,\n        };\n    }\n    // Used by annotation.ts and bend.ts. Clearly this implementation only works for the default font size.\n    // TODO: The actual width depends on the font family, size, weight, style.\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(acc) {\n        return accidentals[acc];\n    }\n    static ornamentCodes(acc) {\n        return ornaments[acc];\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.acc) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        const notes = accidentalList[keySpec.acc];\n        const acc_list = [];\n        for (let i = 0; i < keySpec.num; ++i) {\n            const line = notes[i];\n            acc_list.push({ type: keySpec.acc, line });\n        }\n        return acc_list;\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    /**\n     * Convert duration aliases to the number based duration.\n     * If the input isn't an alias, simply return the input.\n     * @param duration\n     * @returns Example: 'q' -> '4', '8' -> '8'\n     */\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    /** Convert the `duration` to a fraction. */\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    /** Convert the `duration` to a number. */\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    /* Convert the `duration` to total ticks. */\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    static codeNoteHead(type, duration) {\n        let code = '';\n        switch (type) {\n            /* Diamond */\n            case 'D0':\n                code = 'noteheadDiamondWhole';\n                break;\n            case 'D1':\n                code = 'noteheadDiamondHalf';\n                break;\n            case 'D2':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'D3':\n                code = 'noteheadDiamondBlack';\n                break;\n            /* Triangle */\n            case 'T0':\n                code = 'noteheadTriangleUpWhole';\n                break;\n            case 'T1':\n                code = 'noteheadTriangleUpHalf';\n                break;\n            case 'T2':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'T3':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            /* Cross */\n            case 'X0':\n                code = 'noteheadXWhole';\n                break;\n            case 'X1':\n                code = 'noteheadXHalf';\n                break;\n            case 'X2':\n                code = 'noteheadXBlack';\n                break;\n            case 'X3':\n                code = 'noteheadCircleX';\n                break;\n            /* Square */\n            case 'S1':\n                code = 'noteheadSquareWhite';\n                break;\n            case 'S2':\n                code = 'noteheadSquareBlack';\n                break;\n            /* Rectangle */\n            case 'R1':\n                code = 'vexNoteHeadRectWhite'; // no smufl code\n                break;\n            case 'R2':\n                code = 'vexNoteHeadRectBlack'; // no smufl code\n                break;\n            case 'DO':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'RE':\n                code = 'noteheadMoonBlack';\n                break;\n            case 'MI':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'FA':\n                code = 'noteheadTriangleLeftBlack';\n                break;\n            case 'FAUP':\n                code = 'noteheadTriangleRightBlack';\n                break;\n            case 'SO':\n                code = 'noteheadBlack';\n                break;\n            case 'LA':\n                code = 'noteheadSquareBlack';\n                break;\n            case 'TI':\n                code = 'noteheadTriangleRoundDownBlack';\n                break;\n            case 'D':\n            case 'H': // left for backwards compatibility\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDiamondDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadDiamondWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadDiamondHalf';\n                        break;\n                    default:\n                        code = 'noteheadDiamondBlack';\n                        break;\n                }\n                break;\n            case 'N':\n            case 'G':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadHalf';\n                        break;\n                    default:\n                        code = 'noteheadBlack';\n                        break;\n                }\n                break;\n            case 'M': // left for backwards compatibility\n            case 'X':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadXHalf';\n                        break;\n                    default:\n                        code = 'noteheadXBlack';\n                        break;\n                }\n                break;\n            case 'CX':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircleXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircleXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircleXHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircleX';\n                        break;\n                }\n                break;\n            case 'CI':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircledDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircledWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircledHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircledBlack';\n                        break;\n                }\n                break;\n            case 'SQ':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWholeSquare';\n                        break;\n                    case '1':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    case '2':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    default:\n                        code = 'noteheadSquareBlack';\n                        break;\n                }\n                break;\n            case 'TU':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleUpDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleUpWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleUpHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleUpBlack';\n                        break;\n                }\n                break;\n            case 'TD':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleDownDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleDownWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleDownHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleDownBlack';\n                        break;\n                }\n                break;\n            case 'SF':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole1';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole1';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf1';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack1';\n                }\n                break;\n            case 'SB':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole2';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole2';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf2';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack2';\n                }\n                break;\n        }\n        return code;\n    }\n    // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n    // The default type is a regular note ('n').\n    // eslint-disable-next-line\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        // Lookup duration for default glyph head code\n        const code = durationCodes[duration];\n        if (code === undefined) {\n            return undefined;\n        }\n        // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n        let glyphTypeProperties = code.type[type];\n        // Try and get it from the custom list of note heads\n        const codeNoteHead = Tables.codeNoteHead(type.toUpperCase(), duration);\n        if (codeNoteHead != '')\n            glyphTypeProperties = Object.assign(Object.assign({}, glyphTypeProperties), { code_head: codeNoteHead, code: codeNoteHead });\n        const code_head = glyphTypeProperties.code_head;\n        // The default implementation of getWidth() calls Glyph.getWidth(code_head, scale).\n        // This can be overridden by an individual glyph type (see slash noteheads below: Tables.SLASH_NOTEHEAD_WIDTH).\n        const getWidth = (scale = Tables.NOTATION_FONT_SCALE) => Glyph.getWidth(code_head, scale);\n        // Merge duration props for 'duration' with the note head properties.\n        return Object.assign(Object.assign(Object.assign({}, code.common), { getWidth: getWidth }), glyphTypeProperties);\n    }\n}\nTables.SOFTMAX_FACTOR = 100;\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RENDER_PRECISION_PLACES = 3;\nTables.RESOLUTION = RESOLUTION;\n/**\n * Customize this by calling Flow.setMusicFont(...fontNames);\n */\nTables.MUSIC_FONT_STACK = [];\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\n// HACK:\n// Since text origins are positioned at the baseline, we must\n// compensate for the ascender of the text. Of course, 1 staff space is\n// a very poor approximation.\n//\n// This will be deprecated in the future. This is a temporary solution until\n// we have more robust text metrics.\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalMap = accidentals;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    // ♯ accidental sharp\n    sharp: String.fromCharCode(0x266f),\n    // ♭ accidental flat\n    flat: String.fromCharCode(0x266d),\n    // ♮ accidental natural\n    natural: String.fromCharCode(0x266e),\n    // △ major seventh\n    triangle: String.fromCharCode(0x25b3),\n    // ø half-diminished\n    'o-with-slash': String.fromCharCode(0x00f8),\n    // ° diminished\n    degrees: String.fromCharCode(0x00b0),\n    // ○ diminished\n    circle: String.fromCharCode(0x25cb),\n};\n/* The list of valid note types. Used by note.ts during parseNoteStruct(). */\nTables.validTypes = validNoteTypes;\n// Default time signature.\nTables.TIME4_4 = {\n    num_beats: 4,\n    beat_value: 4,\n    resolution: RESOLUTION,\n};\n// 1/2, 1, 2, 4, 8, 16, 32, 64, 128\n// NOTE: There is no 256 here! However, there are other mentions of 256 in this file.\n// For example, in durations has a 256 key, and sanitizeDuration() can return 256.\n// The sanitizeDuration() bit may need to be removed by 0xfe.\n// eslint-disable-next-line\nconst durationCodes = {\n    '1/2': {\n        common: {\n            stem: false,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Breve rest\n                code_head: 'restDoubleWhole',\n                rest: true,\n                position: 'B/5',\n                dot_shiftY: 0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restDoubleWhole', scale);\n                // },\n            },\n            s: {\n                // Breve note slash -\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    1: {\n        common: {\n            stem: false,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Whole rest\n                code_head: 'restWhole',\n                leger_code_head: 'restWholeLegerLine',\n                rest: true,\n                position: 'D/5',\n                dot_shiftY: 0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restWhole', scale);\n                // },\n            },\n            s: {\n                // Whole note slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    2: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Half rest\n                code_head: 'restHalf',\n                leger_code_head: 'restHalfLegerLine',\n                stem: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restHalf', scale);\n                // },\n            },\n            s: {\n                // Half note slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    4: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Quarter rest\n                code_head: 'restQuarter',\n                stem: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.5,\n                line_below: 1.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restQuarter', scale);\n                // },\n            },\n            s: {\n                // Quarter slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    8: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            beam_count: 1,\n            stem_beam_extension: 0,\n            code_flag_upstem: 'flag8thUp',\n            code_flag_downstem: 'flag8thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Eighth rest\n                code_head: 'rest8th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.0,\n                line_below: 1.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest8th', scale);\n                // },\n            },\n            s: {\n                // Eighth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    16: {\n        common: {\n            beam_count: 2,\n            stem_beam_extension: 0,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag16thUp',\n            code_flag_downstem: 'flag16thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Sixteenth rest\n                code_head: 'rest16th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.0,\n                line_below: 2.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest16th', scale);\n                // },\n            },\n            s: {\n                // Sixteenth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    32: {\n        common: {\n            beam_count: 3,\n            stem_beam_extension: 7.5,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag32ndUp',\n            code_flag_downstem: 'flag32ndDown',\n            stem_up_extension: 9,\n            stem_down_extension: 9,\n            tabnote_stem_up_extension: 9,\n            tabnote_stem_down_extension: 9,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Thirty-second rest\n                code_head: 'rest32nd',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -1.5,\n                line_above: 2.0,\n                line_below: 2.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest32nd', scale);\n                // },\n            },\n            s: {\n                // Thirty-second slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    64: {\n        common: {\n            beam_count: 4,\n            stem_beam_extension: 15,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag64thUp',\n            code_flag_downstem: 'flag64thDown',\n            stem_up_extension: 13,\n            stem_down_extension: 13,\n            tabnote_stem_up_extension: 13,\n            tabnote_stem_down_extension: 13,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Sixty-fourth rest\n                code_head: 'rest64th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -1.5,\n                line_above: 2.0,\n                line_below: 3.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest64th', scale);\n                // },\n            },\n            s: {\n                // Sixty-fourth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    128: {\n        common: {\n            beam_count: 5,\n            stem_beam_extension: 22.5,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag128thUp',\n            code_flag_downstem: 'flag128thDown',\n            stem_up_extension: 22,\n            stem_down_extension: 22,\n            tabnote_stem_up_extension: 22,\n            tabnote_stem_down_extension: 22,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Hundred-twenty-eight rest\n                code_head: 'rest128th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -2.5,\n                line_above: 3.0,\n                line_below: 3.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest128th', scale);\n                // },\n            },\n            s: {\n                // Hundred-twenty-eight slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var OutlineCode;\n(function (OutlineCode) {\n    OutlineCode[OutlineCode[\"MOVE\"] = 0] = \"MOVE\";\n    OutlineCode[OutlineCode[\"LINE\"] = 1] = \"LINE\";\n    OutlineCode[OutlineCode[\"QUADRATIC\"] = 2] = \"QUADRATIC\";\n    OutlineCode[OutlineCode[\"BEZIER\"] = 3] = \"BEZIER\";\n})(OutlineCode || (OutlineCode = {}));\nclass GlyphCacheEntry {\n    constructor(fontStack, code, category) {\n        this.point = -1;\n        this.metrics = Glyph.loadMetrics(fontStack, code, category);\n        this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.metrics.scale, this.metrics.x_shift, this.metrics.y_shift);\n        if (category) {\n            this.point = Glyph.lookupFontMetric(this.metrics.font, category, code, 'point', -1);\n        }\n    }\n}\nclass GlyphCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    lookup(code, category) {\n        let entries = this.cache.get(Glyph.CURRENT_CACHE_KEY);\n        if (entries === undefined) {\n            entries = {};\n            this.cache.set(Glyph.CURRENT_CACHE_KEY, entries);\n        }\n        const key = category ? `${code}%${category}` : code;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = new GlyphCacheEntry(Glyph.MUSIC_FONT_STACK, code, category);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n}\nclass GlyphOutline {\n    constructor(outline, originX, originY, scale) {\n        this.outline = outline;\n        this.originX = originX;\n        this.originY = originY;\n        this.scale = scale;\n        this.i = 0;\n        this.precision = 1;\n        // Automatically assign private properties: this.outline, this.originX, this.originY, and this.scale.\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n    }\n    done() {\n        return this.i >= this.outline.length;\n    }\n    next() {\n        return Math.round((this.outline[this.i++] * this.precision) / this.precision);\n    }\n    nextX() {\n        return Math.round((this.originX + this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    nextY() {\n        return Math.round((this.originY - this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    static parse(str) {\n        const result = [];\n        const parts = str.split(' ');\n        let i = 0;\n        while (i < parts.length) {\n            switch (parts[i++]) {\n                case 'm':\n                    result.push(OutlineCode.MOVE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'l':\n                    result.push(OutlineCode.LINE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'q':\n                    result.push(OutlineCode.QUADRATIC, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'b':\n                    result.push(OutlineCode.BEZIER, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n            }\n        }\n        return result;\n    }\n}\nexport class Glyph extends Element {\n    /**\n     * @param code\n     * @param point\n     * @param options\n     */\n    constructor(code, point, options) {\n        super();\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.bbox = new BoundingBox(0, 0, 0, 0);\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        this.options = {};\n        this.scale = 1;\n        this.code = code;\n        this.point = point;\n        this.originShift = { x: 0, y: 0 };\n        this.x_shift = 0;\n        this.y_shift = 0;\n        if (options) {\n            this.setOptions(options);\n        }\n        else {\n            this.reset();\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Glyph;\n    }\n    /**\n     * Pass a key of the form `glyphs.{category}.{code}.{key}` to Font.lookupMetric(). If the initial lookup fails,\n     * try again with the path `glyphs.{category}.{key}`. If the second lookup fails, return the defaultValue.\n     *\n     * @param font\n     * @param category any metric path under 'glyphs', so 'stem.up' could resolve to glyphs.stem.up.shiftX, glyphs.stem.up.shiftY, etc.\n     * @param code\n     * @param key\n     * @param defaultValue\n     */\n    static lookupFontMetric(font, category, code, key, defaultValue) {\n        let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, undefined);\n        if (value === undefined) {\n            // The first lookup failed, so we omit .${code} and try again (with a defaultValue this time).\n            value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n        }\n        return value;\n    }\n    static lookupGlyph(fontStack, code) {\n        defined(fontStack, 'BadFontStack', 'Font stack is misconfigured');\n        let glyph;\n        let font;\n        for (let i = 0; i < fontStack.length; i++) {\n            font = fontStack[i];\n            glyph = font.getGlyphs()[code];\n            if (glyph)\n                return { glyph, font };\n        }\n        throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n    static loadMetrics(fontStack, code, category) {\n        const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n        if (!glyph.o)\n            throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n        let x_shift = 0;\n        let y_shift = 0;\n        let scale = 1;\n        if (category && font) {\n            x_shift = Glyph.lookupFontMetric(font, category, code, 'shiftX', 0);\n            y_shift = Glyph.lookupFontMetric(font, category, code, 'shiftY', 0);\n            scale = Glyph.lookupFontMetric(font, category, code, 'scale', 1);\n        }\n        const x_min = glyph.x_min;\n        const x_max = glyph.x_max;\n        const ha = glyph.ha;\n        if (!glyph.cached_outline) {\n            glyph.cached_outline = GlyphOutline.parse(glyph.o);\n        }\n        return {\n            x_min,\n            x_max,\n            x_shift,\n            y_shift,\n            scale,\n            ha,\n            outline: glyph.cached_outline,\n            font,\n            width: x_max - x_min,\n            height: ha,\n        };\n    }\n    /**\n     * Renders glyphs from the default font stack.\n     *\n     * @param ctx Canvas or SVG context\n     * @param x_pos x coordinate\n     * @param y_pos y coordinate\n     * @param point the point size of the font\n     * @param code the glyph code in font.getGlyphs()\n     * @param options\n     * @returns\n     */\n    static renderGlyph(ctx, x_pos, y_pos, point, code, options) {\n        var _a;\n        const data = Glyph.cache.lookup(code, options === null || options === void 0 ? void 0 : options.category);\n        const metrics = data.metrics;\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const customScale = (_a = options === null || options === void 0 ? void 0 : options.scale) !== null && _a !== void 0 ? _a : 1;\n        const scale = ((point * 72.0) / (metrics.font.getResolution() * 100.0)) * metrics.scale * customScale;\n        Glyph.renderOutline(ctx, metrics.outline, scale, x_pos + metrics.x_shift * customScale, y_pos + metrics.y_shift * customScale);\n        return metrics;\n    }\n    static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        ctx.beginPath();\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    ctx.moveTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.LINE:\n                    ctx.lineTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.quadraticCurveTo(go.nextX(), go.nextY(), x, y);\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.bezierCurveTo(go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    break;\n            }\n        }\n        ctx.fill();\n    }\n    static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        const bboxComp = new BoundingBoxComputation();\n        // (penX, penY) hold the pen position: the start of each stroke.\n        let penX = x_pos;\n        let penY = y_pos;\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    // Note that we don't add any points to the bounding box until a srroke is actually drawn.\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    break;\n                case OutlineCode.LINE:\n                    bboxComp.addPoint(penX, penY);\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    bboxComp.addPoint(penX, penY);\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addQuadraticCurve(penX, penY, go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addBezierCurve(penX, penY, go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n            }\n        }\n        return new BoundingBox(bboxComp.getX1(), bboxComp.getY1(), bboxComp.width(), bboxComp.height());\n    }\n    static getWidth(code, point, category) {\n        const data = Glyph.cache.lookup(code, category);\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const scale = (point * 72) / (data.metrics.font.getResolution() * 100);\n        return data.bbox.getW() * scale;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n    getCode() {\n        return this.code;\n    }\n    // eslint-disable-next-line\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.reset();\n    }\n    setPoint(point) {\n        this.point = point;\n        return this;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    setXShift(x_shift) {\n        this.x_shift = x_shift;\n        return this;\n    }\n    getYshift() {\n        return this.y_shift;\n    }\n    setYShift(y_shift) {\n        this.y_shift = y_shift;\n        return this;\n    }\n    reset() {\n        const data = Glyph.cache.lookup(this.code, this.options.category);\n        this.metrics = data.metrics;\n        // Override point from metrics file\n        if (data.point != -1) {\n            this.point = data.point;\n        }\n        this.scale = (this.point * 72) / (this.metrics.font.getResolution() * 100);\n        this.bbox = new BoundingBox(data.bbox.getX() * this.scale, data.bbox.getY() * this.scale, data.bbox.getW() * this.scale, data.bbox.getH() * this.scale);\n    }\n    checkMetrics() {\n        return defined(this.metrics, 'BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n    getMetrics() {\n        const metrics = this.checkMetrics();\n        const metricsScale = metrics.scale;\n        return {\n            x_min: metrics.x_min * this.scale * metricsScale,\n            x_max: metrics.x_max * this.scale * metricsScale,\n            width: this.bbox.getW(),\n            height: this.bbox.getH(),\n            scale: this.scale * metricsScale,\n            x_shift: metrics.x_shift,\n            y_shift: metrics.y_shift,\n            outline: metrics.outline,\n            font: metrics.font,\n            ha: metrics.ha,\n        };\n    }\n    setOriginX(x) {\n        const { bbox } = this;\n        const originX = Math.abs(bbox.getX() / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.originShift.x = -xShift;\n    }\n    setOriginY(y) {\n        const { bbox } = this;\n        const originY = Math.abs(bbox.getY() / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.originShift.y = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n    render(ctx, x, y) {\n        const metrics = this.checkMetrics();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle(ctx);\n        const xPos = x + this.originShift.x + metrics.x_shift;\n        const yPos = y + this.originShift.y + metrics.y_shift;\n        Glyph.renderOutline(ctx, outline, scale, xPos, yPos);\n        this.restoreStyle(ctx);\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    renderToStave(x) {\n        const context = this.checkContext();\n        const metrics = this.checkMetrics();\n        const stave = this.checkStave();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle();\n        const xPos = x + this.x_shift + metrics.x_shift;\n        const yPos = stave.getYForGlyphs() + this.y_shift + metrics.y_shift;\n        Glyph.renderOutline(context, outline, scale, xPos, yPos);\n        this.restoreStyle();\n    }\n}\nGlyph.cache = new GlyphCache();\n// The current cache key for GlyphCache above.\n// Computed when Flow.setMusicFont(...) is called.\n// It is set to a comma separated list of font names.\nGlyph.CURRENT_CACHE_KEY = '';\n// Used by the GlyphCache above.\n// Set when Flow.setMusicFont(...) is called.\nGlyph.MUSIC_FONT_STACK = [];\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n    constructor() {\n        super();\n        this.width = 0;\n        // The `text_line` is reserved space above or below a stave.\n        this.text_line = 0;\n        this.position = Modifier.Position.LEFT;\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.spacingFromNextModifier = 0;\n    }\n    /**\n     * Modifiers category string. Every modifier has a different category.\n     * The `ModifierContext` uses this to determine the type and order of the modifiers.\n     */\n    static get CATEGORY() {\n        return Category.Modifier;\n    }\n    /** Modifiers can be positioned almost anywhere, relative to a note. */\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    /** Called when position changes. */\n    reset() {\n        // DO NOTHING.\n    }\n    /** Get modifier widths. */\n    getWidth() {\n        return this.width;\n    }\n    /** Set modifier widths. */\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    /**\n     * Used in draw() to check and get the attached note (`StaveNote`, `TabNote`, etc.).\n     * Also verifies that the index is valid.\n     */\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    /**\n     * Set attached note.\n     * @param note (`StaveNote`, `TabNote`, etc.)\n     */\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    /** Get note index, which is a specific note in a chord. */\n    getIndex() {\n        return this.index;\n    }\n    /** Check and get note index, which is a specific note in a chord. */\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    /** Set note index, which is a specific note in a chord. */\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'Modifier Context Required');\n    }\n    /** Every modifier must be part of a `ModifierContext`. */\n    setModifierContext(c) {\n        this.modifierContext = c;\n        return this;\n    }\n    /** Get position. */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Set position.\n     * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n     */\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    /** Set the `text_line` for the modifier. */\n    setTextLine(line) {\n        this.text_line = line;\n        return this;\n    }\n    /** Shift modifier down `y` pixels. Negative values shift up. */\n    setYShift(y) {\n        this.y_shift = y;\n        return this;\n    }\n    /** Set spacing from next modifier. */\n    setSpacingFromNextModifier(x) {\n        this.spacingFromNextModifier = x;\n    }\n    /** Get spacing from next modifier. */\n    getSpacingFromNextModifier() {\n        return this.spacingFromNextModifier;\n    }\n    /**\n     * Shift modifier `x` pixels in the direction of the modifier. Negative values\n     * shift reverse.\n     */\n    setXShift(x) {\n        this.x_shift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.x_shift -= x;\n        }\n        else {\n            this.x_shift += x;\n        }\n        return this;\n    }\n    /** Get shift modifier `x` */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render the modifier onto the canvas. */\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n    alignSubNotesWithNote(subNotes, note) {\n        // Shift over the tick contexts of each note\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { RuntimeError } from './util';\n/** Music implements some standard music theory routines. */\nexport class Music {\n    /** Number of an canonical notes (12). */\n    static get NUM_TONES() {\n        return this.canonical_notes.length;\n    }\n    /** Names of root notes ('c', 'd',...) */\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    /** Values of the root notes.*/\n    static get root_values() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    /** Indices of the root notes.*/\n    static get root_indices() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    /** Names of canonical notes ('c', 'c#', 'd',...). */\n    static get canonical_notes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n    static get diatonic_intervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    /** NoteAccidental associated to diatonic intervals. */\n    static get diatonic_accidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    /** Semitones shift associated to intervals .*/\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    /** Semitones shifts associated with scales. */\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    /** Scales associated with m (minor) and M (major). */\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    /** Accidentals abbreviations. */\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    /** Note values. */\n    static get noteValues() {\n        return {\n            c: { root_index: 0, int_val: 0 },\n            cn: { root_index: 0, int_val: 0 },\n            'c#': { root_index: 0, int_val: 1 },\n            'c##': { root_index: 0, int_val: 2 },\n            cb: { root_index: 0, int_val: 11 },\n            cbb: { root_index: 0, int_val: 10 },\n            d: { root_index: 1, int_val: 2 },\n            dn: { root_index: 1, int_val: 2 },\n            'd#': { root_index: 1, int_val: 3 },\n            'd##': { root_index: 1, int_val: 4 },\n            db: { root_index: 1, int_val: 1 },\n            dbb: { root_index: 1, int_val: 0 },\n            e: { root_index: 2, int_val: 4 },\n            en: { root_index: 2, int_val: 4 },\n            'e#': { root_index: 2, int_val: 5 },\n            'e##': { root_index: 2, int_val: 6 },\n            eb: { root_index: 2, int_val: 3 },\n            ebb: { root_index: 2, int_val: 2 },\n            f: { root_index: 3, int_val: 5 },\n            fn: { root_index: 3, int_val: 5 },\n            'f#': { root_index: 3, int_val: 6 },\n            'f##': { root_index: 3, int_val: 7 },\n            fb: { root_index: 3, int_val: 4 },\n            fbb: { root_index: 3, int_val: 3 },\n            g: { root_index: 4, int_val: 7 },\n            gn: { root_index: 4, int_val: 7 },\n            'g#': { root_index: 4, int_val: 8 },\n            'g##': { root_index: 4, int_val: 9 },\n            gb: { root_index: 4, int_val: 6 },\n            gbb: { root_index: 4, int_val: 5 },\n            a: { root_index: 5, int_val: 9 },\n            an: { root_index: 5, int_val: 9 },\n            'a#': { root_index: 5, int_val: 10 },\n            'a##': { root_index: 5, int_val: 11 },\n            ab: { root_index: 5, int_val: 8 },\n            abb: { root_index: 5, int_val: 7 },\n            b: { root_index: 6, int_val: 11 },\n            bn: { root_index: 6, int_val: 11 },\n            'b#': { root_index: 6, int_val: 0 },\n            'b##': { root_index: 6, int_val: 1 },\n            bb: { root_index: 6, int_val: 10 },\n            bbb: { root_index: 6, int_val: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonical_notes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonic_intervals.length;\n    }\n    /** Return root and accidental associated to a note. */\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    /** Return root, accidental and type associated to a key. */\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            // Unspecified type implies major\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    /** Note value associated to a note name. */\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.int_val;\n    }\n    /** Interval value associated to an interval name. */\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    /** Canonical note name associated to a value. */\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonical_notes[noteValue];\n    }\n    /** Interval name associated to a value. */\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonic_intervals[intervalValue];\n    }\n    /**\n     * Given a note, interval, and interval direction, produce the relative note.\n     */\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    /**\n     * Given a root and note value, produce the relative note name.\n     */\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            // Possibly wrap around. (Add +1 for modulo operator)\n            const reverse_interval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverse_interval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverse_interval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    /**\n     * Return scale tones, given intervals. Each successive interval is\n     * relative to the previous one, e.g., Major Scale:\n     *\n     *   TTSTTTS = [2,2,1,2,2,2,1]\n     *\n     * When used with key = 0, returns C scale (which is isomorphic to\n     * interval list).\n     */\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    /**\n     * Return the interval of a note, given a diatonic scale.\n     * e.g., given the scale C, and the note E, returns M3.\n     */\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    /**\n     * Create a scale map that represents the pitch state for a\n     * `keySignature`. For example, passing a `G` to `keySignature` would\n     * return a scale map with every note naturalized except for `F` which\n     * has an `F#` state.\n     */\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.root_indices[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Music } from './music';\nimport { Tables } from './tables';\nimport { Category, isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('Vex.Flow.Accidental', args);\n}\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.ts` for usage examples.\n */\nexport class Accidental extends Modifier {\n    /**\n     * Create accidental.\n     * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n     * For example: `#`, `##`, `b`, `n`, etc.\n     */\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            // Font size for glyphs\n            font_scale: 38,\n            // Padding between accidental and parentheses on each side\n            parenLeftPadding: 2,\n            parenRightPadding: 2,\n        };\n        this.accidental = Tables.accidentalCodes(this.type);\n        defined(this.accidental, 'ArgumentError', `Unknown accidental type: ${type}`);\n        // Cautionary accidentals have parentheses around them\n        this.cautionary = false;\n        this.reset();\n    }\n    /** Accidentals category string. */\n    static get CATEGORY() {\n        return Category.Accidental;\n    }\n    /** Arrange accidentals inside a ModifierContext. */\n    static format(accidentals, state) {\n        // If there are no accidentals, no need to format their positions.\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const musicFont = Tables.currentMusicFont();\n        const noteheadAccidentalPadding = musicFont.lookupMetric('accidental.noteheadAccidentalPadding');\n        const leftShift = state.left_shift + noteheadAccidentalPadding;\n        const accidentalSpacing = musicFont.lookupMetric('accidental.accidentalSpacing');\n        const additionalPadding = musicFont.lookupMetric('accidental.leftPadding'); // padding to the left of all accidentals\n        const accList = [];\n        let prevNote = undefined;\n        let shiftL = 0;\n        // First determine the accidentals' Y positions from the note.keys\n        for (let i = 0; i < accidentals.length; ++i) {\n            const acc = accidentals[i];\n            const note = acc.getNote();\n            const stave = note.getStave();\n            const index = acc.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), shiftL);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n            }\n            else {\n                accList.push({ line: props.line, shift: shiftL, acc });\n            }\n        }\n        // Sort accidentals by line number.\n        accList.sort((a, b) => b.line - a.line);\n        // FIXME: Confusing name. Each object in this array has a property called `line`.\n        // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n        const lineList = [];\n        // amount by which all accidentals must be shifted right or left for\n        // stem flipping, notehead shifting concerns.\n        let accShift = 0;\n        let previousLine = undefined;\n        // Create an array of unique line numbers (lineList) from accList\n        for (let i = 0; i < accList.length; i++) {\n            const acc = accList[i];\n            // if this is the first line, or a new line, add a lineList\n            if (previousLine === undefined || previousLine !== acc.line) {\n                lineList.push({\n                    line: acc.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                });\n            }\n            // if this accidental is not a flat, the accidental needs 3.0 lines lower\n            // clearance instead of 2.5 lines for b or bb.\n            // FIXME: Naming could use work. acc.acc is very awkward\n            if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n                lineList[lineList.length - 1].flatLine = false;\n            }\n            // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n            if (acc.acc.type !== '##') {\n                lineList[lineList.length - 1].dblSharpLine = false;\n            }\n            // Track how many accidentals are on this line:\n            lineList[lineList.length - 1].numAcc++;\n            // Track the total x_offset needed for this line which will be needed\n            // for formatting lines w/ multiple accidentals:\n            // width = accidental width + universal spacing between accidentals\n            lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n            // if this accShift is larger, use it to keep first column accidentals in the same line\n            accShift = acc.shift > accShift ? acc.shift : accShift;\n            previousLine = acc.line;\n        }\n        // ### Place Accidentals in Columns\n        //\n        // Default to a classic triangular layout (middle accidental farthest left),\n        // but follow exceptions as outlined in G. Read's _Music Notation_ and\n        // Elaine Gould's _Behind Bars_.\n        //\n        // Additionally, this implements different vertical collision rules for\n        // flats (only need 2.5 lines clearance below) and double sharps (only\n        // need 2.5 lines of clearance above or below).\n        //\n        // Classic layouts and exception patterns are found in the 'tables.js'\n        // in 'Tables.accidentalColumnsTable'\n        //\n        // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n        // using as few columns as possible for the verticle structure.\n        //\n        // TODO (?): Allow column to be specified for an accidental at run-time?\n        let totalColumns = 0;\n        // establish the boundaries for a group of notes with clashing accidentals:\n        for (let i = 0; i < lineList.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n                // if this note conflicts with the next:\n                if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n                    // include the next note in the group:\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            // Gets an a line from the `lineList`, relative to the current group\n            const getGroupLine = (index) => lineList[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n            // Set columns for the lines in this group:\n            const groupLength = groupEnd - groupStart + 1;\n            // Set the accidental column for each line of the group\n            let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'second_on_bottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spaced_out_tetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spaced_out_pentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'very_spaced_out_pentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spaced_out_hexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'very_spaced_out_hexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            // If the group contains seven members or more, use ascending parallel lines\n            // of accidentals, using as few columns as possible while avoiding collisions.\n            if (groupLength >= 7) {\n                // First, determine how many columns to use:\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < lineList.length; line++) {\n                        if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                // Then, assign a column to each line of accidentals\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                // If the group contains fewer than seven members, use the layouts from\n                // the Tables.accidentalColumnsTable (See: tables.ts).\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            // Increment i to the last note that was set, so that if a lower set of notes\n            // does not conflict at all with this group, it can have its own classic shape.\n            i = groupEnd;\n        }\n        // ### Convert Columns to x_offsets\n        //\n        // This keeps columns aligned, even if they have different accidentals within them\n        // which sometimes results in a larger x_offset than is an accidental might need\n        // to preserve the symmetry of the accidental shape.\n        //\n        // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n        // music with complex chord clusters.\n        //\n        // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n        // parallel columns.\n        // track each column's max width, which will be used as initial shift of later columns:\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = accShift + leftShift;\n        columnXOffsets[0] = accShift + leftShift;\n        // Fill columnWidths with widest needed x-space;\n        // this is what keeps the columns parallel.\n        lineList.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            // this column's offset = this column's width + previous column's offset\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        // Set the xShift for each accidental according to column offsets:\n        let accCount = 0;\n        lineList.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            // handle all of the accidentals on a given line:\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth;\n                accList[accCount].acc.setXShift(xShift);\n                // keep track of the width of accidentals we've added so far, so that when\n                // we loop, we add space for them.\n                lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        // update the overall layout with the full width of the accidental shapes:\n        state.left_shift += totalShift + additionalPadding;\n    }\n    /** Helper function to determine whether two lines of accidentals collide vertically */\n    static checkCollision(line1, line2) {\n        let clearance = line2.line - line1.line;\n        let clearanceRequired = 3;\n        // But less clearance is required for certain accidentals: b, bb and ##.\n        if (clearance > 0) {\n            // then line 2 is on top\n            clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n            if (line1.dblSharpLine)\n                clearance -= 0.5;\n        }\n        else {\n            // line 1 is on top\n            clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n            if (line2.dblSharpLine)\n                clearance -= 0.5;\n        }\n        const collision = Math.abs(clearance) < clearanceRequired;\n        L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n        return collision;\n    }\n    /**\n     * Use this method to automatically apply accidentals to a set of `voices`.\n     * The accidentals will be remembered between all the voices provided.\n     * Optionally, you can also provide an initial `keySignature`.\n     */\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        // Sort the tickables in each voice by their tick position in the voice.\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        // Default key signature is C major.\n        if (!keySignature)\n            keySignature = 'C';\n        // Get the scale map, which represents the current state of each pitch.\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            // Array to store all pitches that modified accidental states\n            // at this tick position\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                // Only StaveNote implements .addModifier(), which is used below.\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                // Go through each key and determine if an accidental should be applied.\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    // Force a natural for every key without an accidental\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    // Determine if the current pitch has the same accidental\n                    // as the scale state\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    // Determine if an identical pitch in the chord already\n                    // modified the accidental state\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    // Remove accidentals\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    // Add the accidental to the StaveNote\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        // Modify the scale map so that the root pitch has an\n                        // updated state\n                        scaleMap[key.root + octave] = pitch;\n                        // Create the accidental\n                        const accidental = new Accidental(accidentalString);\n                        // Attach the accidental to the StaveNote\n                        staveNote.addModifier(accidental, keyIndex);\n                        // Add the pitch to list of pitches that modified accidentals\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                // process grace notes\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    reset() {\n        const fontScale = this.render_options.font_scale;\n        this.glyph = new Glyph(this.accidental.code, fontScale);\n        this.glyph.setOriginX(1.0);\n        if (this.cautionary) {\n            this.parenLeft = new Glyph(Tables.accidentalCodes('{').code, fontScale);\n            this.parenRight = new Glyph(Tables.accidentalCodes('}').code, fontScale);\n            this.parenLeft.setOriginX(1.0);\n            this.parenRight.setOriginX(1.0);\n        }\n    }\n    /** Get width in pixels. */\n    getWidth() {\n        if (this.cautionary) {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            const parenWidth = parenLeft.getMetrics().width +\n                parenRight.getMetrics().width +\n                this.render_options.parenLeftPadding +\n                this.render_options.parenRightPadding;\n            return this.glyph.getMetrics().width + parenWidth;\n        }\n        else {\n            return this.glyph.getMetrics().width;\n        }\n    }\n    /** Attach this accidental to `note`, which must be a `StaveNote`. */\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        // Accidentals attached to grace notes are rendered smaller.\n        if (isGraceNote(note)) {\n            this.render_options.font_scale = 25;\n            this.reset();\n        }\n        return this;\n    }\n    /** If called, draws parenthesis around accidental. */\n    setAsCautionary() {\n        this.cautionary = true;\n        this.render_options.font_scale = 28;\n        this.reset();\n        return this;\n    }\n    /** Render accidental onto canvas. */\n    draw() {\n        const { type, position, index, cautionary, x_shift, y_shift, glyph, render_options: { parenLeftPadding, parenRightPadding }, } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // Figure out the start `x` and `y` coordinates for note and index.\n        const start = note.getModifierStartXY(position, index);\n        let accX = start.x + x_shift;\n        const accY = start.y + y_shift;\n        L('Rendering: ', type, accX, accY);\n        if (!cautionary) {\n            glyph.render(ctx, accX, accY);\n        }\n        else {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            // Render the accidental in parentheses.\n            parenRight.render(ctx, accX, accY);\n            accX -= parenRight.getMetrics().width;\n            accX -= parenRightPadding;\n            accX -= this.accidental.parenRightPaddingAdjustment;\n            glyph.render(ctx, accX, accY);\n            accX -= glyph.getMetrics().width;\n            accX -= parenLeftPadding;\n            parenLeft.render(ctx, accX, accY);\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\nAccidental.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('Vex.Flow.Stem', args);\n}\nexport class Stem extends Element {\n    constructor(options) {\n        super();\n        this.stem_up_y_offset = 0;\n        this.stem_down_y_offset = 0;\n        this.stem_up_y_base_offset = 0;\n        this.stem_down_y_base_offset = 0;\n        // Default notehead x bounds\n        this.x_begin = (options === null || options === void 0 ? void 0 : options.x_begin) || 0;\n        this.x_end = (options === null || options === void 0 ? void 0 : options.x_end) || 0;\n        // Y bounds for top/bottom most notehead\n        this.y_top = (options === null || options === void 0 ? void 0 : options.y_top) || 0;\n        this.y_bottom = (options === null || options === void 0 ? void 0 : options.y_bottom) || 0;\n        // Stem top extension\n        this.stem_extension = (options === null || options === void 0 ? void 0 : options.stem_extension) || 0;\n        // Direction of the stem\n        this.stem_direction = (options === null || options === void 0 ? void 0 : options.stem_direction) || 0;\n        // Flag to override all draw calls\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (options === null || options === void 0 ? void 0 : options.stemletHeight) || 0;\n        // Use to adjust the rendered height without affecting\n        // the results of `.getExtents()`\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    static get CATEGORY() {\n        return Category.Stem;\n    }\n    // Stem directions\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    // Theme\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    setOptions(options) {\n        // Changing where the stem meets the head\n        this.stem_up_y_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_offset) || 0;\n        this.stem_down_y_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_offset) || 0;\n        this.stem_up_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_base_offset) || 0;\n        this.stem_down_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_base_offset) || 0;\n    }\n    // Set the x bounds for the default notehead\n    setNoteHeadXBounds(x_begin, x_end) {\n        this.x_begin = x_begin;\n        this.x_end = x_end;\n        return this;\n    }\n    // Set the direction of the stem in relation to the noteheads\n    setDirection(direction) {\n        this.stem_direction = direction;\n    }\n    // Set the extension for the stem, generally for flags or beams\n    setExtension(ext) {\n        this.stem_extension = ext;\n    }\n    getExtension() {\n        return this.stem_extension;\n    }\n    // The the y bounds for the top and bottom noteheads\n    setYBounds(y_top, y_bottom) {\n        this.y_top = y_top;\n        this.y_bottom = y_bottom;\n    }\n    // Gets the entire height for the stem\n    getHeight() {\n        const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n        const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension); // parentheses just for grouping.\n        return unsigned_height * this.stem_direction;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    // Get the y coordinates for the very base of the stem to the top of\n    // the extension\n    getExtents() {\n        const isStemUp = this.stem_direction === Stem.UP;\n        const ys = [this.y_top, this.y_bottom];\n        const stemHeight = Stem.HEIGHT + this.stem_extension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Tables.currentMusicFont().lookupMetric('stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    // Render the stem onto the canvas\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stem_x;\n        let stem_y;\n        const stem_direction = this.stem_direction;\n        let y_base_offset = 0;\n        if (stem_direction === Stem.DOWN) {\n            // Down stems are rendered to the left of the head.\n            stem_x = this.x_begin;\n            stem_y = this.y_top + this.stem_down_y_offset;\n            y_base_offset = this.stem_down_y_base_offset;\n        }\n        else {\n            // Up stems are rendered to the right of the head.\n            stem_x = this.x_end;\n            stem_y = this.y_bottom - this.stem_up_y_offset;\n            y_base_offset = this.stem_up_y_base_offset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n        // The offset from the stem's base which is required fo satisfy the stemlet height\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n        // Draw the stem\n        ctx.save();\n        ctx.openGroup('stem', this.getAttribute('id'), { pointerBBox: true });\n        this.applyStyle(ctx);\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n        ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n        ctx.stroke();\n        this.restoreStyle(ctx);\n        ctx.closeGroup();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`. */\nStem.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextFormatter.DEBUG)\n        log('Vex.Flow.TextFormatter', args);\n}\n/**\n * Text widths are stored in a cache, so we don't have to recompute widths\n * for the same font + string combination.\n *\n * The cache is first keyed by the font information. The key is of the form:\n *   `${family}-${size}-${weight}-${style}`\n * The second level key is the specific text to be measured.\n *\n * The stored value is the measured width in `em` units.\n *   textWidth == textWidthCache[cacheKey][textToMeasure]\n */\nconst textWidthCache = {};\n/**\n * Applications may register additional fonts via `TextFormatter.registerInfo(info)`.\n * The metrics for those fonts will be made available to the application.\n */\nconst registry = {};\nexport class TextFormatter {\n    /**\n     * Use `TextFormatter.create(...)` to build an instance from information previously\n     * registered via `TextFormatter.registerInfo(info)`.\n     */\n    constructor(formatterInfo) {\n        /** Font family. */\n        this.family = '';\n        /** Specified in `pt` units. */\n        this.size = 14;\n        /** Font metrics are extracted at 1000 upem (units per em). */\n        this.resolution = 1000;\n        /**\n         * For text formatting, we do not require glyph outlines, but instead rely on glyph\n         * bounding box metrics such as:\n         * ```\n         * {\n         *    x_min: 48,\n         *    x_max: 235,\n         *    y_min: -17,\n         *    y_max: 734,\n         *    ha: 751,\n         *    leftSideBearing: 48,\n         *    advanceWidth: 286,\n         *  }\n         * ```\n         */\n        this.glyphs = {};\n        this.serifs = false;\n        this.monospaced = false;\n        this.italic = false;\n        this.bold = false;\n        this.superscriptOffset = 0;\n        this.subscriptOffset = 0;\n        this.maxSizeGlyph = 'H';\n        // This is an internal key used to index the `textWidthCache`.\n        this.cacheKey = '';\n        this.updateParams(formatterInfo);\n    }\n    /**\n     * Return all registered font families.\n     */\n    static getFontFamilies() {\n        const registeredFonts = [];\n        for (const fontFamily in registry) {\n            const formatterInfo = registry[fontFamily];\n            registeredFonts.push(Object.assign({}, formatterInfo));\n        }\n        return registeredFonts;\n    }\n    /**\n     * Call `TextFormatter.registerInfo(info)` to register font information before using this method.\n     *\n     * This method creates a formatter for the font that most closely matches the requested font.\n     * We compare font family, bold, and italic attributes.\n     * This method will return a fallback formatter if there are no matches.\n     */\n    static create(requestedFont = {}) {\n        L('create: ', requestedFont);\n        if (!requestedFont.family) {\n            requestedFont.family = Font.SANS_SERIF;\n        }\n        // TODO: One potential (small) optimization is to cache the TextFormatter object\n        // returned for each font info. We would probably want to clear the cache if\n        // the registry is ever updated.\n        const candidates = [];\n        // The incoming font family is a string of comma-separated font family names.\n        // (e.g., `PetalumaScript, Arial, sans-serif`).\n        const requestedFamilies = requestedFont.family.split(/\\s*,\\s*/);\n        for (const requestedFamily of requestedFamilies) {\n            for (const fontFamily in registry) {\n                // Support cases where the registry contains 'Roboto Slab Medium',\n                // but the requestedFont.family is 'Roboto Slab'.\n                if (fontFamily.startsWith(requestedFamily)) {\n                    candidates.push(registry[fontFamily]);\n                }\n            }\n            if (candidates.length > 0) {\n                break;\n            }\n        }\n        let formatter;\n        if (candidates.length === 0) {\n            // No match, so return a fallback text formatter.\n            formatter = new TextFormatter(Object.values(registry)[0]);\n        }\n        else if (candidates.length === 1) {\n            formatter = new TextFormatter(candidates[0]);\n        }\n        else {\n            const bold = Font.isBold(requestedFont.weight);\n            const italic = Font.isItalic(requestedFont.style);\n            const perfectMatch = candidates.find((f) => f.bold === bold && f.italic === italic);\n            if (perfectMatch) {\n                formatter = new TextFormatter(perfectMatch);\n            }\n            else {\n                const partialMatch = candidates.find((f) => f.italic === italic || f.bold === bold);\n                if (partialMatch) {\n                    formatter = new TextFormatter(partialMatch);\n                }\n                else {\n                    formatter = new TextFormatter(candidates[0]);\n                }\n            }\n        }\n        const fontSize = requestedFont.size;\n        if (typeof fontSize !== 'undefined') {\n            const fontSizeInPt = Font.convertSizeToPointValue(fontSize);\n            formatter.setFontSize(fontSizeInPt);\n        }\n        return formatter;\n    }\n    /**\n     * @param fontFamily used as a key to the font registry.\n     * @returns the same info object that was passed in via `TextFormatter.registerInfo(info)`\n     */\n    static getInfo(fontFamily) {\n        return registry[fontFamily];\n    }\n    /**\n     * Apps may register their own fonts and metrics, and those metrics\n     * will be available to the app for formatting.\n     *\n     * Metrics can be generated from a font file using fontgen_text.js in the tools/fonts directory.\n     * @param info\n     * @param overwrite\n     */\n    static registerInfo(info, overwrite = false) {\n        L('registerInfo: ', info, overwrite);\n        const fontFamily = info.family;\n        const currFontInfo = registry[fontFamily];\n        if (currFontInfo === undefined || overwrite) {\n            registry[fontFamily] = info;\n        }\n    }\n    updateParams(params) {\n        if (params.family)\n            this.family = params.family;\n        if (params.resolution)\n            this.resolution = params.resolution;\n        if (params.glyphs)\n            this.glyphs = params.glyphs;\n        if (params.serifs)\n            this.serifs = params.serifs;\n        if (params.monospaced)\n            this.monospaced = params.monospaced;\n        if (params.italic)\n            this.italic = params.italic;\n        if (params.bold)\n            this.bold = params.bold;\n        if (params.maxSizeGlyph)\n            this.maxSizeGlyph = params.maxSizeGlyph;\n        if (params.superscriptOffset)\n            this.superscriptOffset = params.superscriptOffset;\n        if (params.subscriptOffset)\n            this.subscriptOffset = params.subscriptOffset;\n        this.updateCacheKey();\n    }\n    /** Create a hash with the current font data, so we can cache computed widths. */\n    updateCacheKey() {\n        const family = this.family.replace(/\\s+/g, '_');\n        const size = this.size;\n        const weight = this.bold ? FontWeight.BOLD : FontWeight.NORMAL;\n        const style = this.italic ? FontStyle.ITALIC : FontStyle.NORMAL;\n        // Use the same key format as SVGContext.\n        this.cacheKey = `${family}%${size}%${weight}%${style}`;\n    }\n    /**\n     * The glyphs table is indexed by the character (e.g., 'C', '@').\n     * See: robotoslab_glyphs.ts & petalumascript_glyphs.ts.\n     */\n    getGlyphMetrics(character) {\n        if (this.glyphs[character]) {\n            return this.glyphs[character];\n        }\n        else {\n            return this.glyphs[this.maxSizeGlyph];\n        }\n    }\n    get maxHeight() {\n        const metrics = this.getGlyphMetrics(this.maxSizeGlyph);\n        return (metrics.ha / this.resolution) * this.fontSizeInPixels;\n    }\n    /**\n     * Retrieve the character's advanceWidth as a fraction of an `em` unit.\n     * For the space character ' ' as defined in the:\n     *   petalumascript_glyphs.ts: 250 advanceWidth in the 1000 unitsPerEm font returns 0.25.\n     *   robotoslab_glyphs.ts:     509 advanceWidth in the 2048 unitsPerEm font returns 0.2485.\n     */\n    getWidthForCharacterInEm(c) {\n        var _a;\n        const metrics = this.getGlyphMetrics(c);\n        if (!metrics) {\n            // An arbitrary number, close to the `em` width of the '#' and '5' characters in PetalumaScript.\n            return 0.65;\n        }\n        else {\n            const advanceWidth = (_a = metrics.advanceWidth) !== null && _a !== void 0 ? _a : 0;\n            return advanceWidth / this.resolution;\n        }\n    }\n    /**\n     * Retrieve the total width of `text` in `em` units.\n     */\n    getWidthForTextInEm(text) {\n        const key = this.cacheKey;\n        // Get the cache for this specific font family, size, weight, style combination.\n        // The cache contains previously computed widths for different `text` strings.\n        let cachedWidths = textWidthCache[key];\n        if (cachedWidths === undefined) {\n            cachedWidths = {};\n            textWidthCache[key] = cachedWidths;\n        }\n        let width = cachedWidths[text];\n        if (width === undefined) {\n            width = 0;\n            for (let i = 0; i < text.length; ++i) {\n                width += this.getWidthForCharacterInEm(text[i]);\n            }\n            cachedWidths[text] = width;\n        }\n        return width;\n    }\n    /** The width of the text (in `em`) is scaled by the font size (in `px`). */\n    getWidthForTextInPx(text) {\n        return this.getWidthForTextInEm(text) * this.fontSizeInPixels;\n    }\n    /**\n     * @param size in pt.\n     */\n    setFontSize(size) {\n        this.size = size;\n        // The width cache key depends on the current font size.\n        this.updateCacheKey();\n        return this;\n    }\n    /** `this.size` is specified in points. Convert to pixels. */\n    get fontSizeInPixels() {\n        return this.size * Font.scaleToPxFrom.pt;\n    }\n    getResolution() {\n        return this.resolution;\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextFormatter.DEBUG` to `true`. */\nTextFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote, isTabNote } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('Vex.Flow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nexport class Annotation extends Modifier {\n    /**\n     * Annotations inherit from `Modifier` and is positioned correctly when\n     * in a `ModifierContext`.\n     * Create a new `Annotation` with the string `text`.\n     */\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        // warning: the default in the constructor is TOP, but in the factory the default is BOTTOM.\n        // this is to support legacy application that may expect this.\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n        this.resetFont();\n        // The default width is calculated from the text.\n        this.setWidth(Tables.textWidth(text));\n    }\n    /** Annotations category string. */\n    static get CATEGORY() {\n        return Category.Annotation;\n    }\n    // Use the same padding for annotations as note head so the\n    // words don't run into each other.\n    static get minAnnotationPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Arrange annotations within a `ModifierContext` */\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            const textFormatter = TextFormatter.create(annotation.textFont);\n            // Text height is expressed in fractional stave spaces.\n            const textLines = (5 + textFormatter.maxHeight) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const glyphWidth = note.getGlyph().getWidth();\n            // Get the text width from the font metrics.\n            const textWidth = textFormatter.getWidthForTextInPx(annotation.text);\n            if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n                maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n            }\n            else if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n                maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                rightWidth = Math.max(rightWidth, textWidth);\n            }\n            else {\n                leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n                rightWidth = Math.max(rightWidth, textWidth / 2);\n                maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n            }\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (isTabNote(note)) {\n                if (note.render_options.draw_stem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (isTabNote(note)) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.top_text_line + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.top_text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.top_text_line);\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (isTabNote(note)) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.text_line + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.text_line);\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.text_line);\n            }\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    /**\n     * Set vertical position of text (above or below stave).\n     * @param just value in `AnnotationVerticalJustify`.\n     */\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    /**\n     * Get horizontal justification.\n     */\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    /**\n     * Set horizontal justification.\n     * @param justification value in `Annotation.Justify`.\n     */\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    /** Render text beside the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const textFormatter = TextFormatter.create(this.textFont);\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        // Apply style might not save context, if this.style is undefined, so we\n        // still need to save context state just before this, since we will be\n        // changing ctx parameters below.\n        this.applyStyle();\n        ctx.openGroup('annotation', this.getAttribute('id'));\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText(this.text).width;\n        const text_height = textFormatter.maxHeight + 2;\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - text_width;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - text_width / 2;\n        } /* CENTER_STEM */\n        else {\n            x = note.getStemX() - text_width / 2;\n        }\n        let stem_ext = {};\n        let spacing = 0;\n        const has_stem = note.hasStem();\n        const stave = note.checkStave();\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        if (has_stem) {\n            stem_ext = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            // Use the largest (lowest) Y value\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE + text_height;\n            if (has_stem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stem_ext.topY + text_height + spacing * this.text_line);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.text_line) - 1;\n            const yb = stave.getYForBottomText(this.text_line);\n            y = yt + (yb - yt) / 2 + text_height / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            y = note.getYs()[0] - (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (has_stem && stemDirection === Stem.UP) {\n                // If the stem is above the stave already, go with default line width vs. actual\n                // since the lines between don't really matter.\n                spacing = stem_ext.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stem_ext.topY - spacing * (this.text_line + 1));\n            }\n        } /* CENTER_STEM */\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        ctx.fillText(this.text, x, y);\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\nAnnotation.DEBUG = false;\nAnnotation.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n/** Text annotations can be positioned and justified relative to the note. */\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('Vex.Flow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\n// This includes both staff and ledger lines\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    // Initially, snap to nearest staff line or space\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\n// Helper function for checking if a Note object is either a StaveNote or a GraceNote.\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nfunction getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nfunction getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\n/**\n * Get the initial offset of the articulation from the y value of the starting position.\n * This is required because the top/bottom text positions already have spacing applied to\n * provide a \"visually pleasant\" default position. However the y values provided from\n * the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n * normalizes this asymmetry.\n * @param note\n * @param position\n * @returns\n */\nfunction getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            // this amount is larger than the stem-tip offset because we start from\n            // the center of the notehead\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.ts` for usage examples.\n */\nexport class Articulation extends Modifier {\n    /**\n     * Create a new articulation.\n     * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts`\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.position = BELOW;\n        this.render_options = {\n            font_scale: 38,\n        };\n        this.reset();\n    }\n    /** Articulations category string. */\n    static get CATEGORY() {\n        return Category.Articulation;\n    }\n    /**\n     * FIXME:\n     * Most of the complex formatting logic (ie: snapping to space) is\n     * actually done in .render(). But that logic belongs in this method.\n     *\n     * Unfortunately, this isn't possible because, by this point, stem lengths\n     * have not yet been finalized. Finalized stem lengths are required to determine the\n     * initial position of any stem-side articulation.\n     *\n     * This indicates that all objects should have their stave set before being\n     * formatted. It can't be an optional if you want accurate vertical positioning.\n     * Consistently positioned articulations that play nice with other modifiers\n     * won't be possible until we stop relying on render-time formatting.\n     *\n     * Ideally, when this function has completed, the vertical articulation positions\n     * should be ready to render without further adjustment. But the current state\n     * is far from this ideal.\n     */\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        let maxGlyphWidth = 0;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), defined(articulation.glyph.getMetrics().height) / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            maxGlyphWidth = Math.max(note.getGlyph().getWidth(), maxGlyphWidth);\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            // Decide if we need to consider beam direction in placement.\n            if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.top_text_line, ABOVE);\n                const curTop = noteLine + state.top_text_line + 0.5;\n                // If articulation must be above stave, add lines between note and stave top\n                if (!articulation.articulation.between_lines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.top_text_line);\n                state.top_text_line += increment;\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.text_line, BELOW);\n                const curBottom = noteLine + state.text_line + 0.5;\n                // if articulation must be below stave, add lines from note to stave bottom\n                if (!articulation.articulation.between_lines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.text_line);\n                state.text_line += increment;\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        const overlap = Math.min(Math.max(width - maxGlyphWidth, 0), Math.max(width - (state.left_shift + state.right_shift), 0));\n        state.left_shift += overlap / 2;\n        state.right_shift += overlap / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(artic, 0));\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        const articulation = defined(this.articulation, 'ArgumentError', `Articulation not found: ${this.type}`);\n        const code = (this.position === ABOVE ? articulation.aboveCode : articulation.belowCode) || articulation.code;\n        this.glyph = new Glyph(code !== null && code !== void 0 ? code : '', this.render_options.font_scale);\n        this.setWidth(defined(this.glyph.getMetrics().width));\n    }\n    /** Render articulation in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, glyph, text_line: textLine } = this;\n        const canSitBetweenLines = this.articulation.between_lines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        // Articulations are centered over/under the note head.\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        const padding = Tables.currentMusicFont().lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n        let y = {\n            [ABOVE]: () => {\n                glyph.setOrigin(0.5, 1);\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                glyph.setOrigin(0.5, 0);\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                glyph.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + padding * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        glyph.render(ctx, x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2021.\n// MIT License\nimport { Category } from './typeguard';\nexport class RenderContext {\n    static get CATEGORY() {\n        return Category.RenderContext;\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n    /**\n     * This is kept for backwards compatibility with 3.0.9.\n     * @deprecated use `setFont(...)` instead since it now supports CSS font shorthand.\n     */\n    setRawFont(f) {\n        this.setFont(f);\n        return this;\n    }\n}\n/**\n * Draw a tiny dot marker on the specified context. A great debugging aid.\n * @param ctx context\n * @param x dot x coordinate\n * @param y dot y coordinate\n * @param color\n */\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    // draw a circle\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport class Tickable extends Element {\n    constructor() {\n        super();\n        this._preFormatted = false;\n        this._postFormatted = false;\n        // These properties represent the duration of\n        // this tickable element.\n        this.ticks = new Fraction(0, 1); // Fractional value of ticks\n        this.intrinsicTicks = 0; // Floating point value of ticks\n        this.tickMultiplier = new Fraction(1, 1);\n        // Formatter metrics\n        this.width = 0;\n        this.x_shift = 0; // Shift from tick context\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.align_center = false;\n        this.center_x_shift = 0; // Shift from tick context if center aligned\n        // This flag tells the formatter to ignore this tickable during\n        // formatting and justification. It is set by tickables such as BarNote.\n        this.ignore_ticks = false;\n        // This is a space for an external formatting class or function to maintain\n        // metrics.\n        this.formatterMetrics = {\n            // The freedom of a tickable is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n            // The simplified rational duration of this tick as a string. It can be\n            // used as an index to a map or hashtable.\n            duration: '',\n            // The number of formatting iterations undergone.\n            iterations: 0,\n            // The space in pixels allocated by this formatter, along with the mean space\n            // for tickables of this duration, and the deviation from the mean.\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    static get CATEGORY() {\n        return Category.Tickable;\n    }\n    /** Reset the Tickable, this function will be overloaded. */\n    reset() {\n        return this;\n    }\n    /** Return the ticks. */\n    getTicks() {\n        return this.ticks;\n    }\n    /** Check if it ignores the ticks. */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Ignore the ticks. */\n    setIgnoreTicks(flag) {\n        this.ignore_ticks = flag;\n        return this;\n    }\n    /** Set width of note. Used by the formatter for positioning. */\n    setWidth(width) {\n        this.width = width;\n    }\n    /** Get width of note. Used by the formatter for positioning. */\n    getWidth() {\n        if (!this._preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    /** Displace note by `x` pixels. Used by the formatter. */\n    setXShift(x) {\n        this.x_shift = x;\n        return this;\n    }\n    /** Get the `x` displaced pixels of the note. */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Get `x` position of this tick context. */\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.x_shift;\n    }\n    /** Return the formatterMetrics. */\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    /** Return the center `x` shift. */\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.center_x_shift;\n        }\n        return 0;\n    }\n    /** Set the center `x` shift. */\n    setCenterXShift(centerXShift) {\n        this.center_x_shift = centerXShift;\n        return this;\n    }\n    // Check if tickable is center aligned. */\n    isCenterAligned() {\n        return this.align_center;\n    }\n    // Set/unset center alignment. */\n    setCenterAlignment(align_center) {\n        this.align_center = align_center;\n        return this;\n    }\n    /**\n     * Return the associated voice. Every tickable must be associated with a voice.\n     * This allows formatters and preFormatter to associate them with the right modifierContexts.\n     */\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    /** Set the associated voice. */\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    /** Get the tuplet. */\n    getTuplet() {\n        return this.tuplet;\n    }\n    /** Return the intrinsic ticks. */\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    /**\n     * Reset the specific Tuplet if this is not provided, all tuplets are reset.\n     * Remove any prior tuplets from the tick calculation and\n     * reset the intrinsic tick value.\n     */\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                // Revert old multiplier by inverting numerator & denom.:\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            // Revert old multiplier by inverting numerator & denom.:\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    /** Attach to new tuplet. */\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    /**\n     * Add self to the provided ModifierContext `mc`.\n     * If this tickable has modifiers, set modifierContext.\n     * @returns this\n     */\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        this._preFormatted = false;\n        return this;\n    }\n    /**\n     * Optional, if tickable has modifiers, associate a Modifier.\n     * @param mod the modifier\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        this._preFormatted = false;\n        return this;\n    }\n    /** Get the list of associated modifiers. */\n    getModifiers() {\n        return this.modifiers;\n    }\n    /** Set the Tick Context. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this._preFormatted = false;\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    /** Preformat the Tickable. */\n    preFormat() {\n        if (this._preFormatted)\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    /** Set preformatted status. */\n    set preFormatted(value) {\n        this._preFormatted = value;\n    }\n    get preFormatted() {\n        return this._preFormatted;\n    }\n    /** Postformat the Tickable. */\n    postFormat() {\n        if (this._postFormatted)\n            return this;\n        this._postFormatted = true;\n        return this;\n    }\n    /** Set postformatted status. */\n    set postFormatted(value) {\n        this._postFormatted = value;\n    }\n    get postFormatted() {\n        return this._postFormatted;\n    }\n    /** Return the intrinsic ticks. */\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    /** Set the intrinsic ticks. */\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Get the tick multiplier. */\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    /** Apply a tick multiplier. */\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Set the duration. */\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    /** Attach this note to a modifier context. */\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { drawDot } from './rendercontext';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport class Note extends Tickable {\n    /**\n     * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n     * positioning and layout.\n     *\n     * @param noteStruct To create a new note you need to provide a `noteStruct`.\n     */\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        /** Parses `noteStruct` and get note properties. */\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        // Set note properties from parameters.\n        this.keys = noteStruct.keys || [];\n        // per-pitch properties\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.duration_override) {\n            // Custom duration\n            this.setDuration(noteStruct.duration_override);\n        }\n        else {\n            // Default duration\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        // Get the glyph code for this note from the font.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Tables.getGlyphProps(this.duration, t));\n        // Note to play for audio players.\n        this.playNote = undefined;\n        // Positioning contexts used by the Formatter.\n        this.ignore_ticks = false;\n        // Positioning variables\n        this.width = 0; // Width in pixels calculated after preFormat\n        this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n        this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n        this.x_shift = 0; // X shift from tick context X\n        this.ys = []; // list of y coordinates for each note\n        // we need to hold on to these for ties and beams.\n        if (noteStruct.align_center) {\n            this.setCenterAlignment(noteStruct.align_center);\n        }\n        // The render surface.\n        this.render_options = {\n            annotation_spacing: 5,\n            glyph_font_scale: 1,\n            stroke_px: 1,\n            scale: 1,\n            font: '',\n            y_shift: 0,\n        };\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Note;\n    }\n    /** Debug helper. Displays various note metrics for the given note. */\n    static plotMetrics(ctx, note, yPos) {\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        // Preserve backwards-compatibility\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        // If specified type is invalid, return undefined.\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        // If no type specified, check duration or custom types\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            // If we have keys, try and check if we've got a custom glyph\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    // We have a custom glyph specified after the note eg. /X2\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        // Calculate the tick duration of the note\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        // Are there any dots?\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        // Add ticks as necessary depending on the numbr of dots\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    /**\n     * Get the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    getPlayNote() {\n        return this.playNote;\n    }\n    /**\n     * Set the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    /**\n     * @returns true if this note is a type of rest.\n     *\n     * Rests don't have pitches, but take up space in the score.\n     * Subclasses should override this default implementation.\n     */\n    isRest() {\n        return false;\n    }\n    /** Add stroke. */\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the target stave. */\n    getStave() {\n        return this.stave;\n    }\n    /** Check and get the target stave. */\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /** Set the target stave. */\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    /** Get spacing to the left of the notes. */\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    /** Get spacing to the right of the notes. */\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    /** Set spacing to the left of the notes. */\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    /** Set spacing to the right of the notes. */\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Get the stave line number for the note. */\n    // eslint-disable-next-line\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    /** Get the stave line number for rest. */\n    getLineForRest() {\n        return 0;\n    }\n    /** Get the glyph associated with this note. */\n    // eslint-disable-next-line\n    getGlyph() {\n        return this.glyph;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        // TODO: FIXME (multiple potential values for this.glyph)\n        if (this.glyph) {\n            if (this.glyph.getMetrics) {\n                return this.glyph.getMetrics().width;\n            }\n            else if (this.glyph.getWidth) {\n                return this.glyph.getWidth(this.render_options.glyph_font_scale);\n            }\n        }\n        return 0;\n    }\n    /**\n     * Set Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    /**\n     * Get Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    /**\n     * Get the Y position of the space above the stave onto which text can\n     * be rendered.\n     */\n    getYForTopText(text_line) {\n        return this.checkStave().getYForTopText(text_line);\n    }\n    /** Return the voice that this note belongs in. */\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    /** Attach this note to `voice`. */\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the `TickContext` for this note. */\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    /** Set the `TickContext` for this note. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Accessor to duration. */\n    getDuration() {\n        return this.duration;\n    }\n    /** Accessor to isDotted. */\n    isDotted() {\n        return this.getModifiersByType('Dot').length > 0;\n    }\n    /** Accessor to hasStem. */\n    hasStem() {\n        return false;\n    }\n    /** Accessor to note type. */\n    getNoteType() {\n        return this.noteType;\n    }\n    /** Get the beam. */\n    getBeam() {\n        return this.beam;\n    }\n    /** Check and get the beam. */\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    /** Check it has a beam. */\n    hasBeam() {\n        return this.beam != undefined;\n    }\n    /** Set the beam. */\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    /**\n     * Attach a modifier to this note.\n     * @param modifier the Modifier to add.\n     * @param index of the key to modify.\n     * @returns this\n     */\n    addModifier(modifier, index = 0) {\n        const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n        // Backwards compatibility with 3.0.9.\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            // eslint-disable-next-line\n            console.warn(signature + ' expected a number for `index`, but received a string.');\n        }\n        // Some versions of VexFlow had the two parameters reversed.\n        // Check here and throw an error if the argument types are not correct.\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        super.addModifier(modifier);\n        return this;\n    }\n    /** Get all modifiers of a specific type in `this.modifiers`. */\n    getModifiersByType(type) {\n        return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n    }\n    /** Get the coordinates for where modifiers begin. */\n    // eslint-disable-next-line\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    getRightParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n    }\n    getLeftParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getLeftDisplacedHeadPx() - this.x_shift : -this.x_shift;\n    }\n    getFirstDotPx() {\n        let px = this.getRightDisplacedHeadPx();\n        if (this.checkModifierContext().getMembers('Parenthesis').length !== 0)\n            px += Tables.currentMusicFont().lookupMetric('parenthesis.default.width');\n        return px;\n    }\n    /** Get the metrics for this note. */\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.getState().left_shift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.getState().right_shift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx - // subtract left modifiers\n            modRightPx - // subtract right modifiers\n            this.leftDisplacedHeadPx - // subtract left displaced head\n            this.rightDisplacedHeadPx; // subtract right displaced head\n        // NOTE: If you change this, remember to update MockTickable.getMetrics() in the tests/ directory.\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            // Modifier spacing.\n            modLeftPx,\n            modRightPx,\n            // Displaced note head on left or right.\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    /**\n     * Get the absolute `X` position of this note's tick context. This\n     * excludes x_shift, so you'll need to factor it in if you're\n     * looking for the post-formatted x-position.\n     */\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        // Position note to left edge of tick context.\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Tables.currentMusicFont().lookupMetric('stave.padding');\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    /** Get the direction of the stem. */\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the top and bottom `y` values of the stem. */\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the `x` coordinate to the right of the note. */\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const note_glyph_width = this.glyph.getWidth();\n        tieStartX += note_glyph_width / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    /** Get the `x` coordinate to the left of the note. */\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const note_glyph_width = this.glyph.getWidth();\n        tieEndX += note_glyph_width / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    // Get the pitches in the note\n    getKeys() {\n        return this.keys;\n    }\n    // Get the properties for all the keys in the note\n    getKeyProps() {\n        return this.keyProps;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    constructor() {\n        super();\n        this.width = 0;\n        this.x = 0;\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    static get CATEGORY() {\n        return Category.StaveModifier;\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    placeGlyphOnLine(glyph, stave, line, customShift = 0) {\n        glyph.setYShift(stave.getYForLine(line !== null && line !== void 0 ? line : 0) - stave.getYForGlyphs() + customShift);\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    static get CATEGORY() {\n        return Category.Barline;\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    // Draw barlines\n    draw(stave) {\n        stave.checkContext();\n        this.setRendered();\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                // If the barline is shifted over (in front of clef/time/key)\n                // Draw vertical bar at the beginning.\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n    }\n    drawVerticalBar(stave, x, double_bar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (double_bar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let x_shift = 3;\n        if (!begin) {\n            x_shift = -5;\n        }\n        staveCtx.fillRect(x + x_shift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dot_radius = 2;\n        // Shift dots left or right\n        if (begin) {\n            x_shift += 4;\n        }\n        else {\n            x_shift -= 4;\n        }\n        const dot_x = x + x_shift + dot_radius / 2;\n        // calculate the y offset based on number of stave lines\n        let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dot_y = topY + y_offset + dot_radius / 2;\n        // draw the top repeat dot\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        // draw the bottom repeat dot\n        dot_y += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author: Aaron (@AaronDavidNewman)\n//\n// This implements chord symbols above/below a chord.\n// Chord symbols are modifiers that can be attached to notes.\n// They can contain multiple 'blocks' which represent text or\n// glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.ts` for usage examples.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('Vex.Flow.ChordSymbol', args);\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolTypes;\n(function (SymbolTypes) {\n    SymbolTypes[SymbolTypes[\"GLYPH\"] = 1] = \"GLYPH\";\n    SymbolTypes[SymbolTypes[\"TEXT\"] = 2] = \"TEXT\";\n    SymbolTypes[SymbolTypes[\"LINE\"] = 3] = \"LINE\";\n})(SymbolTypes || (SymbolTypes = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\n/**\n * ChordSymbol is a modifier that creates a chord symbol above/below a chord.\n * As a modifier, it is attached to an existing note.\n */\nexport class ChordSymbol extends Modifier {\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.useKerning = true;\n        this.reportWidth = true;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.ChordSymbol;\n    }\n    static get superSubRatio() {\n        return ChordSymbol.metrics.global.superSubRatio;\n    }\n    /** Currently unused: Globally turn off text formatting, if the built-in formatting does not work for your font. */\n    static set NO_TEXT_FORMAT(val) {\n        ChordSymbol.noFormat = val;\n    }\n    static get NO_TEXT_FORMAT() {\n        return ChordSymbol.noFormat;\n    }\n    // eslint-disable-next-line\n    static getMetricForGlyph(glyphCode) {\n        if (ChordSymbol.metrics[glyphCode]) {\n            return ChordSymbol.metrics[glyphCode];\n        }\n        return undefined;\n    }\n    static get engravingFontResolution() {\n        return Tables.currentMusicFont().getResolution();\n    }\n    static get spacingBetweenBlocks() {\n        return ChordSymbol.metrics.global.spacing / ChordSymbol.engravingFontResolution;\n    }\n    static getWidthForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0.65; // probably should do something here.\n        }\n        return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n    }\n    static getYShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return metric.yOffset / ChordSymbol.engravingFontResolution;\n    }\n    static getXShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n    }\n    static get superscriptOffset() {\n        return ChordSymbol.metrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get subscriptOffset() {\n        return ChordSymbol.metrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get kerningOffset() {\n        return ChordSymbol.metrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n    }\n    // eslint-disable-next-line\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.chordSymbol;\n    }\n    static get lowerKerningText() {\n        // For example, see: `bravura_metrics.ts`\n        // BravuraMetrics.glyphs.chordSymbol.global.lowerKerningText, which returns an array of letters.\n        // ['D', 'F', 'P', 'T', 'V', 'Y']\n        return ChordSymbol.metrics.global.lowerKerningText;\n    }\n    static get upperKerningText() {\n        return ChordSymbol.metrics.global.upperKerningText;\n    }\n    static isSuperscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    static isSubscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /**\n     * Estimate the width of the whole chord symbol, based on the sum of the widths of the individual blocks.\n     * Estimate how many lines above/below the staff we need.\n     */\n    static format(symbols, state) {\n        var _a;\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let nonSuperWidth = 0;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (const symbol of symbols) {\n            const fontSize = Font.convertSizeToPointValue((_a = symbol.textFont) === null || _a === void 0 ? void 0 : _a.size);\n            const fontAdj = Font.scaleSize(fontSize, 0.05);\n            const glyphAdj = fontAdj * 2;\n            const note = symbol.checkAttachedNote();\n            let symbolWidth = 0;\n            let lineSpaces = 1;\n            let vAlign = false;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = ChordSymbol.isSuperscript(block);\n                const sub = ChordSymbol.isSubscript(block);\n                const superSubScale = sup || sub ? ChordSymbol.superSubRatio : 1;\n                const adj = block.symbolType === SymbolTypes.GLYPH ? glyphAdj * superSubScale : fontAdj * superSubScale;\n                // If there are super/subscripts, they extend beyond the line so\n                // assume they take up 2 lines\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                // If there is a symbol-specific offset, add it but consider font\n                // size since font and glyphs will be interspersed.\n                const fontSize = symbol.textFormatter.fontSizeInPixels;\n                const superSubFontSize = fontSize * superSubScale;\n                if (block.symbolType === SymbolTypes.GLYPH && block.glyph !== undefined) {\n                    block.width = ChordSymbol.getWidthForGlyph(block.glyph) * superSubFontSize;\n                    block.yShift += ChordSymbol.getYShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.xShift += ChordSymbol.getXShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.glyph.scale = block.glyph.scale * adj;\n                }\n                else if (block.symbolType === SymbolTypes.TEXT) {\n                    block.width = block.width * superSubFontSize;\n                    block.yShift += symbol.getYOffsetForText(block.text) * adj;\n                }\n                if (block.symbolType === SymbolTypes.GLYPH &&\n                    block.glyph !== undefined &&\n                    block.glyph.code === ChordSymbol.glyphs.over.code) {\n                    lineSpaces = 2;\n                }\n                block.width += ChordSymbol.spacingBetweenBlocks * fontSize * superSubScale;\n                // If a subscript immediately  follows a superscript block, try to\n                // overlay them.\n                if (sup && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (!ChordSymbol.isSuperscript(prev)) {\n                        nonSuperWidth = width;\n                    }\n                }\n                if (sub && nonSuperWidth > 0) {\n                    vAlign = true;\n                    // slide the symbol over so it lines up with superscript\n                    block.xShift = block.xShift + (nonSuperWidth - width);\n                    width = nonSuperWidth;\n                    nonSuperWidth = 0;\n                    // If we have vertically lined up, turn kerning off.\n                    symbol.setEnableKerning(false);\n                }\n                if (!sup && !sub) {\n                    nonSuperWidth = 0;\n                }\n                block.vAlign = vAlign;\n                width += block.width;\n                symbolWidth = width;\n            }\n            // make kerning adjustments after computing super/subscripts\n            symbol.updateKerningAdjustments();\n            symbol.updateOverBarAdjustments();\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.top_text_line);\n                state.top_text_line += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.text_line + 1);\n                state.text_line += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth() && isStemmableNote(note)) {\n                const glyphWidth = note.getGlyph().getWidth();\n                if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.LEFT) {\n                    maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                    leftWidth = Math.max(leftWidth, symbolWidth) + ChordSymbol.minPadding;\n                }\n                else if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.RIGHT) {\n                    maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                    rightWidth = Math.max(rightWidth, symbolWidth);\n                }\n                else {\n                    leftWidth = Math.max(leftWidth, symbolWidth / 2) + ChordSymbol.minPadding;\n                    rightWidth = Math.max(rightWidth, symbolWidth / 2);\n                    maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                    maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n                }\n            }\n            width = 0; // reset symbol width\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    /**\n     * Default text font.\n     * Choose a font family that works well with the current music engraving font.\n     * @override `Element.TEXT_FONT`.\n     */\n    static get TEXT_FONT() {\n        let family = 'Roboto Slab, Times, serif';\n        if (Tables.currentMusicFont().getName() === 'Petaluma') {\n            // Fixes Issue #1180\n            family = 'PetalumaScript, Arial, sans-serif';\n        }\n        return {\n            family,\n            size: 12,\n            weight: FontWeight.NORMAL,\n            style: FontStyle.NORMAL,\n        };\n    }\n    /**\n     * The offset is specified in `em`. Scale this value by the font size in pixels.\n     */\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    updateOverBarAdjustments() {\n        const barIndex = this.symbolBlocks.findIndex(({ symbolType, glyph }) => symbolType === SymbolTypes.GLYPH && glyph !== undefined && glyph.code === 'csymDiagonalArrangementSlash');\n        if (barIndex < 0) {\n            return;\n        }\n        const bar = this.symbolBlocks[barIndex];\n        const xoff = bar.width / 4;\n        const yoff = 0.25 * this.textFormatter.fontSizeInPixels;\n        let symIndex = 0;\n        for (symIndex === 0; symIndex < barIndex; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift + xoff;\n            symbol.yShift = symbol.yShift - yoff;\n        }\n        for (symIndex = barIndex + 1; symIndex < this.symbolBlocks.length; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift - xoff;\n            symbol.yShift = symbol.yShift + yoff;\n        }\n    }\n    updateKerningAdjustments() {\n        let accum = 0;\n        for (let j = 0; j < this.symbolBlocks.length; ++j) {\n            const symbol = this.symbolBlocks[j];\n            accum += this.getKerningAdjustment(j);\n            symbol.xShift += accum;\n        }\n    }\n    /** Do some basic kerning so that letter chords like 'A' don't have the extensions hanging off to the right. */\n    getKerningAdjustment(j) {\n        if (!this.useKerning) {\n            return 0;\n        }\n        const currSymbol = this.symbolBlocks[j];\n        const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : undefined;\n        let adjustment = 0;\n        // Move things into the '/' over bar\n        if (currSymbol.symbolType === SymbolTypes.GLYPH &&\n            currSymbol.glyph !== undefined &&\n            currSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += currSymbol.glyph.metrics.x_shift;\n        }\n        if (prevSymbol !== undefined &&\n            prevSymbol.symbolType === SymbolTypes.GLYPH &&\n            prevSymbol.glyph !== undefined &&\n            prevSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += prevSymbol.glyph.metrics.x_shift;\n        }\n        // For superscripts that follow a letter without much top part, move it to the left slightly\n        let preKernUpper = false;\n        let preKernLower = false;\n        if (prevSymbol !== undefined && prevSymbol.symbolType === SymbolTypes.TEXT) {\n            preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n            preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n        }\n        const kerningOffsetPixels = ChordSymbol.kerningOffset * this.textFormatter.fontSizeInPixels;\n        // TODO: adjust kern for font size.\n        // Where should this constant live?\n        if (preKernUpper && currSymbol.symbolModifier === SymbolModifiers.SUPERSCRIPT) {\n            adjustment += kerningOffsetPixels;\n        }\n        if (preKernLower && currSymbol.symbolType === SymbolTypes.TEXT) {\n            if (currSymbol.text[0] >= 'a' && currSymbol.text[0] <= 'z') {\n                adjustment += kerningOffsetPixels / 2;\n            }\n            if (ChordSymbol.upperKerningText.some((xx) => xx === (prevSymbol === null || prevSymbol === void 0 ? void 0 : prevSymbol.text[prevSymbol.text.length - 1]))) {\n                adjustment += kerningOffsetPixels / 2;\n            }\n        }\n        return adjustment;\n    }\n    /**\n     * ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n     * Each block can have its own vertical orientation.\n     */\n    // eslint-disable-next-line\n    getSymbolBlock(params = {}) {\n        var _a, _b, _c;\n        const symbolType = (_a = params.symbolType) !== null && _a !== void 0 ? _a : SymbolTypes.TEXT;\n        const symbolBlock = {\n            text: (_b = params.text) !== null && _b !== void 0 ? _b : '',\n            symbolType,\n            symbolModifier: (_c = params.symbolModifier) !== null && _c !== void 0 ? _c : SymbolModifiers.NONE,\n            xShift: 0,\n            yShift: 0,\n            vAlign: false,\n            width: 0,\n        };\n        // Note: symbol widths are resolution and font-independent.\n        // We convert to pixel values when we know what the font is.\n        if (symbolType === SymbolTypes.GLYPH && typeof params.glyph === 'string') {\n            const glyphArgs = ChordSymbol.glyphs[params.glyph];\n            const glyphPoints = 20;\n            symbolBlock.glyph = new Glyph(glyphArgs.code, glyphPoints, { category: 'chordSymbol' });\n            // Beware: glyph.metrics is not the same as glyph.getMetrics() !\n            // rv.glyph.point = rv.glyph.point * rv.glyph.metrics.scale;\n            // rv.width = rv.glyph.getMetrics().width;\n            // don't set yShift here, b/c we need to do it at formatting time after the font is set.\n        }\n        else if (symbolType === SymbolTypes.TEXT) {\n            symbolBlock.width = this.textFormatter.getWidthForTextInEm(symbolBlock.text);\n        }\n        else if (symbolType === SymbolTypes.LINE) {\n            symbolBlock.width = params.width;\n        }\n        return symbolBlock;\n    }\n    /** Add a symbol to this chord, could be text, glyph or line. */\n    // eslint-disable-next-line\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    // ### Convenience functions for creating different types of chord symbol parts.\n    /** Add a text block. */\n    // eslint-disable-next-line\n    addText(text, parameters = {}) {\n        const symbolType = SymbolTypes.TEXT;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text, symbolType }));\n    }\n    /** Add a text block with superscript modifier. */\n    addTextSuperscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a text block with subscript modifier. */\n    addTextSubscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a glyph block with superscript modifier. */\n    addGlyphSuperscript(glyph) {\n        const symbolType = SymbolTypes.GLYPH;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ glyph, symbolType, symbolModifier });\n    }\n    /** Add a glyph block. */\n    // eslint-disable-next-line\n    addGlyph(glyph, params = {}) {\n        const symbolType = SymbolTypes.GLYPH;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { glyph, symbolType }));\n    }\n    /**\n     * Add a glyph for each character in 'text'. If the glyph is not available, use text from the font.\n     * e.g. `addGlyphOrText('(+5#11)')` will use text for the '5' and '11', and glyphs for everything else.\n     */\n    // eslint-disable-next-line\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            if (ChordSymbol.glyphs[char]) {\n                if (str.length > 0) {\n                    this.addText(str, params);\n                    str = '';\n                }\n                this.addGlyph(char, params);\n            }\n            else {\n                // Collect consecutive characters with no glyphs.\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    /** Add a line of the given width, used as a continuation of the previous symbol in analysis, or lyrics, etc. */\n    // eslint-disable-next-line\n    addLine(width, params = {}) {\n        const symbolType = SymbolTypes.LINE;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { symbolType, width }));\n    }\n    /**\n     * Set the chord symbol's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     *\n     * @override See: Element.\n     */\n    setFont(f, size, weight, style) {\n        super.setFont(f, size, weight, style);\n        this.textFormatter = TextFormatter.create(this.textFont);\n        return this;\n    }\n    setEnableKerning(val) {\n        this.useKerning = val;\n        return this;\n    }\n    /** Set vertical position of text (above or below stave). */\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    /** Set horizontal justification. */\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    getWidth() {\n        let width = 0;\n        this.symbolBlocks.forEach((symbol) => {\n            width += symbol.vAlign ? 0 : symbol.width;\n        });\n        return width;\n    }\n    getYOffsetForText(text) {\n        var _a;\n        let acc = 0;\n        let i = 0;\n        for (i = 0; i < text.length; ++i) {\n            const metrics = this.textFormatter.getGlyphMetrics(text[i]);\n            if (metrics) {\n                const yMax = (_a = metrics.y_max) !== null && _a !== void 0 ? _a : 0;\n                acc = yMax < acc ? yMax : acc;\n            }\n        }\n        const resolution = this.textFormatter.getResolution();\n        return i > 0 ? -1 * (acc / resolution) : 0;\n    }\n    /** Render text and glyphs above/below the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        ctx.openGroup('chordsymbol', this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.textFont);\n        let y;\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            // HACK: We need to compensate for the text's height since its origin is bottom-right.\n            y = stave.getYForBottomText(this.text_line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stem_base = note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n                y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n            }\n        }\n        else {\n            // (this.vertical === VerticalJustify.TOP)\n            y = Math.min(stave.getYForTopText(this.text_line), note.getYs()[0] - 10);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            // HorizontalJustify.CENTER_STEM\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', this.textFormatter, x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            const isSuper = ChordSymbol.isSuperscript(symbol);\n            const isSub = ChordSymbol.isSubscript(symbol);\n            let curY = y;\n            L('shift was ', symbol.xShift, symbol.yShift);\n            L('curY pre sub ', curY);\n            if (isSuper) {\n                curY += this.superscriptOffset;\n            }\n            if (isSub) {\n                curY += this.subscriptOffset;\n            }\n            L('curY sup/sub ', curY);\n            if (symbol.symbolType === SymbolTypes.TEXT) {\n                if (isSuper || isSub) {\n                    ctx.save();\n                    if (this.textFont) {\n                        const { family, size, weight, style } = this.textFont;\n                        const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n                        ctx.setFont(family, smallerFontSize, weight, style);\n                    }\n                }\n                // TODO???\n                // We estimate the text width, fill it in with the empirical value so the formatting is even.\n                // const textDim = ctx.measureText(symbol.text);\n                // symbol.width = textDim.width;\n                L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                ctx.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                if (isSuper || isSub) {\n                    ctx.restore();\n                }\n            }\n            else if (symbol.symbolType === SymbolTypes.GLYPH && symbol.glyph) {\n                curY += symbol.yShift;\n                L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n                symbol.glyph.render(ctx, x + symbol.xShift, curY);\n            }\n            else if (symbol.symbolType === SymbolTypes.LINE) {\n                L('Rendering Line : ', symbol.width, x, curY);\n                ctx.beginPath();\n                ctx.setLineWidth(1); // ?\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + symbol.width, curY);\n                ctx.stroke();\n            }\n            x += symbol.width;\n            if (symbol.vAlign) {\n                x += symbol.xShift;\n            }\n        });\n        ctx.closeGroup();\n        ctx.restore();\n    }\n}\nChordSymbol.DEBUG = false;\n// Chord symbols can be positioned and justified relative to the note.\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\n// Glyph data\nChordSymbol.glyphs = {\n    diminished: {\n        code: 'csymDiminished',\n    },\n    dim: {\n        code: 'csymDiminished',\n    },\n    halfDiminished: {\n        code: 'csymHalfDiminished',\n    },\n    '+': {\n        code: 'csymAugmented',\n    },\n    augmented: {\n        code: 'csymAugmented',\n    },\n    majorSeventh: {\n        code: 'csymMajorSeventh',\n    },\n    minor: {\n        code: 'csymMinor',\n    },\n    '-': {\n        code: 'csymMinor',\n    },\n    '(': {\n        code: 'csymParensLeftTall',\n    },\n    leftParen: {\n        code: 'csymParensLeftTall',\n    },\n    ')': {\n        code: 'csymParensRightTall',\n    },\n    rightParen: {\n        code: 'csymParensRightTall',\n    },\n    leftBracket: {\n        code: 'csymBracketLeftTall',\n    },\n    rightBracket: {\n        code: 'csymBracketRightTall',\n    },\n    leftParenTall: {\n        code: 'csymParensLeftVeryTall',\n    },\n    rightParenTall: {\n        code: 'csymParensRightVeryTall',\n    },\n    '/': {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    over: {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    '#': {\n        code: 'accidentalSharp',\n    },\n    b: {\n        code: 'accidentalFlat',\n    },\n};\nChordSymbol.symbolTypes = SymbolTypes;\nChordSymbol.symbolModifiers = SymbolModifiers;\n/** Currently unused. */\nChordSymbol.noFormat = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('Vex.Flow.BarNote', args);\n}\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.ts` for usage examples.\n */\nexport class BarNote extends Note {\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        // Tell the formatter that bar notes have no duration.\n        this.ignore_ticks = true;\n        this.setType(type);\n    }\n    static get CATEGORY() {\n        return Category.BarNote;\n    }\n    /** Get the type of bar note.*/\n    getType() {\n        return this.type;\n    }\n    /** Set the type of bar note. */\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        // Set width to width of relevant `Barline`.\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    /** Overridden to ignore. */\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render note to stave. */\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        this.applyStyle(ctx);\n        const barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.draw(this.checkStave());\n        this.restoreStyle(ctx);\n        this.setRendered();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\nBarNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { TextFormatter } from './textformatter';\nimport { Category, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n/** Bend implements tablature bends. */\nexport class Bend extends Modifier {\n    /**\n     * Example of a phrase:\n     * ```\n     *    [{\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"half\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"1 1/2\"\n     *     width: 8;\n     *   }]\n     * ```\n     * @param text text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n     * @param release if true, render a release. (DEPRECATED)\n     * @param phrase if set, ignore \"text\" and \"release\", and use the more sophisticated phrase specified\n     */\n    constructor(text, release = false, phrase) {\n        super();\n        this.text = text;\n        this.x_shift = 0;\n        this.release = release;\n        this.tap = '';\n        this.resetFont();\n        this.render_options = {\n            line_width: 1.5,\n            line_style: '#777777',\n            bend_width: 8,\n            release_width: 8,\n        };\n        if (phrase) {\n            this.phrase = phrase;\n        }\n        else {\n            // Backward compatibility\n            this.phrase = [{ type: Bend.UP, text: this.text }];\n            if (this.release)\n                this.phrase.push({ type: Bend.DOWN, text: '' });\n        }\n        this.updateWidth();\n    }\n    static get CATEGORY() {\n        return Category.Bend;\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    // Arrange bends in `ModifierContext`\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let last_width = 0;\n        // Format Bends\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (isTabNote(note)) {\n                const stringPos = note.leastString() - 1;\n                if (state.top_text_line < stringPos) {\n                    state.top_text_line = stringPos;\n                }\n            }\n            bend.setXShift(last_width);\n            last_width = bend.getWidth();\n            bend.setTextLine(state.top_text_line);\n        }\n        state.right_shift += last_width;\n        state.top_text_line += 1;\n        return true;\n    }\n    /** Set horizontal shift in pixels. */\n    setXShift(value) {\n        this.x_shift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    /** Get text provided in the constructor. */\n    getText() {\n        return this.text;\n    }\n    getTextHeight() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        return textFormatter.maxHeight;\n    }\n    /** Recalculate width. */\n    updateWidth() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        const measureText = (text) => {\n            return textFormatter.getWidthForTextInPx(text);\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additional_width = bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n                bend.width = Math.max(additional_width, measureText(bend.text)) + 3;\n                bend.draw_width = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.x_shift);\n        return this;\n    }\n    /** Draw the bend on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const x_shift = this.x_shift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        // this.text_line is relative to top string in the group.\n        const bend_height = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) + 3;\n        const annotation_y = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cp_x = x + width;\n            const cp_y = y;\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderRelease = (x, y, width, height) => {\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y); // tip of the arrow\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const render_x = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, render_x, annotation_y);\n            ctx.restore();\n        };\n        let last_bend = undefined;\n        let last_bend_draw_width = 0;\n        let last_drawn_width = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.draw_width)\n                bend.draw_width = 0;\n            if (i === 0)\n                bend.draw_width += x_shift;\n            last_drawn_width = bend.draw_width + last_bend_draw_width - (i === 1 ? x_shift : 0);\n            if (bend.type === Bend.UP) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderArrowHead(start.x, bend_height, +1);\n                }\n                renderBend(start.x, start.y, last_drawn_width, bend_height);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (last_bend && last_bend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (!last_bend) {\n                    last_drawn_width = bend.draw_width;\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n            }\n            renderText(start.x + last_drawn_width, bend.text);\n            last_bend = bend;\n            last_bend_draw_width = bend.draw_width;\n            last_bend.x = start.x;\n            start.x += last_drawn_width;\n        }\n        if (!last_bend || last_bend.x == undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        // Final arrowhead and text\n        if (last_bend.type === Bend.UP) {\n            renderArrowHead(last_bend.x + last_drawn_width, bend_height, +1);\n        }\n        else if (last_bend.type === Bend.DOWN) {\n            renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n        }\n    }\n}\n/** Default text font. */\nBend.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\nimport { Modifier } from './modifier';\nimport { Category, isGraceNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Dot extends Modifier {\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.radius = 2;\n        this.setWidth(5);\n        this.dot_shiftY = 0;\n    }\n    static get CATEGORY() {\n        return Category.Dot;\n    }\n    /** Returns the dots associated to a Note. */\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    /** Add a dot on the specified keys to the notes. */\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    dot.setDotShiftY(note.glyph.dot_shiftY);\n                    note.addModifier(dot, i);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) != undefined) {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyph.dot_shiftY);\n                note.addModifier(dot, options === null || options === void 0 ? void 0 : options.index);\n            }\n            else {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyph.dot_shiftY);\n                note.addModifier(dot, 0);\n            }\n        }\n    }\n    // Arrange dots inside a ModifierContext.\n    static format(dots, state) {\n        const right_shift = state.right_shift;\n        const dot_spacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dot_list = [];\n        const max_shift_map = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                // consider right displaced head with no previous modifier\n                shift = note.getFirstDotPx();\n            }\n            else if (isTabNote(note)) {\n                props = { line: 0.5 }; // Shim key props for dot placement\n                shift = right_shift;\n            }\n            else {\n                // note object is not StaveNote or TabNote.\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const note_id = note.getAttribute('id');\n            dot_list.push({ line: props.line, note, note_id, dot });\n            max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n        }\n        // Sort dots by line number.\n        dot_list.sort((a, b) => b.line - a.line);\n        let dot_shift = right_shift;\n        let x_width = 0;\n        let last_line = null;\n        let last_note = null;\n        let prev_dotted_space = null;\n        let half_shiftY = 0;\n        for (let i = 0; i < dot_list.length; ++i) {\n            const { dot, note, note_id, line } = dot_list[i];\n            // Reset the position of the dot every line.\n            if (line !== last_line || note !== last_note) {\n                dot_shift = max_shift_map[note_id];\n            }\n            if (!note.isRest() && line !== last_line) {\n                if (Math.abs(line % 1) === 0.5) {\n                    // note is on a space, so no dot shift\n                    half_shiftY = 0;\n                }\n                else {\n                    // note is on a line, so shift dot to space above the line\n                    half_shiftY = 0.5;\n                    if (last_note != null && !last_note.isRest() && last_line != null && last_line - line === 0.5) {\n                        // previous note on a space, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                    else if (line + half_shiftY === prev_dotted_space) {\n                        // previous space is dotted, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                }\n            }\n            // convert half_shiftY to a multiplier for dots.draw()\n            if (note.isRest()) {\n                dot.dot_shiftY += -half_shiftY;\n            }\n            else {\n                dot.dot_shiftY = -half_shiftY;\n            }\n            prev_dotted_space = line + half_shiftY;\n            dot.setXShift(dot_shift);\n            dot_shift += dot.getWidth() + dot_spacing; // spacing\n            x_width = dot_shift > x_width ? dot_shift : x_width;\n            last_line = line;\n            last_note = note;\n        }\n        // Update state.\n        state.right_shift += x_width;\n        return true;\n    }\n    setNote(note) {\n        this.note = note;\n        if (isGraceNote(note)) {\n            this.radius *= 0.5;\n            this.setWidth(3);\n        }\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dot_shiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        // Set the starting y coordinate to the base of the stem for TabNotes.\n        if (isTabNote(note)) {\n            start.y = note.getStemExtents().baseY;\n        }\n        const x = start.x + this.x_shift + this.width - this.radius;\n        const y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class FretHandFinger extends Modifier {\n    constructor(finger) {\n        super();\n        this.finger = finger;\n        this.width = 7;\n        this.position = Modifier.Position.LEFT; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.FretHandFinger;\n    }\n    // Arrange fingerings inside a ModifierContext.\n    static format(nums, state) {\n        const { left_shift, right_shift } = state;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const textFormatter = TextFormatter.create(num.textFont);\n            const textHeight = textFormatter.maxHeight;\n            if (num.position === ModifierPosition.ABOVE) {\n                state.top_text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (num.position === ModifierPosition.BELOW) {\n                state.text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (right_shift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prev_note = note;\n            }\n            nums_list.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort fingernumbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = left_shift + shiftL;\n                numShiftR = right_shift + shiftR;\n            }\n            const numWidth = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift + numShiftL);\n                num_shift = left_shift + numWidth; // spacing\n                xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                num_shift = shiftRight + numWidth; // spacing\n                xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.left_shift += xWidthL;\n        state.right_shift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(fingering, index));\n    }\n    setFretHandFinger(finger) {\n        this.finger = finger;\n        return this;\n    }\n    getFretHandFinger() {\n        return this.finger;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let dot_y = start.y + this.y_shift + this.y_offset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dot_x -= 4;\n                dot_y -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dot_x -= 2;\n                dot_y += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        ctx.save();\n        ctx.setFont(this.textFont);\n        ctx.fillText('' + this.finger, dot_x, dot_y);\n        ctx.restore();\n    }\n}\nFretHandFinger.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('Vex.Flow.NoteHead', args);\n}\n/**\n * Draw slashnote head manually. No glyph exists for this.\n * @param ctx the Canvas context\n * @param duration the duration of the note. ex: \"4\"\n * @param x the x coordinate to draw at\n * @param y the y coordinate to draw at\n * @param stem_direction the direction of the stem\n */\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n    const width = Tables.SLASH_NOTEHEAD_WIDTH;\n    ctx.save();\n    ctx.setLineWidth(Tables.STEM_WIDTH);\n    let fill = false;\n    if (Tables.durationToNumber(duration) > 2) {\n        fill = true;\n    }\n    if (!fill)\n        x -= (Tables.STEM_WIDTH / 2) * stem_direction;\n    ctx.beginPath();\n    ctx.moveTo(x, y + staveSpace);\n    ctx.lineTo(x, y + 1);\n    ctx.lineTo(x + width, y - staveSpace);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x, y + staveSpace);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    else {\n        ctx.stroke();\n    }\n    if (Tables.durationToFraction(duration).equals(0.5)) {\n        const breve_lines = [-3, -1, width + 1, width + 3];\n        for (let i = 0; i < breve_lines.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(x + breve_lines[i], y - 10);\n            ctx.lineTo(x + breve_lines[i], y + 11);\n            ctx.stroke();\n        }\n    }\n    ctx.restore();\n}\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nexport class NoteHead extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.custom_glyph = false;\n        this.stem_up_x_offset = 0;\n        this.stem_down_x_offset = 0;\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.note_type)\n            this.noteType = noteStruct.note_type;\n        this.displaced = noteStruct.displaced || false;\n        this.stem_direction = noteStruct.stem_direction || Stem.UP;\n        this.line = noteStruct.line || 0;\n        // Get glyph code based on duration and note type. This could be\n        // regular notes, rests, or other custom codes.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // Swap out the glyph with leger lines\n        if ((this.line > 5 || this.line < 0) && this.glyph.leger_code_head) {\n            this.glyph.code_head = this.glyph.leger_code_head;\n        }\n        this.glyph_code = this.glyph.code_head;\n        this.x_shift = noteStruct.x_shift || 0;\n        if (noteStruct.custom_glyph_code) {\n            this.custom_glyph = true;\n            this.glyph_code = noteStruct.custom_glyph_code;\n            this.stem_up_x_offset = noteStruct.stem_up_x_offset || 0;\n            this.stem_down_x_offset = noteStruct.stem_down_x_offset || 0;\n        }\n        this.setStyle(noteStruct.style);\n        this.slashed = noteStruct.slashed || false;\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE });\n        this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n    }\n    static get CATEGORY() {\n        return Category.NoteHead;\n    }\n    /** Get the width of the notehead. */\n    getWidth() {\n        return this.width;\n    }\n    /** Determine if the notehead is displaced. */\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    /** Get the glyph data. */\n    getGlyph() {\n        return this.glyph;\n    }\n    /** Set the X coordinate. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Get the Y coordinate. */\n    getY() {\n        return this.y;\n    }\n    /** Set the Y coordinate. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Get the stave line the notehead is placed on. */\n    getLine() {\n        return this.line;\n    }\n    /** Set the stave line the notehead is placed on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Get the canvas `x` coordinate position of the notehead. */\n    getAbsoluteX() {\n        // If the note has not been preformatted, then get the static x value\n        // Otherwise, it's been formatted and we should use it's x value relative\n        // to its tick context\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        // For a more natural displaced notehead, we adjust the displacement amount\n        // by half the stem width in order to maintain a slight overlap with the stem\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        const musicFont = Tables.currentMusicFont();\n        const fontShift = musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n        const displacedFontShift = musicFont.lookupMetric('noteHead.displaced.shiftX', 0) * this.stem_direction;\n        return (x +\n            fontShift +\n            (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0));\n    }\n    /** Get the `BoundingBox` for the `NoteHead`. */\n    getBoundingBox() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const spacing = this.checkStave().getSpacingBetweenLines();\n        const half_spacing = spacing / 2;\n        const min_y = this.y - half_spacing;\n        return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n    }\n    /** Set notehead to a provided `stave`. */\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n        this.setWidth(width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the notehead. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let head_x = this.getAbsoluteX();\n        if (this.custom_glyph) {\n            // head_x += this.x_shift;\n            head_x += this.stem_direction === Stem.UP ? this.stem_up_x_offset : this.stem_down_x_offset;\n        }\n        const y = this.y;\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", head_x, y);\n        // Begin and end positions for head.\n        const stem_direction = this.stem_direction;\n        const glyph_font_scale = this.render_options.glyph_font_scale;\n        this.applyStyle(ctx);\n        const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n        if (this.noteType === 's') {\n            const staveSpace = this.checkStave().getSpacingBetweenLines();\n            drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n        }\n        else {\n            Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n                category: this.custom_glyph ? `noteHead.custom.${categorySuffix}` : `noteHead.standard.${categorySuffix}`,\n            });\n        }\n        this.restoreStyle(ctx);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\nNoteHead.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StemmableNote extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n    }\n    static get CATEGORY() {\n        return Category.StemmableNote;\n    }\n    // Get and set the note's `Stem`\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        this.addChildElement(stem);\n        return this;\n    }\n    // Builds and sets a new stem\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag(category = 'flag') {\n        const { glyph } = this;\n        if (this.hasFlag()) {\n            const flagCode = this.getStemDirection() === Stem.DOWN ? glyph.code_flag_downstem : glyph.code_flag_upstem;\n            this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, { category });\n        }\n    }\n    // Get the custom glyph associated with the outer note head on the base of the stem.\n    getBaseCustomNoteHeadGlyph() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    // Get the full length of stem\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    // Get the number of beams for this duration\n    getBeamCount() {\n        const glyph = this.getGlyph();\n        if (glyph) {\n            return glyph.beam_count;\n        }\n        else {\n            return 0;\n        }\n    }\n    // Get the minimum length of stem\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        let length = frac.value() <= 1 ? 0 : 20;\n        // if note is flagged, cannot shorten beam\n        switch (this.duration) {\n            case '8':\n                if (this.beam == undefined)\n                    length = 35;\n                break;\n            case '16':\n                length = this.beam == undefined ? 35 : 25;\n                break;\n            case '32':\n                length = this.beam == undefined ? 45 : 35;\n                break;\n            case '64':\n                length = this.beam == undefined ? 50 : 40;\n                break;\n            case '128':\n                length = this.beam == undefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    // Get/set the direction of the stem\n    getStemDirection() {\n        if (!this.stem_direction)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem_direction;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stem_direction = direction;\n        // Reset and reformat everything. Flag has to be built before calling getStemExtension.\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n            // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n            // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n            const glyph = this.getBaseCustomNoteHeadGlyph() || this.getGlyph();\n            // Get the font-specific customizations for the note heads.\n            const offsets = Tables.currentMusicFont().lookupMetric(`stem.noteHead.${glyph.code_head}`, {\n                offsetYBaseStemUp: 0,\n                offsetYTopStemUp: 0,\n                offsetYBaseStemDown: 0,\n                offsetYTopStemDown: 0,\n            });\n            // Configure the stem to use these offsets.\n            this.stem.setOptions({\n                stem_up_y_offset: offsets.offsetYTopStemUp,\n                stem_down_y_offset: offsets.offsetYTopStemDown,\n                stem_up_y_base_offset: offsets.offsetYBaseStemUp,\n                stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n            });\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    // Get the `x` coordinate of the stem\n    getStemX() {\n        const x_begin = this.getAbsoluteX() + this.x_shift;\n        const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n        const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n        return stem_x;\n    }\n    // Get the `x` coordinate for the center of the glyph.\n    // Used for `TabNote` stems and stemlets over rests\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n    }\n    // Get the stem extension for the current duration\n    getStemExtension() {\n        const glyph = this.getGlyph();\n        if (this.stem_extension_override != undefined) {\n            return this.stem_extension_override;\n        }\n        // Use stem_beam_extension with beams\n        if (this.beam) {\n            return glyph.stem_beam_extension;\n        }\n        if (glyph) {\n            return this.getStemDirection() === Stem.UP ? glyph.stem_up_extension : glyph.stem_down_extension;\n        }\n        return 0;\n    }\n    // Set the stem length to a specific. Will override the default length.\n    setStemLength(height) {\n        this.stem_extension_override = height - Stem.HEIGHT;\n        return this;\n    }\n    // Get the top and bottom `y` values of the stem.\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return Tables.getGlyphProps(this.duration).flag && !this.beam;\n    }\n    /** Post formats the note. */\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    /** Renders the stem onto the canvas. */\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).draw();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.\n//\n// See `tests/stavenote_tests.ts` for usage examples.\nimport { BoundingBox } from './boundingbox';\nimport { Modifier } from './modifier';\nimport { NoteHead } from './notehead';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\nfunction showDeprecationWarningForNoteHeads() {\n    // eslint-disable-next-line\n    console.warn('StaveNote.note_heads is deprecated. Use StaveNote.noteHeads instead.', 'This accessor will be removed in VexFlow 5.0.');\n}\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('Vex.Flow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nexport class StaveNote extends StemmableNote {\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.minLine = 0;\n        this.maxLine = 0;\n        // Sorted variant of keyProps used internally\n        this.sortedKeyProps = [];\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octave_shift = (_b = noteStruct.octave_shift) !== null && _b !== void 0 ? _b : 0;\n        // Pull note rendering properties.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // if true, displace note to right\n        this.displaced = false;\n        this.dot_shiftY = 0;\n        // for displaced ledger lines\n        this.use_default_head_x = false;\n        // Drawing\n        this._noteHeads = [];\n        this.modifiers = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE, \n            // number of stroke px to the left and right of head\n            stroke_px: noteStruct.stroke_px || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        // Set the stem direction\n        if (noteStruct.auto_stem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stem_direction) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    static get CATEGORY() {\n        return Category.StaveNote;\n    }\n    /**\n     * @deprecated Use Stem.UP.\n     */\n    static get STEM_UP() {\n        return Stem.UP;\n    }\n    /**\n     * @deprecated Use Stem.DOWN.\n     */\n    static get STEM_DOWN() {\n        return Stem.DOWN;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Format notes inside a ModifierContext. */\n    static format(notes, state) {\n        if (!notes || notes.length < 2)\n            return false;\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            // Formatting uses sortedKeyProps to calculate line and minL.\n            const props = notes[i].sortedKeyProps;\n            const line = props[0].keyProps.line;\n            let minL = props[props.length - 1].keyProps.line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL = line + notes[i].glyph.line_above;\n                minL = line - notes[i].glyph.line_below;\n            }\n            else {\n                maxL =\n                    stemDirection === 1 ? props[props.length - 1].keyProps.line + stemMax : props[props.length - 1].keyProps.line;\n                minL = stemDirection === 1 ? props[0].keyProps.line : props[0].keyProps.line - stemMax;\n            }\n            notesList.push({\n                line: props[0].keyProps.line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection: stemDirection,\n                stemMax,\n                stemMin,\n                voice_shift: notes[i].getVoiceShiftWidth(),\n                is_displaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        let voices = 0;\n        let noteU = undefined;\n        let noteM = undefined;\n        let noteL = undefined;\n        const draw = [false, false, false];\n        for (let i = 0; i < notesList.length; i++) {\n            draw[i] = notesList[i].note.render_options.draw == false ? false : true;\n        }\n        if (draw[0] && draw[1] && draw[2]) {\n            // Three visible notes\n            voices = 3;\n            noteU = notesList[0];\n            noteM = notesList[1];\n            noteL = notesList[2];\n        }\n        else if (draw[0] && draw[1]) {\n            // Two visible notes, 0 & 1\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[1];\n        }\n        else if (draw[0] && draw[2]) {\n            // Two visible notes, 0 & 2\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[2];\n        }\n        else if (draw[1] && draw[2]) {\n            // Two visible notes, 1 & 2\n            voices = 2;\n            noteU = notesList[1];\n            noteL = notesList[2];\n        }\n        else {\n            // No shift required for less than 2 visible notes\n            return true;\n        }\n        // for two voice backward compatibility, ensure upper voice is stems up\n        // for three voices, the voices must be in order (upper, middle, lower)\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n        let xShift = 0;\n        // Test for two voice note intersection\n        if (voices === 2) {\n            const lineSpacing = noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n                noteL.note.render_options.draw = false;\n            }\n            else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    // shift rest up\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    // shift rest down\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    //Instead of shifting notes, remove the appropriate flag\n                    //If we are sharing a line, switch one notes stem direction.\n                    //If we are sharing a line and in the same voice, only then offset one note\n                    const lineDiff = Math.abs(noteU.line - noteL.line);\n                    if (noteU.note.hasStem() && noteL.note.hasStem()) {\n                        //If we have different dot values, must offset\n                        //Or If we have a white mixed with a black notehead, must offset\n                        let whiteNoteHeadCount = 0;\n                        let blackNoteHeadCount = 0;\n                        if (Tables.durationToNumber(noteU.note.duration) === 2) {\n                            whiteNoteHeadCount++;\n                        }\n                        else if (Tables.durationToNumber(noteU.note.duration) > 2) {\n                            blackNoteHeadCount++;\n                        }\n                        if (Tables.durationToNumber(noteL.note.duration) === 2) {\n                            whiteNoteHeadCount++;\n                        }\n                        else if (Tables.durationToNumber(noteL.note.duration) > 2) {\n                            blackNoteHeadCount++;\n                        }\n                        if ((whiteNoteHeadCount !== 2 && blackNoteHeadCount !== 2) ||\n                            noteU.note.getModifiersByType(Category.Dot).length !== noteL.note.getModifiersByType(Category.Dot).length) {\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (lineDiff < 1 && lineDiff > 0) {\n                            //if the notes are quite close but not on the same line, shift\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (noteU.note.voice !== noteL.note.voice) {\n                            //If we are not in the same voice\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                if (noteU.line != noteL.line) {\n                                    xShift = voiceXShift + 2;\n                                    noteU.note.setXShift(xShift);\n                                }\n                                else {\n                                    //same line, swap stem direction for one note\n                                    if (noteL.stemDirection === 1) {\n                                        noteL.stemDirection = -1;\n                                        noteL.note.setStemDirection(-1);\n                                    }\n                                }\n                            }\n                        } //Very close whole notes\n                    }\n                    else if (lineDiff < 1) {\n                        xShift = voiceXShift + 2;\n                        if (noteU.stemDirection === noteL.stemDirection) {\n                            // upper voice is middle voice, so shift it right\n                            noteU.note.setXShift(xShift);\n                        }\n                        else {\n                            // shift lower voice right\n                            noteL.note.setXShift(xShift);\n                        }\n                    }\n                    else if (noteU.note.hasStem()) {\n                        noteU.stemDirection = -noteU.note.getStemDirection();\n                        noteU.note.setStemDirection(noteU.stemDirection);\n                    }\n                    else if (noteL.note.hasStem()) {\n                        noteL.stemDirection = -noteL.note.getStemDirection();\n                        noteL.note.setStemDirection(noteL.stemDirection);\n                    }\n                }\n            }\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        // For three voices, test if rests can be repositioned\n        //\n        // Special case 1 :: middle voice rest between two notes\n        //\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    // center middle voice rest between the upper and lower voices\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 2; // shift middle rest right\n                    noteM.note.setXShift(xShift);\n                    if (noteL.note.hasBeam() === false) {\n                        noteL.stemDirection = -1;\n                        noteL.note.setStemDirection(-1);\n                    }\n                    if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                        noteU.stemDirection = 1;\n                        noteU.note.setStemDirection(1);\n                    }\n                }\n                // format complete\n                state.right_shift += xShift;\n                return true;\n            }\n        }\n        // Special case 2 :: all voices are rests\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            // Hide upper voice rest\n            noteU.note.render_options.draw = false;\n            // Hide lower voice rest\n            noteL.note.render_options.draw = false;\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        // Test if any other rests can be repositioned\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            // shift upper voice rest up;\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            // shift lower voice rest down\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        // If middle voice intersects upper or lower voice\n        if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n            // shift middle note right\n            xShift = voiceXShift + 2;\n            noteM.note.setXShift(xShift);\n            if (noteL.note.hasBeam() === false) {\n                noteL.stemDirection = -1;\n                noteL.note.setStemDirection(-1);\n            }\n            if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                noteU.stemDirection = 1;\n                noteU.note.setStemDirection(1);\n            }\n        }\n        state.right_shift += xShift;\n        return true;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    reset() {\n        super.reset();\n        // Save prior noteHead styles & reapply them after making new noteheads.\n        const noteHeadStyles = this._noteHeads.map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        this._noteHeads.forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this._noteHeads.forEach((head) => head.setStave(stave));\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        // Update stem extension if a beam is assigned.\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    // Builds a `Stem` for the note\n    buildStem() {\n        this.setStem(new Stem({ hide: !!this.isRest() }));\n        return this;\n    }\n    // Builds a `NoteHead` for each key in the note\n    buildNoteHeads() {\n        this._noteHeads = [];\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        // Draw notes from bottom to top.\n        // For down-stem notes, we draw from top to bottom.\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            // Building noteheads rely on sortedKeNotes in order to calculate the displacements\n            const noteProps = this.sortedKeyProps[i].keyProps;\n            const line = noteProps.line;\n            // Keep track of last line with a note head, so that consecutive heads\n            // are correctly displaced.\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.use_default_head_x = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                note_type: this.noteType,\n                displaced,\n                stem_direction: stemDirection,\n                custom_glyph_code: noteProps.code,\n                glyph_font_scale: this.render_options.glyph_font_scale,\n                x_shift: noteProps.shift_right,\n                stem_up_x_offset: noteProps.stem_up_x_offset,\n                stem_down_x_offset: noteProps.stem_down_x_offset,\n                line: noteProps.line,\n            });\n            this.addChildElement(notehead);\n            this._noteHeads[this.sortedKeyProps[i].index] = notehead;\n        }\n    }\n    // Automatically sets the stem direction based on the keys in the note\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        // Figure out optimal stem direction based on given notes\n        // minLine & maxLine rely on sortedKeyProps\n        this.minLine = this.sortedKeyProps[0].keyProps.line;\n        this.maxLine = this.sortedKeyProps[this.keyProps.length - 1].keyProps.line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    // Calculates and stores the properties for each key in the note\n    calculateKeyProps() {\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            // All rests use the same position on the line.\n            // if (this.glyph.rest) key = this.glyph.position;\n            if (this.glyph.rest)\n                this.glyph.position = key;\n            const options = { octave_shift: this.octave_shift || 0, duration: this.duration };\n            const props = Tables.keyProperties(key, this.clef, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            // Override line placement for default rests\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            // Calculate displacement of this note\n            const line = props.line;\n            if (lastLine == undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) === 0.5) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    // Have to mark the previous note as\n                    // displaced as well, for modifier placement\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        // Sort the notes from lowest line to highest line in sortedKeyProps\n        // Warn no longer required as keyProps remains unsorted\n        this.keyProps.forEach((keyProps, index) => {\n            this.sortedKeyProps.push({ keyProps, index });\n        });\n        this.sortedKeyProps.sort((a, b) => a.keyProps.line - b.keyProps.line);\n    }\n    // Get the `BoundingBox` for the entire note\n    getBoundingBox() {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const { width: w, modLeftPx, leftDisplacedHeadPx } = this.getMetrics();\n        const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n        let minY = 0;\n        let maxY = 0;\n        const halfLineSpacing = ((_b = (_a = this.getStave()) === null || _a === void 0 ? void 0 : _a.getSpacingBetweenLines()) !== null && _b !== void 0 ? _b : 0) / 2;\n        const lineSpacing = halfLineSpacing * 2;\n        if (this.isRest()) {\n            const y = this.ys[0];\n            const frac = Tables.durationToFraction(this.duration);\n            if (frac.equals(1) || frac.equals(2)) {\n                minY = y - halfLineSpacing;\n                maxY = y + halfLineSpacing;\n            }\n            else {\n                minY = y - this.glyph.line_above * lineSpacing;\n                maxY = y + this.glyph.line_below * lineSpacing;\n            }\n        }\n        else if (this.glyph.stem) {\n            const ys = this.getStemExtents();\n            ys.baseY += halfLineSpacing * this.getStemDirection();\n            minY = Math.min(ys.topY, ys.baseY);\n            maxY = Math.max(ys.topY, ys.baseY);\n        }\n        else {\n            minY = 0;\n            maxY = 0;\n            for (let i = 0; i < this.ys.length; ++i) {\n                const yy = this.ys[i];\n                if (i === 0) {\n                    minY = yy;\n                    maxY = yy;\n                }\n                else {\n                    minY = Math.min(yy, minY);\n                    maxY = Math.max(yy, maxY);\n                }\n            }\n            minY -= halfLineSpacing;\n            maxY += halfLineSpacing;\n        }\n        return new BoundingBox(x, minY, w, maxY - minY);\n    }\n    // Gets the line number of the bottom note in the chord.\n    // If `isTopNote` is `true` then get the top note's line number instead\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        // No precondition assumed for sortedness of keyProps array\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return this.glyph.rest;\n    }\n    // Determine if the current note is a chord\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    // Determine if the `StaveNote` has a stem\n    hasStem() {\n        return this.glyph.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            // We adjust the origin of the stem because we want the stem left-aligned\n            // with the notehead if stemmed-down, and right-aligned if stemmed-up\n            return super.getStemX() + (this.stem_direction ? Stem.WIDTH / (2 * -this.stem_direction) : 0);\n        }\n    }\n    // Get the `y` coordinate for text placed on the top/bottom of a\n    // note at a desired `text_line`\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n    }\n    // Sets the current note to the provided `stave`. This applies\n    // `y` values to the `NoteHeads`.\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = this._noteHeads.map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(y_top, y_bottom);\n        }\n        return this;\n    }\n    // Check if note is shifted to the right\n    isDisplaced() {\n        return this.displaced;\n    }\n    // Sets whether shift note to the right. `displaced` is a `boolean`\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    // Get the starting `x` coordinate for a `StaveTie`\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    // Get the ending `x` coordinate for a `StaveTie`\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    // Get the stave line on which to place a rest\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    // Get the default `x` and `y` coordinates for the provided `position`\n    // and key `index`\n    getModifierStartXY(position, index, options = {}) {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            // FIXME: Left modifier padding, move to font file\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            // FIXME: Right modifier padding, move to font file\n            x = this.getGlyphWidth() + this.x_shift + 2;\n            if (this.stem_direction === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += (_b = (_a = this === null || this === void 0 ? void 0 : this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().width) !== null && _b !== void 0 ? _b : 0;\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Sets the style of the complete StaveNote, including all keys\n    // and the stem.\n    setStyle(style) {\n        return super.setGroupStyle(style);\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        if (stem)\n            stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        var _a;\n        (_a = this.flag) === null || _a === void 0 ? void 0 : _a.setStyle(style);\n    }\n    getFlagStyle() {\n        var _a;\n        return (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    // Sets the notehead at `index` to the provided coloring `style`.\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    setKeyStyle(index, style) {\n        this._noteHeads[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    // Get the width of the note if it is displaced. Used for `Voice`\n    // formatting\n    getVoiceShiftWidth() {\n        // TODO: may need to accommodate for dot here.\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    // Calculates and sets the extra pixels to the left or right\n    // if the note is displaced.\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stem_direction === Stem.DOWN ? this.getGlyphWidth() : 0);\n        // For upstems with flags, the extra space is unnecessary, since it's taken\n        // up by the flag.\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stem_direction === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            // If there are no modifiers on this note, make sure there is adequate padding\n            // between the notes.\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        // For upward flagged notes, the width of the flag needs to be added\n        if (this.shouldDrawFlag() && this.stem_direction === Stem.UP) {\n            width += this.getGlyphWidth();\n            // TODO: Add flag width as a separate metric\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    /**\n     * @typedef {Object} noteHeadBounds\n     * @property {number} y_top the highest notehead bound\n     * @property {number} y_bottom the lowest notehead bound\n     * @property {number|Null} displaced_x the starting x for displaced noteheads\n     * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n     * @property {number} highest_line the highest notehead line in traditional music line\n     *  numbering (bottom line = 1, top line = 5)\n     * @property {number} lowest_line the lowest notehead line\n     * @property {number|false} highest_displaced_line the highest staff line number\n     *   for a displaced notehead\n     * @property {number|false} lowest_displaced_line\n     * @property {number} highest_non_displaced_line\n     * @property {number} lowest_non_displaced_line\n     */\n    /**\n     * Get the staff line and y value for the highest & lowest noteheads\n     * @returns {noteHeadBounds}\n     */\n    getNoteHeadBounds() {\n        // Top and bottom Y values for stem.\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        this._noteHeads.forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            y_top: yTop,\n            y_bottom: yBottom,\n            displaced_x: displacedX,\n            non_displaced_x: nonDisplacedX,\n            highest_line: highestLine,\n            lowest_line: lowestLine,\n            highest_displaced_line: highestDisplacedLine,\n            lowest_displaced_line: lowestDisplacedLine,\n            highest_non_displaced_line: highestNonDisplacedLine,\n            lowest_non_displaced_line: lowestNonDisplacedLine,\n        };\n    }\n    // Get the starting `x` coordinate for the noteheads\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.x_shift;\n    }\n    // Get the ending `x` coordinate for the noteheads\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return this._noteHeads.slice();\n    }\n    /** @deprecated use StaveNote.noteHeads instead. */\n    get note_heads() {\n        showDeprecationWarningForNoteHeads();\n        return this.noteHeads;\n    }\n    // Draw the ledger lines between the stave and the highest/lowest keys\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { glyph, render_options: { stroke_px }, } = this;\n        const ctx = this.checkContext();\n        const width = glyph.getWidth() + stroke_px * 2;\n        const doubleWidth = 2 * (glyph.getWidth() + stroke_px) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highest_line, lowest_line, highest_displaced_line, highest_non_displaced_line, lowest_displaced_line, lowest_non_displaced_line, displaced_x, non_displaced_x, } = this.getNoteHeadBounds();\n        // Early out if there are no ledger lines to draw.\n        if (highest_line < 6 && lowest_line > 0)\n            return;\n        const min_x = Math.min(displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0, non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = min_x - stroke_px;\n            else if (normal)\n                x = (non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0) - stroke_px;\n            else\n                x = (displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0) - stroke_px;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        this.applyStyle(ctx, style);\n        // Draw ledger lines below the staff:\n        for (let line = 6; line <= highest_line; ++line) {\n            const normal = non_displaced_x !== undefined && line <= highest_non_displaced_line;\n            const displaced = highest_displaced_line !== undefined && line <= highest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        // Draw ledger lines above the staff:\n        for (let line = 0; line >= lowest_line; --line) {\n            const normal = non_displaced_x !== undefined && line >= lowest_non_displaced_line;\n            const displaced = lowest_displaced_line !== undefined && line >= lowest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        this.restoreStyle(ctx, style);\n    }\n    // Draw all key modifiers\n    drawModifiers(noteheadParam) {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = this._noteHeads[index];\n            if (notehead == noteheadParam) {\n                const noteheadStyle = notehead.getStyle();\n                notehead.applyStyle(ctx, noteheadStyle);\n                modifier.setContext(ctx);\n                modifier.drawWithStyle();\n                notehead.restoreStyle(ctx, noteheadStyle);\n            }\n        }\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyph.flag; // specified in tables.js\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam;\n    }\n    // Draw the flag for the note\n    drawFlag() {\n        var _a, _b, _c, _d, _e;\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            // eslint-disable-next-line\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX();\n            // What's with the magic +/- 2\n            // ANSWER: a corner of the note stem pokes out beyond the tip of the flag.\n            // The extra +/- 2 pushes the flag glyph outward so it covers the stem entirely.\n            // Alternatively, we could shorten the stem.\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    y_top -\n                        noteStemHeight +\n                        2 -\n                        (this.glyph ? this.glyph.stem_down_extension : 0) * this.getStaveNoteScale() -\n                        ((_b = (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().y_shift) !== null && _b !== void 0 ? _b : 0) * (1 - this.getStaveNoteScale())\n                : // Up stems are above the note head and have flags on the right.\n                    y_bottom -\n                        noteStemHeight -\n                        2 +\n                        (this.glyph ? this.glyph.stem_up_extension : 0) * this.getStaveNoteScale() -\n                        ((_d = (_c = this.flag) === null || _c === void 0 ? void 0 : _c.getMetrics().y_shift) !== null && _d !== void 0 ? _d : 0) * (1 - this.getStaveNoteScale());\n            // Draw the Flag\n            (_e = this.flag) === null || _e === void 0 ? void 0 : _e.render(ctx, flagX, flagY);\n        }\n    }\n    // Draw the NoteHeads\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        this._noteHeads.forEach((notehead) => {\n            ctx.openGroup('notehead', notehead.getAttribute('id'), { pointerBBox: true });\n            notehead.setContext(ctx).draw();\n            this.drawModifiers(notehead);\n            ctx.closeGroup();\n        });\n    }\n    drawStem(stemOptions) {\n        // GCR TODO: I can't find any context in which this is called with the stemStruct\n        // argument in the codebase or tests. Nor can I find a case where super.drawStem\n        // is called at all. Perhaps these should be removed?\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        // If we will render a flag, we shorten the stem so that the tip\n        // does not poke through the flag.\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        if (this.stem) {\n            this.stem.setContext(ctx).draw();\n        }\n    }\n    /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n    getStaveNoteScale() {\n        return 1.0;\n    }\n    /**\n     * Override stemmablenote stem extension to adjust for distance from middle line.\n     */\n    getStemExtension() {\n        const super_stem_extension = super.getStemExtension();\n        if (!this.glyph.stem) {\n            return super_stem_extension;\n        }\n        const stem_direction = this.getStemDirection();\n        if (stem_direction !== this.calculateOptimalStemDirection()) {\n            return super_stem_extension; // no adjustment for manually set stem direction.\n        }\n        let mid_line_distance;\n        const MIDDLE_LINE = 3;\n        if (stem_direction === Stem.UP) {\n            // Note that the use of maxLine here instead of minLine might\n            // seem counterintuitive, but in the case of (say) treble clef\n            // chord(F2, E4) stem up, we do not want to extend the stem because\n            // of F2, when a normal octave-length stem above E4 is fine.\n            //\n            // maxLine and minLine are set in calculateOptimalStemDirection() so\n            // will be known.\n            mid_line_distance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            mid_line_distance = this.minLine - MIDDLE_LINE;\n        }\n        // how many lines more than an octave is the relevant notehead?\n        const lines_over_octave_from_mid_line = mid_line_distance - 3.5;\n        if (lines_over_octave_from_mid_line <= 0) {\n            return super_stem_extension;\n        }\n        const stave = this.getStave();\n        let spacing_between_lines = 10;\n        if (stave != undefined) {\n            spacing_between_lines = stave.getSpacingBetweenLines();\n        }\n        return super_stem_extension + lines_over_octave_from_mid_line * spacing_between_lines;\n    }\n    // Draws all the `StaveNote` parts. This is the main drawing method.\n    draw() {\n        if (this.render_options.draw === false)\n            return;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        // Format note head x positions\n        this._noteHeads.forEach((notehead) => notehead.setX(xBegin));\n        if (this.stem) {\n            // Format stem x positions\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n        }\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        // Apply the overall style -- may be contradicted by local settings:\n        this.applyStyle();\n        ctx.openGroup('stavenote', this.getAttribute('id'));\n        this.drawLedgerLines();\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        ctx.closeGroup();\n        this.restoreStyle();\n        this.setRendered();\n    }\n}\nStaveNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveTie extends Element {\n    /**\n     * @param notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.render_options = {\n            cp1: 8,\n            cp2: 12,\n            text_shift_x: 0,\n            first_x_shift: 0,\n            last_x_shift: 0,\n            y_shift: 7,\n            tie_spacing: 0,\n        };\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveTie;\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    /**\n     * Set the notes to attach this tie to.\n     *\n     * @param {!Object} notes The notes to tie up.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices) {\n            notes.first_indices = [0];\n        }\n        if (!notes.last_indices) {\n            notes.last_indices = [0];\n        }\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indices.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.notes.first_note || !this.notes.last_note;\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.render_options.cp1;\n        let cp2 = this.render_options.cp2;\n        if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n            cp1 = 2;\n            cp2 = 8;\n        }\n        const first_x_shift = this.render_options.first_x_shift;\n        const last_x_shift = this.render_options.last_x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        // setNotes(...) verified that first_indices and last_indices are not undefined.\n        // As a result, we use the ! non-null assertion operator here.\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        // eslint-disable-next-line\n        const last_indices = this.notes.last_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n            const first_y_px = params.first_ys[first_indices[i]] + y_shift;\n            const last_y_px = params.last_ys[last_indices[i]] + y_shift;\n            if (isNaN(first_y_px) || isNaN(last_y_px)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n            }\n            const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n            const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n            ctx.openGroup('stavetie', this.getAttribute('id'));\n            ctx.beginPath();\n            ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n            ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n            ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n            ctx.closePath();\n            ctx.fill();\n            ctx.closeGroup();\n        }\n    }\n    renderText(first_x_px, last_x_px) {\n        var _a, _b, _c;\n        if (!this.text)\n            return;\n        const ctx = this.checkContext();\n        let center_x = (first_x_px + last_x_px) / 2;\n        center_x -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.first_note) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.last_note) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n            ctx.restore();\n        }\n    }\n    /**\n     * Returns the TieNotes structure of the first and last note this tie connects.\n     */\n    getNotes() {\n        return this.notes;\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.notes.first_note;\n        const last_note = this.notes.last_note;\n        // Provide some default values so the compiler doesn't complain.\n        let first_x_px = 0;\n        let last_x_px = 0;\n        let first_ys = [0];\n        let last_ys = [0];\n        let stem_direction = 0;\n        if (first_note) {\n            first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n            stem_direction = first_note.getStemDirection();\n            first_ys = first_note.getYs();\n        }\n        else if (last_note) {\n            const stave = last_note.checkStave();\n            first_x_px = stave.getTieStartX();\n            first_ys = last_note.getYs();\n            this.notes.first_indices = this.notes.last_indices;\n        }\n        if (last_note) {\n            last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n            stem_direction = last_note.getStemDirection();\n            last_ys = last_note.getYs();\n        }\n        else if (first_note) {\n            const stave = first_note.checkStave();\n            last_x_px = stave.getTieEndX();\n            last_ys = first_note.getYs();\n            this.notes.last_indices = this.notes.first_indices;\n        }\n        if (this.direction) {\n            stem_direction = this.direction;\n        }\n        this.renderTie({\n            first_x_px,\n            last_x_px,\n            first_ys,\n            last_ys,\n            direction: stem_direction,\n        });\n        this.renderText(first_x_px, last_x_px);\n        return true;\n    }\n}\n/** Default text font. */\nStaveTie.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// / [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { StaveTie } from './stavetie';\nimport { Category } from './typeguard';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return Category.TabTie;\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    /**\n     * @param notes is a struct that has:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super(notes, text);\n        this.render_options.cp1 = 9;\n        this.render_options.cp2 = 11;\n        this.render_options.y_shift = 3;\n        this.direction = -1; // Tab tie's are always face up.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n    constructor(time) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = {\n            softmaxFactor: Tables.SOFTMAX_FACTOR,\n        };\n        // Convert the `time` string into a VoiceTime object if necessary.\n        let voiceTime;\n        if (typeof time === 'string') {\n            // Time signature shortcut: \"4/4\", \"3/8\", etc.\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    num_beats: parseInt(match[1]),\n                    beat_value: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        // Default time signature is 4/4.\n        this.time = Object.assign({ num_beats: 4, beat_value: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        // Recalculate total ticks.\n        this.totalTicks = new Fraction(this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    static get CATEGORY() {\n        return Category.Voice;\n    }\n    /**\n     * Modes allow the addition of ticks in three different ways:\n     * - STRICT: This is the default. Ticks must fill the voice.\n     * - SOFT: Ticks can be added without restrictions.\n     * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n     */\n    static get Mode() {\n        return VoiceMode;\n    }\n    /** Get the total ticks in the voice. */\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    /** Get the total ticks used in the voice by all the tickables. */\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    /** Get the largest width of all the tickables. */\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    /** Get the tick count for the shortest tickable */\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    /** Get the tickables in the voice. */\n    getTickables() {\n        return this.tickables;\n    }\n    /** Get the voice mode. */\n    getMode() {\n        return this.mode;\n    }\n    /**\n     * Set the voice mode.\n     * @param mode value from `VoiceMode`\n     */\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    /** Get the resolution multiplier for the voice. */\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    /** Get the actual tick resolution for the voice. */\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    /** Set the voice's stave. */\n    setStave(stave) {\n        this.stave = stave;\n        // Reset the bounding box so we can reformat.\n        this.boundingBox = undefined;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    /** Get the bounding box for the voice. */\n    getBoundingBox() {\n        if (!this.boundingBox) {\n            const stave = this.checkStave();\n            let boundingBox = undefined;\n            for (let i = 0; i < this.tickables.length; ++i) {\n                const tickable = this.tickables[i];\n                tickable.setStave(stave);\n                const bb = tickable.getBoundingBox();\n                if (bb) {\n                    boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n                }\n            }\n            this.boundingBox = boundingBox;\n        }\n        return this.boundingBox;\n    }\n    /** Set the voice mode to strict or soft. */\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    /** Determine if the voice is complete according to the voice mode. */\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * We use softmax to layout the tickables proportional to the exponent of\n     * their duration. The softmax factor is used to determine the 'linearness' of\n     * the layout.\n     *\n     * The softmax of all the tickables in this voice should sum to 1.\n     */\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        return this;\n    }\n    /**\n     * Calculate the sum of the exponents of all the ticks in this voice to use\n     * as the denominator of softmax.\n     */\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = this.tickables.map(exp).reduce((a, b) => a + b, 0);\n        return this.expTicksUsed;\n    }\n    /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    /** Add a tickable to the voice. */\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            // Update the total ticks for this line.\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0; // reset\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            // Track the smallest tickable for formatting.\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            // Expand total ticks using denominator from ticks used.\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        // Add the tickable to the line.\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    /** Add an array of tickables to the voice. */\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    /** Preformat the voice by applying the voice's stave to each note. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /**\n     * Render the voice onto the canvas `context` and an optional `stave`.\n     * If `stave` is omitted, it is expected that the notes have staves\n     * already set.\n     *\n     * This method also calculates the voice's boundingBox while drawing\n     * the notes. Note the similarities with this.getBoundingBox().\n     */\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        let boundingBox = undefined;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            // Set the stave if provided.\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            const bb = tickable.getBoundingBox();\n            if (bb) {\n                boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n            }\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n        this.boundingBox = boundingBox;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\nimport { Beam } from './beam';\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { Tables } from './tables';\nimport { TabTie } from './tabtie';\nimport { Category, isStaveNote } from './typeguard';\nimport { log } from './util';\nimport { Voice } from './voice';\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('Vex.Flow.GraceNoteGroup', args);\n}\n/** GraceNoteGroup is used to format and render grace notes. */\nexport class GraceNoteGroup extends Modifier {\n    //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n    constructor(grace_notes, show_slur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.grace_notes = grace_notes;\n        this.width = 0;\n        this.show_slur = show_slur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.render_options = {\n            slur_y_shift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.grace_notes);\n        return this;\n    }\n    static get CATEGORY() {\n        return Category.GraceNoteGroup;\n    }\n    /** Arranges groups inside a `ModifierContext`. */\n    static format(gracenote_groups, state) {\n        const group_spacing_stave = 4;\n        const group_spacing_tab = 0;\n        if (!gracenote_groups || gracenote_groups.length === 0)\n            return false;\n        const group_list = [];\n        let prev_note = null;\n        let shiftL = 0;\n        for (let i = 0; i < gracenote_groups.length; ++i) {\n            const gracenote_group = gracenote_groups[i];\n            const note = gracenote_group.getNote();\n            const is_stavenote = isStaveNote(note);\n            const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n            if (is_stavenote && note !== prev_note) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prev_note = note;\n            }\n            group_list.push({ shift: shiftL, gracenote_group, spacing });\n        }\n        // If first note left shift in case it is displaced\n        let group_shift = group_list[0].shift;\n        let formatWidth;\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            gracenote_group.preFormat();\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            group_shift = Math.max(formatWidth, group_shift);\n        }\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift) + StaveNote.minNoteheadPadding);\n        }\n        state.left_shift += group_shift;\n        return true;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(grace_notes) {\n        grace_notes = grace_notes || this.grace_notes;\n        if (grace_notes.length > 1) {\n            const beam = new Beam(grace_notes);\n            beam.render_options.beam_width = 3;\n            beam.render_options.partial_beam_length = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width + StaveNote.minNoteheadPadding;\n    }\n    getGraceNotes() {\n        return this.grace_notes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n        // Draw grace notes.\n        this.grace_notes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n        // Draw beams.\n        this.beams.forEach((beam) => beam.setContext(ctx).draw());\n        if (this.show_slur) {\n            // Create and draw slur.\n            const is_stavenote = isStaveNote(note);\n            const TieClass = is_stavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                last_note: this.grace_notes[0],\n                first_note: note,\n                first_indices: [0],\n                last_indices: [0],\n            });\n            this.slur.render_options.cp2 = 12;\n            this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n            this.slur.setContext(ctx).draw();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { Voice } from './voice';\nexport class NoteSubGroup extends Modifier {\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    static get CATEGORY() {\n        return Category.NoteSubGroup;\n    }\n    // Arrange groups inside a `ModifierContext`\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.left_shift += width;\n        return true;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\nimport { Fraction } from './fraction';\nimport { RuntimeError } from './util';\n/**\n * TickContext formats abstract tickable objects, such as notes, chords, tabs, etc.\n */\nexport class TickContext {\n    constructor(options) {\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = options && options.tickID ? options.tickID : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined; // Biggest tickable\n        this.minTicks = undefined; // this can remian null if all tickables have ignore_ticks\n        this.minTickable = undefined;\n        this.padding = 1; // padding on each side (width += padding * 2)\n        this.x = 0;\n        this.xBase = 0; // base x position without xOffset\n        this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n        this.tickables = []; // Notes, tabs, chords, lyrics.\n        this.tickablesByVoice = {}; // Tickables indexed by voice number\n        // Formatting metrics\n        this.notePx = 0; // width of widest note in this context\n        this.glyphPx = 0; // width of glyph (note head)\n        this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n        this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n        this.modLeftPx = 0; // Left modifier pixels\n        this.modRightPx = 0; // Right modifier pixels\n        this.totalLeftPx = 0; // Total left pixels\n        this.totalRightPx = 0; // Total right pixels\n        this.tContexts = []; // Parent array of tick contexts\n        this.width = 0;\n        this.formatterMetrics = {\n            // The freedom of a tickcontext is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    } // use of xBase and xOffset is optional, avoids offset creep\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    /**\n     * Introduced on 2020-04-17 as getTickablesForVoice(voiceIndex).\n     *   https://github.com/0xfe/vexflow/blame/dc97b0cc5bb93171c0038638c34362dc958222ca/src/tickcontext.js#L63\n     * Renamed on 2021-08-05 to getTickableForVoice(voiceIndex). Method renamed to singular, since it returns one Tickable.\n     */\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    /** Gets widths context, note and left/right modifiers for formatting. */\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks == null) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex || 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            // Maintain max displaced head pixels from all tickables in the context\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            // Maintain the widest note for all tickables in the context\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            // Maintain the widest note head\n            this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth || 0);\n            // Total modifier shift\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            // Total shift\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            // Recalculate the tick context total width\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { Category, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('Vex.Flow.Ornament', args);\n}\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nexport class Ornament extends Modifier {\n    /**\n     * Create a new ornament of type `type`, which is an entry in\n     * `Vex.Flow.ornamentCodes` in `tables.ts`.\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.delayed = false;\n        this.render_options = {\n            font_scale: 38,\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        this.ornament = Tables.ornamentCodes(this.type);\n        // new ornaments have their origin at the origin, and have more specific\n        // metrics.  Legacy ornaments do some\n        // x scaling, and have hard-coded metrics\n        const metrics = this.getMetrics();\n        // some jazz ornaments are above or below depending on stem direction.\n        this.adjustForStemDirection = false;\n        // some jazz ornaments like falls are supposed to overlap with future bars\n        // and so we report a different width than they actually take up.\n        this.reportedWidth = metrics && metrics.reportedWidth ? metrics.reportedWidth : 0;\n        this.stemUpYOffset = metrics && metrics.stemUpYOffset ? metrics.stemUpYOffset : 0;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        if (!this.ornament) {\n            throw new RuntimeError('ArgumentError', `Ornament not found: '${this.type}'`);\n        }\n        this.x_shift = metrics ? metrics.xOffset : 0;\n        this.y_shift = metrics ? metrics.yOffset : 0;\n        this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, {\n            category: `ornament.${this.ornament.code}`,\n        });\n        // Is this a jazz ornament that goes between this note and the next note.\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n        // happen if I don't set it.\n        if (!metrics) {\n            this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n        }\n    }\n    /** Ornaments category string. */\n    static get CATEGORY() {\n        return Category.Ornament;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Arrange ornaments inside `ModifierContext` */\n    static format(ornaments, state) {\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0; // width is used by ornaments, which are always centered on the note head\n        let right_shift = state.right_shift; // jazz ornaments calculate r/l shift separately\n        let left_shift = state.left_shift;\n        let yOffset = 0;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n                ornament.x_shift += right_shift + 2;\n            }\n            if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n                ornament.x_shift -= left_shift + 2;\n            }\n            if (ornament.reportedWidth && ornament.x_shift < 0) {\n                left_shift += ornament.reportedWidth;\n            }\n            else if (ornament.reportedWidth && ornament.x_shift >= 0) {\n                right_shift += ornament.reportedWidth + Ornament.minPadding;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n            }\n            // articulations above/below the line can be stacked.\n            if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n                // Unfortunately we don't know the stem direction.  So we base it\n                // on the line number, but also allow it to be overridden.\n                const ornamentNote = defined(ornament.note, 'NoAttachedNote');\n                if (ornamentNote.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n                    state.top_text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset -= ornament.glyph.bbox.getH();\n                }\n                else {\n                    state.text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset += ornament.glyph.bbox.getH();\n                }\n            }\n            else {\n                if (ornament.getPosition() === Modifier.Position.ABOVE) {\n                    ornament.setTextLine(state.top_text_line);\n                    state.top_text_line += increment;\n                }\n                else {\n                    ornament.setTextLine(state.text_line);\n                    state.text_line += increment;\n                }\n            }\n        }\n        // Note: 'legit' ornaments don't consider other modifiers when calculating their\n        // X position, but jazz ornaments sometimes need to.\n        state.left_shift = left_shift + width / 2;\n        state.right_shift = right_shift + width / 2;\n        return true;\n    }\n    /**\n     * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n     * these are generally on the top of the staff.\n     */\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    /**\n     * ornamentAttack indicates something that happens in the attach, placed before the note and\n     * any accidentals\n     */\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    /**\n     * The ornament is aligned based on the note head, but without regard to whether the\n     * stem goes up or down.\n     */\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n    }\n    /**\n     * An ornament that happens on the release of the note, generally placed after the\n     * note and overlapping the next beat/measure..\n     */\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    /** ornamentArticulation goes above/below the note based on space availablity */\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    /**\n     * Legacy ornaments have hard-coded metrics.  If additional ornament types are\n     * added, get their metrics here.\n     */\n    // eslint-disable-next-line\n    getMetrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.jazzOrnaments[this.ornament.code];\n    }\n    /** Set whether the ornament is to be delayed. */\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    /** Set the upper accidental for the ornament. */\n    setUpperAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalUpper = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalUpper.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Set the lower accidental for the ornament. */\n    setLowerAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalLower = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalLower.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Render ornament in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDir = note.getStemDirection();\n        const stave = note.checkStave();\n        ctx.openGroup('ornament', this.getAttribute('id'));\n        // Get stem extents\n        const stemExtents = note.checkStem().getExtents();\n        let y = stemDir === Stem.DOWN ? stemExtents.baseY : stemExtents.topY;\n        // TabNotes don't have stems attached to them. Tab stems are rendered outside the stave.\n        if (isTabNote(note)) {\n            if (note.hasStem()) {\n                if (stemDir === Stem.DOWN) {\n                    y = stave.getYForTopText(this.text_line);\n                }\n            }\n            else {\n                // Without a stem\n                y = stave.getYForTopText(this.text_line);\n            }\n        }\n        const isPlacedOnNoteheadSide = stemDir === Stem.DOWN;\n        const spacing = stave.getSpacingBetweenLines();\n        let lineSpacing = 1;\n        // Beamed stems are longer than quarter note stems, adjust accordingly\n        if (!isPlacedOnNoteheadSide && note.hasBeam()) {\n            lineSpacing += 0.5;\n        }\n        const totalSpacing = spacing * (this.text_line + lineSpacing);\n        const glyphYBetweenLines = y - totalSpacing;\n        // Get initial coordinates for the modifier position\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        // If the ornament is aligned with the note head, don't consider the stave y\n        // but use the 'natural' modifier y\n        let glyphY = this.ornamentAlignWithNoteHead\n            ? start.y\n            : Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n        glyphY += this.y_shift;\n        // Ajdust x position if ornament is delayed\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = glyphX - (stave.getX() - 10);\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                delayXShift += this.glyph.getMetrics().width / 2;\n                const nextContext = TickContext.getNextContext(note.getTickContext());\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - startX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.render(ctx, glyphX, glyphY);\n            glyphY -= this.accidentalLower.getMetrics().height;\n            glyphY -= this.render_options.accidentalLowerPadding;\n        }\n        if (this.stemUpYOffset && note.hasStem() && note.getStemDirection() === 1) {\n            glyphY += this.stemUpYOffset;\n        }\n        if (note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            glyphY = note.checkStave().getBoundingBox().getY() + 40;\n        }\n        this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n        if (this.accidentalUpper) {\n            glyphY -= this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding;\n            this.accidentalUpper.render(ctx, glyphX, glyphY);\n        }\n        ctx.closeGroup();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\nOrnament.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Rodrigo Vilar\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Parenthesis implements parenthesis modifiers for notes. */\nexport class Parenthesis extends Modifier {\n    /**\n     * Constructor\n     *\n     * @param position Modifier.Position.LEFT (default) or Modifier.Position.RIGHT\n     */\n    constructor(position) {\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n    }\n    static get CATEGORY() {\n        return Category.Parenthesis;\n    }\n    /** Add parentheses to the notes. */\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    /** Arrange parentheses inside a ModifierContext. */\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                x_widthR = x_widthR > shift + parenthesis.width ? x_widthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index);\n                x_widthL = x_widthL > shift + parenthesis.width ? x_widthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    /** Set the associated note. */\n    setNote(note) {\n        this.note = note;\n        this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n        if (isGraceNote(note)) {\n            this.point = Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.point');\n            this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.width'));\n        }\n        return this;\n    }\n    /** Render the parenthesis. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        const x = start.x + this.x_shift;\n        const y = start.y + this.y_shift;\n        if (this.position == Modifier.Position.RIGHT) {\n            Glyph.renderGlyph(ctx, x + 1, y, this.point, 'noteheadParenthesisRight', {\n                category: `noteHead.standard.noteheadParenthesisRight`,\n            });\n        }\n        else if (this.position == Modifier.Position.LEFT) {\n            Glyph.renderGlyph(ctx, x - 2, y, this.point, 'noteheadParenthesisLeft', {\n                category: `noteHead.standard.noteheadParenthesisLeft`,\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n//\n// Utilities for working with Web APIs.\n// See: https://developer.mozilla.org/en-US/docs/Web/API\nimport { globalObject } from './util';\n// eslint-disable-next-line\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLCanvasElement class,\n    (typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        // OR it's pretending to be a <canvas> element. Good enough!\n        // Do not rely on .tagName, because node-canvas doesn't provide a tagName.\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\n// eslint-disable-next-line\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLDivElement class.\n    (typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        // OR it's pretending to be a <div>. See: svgcontext.ts.\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { RenderContext } from './rendercontext';\nimport { globalObject, warn } from './util';\nimport { isHTMLCanvas } from './web';\n/**\n * A rendering context for the Canvas backend. This class serves as a proxy for the\n * underlying CanvasRenderingContext2D object, part of the browser's API.\n */\nexport class CanvasContext extends RenderContext {\n    constructor(context) {\n        super();\n        /** Height of one line of text (in pixels). */\n        this.textHeight = 0;\n        this.context2D = context;\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n    }\n    /**\n     * Ensure that width and height do not exceed the browser limit.\n     * @returns array of [width, height] clamped to the browser limit.\n     */\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    /**\n     * Set all pixels to transparent black rgba(0,0,0,0).\n     */\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // eslint-disable-next-line\n    openGroup(cls, id, attrs) {\n        // Containers not implemented.\n    }\n    closeGroup() {\n        // Containers not implemented.\n    }\n    // eslint-disable-next-line\n    add(child) {\n        // Containers not implemented.\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    /** CanvasContext ignores `setBackgroundFillStyle()`. */\n    // eslint-disable-next-line\n    setBackgroundFillStyle(style) {\n        // DO NOTHING\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        // CanvasRenderingContext2D does not scale the shadow blur by the current\n        // transform, so we have to do it manually. We assume uniform scaling\n        // (though allow for rotation) because the blur can only be scaled\n        // uniformly anyway.\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height) {\n        const canvas = this.context2D.canvas;\n        const devicePixelRatio = globalObject().devicePixelRatio || 1;\n        // Scale the canvas size by the device pixel ratio clamping to the maximum supported size.\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * devicePixelRatio, height * devicePixelRatio);\n        // Divide back down by the pixel ratio and convert to integers.\n        width = (width / devicePixelRatio) | 0;\n        height = (height / devicePixelRatio) | 0;\n        canvas.width = width * devicePixelRatio;\n        canvas.height = height * devicePixelRatio;\n        // The canvas could be an instance of either HTMLCanvasElement or an OffscreenCanvas.\n        // Only HTMLCanvasElement has a style attribute.\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(devicePixelRatio, devicePixelRatio);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    /**\n     * Set the pixels in a rectangular area to transparent black rgba(0,0,0,0).\n     */\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        // Return x, y, width & height in the same manner as svg getBBox\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Gregory Ristow (2015)\nimport { Font, FontStyle, FontWeight } from './font';\nimport { RenderContext } from './rendercontext';\nimport { normalizeAngle, prefix, RuntimeError } from './util';\n/** For a particular element type (e.g., rect), we will not apply certain presentation attributes. */\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\nclass MeasureTextCache {\n    constructor() {\n        // The cache is keyed first by the text string, then by the font attributes\n        // joined together.\n        this.cache = {};\n    }\n    lookup(text, svg, attributes) {\n        let entries = this.cache[text];\n        if (entries === undefined) {\n            entries = {};\n            this.cache[text] = entries;\n        }\n        const family = attributes['font-family'];\n        const size = attributes['font-size'];\n        const weight = attributes['font-weight'];\n        const style = attributes['font-style'];\n        const key = `${family}%${size}%${weight}%${style}`;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = this.measureImpl(text, svg, attributes);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n    measureImpl(text, svg, attributes) {\n        let txt = this.txt;\n        if (!txt) {\n            // Create the SVG text element that will be used to measure text in the event\n            // of a cache miss.\n            txt = document.createElementNS(SVG_NS, 'text');\n            this.txt = txt;\n        }\n        txt.textContent = text;\n        txt.setAttributeNS(null, 'font-family', attributes['font-family']);\n        txt.setAttributeNS(null, 'font-size', attributes['font-size']);\n        txt.setAttributeNS(null, 'font-style', attributes['font-style']);\n        txt.setAttributeNS(null, 'font-weight', attributes['font-weight']);\n        svg.appendChild(txt);\n        const bbox = txt.getBBox();\n        svg.removeChild(txt);\n        return { x: bbox.x, y: bbox.y, width: bbox.width, height: bbox.height };\n    }\n}\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nexport class SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        this.width = 0;\n        this.height = 0;\n        this.backgroundFillStyle = 'white';\n        /** Formatted as CSS font shorthand (e.g., 'italic bold 12pt Arial') */\n        this.fontCSSString = '';\n        this.element = element;\n        // Create a SVG element and add it to the container element.\n        const svg = this.create('svg');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        this.lineWidth = 1.0;\n        const defaultFontAttributes = {\n            'font-family': Font.SANS_SERIF,\n            'font-size': Font.SIZE + 'pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scale: { x: 1, y: 1 } }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 0.3, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black' }, defaultFontAttributes);\n        this.shadow_attributes = {\n            width: 0,\n            color: 'black',\n        };\n        this.state_stack = [];\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    // Allow grouping elements in containers for interactivity.\n    openGroup(cls, id, attrs) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        if (attrs && attrs.pointerBBox) {\n            group.setAttribute('pointer-events', 'bounding-box');\n        }\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    /**\n     * Used to set the fill color for `clearRect()`. This allows us to simulate\n     * cutting a \"hole\" into the SVG drawing.\n     */\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.shadow_attributes.color = color;\n        return this;\n    }\n    /**\n     * @param blur A non-negative float specifying the level of shadow blur, where 0\n     *             represents no blur and larger numbers represent increasingly more blur.\n     * @returns this\n     */\n    setShadowBlur(blur) {\n        this.shadow_attributes.width = blur;\n        return this;\n    }\n    /**\n     * @param width\n     * @returns this\n     */\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n        return this;\n    }\n    /**\n     * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n     * @returns this\n     *\n     * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n     */\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    /**\n     * @param capType\n     * @returns this\n     */\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    // ### Sizing & Scaling Methods:\n    // TODO (GCR): See note at scale() -- separate our internal\n    // conception of pixel-based width/height from the style.width\n    // and style.height properties eventually to allow users to\n    // apply responsive sizing attributes to the SVG.\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scale.x, this.state.scale.y);\n        return this;\n    }\n    scale(x, y) {\n        // uses viewBox to scale\n        // TODO (GCR): we may at some point want to distinguish the\n        // style.width / style.height properties that are applied to\n        // the SVG object from our internal conception of the SVG\n        // width/height.  This would allow us to create automatically\n        // scaling SVG's that filled their containers, for instance.\n        //\n        // As this isn't implemented in Canvas contexts,\n        // I've left as is for now, but in using the viewBox to\n        // handle internal scaling, am trying to make it possible\n        // for us to eventually move in that direction.\n        this.state.scale = { x, y };\n        const visibleWidth = this.width / x;\n        const visibleHeight = this.height / y;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    /**\n     * 1 arg: string in the \"x y w h\" format\n     * 4 args: x:number, y:number, w:number, h:number\n     */\n    setViewBox(viewBox_or_minX, minY, width, height) {\n        if (typeof viewBox_or_minX === 'string') {\n            this.svg.setAttribute('viewBox', viewBox_or_minX);\n        }\n        else {\n            const viewBoxString = viewBox_or_minX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    // ### Drawing helper methods:\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    // ### Shape & Path Methods:\n    clear() {\n        // Clear the SVG by removing all inner children.\n        // (This approach is usually slightly more efficient\n        // than removing the old SVG & adding a new one to\n        // the container element, since it does not cause the\n        // container to resize twice.  Also, the resize\n        // triggered by removing the entire SVG can trigger\n        // a touchcancel event when the element resizes away\n        // from a touch point.)\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n        // Replace the viewbox attribute we just removed.\n        this.scale(this.state.scale.x, this.state.scale.y);\n    }\n    // ## Rectangles:\n    rect(x, y, width, height, attributes) {\n        // Avoid invalid negative height attributes by flipping the rectangle on its head:\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.lineWidth, stroke: 'black' };\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        // Currently this fills a rect with the backgroundFillStyle, rather\n        // than \"cut a hole\" into the existing shapes.\n        //\n        // Since tabNote seems to be the only module that makes use of this\n        // it may be worth creating a separate tabStave that would\n        // draw lines around locations of tablature fingering.\n        this.rect(x, y, width, height, { 'stroke-width': 0, fill: this.backgroundFillStyle });\n        return this;\n    }\n    // ## Paths:\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        const x0 = x + radius * Math.cos(startAngle);\n        const y0 = y + radius * Math.sin(startAngle);\n        // svg behavior different from canvas.  Don't normalize angles if\n        // we are drawing a circle because they both normalize to 0\n        const tmpStartTest = normalizeAngle(startAngle);\n        const tmpEndTest = normalizeAngle(endAngle);\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI) ||\n            tmpStartTest === tmpEndTest) {\n            const x1 = x + radius * Math.cos(startAngle + Math.PI);\n            const y1 = y + radius * Math.sin(startAngle + Math.PI);\n            // There's no way to specify a completely circular arc in SVG so we have to\n            // use two semi-circular arcs.\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            const x1 = x + radius * Math.cos(endAngle);\n            const y1 = y + radius * Math.sin(endAngle);\n            startAngle = tmpStartTest;\n            endAngle = tmpEndTest;\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    getShadowStyle() {\n        const sa = this.shadow_attributes;\n        // A CSS drop-shadow filter blur looks different than a canvas shadowBlur\n        // of the same radius, so we scale the drop-shadow radius here to make it\n        // look close to the canvas shadow.\n        return `filter: drop-shadow(0 0 ${sa.width / 1.5}px ${sa.color})`;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', 'stroke-width': this.lineWidth, d: this.path });\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    // ## Text Methods:\n    measureText(text) {\n        return SVGContext.measureTextCache.lookup(text, this.svg, this.attributes);\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    // TODO: State should be deep-copied.\n    save() {\n        this.state_stack.push({\n            state: {\n                'font-family': this.state['font-family'],\n                'font-weight': this.state['font-weight'],\n                'font-style': this.state['font-style'],\n                'font-size': this.state['font-size'],\n                scale: this.state.scale,\n            },\n            attributes: {\n                'font-family': this.attributes['font-family'],\n                'font-weight': this.attributes['font-weight'],\n                'font-style': this.attributes['font-style'],\n                'font-size': this.attributes['font-size'],\n                fill: this.attributes.fill,\n                stroke: this.attributes.stroke,\n                'stroke-width': this.attributes['stroke-width'],\n                'stroke-dasharray': this.attributes['stroke-dasharray'],\n            },\n            shadow_attributes: {\n                width: this.shadow_attributes.width,\n                color: this.shadow_attributes.color,\n            },\n            lineWidth: this.lineWidth,\n        });\n        return this;\n    }\n    // TODO: State should be deep-restored.\n    restore() {\n        const savedState = this.state_stack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state['font-family'] = state.state['font-family'];\n            this.state['font-weight'] = state.state['font-weight'];\n            this.state['font-style'] = state.state['font-style'];\n            this.state['font-size'] = state.state['font-size'];\n            this.state.scale = state.state.scale;\n            this.attributes['font-family'] = state.attributes['font-family'];\n            this.attributes['font-weight'] = state.attributes['font-weight'];\n            this.attributes['font-style'] = state.attributes['font-style'];\n            this.attributes['font-size'] = state.attributes['font-size'];\n            this.attributes.fill = state.attributes.fill;\n            this.attributes.stroke = state.attributes.stroke;\n            this.attributes['stroke-width'] = state.attributes['stroke-width'];\n            this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n            this.shadow_attributes.width = state.shadow_attributes.width;\n            this.shadow_attributes.color = state.shadow_attributes.color;\n            this.lineWidth = state.lineWidth;\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900). It is inserted\n     *               into the font-weight attribute (e.g., font-weight=\"bold\")\n     * @param style is a string (e.g., 'italic', 'normal') that is inserted into the\n     *              font-style attribute (e.g., font-style=\"italic\")\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.fontCSSString;\n    }\n}\nSVGContext.measureTextCache = new MeasureTextCache();\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { CanvasContext } from './canvascontext';\nimport { SVGContext } from './svgcontext';\nimport { isRenderContext } from './typeguard';\nimport { RuntimeError } from './util';\nimport { isHTMLCanvas, isHTMLDiv } from './web';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\n// End of line types\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\n/**\n * Support Canvas & SVG rendering contexts.\n */\nexport class Renderer {\n    constructor(arg0, arg1) {\n        if (isRenderContext(arg0)) {\n            // The user has provided what looks like a RenderContext, let's just use it.\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                // The backend must be specified if the render context isn't directly provided.\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 == 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            // Verify backend and create context\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d');\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    // Draw a dashed line (horizontal, vertical or diagonal\n    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n    // setting the second number to 0 draws a solid line.\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\n// Used by vexflow_test_helpers.ts\n// Should this be private?\n// Can we do this in a cleaner way?\nRenderer.lastContext = undefined;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var TextJustification;\n(function (TextJustification) {\n    TextJustification[TextJustification[\"LEFT\"] = 1] = \"LEFT\";\n    TextJustification[TextJustification[\"CENTER\"] = 2] = \"CENTER\";\n    TextJustification[TextJustification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(TextJustification || (TextJustification = {}));\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nexport class TextNote extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.text = noteStruct.text || '';\n        this.superscript = noteStruct.superscript;\n        this.subscript = noteStruct.subscript;\n        this.setFont(noteStruct.font);\n        this.line = noteStruct.line || 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignore_ticks = noteStruct.ignore_ticks || false;\n        this.justification = TextJustification.LEFT;\n        // Determine and set initial note width. Note that the text width is\n        // an approximation and isn't very accurate. The only way to accurately\n        // measure the length of text is with `CanvasRenderingContext2D.measureText()`.\n        if (noteStruct.glyph) {\n            const struct = TextNote.GLYPHS[noteStruct.glyph];\n            if (!struct)\n                throw new RuntimeError('Invalid glyph type: ' + noteStruct.glyph);\n            this.glyph = new Glyph(struct.code, 40, { category: 'textNote' });\n            this.setWidth(this.glyph.getMetrics().width);\n        }\n        else {\n            this.glyph = undefined;\n        }\n    }\n    static get CATEGORY() {\n        return Category.TextNote;\n    }\n    /** Glyph data. */\n    static get GLYPHS() {\n        return {\n            segno: {\n                code: 'segno',\n            },\n            tr: {\n                code: 'ornamentTrill',\n            },\n            mordent: {\n                code: 'ornamentMordent',\n            },\n            mordent_upper: {\n                code: 'ornamentShortTrill',\n            },\n            mordent_lower: {\n                code: 'ornamentMordent',\n            },\n            f: {\n                code: 'dynamicForte',\n            },\n            p: {\n                code: 'dynamicPiano',\n            },\n            m: {\n                code: 'dynamicMezzo',\n            },\n            s: {\n                code: 'dynamicSforzando',\n            },\n            z: {\n                code: 'dynamicZ',\n            },\n            coda: {\n                code: 'coda',\n            },\n            pedal_open: {\n                code: 'keyboardPedalPed',\n            },\n            pedal_close: {\n                code: 'keyboardPedalUp',\n            },\n            caesura_straight: {\n                code: 'caesura',\n            },\n            caesura_curved: {\n                code: 'caesuraCurved',\n            },\n            breath: {\n                code: 'breathMarkComma',\n            },\n            tick: {\n                code: 'breathMarkTick',\n            },\n            turn: {\n                code: 'ornamentTurn',\n            },\n            turn_inverted: {\n                code: 'ornamentTurnSlash',\n            },\n        };\n    }\n    /** Set the horizontal justification of the TextNote. */\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Return the Stave line on which the TextNote is placed. */\n    getLine() {\n        return this.line;\n    }\n    /** Return the unformatted text of this TextNote. */\n    getText() {\n        return this.text;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.smooth) {\n            this.setWidth(0);\n        }\n        else {\n            if (this.glyph) {\n                // Width already set.\n            }\n            else {\n                const ctx = this.checkContext();\n                ctx.setFont(this.textFont);\n                this.setWidth(ctx.measureText(this.text).width);\n            }\n        }\n        if (this.justification === TextJustification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        // We reposition to the center of the note head\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    /**\n     * Renders the TextNote.\n     * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        // Reposition to center of note head\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        // Align based on tick-context width.\n        const width = this.getWidth();\n        if (this.justification === TextJustification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            x -= width;\n        }\n        let y;\n        if (this.glyph) {\n            y = stave.getYForLine(this.line + -3);\n            this.glyph.render(ctx, x, y);\n        }\n        else {\n            y = stave.getYForLine(this.line + -3);\n            this.applyStyle(ctx);\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, x, y);\n            const height = ctx.measureText(this.text).height;\n            // We called this.setFont(...) in the constructor, so we know this.textFont is available.\n            // eslint-disable-next-line\n            const { family, size, weight, style } = this.textFont;\n            // Scale the font size by 1/1.3.\n            const smallerFontSize = Font.scaleSize(size, 0.769231);\n            if (this.superscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.superscript, x + this.width + 2, y - height / 2.2);\n            }\n            if (this.subscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.subscript, x + this.width + 2, y + height / 2.2 - 1);\n            }\n            this.restoreStyle(ctx);\n        }\n    }\n}\nTextNote.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 12,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nTextNote.Justification = TextJustification;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nexport class Volta extends StaveModifier {\n    constructor(type, number, x, y_shift) {\n        super();\n        this.volta = type;\n        this.x = x;\n        this.y_shift = y_shift;\n        this.number = number;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.Volta;\n    }\n    static get type() {\n        return VoltaType;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x; // don't include x (offset) for width\n        const top_y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        const vert_height = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.volta) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            default:\n                break;\n        }\n        // If the beginning of a volta, draw measure number\n        if (this.volta === VoltaType.BEGIN || this.volta === VoltaType.BEGIN_END) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n            ctx.restore();\n        }\n        ctx.fillRect(this.x + x, top_y, width, 1);\n        return this;\n    }\n}\nVolta.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Renderer } from './renderer';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isStaveNote, isStemmableNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StringNumber extends Modifier {\n    constructor(number) {\n        super();\n        this.string_number = number;\n        this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.text_line = 0;\n        this.stem_offset = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.dashed = true; // true - draw dashed extension  false - no extension\n        this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n        this.radius = 8;\n        this.drawCircle = true;\n        this.setWidth(this.radius * 2 + 4);\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StringNumber;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.stringNumber;\n    }\n    // ## Static Methods\n    // Arrange string numbers inside a `ModifierContext`\n    static format(nums, state) {\n        const left_shift = state.left_shift;\n        const right_shift = state.right_shift;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shift_left = 0;\n        let shift_right = 0;\n        const modLines = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const mc = note.getModifierContext();\n            const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n            if (mc) {\n                if (pos === ModifierPosition.ABOVE) {\n                    num.text_line = mc.getState().top_text_line;\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n                else if (pos === ModifierPosition.BELOW) {\n                    num.text_line = mc.getState().text_line;\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shift_left = Math.max(note.getLeftDisplacedHeadPx(), shift_left);\n                    }\n                    if (right_shift === 0) {\n                        shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n                    }\n                }\n                prev_note = note;\n            }\n            const glyphLine = modLines === 0 ? props.line : modLines;\n            nums_list.push({\n                pos,\n                note,\n                num,\n                line: glyphLine,\n                shiftL: shift_left,\n                shiftR: shift_right,\n            });\n        }\n        // Sort string numbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let num_shiftR = 0;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        let last_line = null;\n        let last_note = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const note = nums_list[i].note;\n            const pos = nums_list[i].pos;\n            const num = nums_list[i].num;\n            const line = nums_list[i].line;\n            const shiftR = nums_list[i].shiftR;\n            // Reset the position of the string number every line.\n            if (line !== last_line || note !== last_note) {\n                num_shiftR = right_shift + shiftR;\n            }\n            const num_width = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift);\n                num_shift = shift_left + num_width; // spacing\n                x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(num_shiftR);\n                num_shift += num_width; // spacing\n                x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n            }\n            last_line = line;\n            last_note = note;\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.string_number = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.last_note = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    setDrawCircle(drawCircle) {\n        this.drawCircle = drawCircle;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let stem_ext = {};\n        if (note.hasStem()) {\n            stem_ext = note.checkStem().getExtents();\n        }\n        let dot_y = start.y + this.y_shift + this.y_offset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a < b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.UP) {\n                        dot_y = stem_ext.topY + StringNumber.metrics.stemPadding;\n                    }\n                    dot_y -= this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.BELOW:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a > b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.DOWN) {\n                        dot_y = stem_ext.topY - StringNumber.metrics.stemPadding;\n                    }\n                    dot_y += this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.radius / 2 + StringNumber.metrics.leftPadding;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += this.radius / 2 + StringNumber.metrics.rightPadding;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        ctx.save();\n        if (this.drawCircle) {\n            ctx.beginPath();\n            ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n            ctx.setLineWidth(1.5);\n            ctx.stroke();\n        }\n        ctx.setFont(this.textFont);\n        const x = dot_x - ctx.measureText(this.string_number).width / 2;\n        ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n        const lastNote = this.last_note;\n        if (isStemmableNote(lastNote)) {\n            // Only StemmableNote objects have getStemX().\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n        ctx.restore();\n    }\n}\nStringNumber.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Category, isNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Stroke extends Modifier {\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ all_voices: true }, options);\n        // multi voice - span stroke across all voices if true\n        this.all_voices = this.options.all_voices;\n        // multi voice - end note of stroke, set in draw()\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            font_scale: 38,\n        };\n        this.resetFont();\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    static get CATEGORY() {\n        return Category.Stroke;\n    }\n    // Arrange strokes inside `ModifierContext`\n    static format(strokes, state) {\n        const left_shift = state.left_shift;\n        const stroke_spacing = 0;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                // Only StaveNote objects have getKeyProps().\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                // Only TabNote objects have getPositions().\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = left_shift;\n        // There can only be one stroke .. if more than one, they overlay each other\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n        }, 0);\n        state.left_shift += xShift;\n        return true;\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.note_end = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let ys = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const line_space = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                // Only Note objects have getYs().\n                // note is an instance of either StaveNote or TabNote.\n                ys = note.getYs();\n                for (let n = 0; n < ys.length; n++) {\n                    if (this.note === notes[i] || this.all_voices) {\n                        topY = Math.min(topY, ys[n]);\n                        botY = Math.max(botY, ys[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrow_shift_x = 0;\n        let arrow_y = 0;\n        let text_shift_x = 0;\n        let text_y = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                arrow_y = topY - line_space / 2 + 10;\n                botY += line_space / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = 0.5;\n                arrow_y = botY + line_space / 2;\n                topY -= line_space / 2;\n                break;\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASQUEDO_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                text_shift_x = this.x_shift + arrow_shift_x - 2;\n                if (isStaveNote(note)) {\n                    topY += 1.5 * line_space;\n                    if ((botY - topY) % 2 !== 0) {\n                        botY += 0.5 * line_space;\n                    }\n                    else {\n                        botY += line_space;\n                    }\n                    arrow_y = topY - line_space;\n                    text_y = botY + line_space + 2;\n                }\n                else {\n                    topY += 1.5 * line_space;\n                    botY += line_space;\n                    arrow_y = topY - 0.75 * line_space;\n                    text_y = botY + 0.25 * line_space;\n                }\n                break;\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASQUEDO_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = -4;\n                text_shift_x = this.x_shift + arrow_shift_x - 1;\n                if (isStaveNote(note)) {\n                    arrow_y = line_space / 2;\n                    topY += 0.5 * line_space;\n                    if ((botY - topY) % 2 === 0) {\n                        botY += line_space / 2;\n                    }\n                    arrow_y = botY + 0.5 * line_space;\n                    text_y = topY - 1.25 * line_space;\n                }\n                else {\n                    topY += 0.25 * line_space;\n                    botY += 0.5 * line_space;\n                    arrow_y = botY + 0.25 * line_space;\n                    text_y = topY - line_space;\n                }\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY += 0.5 * line_space;\n                botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        let strokeLine = 'straight';\n        // Draw the stroke\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n        }\n        else {\n            strokeLine = 'wiggly';\n            if (isStaveNote(note)) {\n                for (let i = topY; i <= botY; i += line_space) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n            }\n            else {\n                let i;\n                for (i = topY; i <= botY; i += 10) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n                if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n                    text_y = i + 0.25 * line_space;\n                }\n            }\n        }\n        if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n            return; // skip drawing arrow heads or text\n        }\n        // Draw the arrow head\n        Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n            category: `stroke.${arrow}.${strokeLine}`,\n        });\n        // Draw the rasquedo \"R\"\n        if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText('R', x + text_shift_x, text_y);\n            ctx.restore();\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n};\nStroke.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Bend } from './bend';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.render_options = {\n            harsh: false,\n            vibrato_width: 20,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n        };\n        this.setVibratoWidth(this.render_options.vibrato_width);\n    }\n    static get CATEGORY() {\n        return Category.Vibrato;\n    }\n    /** Arrange vibratos inside a `ModifierContext`. */\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        // Vibratos are always on top.\n        let text_line = state.top_text_line;\n        let width = 0;\n        let shift = state.right_shift - 7;\n        // If there's a bend, drop the text line\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            text_line = text_line - (bendHeight + 1);\n        }\n        else {\n            state.top_text_line += 1;\n        }\n        // Format Vibratos\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(text_line);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.right_shift += width;\n        return true;\n    }\n    /** Set harsh vibrato. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Set vibrato width in pixels. */\n    setVibratoWidth(width) {\n        this.render_options.vibrato_width = width;\n        this.setWidth(width);\n        return this;\n    }\n    /** Draw the vibrato on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x + this.x_shift;\n        const vy = note.getYForTopText(this.text_line) + 2;\n        Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n    }\n    /**\n     * Static rendering method that can be called from\n     * other classes (e.g. VibratoBracket).\n     */\n    static renderVibrato(ctx, x, y, opts) {\n        const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n        const num_waves = vibrato_width / wave_width;\n        ctx.beginPath();\n        let i;\n        if (harsh) {\n            ctx.moveTo(x, y + wave_girth + 1);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x + wave_width, y - wave_height / 2);\n                x += wave_width;\n                ctx.lineTo(x + wave_width, y + wave_height / 2);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n                ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n        else {\n            ctx.moveTo(x, y + wave_girth);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n                x += wave_width;\n                ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n                ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.)\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Bend } from './bend';\nimport { ChordSymbol } from './chordsymbol';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { StaveNote } from './stavenote';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\nimport { Vibrato } from './vibrato';\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('Vex.Flow.ModifierContext', args);\n}\nexport class ModifierContext {\n    constructor() {\n        // Formatting data.\n        this.state = {\n            left_shift: 0,\n            right_shift: 0,\n            text_line: 0,\n            top_text_line: 0,\n        };\n        // Current members\n        this.members = {};\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.formatted = false;\n        this.width = 0;\n        this.spacing = 0;\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    /**\n     * this.members maps CATEGORY strings to arrays of Tickable | Modifier | StaveNote | TabNote.\n     * Here we add a new member to this.members, and create a new array if needed.\n     * @param member\n     * @returns this\n     */\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    /**\n     * @deprecated\n     */\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        var _a;\n        return (_a = this.members[category]) !== null && _a !== void 0 ? _a : [];\n    }\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.left_shift;\n    }\n    getRightShift() {\n        return this.state.right_shift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.left_shift + this.state.right_shift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        L('Preformatting ModifierContext');\n        const state = this.state;\n        const members = this.members;\n        // The ordering below determines when different members are formatted and rendered.\n        StaveNote.format(members[Category.StaveNote], state);\n        Parenthesis.format(members[Category.Parenthesis], state);\n        Dot.format(members[Category.Dot], state);\n        FretHandFinger.format(members[Category.FretHandFinger], state);\n        Accidental.format(members[Category.Accidental], state);\n        Stroke.format(members[Category.Stroke], state);\n        GraceNoteGroup.format(members[Category.GraceNoteGroup], state);\n        NoteSubGroup.format(members[Category.NoteSubGroup], state);\n        StringNumber.format(members[Category.StringNumber], state);\n        Articulation.format(members[Category.Articulation], state);\n        Ornament.format(members[Category.Ornament], state);\n        Annotation.format(members[Category.Annotation], state);\n        ChordSymbol.format(members[Category.ChordSymbol], state);\n        Bend.format(members[Category.Bend], state);\n        Vibrato.format(members[Category.Vibrato], state, this);\n        // Update width of this member context\n        this.width = state.left_shift + state.right_shift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        L('Postformatting ModifierContext');\n        // If post-formatting is required for an element, add more lines below.\n        StaveNote.postFormat(this.getMembers(Category.StaveNote));\n    }\n}\nModifierContext.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n// MIT License\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('Vex.Flow.Clef', args);\n}\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nexport class Clef extends StaveModifier {\n    /** Create a new clef. */\n    constructor(type, size, annotation) {\n        super();\n        /**\n         * The attribute `clef` must be a key from\n         * `Clef.types`\n         */\n        this.clef = Clef.types['treble'];\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        this.setWidth(Tables.currentMusicFont().lookupMetric(`clef.${this.size}.width`));\n        L('Creating clef:', type);\n    }\n    static get CATEGORY() {\n        return Category.Clef;\n    }\n    /**\n     * Every clef name is associated with a glyph code from the font file\n     * and a default stave line number.\n     */\n    static get types() {\n        return {\n            treble: {\n                code: 'gClef',\n                line: 3,\n                point: 0,\n            },\n            bass: {\n                code: 'fClef',\n                line: 1,\n                point: 0,\n            },\n            alto: {\n                code: 'cClef',\n                line: 2,\n                point: 0,\n            },\n            tenor: {\n                code: 'cClef',\n                line: 1,\n                point: 0,\n            },\n            percussion: {\n                code: 'restMaxima',\n                line: 2,\n                point: 0,\n            },\n            soprano: {\n                code: 'cClef',\n                line: 4,\n                point: 0,\n            },\n            'mezzo-soprano': {\n                code: 'cClef',\n                line: 3,\n                point: 0,\n            },\n            'baritone-c': {\n                code: 'cClef',\n                line: 0,\n                point: 0,\n            },\n            'baritone-f': {\n                code: 'fClef',\n                line: 2,\n                point: 0,\n            },\n            subbass: {\n                code: 'fClef',\n                line: 0,\n                point: 0,\n            },\n            french: {\n                code: 'gClef',\n                line: 4,\n                point: 0,\n            },\n            tab: {\n                code: '6stringTabClef',\n                point: 0,\n            },\n        };\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef = Clef.types[type];\n        if (size === undefined) {\n            this.size = 'default';\n        }\n        else {\n            this.size = size;\n        }\n        const musicFont = Tables.currentMusicFont();\n        this.clef.point = musicFont.lookupMetric(`clef.${this.size}.point`, 0);\n        this.glyph = new Glyph(this.clef.code, this.clef.point, {\n            category: `clef.${this.clef.code}.${this.size}`,\n        });\n        // If an annotation, such as 8va, is specified, add it to the Clef object.\n        if (annotation !== undefined) {\n            const code = musicFont.lookupMetric(`clef.annotations.${annotation}.smuflCode`);\n            const point = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.point`);\n            const line = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.line`);\n            const x_shift = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.shiftX`);\n            this.annotation = { code, point, line, x_shift };\n            this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n            this.attachment.metrics.x_max = 0;\n            this.attachment.setXShift(this.annotation.x_shift);\n        }\n        else {\n            this.annotation = undefined;\n        }\n        return this;\n    }\n    /** Get clef width. */\n    getWidth() {\n        if (this.type === 'tab') {\n            defined(this.stave, 'ClefError', \"Can't get width without stave.\");\n        }\n        return this.width;\n    }\n    /** Set associated stave. */\n    setStave(stave) {\n        this.stave = stave;\n        if (this.type === 'tab') {\n            const glyph = defined(this.glyph, 'ClefError', \"Can't set stave without glyph.\");\n            const numLines = this.stave.getNumLines();\n            const musicFont = Tables.currentMusicFont();\n            const point = musicFont.lookupMetric(`clef.lineCount.${numLines}.point`);\n            const shiftY = musicFont.lookupMetric(`clef.lineCount.${numLines}.shiftY`);\n            glyph.setPoint(point);\n            glyph.setYShift(shiftY);\n        }\n        return this;\n    }\n    /** Render clef. */\n    draw() {\n        const glyph = defined(this.glyph, 'ClefError', \"Can't draw clef without glyph.\");\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('clef', this.getAttribute('id'));\n        glyph.setStave(stave);\n        glyph.setContext(ctx);\n        if (this.clef.line !== undefined) {\n            this.placeGlyphOnLine(glyph, stave, this.clef.line);\n        }\n        glyph.renderToStave(this.x);\n        if (this.annotation !== undefined && this.attachment !== undefined) {\n            this.placeGlyphOnLine(this.attachment, stave, this.annotation.line);\n            this.attachment.setStave(stave);\n            this.attachment.setContext(ctx);\n            this.attachment.renderToStave(this.x);\n        }\n        ctx.closeGroup();\n    }\n}\n/** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\nClef.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport class KeySignature extends StaveModifier {\n    // Create a new Key Signature based on a `key_spec`\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n        this.glyphs = [];\n        this.xPositions = []; // relative to this.x\n        this.paddingForced = false;\n    }\n    static get CATEGORY() {\n        return Category.KeySignature;\n    }\n    // Add an accidental glyph to the `KeySignature` instance which represents\n    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n    // spacing will be included in the glyph's position\n    convertToGlyph(acc, nextAcc) {\n        const accGlyphData = Tables.accidentalCodes(acc.type);\n        const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n        // Determine spacing between current accidental and the next accidental\n        let extraWidth = 1;\n        if (acc.type === 'n' && nextAcc) {\n            const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n            if (spacing) {\n                const isAbove = nextAcc.line >= acc.line;\n                extraWidth = isAbove ? spacing.above : spacing.below;\n            }\n        }\n        // Place the glyph on the stave\n        this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n        this.glyphs.push(glyph);\n        const xPosition = this.xPositions[this.xPositions.length - 1];\n        const glyphWidth = glyph.getMetrics().width + extraWidth;\n        // Store the next accidental's x position\n        this.xPositions.push(xPosition + glyphWidth);\n        // Expand size of key signature\n        this.width += glyphWidth;\n    }\n    // Cancel out a key signature provided in the `spec` parameter. This will\n    // place appropriate natural accidentals before the key signature.\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        // Get the accidental list for the cancelled key signature\n        const cancel_accList = Tables.keySignature(spec);\n        // If the cancelled key has a different accidental type, ie: # vs b\n        const different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n        // Determine how many naturals needed to add\n        const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n        // Return if no naturals needed\n        if (naturals < 1)\n            return undefined;\n        // Get the line position for each natural\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!different_types) {\n                index = cancel_accList.length - naturals + i;\n            }\n            const acc = cancel_accList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        // Combine naturals with main accidental list for the key signature\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancel_accList[0].type,\n        };\n    }\n    // Deprecated\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    // Apply the accidental staff line placement based on the `clef` and\n    // the  accidental `type` for the key signature ('# or 'b').\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0; // if clef === \"treble\"\n        let customLines; // when clef doesn't follow treble key sig shape\n        switch (clef) {\n            // Treble & Subbass both have offsets of 0, so are not included.\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        // If there's a special case, assign those lines/spaces:\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    // Alter the accidentals of a key spec one by one.\n    // Each alteration is a new accidental that replaces the\n    // original accidental (or the canceled one).\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        const stave = this.checkStave();\n        this.width = 0;\n        this.glyphs = [];\n        this.xPositions = [0]; // initialize with initial x position\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n            }\n        }\n        this.formatted = true;\n    }\n    /**\n     * Return the Glyph objects making up this KeySignature.\n     */\n    getGlyphs() {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.glyphs.length; i++) {\n            const glyph = this.glyphs[i];\n            const x = this.x + this.xPositions[i];\n            glyph.setStave(stave);\n            glyph.setContext(ctx);\n            glyph.renderToStave(x);\n        }\n        ctx.closeGroup();\n    }\n}\n// Space between natural and following accidental depending\n// on vertical position\nKeySignature.accidentalSpacing = {\n    '#': {\n        above: 6,\n        below: 4,\n    },\n    b: {\n        above: 4,\n        below: 7,\n    },\n    n: {\n        above: 4,\n        below: 1,\n    },\n    '##': {\n        above: 6,\n        below: 4,\n    },\n    bb: {\n        above: 4,\n        below: 7,\n    },\n    db: {\n        above: 4,\n        below: 7,\n    },\n    d: {\n        above: 4,\n        below: 7,\n    },\n    bbs: {\n        above: 4,\n        below: 7,\n    },\n    '++': {\n        above: 6,\n        below: 4,\n    },\n    '+': {\n        above: 6,\n        below: 4,\n    },\n    '+-': {\n        above: 6,\n        below: 4,\n    },\n    '++-': {\n        above: 6,\n        below: 4,\n    },\n    bs: {\n        above: 4,\n        below: 10,\n    },\n    bss: {\n        above: 4,\n        below: 10,\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class Repetition extends StaveModifier {\n    constructor(type, x, y_shift) {\n        super();\n        this.symbol_type = type;\n        this.x = x;\n        this.x_shift = 0;\n        this.y_shift = y_shift;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.Repetition;\n    }\n    setShiftX(x) {\n        this.x_shift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        this.setRendered();\n        switch (this.symbol_type) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSignoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSignoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.coda.offsetY'), 40, 'coda', { category: 'coda' });\n        return this;\n    }\n    drawSignoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.segno.offsetY'), 30, 'segno', { category: 'segno' });\n        return this;\n    }\n    drawSymbolText(stave, x, text, draw_coda) {\n        const ctx = stave.checkContext();\n        ctx.save();\n        ctx.setFont(this.textFont);\n        let text_x = 0;\n        let symbol_x = 0;\n        const modifierWidth = stave.getNoteStartX() - this.x;\n        switch (this.symbol_type) {\n            // To the left with symbol\n            case Repetition.type.CODA_LEFT:\n                // Offset Coda text to right of stave beginning\n                text_x = this.x + stave.getVerticalBarWidth();\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n            // To the right without symbol\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width;\n                break;\n            // To the right with symbol\n            default:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) +\n            this.y_shift +\n            Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetY');\n        if (draw_coda) {\n            Glyph.renderGlyph(ctx, symbol_x, y, 40, 'coda', { category: 'coda' });\n        }\n        ctx.fillText(text, text_x, y + 5);\n        ctx.restore();\n        return this;\n    }\n}\nRepetition.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13, // To Coda at end of stave\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport class StaveSection extends StaveModifier {\n    constructor(section, x, shift_y, drawRect = true) {\n        super();\n        this.setWidth(16);\n        this.section = section;\n        this.x = x;\n        this.shift_x = 0;\n        this.shift_y = shift_y;\n        this.drawRect = drawRect;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveSection;\n    }\n    setStaveSection(section) {\n        this.section = section;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const paddingX = 2;\n        const paddingY = 2;\n        const rectWidth = 2;\n        const textMeasurements = ctx.measureText(this.section);\n        const textWidth = textMeasurements.width;\n        const textHeight = textMeasurements.height;\n        const width = textWidth + 2 * paddingX; // add left & right padding\n        const height = textHeight + 2 * paddingY; // add top & bottom padding\n        //  Seems to be a good default y\n        const y = stave.getYForTopText(1.5) + this.shift_y;\n        const x = this.x + shift_x;\n        if (this.drawRect) {\n            ctx.beginPath();\n            ctx.setLineWidth(rectWidth);\n            ctx.rect(x, y + textMeasurements.y - paddingY, width, height);\n            ctx.stroke();\n        }\n        ctx.fillText(this.section, x + paddingX, y);\n        ctx.restore();\n        return this;\n    }\n}\nStaveSection.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class StaveTempo extends StaveModifier {\n    constructor(tempo, x, shift_y) {\n        super();\n        /** Font size for note. */\n        this.render_options = { glyph_font_scale: 30 };\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.shift_x = 10;\n        this.shift_y = shift_y;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveTempo;\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const options = this.render_options;\n        // FIXME: What does the '38' mean? Why 38? Is that supposed to\n        // be the default font size for standard notation?\n        const scale = options.glyph_font_scale / 38;\n        const name = this.tempo.name;\n        const duration = this.tempo.duration;\n        const dots = this.tempo.dots || 0;\n        const bpm = this.tempo.bpm;\n        let x = this.x + this.shift_x + shift_x;\n        const y = stave.getYForTopText(1) + this.shift_y;\n        ctx.save();\n        if (name) {\n            ctx.setFont(this.textFont);\n            ctx.fillText(name, x, y);\n            x += ctx.measureText(name).width;\n        }\n        if (duration && bpm) {\n            // Override the weight and style.\n            ctx.setFont(Object.assign(Object.assign({}, this.textFont), { weight: 'normal', style: 'normal' }));\n            if (name) {\n                x += ctx.measureText(' ').width;\n                ctx.fillText('(', x, y);\n                x += ctx.measureText('(').width;\n            }\n            const code = Tables.getGlyphProps(duration);\n            x += 3 * scale;\n            Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n            x += code.getWidth() * scale;\n            // Draw stem and flags\n            if (code.stem) {\n                let stem_height = 30;\n                if (code.beam_count)\n                    stem_height += 3 * (code.beam_count - 1);\n                stem_height *= scale;\n                const y_top = y - stem_height;\n                ctx.fillRect(x - scale, y_top, scale, stem_height);\n                if (code.flag) {\n                    Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem, {\n                        category: 'flag.staveTempo',\n                    });\n                    if (!dots)\n                        x += 6 * scale;\n                }\n            }\n            // Draw dot\n            for (let i = 0; i < dots; i++) {\n                x += 6 * scale;\n                ctx.beginPath();\n                ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n                ctx.fill();\n            }\n            ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n        }\n        ctx.restore();\n        return this;\n    }\n}\nStaveTempo.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 14,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { TextJustification, TextNote } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveText extends StaveModifier {\n    constructor(text, position, options = {}) {\n        super();\n        this.setWidth(16);\n        this.text = text;\n        this.position = position;\n        this.options = Object.assign({ shift_x: 0, shift_y: 0, justification: TextNote.Justification.CENTER }, options);\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveText;\n    }\n    setStaveText(text) {\n        this.text = text;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText('' + this.text).width;\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - text_width - 24 + this.options.shift_x;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX() + this.options.shift_x;\n                if (this.options.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - text_width / 2;\n                }\n                else if (this.options.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - text_width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2) + this.options.shift_y;\n                }\n                else {\n                    y = stave.getYForBottomText(2) + this.options.shift_y;\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        ctx.fillText('' + this.text, x, y + 4);\n        ctx.restore();\n        return this;\n    }\n}\nStaveText.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Renders time signatures glyphs for staffs\n// This class is used by TimeSignature to render the associated glyphs\nimport { Glyph } from './glyph';\nimport { defined } from './util';\nexport class TimeSignatureGlyph extends Glyph {\n    constructor(timeSignature, topDigits, botDigits, code, point, options) {\n        var _a;\n        super(code, point, options);\n        this.timeSignature = timeSignature;\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        let topWidth = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            let timeSigType = topDigits[i];\n            switch (topDigits[i]) {\n                case '-':\n                    timeSigType = 'Minus';\n                    break;\n                case '+':\n                    timeSigType = botDigits.length > 0 ? 'PlusSmall' : 'Plus';\n                    break;\n                case '(':\n                    timeSigType = botDigits.length > 0 ? 'ParensLeftSmall' : 'ParensLeft';\n                    break;\n                case ')':\n                    timeSigType = botDigits.length > 0 ? 'ParensRightSmall' : 'ParensRight';\n                    break;\n            }\n            const topGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.topGlyphs.push(topGlyph);\n            topWidth += (_a = topGlyph.getMetrics().width) !== null && _a !== void 0 ? _a : 0;\n        }\n        let botWidth = 0;\n        for (let i = 0; i < botDigits.length; ++i) {\n            let timeSigType = botDigits[i];\n            switch (botDigits[i]) {\n                case '+':\n                    timeSigType = 'PlusSmall';\n                    break;\n                case '(':\n                    timeSigType = 'ParensLeftSmall';\n                    break;\n                case ')':\n                    timeSigType = 'ParensRightSmall';\n                    break;\n            }\n            const botGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.botGlyphs.push(botGlyph);\n            botWidth += defined(botGlyph.getMetrics().width);\n        }\n        this.width = Math.max(topWidth, botWidth);\n        this.xMin = this.getMetrics().x_min;\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n        this.reset();\n    }\n    getMetrics() {\n        return {\n            x_min: this.xMin,\n            x_max: this.xMin + this.width,\n            width: this.width,\n        };\n    }\n    renderToStave(x) {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        let start_x = x + this.topStartX;\n        let y = 0;\n        if (this.botGlyphs.length > 0)\n            y = stave.getYForLine(this.timeSignature.topLine);\n        else\n            y = (stave.getYForLine(this.timeSignature.topLine) + stave.getYForLine(this.timeSignature.bottomLine)) / 2;\n        for (let i = 0; i < this.topGlyphs.length; ++i) {\n            const glyph = this.topGlyphs[i];\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + this.x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n        start_x = x + this.botStartX;\n        y = stave.getYForLine(this.timeSignature.bottomLine);\n        for (let i = 0; i < this.botGlyphs.length; ++i) {\n            const glyph = this.botGlyphs[i];\n            this.timeSignature.placeGlyphOnLine(glyph, stave, 0);\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + glyph.getMetrics().x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignatureGlyph } from './timesigglyph';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    if (numbers.length !== 2 && numbers[0] !== '+' && numbers[0] !== '-') {\n        throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`);\n    }\n    numbers.forEach((number) => {\n        // Characters consisting in number 0..9, '+', '-', '(' or ')'\n        if (/^[0-9+\\-()]+$/.test(number) == false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\nexport class TimeSignature extends StaveModifier {\n    constructor(timeSpec = '4/4', customPadding = 15, validate_args = true) {\n        super();\n        this.validate_args = validate_args;\n        const padding = customPadding;\n        const musicFont = Tables.currentMusicFont();\n        this.point = musicFont.lookupMetric('digits.point');\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.topLine = 2 + fontLineShift;\n        this.bottomLine = 4 + fontLineShift;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.info = this.parseTimeSpec(timeSpec);\n        this.setWidth(defined(this.info.glyph.getMetrics().width));\n        this.setPadding(padding);\n    }\n    static get CATEGORY() {\n        return Category.TimeSignature;\n    }\n    static get glyphs() {\n        return {\n            C: {\n                code: 'timeSigCommon',\n                point: 40,\n                line: 2,\n            },\n            'C|': {\n                code: 'timeSigCutCommon',\n                point: 40,\n                line: 2,\n            },\n        };\n    }\n    parseTimeSpec(timeSpec) {\n        var _a, _b;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const { line, code, point } = TimeSignature.glyphs[timeSpec];\n            return {\n                line,\n                num: false,\n                glyph: new Glyph(code, point),\n            };\n        }\n        if (this.validate_args) {\n            assertIsValidTimeSig(timeSpec);\n        }\n        const parts = timeSpec.split('/');\n        return {\n            num: true,\n            glyph: this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : ''),\n        };\n    }\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        return new TimeSignatureGlyph(this, topDigits, botDigits, 'timeSig0', this.point);\n    }\n    getInfo() {\n        return this.info;\n    }\n    setTimeSig(timeSpec) {\n        this.info = this.parseTimeSpec(timeSpec);\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        this.info.glyph.setStave(stave);\n        this.info.glyph.setContext(ctx);\n        this.placeGlyphOnLine(this.info.glyph, stave, this.info.line);\n        this.info.glyph.renderToStave(this.x);\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { KeySignature } from './keysignature';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { Volta } from './stavevolta';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { RuntimeError } from './util';\n// Used by Stave.format() to sort the modifiers at the beginning and end of a stave.\n// The keys (computed property names) match the CATEGORY property in the\n// Barline, Clef, KeySignature, TimeSignature classes.\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nexport class Stave extends Element {\n    constructor(x, y, width, options) {\n        super();\n        // Initialized by the constructor via this.resetLines().\n        this.height = 0;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.start_x = x + 5;\n        this.end_x = x + width;\n        this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.resetFont();\n        this.options = Object.assign({ vertical_bar_width: 10, num_lines: 5, fill_style: '#999999', left_bar: true, right_bar: true, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, space_above_staff_ln: 4, space_below_staff_ln: 4, top_text_position: 1, bottom_text_position: 4, line_config: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 1.4 };\n        this.resetLines();\n        // beg bar\n        this.addModifier(new Barline(this.options.left_bar ? BarlineType.SINGLE : BarlineType.NONE));\n        // end bar\n        this.addEndModifier(new Barline(this.options.right_bar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    static get CATEGORY() {\n        return Category.Stave;\n    }\n    // This is the sum of the padding that normally goes on left + right of a stave during\n    // drawing. Used to size staves correctly with content width.\n    static get defaultPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.padding') + musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    // Right padding, used by system if startX is already determined.\n    static get rightPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    /** Set default style for ledger lines. */\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    /** Get default style for ledger lines. */\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacing_between_lines_px * spacing;\n    }\n    resetLines() {\n        this.options.line_config = [];\n        for (let i = 0; i < this.options.num_lines; i++) {\n            this.options.line_config.push({ visible: true });\n        }\n        this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n        this.options.bottom_text_position = this.options.num_lines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.start_x = x;\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.start_x;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.end_x;\n    }\n    getTieStartX() {\n        return this.start_x;\n    }\n    getTieEndX() {\n        return this.end_x;\n    }\n    getX() {\n        return this.x;\n    }\n    getNumLines() {\n        return this.options.num_lines;\n    }\n    setNumLines(n) {\n        this.options.num_lines = n;\n        this.resetLines();\n        return this;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    getY() {\n        return this.y;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0) - Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    getBottomLineBottomY() {\n        return this.getYForLine(this.getNumLines() - 1) + Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.start_x += shift;\n        this.end_x += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.end_x = this.x + width;\n        // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n        // this.modifiers[1].setX(this.end_x);\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    getStyle() {\n        return Object.assign({ fillStyle: this.options.fill_style, strokeStyle: this.options.fill_style, lineWidth: Tables.STAVE_LINE_THICKNESS }, super.getStyle());\n    }\n    /**\n     * Set the measure number of this Stave.\n     */\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    /**\n     * Return the measure number of this Stave.\n     */\n    getMeasure() {\n        return this.measure;\n    }\n    /**\n     * Gets the pixels to shift from the beginning of the stave\n     * following the modifier at the provided index\n     * @param  {Number} index The index from which to determine the shift\n     * @return {Number}       The amount of pixels shifted\n     */\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let start_x = this.start_x - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n            start_x -= begBarline.getWidth();\n        }\n        return start_x;\n    }\n    /** Coda & Segno Symbol functions */\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    // Volta functions\n    setVoltaType(type, number_t, y) {\n        this.modifiers.push(new Volta(type, number_t, this.x, y));\n        return this;\n    }\n    // Section functions\n    setSection(section, y, xOffset = 0, fontSize, drawRect = true) {\n        const staveSection = new StaveSection(section, this.x + xOffset, y, drawRect);\n        if (fontSize)\n            staveSection.setFontSize(fontSize);\n        this.modifiers.push(staveSection);\n        return this;\n    }\n    // Tempo functions\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    // Text functions\n    setText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacing_between_lines_px;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n        return score_bottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.num_lines);\n    }\n    // This returns\n    /** @returns the y for the *center* of a staff line */\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        // Does the reverse of getYForLine - somewhat dumb and just calls\n        // getYForLine until the right value is reaches\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.top_text_position);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottom_text_position + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    // This method adds a stave modifier to the stave. Note that the first two\n    // modifiers (BarLines) are automatically added upon construction.\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    // Bar Line functions\n    setBegBarType(type) {\n        // Only valid bar types at beginning of stave is none, single or begin repeat\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        // Repeat end not valid at end of stave\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a key signature to the stave.\n     *\n     * Example:\n     * `stave.addKeySignature('Db');`\n     * @param keySpec new key specification `[A-G][b|#]?`\n     * @param cancelKeySpec\n     * @param position\n     * @returns\n     */\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    /**\n     * Add a clef to the stave.\n     *\n     * Example:\n     *\n     * stave.addClef('treble')\n     * @param clef clef (treble|bass|...) see {@link Clef.types}\n     * @param size\n     * @param annotation\n     * @param position\n     * @returns\n     */\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a time signature to the stave\n     *\n     * Example:\n     *\n     * `stave.addTimeSignature('4/4');`\n     * @param timeSpec time signature specification `(C\\||C|\\d\\/\\d)`\n     * @param customPadding\n     * @param position\n     * @returns\n     */\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    // Deprecated\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    /**\n     * @param position\n     * @param category\n     * @returns array of StaveModifiers that match the provided position and category.\n     */\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            // A category was provided.\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            // A position was provided.\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            // Both position and category were provided!\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    /**\n     * Use the modifier's `getCategory()` as a key for the `order` array.\n     * The retrieved value is used to sort modifiers from left to right (0 to to 3).\n     */\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.start_x = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = layoutMetrics.xMax || 0;\n                    widths.paddingRight = layoutMetrics.paddingRight || 0;\n                }\n                widths.left = -layoutMetrics.xMin || 0;\n                widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    /**\n     * All drawing functions below need the context to be set.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const num_lines = this.options.num_lines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        // Render lines\n        for (let line = 0; line < num_lines; line++) {\n            y = this.getYForLine(line);\n            this.applyStyle();\n            if (this.options.line_config[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + width, y);\n                ctx.stroke();\n            }\n            this.restoreStyle();\n        }\n        // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            // Only draw modifier if it has a draw function\n            if (typeof modifier.draw === 'function') {\n                modifier.applyStyle(ctx);\n                modifier.draw(this, this.getModifierXShift(i));\n                modifier.restoreStyle(ctx);\n            }\n        }\n        // Render measure numbers\n        if (this.measure > 0) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n            ctx.restore();\n        }\n        ctx.closeGroup();\n        return this;\n    }\n    getVerticalBarWidth() {\n        return this.options.vertical_bar_width;\n    }\n    /**\n     * Get the current configuration for the Stave.\n     * @return {Array} An array of configuration objects.\n     */\n    getConfigForLines() {\n        return this.options.line_config;\n    }\n    /**\n     * Configure properties of the lines in the Stave\n     * @param line_number The index of the line to configure.\n     * @param line_config An configuration object for the specified line.\n     * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n     *   range of the number of lines specified in the constructor.\n     */\n    setConfigForLine(line_number, line_config) {\n        if (line_number >= this.options.num_lines || line_number < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (line_config.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof line_config.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.line_config[line_number] = line_config;\n        return this;\n    }\n    /**\n     * Set the staff line configuration array for all of the lines at once.\n     * @param lines_configuration An array of line configuration objects.  These objects\n     *   are of the same format as the single one passed in to setLineConfiguration().\n     *   The caller can set null for any line config entry if it is desired that the default be used\n     * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n     *   exactly the same number of elements as the num_lines configuration object set in\n     *   the constructor.\n     */\n    setConfigForLines(lines_configuration) {\n        if (lines_configuration.length !== this.options.num_lines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        // Make sure the defaults are present in case an incomplete set of\n        //  configuration options were supplied.\n        // eslint-disable-next-line\n        for (const line_config in lines_configuration) {\n            // Allow '{}' to be used if the caller just wants the default for a particular node.\n            if (lines_configuration[line_config].visible == undefined) {\n                lines_configuration[line_config] = this.options.line_config[line_config];\n            }\n            this.options.line_config[line_config] = Object.assign(Object.assign({}, this.options.line_config[line_config]), lines_configuration[line_config]);\n        }\n        this.options.line_config = lines_configuration;\n        return this;\n    }\n    static formatBegModifiers(staves) {\n        let maxX = 0;\n        // align note start\n        staves.forEach((stave) => {\n            if (stave.getNoteStartX() > maxX)\n                maxX = stave.getNoteStartX();\n        });\n        staves.forEach((stave) => {\n            stave.setNoteStartX(maxX);\n        });\n        maxX = 0;\n        // align REPEAT_BEGIN\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    if (modifier.getX() > maxX)\n                        maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    modifier.setX(maxX);\n            });\n        });\n        maxX = 0;\n        // Align time signatures\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.TimeSignature);\n            modifiers.forEach((modifier) => {\n                if (modifier.getX() > maxX)\n                    maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.TimeSignature);\n            modifiers.forEach((modifier) => {\n                modifier.setX(maxX);\n            });\n        });\n    }\n}\nStave.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 8,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let x_shift = 3;\n    let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    const thickLineOffset = 2; // For aesthetics\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        x_shift = -5; // Flips the side of the thin line\n        variableWidth = 3;\n    }\n    // Thin line\n    ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n/** StaveConnector implements the connector lines between staves of a system. */\nexport class StaveConnector extends Element {\n    constructor(top_stave, bottom_stave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.width = 3;\n        this.top_stave = top_stave;\n        this.bottom_stave = bottom_stave;\n        this.type = StaveConnector.type.DOUBLE;\n        this.resetFont();\n        // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n        // 2. Offset BRACE type not to overlap with another StaveConnector\n        this.x_shift = 0;\n        this.texts = [];\n    }\n    static get CATEGORY() {\n        return Category.StaveConnector;\n    }\n    /**\n     * Set type.\n     * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n     */\n    setType(type) {\n        const newType = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        // Be certain that the type is a valid type:\n        if (Object.values(StaveConnector.type).includes(newType)) {\n            this.type = newType;\n        }\n        return this;\n    }\n    /**\n     * Get type.\n     * @returns number {@link StaveConnector.type}\n     */\n    getType() {\n        return this.type;\n    }\n    /** Set optional associated Text. */\n    setText(text, options = {}) {\n        this.texts.push({\n            content: text,\n            options: Object.assign({ shift_x: 0, shift_y: 0 }, options),\n        });\n        return this;\n    }\n    setXShift(x_shift) {\n        if (typeof x_shift !== 'number') {\n            throw new RuntimeError('InvalidType', 'x_shift must be a Number');\n        }\n        this.x_shift = x_shift;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render connector and associated text. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.top_stave.getYForLine(0);\n        let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n        let width = this.width;\n        let topX = this.top_stave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.top_stave.getX() + this.top_stave.getWidth();\n        }\n        let attachment_height = botY - topY;\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= this.width + 2;\n                topY -= this.thickness;\n                attachment_height += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                // May need additional code to draw brace\n                const x1 = this.top_stave.getX() - 2 + this.x_shift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachment_height / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachment_height;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachment_height;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachment_height;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachment_height;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachment_height;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachment_height;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachment_height = botY - topY;\n                Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n                Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n                topX -= this.width + 2;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachment_height -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachment_height);\n        }\n        // If the connector is a thin double barline, draw the paralell line\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachment_height);\n        }\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        // Add stave connector text\n        for (let i = 0; i < this.texts.length; i++) {\n            const text = this.texts[i];\n            const text_width = ctx.measureText('' + text.content).width;\n            const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n            const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n            ctx.fillText('' + text.content, x, y + 4);\n        }\n        ctx.restore();\n    }\n}\nStaveConnector.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n/**\n * SINGLE_LEFT and SINGLE are the same value for compatibility\n * with older versions of vexflow which didn't have right sided\n * stave connectors.\n */\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\n/**\n * Connector type:\n * * \"singleRight\"\n * * \"singleLeft\"\n * * \"single\"\n * * \"double\"\n * * \"brace\"\n * * \"bracket\"\n * * \"boldDoubleLeft\"\n * * \"boldDoubleRight\"\n * * \"thinDouble\"\n * * \"none\"\n */\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Beam } from './beam';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { ModifierContext } from './modifiercontext';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { isNote, isStaveNote } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\nimport { Voice } from './voice';\n// Helper function\nconst sumArray = (arr) => arr.reduce((a, b) => a + b, 0);\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts(voices, makeContext, addToContext) {\n    if (voices.length == 0)\n        return {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n    // Initialize tick maps.\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach((voice, voiceIndex) => {\n        // Use resolution multiplier as denominator so that no additional expansion\n        // of fractional tick values is needed.\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            // If we have no tick context for this tick, create one.\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                // Maintain a list of unique integerTicks.\n                tickList.push(integerTicks);\n            }\n            // Add this tickable to the TickContext.\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('Vex.Flow.Formatter', args);\n}\n/**\n * Get the rest line number of the next non-rest note(s).\n * @param notes array of Notes\n * @param currRestLine\n * @param currNoteIndex current note index\n * @param compare if true, return the midpoint between the current rest line and the next rest line\n * @returns a line number, which determines the vertical position of a rest.\n */\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    // If no valid next note group, nextRestLine is same as current.\n    let nextRestLine = currRestLine;\n    // Start with the next note and keep going until we find a valid non-rest note group.\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    // Locate the mid point between two lines.\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nexport class Formatter {\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: Tables.SOFTMAX_FACTOR, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        // Minimum width required to render all the notes in the voices.\n        this.minTotalWidth = 0;\n        // This is set to `true` after `minTotalWidth` is calculated.\n        this.hasMinTotalWidth = false;\n        // Arrays of tick and modifier contexts.\n        this.tickContexts = {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n        this.modifierContexts = [];\n        // Gaps between contexts, for free movement of notes post\n        // formatting.\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    /**\n     * Helper function to layout \"notes\" one after the other without\n     * regard for proportions. Useful for tests and debugging.\n     */\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tick = new TickContext().addTickable(note).preFormat();\n            const metrics = tick.getMetrics();\n            tick.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    /** Helper function to plot formatter debug info. */\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        options = Object.assign({ stavePadding: Tables.currentMusicFont().lookupMetric('stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    /**\n     * Helper function to format and draw a single voice. Returns a bounding\n     * box for the notation.\n     * @param ctx  the rendering context\n     * @param stave the stave to which to draw (`Stave` or `TabStave`)\n     * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n     * @param params one of below:\n     *    * Setting `autobeam` only `(context, stave, notes, true)` or\n     *      `(ctx, stave, notes, {autobeam: true})`\n     *    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n     *    * Setting both a struct is needed `(context, stave, notes, {\n     *      autobeam: true, align_rests: true})`\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            auto_beam: false,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.auto_beam = params;\n        }\n        // Start by creating a voice and adding all the notes to it.\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Then create beams, if requested.\n        const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n        // Instantiate a `Formatter` and format the notes.\n        new Formatter()\n            .joinVoices([voice]) // , { align_rests: options.align_rests })\n            .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n        // Render the voice and beams to the stave.\n        voice.setStave(stave).draw(ctx, stave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Return the bounding box of the voice.\n        return voice.getBoundingBox();\n    }\n    /**\n     * Helper function to format and draw aligned tab and stave notes in two\n     * separate staves.\n     * @param ctx the rendering context\n     * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n     * @param stave a `Stave` instance on which to render `Note`s.\n     * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n     * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n     * @param autobeam automatically generate beams.\n     * @param params a configuration object:\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n        let opts = {\n            auto_beam: autobeam,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.auto_beam = params;\n        }\n        // Create a `4/4` voice for `notes`.\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Create a `4/4` voice for `tabnotes`.\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        // Then create beams, if requested.\n        const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n        // Instantiate a `Formatter` and align tab and stave notes.\n        new Formatter()\n            .joinVoices([notevoice]) // , { align_rests: opts.align_rests })\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n        // Render voices and beams to staves.\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Draw a connector between tab and note staves.\n        new StaveConnector(stave, tabstave).setContext(ctx).draw();\n    }\n    /**\n     * Automatically set the vertical position of rests based on previous/next note positions.\n     * @param tickables an array of Tickables.\n     * @param alignAllNotes If `false`, only align rests that are within a group of beamed notes.\n     * @param alignTuplets If `false`, ignores tuplets.\n     */\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                // If activated rests not on default can be rendered as specified.\n                const position = currTickable.getGlyph().position.toUpperCase();\n                if (position !== 'R/4' && position !== 'B/4') {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    // Align rests with previous/next notes.\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        // If previous tickable is a rest, use its line number.\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                // Get the rest line for next valid non-rest note group.\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    /**\n     * Find all the rests in each of the `voices` and align them to neighboring notes.\n     *\n     * @param voices\n     * @param alignAllNotes If `false`, only align rests within beamed groups of notes. If `true`, align all rests.\n     */\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    /**\n     * Estimate the width required to render 'voices'.  This is done by:\n     * 1. Sum the widths of all the tick contexts\n     * 2. Estimate the padding.\n     * The latter is done by calculating the padding 3 different ways, and taking the\n     * greatest value:\n     * 1. the padding required for unaligned notes in different voices\n     * 2. the padding based on the stddev of the tickable widths\n     * 3. the padding based on the stddev of the tickable durations.\n     *\n     * The last 2 quantities estimate a 'width entropy', where notes might need more\n     * room than the proportional formatting gives them.  A measure of all same duration\n     * and width will need no extra padding, and all these quantities will be\n     * zero in that case.\n     *\n     * Note: joinVoices has to be called before calling preCalculateMinTotalWidth.\n     *\n     * @param voices the voices that contain the notes\n     * @returns the estimated width in pixels\n     */\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Tables.currentMusicFont().lookupMetric('stave.unalignedNotePadding');\n        // Calculate additional padding based on 3 methods:\n        // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        // Cache results.\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        // Create tick contexts.\n        if (!voices) {\n            throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n        }\n        this.createTickContexts(voices);\n        // eslint-disable-next-line\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        // Go through each tick context and calculate total width,\n        // and also accumulate values used in padding hints\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            // If this TC doesn't have all the voices on it, it's unaligned.\n            // so increment the unaligned padding accumulator\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            // Calculate the 'width entropy' over all the Tickables.\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        // Find max of 3 methods pad the width with that\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    /**\n     * Get minimum width required to render all voices. Either `format` or\n     * `preCalculateMinTotalWidth` must be called before this method.\n     */\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    /** Calculate the resolution multiplier for `voices`. */\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    /** Create a `ModifierContext` for each tick in `voices`. */\n    createModifierContexts(voices) {\n        if (voices.length == 0)\n            return;\n        const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n        // Initialize tick maps.\n        const tickToContextMap = new Map();\n        const contexts = [];\n        // For each voice, extract notes and create a context for every\n        // new tick that hasn't been seen before.\n        voices.forEach((voice) => {\n            // Use resolution multiplier as denominator so that no additional expansion\n            // of fractional tick values is needed.\n            const ticksUsed = new Fraction(0, resolutionMultiplier);\n            voice.getTickables().forEach((tickable) => {\n                const integerTicks = ticksUsed.numerator;\n                let staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                // If we have no tick context for this tick, create one.\n                if (!staveTickToContextMap) {\n                    tickToContextMap.set(tickable.getStave(), {});\n                    staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                }\n                if (!(staveTickToContextMap ? staveTickToContextMap[integerTicks] : undefined)) {\n                    const newContext = new ModifierContext();\n                    contexts.push(newContext);\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    staveTickToContextMap[integerTicks] = newContext;\n                }\n                // Add this tickable to the TickContext.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tickable.addToModifierContext(staveTickToContextMap[integerTicks]);\n                ticksUsed.add(tickable.getTicks());\n            });\n        });\n        this.modifierContexts.push({\n            map: tickToContextMap,\n            array: contexts,\n            resolutionMultiplier,\n        });\n    }\n    /**\n     * Create a `TickContext` for each tick in `voices`. Also calculate the\n     * total number of ticks in voices.\n     */\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    /**\n     * Get the AlignmentContexts of TickContexts that were created by createTickContexts.\n     * Returns undefined if createTickContexts has not yet been run.\n     */\n    getTickContexts() {\n        return this.tickContexts;\n    }\n    /**\n     * This is the core formatter logic. Format voices and justify them\n     * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n     * that can't retrieve widths without a canvas. This method sets the `x` positions\n     * of all the tickables/notes in the formatter.\n     */\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        // Initialize context maps.\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        // Reset loss history for evaluator.\n        this.lossHistory = [];\n        // If voices and a stave were provided, set the Stave for each voice\n        // and preFormat to apply Y values to the notes;\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        // Now distribute the ticks to each tick context, and assign them their\n        // own X positions.\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        // Pass 1: Give each note maximum width requested by context.\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            // Make sure that all tickables in this context have calculated their\n            // space requirements.\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            // Calculate shift for the next tick.\n            shift = width - metrics.totalLeftPx;\n        });\n        // Use softmax based on all notes across all staves. (options.globalSoftmax)\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        // No justification needed. End formatting.\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        // Start justification. Subtract the right extra pixels of the final context because the formatter\n        // justifies based on the context's X position, which is the left-most part of the note head.\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n        // the softmax of the ticks.\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    // Go through each tickable and search backwards for another tickable\n                    // in the same voice. If found, use that duration (ticks) to calculate\n                    // the expected distance.\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        // Look for matching voices between tick contexts.\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            // Found matching voices, get largest duration\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                // Calculate the limits of the shift based on modifiers, etc.\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                // Don't allow shifting if notes in the same voice can collide\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n                            // so that two different tick contexts don't align across staves.\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            // Calculate the expected distance of the current context from the last matching tickable. The\n                            // distance is scaled down by the softmax for the voice.\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            // Distribute ticks to the contexts based on the calculated distance error.\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                // Move center aligned tickables to middle\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const musicFont = Tables.currentMusicFont();\n        const configMinPadding = musicFont.lookupMetric('stave.endPaddingMin');\n        const configMaxPadding = musicFont.lookupMetric('stave.endPaddingMax');\n        const leftPadding = musicFont.lookupMetric('stave.padding');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        // Just one context. Done formatting.\n        if (contextList.length === 1)\n            return 0;\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        // right justify to either the configured padding, or the min distance between notes, whichever is greatest.\n        // This * 2 keeps the existing formatting unless there is 'a lot' of extra whitespace, which won't break\n        // existing visual regression tests.\n        const paddingMaxCalc = (curTargetWidth) => {\n            let lastTickablePadding = 0;\n            const lastTickable = lastContext && lastContext.getMaxTickable();\n            if (lastTickable) {\n                const voice = lastTickable.getVoice();\n                // If the number of actual ticks in the measure <> configured ticks, right-justify\n                // because the softmax won't yield the correct value\n                if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n                    return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n                }\n                const tickWidth = lastTickable.getWidth();\n                lastTickablePadding =\n                    voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n            }\n            return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n        };\n        let paddingMax = paddingMaxCalc(targetWidth);\n        let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        // Adjust justification width until the right margin is as close as possible to the calculated padding,\n        // without going over\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            paddingMax = paddingMaxCalc(targetWidth);\n            paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    /** Calculate the total cost of this formatting decision. */\n    evaluate() {\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        // Calculate available slack per tick context. This works out how much freedom\n        // to move a context has in either direction, without affecting other notes.\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            // Calculate X position of right edge of previous note\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            // Calculate X position of left edge of current note\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            // Tell the tick contexts how much they can reposition themselves.\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        // Calculate mean distance in each voice for each duration type, then calculate\n        // how far each note is from the mean.\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1 };\n            }\n            else {\n                stats.count += 1;\n                stats.mean = (stats.mean + space) / 2;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        // Calculate how much each note deviates from the mean. Loss function is square\n        // root of the sum of squared deviations.\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    /**\n     * Run a single iteration of rejustification. At a high level, this method calculates\n     * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n     * attempt to reduce the cost. You can call this method multiple times until it finds\n     * and oscillates around a global minimum.\n     * @param options[alpha] the \"learning rate\" for the formatter. It determines how much of a shift\n     * the formatter should make based on its cost function.\n     */\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n        // on adjacent tickcontexts.\n        function move(current, shift, prev, next) {\n            current.setX(current.getX() + shift);\n            current.getFormatterMetrics().freedom.left += shift;\n            current.getFormatterMetrics().freedom.right -= shift;\n            if (prev)\n                prev.getFormatterMetrics().freedom.right += shift;\n            if (next)\n                next.getFormatterMetrics().freedom.left -= shift;\n        }\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            move(context, shift, prevContext, nextContext);\n            const cost = -sumArray(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    /**\n     * This is the top-level call for all formatting logic completed\n     * after `x` *and* `y` values have been computed for the notes\n     * in the voices.\n     */\n    postFormat() {\n        this.modifierContexts.forEach((modifierContexts) => {\n            modifierContexts.array.forEach((mc) => mc.postFormat());\n        });\n        this.tickContexts.list.forEach((tick) => {\n            this.tickContexts.map[tick].postFormat();\n        });\n        return this;\n    }\n    /**\n     * Take all `voices` and create `ModifierContext`s out of them. This tells\n     * the formatters that the voices belong on a single stave.\n     */\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    /**\n     * Align rests in voices, justify the contexts, and position the notes\n     * so voices are aligned and ready to render onto the stave. This method\n     * mutates the `x` positions of all tickables in `voices`.\n     *\n     * Voices are full justified to fit in `justifyWidth` pixels.\n     *\n     * Set `options.context` to the rendering context. Set `options.align_rests`\n     * to true to enable rest alignment.\n     */\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ align_rests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.align_rests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        // Only postFormat if a stave was supplied for y value formatting\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    // This method is just like `format` except that the `justifyWidth` is inferred from the `stave`.\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        // eslint-disable-next-line\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var TupletLocation;\n(function (TupletLocation) {\n    TupletLocation[TupletLocation[\"BOTTOM\"] = -1] = \"BOTTOM\";\n    TupletLocation[TupletLocation[\"TOP\"] = 1] = \"TOP\";\n})(TupletLocation || (TupletLocation = {}));\nexport class Tuplet extends Element {\n    constructor(notes, options = {}) {\n        super();\n        this.numerator_glyphs = [];\n        this.denom_glyphs = [];\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.options = options;\n        this.notes = notes;\n        this.num_notes = this.options.num_notes != undefined ? this.options.num_notes : notes.length;\n        // We accept beats_occupied, but warn that it's deprecated:\n        // the preferred property name is now notes_occupied.\n        if (this.options.beats_occupied) {\n            this.beatsOccupiedDeprecationWarning();\n        }\n        this.notes_occupied = this.options.notes_occupied || this.options.beats_occupied || 2;\n        if (this.options.bracketed != undefined) {\n            this.bracketed = this.options.bracketed;\n        }\n        else {\n            this.bracketed = notes.some((note) => !note.hasBeam());\n        }\n        this.ratioed =\n            this.options.ratioed != undefined ? this.options.ratioed : Math.abs(this.notes_occupied - this.num_notes) > 1;\n        this.point = Tables.currentMusicFont().lookupMetric('digits.tupletPoint');\n        this.y_pos = 16;\n        this.x_pos = 100;\n        this.width = 200;\n        this.setTupletLocation(this.options.location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    static get CATEGORY() {\n        return Category.Tuplet;\n    }\n    static get LOCATION_TOP() {\n        return TupletLocation.TOP;\n    }\n    static get LOCATION_BOTTOM() {\n        return TupletLocation.BOTTOM;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.tuplet;\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    /**\n     * Set whether or not the bracket is drawn.\n     */\n    setBracketed(bracketed) {\n        this.bracketed = !!bracketed;\n        return this;\n    }\n    /**\n     * Set whether or not the ratio is shown.\n     */\n    setRatioed(ratioed) {\n        this.ratioed = !!ratioed;\n        return this;\n    }\n    /**\n     * Set the tuplet indicator to be displayed either on the top or bottom of the stave.\n     */\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            // eslint-disable-next-line\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.num_notes;\n    }\n    beatsOccupiedDeprecationWarning() {\n        // eslint-disable-next-line\n        console.warn('beats_occupied has been deprecated as an option for tuplets. Please use notes_occupied instead.', 'Calls to getBeatsOccupied / setBeatsOccupied should now be routed to getNotesOccupied / setNotesOccupied.', 'The old methods will be removed in VexFlow 5.0.');\n    }\n    getBeatsOccupied() {\n        this.beatsOccupiedDeprecationWarning();\n        return this.getNotesOccupied();\n    }\n    setBeatsOccupied(beats) {\n        this.beatsOccupiedDeprecationWarning();\n        return this.setNotesOccupied(beats);\n    }\n    getNotesOccupied() {\n        return this.notes_occupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.notes_occupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        this.numerator_glyphs = [];\n        let n = this.num_notes;\n        while (n >= 1) {\n            this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n        this.denom_glyphs = [];\n        n = this.notes_occupied;\n        while (n >= 1) {\n            this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n    }\n    // determine how many tuplets are nested within this tuplet\n    // on the same side (above/below), to calculate a y\n    // offset for this tuplet:\n    getNestedTupletCount() {\n        const location = this.location;\n        const first_note = this.notes[0];\n        let maxTupletCount = countTuplets(first_note, location);\n        let minTupletCount = countTuplets(first_note, location);\n        // Count the tuplets that are on the same side (above/below)\n        // as this tuplet:\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    // determine the y position of the tuplet:\n    getYPosition() {\n        // offset the tuplet for any nested tuplets between\n        // it and the notes:\n        const nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n        // offset the tuplet for any manual y_offset:\n        const y_offset = this.options.y_offset || 0;\n        // now iterate through the notes and find our highest\n        // or lowest locations, to form a base y_pos\n        const first_note = this.notes[0];\n        let y_pos;\n        if (this.location === Tuplet.LOCATION_TOP) {\n            y_pos = first_note.checkStave().getYForLine(0) - Tuplet.metrics.topModifierOffset;\n            // check modifiers above note to see if they will collide with tuplet beam\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().top_text_line);\n                }\n                const modY = note.getYForTopText(modLines) - Tuplet.metrics.noteHeadOffset;\n                if (note.hasStem() || note.isRest()) {\n                    const top_y = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tuplet.metrics.stemOffset\n                        : note.getStemExtents().baseY - Tuplet.metrics.noteHeadOffset;\n                    y_pos = Math.min(top_y, y_pos);\n                    if (modLines > 0) {\n                        y_pos = Math.min(modY, y_pos);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = Tuplet.metrics.bottomLine; // tuplet default on line 4\n            // check modifiers below note to see if they will collide with tuplet beam\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().text_line + 1);\n                }\n            });\n            y_pos = first_note.checkStave().getYForLine(lineCheck) + Tuplet.metrics.noteHeadOffset;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + Tuplet.metrics.noteHeadOffset\n                        : this.notes[i].getStemExtents().topY + Tuplet.metrics.stemOffset;\n                    if (bottom_y > y_pos) {\n                        y_pos = bottom_y;\n                    }\n                }\n            }\n        }\n        return y_pos + nested_tuplet_y_offset + y_offset;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        // determine x value of left bound of tuplet\n        const first_note = this.notes[0];\n        const last_note = this.notes[this.notes.length - 1];\n        if (!this.bracketed) {\n            this.x_pos = first_note.getStemX();\n            this.width = last_note.getStemX() - this.x_pos;\n        }\n        else {\n            this.x_pos = first_note.getTieLeftX() - 5;\n            this.width = last_note.getTieRightX() - this.x_pos + 5;\n        }\n        // determine y value for tuplet\n        this.y_pos = this.getYPosition();\n        const addGlyphWidth = (width, glyph) => width + defined(glyph.getMetrics().width);\n        // calculate total width of tuplet notation\n        let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n        if (this.ratioed) {\n            width = this.denom_glyphs.reduce(addGlyphWidth, width);\n            width += this.point * 0.32;\n        }\n        const notation_center_x = this.x_pos + this.width / 2;\n        const notation_start_x = notation_center_x - width / 2;\n        // draw bracket if the tuplet is not beamed\n        if (this.bracketed) {\n            const line_width = this.width / 2 - width / 2 - 5;\n            // only draw the bracket if it has positive length\n            if (line_width > 0) {\n                ctx.fillRect(this.x_pos, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n                ctx.fillRect(this.x_pos + this.width, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n            }\n        }\n        // draw numerator glyphs\n        const shiftY = Tables.currentMusicFont().lookupMetric('digits.shiftY', 0);\n        let x_offset = 0;\n        this.numerator_glyphs.forEach((glyph) => {\n            glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n            x_offset += defined(glyph.getMetrics().width);\n        });\n        // display colon and denominator if the ratio is to be shown\n        if (this.ratioed) {\n            const colon_x = notation_start_x + x_offset + this.point * 0.16;\n            const colon_radius = this.point * 0.06;\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n            x_offset += this.point * 0.32;\n            this.denom_glyphs.forEach((glyph) => {\n                glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n                x_offset += defined(glyph.getMetrics().width);\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TupletLocation } from './tuplet';\nimport { Category, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n    constructor(notes, auto_stem = false) {\n        super();\n        this.slope = 0;\n        this.y_shift = 0;\n        /**\n         * Overrides to default beam directions for secondary-level beams that do not\n         * connect to any other note. See further explanation at\n         * `setPartialBeamSideAt`\n         */\n        this.forcedPartialDirections = {};\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        // Validate beam line, direction and ticks.\n        this.ticks = notes[0].getIntrinsicTicks();\n        if (this.ticks >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i; // shared iterator\n        let note;\n        this.stem_direction = Stem.UP;\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (note.hasStem()) {\n                this.stem_direction = note.getStemDirection();\n                break;\n            }\n        }\n        let stem_direction = this.stem_direction;\n        // Figure out optimal stem direction based on given notes\n        if (auto_stem && isStaveNote(notes[0])) {\n            stem_direction = calculateStemDirection(notes);\n        }\n        else if (auto_stem && isTabNote(notes[0])) {\n            // Auto Stem TabNotes\n            const stem_weight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        // Apply stem directions and attach beam to notes\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (auto_stem) {\n                note.setStemDirection(stem_direction);\n                this.stem_direction = stem_direction;\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        this.beam_count = this.getBeamCount();\n        this.break_on_indices = [];\n        this.render_options = {\n            beam_width: 5,\n            max_slope: 0.25,\n            min_slope: -0.25,\n            slope_iterations: 20,\n            slope_cost: 100,\n            show_stemlets: false,\n            stemlet_extension: 7,\n            partial_beam_length: 10,\n            flat_beams: false,\n            min_flat_beam_offset: 15,\n        };\n    }\n    static get CATEGORY() {\n        return Category.Beam;\n    }\n    /** Get the direction of the beam */\n    getStemDirection() {\n        return this.stem_direction;\n    }\n    /**\n     * Get the default beam groups for a provided time signature.\n     * Attempt to guess if the time signature is not found in table.\n     * Currently this is fairly naive.\n     */\n    static getDefaultBeamGroups(time_sig) {\n        if (!time_sig || time_sig === 'c') {\n            time_sig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[time_sig];\n        if (groups === undefined) {\n            // If no beam groups found, naively determine\n            // the beam groupings from the time signature\n            const beatTotal = parseInt(time_sig.split('/')[0], 10);\n            const beatValue = parseInt(time_sig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    /**\n     * A helper function to automatically build basic beams for a voice. For more\n     * complex auto-beaming use `Beam.generateBeams()`.\n     * @param voice the voice to generate the beams for\n     * @param stem_direction a stem direction to apply to the entire voice\n     * @param groups an array of `Fraction` representing beat groupings for the beam\n     */\n    static applyAndGetBeams(voice, stem_direction, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stem_direction });\n    }\n    /**\n     * A helper function to autimatically build beams for a voice with\n     * configuration options.\n     *\n     * Example configuration object:\n     *\n     * ```\n     * config = {\n     *   groups: [new Vex.Flow.Fraction(2, 8)],\n     *   stem_direction: -1,\n     *   beam_rests: true,\n     *   beam_middle_only: true,\n     *   show_stemlets: false\n     * };\n     * ```\n     * @param notes an array of notes to create the beams for\n     * @param config the configuration object\n     * @param config.stem_direction set to apply the same direction to all notes\n     * @param config.beam_rests set to `true` to include rests in the beams\n     * @param config.beam_middle_only set to `true` to only beam rests in the middle of the beat\n     * @param config.show_stemlets set to `true` to draw stemlets for rests\n     * @param config.maintain_stem_directions set to `true` to not apply new stem directions\n     * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n     *\n     */\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        // Convert beam groups to tick amounts\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(vf_notes) {\n            return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            // number of ticks in current group\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return; // Ignore untickables (like bar notes)\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                // Double the amount of ticks in a group, if it's an unbeamable tuplet\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                // If the note that was just added overflows the group tick total\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    // If the overflow note can be beamed, start the next group\n                    // with it. Unbeamable notes leave the group overflowed.\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    // We have overflown, so we're going to next tick group. As we might have\n                    // overflown by more than 1 group, we need to go forward as many times as\n                    // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n                    // in current groups as we go forward.\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            // Adds any remainder notes beam\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        // Splits up groups by Rest\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beam_rests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    // Determine if the group should be broken at this note\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        // Add current group\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        // Start a new group. Include the current note if the group\n                        // was broken up by stem direction, as that note needs to start\n                        // the next group of notes\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        // Add note to group\n                        tempGroup.push(note);\n                    }\n                });\n                // If there is a remaining group, add it as well\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintain_stem_directions) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stem_direction) {\n                        stemDirection = config.stem_direction;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        // Get all of the tuplets in all of the note groups\n        function getTuplets() {\n            const uniqueTuplets = [];\n            // Go through all of the note groups and inspect for tuplets\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        // Using closures to store the variables throughout the various functions\n        // IMO Keeps it this process lot cleaner - but not super consistent with\n        // the rest of the API's style - Silverwolf90 (Cyril)\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        // Get the notes to be beamed\n        const beamedNoteGroups = getBeamGroups();\n        // Get the tuplets in order to format them accurately\n        const allTuplets = getTuplets();\n        // Create a Vex.Flow.Beam from each group of notes to be beamed\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.show_stemlets) {\n                beam.render_options.show_stemlets = true;\n            }\n            if (config.secondary_breaks) {\n                beam.render_options.secondary_break_ticks = Tables.durationToTicks(config.secondary_breaks);\n            }\n            if (config.flat_beams === true) {\n                beam.render_options.flat_beams = true;\n                beam.render_options.flat_beam_offset = config.flat_beam_offset;\n            }\n            beams.push(beam);\n        });\n        // Reformat tuplets\n        allTuplets.forEach((tuplet) => {\n            // Set the tuplet location based on the stem direction\n            const direction = tuplet.notes[0].stem_direction === Stem.DOWN ? TupletLocation.BOTTOM : TupletLocation.TOP;\n            tuplet.setTupletLocation(direction);\n            // If any of the notes in the tuplet are not beamed, draw a bracket.\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    /** Get the notes in this beam. */\n    getNotes() {\n        return this.notes;\n    }\n    /** Get the max number of beams in the set of notes. */\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyph().beam_count);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    /** Set which note `indices` to break the secondary beam at. */\n    breakSecondaryAt(indices) {\n        this.break_on_indices = indices;\n        return this;\n    }\n    /**\n     * Forces the direction of a partial beam (a secondary-level beam that exists\n     * on one note only of the beam group). This is useful in rhythms such as 6/8\n     * eighth-sixteenth-eighth-sixteenth, where the direction of the beam on the\n     * first sixteenth note can help imply whether the rhythm is to be felt as\n     * three groups of eighth notes (typical) or as two groups of three-sixteenths\n     * (less common):\n     * ```\n     *  ┌───┬──┬──┐      ┌──┬──┬──┐\n     *  │   ├─ │ ─┤  vs  │ ─┤  │ ─┤\n     *  │   │  │  │      │  │  │  │\n     * ```\n     */\n    setPartialBeamSideAt(noteIndex, side) {\n        this.forcedPartialDirections[noteIndex] = side;\n        return this;\n    }\n    /**\n     * Restore the default direction of a partial beam (a secondary-level beam\n     * that does not connect to any other notes).\n     */\n    unsetPartialBeamSideAt(noteIndex) {\n        delete this.forcedPartialDirections[noteIndex];\n        return this;\n    }\n    /** Return the y coordinate for linear function. */\n    getSlopeY(x, first_x_px, first_y_px, slope) {\n        return first_y_px + (x - first_x_px) * slope;\n    }\n    /** Calculate the best possible slope for the provided notes. */\n    calculateSlope() {\n        const { notes, stem_direction: stemDirection, render_options: { max_slope, min_slope, slope_iterations, slope_cost }, } = this;\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (max_slope - min_slope) / slope_iterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        // iterate through slope values to find best weighted fit\n        for (let slope = min_slope; slope <= max_slope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            // iterate through notes, calculating y shift and stem extension\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    // beam needs to be shifted up to accommodate note\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        // beam overshoots note, account for the difference\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            // most engraving books suggest aiming for a slope about half the angle of the\n            // difference between the first and last notes' stem length;\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            // This tries to align most beams to something closer to the idealSlope, but\n            // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n            const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n            // update state when a more ideal slope is found\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        this.y_shift = yShift;\n    }\n    /** Calculate a slope and y-shift for flat beams. */\n    calculateFlatSlope() {\n        const { notes, stem_direction, render_options: { beam_width, min_flat_beam_offset, flat_beam_offset }, } = this;\n        // If a flat beam offset has not yet been supplied or calculated,\n        // generate one based on the notes in this particular note group\n        let total = 0;\n        let extremeY = 0; // Store the highest or lowest note here\n        let extremeBeamCount = 0; // The beam count of the extreme note\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            // Total up all of the offsets so we can average them out later\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            // Store the highest (stems-up) or lowest (stems-down) note so the\n            //  offset can be adjusted in case the average isn't enough\n            if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        // Average the offsets to try and come up with a reasonable one that\n        //  works for all of the notes in the beam group.\n        let offset = total / notes.length;\n        // In case the average isn't long enough, add or subtract some more\n        //  based on the highest or lowest note (again, based on the stem\n        //  direction). This also takes into account the added height due to\n        //  the width of the beams.\n        const beamWidth = beam_width * 1.5;\n        const extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n        const newOffset = extremeY + extremeTest * -stem_direction;\n        if (stem_direction === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stem_direction === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flat_beam_offset) {\n            // Set the offset for the group based on the calculations above.\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        // for flat beams, the slope and y_shift are simply 0\n        this.slope = 0;\n        this.y_shift = 0;\n    }\n    /** Return the Beam y offset. */\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        // For flat beams, set the first and last Y to the offset, rather than\n        //  using the note's stem extents.\n        if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n            beamY = this.render_options.flat_beam_offset;\n        }\n        return beamY;\n    }\n    /**\n     * Create new stems for the notes in the beam, so that each stem\n     * extends into the beams.\n     */\n    applyStemExtensions() {\n        const { notes, slope, y_shift, stem_direction, beam_count, render_options: { show_stemlets, stemlet_extension, beam_width }, } = this;\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = stem_direction === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                stem.setExtension(preBeamExtension + beamExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && show_stemlets) {\n                    const beamWidth = beam_width;\n                    const totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n                }\n            }\n        }\n    }\n    /** Return upper level beam direction. */\n    lookupBeamDirection(duration, prev_tick, tick, next_tick, noteIndex) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const forcedBeamDirection = this.forcedPartialDirections[noteIndex];\n        if (forcedBeamDirection)\n            return forcedBeamDirection;\n        const lookup_duration = `${Tables.durationToNumber(duration) / 2}`;\n        const prev_note_gets_beam = prev_tick < Tables.durationToTicks(lookup_duration);\n        const next_note_gets_beam = next_tick < Tables.durationToTicks(lookup_duration);\n        const note_gets_beam = tick < Tables.durationToTicks(lookup_duration);\n        if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_BOTH;\n        }\n        else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n            return BEAM_LEFT;\n        }\n        else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick, noteIndex);\n    }\n    /** Get the x coordinates for the beam lines of specific `duration`. */\n    getBeamLines(duration) {\n        const tick_of_duration = Tables.durationToTicks(duration);\n        let beam_started = false;\n        const beam_lines = [];\n        let current_beam = undefined;\n        const partial_beam_length = this.render_options.partial_beam_length;\n        let previous_should_break = false;\n        let tick_tally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            // See if we need to break secondary beams on this note.\n            const ticks = note.getTicks().value();\n            tick_tally += ticks;\n            let should_break = false;\n            // 8th note beams are always drawn.\n            if (parseInt(duration, 10) >= 8) {\n                // First, check to see if any indices were set up through breakSecondaryAt()\n                should_break = this.break_on_indices.indexOf(i) !== -1;\n                // If the secondary breaks were auto-configured in the render options,\n                //  handle that as well.\n                if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n                    tick_tally = 0;\n                    should_break = true;\n                }\n            }\n            const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n            const stem_x = note.getStemX() - Stem.WIDTH / 2;\n            // Check to see if the next note in the group will get a beam at this\n            //  level. This will help to inform the partial beam logic below.\n            const prev_note = this.notes[i - 1];\n            const next_note = this.notes[i + 1];\n            const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n            const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n            const beam_alone = prev_note && next_note && note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            if (note_gets_beam) {\n                // This note gets a beam at the current level\n                if (beam_started) {\n                    // We're currently in the middle of a beam. Just continue it on to\n                    //  the stem X of the current note.\n                    current_beam = beam_lines[beam_lines.length - 1];\n                    current_beam.end = stem_x;\n                    // If a secondary beam break is set up, end the beam right now.\n                    if (should_break) {\n                        beam_started = false;\n                        if (next_note && !next_note_gets_beam && current_beam.end === undefined) {\n                            // This note gets a beam,.but the next one does not. This means\n                            //  we need a partial pointing right.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                }\n                else {\n                    // No beam started yet. Start a new one.\n                    current_beam = { start: stem_x, end: undefined };\n                    beam_started = true;\n                    if (beam_alone) {\n                        // previous and next beam exists and does not get a beam but current gets it.\n                        const prev_tick = prev_note.getIntrinsicTicks();\n                        const next_tick = next_note.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick, i);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                        else {\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                    }\n                    else if (!next_note_gets_beam) {\n                        // The next note doesn't get a beam. Draw a partial.\n                        if ((previous_should_break || i === 0) && next_note) {\n                            // This is the first note (but not the last one), or it is\n                            //  following a secondary break. Draw a partial to the right.\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                        else {\n                            // By default, draw a partial to the left.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                    else if (should_break) {\n                        // This note should have a secondary break after it. Even though\n                        //  we just started a beam, it needs to end immediately.\n                        current_beam.end = current_beam.start - partial_beam_length;\n                        beam_started = false;\n                    }\n                    beam_lines.push(current_beam);\n                }\n            }\n            else {\n                // The current note does not get a beam.\n                beam_started = false;\n            }\n            // Store the secondary break flag to inform the partial beam logic in\n            //  the next iteration of the loop.\n            previous_should_break = should_break;\n        }\n        // Add a partial beam pointing left if this is the last note in the group\n        const last_beam = beam_lines[beam_lines.length - 1];\n        if (last_beam && last_beam.end === undefined) {\n            last_beam.end = last_beam.start - partial_beam_length;\n        }\n        return beam_lines;\n    }\n    /** Render the stems for each note. */\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                const stem_x = note.getStemX();\n                stem.setNoteHeadXBounds(stem_x, stem_x);\n                stem.setContext(ctx).draw();\n            }\n        }, this);\n    }\n    // Render the beam lines\n    drawBeamLines(ctx) {\n        const valid_beam_durations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.render_options.beam_width * this.stem_direction;\n        // Draw the beams.\n        for (let i = 0; i < valid_beam_durations.length; ++i) {\n            const duration = valid_beam_durations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beam_line = beamLines[j];\n                const startBeamX = beam_line.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beam_line.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    ctx.openGroup('beam', this.getAttribute('id'));\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                    ctx.closeGroup();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    /** Pre-format the beam. */\n    preFormat() {\n        return this;\n    }\n    /**\n     * Post-format the beam. This can only be called after\n     * the notes in the beam have both `x` and `y` values. ie: they've\n     * been formatted and have staves.\n     */\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        // Calculate a smart slope if we're not forcing the beams to be flat.\n        if (isTabNote(this.notes[0]) || this.render_options.flat_beams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    /** Render the beam to the canvas context */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (this.unbeamable)\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        this.drawStems(ctx);\n        this.applyStyle();\n        this.drawBeamLines(ctx);\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n// MIT License\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n    constructor(type, size, annotation) {\n        super({ duration: 'b' });\n        this.type = type;\n        this.clef_obj = new Clef(type, size, annotation);\n        this.clef = this.clef_obj.clef;\n        this.glyph = new Glyph(this.clef.code, this.clef.point);\n        this.setWidth(this.glyph.getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return Category.ClefNote;\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef_obj = new Clef(type, size, annotation);\n        this.clef = this.clef_obj.clef;\n        this.glyph = new Glyph(this.clef.code, this.clef.point);\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    /** Get associated clef. */\n    getClef() {\n        return this.clef;\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.glyph.setContext(this.getContext());\n        return this;\n    }\n    /** Get bounding box. */\n    getBoundingBox() {\n        return super.getBoundingBox();\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render clef note. */\n    draw() {\n        var _a;\n        const stave = this.checkStave();\n        if (!this.glyph.getContext()) {\n            this.glyph.setContext(this.getContext());\n        }\n        this.setRendered();\n        const abs_x = this.getAbsoluteX();\n        this.glyph.setStave(stave);\n        this.glyph.setYShift(stave.getYForLine((_a = this.clef.line) !== null && _a !== void 0 ? _a : 0) - stave.getYForGlyphs());\n        this.glyph.renderToStave(abs_x);\n        // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n        if (this.clef_obj.annotation !== undefined) {\n            const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n            if (!attachment.getContext()) {\n                attachment.setContext(this.getContext());\n            }\n            attachment.setStave(stave);\n            attachment.setYShift(stave.getYForLine(this.clef_obj.annotation.line) - stave.getYForGlyphs());\n            attachment.setXShift(this.clef_obj.annotation.x_shift);\n            attachment.renderToStave(abs_x);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('Vex.Flow.Crescendo', args);\n}\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n    const begin_x = params.begin_x;\n    const end_x = params.end_x;\n    const y = params.y;\n    const half_height = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(begin_x, y - half_height);\n        ctx.lineTo(end_x, y);\n        ctx.lineTo(begin_x, y + half_height);\n    }\n    else {\n        ctx.moveTo(end_x, y - half_height);\n        ctx.lineTo(begin_x, y);\n        ctx.lineTo(end_x, y + half_height);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nexport class Crescendo extends Note {\n    // Initialize the crescendo's properties\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.options = {\n            // Extensions to the length of the crescendo on either side\n            extend_left: 0,\n            extend_right: 0,\n            // Vertical shift\n            y_shift: 0,\n        };\n        // Whether the object is a decrescendo\n        this.decrescendo = false;\n        // The staff line to be placed on\n        this.line = noteStruct.line || 0;\n        // The height at the open end of the cresc/decresc\n        this.height = 15;\n    }\n    /** Crescendo category string. */\n    static get CATEGORY() {\n        return Category.Crescendo;\n    }\n    // Set the line to center the element on\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Set the full height at the open end\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    // Set whether the sign should be a descresendo by passing a bool\n    // to `decresc`\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    // Preformat the note\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    // Render the Crescendo object onto the canvas\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tick_context = this.getTickContext();\n        const next_context = TickContext.getNextContext(tick_context);\n        const begin_x = this.getAbsoluteX();\n        const end_x = next_context ? next_context.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n        renderHairpin(ctx, {\n            begin_x: begin_x - this.options.extend_left,\n            end_x: end_x + this.options.extend_right,\n            y: y + this.options.y_shift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    // from: Start note\n    // to: End note\n    // options:\n    //    cps: List of control points\n    //    x_shift: pixels to shift\n    //    y_shift: pixels to shift\n    constructor(from, to, options) {\n        super();\n        this.render_options = Object.assign({ thickness: 2, x_shift: 0, y_shift: 10, position: CurvePosition.NEAR_HEAD, position_end: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ] }, options);\n        this.from = from;\n        this.to = to;\n    }\n    static get CATEGORY() {\n        return Category.Curve;\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        const ctx = this.checkContext();\n        const x_shift = this.render_options.x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        const first_x = params.first_x + x_shift;\n        const first_y = params.first_y + y_shift;\n        const last_x = params.last_x - x_shift;\n        const last_y = params.last_y + y_shift;\n        const thickness = this.render_options.thickness;\n        const cps = this.render_options.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const cp_spacing = (last_x - first_x) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(first_x, first_y);\n        ctx.bezierCurveTo(first_x + cp_spacing + cp0x, first_y + cp0y * params.direction, last_x - cp_spacing + cp1x, last_y + cp1y * params.direction, last_x, last_y);\n        ctx.bezierCurveTo(last_x - cp_spacing + cp1x, last_y + (cp1y + thickness) * params.direction, first_x + cp_spacing + cp0x, first_y + (cp0y + thickness) * params.direction, first_x, first_y);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.from;\n        const last_note = this.to;\n        let first_x;\n        let last_x;\n        let first_y;\n        let last_y;\n        let stem_direction = 0;\n        let metric = 'baseY';\n        let end_metric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.render_options.position);\n        const position_end = getPosition(this.render_options.position_end);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            end_metric = 'topY';\n        }\n        if (position_end === CurvePosition.NEAR_HEAD) {\n            end_metric = 'baseY';\n        }\n        else if (position_end === CurvePosition.NEAR_TOP) {\n            end_metric = 'topY';\n        }\n        if (first_note) {\n            first_x = first_note.getTieRightX();\n            stem_direction = first_note.getStemDirection();\n            first_y = first_note.getStemExtents()[metric];\n        }\n        else {\n            const stave = last_note.checkStave();\n            first_x = stave.getTieStartX();\n            first_y = last_note.getStemExtents()[metric];\n        }\n        if (last_note) {\n            last_x = last_note.getTieLeftX();\n            stem_direction = last_note.getStemDirection();\n            last_y = last_note.getStemExtents()[end_metric];\n        }\n        else {\n            const stave = first_note.checkStave();\n            last_x = stave.getTieEndX();\n            last_y = first_note.getStemExtents()[end_metric];\n        }\n        this.renderCurve({\n            first_x,\n            last_x,\n            first_y,\n            last_y,\n            direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('Vex.Flow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString; // string\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches); // nested array\n}\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n    // For an example of a simple grammar, take a look at tests/parser_tests.ts or\n    // the EasyScore grammar in easyscore.ts.\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Parse `line` using current grammar. Returns `{success: true}` if the\n    // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n    // where `errorPos` is the location of the error in the string.\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Look for `token` in this.line[this.pos], and return success\n    // if one is found. `token` is specified as a regular expression.\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n    // set, then return success even if the token is not found, but reset\n    // the position before exiting.\n    // TODO: expectOne(...) is never called with the `maybe` parameter.\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        // Execute all sub rules in sequence.\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                // If `rule.or` is set, then return success if any one\n                // of the subrules match, else all subrules must match.\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n    // then a failed match is also a success (but the position is reset).\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    // Execute the rule produced by the provided `rules` function. This\n    // offloads to one of the above matchers and consolidates the results. It is also\n    // responsible for executing any code triggered by the rule (in `rule.run`.)\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        // Get rule from Grammar class.\n        // expect(...) handles both lexing & parsing:\n        // - lexer rules produce tokens.\n        // - parser rules produce expressions which may trigger code via the\n        //   { run: () => ... } trigger functions in easyscore.ts.\n        //   These functions build the VexFlow objects that are displayed on screen.\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            // A lexer rule has a `token` property.\n            // Base case: parse the regex and throw an error if the\n            // line doesn't match.\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                // Token match! Update position and throw away parsed portion\n                // of string.\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            // A parser rule has an `expect` property.\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        // If there's a trigger attached to this rule, then run it.\n        // Make the matches accessible through `state.matches` in the\n        // `run: (state) => ...` trigger.\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Articulation } from './articulation';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Music } from './music';\nimport { Parser } from './parser';\nimport { Stem } from './stem';\nimport { defined, log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('Vex.Flow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                // eslint-disable-next-line\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    // notes is an array with 3 entries\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n); // n => [string, string | null, string]\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n        // e.g., auto | up | down\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        // e.g., treble | bass\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        // Create a string[] that will be assigned to the .keys property of the StaveNote.\n        // Each string in the array represents a note pitch and is of the form: {NoteName}{Accidental}/{Octave}\n        // Only standard accidentals are included in the .keys property. Microtonal accidentals are not included.\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const auto_stem = stem === 'auto'; // StaveNoteStruct expects the underscore & lowercase.\n        // Build a GhostNote or StaveNote using the information we gathered.\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) == 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, auto_stem });\n        if (!auto_stem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        // Attach accidentals.\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(accidental, index);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        // Attach dots.\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\n// Used by setClass() below.\nconst commaSeparatedRegex = /\\s*,\\s*/;\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\n/**\n * EasyScore implements a parser for a simple language to generate VexFlow objects.\n */\nexport class EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Set the score defaults.\n     * clef must be set appropriately to avoid errors when adding Staves.\n     * @param defaults.clef default clef ( treble | bass ...) see {@link Clef.types}\n     * @param defaults.time default time signature ( 4/4 | 9/8 ...)\n     * @param defaults.stem default stem arrangement (auto | up | down)\n     * @returns this\n     */\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    /**\n     * @param options.factory is required.\n     * @returns this\n     */\n    setOptions(options) {\n        var _a, _b;\n        // eslint-disable-next-line\n        const factory = options.factory; // ! operator, because options.factory was set in Factory.EasyScore().\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\nimport { StemmableNote } from './stemmablenote';\nimport { Category, isAnnotation } from './typeguard';\nimport { RuntimeError } from './util';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.GhostNote;\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            // Preserve backwards-compatibility\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        // Note properties\n        this.setWidth(0);\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        // Draw Annotations\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (isAnnotation(modifier)) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class GlyphNote extends Note {\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        // Note properties\n        this.ignore_ticks = this.options.ignoreTicks;\n        if (glyph) {\n            this.setGlyph(glyph);\n        }\n    }\n    static get CATEGORY() {\n        return Category.GlyphNote;\n    }\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    getBoundingBox() {\n        return this.glyph.getBoundingBox();\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        // Context is set when setStave is called on Note\n        const glyph = this.glyph;\n        if (!glyph.getContext()) {\n            glyph.setContext(ctx);\n        }\n        glyph.setStave(stave);\n        glyph.setYShift(stave.getYForLine(this.options.line) - stave.getYForGlyphs());\n        const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        glyph.renderToStave(x);\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class GraceNote extends StaveNote {\n    constructor(noteStruct) {\n        super(Object.assign({ glyph_font_scale: Tables.NOTATION_FONT_SCALE * GraceNote.SCALE, stroke_px: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 3;\n    }\n    static get CATEGORY() {\n        return Category.GraceNote;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    static get SCALE() {\n        return 0.66;\n    }\n    getStemExtension() {\n        if (this.stem_extension_override) {\n            return this.stem_extension_override;\n        }\n        const glyph = this.getGlyph();\n        if (glyph) {\n            let ret = super.getStemExtension();\n            if (glyph.stem) {\n                const staveNoteScale = this.getStaveNoteScale();\n                ret = (Stem.HEIGHT + ret) * staveNoteScale - Stem.HEIGHT;\n            }\n            return ret;\n        }\n        return 0;\n    }\n    getStaveNoteScale() {\n        return this.render_options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const staveNoteScale = this.getStaveNoteScale();\n            // some magic numbers are based on the staveNoteScale 0.66.\n            const offsetScale = staveNoteScale / 0.66;\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                // FIXME: should render slash after beam?\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale, 8 * offsetScale, {\n                    stem: 6 * offsetScale,\n                    beam: 5 * offsetScale,\n                });\n            }\n            else {\n                const stem_direction = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteStemHeight = stem.getHeight();\n                let x = this.getAbsoluteX();\n                let y = stem_direction === Stem.DOWN\n                    ? noteHeadBounds.y_top - noteStemHeight\n                    : noteHeadBounds.y_bottom - noteStemHeight;\n                const defaultStemExtention = stem_direction === Stem.DOWN ? this.glyph.stem_down_extension : this.glyph.stem_up_extension;\n                let defaultOffsetY = Tables.STEM_HEIGHT;\n                defaultOffsetY -= defaultOffsetY / 2.8;\n                defaultOffsetY += defaultStemExtention;\n                y += defaultOffsetY * staveNoteScale * stem_direction;\n                const offsets = stem_direction === Stem.UP\n                    ? {\n                        x1: 1,\n                        y1: 0,\n                        x2: 13,\n                        y2: -9,\n                    }\n                    : {\n                        x1: -4,\n                        y1: 1,\n                        x2: 13,\n                        y2: 9,\n                    };\n                x += offsets.x1 * offsetScale;\n                y += offsets.y1 * offsetScale;\n                slashBBox = {\n                    x1: x,\n                    y1: y,\n                    x2: x + offsets.x2 * offsetScale,\n                    y2: y + offsets.y2 * offsetScale,\n                };\n            }\n            // FIXME: avoid staff lines, ledger lines or others.\n            const ctx = this.checkContext();\n            ctx.save();\n            ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.restore();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beam_slope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beam_angle = Math.atan(beam_slope * scaleX);\n        // slash line intersecting point on beam.\n        const iPointOnBeam = {\n            dx: Math.cos(beam_angle) * slashBeamOffset,\n            dy: Math.sin(beam_angle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n        const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n        const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n        const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beam_slope;\n        const ret = {\n            x1: stemX - protrusion_stem_dx,\n            y1: stemY + slashStemOffset - protrusion_stem_dy,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusion_beam_dx,\n            y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n        };\n        return ret;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\nimport { KeySignature } from './keysignature';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class KeySigNote extends Note {\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return Category.KeySigNote;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.draw();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests.\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { defined } from './util';\nlet semibreve_rest;\nfunction get_semibreve_rest() {\n    if (!semibreve_rest) {\n        const noteHead = new NoteHead({ duration: 'w', note_type: 'r' });\n        semibreve_rest = {\n            glyph_font_scale: noteHead.render_options.glyph_font_scale,\n            glyph_code: noteHead.glyph_code,\n            width: noteHead.getWidth(),\n        };\n    }\n    return semibreve_rest;\n}\nexport class MultiMeasureRest extends Element {\n    /**\n     *\n     * @param number_of_measures Number of measures.\n     * @param options The options object.\n     */\n    constructor(number_of_measures, options) {\n        super();\n        this.xs = { left: NaN, right: NaN };\n        this.hasPaddingLeft = false;\n        this.hasPaddingRight = false;\n        this.hasLineThickness = false;\n        this.hasSymbolSpacing = false;\n        this.number_of_measures = number_of_measures;\n        // Keep track of whether these four options were provided.\n        this.hasPaddingLeft = typeof options.padding_left === 'number';\n        this.hasPaddingRight = typeof options.padding_right === 'number';\n        this.hasLineThickness = typeof options.line_thickness === 'number';\n        this.hasSymbolSpacing = typeof options.symbol_spacing === 'number';\n        const musicFont = Tables.currentMusicFont();\n        this.render_options = Object.assign({ use_symbols: false, show_number: true, number_line: -0.5, number_glyph_point: musicFont.lookupMetric('digits.point'), line: 2, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, serif_thickness: 2, semibreve_rest_glyph_scale: Tables.NOTATION_FONT_SCALE, padding_left: 0, padding_right: 0, line_thickness: 5, symbol_spacing: 0 }, options);\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.render_options.number_line += fontLineShift;\n    }\n    static get CATEGORY() {\n        return Category.MultiMeasureRest;\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right, spacingBetweenLines) {\n        const options = this.render_options;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let lineThicknessHalf;\n        if (this.hasLineThickness) {\n            lineThicknessHalf = options.line_thickness * 0.5;\n        }\n        else {\n            lineThicknessHalf = spacingBetweenLines * 0.25;\n        }\n        const serifThickness = options.serif_thickness;\n        const top = y - spacingBetweenLines;\n        const bot = y + spacingBetweenLines;\n        const leftIndented = left + serifThickness;\n        const rightIndented = right - serifThickness;\n        const lineTop = y - lineThicknessHalf;\n        const lineBottom = y + lineThicknessHalf;\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(left, top);\n        ctx.lineTo(leftIndented, top);\n        ctx.lineTo(leftIndented, lineTop);\n        ctx.lineTo(rightIndented, lineTop);\n        ctx.lineTo(rightIndented, top);\n        ctx.lineTo(right, top);\n        ctx.lineTo(right, bot);\n        ctx.lineTo(rightIndented, bot);\n        ctx.lineTo(rightIndented, lineBottom);\n        ctx.lineTo(leftIndented, lineBottom);\n        ctx.lineTo(leftIndented, bot);\n        ctx.lineTo(left, bot);\n        ctx.closePath();\n        ctx.fill();\n    }\n    drawSymbols(stave, ctx, left, right, spacingBetweenLines) {\n        const n4 = Math.floor(this.number_of_measures / 4);\n        const n = this.number_of_measures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.render_options;\n        // FIXME: TODO: invalidate semibreve_rest at the appropriate time\n        // (e.g., if the system font settings are changed).\n        semibreve_rest = undefined;\n        const rest = get_semibreve_rest();\n        const rest_scale = options.semibreve_rest_glyph_scale;\n        const rest_width = rest.width * (rest_scale / rest.glyph_font_scale);\n        const glyphs = {\n            2: {\n                width: rest_width * 0.5,\n                height: spacingBetweenLines,\n            },\n            1: {\n                width: rest_width,\n            },\n        };\n        /* 10: normal spacingBetweenLines */\n        const spacing = this.hasSymbolSpacing ? options.symbol_spacing : 10;\n        const width = n4 * glyphs[2].width + n2 * glyphs[2].width + n1 * glyphs[1].width + (n4 + n2 + n1 - 1) * spacing;\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        const yBottom = stave.getYForLine(line + 1);\n        ctx.save();\n        ctx.setStrokeStyle('none');\n        ctx.setLineWidth(0);\n        for (let i = 0; i < n4; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n2; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n1; ++i) {\n            Glyph.renderGlyph(ctx, x, yTop, rest_scale, rest.glyph_code);\n            x += glyphs[1].width + spacing;\n        }\n        ctx.restore();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        // FIXME: getNoteStartX() returns x + 5(barline width)\n        //        getNoteEndX() returns x + width(no barline width)\n        // See Stave constructor. How do we fix this?\n        // Here, we subtract the barline width.\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.render_options;\n        if (this.hasPaddingLeft) {\n            left = stave.getX() + options.padding_left;\n        }\n        if (this.hasPaddingRight) {\n            right = stave.getX() + stave.getWidth() - options.padding_right;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        const spacingBetweenLines = options.spacing_between_lines_px;\n        if (options.use_symbols) {\n            this.drawSymbols(stave, ctx, left, right, spacingBetweenLines);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right, spacingBetweenLines);\n        }\n        if (options.show_number) {\n            const timeSpec = '/' + this.number_of_measures;\n            const timeSig = new TimeSignature(timeSpec, 0, false);\n            timeSig.point = options.number_glyph_point;\n            timeSig.setTimeSig(timeSpec);\n            timeSig.setStave(stave);\n            timeSig.setX(left + (right - left) * 0.5 - timeSig.getInfo().glyph.getMetrics().width * 0.5);\n            timeSig.bottomLine = options.number_line;\n            timeSig.setContext(ctx).draw();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('Vex.Flow.PedalMarking', args);\n}\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name, context, x, y, point) {\n    const glyph_data = PedalMarking.GLYPHS[name];\n    const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n    glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nexport class PedalMarking extends Element {\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        // Custom text for the release/depress markings\n        this.custom_depress_text = '';\n        this.custom_release_text = '';\n        this.resetFont();\n        this.render_options = {\n            bracket_height: 10,\n            text_margin_right: 6,\n            bracket_line_width: 1,\n            color: 'black',\n        };\n    }\n    static get CATEGORY() {\n        return Category.PedalMarking;\n    }\n    /**\n     * Create a sustain pedal marking. Returns the defaults PedalMarking.\n     * Which uses the traditional \"Ped\" and \"*\"\" markings.\n     */\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    /** Create a sostenuto pedal marking */\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    /** Create an una corda pedal marking */\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    /** Set pedal type. */\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    /**\n     * Set custom text for the `depress`/`release` pedal markings. No text is\n     * set if the parameter is falsy.\n     */\n    setCustomText(depress, release) {\n        this.custom_depress_text = depress || '';\n        this.custom_release_text = release || '';\n        return this;\n    }\n    /** Set the staff line to render the markings on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Draw the bracket based pedal markings. */\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        let prev_x;\n        let prev_y;\n        // Iterate through each note\n        this.notes.forEach((note, index, notes) => {\n            // Each note triggers the opposite pedal action\n            is_pedal_depressed = !is_pedal_depressed;\n            // Get the initial coordinates for the note\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            // Throw if current note is positioned before the previous note\n            if (x < prev_x) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            // Determine if the previous or next note are the same\n            // as the current note. We need to keep track of this for\n            // when adjustments are made for the release+depress action\n            const next_is_same = notes[index + 1] === note;\n            const prev_is_same = notes[index - 1] === note;\n            let x_shift = 0;\n            const point = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n            if (is_pedal_depressed) {\n                // Adjustment for release+depress\n                x_shift = prev_is_same ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n                    // For MIXED style, start with text instead of bracket\n                    if (this.custom_depress_text) {\n                        // If we have custom text, use instead of the default \"Ped\" glyph\n                        const text_width = ctx.measureText(this.custom_depress_text).width;\n                        ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                        x_shift = text_width / 2 + this.render_options.text_margin_right;\n                    }\n                    else {\n                        // Render the Ped glyph in position\n                        drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                        x_shift = 20 + this.render_options.text_margin_right;\n                    }\n                }\n                else {\n                    // Draw start bracket\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.render_options.bracket_height);\n                    ctx.lineTo(x + x_shift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                // Adjustment for release+depress\n                x_shift = next_is_same ? -5 : 0;\n                // Draw end bracket\n                ctx.beginPath();\n                ctx.moveTo(prev_x, prev_y);\n                ctx.lineTo(x + x_shift, y);\n                ctx.lineTo(x, y - this.render_options.bracket_height);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            // Store previous coordinates\n            prev_x = x + x_shift;\n            prev_y = y;\n        });\n    }\n    /**\n     * Draw the text based pedal markings. This defaults to the traditional\n     * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n     */\n    drawText() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        // Iterate through each note, placing glyphs or custom text accordingly\n        this.notes.forEach((note) => {\n            is_pedal_depressed = !is_pedal_depressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            const point = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n            let text_width = 0;\n            if (is_pedal_depressed) {\n                if (this.custom_depress_text) {\n                    text_width = ctx.measureText(this.custom_depress_text).width;\n                    ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                }\n            }\n            else {\n                if (this.custom_release_text) {\n                    text_width = ctx.measureText(this.custom_release_text).width;\n                    ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_release', ctx, x, y, point);\n                }\n            }\n        });\n    }\n    /** Render the pedal marking in position on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setStrokeStyle(this.render_options.color);\n        ctx.setFillStyle(this.render_options.color);\n        ctx.setFont(this.textFont);\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.render_options.bracket_line_width);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\nPedalMarking.DEBUG = false;\nPedalMarking.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n/** Glyph data */\nPedalMarking.GLYPHS = {\n    pedal_depress: {\n        code: 'keyboardPedalPed',\n        x_shift: -10,\n        y_shift: 0,\n    },\n    pedal_release: {\n        code: 'keyboardPedalUp',\n        x_shift: -2,\n        y_shift: 3,\n    },\n};\n/** Pedal type as number. */\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\n/** Pedal type as string. */\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n// Map `type` to SMuFL glyph code.\nconst CODES = {\n    '1': 'repeat1Bar',\n    '2': 'repeat2Bars',\n    '4': 'repeat4Bars',\n    slash: 'repeatBarSlash',\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return Category.RepeatNote;\n    }\n    constructor(type, noteStruct, options) {\n        super(undefined, Object.assign({ duration: 'q', align_center: type !== 'slash' }, noteStruct), options);\n        const glyphCode = CODES[type] || 'repeat1Bar';\n        const glyph = new Glyph(glyphCode, Tables.currentMusicFont().lookupMetric('repeatNote.point', 40), {\n            category: 'repeatNote',\n        });\n        this.setGlyph(glyph);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { TextJustification } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nexport class StaveLine extends Element {\n    // Initialize the StaveLine with the given `notes`.\n    //\n    // `notes` is a struct that has:\n    //\n    //  ```\n    //  {\n    //    first_note: Note,\n    //    last_note: Note,\n    //    first_indices: [n1, n2, n3],\n    //    last_indices: [n1, n2, n3]\n    //  }\n    //  ```\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.resetFont();\n        this.render_options = {\n            // Space to add to the left or the right\n            padding_left: 4,\n            padding_right: 3,\n            // The width of the line in pixels\n            line_width: 1,\n            // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n            line_dash: undefined,\n            // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n            rounded_end: true,\n            // The color of the line and arrowheads\n            color: undefined,\n            // Flags to draw arrows on each end of the line\n            draw_start_arrow: false,\n            draw_end_arrow: false,\n            // The length of the arrowhead sides\n            arrowhead_length: 10,\n            // The angle of the arrowhead\n            arrowhead_angle: Math.PI / 8,\n            // The position of the text\n            text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n            text_justification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    static get CATEGORY() {\n        return Category.StaveLine;\n    }\n    // The the annotation for the `StaveLine`\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    // Set the notes for the `StaveLine`\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices)\n            notes.first_indices = [0];\n        if (!notes.last_indices)\n            notes.last_indices = [0];\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indices.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.first_indices = notes.first_indices;\n        this.last_note = notes.last_note;\n        this.last_indices = notes.last_indices;\n        return this;\n    }\n    // Apply the style of the `StaveLine` to the context\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const render_options = this.render_options;\n        if (render_options.line_dash) {\n            ctx.setLineDash(render_options.line_dash);\n        }\n        if (render_options.line_width) {\n            ctx.setLineWidth(render_options.line_width);\n        }\n        if (render_options.rounded_end) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    // Apply the text styling to the context\n    applyFontStyle() {\n        const ctx = this.checkContext();\n        ctx.setFont(this.textFont);\n        const render_options = this.render_options;\n        const color = render_options.color;\n        if (color) {\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n        }\n    }\n    // Helper function to draw a line with arrow heads\n    drawArrowLine(ctx, pt1, pt2) {\n        const both_arrows = this.render_options.draw_start_arrow && this.render_options.draw_end_arrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        // For ends with arrow we actually want to stop before we get to the arrow\n        // so that wide lines won't put a flat end on the arrow.\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.render_options.arrowhead_length / 3) / distance;\n        let end_x;\n        let end_y;\n        let start_x;\n        let start_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            end_x = Math.round(x1 + (x2 - x1) * ratio);\n            end_y = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            end_x = x2;\n            end_y = y2;\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            start_x = x1 + (x2 - x1) * (1 - ratio);\n            start_y = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            start_x = x1;\n            start_y = y1;\n        }\n        if (this.render_options.color) {\n            ctx.setStrokeStyle(this.render_options.color);\n            ctx.setFillStyle(this.render_options.color);\n        }\n        // Draw the shaft of the arrow\n        ctx.beginPath();\n        ctx.moveTo(start_x, start_y);\n        ctx.lineTo(end_x, end_y);\n        ctx.stroke();\n        ctx.closePath();\n        // calculate the angle of the line\n        const line_angle = Math.atan2(y2 - y1, x2 - x1);\n        // h is the line length of a side of the arrow head\n        const h = Math.abs(this.render_options.arrowhead_length / Math.cos(this.render_options.arrowhead_angle));\n        let angle1;\n        let angle2;\n        let top_x;\n        let top_y;\n        let bottom_x;\n        let bottom_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            angle1 = line_angle + Math.PI + this.render_options.arrowhead_angle;\n            top_x = x2 + Math.cos(angle1) * h;\n            top_y = y2 + Math.sin(angle1) * h;\n            angle2 = line_angle + Math.PI - this.render_options.arrowhead_angle;\n            bottom_x = x2 + Math.cos(angle2) * h;\n            bottom_y = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            angle1 = line_angle + this.render_options.arrowhead_angle;\n            top_x = x1 + Math.cos(angle1) * h;\n            top_y = y1 + Math.sin(angle1) * h;\n            angle2 = line_angle - this.render_options.arrowhead_angle;\n            bottom_x = x1 + Math.cos(angle2) * h;\n            bottom_y = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n        }\n    }\n    // Renders the `StaveLine` on the context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const first_note = this.first_note;\n        const last_note = this.last_note;\n        const render_options = this.render_options;\n        ctx.save();\n        this.applyLineStyle();\n        // Cycle through each set of indices and draw lines\n        let start_position = { x: 0, y: 0 };\n        let end_position = { x: 0, y: 0 };\n        this.first_indices.forEach((first_index, i) => {\n            const last_index = this.last_indices[i];\n            // Get initial coordinates for the start/end of the line\n            start_position = first_note.getModifierStartXY(2, first_index);\n            end_position = last_note.getModifierStartXY(1, last_index);\n            const upwards_slope = start_position.y > end_position.y;\n            // Adjust `x` coordinates for modifiers\n            start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n            end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n            // Adjust first `x` coordinates for displacements\n            const notehead_width = first_note.getGlyph().getWidth();\n            const first_displaced = first_note.getKeyProps()[first_index].displaced;\n            if (first_displaced && first_note.getStemDirection() === 1) {\n                start_position.x += notehead_width + render_options.padding_left;\n            }\n            // Adjust last `x` coordinates for displacements\n            const last_displaced = last_note.getKeyProps()[last_index].displaced;\n            if (last_displaced && last_note.getStemDirection() === -1) {\n                end_position.x -= notehead_width + render_options.padding_right;\n            }\n            // Adjust y position better if it's not coming from the center of the note\n            start_position.y += upwards_slope ? -3 : 1;\n            end_position.y += upwards_slope ? 2 : 0;\n            this.drawArrowLine(ctx, start_position, end_position);\n        });\n        ctx.restore();\n        // Determine the x coordinate where to start the text\n        const text_width = ctx.measureText(this.text).width;\n        const justification = render_options.text_justification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = start_position.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const delta_x = end_position.x - start_position.x;\n            const center_x = delta_x / 2 + start_position.x;\n            x = center_x - text_width / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = end_position.x - text_width;\n        }\n        // Determine the y value to start the text\n        let y = 0;\n        const vertical_position = render_options.text_position_vertical;\n        if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n            y = first_note.checkStave().getYForTopText();\n        }\n        else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = first_note.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        // Draw the text\n        ctx.save();\n        this.applyFontStyle();\n        ctx.fillText(this.text, x, y);\n        ctx.restore();\n        return this;\n    }\n}\n/** Default text font. */\nStaveLine.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n// Text Positioning\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = TextJustification;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.parts = [];\n    }\n    static get CATEGORY() {\n        return Category.System;\n    }\n    /** Set formatting options. */\n    setOptions(options = {}) {\n        if (!options.factory) {\n            throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n        }\n        this.factory = options.factory;\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    /**\n     * Add connector between staves.\n     * @param type see {@link StaveConnector.typeString}\n     */\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            top_stave: this.parts[0].stave,\n            bottom_stave: this.parts[this.parts.length - 1].stave,\n            type,\n        });\n        return this.connector;\n    }\n    /**\n     * Add a stave to the system.\n     *\n     * Example (one voice):\n     *\n     * `system.addStave({voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]});`\n     *\n     * Example (two voices):\n     *\n     * `system.addStave({voices: [`\n     *   `score.voice(score.notes('C#5/q, B4, A4, G#4', {stem: 'up'})),`\n     *   `score.voice(score.notes('C#4/h, C#4', {stem: 'down'}))`\n     * `]});`\n     */\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ left_bar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ stave, \n            /* voices: [], */\n            spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => voice\n            .setContext(ctx)\n            .setStave(stave)\n            .getTickables()\n            .forEach((tickable) => tickable.setStave(stave)));\n        this.parts.push(p);\n        return stave;\n    }\n    /** Format the system. */\n    format() {\n        const options_details = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(options_details);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        let allVoices = [];\n        let allStaves = [];\n        const debugNoteMetricsYs = [];\n        // Join the voices for each stave.\n        this.parts.forEach((part) => {\n            y = y + part.stave.space(part.spaceAbove);\n            part.stave.setY(y);\n            formatter.joinVoices(part.voices);\n            y = y + part.stave.space(part.spaceBelow);\n            y = y + part.stave.space(this.options.spaceBetweenStaves);\n            if (part.debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n                y += 15;\n            }\n            allVoices = allVoices.concat(part.voices);\n            allStaves = allStaves.concat(part.stave);\n            startX = Math.max(startX, part.stave.getNoteStartX());\n        });\n        // Update the start position of all staves.\n        this.parts.forEach((part) => part.stave.setNoteStartX(startX));\n        if (this.options.autoWidth) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(allVoices);\n            this.parts.forEach((part) => {\n                part.stave.setWidth(justifyWidth + Stave.rightPadding + (startX - this.options.x));\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - (startX - this.options.x)\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        formatter.format(allVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        formatter.postFormat();\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(options_details);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        this.boundingBox = new BoundingBox(this.options.x, this.options.y, this.options.width, this.lastY - this.options.y);\n        Stave.formatBegModifiers(allStaves);\n    }\n    /** Render the system. */\n    draw() {\n        // Render debugging information, if requested.\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            d.voice.getTickables().forEach((tickable) => Note.plotMetrics(ctx, tickable, d.y));\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isDot } from './typeguard';\nimport { defined, RuntimeError } from './util';\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n    const stem_through = [];\n    let group = [];\n    for (let string = 1; string <= num_lines; string++) {\n        const is_used = strings_used.indexOf(string) > -1;\n        if (!is_used) {\n            group.push(string);\n        }\n        else {\n            stem_through.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stem_through.push(group);\n    return stem_through;\n}\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n    const up_stem = stem_direction !== 1;\n    const down_stem = stem_direction !== -1;\n    const line_spacing = stave.getSpacingBetweenLines();\n    const total_lines = stave.getNumLines();\n    const stem_lines = [];\n    unused_strings.forEach((strings) => {\n        const containsLastString = strings.indexOf(total_lines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((up_stem && containsFirstString) || (down_stem && containsLastString)) {\n            return;\n        }\n        // If there's only one string in the group, push a duplicate value.\n        // We do this because we need 2 strings to convert into upper/lower y\n        // values.\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const line_ys = [];\n        // Iterate through each group string and store it's y position\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === total_lines;\n            // Get the y value for the appropriate staff line,\n            // we adjust for a 0 index array, since string numbers are index 1\n            let y = stave.getYForLine(string - 1);\n            // Unless the string is the first or last, add padding to each side\n            // of the line\n            if (index === 0 && !isTopBound) {\n                y -= line_spacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += line_spacing / 2 - 1;\n            }\n            // Store the y value\n            line_ys.push(y);\n            // Store a subsequent y value connecting this group to the main\n            // stem above/below the stave if it's the top/bottom string\n            if (stem_direction === 1 && isTopBound) {\n                line_ys.push(stem_y - 2);\n            }\n            else if (stem_direction === -1 && isBottomBound) {\n                line_ys.push(stem_y + 2);\n            }\n        });\n        // Add the sorted y values to the\n        stem_lines.push(line_ys.sort((a, b) => a - b));\n    });\n    return stem_lines;\n}\nexport class TabNote extends StemmableNote {\n    // Initialize the TabNote with a `noteStruct` full of properties\n    // and whether to `draw_stem` when rendering the note\n    constructor(noteStruct, draw_stem = false) {\n        super(noteStruct);\n        this.glyphs = [];\n        // Return the number of the greatest string, which is the string lowest on the display\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        // Return the number of the least string, which is the string highest on the display\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false; // Renders parenthesis around notes\n        // Note properties\n        // The fret positions in the note. An array of `{ str: X, fret: X }`\n        this.positions = noteStruct.positions || [];\n        // Render Options\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: Tables.TABLATURE_FONT_SCALE, \n            // Flag to draw a stem\n            draw_stem, \n            // Flag to draw dot modifiers\n            draw_dots: draw_stem, \n            // Flag to extend the main stem through the stave and fret positions\n            draw_stem_through_stave: false, \n            // vertical shift from stave line\n            y_shift: 0, \n            // normal glyph scale\n            scale: 1.0, \n            // default tablature font\n            font: `${Font.SIZE}pt ${Font.SANS_SERIF}` });\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stem_direction) {\n            this.setStemDirection(noteStruct.stem_direction);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        // Renders parenthesis around notes\n        this.ghost = false;\n        this.updateWidth();\n    }\n    static get CATEGORY() {\n        return Category.TabNote;\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n    // Often used for indicating frets that are being bent to\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    // Determine if the note has a stem\n    hasStem() {\n        if (this.render_options.draw_stem)\n            return true;\n        return false;\n    }\n    // Get the default stem extension for the note\n    getStemExtension() {\n        const glyph = this.getGlyph();\n        if (this.stem_extension_override != null) {\n            return this.stem_extension_override;\n        }\n        if (glyph) {\n            return this.getStemDirection() === Stem.UP ? glyph.tabnote_stem_up_extension : glyph.tabnote_stem_down_extension;\n        }\n        return 0;\n    }\n    // Calculate and store the width of the note\n    updateWidth() {\n        this.glyphs = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const glyph = Tables.tabToGlyph(fret.toString(), this.render_options.scale);\n            this.glyphs.push(glyph);\n            this.width = Math.max(glyph.getWidth(), this.width);\n        }\n        // For some reason we associate a notehead glyph with a TabNote, and this\n        // glyph is used for certain width calculations. Of course, this is totally\n        // incorrect since a notehead is a poor approximation for the dimensions of\n        // a fret number which can have multiple digits. As a result, we must\n        // overwrite getWidth() to return the correct width\n        this.glyph.getWidth = () => this.width;\n    }\n    // Set the `stave` to the note\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        // Calculate the fret number width based on font used\n        if (ctx) {\n            this.width = 0;\n            for (let i = 0; i < this.glyphs.length; ++i) {\n                const glyph = this.glyphs[i];\n                const text = '' + glyph.text;\n                if (text.toUpperCase() !== 'X') {\n                    ctx.save();\n                    ctx.setFont(this.render_options.font);\n                    glyph.width = ctx.measureText(text).width;\n                    ctx.restore();\n                    glyph.getWidth = () => glyph.width;\n                }\n                this.width = Math.max(glyph.getWidth(), this.width);\n            }\n            this.glyph.getWidth = () => this.width;\n        }\n        // we subtract 1 from `line` because getYForLine expects a 0-based index,\n        // while the position.str is a 1-based index\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    // Get the fret positions for the note\n    getPositions() {\n        return this.positions;\n    }\n    // Get the default `x` and `y` coordinates for a modifier at a specific\n    // `position` at a fret position `index`\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const note_glyph_width = this.glyph.getWidth();\n            x = note_glyph_width / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Get the default line for rest\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        // width is already set during init()\n        this.preFormatted = true;\n    }\n    // Get the x position for the stem\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    // Get the y position for the stem\n    getStemY() {\n        const num_lines = this.checkStave().getNumLines();\n        // The decimal staff line amounts provide optimal spacing between the\n        // fret number and the stem\n        const stemUpLine = -0.5;\n        const stemDownLine = num_lines - 0.5;\n        const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    // Get the stem extents for the tabnote\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    // Draw the fal onto the context\n    drawFlag() {\n        var _a;\n        const { beam, glyph, render_options: { draw_stem }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam == undefined && draw_stem;\n        // Now it's the flag's turn.\n        if (glyph.flag && shouldDrawFlag) {\n            const flag_x = this.getStemX();\n            const flag_y = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() - (this.glyph ? this.glyph.stem_down_extension : 0)\n                : // Up stems are above the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() + (this.glyph ? this.glyph.stem_up_extension : 0);\n            // Draw the Flag\n            //this.flag?.setOptions({ category: 'flag.tabStem' });\n            (_a = this.flag) === null || _a === void 0 ? void 0 : _a.render(context, flag_x, flag_y);\n            //Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, { category: 'flag.tabStem' });\n        }\n    }\n    // Render the modifiers onto the context.\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            // Only draw the dots if enabled.\n            if (isDot(modifier) && !this.render_options.draw_dots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    // Render the stem extension through the fret positions\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.render_options.draw_stem;\n        const stemThrough = this.render_options.draw_stem_through_stave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.save();\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n            ctx.restore();\n        }\n    }\n    // Render the fret positions onto the context\n    drawPositions() {\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.render_options.y_shift;\n            const glyph = this.glyphs[i];\n            // Center the fret text beneath the notation note head\n            const note_glyph_width = this.glyph.getWidth();\n            const tab_x = x + note_glyph_width / 2 - glyph.getWidth() / 2;\n            // FIXME: Magic numbers.\n            ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n            if (glyph.code) {\n                Glyph.renderGlyph(ctx, tab_x, y, this.render_options.glyph_font_scale * this.render_options.scale, glyph.code);\n            }\n            else {\n                ctx.save();\n                ctx.setFont(this.render_options.font);\n                const text = glyph.text.toString();\n                ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n                ctx.restore();\n            }\n        }\n    }\n    // The main rendering function for the entire note.\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const render_stem = this.beam == undefined && this.render_options.draw_stem;\n        ctx.openGroup('tabnote', this.getAttribute('id'), { pointerBBox: true });\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && render_stem) {\n            const stem_x = this.getStemX();\n            this.stem.setNoteHeadXBounds(stem_x, stem_x);\n            this.stem.setContext(ctx).draw();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return Category.TabStave;\n    }\n    constructor(x, y, width, options) {\n        const tab_options = Object.assign({ spacing_between_lines_px: 13, num_lines: 6, top_text_position: 1 }, options);\n        super(x, y, width, tab_options);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    // Deprecated\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// This file implements `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Renderer } from './renderer';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nexport class TextBracket extends Element {\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.text = text;\n        this.superscript = superscript;\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.resetFont();\n        this.render_options = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            line_width: 1,\n            show_bracket: true,\n            bracket_height: 8,\n            // In the BOTTOM position, the bracket line can extend\n            // under the superscript.\n            underline_superscript: true,\n        };\n    }\n    static get CATEGORY() {\n        return Category.TextBracket;\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    /**\n     * @deprecated Use `TextBracket.Position` instead.\n     */\n    static get Positions() {\n        L('Positions is deprecated, use TextBracketPosition instead.');\n        return TextBracketPosition;\n    }\n    /**\n     * @deprecated Use `TextBracket.PositionString` instead.\n     */\n    static get PositionsString() {\n        L('PositionsString is deprecated, use PositionString instead.');\n        return TextBracket.PositionString;\n    }\n    /**\n     * Apply the text backet styling to the provided context.\n     * @param ctx\n     * @returns this\n     */\n    applyStyle(ctx) {\n        ctx.setFont(this.font);\n        const options = this.render_options;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.line_width);\n        return this;\n    }\n    // Set whether the bracket line should be `dashed`. You can also\n    // optionally set the `dash` pattern by passing in an array of numbers\n    setDashed(dashed, dash) {\n        this.render_options.dashed = dashed;\n        if (dash)\n            this.render_options.dash = dash;\n        return this;\n    }\n    // Set the rendering `context` for the octave bracket\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Draw the octave bracket on the rendering context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        // Get the preliminary start and stop coordintates for the bracket\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracket_height = this.render_options.bracket_height * this.position;\n        ctx.save();\n        this.applyStyle(ctx);\n        // Draw text\n        ctx.fillText(this.text, start.x, start.y);\n        // Get the width and height for the octave number\n        const main_measure = ctx.measureText(this.text);\n        const main_width = main_measure.width;\n        const main_height = main_measure.height;\n        // Calculate the y position for the super script\n        const super_y = start.y - main_height / 2.5;\n        // We called this.resetFont() in the constructor, so we know this.textFont is available.\n        // eslint-disable-next-line\n        const { family, size, weight, style } = this.textFont;\n        // To draw the superscript, we scale the font size by 1/1.4.\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n        // Determine width and height of the superscript\n        const super_measure = ctx.measureText(this.superscript);\n        const super_width = super_measure.width;\n        const super_height = super_measure.height;\n        // Setup initial coordinates for the bracket line\n        let start_x = start.x;\n        let line_y = super_y;\n        const end_x = stop.x + this.stop.getGlyph().getWidth();\n        // Adjust x and y coordinates based on position\n        if (this.position === TextBracketPosition.TOP) {\n            start_x += main_width + super_width + 5;\n            line_y -= super_height / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            line_y += super_height / 2.7;\n            start_x += main_width + 2;\n            if (!this.render_options.underline_superscript) {\n                start_x += super_width;\n            }\n        }\n        if (this.render_options.dashed) {\n            // Main line\n            Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n            // Ending Bracket\n            if (this.render_options.show_bracket) {\n                Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(start_x, line_y);\n            // Main line\n            ctx.lineTo(end_x, line_y);\n            if (this.render_options.show_bracket) {\n                // Ending bracket\n                ctx.lineTo(end_x, line_y + bracket_height);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n}\nTextBracket.DEBUG = false;\nTextBracket.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 15,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('Vex.Flow.TextDynamics', args);\n}\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nexport class TextDynamics extends Note {\n    /**\n     * Create the dynamics marking.\n     *\n     * A `TextDynamics` object inherits from `Note` so that it can be formatted\n     * within a `Voice`.\n     *\n     * @param noteStruct an object that contains a `duration` property and a\n     * `sequence` of letters that represents the letters to render.\n     */\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.sequence = (noteStruct.text || '').toLowerCase();\n        this.line = noteStruct.line || 0;\n        this.glyphs = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { glyph_font_size: 40 });\n        L('New Dynamics Text: ', this.sequence);\n    }\n    static get CATEGORY() {\n        return Category.TextDynamics;\n    }\n    /** The glyph data for each dynamics letter. */\n    static get GLYPHS() {\n        return {\n            f: {\n                code: 'dynamicForte',\n                width: 12,\n            },\n            p: {\n                code: 'dynamicPiano',\n                width: 14,\n            },\n            m: {\n                code: 'dynamicMezzo',\n                width: 17,\n            },\n            s: {\n                code: 'dynamicSforzando',\n                width: 10,\n            },\n            z: {\n                code: 'dynamicZ',\n                width: 12,\n            },\n            r: {\n                code: 'dynamicRinforzando',\n                width: 12,\n            },\n        };\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Preformat the dynamics text. */\n    preFormat() {\n        let total_width = 0;\n        // length of this.glyphs must be <=\n        // length of this.sequence, so if we're formatted before\n        // create new glyphs.\n        this.glyphs = [];\n        // Iterate through each letter\n        this.sequence.split('').forEach((letter) => {\n            // Get the glyph data for the letter\n            const glyph_data = TextDynamics.GLYPHS[letter];\n            if (!glyph_data)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            const size = defined(this.render_options.glyph_font_size);\n            const glyph = new Glyph(glyph_data.code, size, { category: 'textNote' });\n            // Add the glyph\n            this.glyphs.push(glyph);\n            total_width += glyph_data.width;\n        });\n        // Store the width of the text\n        this.setWidth(total_width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the dynamics text on the rendering context. */\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        let letter_x = x;\n        this.glyphs.forEach((glyph, index) => {\n            const current_letter = this.sequence[index];\n            glyph.render(this.checkContext(), letter_x, y);\n            letter_x += TextDynamics.GLYPHS[current_letter].width;\n        });\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\nTextDynamics.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nimport { Category } from './typeguard';\nexport class TimeSigNote extends Note {\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        const timeSignature = new TimeSignature(timeSpec, customPadding);\n        this.timeSigInfo = timeSignature.getInfo();\n        this.setWidth(this.timeSigInfo.glyph.getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return Category.TimeSigNote;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (!this.timeSigInfo.glyph.getContext()) {\n            this.timeSigInfo.glyph.setContext(ctx);\n        }\n        this.timeSigInfo.glyph.setStave(stave);\n        this.timeSigInfo.glyph.setYShift(stave.getYForLine(2) - stave.getYForGlyphs());\n        this.timeSigInfo.glyph.renderToStave(this.getAbsoluteX());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { log } from './util';\nimport { Vibrato } from './vibrato';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('Vex.Flow.VibratoBracket', args);\n}\n/** `VibratoBracket` renders vibrato effect between two notes. */\nexport class VibratoBracket extends Element {\n    /**\n     * Either the stop or start note must be set, or both of them.\n     * An undefined value for the start or stop note indicates that the vibrato\n     * is drawn from the beginning or until the end of the stave accordingly.\n     */\n    constructor(bracket_data) {\n        super();\n        if (bracket_data.start)\n            this.start = bracket_data.start;\n        if (bracket_data.stop)\n            this.stop = bracket_data.stop;\n        this.line = 1;\n        this.render_options = {\n            harsh: false,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n            vibrato_width: 0,\n        };\n    }\n    static get CATEGORY() {\n        return Category.VibratoBracket;\n    }\n    /** Set line position of the vibrato bracket. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Set harsh vibrato bracket. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Draw the vibrato bracket on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        // If start note is not set then vibrato will be drawn\n        // from the beginning of the stave\n        const start_x = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        // If stop note is not set then vibrato will be drawn\n        // until the end of the stave\n        const stop_x = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.render_options.vibrato_width = stop_x - start_x;\n        L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n        Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\nVibratoBracket.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { ChordSymbol } from './chordsymbol';\nimport { ClefNote } from './clefnote';\nimport { Curve } from './curve';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { KeySigNote } from './keysignote';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StringNumber } from './stringnumber';\nimport { System } from './system';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSigNote } from './timesignote';\nimport { Tuplet } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nimport { isHTMLCanvas } from './web';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('Vex.Flow.Factory', args);\n}\n/**\n * Factory implements a high level API around VexFlow.\n */\nexport class Factory {\n    /**\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});`\n     */\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n            font: Factory.TEXT_FONT,\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Static simplified function to access constructor without providing FactoryOptions\n     *\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = Vex.Flow.Factory.newFromElementId('boo', 1200, 600 );`\n     */\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined; // current stave\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId == null) {\n            return;\n        }\n        if (elementId == '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            // We use a custom type check here, because node-canvas mimics canvas,\n            // but is not an instance of window.HTMLCanvasElement.\n            // In fact, `window` might be undefined here.\n            // See: https://www.npmjs.com/package/canvas\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    /** Return pixels from current stave spacing. */\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center', kerning: true, reportWidth: true }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        chordSymbol.setEnableKerning(p.kerning);\n        chordSymbol.setReportWidth(p.reportWidth);\n        // There is a default font based on the engraving font.  Only set then\n        // font if it is specific, else use the default\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        const p = Object.assign({ type: 'a.', position: 'above' }, params);\n        const articulation = new Articulation(p.type);\n        articulation.setPosition(p.position);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    Ornament(type, params) {\n        const options = Object.assign({ type, position: 0, accidental: '' }, params);\n        const ornament = new Ornament(type);\n        ornament.setPosition(options.position);\n        if (options.upperAccidental) {\n            ornament.setUpperAccidental(options.upperAccidental);\n        }\n        if (options.lowerAccidental) {\n            ornament.setLowerAccidental(options.lowerAccidental);\n        }\n        if (typeof options.delayed !== 'undefined') {\n            ornament.setDelayed(options.delayed);\n        }\n        ornament.setContext(this.context);\n        return ornament;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params, drawCircle = true) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        stringNumber.setDrawCircle(drawCircle);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.number_of_measures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.harsh)\n            vibratoBracket.setHarsh(params.options.harsh);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    /**\n     * Creates EasyScore. Normally the first step after constructing a Factory. For example:\n     * ```\n     * const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});\n     * const score: EasyScore = vf.EasyScore();\n     * ```\n     * @param options.factory optional instance of Factory\n     * @param options.builder instance of Builder\n     * @param options.commitHooks function to call after a note element is created\n     * @param options.throwOnError throw error in case of parsing error\n     */\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    /** Render the score. */\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).draw());\n        this.voices.forEach((v) => v.setContext(ctx).draw());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).draw();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).draw());\n        this.reset();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`. */\nFactory.DEBUG = false;\n/** Default text font. */\nFactory.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { TabNote } from './tabnote';\nimport { Category } from './typeguard';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return Category.GraceTabNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // vertical shift from stave line\n            y_shift: 0.3, \n            // grace glyph scale\n            scale: 0.6, \n            // grace tablature font\n            font: `7.5pt ${Font.SANS_SERIF}` });\n        this.updateWidth();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\nimport { Music } from './music';\nimport { RuntimeError } from './util';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const is_supported_type = Music.scaleTypes[this.keyParts.type];\n        if (!is_supported_type) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.root_indices[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        // First look for matching note in our altered scale\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in our altered scale\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote != null) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in the original scale\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote != null) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        // Then try to unmodify a currently modified note.\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        // Last resort -- shitshoot\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Author: Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either crescendo or decrescendo.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveHairpin extends Element {\n    /**\n     * Create a new hairpin from the specified notes.\n     *\n     * @param {!Object} notes The notes to tie up.\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     * @param {!Object} type The type of hairpin\n     */\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.render_options = {\n            height: 10,\n            y_shift: 0,\n            left_shift_px: 0,\n            right_shift_px: 0,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n    }\n    static get CATEGORY() {\n        return Category.StaveHairpin;\n    }\n    /* Helper function to convert ticks into pixels.\n     * Requires a Formatter with voices joined and formatted (to\n     * get pixels per tick)\n     *\n     * options is struct that has:\n     *\n     *  {\n     *   height: px,\n     *   y_shift: px,         // vertical offset\n     *   left_shift_ticks: 0, // left horizontal offset expressed in ticks\n     *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n     *  }\n     *\n     **/\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt == null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const l_shift_px = ppt * ((_a = options.left_shift_ticks) !== null && _a !== void 0 ? _a : 0);\n        const r_shift_px = ppt * ((_b = options.right_shift_ticks) !== null && _b !== void 0 ? _b : 0);\n        const hairpin_options = {\n            height: options.height,\n            y_shift: options.y_shift,\n            left_shift_px: l_shift_px,\n            right_shift_px: r_shift_px,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n        new StaveHairpin({\n            first_note: notes.first_note,\n            last_note: notes.last_note,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpin_options)\n            .setPosition(position)\n            .draw();\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        if (options.height != null &&\n            options.y_shift != null &&\n            options.left_shift_px != null &&\n            options.right_shift_px != null) {\n            this.render_options = options;\n        }\n        return this;\n    }\n    /**\n     * Set the notes to attach this hairpin to.\n     *\n     * @param {!Object} notes The start and end notes.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.last_note = notes.last_note;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.render_options.y_shift + 20;\n        let y_shift = params.first_y;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            y_shift = params.first_y - params.staff_height;\n        }\n        const l_shift = this.render_options.left_shift_px;\n        const r_shift = this.render_options.right_shift_px;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.first_note;\n        const lastNote = this.last_note;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            first_x: start.x,\n            last_x: end.x,\n            first_y: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            last_y: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staff_height: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { TabTie } from './tabtie';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class TabSlide extends TabTie {\n    /**\n     * @param notes is a struct of the form:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     * @param notes.first_note the starting note of the slide\n     * @param notes.last_note the ending note of the slide\n     * @param notes.first_indices specifies which string + fret positions of the TabNote are used in this slide. zero indexed.\n     * @param notes.last_indices currently unused. we assume it's the same as first_indices.\n     *\n     * @param direction TabSlide.SLIDE_UP or TabSlide.SLIDE_DOWN\n     */\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        // Determine the direction automatically if it is not provided.\n        if (!direction) {\n            let first_fret = notes.first_note.getPositions()[0].fret;\n            if (typeof first_fret === 'string') {\n                first_fret = parseInt(first_fret, 10);\n            }\n            let last_fret = notes.last_note.getPositions()[0].fret;\n            if (typeof last_fret === 'string') {\n                last_fret = parseInt(last_fret, 10);\n            }\n            // If either of the frets are 'X', parseInt() above will return NaN.\n            // Choose TabSlide.SLIDE_UP by default.\n            if (isNaN(first_fret) || isNaN(last_fret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = first_fret > last_fret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.render_options.cp1 = 11;\n        this.render_options.cp2 = 14;\n        this.render_options.y_shift = 0.5;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.TabSlide;\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const first_x_px = params.first_x_px;\n        const first_ys = params.first_ys;\n        const last_x_px = params.last_x_px;\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const slide_y = first_ys[first_indices[i]] + this.render_options.y_shift;\n            if (isNaN(slide_y)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(first_x_px, slide_y + 3 * direction);\n            ctx.lineTo(last_x_px, slide_y - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\nTabSlide.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n// MIT License\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n    /**\n     * @param num number of bars\n     */\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.code = 'tremolo1';\n        // big strokes scales initialised to 1 (no scale)\n        this.y_spacing_scale = 1;\n        this.extra_stroke_scale = 1;\n    }\n    static get CATEGORY() {\n        return Category.Tremolo;\n    }\n    /** Draw the tremolo on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let x = start.x;\n        const gn = isGraceNote(note);\n        const scale = gn ? GraceNote.SCALE : 1;\n        const category = `tremolo.${gn ? 'grace' : 'default'}`;\n        const musicFont = Tables.currentMusicFont();\n        let y_spacing = musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n        // add y_spacing_scale for big strokes (#1258)\n        y_spacing *= this.y_spacing_scale;\n        const height = this.num * y_spacing;\n        let y = note.getStemExtents().baseY - height;\n        if (stemDirection < 0) {\n            y += musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n        }\n        else {\n            y += musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n        }\n        const fontScale = musicFont.lookupMetric(`${category}.point`);\n        x += musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n        for (let i = 0; i < this.num; ++i) {\n            Glyph.renderGlyph(ctx, x, y, fontScale, this.code, { category, scale: this.extra_stroke_scale });\n            y += y_spacing;\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n    /**\n     * Constructor.\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        // Default to standard tuning.\n        this.setTuning(tuningString);\n    }\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n        };\n    }\n    /** Return the note number associated to the note string. */\n    noteToInteger(noteString) {\n        return Tables.keyProperties(noteString).int_value;\n    }\n    /**\n     * Set tuning identified by tuning name (eg. 'dagdad')\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    /** Return the note number associated with a tablature string. */\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    /** Return the note number associated with a tablature string and fret. */\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    /** Return the note string associated with tablature string and fret. */\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { CanvasContext } from './canvascontext';\nimport { ChordSymbol, ChordSymbolHorizontalJustify, ChordSymbolVerticalJustify, SymbolModifiers, SymbolTypes, } from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve, CurvePosition } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { Repetition } from './staverepetition';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Volta, VoltaType } from './stavevolta';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { SVGContext } from './svgcontext';\nimport { System } from './system';\nimport { Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket, TextBracketPosition } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextFormatter } from './textformatter';\nimport { TextJustification, TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { DATE, ID, VERSION } from './version';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice, VoiceMode } from './voice';\nexport class Flow {\n    static get BUILD() {\n        return {\n            /** version number. */\n            VERSION: VERSION,\n            /** git commit ID that this library was built from. */\n            ID: ID,\n            /** The date when this library was compiled. */\n            DATE: DATE,\n        };\n    }\n    /**\n     * Examples:\n     * ```\n     * Vex.Flow.setMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Bravura', 'Gonville');\n     * ```\n     *\n     * **CASE 1**: You are using `vexflow.js`, which includes all music fonts (Bravura, Gonville, Petaluma, Custom).\n     * In this case, calling this method is optional, since VexFlow already defaults to a music font stack of:\n     * 'Bravura', 'Gonville', 'Custom'.\n     *\n     * **CASE 2**: You are using `vexflow-bravura.js` or `vexflow-petaluma.js` or `vexflow-gonville.js`,\n     * which includes a single music font. Calling this method is unnecessary.\n     *\n     * **CASE 3**: You are using the light weight `vexflow-core.js` to take advantage of lazy loading for fonts.\n     * In this case, the default music font stack is empty.\n     * Example:\n     * ```\n     * await Vex.Flow.fetchMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Petaluma');\n     * ... (do VexFlow stuff) ...\n     * ```\n     * See `demos/fonts/` for more examples.\n     *\n     * @returns an array of Font objects corresponding to the provided `fontNames`.\n     */\n    static setMusicFont(...fontNames) {\n        // Convert the array of font names into an array of Font objects.\n        const fonts = fontNames.map((fontName) => Font.load(fontName));\n        Tables.MUSIC_FONT_STACK = fonts;\n        Glyph.MUSIC_FONT_STACK = fonts.slice();\n        Glyph.CURRENT_CACHE_KEY = fontNames.join(',');\n        return fonts;\n    }\n    /**\n     * Used with vexflow-core which supports dynamic font loading.\n     */\n    // eslint-disable-next-line\n    static fetchMusicFont(fontName, fontModuleOrPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The default implementation does nothing.\n            // See vexflow-core.ts for the implementation that vexflow-core.js uses.\n        });\n    }\n    static getMusicFont() {\n        const fonts = Tables.MUSIC_FONT_STACK;\n        return fonts.map((font) => font.getName());\n    }\n    static get RENDER_PRECISION_PLACES() {\n        return Tables.RENDER_PRECISION_PLACES;\n    }\n    static set RENDER_PRECISION_PLACES(precision) {\n        Tables.RENDER_PRECISION_PLACES = precision;\n    }\n    static get SOFTMAX_FACTOR() {\n        return Tables.SOFTMAX_FACTOR;\n    }\n    static set SOFTMAX_FACTOR(factor) {\n        Tables.SOFTMAX_FACTOR = factor;\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return Tables.STAVE_LINE_THICKNESS;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        Tables.STAVE_LINE_THICKNESS = value;\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get accidentalMap() {\n        return Tables.accidentalMap;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    // eslint-disable-next-line\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nFlow.Accidental = Accidental;\nFlow.Annotation = Annotation;\nFlow.Articulation = Articulation;\nFlow.Barline = Barline;\nFlow.BarNote = BarNote;\nFlow.Beam = Beam;\nFlow.Bend = Bend;\nFlow.BoundingBox = BoundingBox;\nFlow.BoundingBoxComputation = BoundingBoxComputation;\nFlow.CanvasContext = CanvasContext;\nFlow.ChordSymbol = ChordSymbol;\nFlow.Clef = Clef;\nFlow.ClefNote = ClefNote;\nFlow.Crescendo = Crescendo;\nFlow.Curve = Curve;\nFlow.Dot = Dot;\nFlow.EasyScore = EasyScore;\nFlow.Element = Element;\nFlow.Factory = Factory;\nFlow.Font = Font;\nFlow.Formatter = Formatter;\nFlow.Fraction = Fraction;\nFlow.FretHandFinger = FretHandFinger;\nFlow.GhostNote = GhostNote;\nFlow.Glyph = Glyph;\nFlow.GlyphNote = GlyphNote;\nFlow.GraceNote = GraceNote;\nFlow.GraceNoteGroup = GraceNoteGroup;\nFlow.GraceTabNote = GraceTabNote;\nFlow.KeyManager = KeyManager;\nFlow.KeySignature = KeySignature;\nFlow.KeySigNote = KeySigNote;\nFlow.Modifier = Modifier;\nFlow.ModifierContext = ModifierContext;\nFlow.MultiMeasureRest = MultiMeasureRest;\nFlow.Music = Music;\nFlow.Note = Note;\nFlow.NoteHead = NoteHead;\nFlow.NoteSubGroup = NoteSubGroup;\nFlow.Ornament = Ornament;\nFlow.Parenthesis = Parenthesis;\nFlow.Parser = Parser;\nFlow.PedalMarking = PedalMarking;\nFlow.Registry = Registry;\nFlow.RenderContext = RenderContext;\nFlow.Renderer = Renderer;\nFlow.RepeatNote = RepeatNote;\nFlow.Repetition = Repetition;\nFlow.Stave = Stave;\nFlow.StaveConnector = StaveConnector;\nFlow.StaveHairpin = StaveHairpin;\nFlow.StaveLine = StaveLine;\nFlow.StaveModifier = StaveModifier;\nFlow.StaveNote = StaveNote;\nFlow.StaveTempo = StaveTempo;\nFlow.StaveText = StaveText;\nFlow.StaveTie = StaveTie;\nFlow.Stem = Stem;\nFlow.StringNumber = StringNumber;\nFlow.Stroke = Stroke;\nFlow.SVGContext = SVGContext;\nFlow.System = System;\nFlow.TabNote = TabNote;\nFlow.TabSlide = TabSlide;\nFlow.TabStave = TabStave;\nFlow.TabTie = TabTie;\nFlow.TextBracket = TextBracket;\nFlow.TextDynamics = TextDynamics;\nFlow.TextFormatter = TextFormatter;\nFlow.TextNote = TextNote;\nFlow.TickContext = TickContext;\nFlow.TimeSignature = TimeSignature;\nFlow.TimeSigNote = TimeSigNote;\nFlow.Tremolo = Tremolo;\nFlow.Tuning = Tuning;\nFlow.Tuplet = Tuplet;\nFlow.Vibrato = Vibrato;\nFlow.VibratoBracket = VibratoBracket;\nFlow.Voice = Voice;\nFlow.Volta = Volta;\n// Exported Enums.\n// Sorted by the module / file they are exported from.\nFlow.AnnotationHorizontalJustify = AnnotationHorizontalJustify;\nFlow.AnnotationVerticalJustify = AnnotationVerticalJustify;\nFlow.ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\nFlow.ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\nFlow.SymbolTypes = SymbolTypes;\nFlow.SymbolModifiers = SymbolModifiers;\nFlow.CurvePosition = CurvePosition;\nFlow.FontWeight = FontWeight;\nFlow.FontStyle = FontStyle;\nFlow.ModifierPosition = ModifierPosition;\nFlow.RendererBackends = RendererBackends;\nFlow.RendererLineEndType = RendererLineEndType;\nFlow.BarlineType = BarlineType;\nFlow.StaveModifierPosition = StaveModifierPosition;\nFlow.VoltaType = VoltaType;\nFlow.TextBracketPosition = TextBracketPosition;\nFlow.TextJustification = TextJustification;\nFlow.VoiceMode = VoiceMode;\n","export const VERSION = '4.1.0-alpha.0';\nexport const ID = '847bc9014672858aedc7f8460384f51f98d6bd84';\nexport const DATE = '2022-10-10T04:47:38.237Z';\n","export const CustomFont = {\n    resolution: 1000,\n    fontFamily: 'VexFlowCustom',\n    glyphs: {\n        noteheadSquareWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 386,\n            o: 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 ',\n        },\n        noteheadSquareBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 386,\n            o: 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 ',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: -171.5,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalBakiyeFlat: {\n            x_min: -176.9375,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: -1.359375,\n            x_max: 255.890625,\n            ha: 261,\n            o: 'm 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 ',\n        },\n        accidentalKoron: {\n            x_min: -20,\n            x_max: 320,\n            ha: 257,\n            o: 'm -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 ',\n        },\n        accidentalSori: {\n            x_min: -10.890625,\n            x_max: 299.4375,\n            ha: 294,\n            o: 'm 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 ',\n        },\n        vexAccidentalMicrotonal2: {\n            x_min: -1.359375,\n            x_max: 386.5625,\n            ha: 394,\n            o: 'm 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 ',\n        },\n        vexAccidentalMicrotonal3: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z ',\n        },\n        vexAccidentalMicrotonal4: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z ',\n        },\n        vexNoteHeadRectBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 ',\n        },\n        vexNoteHeadRectWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100',\n        },\n    },\n};\n","export const CustomMetrics = {\n    name: 'VexFlowCustom',\n    smufl: false,\n    glyphs: {},\n};\n","export const GonvilleFont = {\n    glyphs: {\n        bracketTop: {\n            x_min: 0,\n            x_max: 559.421875,\n            ha: 571,\n            o: 'm 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 ',\n        },\n        bracketBottom: {\n            x_min: 0,\n            x_max: 559.421875,\n            ha: 571,\n            o: 'm 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 ',\n        },\n        barlineTick: {\n            x_min: -80.3125,\n            x_max: 78.9375,\n            ha: 81,\n            o: 'm 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 ',\n        },\n        breathMarkTick: {\n            x_min: -80.3125,\n            x_max: 78.9375,\n            ha: 81,\n            o: 'm 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 ',\n        },\n        segno: {\n            x_min: -330.75,\n            x_max: 329.390625,\n            ha: 336,\n            o: 'm -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 ',\n        },\n        coda: {\n            x_min: -311.6875,\n            x_max: 310.328125,\n            ha: 317,\n            o: 'm -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 ',\n        },\n        gClef: {\n            x_min: -1.359375,\n            x_max: 847.96875,\n            ha: 865,\n            o: 'm 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 ',\n        },\n        cClef: {\n            x_min: 0,\n            x_max: 873.828125,\n            ha: 892,\n            o: 'm 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 ',\n        },\n        fClef: {\n            x_min: -1.359375,\n            x_max: 899.703125,\n            ha: 918,\n            o: 'm 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 ',\n        },\n        unpitchedPercussionClef1: {\n            x_min: 0,\n            x_max: 464.140625,\n            ha: 474,\n            o: 'm 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 ',\n        },\n        '6stringTabClef': {\n            x_min: -1.359375,\n            x_max: 680.5625,\n            ha: 694,\n            o: 'm 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 ',\n        },\n        timeSig0: {\n            x_min: 0,\n            x_max: 514.5,\n            ha: 525,\n            o: 'm 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 ',\n        },\n        timeSig1: {\n            x_min: -1.359375,\n            x_max: 344.359375,\n            ha: 351,\n            o: 'm 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 ',\n        },\n        timeSig2: {\n            x_min: -1.359375,\n            x_max: 458.6875,\n            ha: 468,\n            o: 'm 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 ',\n        },\n        timeSig3: {\n            x_min: -1.359375,\n            x_max: 409.6875,\n            ha: 418,\n            o: 'm 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 ',\n        },\n        timeSig4: {\n            x_min: 0,\n            x_max: 468.21875,\n            ha: 478,\n            o: 'm 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 ',\n        },\n        timeSig5: {\n            x_min: 0,\n            x_max: 409.6875,\n            ha: 418,\n            o: 'm 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 ',\n        },\n        timeSig6: {\n            x_min: 0,\n            x_max: 475.03125,\n            ha: 485,\n            o: 'm 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 ',\n        },\n        timeSig7: {\n            x_min: 0,\n            x_max: 442.359375,\n            ha: 451,\n            o: 'm 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 ',\n        },\n        timeSig8: {\n            x_min: 0,\n            x_max: 488.640625,\n            ha: 499,\n            o: 'm 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 ',\n        },\n        timeSig9: {\n            x_min: 0,\n            x_max: 475.03125,\n            ha: 485,\n            o: 'm 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 ',\n        },\n        timeSigCommon: {\n            x_min: -1.359375,\n            x_max: 556.6875,\n            ha: 568,\n            o: 'm 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 ',\n        },\n        timeSigCutCommon: {\n            x_min: 0,\n            x_max: 556.6875,\n            ha: 568,\n            o: 'm 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 ',\n        },\n        timeSigPlus: {\n            x_min: 0,\n            x_max: 319.859375,\n            ha: 326,\n            o: 'm 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 ',\n        },\n        timeSigPlusSmall: {\n            x_min: 0,\n            x_max: 319.859375,\n            ha: 326,\n            o: 'm 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 ',\n        },\n        timeSigMinus: {\n            x_min: 0,\n            x_max: 318.5,\n            ha: 325,\n            o: 'm 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 ',\n        },\n        timeSigParensRight: {\n            x_min: 25.859375,\n            x_max: 164.6875,\n            ha: 168,\n            o: 'm 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 ',\n        },\n        timeSigParensRightSmall: {\n            x_min: 25.859375,\n            x_max: 164.6875,\n            ha: 168,\n            o: 'm 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 ',\n        },\n        timeSigParensLeft: {\n            x_min: -166.0625,\n            x_max: -25.859375,\n            ha: 0,\n            o: 'm -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 ',\n        },\n        timeSigParensLeftSmall: {\n            x_min: -166.0625,\n            x_max: -25.859375,\n            ha: 0,\n            o: 'm -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 ',\n        },\n        noteheadDoubleWhole: {\n            x_min: 0,\n            x_max: 902.421875,\n            ha: 921,\n            o: 'm 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 ',\n        },\n        noteheadWhole: {\n            x_min: 0,\n            x_max: 619.3125,\n            ha: 632,\n            o: 'm 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 ',\n        },\n        noteheadHalf: {\n            x_min: 0,\n            x_max: 428.75,\n            ha: 438,\n            o: 'm 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 ',\n        },\n        noteheadBlack: {\n            x_min: 0,\n            x_max: 428.75,\n            ha: 438,\n            o: 'm 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 ',\n        },\n        noteheadXWhole: {\n            x_min: 0,\n            x_max: 598.890625,\n            ha: 611,\n            o: 'm 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 ',\n        },\n        noteheadXHalf: {\n            x_min: 0,\n            x_max: 406.96875,\n            ha: 415,\n            o: 'm 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 ',\n        },\n        noteheadXBlack: {\n            x_min: 0,\n            x_max: 406.96875,\n            ha: 415,\n            o: 'm 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 ',\n        },\n        noteheadTriangleUpWhole: {\n            x_min: 0,\n            x_max: 630.203125,\n            ha: 643,\n            o: 'm 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 ',\n        },\n        noteheadTriangleUpHalf: {\n            x_min: 0,\n            x_max: 438.28125,\n            ha: 447,\n            o: 'm 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 ',\n        },\n        noteheadTriangleUpBlack: {\n            x_min: -1.359375,\n            x_max: 436.921875,\n            ha: 446,\n            o: 'm 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 ',\n        },\n        noteheadDiamondWhole: {\n            x_min: 0,\n            x_max: 432.828125,\n            ha: 442,\n            o: 'm 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 ',\n        },\n        noteheadDiamondHalf: {\n            x_min: 0,\n            x_max: 438.28125,\n            ha: 447,\n            o: 'm 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 ',\n        },\n        noteheadDiamondBlack: {\n            x_min: 0,\n            x_max: 432.828125,\n            ha: 442,\n            o: 'm 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 ',\n        },\n        augmentationDot: {\n            x_min: 0,\n            x_max: 133.390625,\n            ha: 136,\n            o: 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 ',\n        },\n        tremolo1: {\n            x_min: -206.890625,\n            x_max: 428.75,\n            ha: 438,\n            o: 'm 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 ',\n        },\n        flag8thUp: {\n            x_min: -24.5,\n            x_max: 317.140625,\n            ha: 324,\n            o: 'm -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 ',\n        },\n        flag8thDown: {\n            x_min: -21.78125,\n            x_max: 367.5,\n            ha: 375,\n            o: 'm 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 ',\n        },\n        flag16thUp: {\n            x_min: -24.5,\n            x_max: 317.140625,\n            ha: 324,\n            o: 'm -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 ',\n        },\n        flag16thDown: {\n            x_min: -21.78125,\n            x_max: 362.0625,\n            ha: 369,\n            o: 'm 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 ',\n        },\n        flag32ndUp: {\n            x_min: -24.5,\n            x_max: 315.78125,\n            ha: 322,\n            o: 'm -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 ',\n        },\n        flag32ndDown: {\n            x_min: -21.78125,\n            x_max: 366.140625,\n            ha: 374,\n            o: 'm 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 ',\n        },\n        flag64thUp: {\n            x_min: -24.5,\n            x_max: 314.421875,\n            ha: 321,\n            o: 'm -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 ',\n        },\n        flag64thDown: {\n            x_min: -21.78125,\n            x_max: 367.5,\n            ha: 375,\n            o: 'm 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 ',\n        },\n        flag128thUp: {\n            x_min: -24.5,\n            x_max: 313.0625,\n            ha: 319,\n            o: 'm -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 ',\n        },\n        flag128thDown: {\n            x_min: -21.78125,\n            x_max: 367.5,\n            ha: 375,\n            o: 'm 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 ',\n        },\n        accidentalFlat: {\n            x_min: -21.78125,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalNatural: {\n            x_min: 0,\n            x_max: 239.5625,\n            ha: 244,\n            o: 'm 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 ',\n        },\n        accidentalSharp: {\n            x_min: 0,\n            x_max: 323.9375,\n            ha: 331,\n            o: 'm 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 ',\n        },\n        accidentalDoubleSharp: {\n            x_min: 0,\n            x_max: 367.5,\n            ha: 375,\n            o: 'm 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 ',\n        },\n        accidentalDoubleFlat: {\n            x_min: -21.78125,\n            x_max: 483.1875,\n            ha: 493,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 ',\n        },\n        accidentalParensLeft: {\n            x_min: -166.0625,\n            x_max: -25.859375,\n            ha: 0,\n            o: 'm -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 ',\n        },\n        accidentalParensRight: {\n            x_min: 25.859375,\n            x_max: 164.6875,\n            ha: 168,\n            o: 'm 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 ',\n        },\n        accidentalQuarterToneFlatStein: {\n            x_min: 0,\n            x_max: 272.21875,\n            ha: 278,\n            o: 'm 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 ',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            x_min: 0,\n            x_max: 607.0625,\n            ha: 619,\n            o: 'm 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 ',\n        },\n        accidentalQuarterToneSharpStein: {\n            x_min: 0,\n            x_max: 193.28125,\n            ha: 197,\n            o: 'm 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 ',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            x_min: -1.359375,\n            x_max: 455.96875,\n            ha: 465,\n            o: 'm 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 ',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: -171.5,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalBakiyeFlat: {\n            x_min: -176.9375,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalKomaSharp: {\n            x_min: -1.359375,\n            x_max: 455.96875,\n            ha: 465,\n            o: 'm 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 ',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: -1.359375,\n            x_max: 255.890625,\n            ha: 261,\n            o: 'm 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 ',\n        },\n        articAccentAbove: {\n            x_min: -348.4375,\n            x_max: 24.5,\n            ha: 25,\n            o: 'm -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 ',\n        },\n        articAccentBelow: {\n            x_min: -348.4375,\n            x_max: 24.5,\n            ha: 25,\n            o: 'm -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 ',\n        },\n        articTenutoAbove: {\n            x_min: 0,\n            x_max: 318.5,\n            ha: 325,\n            o: 'm 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 ',\n        },\n        articTenutoBelow: {\n            x_min: 0,\n            x_max: 318.5,\n            ha: 325,\n            o: 'm 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 ',\n        },\n        articStaccatoAbove: {\n            x_min: 0,\n            x_max: 133.390625,\n            ha: 136,\n            o: 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 ',\n        },\n        articStaccatoBelow: {\n            x_min: 0,\n            x_max: 133.390625,\n            ha: 136,\n            o: 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 ',\n        },\n        articStaccatissimoAbove: {\n            x_min: -73.5,\n            x_max: 72.140625,\n            ha: 74,\n            o: 'm -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 ',\n        },\n        articStaccatissimoBelow: {\n            x_min: -73.5,\n            x_max: 72.140625,\n            ha: 74,\n            o: 'm -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 ',\n        },\n        articMarcatoAbove: {\n            x_min: -149.71875,\n            x_max: 148.359375,\n            ha: 151,\n            o: 'm -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 ',\n        },\n        articMarcatoBelow: {\n            x_min: -149.71875,\n            x_max: 148.359375,\n            ha: 151,\n            o: 'm -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 ',\n        },\n        fermataAbove: {\n            x_min: -442.359375,\n            x_max: 441,\n            ha: 450,\n            o: 'm -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 ',\n        },\n        fermataBelow: {\n            x_min: -441,\n            x_max: 439.640625,\n            ha: 449,\n            o: 'm -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 ',\n        },\n        fermataLongAbove: {\n            x_min: -390.640625,\n            x_max: 389.28125,\n            ha: 397,\n            o: 'm -378 502 l -374 503 l 0 503 l 372 503 l 377 502 b 387 491 381 499 385 496 l 389 488 l 389 251 l 389 15 l 387 12 b 367 0 383 4 375 0 b 348 12 360 0 352 4 l 347 15 l 347 174 l 347 335 l 0 335 l -348 335 l -348 174 l -348 15 l -349 12 b -368 0 -353 4 -362 0 b -389 12 -377 0 -385 4 l -390 15 l -390 251 l -390 488 l -389 491 b -378 502 -386 496 -382 499 m -13 131 b -1 133 -9 133 -5 133 b 50 105 19 133 39 123 b 61 70 57 95 61 83 b 50 34 61 58 57 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -58 38 -62 55 b -13 131 -62 98 -44 124 ',\n        },\n        fermataLongBelow: {\n            x_min: -390.640625,\n            x_max: 389.28125,\n            ha: 397,\n            o: 'm -378 -2 b -368 -1 -375 -1 -374 -1 b -349 -13 -360 -1 -353 -5 l -348 -16 l -348 -176 l -348 -337 l 0 -337 l 347 -337 l 347 -176 l 347 -16 l 348 -13 b 367 0 352 -5 360 0 b 387 -13 375 0 383 -5 l 389 -16 l 389 -252 l 389 -489 l 387 -492 b 377 -503 385 -498 381 -501 l 372 -505 l 0 -505 l -374 -505 l -378 -503 b -389 -492 -382 -501 -386 -498 l -390 -489 l -390 -252 l -390 -16 l -389 -13 b -378 -2 -386 -8 -382 -4 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -58 -102 -62 -87 b -13 -9 -62 -44 -44 -16 ',\n        },\n        fermataVeryLongAbove: {\n            x_min: -390.640625,\n            x_max: 389.28125,\n            ha: 397,\n            o: 'm -378 573 l -374 576 l 0 576 l 372 576 l 377 573 b 387 563 381 571 385 567 l 389 559 l 389 287 l 389 15 l 387 12 b 367 0 383 4 375 0 b 348 12 360 0 352 4 l 347 15 l 347 210 l 347 406 l 0 406 l -348 406 l -348 210 l -348 15 l -349 12 b -368 0 -353 4 -362 0 b -389 12 -377 0 -385 4 l -390 15 l -390 287 l -390 559 l -389 563 b -378 573 -386 567 -382 571 m -274 337 l -270 338 l 0 338 l 269 338 l 273 337 b 284 326 279 334 281 330 l 285 323 l 285 169 l 285 15 l 284 12 b 265 -1 280 4 272 -1 b 245 12 257 -1 249 4 l 245 15 l 243 108 l 243 201 l 0 201 l -245 201 l -245 108 l -245 15 l -246 12 b -266 -1 -250 4 -258 -1 b -285 12 -273 -1 -281 4 l -287 15 l -287 169 l -287 323 l -285 326 b -274 337 -283 330 -280 334 m -13 131 b -1 133 -9 133 -5 133 b 50 105 19 133 39 123 b 61 70 57 95 61 83 b 50 34 61 58 57 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -58 38 -62 55 b -13 131 -62 98 -44 124 ',\n        },\n        fermataVeryLongBelow: {\n            x_min: -390.640625,\n            x_max: 389.28125,\n            ha: 397,\n            o: 'm -378 -2 b -368 -1 -375 -1 -374 -1 b -349 -13 -360 -1 -353 -5 l -348 -16 l -348 -212 l -348 -408 l 0 -408 l 347 -408 l 347 -212 l 347 -16 l 348 -13 b 367 0 352 -5 360 0 b 387 -13 375 0 383 -5 l 389 -16 l 389 -288 l 389 -560 l 387 -564 b 377 -574 385 -569 381 -573 l 372 -577 l 0 -577 l -374 -577 l -378 -574 b -389 -564 -382 -573 -386 -569 l -390 -560 l -390 -288 l -390 -16 l -389 -13 b -378 -2 -386 -8 -382 -4 m -274 -2 b -266 -1 -272 -1 -270 -1 b -246 -13 -257 -1 -250 -5 l -245 -16 l -245 -109 l -245 -202 l 0 -202 l 243 -202 l 243 -109 l 245 -16 l 245 -13 b 265 0 249 -5 257 0 b 284 -13 272 0 280 -5 l 285 -16 l 285 -170 l 285 -324 l 284 -327 b 273 -338 281 -331 279 -335 l 269 -340 l 0 -340 l -270 -340 l -274 -338 b -285 -327 -280 -335 -283 -331 l -287 -324 l -287 -170 l -287 -16 l -285 -13 b -274 -2 -283 -8 -280 -4 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -58 -102 -62 -87 b -13 -9 -62 -44 -44 -16 ',\n        },\n        fermataShortAbove: {\n            x_min: -390.640625,\n            x_max: 389.28125,\n            ha: 397,\n            o: 'm -9 650 b -1 652 -6 650 -4 652 b 19 639 6 652 13 648 l 23 631 b 28 623 24 628 27 626 l 34 614 l 39 606 l 43 598 l 49 588 l 54 580 l 59 571 l 65 563 l 69 555 l 74 546 l 80 537 l 85 528 b 89 520 87 526 89 523 l 95 512 l 100 503 l 106 494 l 111 487 l 115 478 l 121 470 l 126 462 l 130 453 l 136 445 l 141 437 l 147 427 l 151 419 l 156 410 l 161 402 l 167 394 l 172 385 l 176 376 b 182 367 179 374 181 370 l 187 359 l 193 351 l 198 342 l 202 334 l 208 326 l 212 317 l 217 309 l 223 301 l 228 292 l 234 284 l 238 274 l 243 266 l 249 258 l 254 249 l 259 241 l 264 233 l 269 224 b 274 216 270 222 273 217 l 280 206 l 285 198 l 295 180 l 299 174 l 304 165 l 310 156 l 315 148 l 321 140 l 325 131 l 330 123 l 336 113 l 341 105 l 347 97 l 351 88 l 356 80 l 360 72 b 364 66 362 70 363 68 b 370 58 366 65 368 61 l 379 41 b 389 19 386 31 389 24 b 382 4 389 13 386 8 b 347 0 377 0 378 0 b 337 0 344 0 340 0 b 336 0 336 0 336 0 b 287 11 294 0 294 0 l 281 19 l 276 27 l 272 37 l 266 45 l 261 54 l 255 62 l 250 70 l 246 79 l 240 87 l 235 97 l 230 105 l 224 113 l 220 122 l 215 130 l 209 140 l 204 148 l 200 155 l 194 163 b 189 172 193 165 191 169 l 185 180 l 179 188 l 174 198 l 168 206 l 163 215 l 159 223 l 153 231 l 148 240 l 142 249 l 138 258 l 133 266 l 127 274 l 122 283 l 117 292 l 111 301 l 107 308 l 102 316 b 98 324 102 317 99 322 l 92 333 l 87 341 l 81 349 l 77 359 l 72 367 l 66 376 l 61 384 l 55 392 l 51 401 l 46 410 l 40 419 l 35 427 l 31 435 l 24 444 l 20 453 l 14 460 l 10 469 b 5 477 9 470 6 474 l 0 485 l -5 494 l -9 502 l -14 512 b -20 519 -16 513 -19 517 l -24 526 l -28 534 b -31 537 -29 535 -31 537 b -35 533 -32 537 -32 535 l -88 444 l -187 280 l -285 117 l -343 23 b -362 1 -352 6 -356 2 b -368 0 -364 0 -367 0 b -390 20 -381 0 -390 8 l -390 20 b -359 77 -390 27 -390 27 l -80 539 l -25 631 b -9 650 -17 644 -13 648 m -13 133 b -1 134 -9 133 -5 134 b 50 105 19 134 39 123 b 61 70 57 95 61 83 b 50 34 61 58 57 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 70 -57 40 -62 55 b -13 133 -62 98 -44 126 ',\n        },\n        fermataShortBelow: {\n            x_min: -390.640625,\n            x_max: 389.28125,\n            ha: 397,\n            o: 'm -377 -1 b -368 0 -375 -1 -372 0 b -362 -1 -366 0 -363 -1 b -343 -24 -356 -4 -352 -8 l -285 -119 l -187 -280 l -88 -444 l -35 -533 b -31 -538 -32 -537 -32 -538 b -28 -534 -31 -538 -29 -537 l -23 -526 l -19 -517 l -13 -509 l -8 -501 l -2 -492 l 2 -483 l 6 -476 l 17 -458 l 23 -449 l 32 -433 l 38 -424 l 42 -416 l 47 -408 l 53 -399 l 58 -391 l 63 -381 l 68 -373 l 73 -365 l 78 -356 l 84 -348 l 89 -340 l 93 -330 l 99 -322 l 104 -315 l 114 -297 l 125 -280 l 129 -272 l 134 -263 l 140 -255 l 145 -247 l 151 -238 l 155 -230 l 160 -220 l 166 -212 l 171 -204 l 176 -195 l 181 -187 l 186 -177 l 191 -169 l 196 -162 l 201 -154 l 206 -144 l 217 -127 l 221 -119 l 227 -111 l 232 -102 l 238 -94 l 242 -86 l 247 -77 l 253 -69 l 258 -59 l 262 -51 l 268 -43 l 273 -34 l 279 -26 l 283 -18 b 321 -1 292 -2 292 -1 b 338 -1 326 -1 332 -1 b 382 -6 378 -1 375 -1 b 389 -20 386 -9 389 -15 b 382 -38 389 -26 386 -31 l 378 -47 l 372 -55 l 367 -63 l 362 -72 l 356 -80 l 351 -90 l 347 -98 l 341 -106 l 336 -115 l 330 -123 l 325 -131 l 321 -141 l 315 -149 l 310 -158 l 304 -166 l 299 -174 b 295 -183 298 -177 296 -181 l 289 -191 l 285 -199 l 280 -208 l 274 -216 l 269 -224 l 264 -233 l 259 -242 l 254 -251 l 249 -259 l 243 -267 l 238 -276 l 234 -284 l 228 -292 l 223 -302 l 217 -310 l 213 -319 l 208 -327 b 202 -335 206 -330 204 -334 l 197 -344 l 193 -351 l 187 -360 l 182 -369 l 176 -377 l 172 -385 l 167 -394 l 161 -403 l 156 -412 l 152 -420 l 147 -428 l 141 -437 l 136 -445 l 130 -455 l 126 -463 l 121 -471 l 115 -480 b 110 -488 114 -483 111 -487 l 106 -496 l 100 -503 l 96 -512 l 89 -521 l 85 -530 l 80 -538 l 74 -546 l 69 -555 l 65 -564 l 59 -573 l 54 -581 l 49 -589 l 43 -598 l 39 -606 l 34 -616 l 28 -624 l 23 -632 b 19 -641 21 -635 20 -638 b 0 -653 14 -649 8 -653 b -25 -631 -10 -653 -14 -649 l -80 -541 l -359 -79 b -389 -29 -375 -52 -389 -30 b -390 -22 -389 -26 -390 -24 b -377 -1 -390 -13 -385 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 51 -36 19 -8 39 -19 b 61 -72 58 -47 61 -59 b 51 -106 61 -84 58 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -127 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 ',\n        },\n        breathMarkComma: {\n            x_min: -1.359375,\n            x_max: 193.28125,\n            ha: 197,\n            o: 'm 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 ',\n        },\n        breathMarkUpbow: {\n            x_min: -170.140625,\n            x_max: 168.78125,\n            ha: 172,\n            o: 'm -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 ',\n        },\n        caesura: {\n            x_min: 0,\n            x_max: 622.03125,\n            ha: 635,\n            o: 'm 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 ',\n        },\n        caesuraCurved: {\n            x_min: 0,\n            x_max: 503.609375,\n            ha: 514,\n            o: 'm 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 ',\n        },\n        restMaxima: {\n            x_min: 0,\n            x_max: 464.140625,\n            ha: 474,\n            o: 'm 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 ',\n        },\n        restDoubleWhole: {\n            x_min: 0,\n            x_max: 386.5625,\n            ha: 394,\n            o: 'm 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 ',\n        },\n        restWhole: {\n            x_min: 0,\n            x_max: 447.8125,\n            ha: 457,\n            o: 'm 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 ',\n        },\n        restWholeLegerLine: {\n            x_min: 0,\n            x_max: 737.71875,\n            ha: 753,\n            o: 'm 9 13 b 208 15 10 15 51 15 b 368 15 251 15 304 15 l 726 15 l 729 12 b 737 -1 735 9 737 4 b 729 -15 737 -6 735 -11 l 726 -16 l 660 -16 l 592 -16 l 592 -95 l 592 -174 l 368 -174 l 144 -174 l 144 -95 l 144 -16 l 77 -16 l 9 -16 l 6 -15 b 0 -1 1 -11 0 -6 b 9 13 0 5 2 11 ',\n        },\n        restHalf: {\n            x_min: 0,\n            x_max: 447.8125,\n            ha: 457,\n            o: 'm 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 ',\n        },\n        restHalfLegerLine: {\n            x_min: 0,\n            x_max: 737.71875,\n            ha: 753,\n            o: 'm 144 94 l 144 173 l 368 173 l 592 173 l 592 94 l 592 15 l 660 15 l 726 15 l 729 12 b 737 -1 735 9 737 4 b 729 -15 737 -6 735 -11 l 726 -16 l 368 -16 l 9 -16 l 6 -15 b 0 -1 1 -11 0 -6 b 6 12 0 4 1 9 l 9 15 l 77 15 l 144 15 l 144 94 ',\n        },\n        restQuarter: {\n            x_min: 0,\n            x_max: 300.8125,\n            ha: 307,\n            o: 'm 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 ',\n        },\n        rest8th: {\n            x_min: 0,\n            x_max: 349.8125,\n            ha: 357,\n            o: 'm 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 ',\n        },\n        rest16th: {\n            x_min: 0,\n            x_max: 450.53125,\n            ha: 460,\n            o: 'm 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 ',\n        },\n        rest32nd: {\n            x_min: 0,\n            x_max: 551.25,\n            ha: 563,\n            o: 'm 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 ',\n        },\n        rest64th: {\n            x_min: -1.359375,\n            x_max: 651.96875,\n            ha: 665,\n            o: 'm 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 ',\n        },\n        rest128th: {\n            x_min: -1.359375,\n            x_max: 752.703125,\n            ha: 768,\n            o: 'm 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 ',\n        },\n        dynamicPiano: {\n            x_min: -53.078125,\n            x_max: 513.140625,\n            ha: 485,\n            o: 'm 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 ',\n        },\n        dynamicMezzo: {\n            x_min: 46.28125,\n            x_max: 669.671875,\n            ha: 563,\n            o: 'm 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 ',\n        },\n        dynamicForte: {\n            x_min: -118.421875,\n            x_max: 597.53125,\n            ha: 381,\n            o: 'm 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 ',\n        },\n        dynamicRinforzando: {\n            x_min: 78.9375,\n            x_max: 485.921875,\n            ha: 417,\n            o: 'm 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 ',\n        },\n        dynamicSforzando: {\n            x_min: 70.78125,\n            x_max: 378.390625,\n            ha: 315,\n            o: 'm 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 ',\n        },\n        dynamicZ: {\n            x_min: 29.9375,\n            x_max: 420.578125,\n            ha: 371,\n            o: 'm 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 ',\n        },\n        ornamentTrill: {\n            x_min: -340.28125,\n            x_max: 338.921875,\n            ha: 346,\n            o: 'm -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 ',\n        },\n        ornamentTurn: {\n            x_min: -423.3125,\n            x_max: 421.9375,\n            ha: 431,\n            o: 'm -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 ',\n        },\n        ornamentTurnSlash: {\n            x_min: -423.3125,\n            x_max: 421.9375,\n            ha: 431,\n            o: 'm -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 ',\n        },\n        ornamentMordent: {\n            x_min: -402.890625,\n            x_max: 401.53125,\n            ha: 410,\n            o: 'm -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 ',\n        },\n        ornamentShortTrill: {\n            x_min: -402.890625,\n            x_max: 401.53125,\n            ha: 410,\n            o: 'm -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 ',\n        },\n        ornamentTremblement: {\n            x_min: -571.671875,\n            x_max: 570.3125,\n            ha: 582,\n            o: 'm -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 ',\n        },\n        ornamentPrecompAppoggTrill: {\n            x_min: -571.671875,\n            x_max: 570.3125,\n            ha: 582,\n            o: 'm -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 ',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            x_min: -590.71875,\n            x_max: 589.359375,\n            ha: 601,\n            o: 'm -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 ',\n        },\n        ornamentPrecompSlideTrillBach: {\n            x_min: -590.71875,\n            x_max: 589.359375,\n            ha: 601,\n            o: 'm 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 ',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            x_min: -590.71875,\n            x_max: 589.359375,\n            ha: 601,\n            o: 'm 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 ',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            x_min: -597.53125,\n            x_max: 596.171875,\n            ha: 608,\n            o: 'm -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 ',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n            x_min: -597.53125,\n            x_max: 596.171875,\n            ha: 608,\n            o: 'm -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 ',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            x_min: -597.53125,\n            x_max: 596.171875,\n            ha: 608,\n            o: 'm -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 ',\n        },\n        stringsDownBow: {\n            x_min: -228.671875,\n            x_max: 227.3125,\n            ha: 232,\n            o: 'm -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 ',\n        },\n        stringsUpBow: {\n            x_min: -149.71875,\n            x_max: 148.359375,\n            ha: 151,\n            o: 'm -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 ',\n        },\n        stringsHarmonic: {\n            x_min: -122.5,\n            x_max: 121.140625,\n            ha: 124,\n            o: 'm -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 ',\n        },\n        pluckedSnapPizzicatoAbove: {\n            x_min: -149.71875,\n            x_max: 148.359375,\n            ha: 151,\n            o: 'm -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 ',\n        },\n        pluckedSnapPizzicatoBelow: {\n            x_min: -149.71875,\n            x_max: 148.359375,\n            ha: 151,\n            o: 'm -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 ',\n        },\n        pluckedLeftHandPizzicato: {\n            x_min: 0,\n            x_max: 319.859375,\n            ha: 326,\n            o: 'm 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 ',\n        },\n        keyboardPedalPed: {\n            x_min: -1.359375,\n            x_max: 1064.390625,\n            ha: 1086,\n            o: 'm 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 ',\n        },\n        keyboardPedalUp: {\n            x_min: -1.359375,\n            x_max: 592.078125,\n            ha: 604,\n            o: 'm 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 ',\n        },\n        pictChokeCymbal: {\n            x_min: 0,\n            x_max: 227.3125,\n            ha: 232,\n            o: 'm 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 ',\n        },\n        wiggleArpeggiatoUp: {\n            x_min: 58.53125,\n            x_max: 228.671875,\n            ha: 294,\n            o: 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 ',\n        },\n        arrowheadBlackUp: {\n            x_min: -10.890625,\n            x_max: 299.4375,\n            ha: 294,\n            o: 'm 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 ',\n        },\n        arrowheadBlackDown: {\n            x_min: -10.890625,\n            x_max: 298.078125,\n            ha: 294,\n            o: 'm 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 ',\n        },\n        vexAccidentalMicrotonal1: {\n            x_min: -171.5,\n            x_max: 483.1875,\n            ha: 493,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 ',\n        },\n        vexAccidentalMicrotonal2: {\n            x_min: -1.359375,\n            x_max: 386.5625,\n            ha: 394,\n            o: 'm 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 ',\n        },\n        vexWiggleArpeggioUp: {\n            x_min: 58.53125,\n            x_max: 228.671875,\n            ha: 294,\n            o: 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 ',\n        },\n        vexNoteHeadMutedBreve: {\n            x_min: 0,\n            x_max: 370.21875,\n            ha: 378,\n            o: 'm 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 ',\n        },\n    },\n    cssFontWeight: 'normal',\n    ascender: 1903,\n    underlinePosition: -125,\n    cssFontStyle: 'normal',\n    boundingBox: {\n        yMin: -2065.375,\n        xMin: -695.53125,\n        yMax: 1901.578125,\n        xMax: 1159.671875,\n    },\n    resolution: 1000,\n    original_font_information: {\n        postscript_name: 'Gonville-18',\n        version_string: 'Version 0.1.8904 ',\n        vendor_url: '',\n        full_font_name: 'Gonville-18',\n        font_family_name: 'Gonville-18',\n        copyright: 'No copyright is claimed on this font file.',\n        description: '',\n        trademark: '',\n        designer: '',\n        designer_url: '',\n        unique_font_identifier: 'FontForge 2.0 : Gonville-18 : 17-3-2010',\n        license_url: '',\n        license_description: '',\n        manufacturer_name: '',\n        font_sub_family_name: '18',\n    },\n    descender: -2066,\n    fontFamily: 'Gonville-18',\n    lineHeight: 4093,\n    underlineThickness: 50,\n};\n","/**\n * The Gonville font was created by Simon Tatham.\n * https://www.chiark.greenend.org.uk/~sgtatham/gonville/\n */\nexport const GonvilleMetrics = {\n    name: 'Gonville',\n    smufl: false,\n    stave: {\n        padding: 12,\n        endPaddingMax: 10,\n        endPaddingMin: 5,\n        unalignedNotePadding: 10,\n    },\n    accidental: {\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    clef: {\n        default: {\n            point: 40,\n            width: 26,\n        },\n        small: {\n            point: 32,\n            width: 20,\n        },\n        annotations: {\n            '8va': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 20,\n                    treble: {\n                        line: -1.2,\n                        shiftX: 11,\n                    },\n                },\n                small: {\n                    point: 18,\n                    treble: {\n                        line: -0.4,\n                        shiftX: 8,\n                    },\n                },\n            },\n            '8vb': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 20,\n                    treble: {\n                        line: 6.3,\n                        shiftX: 10,\n                    },\n                    bass: {\n                        line: 4,\n                        shiftX: 1,\n                    },\n                },\n                small: {\n                    point: 18,\n                    treble: {\n                        line: 5.8,\n                        shiftX: 6,\n                    },\n                    bass: {\n                        line: 3.5,\n                        shiftX: 0.5,\n                    },\n                },\n            },\n        },\n        // May not need these anymore\n        lineCount: {\n            '8': { point: 55, shiftY: 14 },\n            '7': { point: 47, shiftY: 8 },\n            '6': { point: 40, shiftY: 1 },\n            '5': { point: 30, shiftY: -6 },\n            '4': { point: 23, shiftY: -12 },\n        },\n    },\n    parenthesis: {\n        default: {\n            point: 39,\n            width: 7,\n        },\n        gracenote: {\n            point: (39 * 3) / 5,\n            width: 3,\n        },\n    },\n    pedalMarking: {\n        up: {\n            point: 40,\n        },\n        down: {\n            point: 40,\n        },\n    },\n    // These are for numeric digits, such as in time signatures\n    digits: {\n        point: 40,\n        tupletPoint: 28,\n    },\n    // articulation: {\n    // },\n    tremolo: {\n        default: {\n            point: 25,\n            spacing: 4,\n            offsetYStemUp: -7,\n            offsetYStemDown: 7,\n            offsetXStemUp: 9,\n            offsetXStemDown: -0.5,\n        },\n        grace: {\n            point: 15,\n            spacing: 4,\n            offsetYStemUp: -7,\n            offsetYStemDown: 7,\n            offsetXStemUp: 6.5,\n            offsetXStemDown: -0.5,\n        },\n    },\n    staveRepetition: {\n        symbolText: {\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 0,\n        },\n    },\n    // noteHead: {\n    // },\n    stem: {\n        heightAdjustmentForFlag: -3,\n        // These are stem (Y) offsets to the note heads. To shift the\n        // noteheads (x-position) themselves, see glyphs.notehead.custom.\n        noteHead: {\n            noteheadTriangleUpHalf: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpBlack: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpWhole: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXHalf: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXBlack: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXWhole: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadHalf: {\n                offsetYBaseStemUp: -1.5,\n                offsetYBaseStemDown: 1.5,\n            },\n            noteheadBlack: {\n                offsetYBaseStemUp: -1.5,\n                offsetYBaseStemDown: 1.5,\n            },\n            noteheadSquareWhite: {\n                offsetYBaseStemDown: -5,\n                offsetYBaseStemUp: 5,\n            },\n        },\n    },\n    glyphs: {\n        flag: {\n            shiftX: -0.08,\n            flag8thDown: {\n                shiftX: -0.16,\n            },\n            flag16thDown: {\n                shiftX: -0.16,\n            },\n            flag32ndDown: {\n                shiftX: -0.16,\n                shiftY: 9,\n            },\n            flag64thDown: {\n                shiftX: -0.16,\n                shiftY: 13,\n            },\n            flag128thDown: {\n                shiftX: -0.16,\n                shiftY: 22,\n            },\n            flag32ndUp: {\n                shiftY: -9,\n            },\n            flag64thUp: {\n                shiftY: -13,\n            },\n            flag128thUp: {\n                shiftY: -22,\n            },\n        },\n        stringNumber: {\n            verticalPadding: 8,\n            stemPadding: 2,\n            leftPadding: 5,\n            rightPadding: 6,\n        },\n        textNote: {\n            point: 40,\n            default: {},\n            ornamentTrill: {\n                shiftX: -5,\n                shiftY: 4,\n            },\n        },\n        noteHead: {\n            minPadding: 2,\n            custom: {\n                noteheadCircleXStemUp: {\n                    shiftX: -1.5,\n                },\n                noteheadXWholeStemUp: {\n                    shiftX: -5,\n                },\n                noteheadTriangleUpWholeStemUp: {\n                    shiftX: -6,\n                },\n            },\n        },\n        chordSymbol: {\n            global: {\n                superscriptOffset: -400,\n                subscriptOffset: 300,\n                kerningOffset: -250,\n                lowerKerningText: ['D', 'F', 'P', 'T', 'V', 'Y'],\n                upperKerningText: ['A', 'L'],\n                spacing: 100,\n                superSubRatio: 0.66,\n            },\n            csymDiminished: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymHalfDiminished: {\n                scale: 0.8,\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymAugmented: {\n                scale: 1,\n                leftSideBearing: 0,\n                advanceWidth: 530,\n                yOffset: 0,\n            },\n            csymParensLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 155,\n                yOffset: 250,\n            },\n            csymParensRightTall: {\n                scale: 0.8,\n                leftSideBearing: -40,\n                advanceWidth: 189,\n                yOffset: 250,\n            },\n            csymBracketLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 328,\n                yOffset: 0,\n            },\n            csymBracketRightTall: {\n                scale: 0.8,\n                leftSideBearing: 1,\n                advanceWidth: 600,\n                yOffset: 0,\n            },\n            csymParensLeftVeryTall: {\n                scale: 0.9,\n                leftSideBearing: 0,\n                advanceWidth: 121,\n                yOffset: 350,\n            },\n            csymParensRightVeryTall: {\n                scale: 0.9,\n                leftSideBearing: 50,\n                advanceWidth: 111,\n                yOffset: 350,\n            },\n            csymDiagonalArrangementSlash: {\n                scale: 0.6,\n                leftSideBearing: -1,\n                advanceWidth: 990,\n                yOffset: 0,\n            },\n            csymMinor: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 482,\n                yOffset: 0,\n            },\n            csymMajorSeventh: {\n                scale: 0.9,\n                leftSideBearing: 200,\n                yOffset: 0,\n                advanceWidth: 600,\n            },\n            accidentalSharp: {\n                scale: 0.75,\n                leftSideBearing: 40,\n                advanceWidth: 250,\n                yOffset: -402,\n            },\n            accidentalFlat: {\n                scale: 0.95,\n                leftSideBearing: -50,\n                advanceWidth: 208,\n                yOffset: -184,\n            },\n        },\n        jazzOrnaments: {\n            brassScoop: {\n                scale: 1.0,\n                xOffset: -12,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 15,\n            },\n            brassDoitMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 22,\n            },\n            brassFallLipShort: {\n                scale: 1.0,\n                xOffset: 17,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 15,\n            },\n            brassLiftMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 5,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassFallRoughMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 28,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassBend: {\n                scale: 1.0,\n                xOffset: 2,\n                yOffset: -8,\n                stemUpYOffset: 24,\n                reportedWidth: 5,\n            },\n            brassMuteClosed: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -9,\n                stemUpYOffset: 24,\n                reportedWidth: 5,\n            },\n            brassMuteOpen: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -7,\n                stemUpYOffset: 25,\n                reportedWidth: 5,\n            },\n            brassFlip: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 7,\n                reportedWidth: 5,\n            },\n            brassJazzTurn: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -4,\n                stemUpYOffset: 10,\n                reportedWidth: 28,\n            },\n            brassSmear: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 9,\n                reportedWidth: 5,\n            },\n        },\n        tremolo: {\n            default: {\n                shiftY: -10,\n            },\n            grace: {\n                shiftY: -5,\n            },\n        },\n        tuplet: {\n            noteHeadOffset: 20,\n            stemOffset: 10,\n            bottomLine: 4,\n            topModifierOffset: 15,\n        },\n    },\n};\n","export const PetalumaScriptFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 250,\n            y_min: 0,\n            y_max: 500,\n            ha: 500,\n            leftSideBearing: 0,\n            advanceWidth: 250,\n        },\n        '0': {\n            x_min: 33,\n            x_max: 534,\n            y_min: -13,\n            y_max: 751,\n            ha: 764,\n            leftSideBearing: 33,\n            advanceWidth: 570,\n        },\n        '1': {\n            x_min: 48,\n            x_max: 235,\n            y_min: -17,\n            y_max: 734,\n            ha: 751,\n            leftSideBearing: 48,\n            advanceWidth: 286,\n        },\n        '2': {\n            x_min: 56,\n            x_max: 571,\n            y_min: -19,\n            y_max: 741,\n            ha: 760,\n            leftSideBearing: 56,\n            advanceWidth: 626,\n        },\n        '3': {\n            x_min: 50,\n            x_max: 528,\n            y_min: -7,\n            y_max: 731,\n            ha: 738,\n            leftSideBearing: 50,\n            advanceWidth: 589,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 564,\n            y_min: -13,\n            y_max: 743,\n            ha: 756,\n            leftSideBearing: 38,\n            advanceWidth: 614,\n        },\n        '5': {\n            x_min: 42,\n            x_max: 601,\n            y_min: -34,\n            y_max: 743,\n            ha: 777,\n            leftSideBearing: 42,\n            advanceWidth: 648,\n        },\n        '6': {\n            x_min: 47,\n            x_max: 606,\n            y_min: -16,\n            y_max: 743,\n            ha: 759,\n            leftSideBearing: 47,\n            advanceWidth: 667,\n        },\n        '7': {\n            x_min: 47,\n            x_max: 567,\n            y_min: 5,\n            y_max: 739,\n            ha: 734,\n            leftSideBearing: 0,\n            advanceWidth: 615,\n        },\n        '8': {\n            x_min: 40,\n            x_max: 541,\n            y_min: -15,\n            y_max: 752,\n            ha: 767,\n            leftSideBearing: 40,\n            advanceWidth: 585,\n        },\n        '9': {\n            x_min: 40,\n            x_max: 537,\n            y_min: -52,\n            y_max: 736,\n            ha: 788,\n            leftSideBearing: 40,\n            advanceWidth: 592,\n        },\n        '!': {\n            x_min: 49,\n            x_max: 180,\n            y_min: -7,\n            y_max: 761,\n            ha: 768,\n            leftSideBearing: 49,\n            advanceWidth: 230,\n        },\n        '\"': {\n            x_min: 39,\n            x_max: 304,\n            y_min: 596,\n            y_max: 804,\n            ha: 208,\n            leftSideBearing: 39,\n            advanceWidth: 353,\n        },\n        '#': {\n            x_min: 33,\n            x_max: 599,\n            y_min: -8,\n            y_max: 765,\n            ha: 773,\n            leftSideBearing: 33,\n            advanceWidth: 648,\n        },\n        $: {\n            x_min: 53,\n            x_max: 495,\n            y_min: -111,\n            y_max: 823,\n            ha: 934,\n            leftSideBearing: 53,\n            advanceWidth: 560,\n        },\n        '%': {\n            x_min: 35,\n            x_max: 656,\n            y_min: -128,\n            y_max: 808,\n            ha: 936,\n            leftSideBearing: 35,\n            advanceWidth: 711,\n        },\n        '&': {\n            x_min: 53,\n            x_max: 441,\n            y_min: -3,\n            y_max: 753,\n            ha: 756,\n            leftSideBearing: 53,\n            advanceWidth: 500,\n        },\n        \"'\": {\n            x_min: 43,\n            x_max: 161,\n            y_min: 590,\n            y_max: 811,\n            ha: 221,\n            leftSideBearing: 43,\n            advanceWidth: 217,\n        },\n        '(': {\n            x_min: 41,\n            x_max: 311,\n            y_min: -36,\n            y_max: 845,\n            ha: 881,\n            leftSideBearing: 41,\n            advanceWidth: 308,\n        },\n        ')': {\n            x_min: -8,\n            x_max: 257,\n            y_min: -21,\n            y_max: 852,\n            ha: 873,\n            leftSideBearing: -8,\n            advanceWidth: 280,\n        },\n        '*': {\n            x_min: 59,\n            x_max: 539,\n            y_min: 175,\n            y_max: 589,\n            ha: 414,\n            leftSideBearing: 59,\n            advanceWidth: 601,\n        },\n        '+': {\n            x_min: 33,\n            x_max: 361,\n            y_min: 180,\n            y_max: 587,\n            ha: 407,\n            leftSideBearing: 33,\n            advanceWidth: 400,\n        },\n        ',': {\n            x_min: 15,\n            x_max: 176,\n            y_min: -129,\n            y_max: 92,\n            ha: 221,\n            leftSideBearing: 15,\n            advanceWidth: 205,\n        },\n        '-': {\n            x_min: 40,\n            x_max: 380,\n            y_min: 317,\n            y_max: 452,\n            ha: 135,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '.': {\n            x_min: 48,\n            x_max: 185,\n            y_min: -56,\n            y_max: 84,\n            ha: 140,\n            leftSideBearing: 48,\n            advanceWidth: 227,\n        },\n        '/': {\n            x_min: -58,\n            x_max: 654,\n            y_min: -122,\n            y_max: 844,\n            ha: 966,\n            leftSideBearing: -58,\n            advanceWidth: 626,\n        },\n        ':': {\n            x_min: 65,\n            x_max: 225,\n            y_min: 97,\n            y_max: 536,\n            ha: 439,\n            leftSideBearing: 65,\n            advanceWidth: 302,\n        },\n        ';': {\n            x_min: 13,\n            x_max: 295,\n            y_min: -139,\n            y_max: 536,\n            ha: 675,\n            leftSideBearing: 13,\n            advanceWidth: 334,\n        },\n        '<': {\n            x_min: 28,\n            x_max: 438,\n            y_min: -1,\n            y_max: 607,\n            ha: 608,\n            leftSideBearing: 28,\n            advanceWidth: 475,\n        },\n        '=': {\n            x_min: 40,\n            x_max: 383,\n            y_min: 199.9598640852289,\n            y_max: 541,\n            ha: 341.0401359147711,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '>': {\n            x_min: 35,\n            x_max: 421,\n            y_min: 28,\n            y_max: 632,\n            ha: 604,\n            leftSideBearing: 35,\n            advanceWidth: 466,\n        },\n        '?': {\n            x_min: 45,\n            x_max: 548,\n            y_min: -17,\n            y_max: 767,\n            ha: 784,\n            leftSideBearing: 45,\n            advanceWidth: 592,\n        },\n        '@': {\n            x_min: 51,\n            x_max: 730,\n            y_min: -78,\n            y_max: 753,\n            ha: 831,\n            leftSideBearing: 51,\n            advanceWidth: 781,\n        },\n        A: {\n            x_min: 37,\n            x_max: 554,\n            y_min: -4,\n            y_max: 746,\n            ha: 750,\n            leftSideBearing: 37,\n            advanceWidth: 617,\n        },\n        B: {\n            x_min: 37,\n            x_max: 532,\n            y_min: 3,\n            y_max: 783,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 579,\n        },\n        C: {\n            x_min: 37,\n            x_max: 583,\n            y_min: -3,\n            y_max: 775,\n            ha: 778,\n            leftSideBearing: 37,\n            advanceWidth: 623,\n        },\n        D: {\n            x_min: 50,\n            x_max: 530,\n            y_min: -15,\n            y_max: 749,\n            ha: 764,\n            leftSideBearing: 50,\n            advanceWidth: 579,\n        },\n        E: {\n            x_min: 45,\n            x_max: 531,\n            y_min: -1,\n            y_max: 743,\n            ha: 744,\n            leftSideBearing: 45,\n            advanceWidth: 585,\n        },\n        F: {\n            x_min: 45,\n            x_max: 459,\n            y_min: 23,\n            y_max: 727,\n            ha: 704,\n            leftSideBearing: 45,\n            advanceWidth: 510,\n        },\n        G: {\n            x_min: 31,\n            x_max: 577,\n            y_min: -8,\n            y_max: 733,\n            ha: 741,\n            leftSideBearing: 31,\n            advanceWidth: 611,\n        },\n        H: {\n            x_min: 37,\n            x_max: 493,\n            y_min: -22,\n            y_max: 758,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 535,\n        },\n        I: {\n            x_min: 47,\n            x_max: 501,\n            y_min: -3,\n            y_max: 731,\n            ha: 734,\n            leftSideBearing: 47,\n            advanceWidth: 541,\n        },\n        J: {\n            x_min: 33,\n            x_max: 531,\n            y_min: -23,\n            y_max: 725,\n            ha: 748,\n            leftSideBearing: 33,\n            advanceWidth: 573,\n        },\n        K: {\n            x_min: 43,\n            x_max: 505,\n            y_min: -10,\n            y_max: 740,\n            ha: 750,\n            leftSideBearing: 43,\n            advanceWidth: 560,\n        },\n        L: {\n            x_min: 49,\n            x_max: 457,\n            y_min: -2,\n            y_max: 746,\n            ha: 748,\n            leftSideBearing: 49,\n            advanceWidth: 510,\n        },\n        M: {\n            x_min: 35,\n            x_max: 699,\n            y_min: 1,\n            y_max: 744,\n            ha: 743,\n            leftSideBearing: 35,\n            advanceWidth: 743,\n        },\n        N: {\n            x_min: 34,\n            x_max: 533,\n            y_min: -17,\n            y_max: 761,\n            ha: 778,\n            leftSideBearing: 34,\n            advanceWidth: 579,\n        },\n        O: {\n            x_min: 41,\n            x_max: 608,\n            y_min: -5,\n            y_max: 735,\n            ha: 740,\n            leftSideBearing: 41,\n            advanceWidth: 667,\n        },\n        P: {\n            x_min: 53,\n            x_max: 451,\n            y_min: -18,\n            y_max: 735,\n            ha: 753,\n            leftSideBearing: 53,\n            advanceWidth: 497,\n        },\n        Q: {\n            x_min: 40,\n            x_max: 599,\n            y_min: -67,\n            y_max: 744,\n            ha: 811,\n            leftSideBearing: 40,\n            advanceWidth: 648,\n        },\n        R: {\n            x_min: 39,\n            x_max: 487,\n            y_min: 16,\n            y_max: 735,\n            ha: 719,\n            leftSideBearing: 39,\n            advanceWidth: 535,\n        },\n        S: {\n            x_min: 35,\n            x_max: 552,\n            y_min: -47,\n            y_max: 708,\n            ha: 755,\n            leftSideBearing: 35,\n            advanceWidth: 604,\n        },\n        T: {\n            x_min: 26,\n            x_max: 656,\n            y_min: -13,\n            y_max: 718,\n            ha: 731,\n            leftSideBearing: 26,\n            advanceWidth: 705,\n        },\n        U: {\n            x_min: 41,\n            x_max: 518,\n            y_min: -20,\n            y_max: 748,\n            ha: 768,\n            leftSideBearing: 41,\n            advanceWidth: 567,\n        },\n        V: {\n            x_min: 47,\n            x_max: 509,\n            y_min: -26,\n            y_max: 744,\n            ha: 770,\n            leftSideBearing: 47,\n            advanceWidth: 567,\n        },\n        W: {\n            x_min: 44,\n            x_max: 789,\n            y_min: -35,\n            y_max: 720,\n            ha: 755,\n            leftSideBearing: 44,\n            advanceWidth: 833,\n        },\n        X: {\n            x_min: 63,\n            x_max: 635,\n            y_min: -10,\n            y_max: 745,\n            ha: 755,\n            leftSideBearing: 63,\n            advanceWidth: 680,\n        },\n        Y: {\n            x_min: 43,\n            x_max: 503,\n            y_min: -21,\n            y_max: 734,\n            ha: 755,\n            leftSideBearing: 43,\n            advanceWidth: 541,\n        },\n        Z: {\n            x_min: 42,\n            x_max: 584,\n            y_min: -10,\n            y_max: 739,\n            ha: 749,\n            leftSideBearing: 42,\n            advanceWidth: 629,\n        },\n        '[': {\n            x_min: 46,\n            x_max: 346,\n            y_min: -150,\n            y_max: 884,\n            ha: 1034,\n            leftSideBearing: 46,\n            advanceWidth: 291,\n        },\n        '\\\\': {\n            x_min: 20,\n            x_max: 616,\n            y_min: -100,\n            y_max: 797,\n            ha: 897,\n            leftSideBearing: 20,\n            advanceWidth: 645,\n        },\n        ']': {\n            x_min: -76,\n            x_max: 226,\n            y_min: -150,\n            y_max: 881,\n            ha: 1031,\n            leftSideBearing: -76,\n            advanceWidth: 297,\n        },\n        '^': {\n            x_min: 43,\n            x_max: 437,\n            y_min: 517,\n            y_max: 812,\n            ha: 295,\n            leftSideBearing: 43,\n            advanceWidth: 478,\n        },\n        _: {\n            x_min: 29,\n            x_max: 563,\n            y_min: -110,\n            y_max: -1,\n            ha: 109,\n            leftSideBearing: 29,\n            advanceWidth: 598,\n        },\n        '`': {\n            x_min: 54,\n            x_max: 321,\n            y_min: 540,\n            y_max: 747,\n            ha: 207,\n            leftSideBearing: 54,\n            advanceWidth: 368,\n        },\n        a: {\n            x_min: 20,\n            x_max: 447,\n            y_min: -17,\n            y_max: 495,\n            ha: 512,\n            leftSideBearing: 20,\n            advanceWidth: 494,\n        },\n        b: {\n            x_min: 37,\n            x_max: 466,\n            y_min: -27,\n            y_max: 770,\n            ha: 797,\n            leftSideBearing: 37,\n            advanceWidth: 510,\n        },\n        c: {\n            x_min: 35,\n            x_max: 456,\n            y_min: -9,\n            y_max: 507,\n            ha: 516,\n            leftSideBearing: 35,\n            advanceWidth: 460,\n        },\n        d: {\n            x_min: 45,\n            x_max: 520,\n            y_min: -15,\n            y_max: 764,\n            ha: 779,\n            leftSideBearing: 45,\n            advanceWidth: 560,\n        },\n        e: {\n            x_min: 33,\n            x_max: 370,\n            y_min: -5,\n            y_max: 501,\n            ha: 506,\n            leftSideBearing: 33,\n            advanceWidth: 397,\n        },\n        f: {\n            x_min: 35,\n            x_max: 411,\n            y_min: -13,\n            y_max: 695,\n            ha: 708,\n            leftSideBearing: 35,\n            advanceWidth: 453,\n        },\n        g: {\n            x_min: 33,\n            x_max: 551,\n            y_min: -257,\n            y_max: 505,\n            ha: 762,\n            leftSideBearing: 33,\n            advanceWidth: 611,\n        },\n        h: {\n            x_min: 32,\n            x_max: 458,\n            y_min: -29,\n            y_max: 743,\n            ha: 772,\n            leftSideBearing: 32,\n            advanceWidth: 491,\n        },\n        i: {\n            x_min: 45,\n            x_max: 167,\n            y_min: -13,\n            y_max: 631,\n            ha: 644,\n            leftSideBearing: 45,\n            advanceWidth: 220,\n        },\n        j: {\n            x_min: -127,\n            x_max: 261,\n            y_min: -231,\n            y_max: 601,\n            ha: 832,\n            leftSideBearing: -127,\n            advanceWidth: 308,\n        },\n        k: {\n            x_min: 39,\n            x_max: 443,\n            y_min: -3,\n            y_max: 700,\n            ha: 703,\n            leftSideBearing: 39,\n            advanceWidth: 497,\n        },\n        l: {\n            x_min: 58,\n            x_max: 168,\n            y_min: -8,\n            y_max: 686,\n            ha: 694,\n            leftSideBearing: 58,\n            advanceWidth: 227,\n        },\n        m: {\n            x_min: 39,\n            x_max: 688,\n            y_min: -14,\n            y_max: 501,\n            ha: 515,\n            leftSideBearing: 39,\n            advanceWidth: 718,\n        },\n        n: {\n            x_min: 45,\n            x_max: 491,\n            y_min: -32,\n            y_max: 512,\n            ha: 544,\n            leftSideBearing: 45,\n            advanceWidth: 541,\n        },\n        o: {\n            x_min: 41,\n            x_max: 424,\n            y_min: -12,\n            y_max: 493,\n            ha: 505,\n            leftSideBearing: 41,\n            advanceWidth: 447,\n        },\n        p: {\n            x_min: 25,\n            x_max: 529,\n            y_min: -260,\n            y_max: 500,\n            ha: 760,\n            leftSideBearing: 25,\n            advanceWidth: 573,\n        },\n        q: {\n            x_min: 53,\n            x_max: 603,\n            y_min: -235,\n            y_max: 514,\n            ha: 749,\n            leftSideBearing: 53,\n            advanceWidth: 623,\n        },\n        r: {\n            x_min: 32,\n            x_max: 407,\n            y_min: -7,\n            y_max: 492,\n            ha: 499,\n            leftSideBearing: 32,\n            advanceWidth: 460,\n        },\n        s: {\n            x_min: 49,\n            x_max: 416,\n            y_min: -12,\n            y_max: 519,\n            ha: 531,\n            leftSideBearing: 49,\n            advanceWidth: 460,\n        },\n        t: {\n            x_min: 32,\n            x_max: 442,\n            y_min: -5,\n            y_max: 684,\n            ha: 689,\n            leftSideBearing: 32,\n            advanceWidth: 469,\n        },\n        u: {\n            x_min: 41,\n            x_max: 487,\n            y_min: -5,\n            y_max: 507,\n            ha: 512,\n            leftSideBearing: 41,\n            advanceWidth: 510,\n        },\n        v: {\n            x_min: 16,\n            x_max: 441,\n            y_min: -20,\n            y_max: 542,\n            ha: 562,\n            leftSideBearing: 16,\n            advanceWidth: 456,\n        },\n        w: {\n            x_min: 39,\n            x_max: 639,\n            y_min: -22,\n            y_max: 505,\n            ha: 527,\n            leftSideBearing: 39,\n            advanceWidth: 661,\n        },\n        x: {\n            x_min: 15,\n            x_max: 505,\n            y_min: -39,\n            y_max: 539,\n            ha: 578,\n            leftSideBearing: 15,\n            advanceWidth: 541,\n        },\n        y: {\n            x_min: -98,\n            x_max: 501,\n            y_min: -242,\n            y_max: 511,\n            ha: 753,\n            leftSideBearing: -98,\n            advanceWidth: 548,\n        },\n        z: {\n            x_min: 27,\n            x_max: 479,\n            y_min: -3,\n            y_max: 494,\n            ha: 497,\n            leftSideBearing: 27,\n            advanceWidth: 494,\n        },\n        '{': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '|': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '}': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '~': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n    },\n    fontFamily: 'PetalumaScript',\n    resolution: 1000,\n    generatedOn: '2020-06-14T18:33:25.407Z',\n};\n","export const RobotoSlabFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 509,\n            y_min: 0,\n            y_max: 2000,\n            ha: 2000,\n            leftSideBearing: 0,\n            advanceWidth: 509,\n        },\n        '0': {\n            x_min: 121,\n            x_max: 1048,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1168,\n        },\n        '1': {\n            x_min: 117,\n            x_max: 767,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 117,\n            advanceWidth: 844,\n        },\n        '2': {\n            x_min: 75.8474576645637,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 75,\n            advanceWidth: 1131,\n        },\n        '3': {\n            x_min: 74.85365853658536,\n            x_max: 994,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1106,\n        },\n        '4': {\n            x_min: 63,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1187,\n        },\n        '5': {\n            x_min: 96.8448275474953,\n            x_max: 982,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 96,\n            advanceWidth: 1081,\n        },\n        '6': {\n            x_min: 121,\n            x_max: 1067,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1144,\n        },\n        '7': {\n            x_min: 76,\n            x_max: 1060,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: -30,\n            advanceWidth: 1128,\n        },\n        '8': {\n            x_min: 92,\n            x_max: 1039,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 92,\n            advanceWidth: 1131,\n        },\n        '9': {\n            x_min: 84,\n            x_max: 1026,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 84,\n            advanceWidth: 1154,\n        },\n        '!': {\n            x_min: 143,\n            x_max: 340,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 143,\n            advanceWidth: 483,\n        },\n        '\"': {\n            x_min: 166,\n            x_max: 634,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 770,\n        },\n        '#': {\n            x_min: 63,\n            x_max: 1179,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1246,\n        },\n        $: {\n            x_min: 81.92156915727656,\n            x_max: 1012,\n            y_min: -208,\n            y_max: 1693,\n            ha: 1901,\n            leftSideBearing: 81,\n            advanceWidth: 1110,\n        },\n        '%': {\n            x_min: 77,\n            x_max: 1384,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 77,\n            advanceWidth: 1460,\n        },\n        '&': {\n            x_min: 74,\n            x_max: 1242,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1289,\n        },\n        \"'\": {\n            x_min: 166,\n            x_max: 324,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 460,\n        },\n        '(': {\n            x_min: 114,\n            x_max: 650,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 114,\n            advanceWidth: 662,\n        },\n        ')': {\n            x_min: 11,\n            x_max: 547,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 11,\n            advanceWidth: 654,\n        },\n        '*': {\n            x_min: 66,\n            x_max: 893,\n            y_min: 607,\n            y_max: 1456,\n            ha: 849,\n            leftSideBearing: 66,\n            advanceWidth: 958,\n        },\n        '+': {\n            x_min: 73,\n            x_max: 1071,\n            y_min: 146,\n            y_max: 1206,\n            ha: 1060,\n            leftSideBearing: 73,\n            advanceWidth: 1145,\n        },\n        ',': {\n            x_min: 23,\n            x_max: 315,\n            y_min: -311,\n            y_max: 221,\n            ha: 532,\n            leftSideBearing: 23,\n            advanceWidth: 404,\n        },\n        '-': {\n            x_min: 154,\n            x_max: 643,\n            y_min: 538,\n            y_max: 692,\n            ha: 154,\n            leftSideBearing: 154,\n            advanceWidth: 797,\n        },\n        '.': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 202,\n            ha: 202,\n            leftSideBearing: 145,\n            advanceWidth: 493,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 774,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 0,\n            advanceWidth: 824,\n        },\n        ':': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 145,\n            advanceWidth: 419,\n        },\n        ';': {\n            x_min: 53,\n            x_max: 345,\n            y_min: -311,\n            y_max: 1082,\n            ha: 1393,\n            leftSideBearing: 53,\n            advanceWidth: 424,\n        },\n        '<': {\n            x_min: 76,\n            x_max: 892,\n            y_min: 107,\n            y_max: 1013,\n            ha: 906,\n            leftSideBearing: 76,\n            advanceWidth: 1017,\n        },\n        '=': {\n            x_min: 147,\n            x_max: 981,\n            y_min: 407,\n            y_max: 987,\n            ha: 580,\n            leftSideBearing: 147,\n            advanceWidth: 1127,\n        },\n        '>': {\n            x_min: 125,\n            x_max: 980,\n            y_min: 87,\n            y_max: 993,\n            ha: 906,\n            leftSideBearing: 125,\n            advanceWidth: 1060,\n        },\n        '?': {\n            x_min: 65.92660602419838,\n            x_max: 890,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 65,\n            advanceWidth: 953,\n        },\n        '@': {\n            x_min: 84.3592218305664,\n            x_max: 1705.2346925277395,\n            y_min: -453,\n            y_max: 1431,\n            ha: 1884,\n            leftSideBearing: 84,\n            advanceWidth: 1821,\n        },\n        A: {\n            x_min: 70,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 70,\n            advanceWidth: 1533,\n        },\n        B: {\n            x_min: 81,\n            x_max: 1253,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1322,\n        },\n        C: {\n            x_min: 80,\n            x_max: 1174,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1290,\n        },\n        D: {\n            x_min: 81,\n            x_max: 1291,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1356,\n        },\n        E: {\n            x_min: 81,\n            x_max: 1190,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1306,\n        },\n        F: {\n            x_min: 81,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1256,\n        },\n        G: {\n            x_min: 80,\n            x_max: 1226,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1346,\n        },\n        H: {\n            x_min: 81,\n            x_max: 1497,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1578,\n        },\n        I: {\n            x_min: 81,\n            x_max: 604,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 685,\n        },\n        J: {\n            x_min: 60,\n            x_max: 1100,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 60,\n            advanceWidth: 1169,\n        },\n        K: {\n            x_min: 81,\n            x_max: 1427,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1501,\n        },\n        L: {\n            x_min: 81,\n            x_max: 1130,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1210,\n        },\n        M: {\n            x_min: 94,\n            x_max: 1888,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 94,\n            advanceWidth: 1982,\n        },\n        N: {\n            x_min: 83,\n            x_max: 1509,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 83,\n            advanceWidth: 1592,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1281,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 70,\n            advanceWidth: 1351,\n        },\n        P: {\n            x_min: 81,\n            x_max: 1242,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1297,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1348,\n            y_min: -245,\n            y_max: 1477,\n            ha: 1722,\n            leftSideBearing: 70,\n            advanceWidth: 1376,\n        },\n        R: {\n            x_min: 81,\n            x_max: 1285,\n            y_min: 0,\n            y_max: 1455,\n            ha: 1455,\n            leftSideBearing: 81,\n            advanceWidth: 1385,\n        },\n        S: {\n            x_min: 115,\n            x_max: 1116,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 115,\n            advanceWidth: 1206,\n        },\n        T: {\n            x_min: 96,\n            x_max: 1306,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 96,\n            advanceWidth: 1406,\n        },\n        U: {\n            x_min: 70,\n            x_max: 1452,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 70,\n            advanceWidth: 1522,\n        },\n        V: {\n            x_min: 65,\n            x_max: 1443,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1508,\n        },\n        W: {\n            x_min: 72,\n            x_max: 2057,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 72,\n            advanceWidth: 2129,\n        },\n        X: {\n            x_min: 80,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 80,\n            advanceWidth: 1529,\n        },\n        Y: {\n            x_min: 65,\n            x_max: 1396,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1461,\n        },\n        Z: {\n            x_min: 90,\n            x_max: 1107,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 90,\n            advanceWidth: 1197,\n        },\n        '[': {\n            x_min: 157,\n            x_max: 541,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 157,\n            advanceWidth: 573,\n        },\n        '\\\\': {\n            x_min: 36,\n            x_max: 830,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 36,\n            advanceWidth: 841,\n        },\n        ']': {\n            x_min: 23,\n            x_max: 408,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 23,\n            advanceWidth: 552,\n        },\n        '^': {\n            x_min: 71,\n            x_max: 802,\n            y_min: 729,\n            y_max: 1456,\n            ha: 727,\n            leftSideBearing: 71,\n            advanceWidth: 864,\n        },\n        _: {\n            x_min: 119,\n            x_max: 1041,\n            y_min: -154,\n            y_max: 0,\n            ha: 154,\n            leftSideBearing: 119,\n            advanceWidth: 1168,\n        },\n        '`': {\n            x_min: 40,\n            x_max: 456,\n            y_min: 1288,\n            y_max: 1560,\n            ha: 272,\n            leftSideBearing: 40,\n            advanceWidth: 496,\n        },\n        a: {\n            x_min: 79,\n            x_max: 1053,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 79,\n            advanceWidth: 1132,\n        },\n        b: {\n            x_min: -16,\n            x_max: 1071,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: -16,\n            advanceWidth: 1145,\n        },\n        c: {\n            x_min: 78,\n            x_max: 988,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1067,\n        },\n        d: {\n            x_min: 78,\n            x_max: 1156,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: 78,\n            advanceWidth: 1218,\n        },\n        e: {\n            x_min: 74,\n            x_max: 980,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 74,\n            advanceWidth: 1059,\n        },\n        f: {\n            x_min: 64,\n            x_max: 731,\n            y_min: 0,\n            y_max: 1581,\n            ha: 1581,\n            leftSideBearing: 64,\n            advanceWidth: 725,\n        },\n        g: {\n            x_min: 78,\n            x_max: 1133,\n            y_min: -437,\n            y_max: 1102,\n            ha: 1539,\n            leftSideBearing: 78,\n            advanceWidth: 1157,\n        },\n        h: {\n            x_min: 49,\n            x_max: 1255,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 49,\n            advanceWidth: 1315,\n        },\n        i: {\n            x_min: 67,\n            x_max: 590,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 67,\n            advanceWidth: 652,\n        },\n        j: {\n            x_min: -56,\n            x_max: 381,\n            y_min: -437,\n            y_max: 1560,\n            ha: 1997,\n            leftSideBearing: -56,\n            advanceWidth: 525,\n        },\n        k: {\n            x_min: 64,\n            x_max: 1248,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 1287,\n        },\n        l: {\n            x_min: 64,\n            x_max: 587,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 653,\n        },\n        m: {\n            x_min: 74,\n            x_max: 1905,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1977,\n        },\n        n: {\n            x_min: 74,\n            x_max: 1278,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1343,\n        },\n        o: {\n            x_min: 78,\n            x_max: 1046,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1124,\n        },\n        p: {\n            x_min: 34,\n            x_max: 1119,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 34,\n            advanceWidth: 1197,\n        },\n        q: {\n            x_min: 78,\n            x_max: 1135,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 78,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 72,\n            x_max: 808,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 72,\n            advanceWidth: 854,\n        },\n        s: {\n            x_min: 104,\n            x_max: 933,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 104,\n            advanceWidth: 1022,\n        },\n        t: {\n            x_min: 24,\n            x_max: 678,\n            y_min: -17,\n            y_max: 1343,\n            ha: 1360,\n            leftSideBearing: 24,\n            advanceWidth: 730,\n        },\n        u: {\n            x_min: 52,\n            x_max: 1181,\n            y_min: -21,\n            y_max: 1082,\n            ha: 1103,\n            leftSideBearing: 52,\n            advanceWidth: 1245,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 26,\n            advanceWidth: 1206,\n        },\n        w: {\n            x_min: 52,\n            x_max: 1777,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 52,\n            advanceWidth: 1823,\n        },\n        x: {\n            x_min: 42,\n            x_max: 1163,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 42,\n            advanceWidth: 1203,\n        },\n        y: {\n            x_min: 24,\n            x_max: 1172,\n            y_min: -437,\n            y_max: 1082,\n            ha: 1519,\n            leftSideBearing: 24,\n            advanceWidth: 1192,\n        },\n        z: {\n            x_min: 88,\n            x_max: 960,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 88,\n            advanceWidth: 1032,\n        },\n        '{': {\n            x_min: 63,\n            x_max: 671,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 63,\n            advanceWidth: 701,\n        },\n        '|': {\n            x_min: 150,\n            x_max: 307,\n            y_min: -270,\n            y_max: 1456,\n            ha: 1726,\n            leftSideBearing: 150,\n            advanceWidth: 451,\n        },\n        '}': {\n            x_min: 27,\n            x_max: 635,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 27,\n            advanceWidth: 701,\n        },\n        '~': {\n            x_min: 121,\n            x_max: 1257,\n            y_min: 401,\n            y_max: 803,\n            ha: 402,\n            leftSideBearing: 121,\n            advanceWidth: 1386,\n        },\n    },\n    fontFamily: 'Roboto Slab',\n    resolution: 2048,\n    generatedOn: '2020-06-15T19:12:58.120Z',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Utility methods used by the rest of the VexFlow codebase.\nimport { Flow } from './flow';\nimport { log, RuntimeError } from './util';\nexport class Vex {\n    // Users of `Vex.forEach(a, fn)` should use `Array.prototype.forEach()` instead.\n    // static forEach<T>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => void) {\n    //   arr.forEach(callbackFn);\n    // }\n    /**\n     * Take `arr` and return a new list consisting of the sorted, unique,\n     * contents of arr. Does not modify `arr`.\n     */\n    // eslint-disable-next-line\n    static sortAndUnique(arr, cmp, eq) {\n        if (arr.length > 1) {\n            const newArr = [];\n            let last;\n            arr.sort(cmp);\n            for (let i = 0; i < arr.length; ++i) {\n                if (i === 0 || !eq(arr[i], last)) {\n                    newArr.push(arr[i]);\n                }\n                last = arr[i];\n            }\n            return newArr;\n        }\n        else {\n            return arr;\n        }\n    }\n    /** Check if array `arr` contains `obj`. */\n    // eslint-disable-next-line\n    static contains(arr, obj) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n    // Get the 2D Canvas context from DOM element `canvas_sel`.\n    static getCanvasContext(canvasSelector) {\n        if (!canvasSelector) {\n            throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvasSelector);\n        }\n        const canvas = document.getElementById(canvasSelector);\n        if (!(canvas && canvas.getContext)) {\n            throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n        }\n        return canvas.getContext('2d');\n    }\n    /** Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds. */\n    // eslint-disable-next-line\n    static benchmark(s, f) {\n        const start_time = new Date().getTime();\n        f();\n        const elapsed = new Date().getTime() - start_time;\n        log(s, elapsed + 'ms');\n    }\n    // Get stack trace.\n    static stackTrace() {\n        const err = new Error();\n        return err.stack;\n    }\n}\nVex.Flow = Flow;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { GonvilleFont } from './gonville_glyphs';\nimport { GonvilleMetrics } from './gonville_metrics';\nexport function loadGonville() {\n    Font.load('Gonville', GonvilleFont, GonvilleMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { CustomFont } from './custom_glyphs';\nimport { CustomMetrics } from './custom_metrics';\nexport function loadCustom() {\n    Font.load('Custom', CustomFont, CustomMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// vexflow-gonville.ts is the entry point for vexflow-gonville.js.\n// This version bundles the Gonville music engraving font.\nimport { Flow } from '../src/flow';\nimport { loadCustom } from '../src/fonts/load_custom';\nimport { loadGonville } from '../src/fonts/load_gonville';\nimport { loadTextFonts } from '../src/fonts/textfonts';\nloadGonville();\nloadCustom();\nFlow.setMusicFont('Gonville', 'Custom');\nloadTextFonts();\n// Re-export all exports from index.ts.\nexport * from '../src/index';\n// Also collect all exports into a default export for CJS projects.\nexport * as default from '../src/index';\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { TextFormatter } from '../textformatter';\nimport { PetalumaScriptFont } from './petalumascript_glyphs';\nimport { RobotoSlabFont } from './robotoslab_glyphs';\nexport function loadTextFonts() {\n    // Roboto Slab\n    {\n        const fontData = RobotoSlabFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Previously we used 'H', but it isn't actually the tallest or the widest.\n        // Interestingly, the lowercase 'b' is the tallest glyph.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Text font to pair with the Bravura / Gonville music fonts.',\n        });\n    }\n    // PetalumaScript\n    {\n        const fontData = PetalumaScriptFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Text font to pair with the Petaluma music font.',\n        });\n    }\n}\n"],"names":["root","factory","exports","module","define","amd","window","globalThis","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","Function","e","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","isCategory","category","checkAncestors","constructorFcn","constructor","CATEGORY","getPrototypeOf","isAccidental","Category","Accidental","isAnnotation","Annotation","isBarline","Barline","isDot","Dot","isGraceNote","GraceNote","isGraceNoteGroup","GraceNoteGroup","isNote","Note","isRenderContext","RenderContext","isStaveNote","StaveNote","isStemmableNote","StemmableNote","isTabNote","TabNote","RuntimeError","Error","code","message","super","globalObject","self","defined","x","undefined","log","block","args","line","Array","slice","join","console","warn","err","stack","midLine","a","b","mid_line","n","parseInt","prefix","text","normalizeAngle","Math","PI","Fraction","numerator","denominator","set","static","Number","isNaN","t","GCD","length","LCM","shift","LCMM","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","__staticFractionA","copy","__staticFractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","floor","remainder","makeAbs","abs","toString","toSimplifiedString","__staticFractionTmp","toMixedString","s","q","f","parse","str","i","split","BoundingBox","y","w","h","that","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","new_x","new_y","new_w","max","new_h","BoundingBoxComputation","x1","NaN","y1","x2","y2","getX1","getY1","width","height","addPoint","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","p01x","denom","it","p01y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","t1","sqrt","t2","FontWeight","FontStyle","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","fontParser","Fonts","Font","fontName","name","fontSize","SIZE","_a","scaleToPxFrom","pt","parseFloat","unit","replace","toLowerCase","size","weight","style","fromCSSString","family","SANS_SERIF","NORMAL","cssFontShorthand","document","createElement","font","fontFamily","fontWeight","fontStyle","fontInfo","st","trim","wt","sz","scaleFactor","parsedWeight","ITALIC","woffURL","includeWoff2","fontFace","FontFace","load","fonts","host","WEB_FONT_HOST","files","WEB_FONT_FILES","fontPath","loadWebFont","data","metrics","setData","setMetrics","getName","getData","getMetrics","hasData","getResolution","resolution","getGlyphs","glyphs","lookupMetric","defaultValue","keyParts","currObj","SERIF","px","em","in","mm","cm","PetalumaScript","Index","id","type","class","Registry","index","defaultRegistry","registry","clear","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","_b","getElementsByAttribute","attribute","index_attr","index_attr_val","keys","map","k","getElementsByType","getElementsByClass","className","onUpdate","info","includes","Element","children","attrs","newID","el","getCategory","classes","rendered","getDefaultRegistry","ID","addChildElement","child","push","setStyle","setGroupStyle","forEach","getStyle","applyStyle","context","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","addClass","removeClass","isRendered","setRendered","getAttributes","getSVGElement","suffix","element","oldID","getBoundingBox","getContext","setContext","setFont","toCSSString","textFont","defaultTextFont","TEXT_FONT","fontIsObject","fontIsString","fontIsUndefined","sizeWeightStyleAreUndefined","assign","validate","getFont","resetFont","setFontSize","getFontSize","fontSizeInPoints","convertSizeToPointValue","fontSizeInPixels","convertSizeToPixelValue","RESOLUTION","durations","durationAliases","keySignatures","C","num","Am","F","acc","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","G","Em","D","Bm","A","E","B","clefs","treble","line_shift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","int_val","CN","accidental","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","rest","X","octave","shift_right","accidentals","parenRightPaddingAdjustment","bb","db","bs","bss","bbs","ashs","afhf","accSagittal5v7KleismaUp","accSagittal5v7KleismaDown","accSagittal5CommaUp","accSagittal5CommaDown","accSagittal7CommaUp","accSagittal7CommaDown","accSagittal25SmallDiesisUp","accSagittal25SmallDiesisDown","accSagittal35MediumDiesisUp","accSagittal35MediumDiesisDown","accSagittal11MediumDiesisUp","accSagittal11MediumDiesisDown","accSagittal11LargeDiesisUp","accSagittal11LargeDiesisDown","accSagittal35LargeDiesisUp","accSagittal35LargeDiesisDown","accSagittalSharp25SDown","accSagittalFlat25SUp","accSagittalSharp7CDown","accSagittalFlat7CUp","accSagittalSharp5CDown","accSagittalFlat5CUp","accSagittalSharp5v7kDown","accSagittalFlat5v7kUp","accSagittalSharp","accSagittalFlat","accSagittalSharp5v7kUp","accSagittalFlat5v7kDown","accSagittalSharp5CUp","accSagittalFlat5CDown","accSagittalSharp7CUp","accSagittalFlat7CDown","accSagittalSharp25SUp","accSagittalFlat25SDown","accSagittalSharp35MUp","accSagittalFlat35MDown","accSagittalSharp11MUp","accSagittalFlat11MDown","accSagittalSharp11LUp","accSagittalFlat11LDown","accSagittalSharp35LUp","accSagittalFlat35LDown","accSagittalDoubleSharp25SDown","accSagittalDoubleFlat25SUp","accSagittalDoubleSharp7CDown","accSagittalDoubleFlat7CUp","accSagittalDoubleSharp5CDown","accSagittalDoubleFlat5CUp","accSagittalDoubleSharp5v7kDown","accSagittalDoubleFlat5v7kUp","accSagittalDoubleSharp","accSagittalDoubleFlat","accSagittal7v11KleismaUp","accSagittal7v11KleismaDown","accSagittal17CommaUp","accSagittal17CommaDown","accSagittal55CommaUp","accSagittal55CommaDown","accSagittal7v11CommaUp","accSagittal7v11CommaDown","accSagittal5v11SmallDiesisUp","accSagittal5v11SmallDiesisDown","accSagittalSharp5v11SDown","accSagittalFlat5v11SUp","accSagittalSharp7v11CDown","accSagittalFlat7v11CUp","accSagittalSharp55CDown","accSagittalFlat55CUp","accSagittalSharp17CDown","accSagittalFlat17CUp","accSagittalSharp7v11kDown","accSagittalFlat7v11kUp","accSagittalSharp7v11kUp","accSagittalFlat7v11kDown","accSagittalSharp17CUp","accSagittalFlat17CDown","accSagittalSharp55CUp","accSagittalFlat55CDown","accSagittalSharp7v11CUp","accSagittalFlat7v11CDown","accSagittalSharp5v11SUp","accSagittalFlat5v11SDown","accSagittalDoubleSharp5v11SDown","accSagittalDoubleFlat5v11SUp","accSagittalDoubleSharp7v11CDown","accSagittalDoubleFlat7v11CUp","accSagittalDoubleSharp55CDown","accSagittalDoubleFlat55CUp","accSagittalDoubleSharp17CDown","accSagittalDoubleFlat17CUp","accSagittalDoubleSharp7v11kDown","accSagittalDoubleFlat7v11kUp","accSagittal23CommaUp","accSagittal23CommaDown","accSagittal5v19CommaUp","accSagittal5v19CommaDown","accSagittal5v23SmallDiesisUp","accSagittal5v23SmallDiesisDown","accSagittalSharp5v23SDown","accSagittalFlat5v23SUp","accSagittalSharp5v19CDown","accSagittalFlat5v19CUp","accSagittalSharp23CDown","accSagittalFlat23CUp","accSagittalSharp23CUp","accSagittalFlat23CDown","accSagittalSharp5v19CUp","accSagittalFlat5v19CDown","accSagittalSharp5v23SUp","accSagittalFlat5v23SDown","accSagittalDoubleSharp5v23SDown","accSagittalDoubleFlat5v23SUp","accSagittalDoubleSharp5v19CDown","accSagittalDoubleFlat5v19CUp","accSagittalDoubleSharp23CDown","accSagittalDoubleFlat23CUp","accSagittal19SchismaUp","accSagittal19SchismaDown","accSagittal17KleismaUp","accSagittal17KleismaDown","accSagittal143CommaUp","accSagittal143CommaDown","accSagittal11v49CommaUp","accSagittal11v49CommaDown","accSagittal19CommaUp","accSagittal19CommaDown","accSagittal7v19CommaUp","accSagittal7v19CommaDown","accSagittal49SmallDiesisUp","accSagittal49SmallDiesisDown","accSagittal23SmallDiesisUp","accSagittal23SmallDiesisDown","accSagittal5v13MediumDiesisUp","accSagittal5v13MediumDiesisDown","accSagittal11v19MediumDiesisUp","accSagittal11v19MediumDiesisDown","accSagittal49MediumDiesisUp","accSagittal49MediumDiesisDown","accSagittal5v49MediumDiesisUp","accSagittal5v49MediumDiesisDown","accSagittal49LargeDiesisUp","accSagittal49LargeDiesisDown","accSagittal11v19LargeDiesisUp","accSagittal11v19LargeDiesisDown","accSagittal5v13LargeDiesisUp","accSagittal5v13LargeDiesisDown","accSagittalSharp23SDown","accSagittalFlat23SUp","accSagittalSharp49SDown","accSagittalFlat49SUp","accSagittalSharp7v19CDown","accSagittalFlat7v19CUp","accSagittalSharp19CDown","accSagittalFlat19CUp","accSagittalSharp11v49CDown","accSagittalFlat11v49CUp","accSagittalSharp143CDown","accSagittalFlat143CUp","accSagittalSharp17kDown","accSagittalFlat17kUp","accSagittalSharp19sDown","accSagittalFlat19sUp","accSagittalSharp19sUp","accSagittalFlat19sDown","accSagittalSharp17kUp","accSagittalFlat17kDown","accSagittalSharp143CUp","accSagittalFlat143CDown","accSagittalSharp11v49CUp","accSagittalFlat11v49CDown","accSagittalSharp19CUp","accSagittalFlat19CDown","accSagittalSharp7v19CUp","accSagittalFlat7v19CDown","accSagittalSharp49SUp","accSagittalFlat49SDown","accSagittalSharp23SUp","accSagittalFlat23SDown","accSagittalSharp5v13MUp","accSagittalFlat5v13MDown","accSagittalSharp11v19MUp","accSagittalFlat11v19MDown","accSagittalSharp49MUp","accSagittalFlat49MDown","accSagittalSharp5v49MUp","accSagittalFlat5v49MDown","accSagittalSharp49LUp","accSagittalFlat49LDown","accSagittalSharp11v19LUp","accSagittalFlat11v19LDown","accSagittalSharp5v13LUp","accSagittalFlat5v13LDown","accSagittalDoubleSharp23SDown","accSagittalDoubleFlat23SUp","accSagittalDoubleSharp49SDown","accSagittalDoubleFlat49SUp","accSagittalDoubleSharp7v19CDown","accSagittalDoubleFlat7v19CUp","accSagittalDoubleSharp19CDown","accSagittalDoubleFlat19CUp","accSagittalDoubleSharp11v49CDown","accSagittalDoubleFlat11v49CUp","accSagittalDoubleSharp143CDown","accSagittalDoubleFlat143CUp","accSagittalDoubleSharp17kDown","accSagittalDoubleFlat17kUp","accSagittalDoubleSharp19sDown","accSagittalDoubleFlat19sUp","accSagittalShaftUp","accSagittalShaftDown","accSagittalAcute","accSagittalGrave","accSagittal1MinaUp","accSagittal1MinaDown","accSagittal2MinasUp","accSagittal2MinasDown","accSagittal1TinaUp","accSagittal1TinaDown","accSagittal2TinasUp","accSagittal2TinasDown","accSagittal3TinasUp","accSagittal3TinasDown","accSagittal4TinasUp","accSagittal4TinasDown","accSagittal5TinasUp","accSagittal5TinasDown","accSagittal6TinasUp","accSagittal6TinasDown","accSagittal7TinasUp","accSagittal7TinasDown","accSagittal8TinasUp","accSagittal8TinasDown","accSagittal9TinasUp","accSagittal9TinasDown","accSagittalFractionalTinaUp","accSagittalFractionalTinaDown","accidentalNarrowReversedFlat","accidentalNarrowReversedFlatAndFlat","accidentalWilsonPlus","accidentalWilsonMinus","articulations","between_lines","av","aboveCode","belowCode","ao","ah","am","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","Tables","MUSIC_FONT_STACK","clef","keyOctaveGlyph","params","options","octave_shift","duration","sanitizeDuration","pieces","toUpperCase","clefProperties","stroke","int_value","customNoteHeadProps","glyphName","codeNoteHead","displaced","integer","noteValue","fret","scale","glyph","shift_y","glyphMetrics","Glyph","TABLATURE_FONT_SCALE","textWidth","getWidth","artic","spec","keySpec","notes","acc_list","durationNumber","durationToFraction","ticks","durationCodes","glyphTypeProperties","code_head","common","NOTATION_FONT_SCALE","SOFTMAX_FACTOR","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RENDER_PRECISION_PLACES","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalMap","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","unicode","sharp","String","fromCharCode","flat","natural","triangle","degrees","circle","validTypes","m","ci","cx","sf","sb","sq","tu","td","TIME4_4","num_beats","beat_value","stem","stem_offset","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","leger_code_head","beam_count","stem_beam_extension","code_flag_upstem","code_flag_downstem","OutlineCode","ModifierPosition","GlyphCacheEntry","fontStack","point","loadMetrics","bbox","getOutlineBoundingBox","outline","x_shift","y_shift","lookupFontMetric","GlyphOutline","originX","originY","precision","round","nextX","nextY","parts","MOVE","LINE","QUADRATIC","BEZIER","topGlyphs","botGlyphs","originShift","setOptions","reset","lookupGlyph","x_min","x_max","ha","cached_outline","ctx","x_pos","y_pos","cache","lookup","customScale","renderOutline","go","beginPath","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","fill","bboxComp","penX","penY","getCode","setPoint","setStave","stave","getXShift","setXShift","getYshift","setYShift","checkMetrics","metricsScale","setOriginX","xShift","setOriginY","yShift","setOrigin","render","xPos","yPos","checkStave","renderToStave","getYForGlyphs","Map","entries","CURRENT_CACHE_KEY","entry","Modifier","text_line","Position","LEFT","spacingFromNextModifier","PositionString","center","CENTER","above","ABOVE","below","BELOW","left","right","RIGHT","setWidth","getNote","note","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifierContext","checkModifierContext","setModifierContext","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setXOffset","Music","NUM_TONES","canonical_notes","roots","root_values","root_indices","diatonic_intervals","diatonic_accidentals","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","noteValues","root_index","cn","cb","cbb","dn","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","match","exec","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySignature","keySigParts","scaleName","keySigString","noteLocation","scaleMap","rootName","noteName","L","DEBUG","render_options","font_scale","parenLeftPadding","parenRightPadding","accidentalCodes","cautionary","state","musicFont","currentMusicFont","noteheadAccidentalPadding","leftShift","left_shift","accidentalSpacing","additionalPadding","accList","prevNote","shiftL","props","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","sort","lineList","previousLine","accShift","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","clearance","clearanceRequired","collision","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","indexOf","getModifiers","modifier","splice","addModifier","getGraceNotes","fontScale","parenLeft","parenRight","parenWidth","setAsCautionary","start","getModifierStartXY","accX","accY","Stem","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","UP","DOWN","WIDTH","HEIGHT","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","getHeight","y_offset","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","min","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stem_x","stem_y","y_base_offset","stemletYOffset","openGroup","pointerBBox","closeGroup","TextFormatter","textWidthCache","formatterInfo","serifs","monospaced","italic","bold","superscriptOffset","subscriptOffset","maxSizeGlyph","cacheKey","updateParams","registeredFonts","requestedFont","candidates","requestedFamilies","requestedFamily","startsWith","formatter","values","isBold","isItalic","perfectMatch","find","partialMatch","fontSizeInPt","overwrite","updateCacheKey","BOLD","getGlyphMetrics","character","maxHeight","getWidthForCharacterInEm","advanceWidth","getWidthForTextInEm","cachedWidths","getWidthForTextInPx","AnnotationHorizontalJustify","AnnotationVerticalJustify","horizontalJustification","verticalJustification","TOP","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","textFormatter","create","verticalSpaceNeeded","glyphWidth","getGlyph","stemDirection","hasStem","getStemDirection","lines","draw_stem","getStem","getNoteType","getNumLines","VerticalJustify","noteLine","getLineNumber","leastString","top_text_line","BOTTOM","greatestString","curBottom","rightOverlap","right_shift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","text_width","measureText","text_height","getStemX","stem_ext","spacing","has_stem","checkStem","getYs","reduce","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","fillText","HorizontalJustify","centerStem","CENTER_STEM","top","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveOrGraceNote","Articulation","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","articulationCodes","textLine","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","padding","stemTipY","stemBaseY","getTopY","INITIAL_OFFSET","getBottomY","offsetDirection","articLine","snappedLine","snapLineToStaff","setRawFont","drawDot","color","arc","closePath","Tickable","_preFormatted","_postFormatted","intrinsicTicks","tickMultiplier","modifiers","tupletStack","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","centerXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","pop","setTuplet","addToModifierContext","mc","addMember","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","noteStruct","parsedNoteStruct","parseNoteStruct","JSON","stringify","keyProps","noteType","customTypes","duration_override","getGlyphProps","customGlyphs","playNote","leftDisplacedHeadPx","rightDisplacedHeadPx","annotation_spacing","glyph_font_scale","stroke_px","xStart","xPre1","xAbs","xPost1","notePx","xPost2","xEnd","xFreedomRight","xWidth","yy","spaceDeviation","durationString","dots","durationProps","parseDuration","durationToTicks","currentTicks","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getGlyphWidth","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","filter","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","getMembers","getState","glyphPx","getNoteStartX","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifierPosition","BarlineType","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","SymbolTypes","SymbolModifiers","StaveModifier","placeGlyphOnLine","customShift","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","thickness","TYPE","widths","SINGLE","DOUBLE","END","REPEAT_BEGIN","REPEAT_END","REPEAT_BOTH","NONE","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","setType","typeString","single","double","end","repeatBegin","repeatEnd","repeatBoth","none","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","staveCtx","botY","getBottomLineBottomY","fillRect","begin","dot_x","dot_radius","dot_y","BarNote","barline","Bend","release","phrase","tap","line_width","line_style","bend_width","release_width","updateWidth","bends","last_width","stringPos","setTap","getText","getTextHeight","totalWidth","additional_width","draw_width","lowestY","bend_height","annotation_y","renderBend","cp_x","cp_y","renderRelease","renderArrowHead","yBase","renderText","render_x","last_bend","last_bend_draw_width","last_drawn_width","ChordSymbol","symbolBlocks","horizontal","vertical","useKerning","reportWidth","superSubRatio","global","NO_TEXT_FORMAT","val","noFormat","glyphCode","engravingFontResolution","spacingBetweenBlocks","metric","getMetricForGlyph","yOffset","leftSideBearing","kerningOffset","chordSymbol","lowerKerningText","upperKerningText","symbolModifier","SUPERSCRIPT","SUBSCRIPT","minPadding","symbols","nonSuperWidth","symbol","fontAdj","scaleSize","glyphAdj","symbolWidth","lineSpaces","vAlign","j","sup","isSuperscript","sub","isSubscript","superSubScale","adj","symbolType","GLYPH","superSubFontSize","getWidthForGlyph","getYShiftForGlyph","getXShiftForGlyph","TEXT","getYOffsetForText","over","prev","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","getReportWidth","getHorizontal","setReportWidth","barIndex","findIndex","xoff","yoff","symIndex","accum","getKerningAdjustment","currSymbol","prevSymbol","adjustment","preKernUpper","preKernLower","some","xx","kerningOffsetPixels","getSymbolBlock","_c","symbolBlock","glyphArgs","glyphPoints","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","yMax","y_max","stem_base","isSuper","isSub","curY","smallerFontSize","diminished","dim","halfDiminished","augmented","majorSeventh","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","symbolTypes","symbolModifiers","radius","all","dot","setDotShiftY","dot_list","max_shift_map","note_id","dot_shift","x_width","last_line","last_note","prev_dotted_space","half_shiftY","forceFlagRight","FretHandFinger","finger","x_offset","nums","nums_list","prev_note","shiftLeft","shiftRight","pos","textHeight","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","lastLine","lastNote","num_shift","numWidth","fingerings","fingeringString","number","Fingering","fingering","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","NoteHead","custom_glyph","stem_up_x_offset","stem_down_x_offset","note_type","glyph_code","custom_glyph_code","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","fontShift","displacedFontShift","half_spacing","min_y","getYForNote","head_x","categorySuffix","staveSpace","durationToNumber","breve_lines","drawSlashNoteHead","renderGlyph","setStem","buildStem","buildFlag","hasFlag","flagCode","getBaseCustomNoteHeadGlyph","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","setStemDirection","offsets","offsetYBaseStemUp","offsetYTopStemUp","offsetYBaseStemDown","offsetYTopStemDown","getCenterGlyphX","stem_extension_override","setStemLength","drawStem","stemOptions","shiftRestVertical","dir","delta","maxLine","minLine","setKeyLine","getKeyLine","sortedKeyProps","ledgerLineStyle","use_default_head_x","_noteHeads","LEDGER_LINE_OFFSET","calculateKeyProps","auto_stem","autoStem","STEM_UP","STEM_DOWN","minNoteheadPadding","notesList","minL","stemMax","stemMin","maxL","isrest","voice_shift","getVoiceShiftWidth","is_displaced","noteU","noteM","noteL","voiceXShift","lineSpacing","lineDiff","whiteNoteHeadCount","blackNoteHeadCount","centerRest","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","head","calcNoteDisplacements","noteProps","notehead","calculateOptimalStemDirection","keyProperties","minY","maxY","halfLineSpacing","frac","resultLine","thisLine","isChord","getNoteHeadBounds","setNoteDisplaced","getRightShift","restLine","isInnerNoteIndex","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","getFlagStyle","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","yTop","Infinity","yBottom","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","noteHeads","note_heads","drawLedgerLines","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","drawModifiers","noteheadParam","noteheadStyle","hasNoBeam","drawFlag","_d","_e","noteStemHeight","flagX","flagY","getStaveNoteScale","drawNoteHeads","super_stem_extension","mid_line_distance","lines_over_octave_from_mid_line","spacing_between_lines","xBegin","shouldRenderStem","stemX","StaveTie","setNotes","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","first_note","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","first_x_px","first_y_px","last_y_px","top_cp_y","bottom_cp_y","center_x","getNotes","getTieStartX","getTieEndX","TabTie","VoiceMode","Voice","time","voiceTime","resolutionMultiplier","mode","STRICT","ticksUsed","largestTickWidth","softmaxFactor","totalTicks","smallestTickCount","Mode","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","tickable","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","reCalculateExpTicksUsed","expTicksUsed","softmax","tickValue","v","exp","addTickable","addTickables","grace_notes","show_slur","slur","slur_y_shift","beams","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","Formatter","joinVoices","format","getMinTotalWidth","beamNotes","Beam","beam_width","partial_beam_length","graceNote","TieClass","NoteSubGroup","groups","group","TickContext","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","totalLeftPx","totalRightPx","tContexts","tContext","contexts","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","getCurrentTick","setCurrentTick","tick","Ornament","delayed","accidentalLowerPadding","accidentalUpperPadding","ornament","ornamentCodes","adjustForStemDirection","reportedWidth","stemUpYOffset","ornamentAlignWithNoteHead","ornamentNoteTransition","ornamentRelease","ornamentAttack","ornamentArticulation","jazzOrnaments","setDelayed","setUpperAccidental","accid","accidentalUpper","setLowerAccidental","accidentalLower","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","nextContext","getNextContext","Parenthesis","parentheses","x_widthL","x_widthR","parenthesis","isHTMLCanvas","HTMLCanvasElement","toDataURL","isHTMLDiv","HTMLDivElement","appendChild","CanvasContext","context2D","canvas","CANVAS_BROWSER_SIZE_LIMIT","limit","clearRect","cls","setBackgroundFillStyle","blur","getTransform","setLineCap","capType","lineCap","setLineDash","dash","resize","devicePixelRatio","sanitizeCanvasDims","rect","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","ATTRIBUTES_TO_IGNORE","path","SVG_NS","TWO_PI","SVGContext","backgroundFillStyle","fontCSSString","svg","parent","pen","defaultFontAttributes","attributes","shadow_attributes","state_stack","svgElementType","createElementNS","lineDash","applyAttributes","visibleWidth","visibleHeight","setViewBox","viewBox_or_minX","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","removeChild","rectangle","x0","cos","y0","sin","tmpStartTest","tmpEndTest","large","sweep","getShadowStyle","sa","measureTextCache","txt","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","TextJustification","VoltaType","measureImpl","getBBox","Renderer","arg0","arg1","backend","maybeElement","Backends","CANVAS","SVG","elementId","background","renderer","lastContext","buildContext","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","LineEndType","StringNumber","string_number","dashed","leg","drawCircle","stringNumber","shift_left","glyphLine","num_shiftR","num_width","setLineEndType","setStringNumber","setLastNote","setDashed","setDrawCircle","stemPadding","verticalPadding","leftPadding","rightPadding","len","pattern","drawDashedLine","Stroke","all_voices","strokes","strokeList","string","getPositions","strokeShift","addEndNote","note_end","line_space","arrow","arrow_shift_x","arrow_y","text_y","Type","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","Vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vibratos","vibrato","setHarsh","vx","vy","renderVibrato","opts","num_waves","ModifierContext","members","formatted","member","getLeftShift","Clef","types","tab","attachment","numLines","shiftY","KeySignature","cancelKeySpec","alterKeySpec","setKeySig","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","xPosition","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","concat","addToStave","convertAccLines","customLines","offset","alterKey","convertToAlterAccList","firstAccidentalType","cancelAccList","getEndClef","getClef","Repetition","symbol_type","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSignoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","draw_coda","text_x","symbol_x","modifierWidth","getVerticalBarWidth","StaveSection","section","drawRect","shift_x","setStaveSection","textMeasurements","StaveTempo","tempo","setTempo","bpm","stem_height","TextNote","superscript","subscript","smooth","justification","struct","GLYPHS","segno","mordent_upper","mordent_lower","p","z","coda","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","Justification","StaveText","setStaveText","setText","getBottomLineY","Volta","volta","top_y","vert_height","BEGIN_END","TimeSignatureGlyph","timeSignature","topDigits","botDigits","topWidth","timeSigType","topGlyph","botWidth","botGlyph","topStartX","botStartX","start_x","topLine","bottomLine","TimeSignature","timeSpec","customPadding","validate_args","fontLineShift","parseTimeSpec","numbers","test","assertIsValidTimeSig","makeTimeSignatureGlyph","getInfo","setTimeSig","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","Stave","end_x","measure","endClef","vertical_bar_width","num_lines","fill_style","left_bar","right_bar","spacing_between_lines_px","space_above_staff_ln","space_below_staff_ln","top_text_position","bottom_text_position","line_config","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","defaultPadding","setDefaultLedgerLineStyle","visible","setNoteStartX","getNoteEndX","setNumLines","mod","setMeasure","getMeasure","getModifierXShift","begBarline","setRepetitionType","setVoltaType","number_t","setSection","staveSection","headroom","getLineForY","setBegBarType","setEndBarType","setClef","clefSpec","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","staves","maxX","drawBoldDoubleLine","topX","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","texts","newType","content","SINGLE_RIGHT","THIN_DOUBLE","attachment_height","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","sumArray","arr","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","noteIndex","formatterOptions","globalSoftmax","maxIterations","justifyWidth","totalCost","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","array","list","modifierContexts","contextGaps","total","gaps","lossHistory","paddingBetween","accumulator","stavePadding","gap","toFixed","auto_beam","align_rests","applyAndGetBeams","formatToStave","tabstave","tabnotes","autobeam","notevoice","tabvoice","alignAllNotes","alignTuplets","currTickable","prevTickable","alignRests","AlignRestsToNotes","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","tickToContextMap","integerTicks","staveTickToContextMap","newContext","makeContext","addToContext","tickList","createContexts","contextArray","getTickContexts","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","calcMinDistance","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","tune","alpha","current","cost","optionsParam","TupletLocation","Tuplet","numerator_glyphs","denom_glyphs","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","ratioed","setTupletLocation","location","LOCATION_TOP","resolveGlyphs","attach","LOCATION_BOTTOM","NESTING_OFFSET","detach","setBracketed","setRatioed","getBeatsOccupied","setBeatsOccupied","beats","setNotesOccupied","unshift","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nested_tuplet_y_offset","topModifierOffset","modLines","modY","noteHeadOffset","stemOffset","lineCheck","nn","bottom_y","addGlyphWidth","notation_start_x","colon_x","colon_radius","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_RIGHT","BEAM_BOTH","slope","forcedPartialDirections","stem_weight","memo","break_on_indices","max_slope","min_slope","slope_iterations","slope_cost","show_stemlets","stemlet_extension","flat_beams","min_flat_beam_offset","time_sig","beatTotal","beatValue","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","vf_notes","unbeamable","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","secondary_breaks","secondary_break_ticks","flat_beam_offset","beamCount","breakSecondaryAt","indices","setPartialBeamSideAt","side","unsetPartialBeamSideAt","getSlopeY","calculateSlope","firstNote","initialSlope","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","totalBeamWidth","lookupBeamDirection","prev_tick","next_tick","forcedBeamDirection","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","getBeamLines","tick_of_duration","beam_started","beam_lines","current_beam","previous_should_break","tick_tally","should_break","next_note","beam_alone","beam_direction","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","ClefNote","clef_obj","abs_x","Crescendo","extend_left","extend_right","decrescendo","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","renderHairpin","CurvePosition","Curve","from","to","NEAR_HEAD","position_end","invert","cps","nearHead","nearTop","NEAR_TOP","renderCurve","first_x","first_y","last_x","last_y","cp0x","cp0y","cp_spacing","end_metric","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","bind","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","standardAccidentals","notePiece","GhostNote","buildAndAttach","setId","commaSeparatedRegex","setClass","defaults","easyScoreHook","throwOnError","parser","ERROR_MSG","parameter","GlyphNote","ignoreTicks","setGlyph","SCALE","slash","ret","staveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beam_slope","scaleX","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","KeySigNote","semibreve_rest","MultiMeasureRest","number_of_measures","xs","hasPaddingLeft","hasPaddingRight","hasLineThickness","hasSymbolSpacing","padding_left","padding_right","line_thickness","symbol_spacing","use_symbols","show_number","number_line","number_glyph_point","serif_thickness","semibreve_rest_glyph_scale","getXs","drawLine","spacingBetweenLines","lineThicknessHalf","serifThickness","bot","leftIndented","rightIndented","lineTop","lineBottom","drawSymbols","n4","n2","n1","get_semibreve_rest","rest_scale","rest_width","yMiddle","timeSig","drawPedalGlyph","glyph_data","PedalMarking","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","pedal","MIXED","setCustomText","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","pedal_depress","pedal_release","mixed","CODES","RepeatNote","drawArrowHead","StaveLine","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","applyLineStyle","applyFontStyle","drawArrowLine","pt1","pt2","both_arrows","distance","ratio","end_y","start_y","line_angle","angle1","angle2","top_x","bottom_x","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","vertical_position","System","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","options_details","allVoices","allStaves","debugNoteMetricsYs","part","lastY","formatBegModifiers","plotDebugging","plotMetrics","positions","ghost","draw_dots","draw_stem_through_stave","setGhost","tabToGlyph","getStemY","stemDownLine","stemStartLine","flag_x","flag_y","drawStemThrough","stemThrough","stemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","strings","containsLastString","containsFirstString","line_ys","isTopBound","isBottomBound","getPartialStemLines","strings_used","stem_through","getUnusedStringGroups","drawPositions","tab_x","render_stem","TabStave","addTabGlyph","TextBracket","TextBracketPosition","stop","show_bracket","underline_superscript","Positions","PositionsString","main_measure","main_width","main_height","super_y","super_measure","super_width","super_height","line_y","TextDynamics","sequence","glyph_font_size","total_width","letter","letter_x","current_letter","TimeSigNote","timeSigInfo","VibratoBracket","bracket_data","stop_x","Factory","renderQ","systems","initRenderer","getVoices","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","kerning","upperAccidental","lowerAccidental","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","curve","tie","vibratoBracket","textBracket","system","GraceTabNote","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","StaveHairpin","hairpin","left_shift_px","right_shift_px","right_shift_ticks","left_shift_ticks","ppt","pixelsPerTick","l_shift_px","r_shift_px","hairpin_options","setRenderOptions","dis","staff_height","l_shift","r_shift","CRESC","DECRESC","TabSlide","first_fret","last_fret","SLIDE_UP","SLIDE_DOWN","slide_y","Tremolo","y_spacing_scale","extra_stroke_scale","y_spacing","Tuning","tuningString","tuningValues","setTuning","names","standard","dagdad","dropd","standardBanjo","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","integerToNote","Flow","BUILD","VERSION","DATE","fontNames","fontModuleOrPath","hasKeySignature","getKeySignatures","CustomFont","noteheadSquareWhite","noteheadSquareBlack","accidentalBuyukMucennebFlat","accidentalBakiyeFlat","accidentalKucukMucennebSharp","accidentalKoron","accidentalSori","vexAccidentalMicrotonal2","vexAccidentalMicrotonal3","vexAccidentalMicrotonal4","vexNoteHeadRectBlack","vexNoteHeadRectWhite","CustomMetrics","smufl","GonvilleFont","bracketTop","bracketBottom","barlineTick","breathMarkTick","gClef","cClef","fClef","unpitchedPercussionClef1","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","timeSigPlus","timeSigPlusSmall","timeSigMinus","timeSigParensRight","timeSigParensRightSmall","timeSigParensLeft","timeSigParensLeftSmall","noteheadDoubleWhole","noteheadWhole","noteheadHalf","noteheadBlack","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalFlat","accidentalNatural","accidentalSharp","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalKomaSharp","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articStaccatissimoAbove","articStaccatissimoBelow","articMarcatoAbove","articMarcatoBelow","fermataAbove","fermataBelow","fermataLongAbove","fermataLongBelow","fermataVeryLongAbove","fermataVeryLongBelow","fermataShortAbove","fermataShortBelow","breathMarkComma","breathMarkUpbow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restWholeLegerLine","restHalf","restHalfLegerLine","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentShortTrill","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedSnapPizzicatoBelow","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","wiggleArpeggiatoUp","arrowheadBlackUp","arrowheadBlackDown","vexAccidentalMicrotonal1","vexWiggleArpeggioUp","vexNoteHeadMutedBreve","cssFontWeight","ascender","underlinePosition","cssFontStyle","yMin","original_font_information","postscript_name","version_string","vendor_url","full_font_name","font_family_name","copyright","description","trademark","designer","designer_url","unique_font_identifier","license_url","license_description","manufacturer_name","font_sub_family_name","descender","lineHeight","underlineThickness","GonvilleMetrics","endPaddingMax","endPaddingMin","unalignedNotePadding","default","small","smuflCode","shiftX","lineCount","gracenote","pedalMarking","up","down","digits","tupletPoint","tremolo","offsetYStemUp","offsetYStemDown","offsetXStemUp","offsetXStemDown","grace","staveRepetition","symbolText","offsetX","offsetY","heightAdjustmentForFlag","custom","noteheadCircleXStemUp","noteheadXWholeStemUp","noteheadTriangleUpWholeStemUp","csymDiminished","csymHalfDiminished","csymAugmented","csymParensLeftTall","csymParensRightTall","csymBracketLeftTall","csymBracketRightTall","csymParensLeftVeryTall","csymParensRightVeryTall","csymDiagonalArrangementSlash","csymMinor","csymMajorSeventh","brassScoop","brassDoitMedium","brassFallLipShort","brassLiftMedium","brassFallRoughMedium","brassBend","brassMuteClosed","brassMuteOpen","brassFlip","brassJazzTurn","brassSmear","PetalumaScriptFont","y_min","$","I","J","K","N","O","Q","U","V","Y","Z","_","l","generatedOn","RobotoSlabFont","Vex","cmp","eq","newArr","last","canvasSelector","start_time","Date","getTime","setMusicFont","fontData","registerInfo","loadTextFonts"],"sourceRoot":""}