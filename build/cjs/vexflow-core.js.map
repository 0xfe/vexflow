{"version":3,"file":"vexflow-core.js","mappings":"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","sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/webpack/runtime/define property getters","webpack://Vex/webpack/runtime/global","webpack://Vex/webpack/runtime/hasOwnProperty shorthand","webpack://Vex/webpack/runtime/make namespace object","webpack://Vex/./src/typeguard.ts","webpack://Vex/./src/util.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/boundingboxcomputation.ts","webpack://Vex/./src/font.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/glyph.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/textformatter.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/rendercontext.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/parenthesis.ts","webpack://Vex/./src/web.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/timesigglyph.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/flow.ts","webpack://Vex/./src/version.ts","webpack://Vex/./src/fonts/petalumascript_glyphs.ts","webpack://Vex/./src/fonts/robotoslab_glyphs.ts","webpack://Vex/./src/fonts/sans_bold_text_metrics.ts","webpack://Vex/./src/fonts/sans_text_metrics.ts","webpack://Vex/./src/fonts/serif_text_metrics.ts","webpack://Vex/./src/vex.ts","webpack://Vex/./entry/vexflow-core.ts","webpack://Vex/./src/fonts/textfonts.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})((typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Use instead of `instanceof` as a more flexible type guard.\n * @param obj check if this object's CATEGORY matches the provided category.\n * @param category a string representing a category of VexFlow objects.\n * @param checkAncestors defaults to `true`, so we walk up the prototype chain to look for a matching `CATEGORY`.\n *        If `false`, we do not check the superclass or other ancestors.\n * @returns true if `obj` has a static `CATEGORY` property that matches `category`.\n */\nexport function isCategory(obj, category, checkAncestors = true) {\n    // obj is undefined, a number, a primitive string, or null.\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    // `obj.constructor` is a reference to the constructor function that created the `obj` instance.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\n    let constructorFcn = obj.constructor;\n    // Check if the object's static .CATEGORY matches the provided category.\n    if (checkAncestors) {\n        // Walk up the prototype chain to look for a matching obj.constructor.CATEGORY.\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        // Do not walk up the prototype chain. Just check this particular object's static .CATEGORY string.\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n    }\n}\nexport const isAccidental = (obj) => isCategory(obj, Category.Accidental);\nexport const isAnnotation = (obj) => isCategory(obj, Category.Annotation);\nexport const isBarline = (obj) => isCategory(obj, Category.Barline);\nexport const isDot = (obj) => isCategory(obj, Category.Dot);\nexport const isGraceNote = (obj) => isCategory(obj, Category.GraceNote);\nexport const isGraceNoteGroup = (obj) => isCategory(obj, Category.GraceNoteGroup);\nexport const isNote = (obj) => isCategory(obj, Category.Note);\nexport const isRenderContext = (obj) => isCategory(obj, Category.RenderContext);\nexport const isStaveNote = (obj) => isCategory(obj, Category.StaveNote);\nexport const isStemmableNote = (obj) => isCategory(obj, Category.StemmableNote);\nexport const isTabNote = (obj) => isCategory(obj, Category.TabNote);\n// 'const' enums are erased by the TypeScript compiler. The string values are inlined at all the use sites.\n// See: https://www.typescriptlang.org/docs/handbook/enums.html#const-enums\nexport var Category;\n(function (Category) {\n    Category[\"Accidental\"] = \"Accidental\";\n    Category[\"Annotation\"] = \"Annotation\";\n    Category[\"Articulation\"] = \"Articulation\";\n    Category[\"Barline\"] = \"Barline\";\n    Category[\"BarNote\"] = \"BarNote\";\n    Category[\"Beam\"] = \"Beam\";\n    Category[\"Bend\"] = \"Bend\";\n    Category[\"ChordSymbol\"] = \"ChordSymbol\";\n    Category[\"Clef\"] = \"Clef\";\n    Category[\"ClefNote\"] = \"ClefNote\";\n    Category[\"Crescendo\"] = \"Crescendo\";\n    Category[\"Curve\"] = \"Curve\";\n    Category[\"Dot\"] = \"Dot\";\n    Category[\"Element\"] = \"Element\";\n    Category[\"Fraction\"] = \"Fraction\";\n    Category[\"FretHandFinger\"] = \"FretHandFinger\";\n    Category[\"GhostNote\"] = \"GhostNote\";\n    Category[\"Glyph\"] = \"Glyph\";\n    Category[\"GlyphNote\"] = \"GlyphNote\";\n    Category[\"GraceNote\"] = \"GraceNote\";\n    Category[\"GraceNoteGroup\"] = \"GraceNoteGroup\";\n    Category[\"GraceTabNote\"] = \"GraceTabNote\";\n    Category[\"KeySignature\"] = \"KeySignature\";\n    Category[\"KeySigNote\"] = \"KeySigNote\";\n    Category[\"Modifier\"] = \"Modifier\";\n    Category[\"MultiMeasureRest\"] = \"MultiMeasureRest\";\n    Category[\"Note\"] = \"Note\";\n    Category[\"NoteHead\"] = \"NoteHead\";\n    Category[\"NoteSubGroup\"] = \"NoteSubGroup\";\n    Category[\"Ornament\"] = \"Ornament\";\n    Category[\"Parenthesis\"] = \"Parenthesis\";\n    Category[\"PedalMarking\"] = \"PedalMarking\";\n    Category[\"RenderContext\"] = \"RenderContext\";\n    Category[\"RepeatNote\"] = \"RepeatNote\";\n    Category[\"Repetition\"] = \"Repetition\";\n    Category[\"Stave\"] = \"Stave\";\n    Category[\"StaveConnector\"] = \"StaveConnector\";\n    Category[\"StaveHairpin\"] = \"StaveHairpin\";\n    Category[\"StaveLine\"] = \"StaveLine\";\n    Category[\"StaveModifier\"] = \"StaveModifier\";\n    Category[\"StaveNote\"] = \"StaveNote\";\n    Category[\"StaveSection\"] = \"StaveSection\";\n    Category[\"StaveTempo\"] = \"StaveTempo\";\n    Category[\"StaveText\"] = \"StaveText\";\n    Category[\"StaveTie\"] = \"StaveTie\";\n    Category[\"Stem\"] = \"Stem\";\n    Category[\"StemmableNote\"] = \"StemmableNote\";\n    Category[\"StringNumber\"] = \"StringNumber\";\n    Category[\"Stroke\"] = \"Stroke\";\n    Category[\"System\"] = \"System\";\n    Category[\"TabNote\"] = \"TabNote\";\n    Category[\"TabSlide\"] = \"TabSlide\";\n    Category[\"TabStave\"] = \"TabStave\";\n    Category[\"TabTie\"] = \"TabTie\";\n    Category[\"TextBracket\"] = \"TextBracket\";\n    Category[\"TextDynamics\"] = \"TextDynamics\";\n    Category[\"TextNote\"] = \"TextNote\";\n    Category[\"Tickable\"] = \"Tickable\";\n    Category[\"TimeSignature\"] = \"TimeSignature\";\n    Category[\"TimeSigNote\"] = \"TimeSigNote\";\n    Category[\"Tremolo\"] = \"Tremolo\";\n    Category[\"Tuplet\"] = \"Tuplet\";\n    Category[\"Vibrato\"] = \"Vibrato\";\n    Category[\"VibratoBracket\"] = \"VibratoBracket\";\n    Category[\"Voice\"] = \"Voice\";\n    Category[\"Volta\"] = \"Volta\";\n})(Category || (Category = {}));\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// Note: Keep this module free of imports to reduce the chance of circular dependencies.\n/** `RuntimeError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\n/** VexFlow can be used outside of the browser (e.g., Node) where `window` may not be defined. */\n// eslint-disable-next-line\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\n/**\n * Check that `x` is of type `T` and not `undefined`.\n * If `x` is `undefined`, throw a RuntimeError with the optionally provided error code and message.\n */\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\n/** Default log function sends all arguments to console. */\n// eslint-disable-next-line\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\n/** Dump warning to console. */\n// eslint-disable-next-line\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a, b) {\n    let mid_line = b + (a - b) / 2;\n    if (mid_line % 2 > 0) {\n        mid_line = roundN(mid_line * 10, 5) / 10;\n    }\n    return mid_line;\n}\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text) {\n    return `vf-${text}`;\n}\n/**\n * Convert an arbitrary angle in radians to the equivalent one in the range [0, pi).\n */\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\n/**\n * Return the sum of an array of numbers.\n */\nexport function sumArray(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// Author: Joshua Koo / @zz85\n// Author: @incompleteopus\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/** Fraction represents a rational number. */\nclass Fraction {\n    static get CATEGORY() {\n        return Category.Fraction;\n    }\n    /**\n     * GCD: Greatest common divisor using the Euclidean algorithm.\n     * Note: GCD(0, 0) => 0 and GCD(0, n) => n.\n     */\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    /** LCM: Lowest common multiple. */\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    /** Lowest common multiple for more than two numbers. */\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            // args.shift() removes the first number.\n            // LCM the first number with the rest of the numbers.\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    /** Set the numerator and denominator. */\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    /** Set the numerator and denominator. */\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    /** Return the value of the fraction. */\n    value() {\n        return this.numerator / this.denominator;\n    }\n    /** Simplify numerator and denominator using GCD. */\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    /** Add value of another fraction. */\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Substract value of another fraction. */\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Multiply by value of another fraction. */\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    /** Divide by value of another Fraction. */\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    /** Simplify both sides and check if they are equal. */\n    equals(compare) {\n        const a = Fraction.__staticFractionA.copy(compare).simplify();\n        const b = Fraction.__staticFractionB.copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    /** Greater than operator. */\n    greaterThan(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    /** Greater than or equals operator. */\n    greaterThanEquals(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    /** Less than operator. */\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    /** Less than or equals operator. */\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    /** Return a new copy with current values. */\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    /** Copy value of another fraction. */\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other, 1);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    /** Return the integer component (eg. 5/2 => 2). */\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    /** Return the remainder component (eg. 5/2 => 1). */\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    /** Calculate absolute value. */\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    /** Return a raw string representation (eg. \"5/2\"). */\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    /** Return a simplified string respresentation. */\n    toSimplifiedString() {\n        return Fraction.__staticFractionTmp.copy(this).simplify().toString();\n    }\n    /** Return string representation in mixed form. */\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = Fraction.__staticFractionTmp.copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    /** Parse a fraction string. */\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\n// Cached objects for comparisons.\nFraction.__staticFractionA = new Fraction();\nFraction.__staticFractionB = new Fraction();\nFraction.__staticFractionTmp = new Fraction();\nexport { Fraction };\n/** Helper function to extract the numerator and denominator from another fraction. */\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        // Both params are numbers, so we return them as [numerator, denominator].\n        return [n, d];\n    }\n    else {\n        // First param is a Fraction object. We ignore the second param.\n        return [n.numerator, n.denominator];\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nexport class BoundingBox {\n    /**\n     * Create a new copy.\n     */\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    /** Get x position. */\n    getX() {\n        return this.x;\n    }\n    /** Get y position. */\n    getY() {\n        return this.y;\n    }\n    /** Get width. */\n    getW() {\n        return this.w;\n    }\n    /** Get height. */\n    getH() {\n        return this.h;\n    }\n    /** Set x position. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Set y position. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Set width. */\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    /** Set height. */\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    /** Move to position. */\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    /** Clone. */\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    /**\n     * Merge my box with given box. Creates a bigger bounding box unless\n     * the given box is contained in this one.\n     */\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const new_x = this.x < that.x ? this.x : that.x;\n        const new_y = this.y < that.y ? this.y : that.y;\n        const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n        const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n        this.x = new_x;\n        this.y = new_y;\n        this.w = new_w;\n        this.h = new_h;\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n/**\n * BoundingBoxComputation computes metrics for a bounding box by continuously\n * taking canvas path commands.\n *\n * Warning: This class is merely a crutch to get bounding box information without\n * explicit metadata. This is likely to get deprecated following SMuFL support.\n *\n * based on: https://github.com/canvg/canvg/blob/master/src/BoundingBox.ts (MIT License)\n */\nexport class BoundingBoxComputation {\n    constructor() {\n        this.x1 = Number.NaN;\n        this.y1 = Number.NaN;\n        this.x2 = Number.NaN;\n        this.y2 = Number.NaN;\n    }\n    /** Get calculated X1. */\n    getX1() {\n        return this.x1;\n    }\n    /** Get calculated Y1. */\n    getY1() {\n        return this.y1;\n    }\n    /** Get calculated width. */\n    width() {\n        return this.x2 - this.x1;\n    }\n    /** Get calculated height. */\n    height() {\n        return this.y2 - this.y1;\n    }\n    /** Add point to BoundingBox. */\n    addPoint(x, y) {\n        if (isNaN(this.x1) || x < this.x1)\n            this.x1 = x;\n        if (isNaN(this.x2) || x > this.x2)\n            this.x2 = x;\n        if (isNaN(this.y1) || y < this.y1)\n            this.y1 = y;\n        if (isNaN(this.y2) || y > this.y2)\n            this.y2 = y;\n    }\n    /** Add X to BoundingBox. */\n    addX(x) {\n        this.addPoint(x, this.y1);\n    }\n    /** Add Y to BoundingBox. */\n    addY(y) {\n        this.addPoint(this.x1, y);\n    }\n    /** Add quadratic curve to BoundingBox. */\n    addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n        this.addPoint(p0x, p0y);\n        this.addPoint(p2x, p2y);\n        const p01x = p1x - p0x;\n        const p12x = p2x - p1x;\n        let denom = p01x - p12x;\n        if (denom != 0) {\n            const t = p01x / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addX(it * it * p0x + 2 * it * t * p1x + t * t * p2x);\n            }\n        }\n        const p01y = p1y - p0y;\n        const p12y = p2y - p1y;\n        denom = p01y - p12y;\n        if (denom != 0) {\n            const t = p01y / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addY(it * it * p0y + 2 * it * t * p1y + t * t * p2y);\n            }\n        }\n    }\n    /** Add bezier curve to BoundingBox. */\n    addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n        // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n        const p0 = [p0x, p0y];\n        const p1 = [p1x, p1y];\n        const p2 = [p2x, p2y];\n        const p3 = [p3x, p3y];\n        let i;\n        this.addPoint(p0[0], p0[1]);\n        this.addPoint(p3[0], p3[1]);\n        const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n            3 * Math.pow(1 - t, 2) * t * p1[i] +\n            3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n            Math.pow(t, 3) * p3[i];\n        for (i = 0; i <= 1; i++) {\n            const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            const c = 3 * p1[i] - 3 * p0[i];\n            if (a === 0) {\n                if (b === 0)\n                    continue;\n                const t = -c / b;\n                if (0 < t && t < 1) {\n                    if (i === 0)\n                        this.addX(f(t, i));\n                    if (i === 1)\n                        this.addY(f(t, i));\n                }\n                continue;\n            }\n            const b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0)\n                continue;\n            const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                if (i === 0)\n                    this.addX(f(t1, i));\n                if (i === 1)\n                    this.addY(f(t1, i));\n            }\n            const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                if (i === 0)\n                    this.addX(f(t2, i));\n                if (i === 1)\n                    this.addY(f(t2, i));\n            }\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defined } from './util';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\n// Internal <span></span> element for parsing CSS font shorthand strings.\nlet fontParser;\nconst Fonts = {};\nclass Font {\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of pixels that is equivalent to `fontSize`\n     */\n    static convertSizeToPixelValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of points that is equivalent to `fontSize`\n     */\n    static convertSizeToPointValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param f\n     * @param size\n     * @param weight\n     * @param style\n     * @returns the `size` field will include the units (e.g., '12pt', '16px').\n     */\n    static validate(f, size, weight, style) {\n        // If f is a string but all other arguments are undefined, we assume that\n        // f is CSS font shorthand (e.g., 'italic bold 10pt Arial').\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            // f is a FontInfo object, so we extract its fields.\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            // f is a string representing the font family name or undefined.\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Font.SANS_SERIF;\n        size = size !== null && size !== void 0 ? size : Font.SIZE + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        // If size is a number, we assume the unit is `pt`.\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        // If weight is a number (e.g., 900), turn it into a string representation of that number.\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        // At this point, `family`, `size`, `weight`, and `style` are all strings.\n        return { family, size, weight, style };\n    }\n    /**\n     * @param cssFontShorthand a string formatted as CSS font shorthand (e.g., 'italic bold 15pt Arial').\n     */\n    static fromCSSString(cssFontShorthand) {\n        // Let the browser parse this string for us.\n        // First, create a span element.\n        // Then, set its style.font and extract it back out.\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    /**\n     * @returns a CSS font shorthand string of the form `italic bold 16pt Arial`.\n     */\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = ''; // no space! Omit the style section.\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = ''; // no space! Omit the weight section.\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Font.SIZE + 'pt ';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            // size is already a string.\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Font.SANS_SERIF;\n        return `${style}${weight}${size}${family}`;\n    }\n    /**\n     * @param fontSize a number representing a font size, or a string font size with units.\n     * @param scaleFactor multiply the size by this factor.\n     * @returns size * scaleFactor (e.g., 16pt * 3 = 48pt, 8px * 0.5 = 4px, 24 * 2 = 48).\n     * If the fontSize argument was a number, the return value will be a number.\n     * If the fontSize argument was a string, the return value will be a string.\n     */\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, ''); // Remove all numbers, dots, spaces.\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    /**\n     * @param weight a string (e.g., 'bold') or a number (e.g., 600 / semi-bold in the OpenType spec).\n     * @returns true if the font weight indicates bold.\n     */\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            // a string can be 'bold' or '700'\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    /**\n     * @param style\n     * @returns true if the font style indicates 'italic'.\n     */\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    /**\n     * @param fontName\n     * @param woffURL The absolute or relative URL to the woff file.\n     * @param includeWoff2 If true, we assume that a woff2 file is in\n     * the same folder as the woff file, and will append a `2` to the url.\n     */\n    // Support distributions of the typescript compiler that do not yet include the FontFace API declarations.\n    // eslint-disable-next-line\n    // @ts-ignore\n    static loadWebFont(fontName, woffURL, includeWoff2 = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const woff2URL = includeWoff2 ? `url(${woffURL}2) format('woff2'), ` : '';\n            const woff1URL = `url(${woffURL}) format('woff')`;\n            const woffURLs = woff2URL + woff1URL;\n            // eslint-disable-next-line\n            // @ts-ignore\n            const fontFace = new FontFace(fontName, woffURLs);\n            yield fontFace.load();\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.fonts.add(fontFace);\n            return fontFace;\n        });\n    }\n    /**\n     * Load the web fonts that are used by ChordSymbol. For example, `flow.html` calls:\n     *   `await Vex.Flow.Font.loadWebFonts();`\n     * Alternatively, you may load web fonts with a stylesheet link (e.g., from Google Fonts),\n     * and a @font-face { font-family: ... } rule in your CSS.\n     * If you do not load either of these fonts, ChordSymbol will fall back to Times or Arial,\n     * depending on the current music engraving font.\n     *\n     * You can customize `Font.WEB_FONT_HOST` and `Font.WEB_FONT_FILES` to load different fonts\n     * for your app.\n     */\n    static loadWebFonts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const host = Font.WEB_FONT_HOST;\n            const files = Font.WEB_FONT_FILES;\n            for (const fontName in files) {\n                const fontPath = files[fontName];\n                Font.loadWebFont(fontName, host + fontPath);\n            }\n        });\n    }\n    /**\n     * @param fontName\n     * @param data optionally set the Font object's `.data` property.\n     *   This is usually done when setting up a font for the first time.\n     * @param metrics optionally set the Font object's `.metrics` property.\n     *   This is usually done when setting up a font for the first time.\n     * @returns a Font object with the given `fontName`.\n     *   Reuse an existing Font object if a matching one is found.\n     */\n    static load(fontName, data, metrics) {\n        let font = Fonts[fontName];\n        if (!font) {\n            font = new Font(fontName);\n            Fonts[fontName] = font;\n        }\n        if (data) {\n            font.setData(data);\n        }\n        if (metrics) {\n            font.setMetrics(metrics);\n        }\n        return font;\n    }\n    /**\n     * Use `Font.load(fontName)` to get a Font object.\n     * Do not call this constructor directly.\n     */\n    constructor(fontName) {\n        this.name = fontName;\n    }\n    getName() {\n        return this.name;\n    }\n    getData() {\n        return defined(this.data, 'FontError', 'Missing font data');\n    }\n    getMetrics() {\n        return defined(this.metrics, 'FontError', 'Missing metrics');\n    }\n    setData(data) {\n        this.data = data;\n    }\n    setMetrics(metrics) {\n        this.metrics = metrics;\n    }\n    hasData() {\n        return this.data !== undefined;\n    }\n    getResolution() {\n        return this.getData().resolution;\n    }\n    getGlyphs() {\n        return this.getData().glyphs;\n    }\n    /**\n     * Use the provided key to look up a value in this font's metrics file (e.g., bravura_metrics.ts, petaluma_metrics.ts).\n     * @param key is a string separated by periods (e.g., stave.endPaddingMax, clef.lineCount.'5'.shiftY).\n     * @param defaultValue is returned if the lookup fails.\n     * @returns the retrieved value (or `defaultValue` if the lookup fails).\n     */\n    // eslint-disable-next-line\n    lookupMetric(key, defaultValue) {\n        const keyParts = key.split('.');\n        // Start with the top level font metrics object, and keep looking deeper into the object (via each part of the period-delimited key).\n        let currObj = this.getMetrics();\n        for (let i = 0; i < keyParts.length; i++) {\n            const keyPart = keyParts[i];\n            const value = currObj[keyPart];\n            if (value === undefined) {\n                // If the key lookup fails, we fall back to the defaultValue.\n                return defaultValue;\n            }\n            // The most recent lookup succeeded, so we drill deeper into the object.\n            currObj = value;\n        }\n        // After checking every part of the key (i.e., the loop completed), return the most recently retrieved value.\n        return currObj;\n    }\n    /** For debugging. */\n    toString() {\n        return '[' + this.name + ' Font]';\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// STATIC MEMBERS\n/** Default sans-serif font family. */\nFont.SANS_SERIF = 'Arial, sans-serif';\n/** Default serif font family. */\nFont.SERIF = 'Times New Roman, serif';\n/** Default font size in `pt`. */\nFont.SIZE = 10;\n// CSS Font Sizes: 36pt == 48px == 3em == 300% == 0.5in\n/** Given a length (for units: pt, px, em, %, in, mm, cm) what is the scale factor to convert it to px? */\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\n/**\n * Customize this field to specify a different CDN for delivering web fonts.\n * Alternative: https://cdn.jsdelivr.net/npm/vexflow-fonts@1.0.3/\n * Or you can use your own host.\n */\nFont.WEB_FONT_HOST = 'https://unpkg.com/vexflow-fonts@1.0.3/';\n/**\n * These font files will be loaded from the CDN specified by `Font.WEB_FONT_HOST` when\n * `await Font.loadWebFonts()` is called. Customize this field to specify a different\n * set of fonts to load. See: `Font.loadWebFonts()`.\n */\nFont.WEB_FONT_FILES = {\n    'Roboto Slab': 'robotoslab/RobotoSlab-Medium_2.001.woff',\n    PetalumaScript: 'petaluma/PetalumaScript_1.10_FS.woff',\n};\nexport { Font };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\nimport { RuntimeError } from './util';\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    static getDefaultRegistry() {\n        return Registry.defaultRegistry;\n    }\n    // If you call `enableDefaultRegistry`, any new elements will auto-register with\n    // the provided registry as soon as they're constructed.\n    static enableDefaultRegistry(registry) {\n        Registry.defaultRegistry = registry;\n    }\n    static disableDefaultRegistry() {\n        Registry.defaultRegistry = undefined;\n    }\n    constructor() {\n        this.index = new Index();\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    // Updates the indexes for element 'id'. If an element's attribute changes\n    // from A -> B, make sure to remove the element from A.\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    /**\n     * Register element `elem` with this registry.\n     * This adds the element to its index and watches it for attribute changes.\n     * @param elem\n     * @param id\n     * @returns this\n     */\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        // Manually add id to index, then update other indexes.\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _a, _b;\n        return (_b = (_a = this.index.id) === null || _a === void 0 ? void 0 : _a[id]) === null || _b === void 0 ? void 0 : _b[id]; // return undefined if the id is not found.\n    }\n    getElementsByAttribute(attribute, value) {\n        const index_attr = this.index[attribute];\n        if (index_attr) {\n            const index_attr_val = index_attr[value];\n            if (index_attr_val) {\n                const keys = Object.keys(index_attr_val);\n                return keys.map((k) => index_attr_val[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    // This is called by the element when an attribute value changes. If an indexed\n    // attribute changes, then update the local index.\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Registry } from './registry';\nimport { Category } from './typeguard';\nimport { defined, prefix } from './util';\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n *\n * The Element is an abstract class that needs to be subclassed to work. It handles\n * style and text-font properties for the Element and any child elements, along with\n * working with the Registry to create unique ids, but does not have any tools for\n * formatting x or y positions or connections to a Stave.\n */\nclass Element {\n    static get CATEGORY() {\n        return Category.Element;\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    constructor() {\n        var _a;\n        // all Element objects keep a list of children that they are responsible and which\n        // inherit the style of their parents.\n        this.children = [];\n        this.attrs = {\n            id: Element.newID(),\n            type: this.getCategory(),\n            class: '',\n        };\n        this.rendered = false;\n        // If a default registry exist, then register with it right away.\n        (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n    }\n    /**\n     * Adds a child Element to the Element, which lets it inherit the\n     * same style as the parent when setGroupStyle() is called.\n     *\n     * Examples of children are noteheads and stems.  Modifiers such\n     * as Accidentals are generally not set as children.\n     *\n     * Note that StaveNote calls setGroupStyle() when setStyle() is called.\n     */\n    addChildElement(child) {\n        this.children.push(child);\n        return this;\n    }\n    getCategory() {\n        return this.constructor.CATEGORY;\n    }\n    /**\n     * Set the element style used to render.\n     *\n     * Example:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.draw();\n     * ```\n     * Note: If the element draws additional sub-elements (ie.: Modifiers in a Stave),\n     * the style can be applied to all of them by means of the context:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.getContext().setFillStyle('red');\n     * element.getContext().setStrokeStyle('red');\n     * element.draw();\n     * ```\n     * or using drawWithStyle:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.drawWithStyle();\n     * ```\n     */\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    /** Set the element & associated children style used for rendering. */\n    setGroupStyle(style) {\n        this.style = style;\n        this.children.forEach((child) => child.setGroupStyle(style));\n        return this;\n    }\n    /** Get the element style used for rendering. */\n    getStyle() {\n        return this.style;\n    }\n    /** Apply the element style to `context`. */\n    applyStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.save();\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        return this;\n    }\n    /** Restore the style of `context`. */\n    restoreStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.restore();\n        return this;\n    }\n    /**\n     * Draw the element and all its sub-elements (ie.: Modifiers in a Stave)\n     * with the element's style (see `getStyle()` and `setStyle()`)\n     */\n    drawWithStyle() {\n        this.checkContext();\n        this.applyStyle();\n        this.draw();\n        this.restoreStyle();\n    }\n    /** Check if it has a class label (An element can have multiple class labels).  */\n    hasClass(className) {\n        var _a;\n        if (!this.attrs.class)\n            return false;\n        return ((_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ').indexOf(className)) != -1;\n    }\n    /** Add a class label (An element can have multiple class labels).  */\n    addClass(className) {\n        var _a;\n        if (this.hasClass(className))\n            return this;\n        if (!this.attrs.class)\n            this.attrs.class = `${className}`;\n        else\n            this.attrs.class = `${this.attrs.class} ${className}`;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    /** Remove a class label (An element can have multiple class labels).  */\n    removeClass(className) {\n        var _a, _b;\n        if (!this.hasClass(className))\n            return this;\n        const arr = (_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ');\n        if (arr) {\n            arr.splice(arr.indexOf(className));\n            this.attrs.class = arr.join(' ');\n        }\n        (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    /** Call back from registry after the element is registered. */\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    /** Return the rendered status. */\n    isRendered() {\n        return this.rendered;\n    }\n    /** Set the rendered status. */\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    /** Return the element attributes. */\n    getAttributes() {\n        return this.attrs;\n    }\n    /** Return an attribute, such as 'id', 'type' or 'class'. */\n    // eslint-disable-next-line\n    getAttribute(name) {\n        return this.attrs[name];\n    }\n    /** Return associated SVGElement. */\n    getSVGElement(suffix = '') {\n        const id = prefix(this.attrs.id + suffix);\n        const element = document.getElementById(id);\n        if (element)\n            return element;\n    }\n    /** Set an attribute such as 'id', 'class', or 'type'. */\n    setAttribute(name, value) {\n        var _a;\n        const oldID = this.attrs.id;\n        const oldValue = this.attrs[name];\n        this.attrs[name] = value;\n        // Register with old id to support id changes.\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    /** Get the boundingBox. */\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    /** Return the context, such as an SVGContext or CanvasContext object. */\n    getContext() {\n        return this.context;\n    }\n    /** Set the context to an SVGContext or CanvasContext object */\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    /** Validate and return the rendering context. */\n    checkContext() {\n        return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // Font Handling\n    /**\n     * Provide a CSS compatible font string (e.g., 'bold 16px Arial') that will be applied\n     * to text (not glyphs).\n     */\n    set font(f) {\n        this.setFont(f);\n    }\n    /** Returns the CSS compatible font string for the text font. */\n    get font() {\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Set the element's text font family, size, weight, style\n     * (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * This attribute does not determine the font used for musical Glyphs like treble clefs.\n     *\n     * @param font is 1) a `FontInfo` object or\n     *                2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *                3) a string representing the font family (at least one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     * If no arguments are provided, then the font is set to the default font.\n     * Each Element subclass may specify its own default by overriding the static `TEXT_FONT` property.\n     */\n    setFont(font, size, weight, style) {\n        // Allow subclasses to override `TEXT_FONT`.\n        const defaultTextFont = this.constructor.TEXT_FONT;\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const fontIsUndefined = font === undefined;\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        if (fontIsObject) {\n            // `font` is case 1) a FontInfo object\n            this.textFont = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            // `font` is case 2) CSS font shorthand.\n            this.textFont = Font.fromCSSString(font);\n        }\n        else if (fontIsUndefined && sizeWeightStyleAreUndefined) {\n            // All arguments are undefined. Do not check for `arguments.length === 0`,\n            // which fails on the edge case: `setFont(undefined)`.\n            // TODO: See if we can remove this case entirely without introducing a visual diff.\n            // The else case below seems like it should be equivalent to this case.\n            this.textFont = Object.assign({}, defaultTextFont);\n        }\n        else {\n            // `font` is case 3) a font family string (e.g., 'Times New Roman').\n            // The other parameters represent the size, weight, and style.\n            // It is okay for `font` to be undefined while one or more of the other arguments is provided.\n            // Following CSS conventions, unspecified params are reset to the default.\n            this.textFont = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        return this;\n    }\n    /**\n     * Get the css string describing this Element's text font. e.g.,\n     * 'bold 10pt Arial'.\n     */\n    getFont() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Reset the text font to the style indicated by the static `TEXT_FONT` property.\n     * Subclasses can call this to initialize `textFont` for the first time.\n     */\n    resetFont() {\n        this.setFont();\n    }\n    /** Return a copy of the current FontInfo object. */\n    get fontInfo() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        // We can cast to Required<FontInfo> here, because\n        // we just called resetFont() above to ensure this.textFont is set.\n        return Object.assign({}, this.textFont);\n    }\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    /** Change the font size, while keeping everything else the same. */\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     * See Element.fontSizeInPixels or Element.fontSizeInPoints if you need to get a number for calculation purposes.\n     */\n    getFontSize() {\n        return this.fontSize;\n    }\n    /**\n     * The size is 1) a string of the form '10pt' or '16px', compatible with the CSS font-size property.\n     *          or 2) a number, which is interpreted as a point size (i.e. 12 == '12pt').\n     */\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     */\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    /**\n     * @returns the font size in `pt`.\n     */\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    /**\n     * @returns the font size in `px`.\n     */\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    /**\n     * @returns a CSS font-style string (e.g., 'italic').\n     */\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    /**\n     * @returns a CSS font-weight string (e.g., 'bold').\n     * As in CSS, font-weight is always returned as a string, even if it was set as a number.\n     */\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n}\nElement.ID = 1000;\n/**\n * Default font for text. This is not related to music engraving. Instead, see `Flow.setMusicFont(...fontNames)`\n * to customize the font for musical symbols placed on the score.\n */\nElement.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nexport { Element };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { RuntimeError } from './util';\nconst RESOLUTION = 16384;\n/**\n * Map duration numbers to 'ticks', the unit of duration used throughout VexFlow.\n * For example, a quarter note is 4, so it maps to RESOLUTION / 4 = 4096 ticks.\n */\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    // This is the default duration used to render bars (BarNote). Bars no longer\n    // consume ticks, so this should be a no-op.\n    // TODO(0xfe): This needs to be cleaned up.\n    b: '256',\n};\nconst keySignatures = {\n    C: { num: 0 },\n    Am: { num: 0 },\n    F: { acc: 'b', num: 1 },\n    Dm: { acc: 'b', num: 1 },\n    Bb: { acc: 'b', num: 2 },\n    Gm: { acc: 'b', num: 2 },\n    Eb: { acc: 'b', num: 3 },\n    Cm: { acc: 'b', num: 3 },\n    Ab: { acc: 'b', num: 4 },\n    Fm: { acc: 'b', num: 4 },\n    Db: { acc: 'b', num: 5 },\n    Bbm: { acc: 'b', num: 5 },\n    Gb: { acc: 'b', num: 6 },\n    Ebm: { acc: 'b', num: 6 },\n    Cb: { acc: 'b', num: 7 },\n    Abm: { acc: 'b', num: 7 },\n    G: { acc: '#', num: 1 },\n    Em: { acc: '#', num: 1 },\n    D: { acc: '#', num: 2 },\n    Bm: { acc: '#', num: 2 },\n    A: { acc: '#', num: 3 },\n    'F#m': { acc: '#', num: 3 },\n    E: { acc: '#', num: 4 },\n    'C#m': { acc: '#', num: 4 },\n    B: { acc: '#', num: 5 },\n    'G#m': { acc: '#', num: 5 },\n    'F#': { acc: '#', num: 6 },\n    'D#m': { acc: '#', num: 6 },\n    'C#': { acc: '#', num: 7 },\n    'A#m': { acc: '#', num: 7 },\n};\nconst clefs = {\n    treble: { line_shift: 0 },\n    bass: { line_shift: 6 },\n    tenor: { line_shift: 4 },\n    alto: { line_shift: 3 },\n    soprano: { line_shift: 1 },\n    percussion: { line_shift: 0 },\n    'mezzo-soprano': { line_shift: 2 },\n    'baritone-c': { line_shift: 5 },\n    'baritone-f': { line_shift: 5 },\n    subbass: { line_shift: 7 },\n    french: { line_shift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, int_val: 0 },\n    CN: { index: 0, int_val: 0, accidental: 'n' },\n    'C#': { index: 0, int_val: 1, accidental: '#' },\n    'C##': { index: 0, int_val: 2, accidental: '##' },\n    CB: { index: 0, int_val: 11, accidental: 'b' },\n    CBB: { index: 0, int_val: 10, accidental: 'bb' },\n    D: { index: 1, int_val: 2 },\n    DN: { index: 1, int_val: 2, accidental: 'n' },\n    'D#': { index: 1, int_val: 3, accidental: '#' },\n    'D##': { index: 1, int_val: 4, accidental: '##' },\n    DB: { index: 1, int_val: 1, accidental: 'b' },\n    DBB: { index: 1, int_val: 0, accidental: 'bb' },\n    E: { index: 2, int_val: 4 },\n    EN: { index: 2, int_val: 4, accidental: 'n' },\n    'E#': { index: 2, int_val: 5, accidental: '#' },\n    'E##': { index: 2, int_val: 6, accidental: '##' },\n    EB: { index: 2, int_val: 3, accidental: 'b' },\n    EBB: { index: 2, int_val: 2, accidental: 'bb' },\n    F: { index: 3, int_val: 5 },\n    FN: { index: 3, int_val: 5, accidental: 'n' },\n    'F#': { index: 3, int_val: 6, accidental: '#' },\n    'F##': { index: 3, int_val: 7, accidental: '##' },\n    FB: { index: 3, int_val: 4, accidental: 'b' },\n    FBB: { index: 3, int_val: 3, accidental: 'bb' },\n    G: { index: 4, int_val: 7 },\n    GN: { index: 4, int_val: 7, accidental: 'n' },\n    'G#': { index: 4, int_val: 8, accidental: '#' },\n    'G##': { index: 4, int_val: 9, accidental: '##' },\n    GB: { index: 4, int_val: 6, accidental: 'b' },\n    GBB: { index: 4, int_val: 5, accidental: 'bb' },\n    A: { index: 5, int_val: 9 },\n    AN: { index: 5, int_val: 9, accidental: 'n' },\n    'A#': { index: 5, int_val: 10, accidental: '#' },\n    'A##': { index: 5, int_val: 11, accidental: '##' },\n    AB: { index: 5, int_val: 8, accidental: 'b' },\n    ABB: { index: 5, int_val: 7, accidental: 'bb' },\n    B: { index: 6, int_val: 11 },\n    BN: { index: 6, int_val: 11, accidental: 'n' },\n    'B#': { index: 6, int_val: 12, accidental: '#' },\n    'B##': { index: 6, int_val: 13, accidental: '##' },\n    BB: { index: 6, int_val: 10, accidental: 'b' },\n    BBB: { index: 6, int_val: 9, accidental: 'bb' },\n    R: { index: 6, rest: true },\n    X: {\n        index: 6,\n        accidental: '',\n        octave: 4,\n        code: 'noteheadXBlack',\n        shift_right: 5.5,\n    },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n    d: { name: 'diamond' },\n    x: { name: 'x' },\n    ci: { name: 'circled' },\n    cx: { name: 'circle x' },\n    sf: { name: 'slashed' },\n    sb: { name: 'slashed backward' },\n    sq: { name: 'square' },\n    tu: { name: 'triangle up' },\n    td: { name: 'triangle down' },\n};\nconst accidentals = {\n    '#': { code: 'accidentalSharp', parenRightPaddingAdjustment: -1 },\n    '##': { code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    b: { code: 'accidentalFlat', parenRightPaddingAdjustment: -2 },\n    bb: { code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2 },\n    n: { code: 'accidentalNatural', parenRightPaddingAdjustment: -1 },\n    '{': { code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1 },\n    '}': { code: 'accidentalParensRight', parenRightPaddingAdjustment: -1 },\n    db: { code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1 },\n    d: { code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0 },\n    '++': { code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1 },\n    '+': { code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1 },\n    '+-': { code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1 },\n    bs: { code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1 },\n    bss: { code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1 },\n    o: { code: 'accidentalSori', parenRightPaddingAdjustment: -1 },\n    k: { code: 'accidentalKoron', parenRightPaddingAdjustment: -1 },\n    bbs: { code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1 },\n    '++-': { code: 'accidentalBuyukMucennebSharp', parenRightPaddingAdjustment: -1 },\n    ashs: { code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1 },\n    afhf: { code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaUp: { code: 'accSagittal5v7KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaDown: { code: 'accSagittal5v7KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaUp: { code: 'accSagittal5CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaDown: { code: 'accSagittal5CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaUp: { code: 'accSagittal7CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaDown: { code: 'accSagittal7CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisUp: { code: 'accSagittal25SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisDown: { code: 'accSagittal25SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisUp: { code: 'accSagittal35MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisDown: { code: 'accSagittal35MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisUp: { code: 'accSagittal11MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisDown: { code: 'accSagittal11MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisUp: { code: 'accSagittal11LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisDown: { code: 'accSagittal11LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisUp: { code: 'accSagittal35LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisDown: { code: 'accSagittal35LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SDown: { code: 'accSagittalSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SUp: { code: 'accSagittalFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CDown: { code: 'accSagittalSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CUp: { code: 'accSagittalFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CDown: { code: 'accSagittalSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CUp: { code: 'accSagittalFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kDown: { code: 'accSagittalSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kUp: { code: 'accSagittalFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp: { code: 'accSagittalSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat: { code: 'accSagittalFlat', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kUp: { code: 'accSagittalSharp5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kDown: { code: 'accSagittalFlat5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CUp: { code: 'accSagittalSharp5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CDown: { code: 'accSagittalFlat5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CUp: { code: 'accSagittalSharp7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CDown: { code: 'accSagittalFlat7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SUp: { code: 'accSagittalSharp25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SDown: { code: 'accSagittalFlat25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35MUp: { code: 'accSagittalSharp35MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35MDown: { code: 'accSagittalFlat35MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11MUp: { code: 'accSagittalSharp11MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11MDown: { code: 'accSagittalFlat11MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11LUp: { code: 'accSagittalSharp11LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11LDown: { code: 'accSagittalFlat11LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35LUp: { code: 'accSagittalSharp35LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35LDown: { code: 'accSagittalFlat35LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp25SDown: { code: 'accSagittalDoubleSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat25SUp: { code: 'accSagittalDoubleFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7CDown: { code: 'accSagittalDoubleSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7CUp: { code: 'accSagittalDoubleFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5CDown: { code: 'accSagittalDoubleSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5CUp: { code: 'accSagittalDoubleFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v7kDown: { code: 'accSagittalDoubleSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v7kUp: { code: 'accSagittalDoubleFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp: { code: 'accSagittalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat: { code: 'accSagittalDoubleFlat', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaUp: { code: 'accSagittal7v11KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaDown: { code: 'accSagittal7v11KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaUp: { code: 'accSagittal17CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaDown: { code: 'accSagittal17CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaUp: { code: 'accSagittal55CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaDown: { code: 'accSagittal55CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaUp: { code: 'accSagittal7v11CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaDown: { code: 'accSagittal7v11CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisUp: { code: 'accSagittal5v11SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisDown: { code: 'accSagittal5v11SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SDown: { code: 'accSagittalSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SUp: { code: 'accSagittalFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CDown: { code: 'accSagittalSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CUp: { code: 'accSagittalFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CDown: { code: 'accSagittalSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CUp: { code: 'accSagittalFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CDown: { code: 'accSagittalSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CUp: { code: 'accSagittalFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kDown: { code: 'accSagittalSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kUp: { code: 'accSagittalFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kUp: { code: 'accSagittalSharp7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kDown: { code: 'accSagittalFlat7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CUp: { code: 'accSagittalSharp17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CDown: { code: 'accSagittalFlat17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CUp: { code: 'accSagittalSharp55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CDown: { code: 'accSagittalFlat55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CUp: { code: 'accSagittalSharp7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CDown: { code: 'accSagittalFlat7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SUp: { code: 'accSagittalSharp5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SDown: { code: 'accSagittalFlat5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v11SDown: { code: 'accSagittalDoubleSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v11SUp: { code: 'accSagittalDoubleFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11CDown: { code: 'accSagittalDoubleSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11CUp: { code: 'accSagittalDoubleFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp55CDown: { code: 'accSagittalDoubleSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat55CUp: { code: 'accSagittalDoubleFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17CDown: { code: 'accSagittalDoubleSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17CUp: { code: 'accSagittalDoubleFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11kDown: { code: 'accSagittalDoubleSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11kUp: { code: 'accSagittalDoubleFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaUp: { code: 'accSagittal23CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaDown: { code: 'accSagittal23CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaUp: { code: 'accSagittal5v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaDown: { code: 'accSagittal5v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisUp: { code: 'accSagittal5v23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisDown: { code: 'accSagittal5v23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SDown: { code: 'accSagittalSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SUp: { code: 'accSagittalFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CDown: { code: 'accSagittalSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CUp: { code: 'accSagittalFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CDown: { code: 'accSagittalSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CUp: { code: 'accSagittalFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CUp: { code: 'accSagittalSharp23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CDown: { code: 'accSagittalFlat23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CUp: { code: 'accSagittalSharp5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CDown: { code: 'accSagittalFlat5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SUp: { code: 'accSagittalSharp5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SDown: { code: 'accSagittalFlat5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v23SDown: { code: 'accSagittalDoubleSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v23SUp: { code: 'accSagittalDoubleFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v19CDown: { code: 'accSagittalDoubleSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v19CUp: { code: 'accSagittalDoubleFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23CDown: { code: 'accSagittalDoubleSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23CUp: { code: 'accSagittalDoubleFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaUp: { code: 'accSagittal19SchismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaDown: { code: 'accSagittal19SchismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaUp: { code: 'accSagittal17KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaDown: { code: 'accSagittal17KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaUp: { code: 'accSagittal143CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaDown: { code: 'accSagittal143CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaUp: { code: 'accSagittal11v49CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaDown: { code: 'accSagittal11v49CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaUp: { code: 'accSagittal19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaDown: { code: 'accSagittal19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaUp: { code: 'accSagittal7v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaDown: { code: 'accSagittal7v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisUp: { code: 'accSagittal49SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisDown: { code: 'accSagittal49SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisUp: { code: 'accSagittal23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisDown: { code: 'accSagittal23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisUp: { code: 'accSagittal5v13MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisDown: { code: 'accSagittal5v13MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisUp: { code: 'accSagittal11v19MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisDown: { code: 'accSagittal11v19MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisUp: { code: 'accSagittal49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisDown: { code: 'accSagittal49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisUp: { code: 'accSagittal5v49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisDown: { code: 'accSagittal5v49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisUp: { code: 'accSagittal49LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisDown: { code: 'accSagittal49LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisUp: { code: 'accSagittal11v19LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisDown: { code: 'accSagittal11v19LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisUp: { code: 'accSagittal5v13LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisDown: { code: 'accSagittal5v13LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SDown: { code: 'accSagittalSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SUp: { code: 'accSagittalFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SDown: { code: 'accSagittalSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SUp: { code: 'accSagittalFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CDown: { code: 'accSagittalSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CUp: { code: 'accSagittalFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CDown: { code: 'accSagittalSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CUp: { code: 'accSagittalFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CDown: { code: 'accSagittalSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CUp: { code: 'accSagittalFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CDown: { code: 'accSagittalSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CUp: { code: 'accSagittalFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kDown: { code: 'accSagittalSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kUp: { code: 'accSagittalFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sDown: { code: 'accSagittalSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sUp: { code: 'accSagittalFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sUp: { code: 'accSagittalSharp19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sDown: { code: 'accSagittalFlat19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kUp: { code: 'accSagittalSharp17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kDown: { code: 'accSagittalFlat17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CUp: { code: 'accSagittalSharp143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CDown: { code: 'accSagittalFlat143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CUp: { code: 'accSagittalSharp11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CDown: { code: 'accSagittalFlat11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CUp: { code: 'accSagittalSharp19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CDown: { code: 'accSagittalFlat19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CUp: { code: 'accSagittalSharp7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CDown: { code: 'accSagittalFlat7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SUp: { code: 'accSagittalSharp49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SDown: { code: 'accSagittalFlat49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SUp: { code: 'accSagittalSharp23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SDown: { code: 'accSagittalFlat23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13MUp: { code: 'accSagittalSharp5v13MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13MDown: { code: 'accSagittalFlat5v13MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19MUp: { code: 'accSagittalSharp11v19MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19MDown: { code: 'accSagittalFlat11v19MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49MUp: { code: 'accSagittalSharp49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49MDown: { code: 'accSagittalFlat49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v49MUp: { code: 'accSagittalSharp5v49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v49MDown: { code: 'accSagittalFlat5v49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49LUp: { code: 'accSagittalSharp49LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49LDown: { code: 'accSagittalFlat49LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19LUp: { code: 'accSagittalSharp11v19LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19LDown: { code: 'accSagittalFlat11v19LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13LUp: { code: 'accSagittalSharp5v13LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13LDown: { code: 'accSagittalFlat5v13LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23SDown: { code: 'accSagittalDoubleSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23SUp: { code: 'accSagittalDoubleFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp49SDown: { code: 'accSagittalDoubleSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat49SUp: { code: 'accSagittalDoubleFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v19CDown: { code: 'accSagittalDoubleSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v19CUp: { code: 'accSagittalDoubleFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19CDown: { code: 'accSagittalDoubleSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19CUp: { code: 'accSagittalDoubleFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp11v49CDown: { code: 'accSagittalDoubleSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat11v49CUp: { code: 'accSagittalDoubleFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp143CDown: { code: 'accSagittalDoubleSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat143CUp: { code: 'accSagittalDoubleFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17kDown: { code: 'accSagittalDoubleSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17kUp: { code: 'accSagittalDoubleFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19sDown: { code: 'accSagittalDoubleSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19sUp: { code: 'accSagittalDoubleFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftUp: { code: 'accSagittalShaftUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftDown: { code: 'accSagittalShaftDown', parenRightPaddingAdjustment: -1 },\n    accSagittalAcute: { code: 'accSagittalAcute', parenRightPaddingAdjustment: -1 },\n    accSagittalGrave: { code: 'accSagittalGrave', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaUp: { code: 'accSagittal1MinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaDown: { code: 'accSagittal1MinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasUp: { code: 'accSagittal2MinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasDown: { code: 'accSagittal2MinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaUp: { code: 'accSagittal1TinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaDown: { code: 'accSagittal1TinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasUp: { code: 'accSagittal2TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasDown: { code: 'accSagittal2TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasUp: { code: 'accSagittal3TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasDown: { code: 'accSagittal3TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasUp: { code: 'accSagittal4TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasDown: { code: 'accSagittal4TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasUp: { code: 'accSagittal5TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasDown: { code: 'accSagittal5TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasUp: { code: 'accSagittal6TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasDown: { code: 'accSagittal6TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasUp: { code: 'accSagittal7TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasDown: { code: 'accSagittal7TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasUp: { code: 'accSagittal8TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasDown: { code: 'accSagittal8TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasUp: { code: 'accSagittal9TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasDown: { code: 'accSagittal9TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaUp: { code: 'accSagittalFractionalTinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaDown: { code: 'accSagittalFractionalTinaDown', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlat: { code: 'accidentalNarrowReversedFlat', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlatAndFlat: {\n        code: 'accidentalNarrowReversedFlatAndFlat',\n        parenRightPaddingAdjustment: -1,\n    },\n    accidentalWilsonPlus: { code: 'accidentalWilsonPlus', parenRightPaddingAdjustment: -1 },\n    accidentalWilsonMinus: { code: 'accidentalWilsonMinus', parenRightPaddingAdjustment: -1 },\n};\n// Helps determine the layout of accidentals.\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        second_on_bottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spaced_out_tetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spaced_out_pentachord: [1, 2, 3, 2, 1],\n        very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n        very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: 'augmentationDot', between_lines: true },\n    av: {\n        aboveCode: 'articStaccatissimoAbove',\n        belowCode: 'articStaccatissimoBelow',\n        between_lines: true,\n    },\n    'a>': {\n        aboveCode: 'articAccentAbove',\n        belowCode: 'articAccentBelow',\n        between_lines: true,\n    },\n    'a-': {\n        aboveCode: 'articTenutoAbove',\n        belowCode: 'articTenutoBelow',\n        between_lines: true,\n    },\n    'a^': {\n        aboveCode: 'articMarcatoAbove',\n        belowCode: 'articMarcatoBelow',\n        between_lines: false,\n    },\n    'a+': { code: 'pluckedLeftHandPizzicato', between_lines: false },\n    ao: {\n        aboveCode: 'pluckedSnapPizzicatoAbove',\n        belowCode: 'pluckedSnapPizzicatoBelow',\n        between_lines: false,\n    },\n    ah: { code: 'stringsHarmonic', between_lines: false },\n    'a@': { aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false },\n    'a@a': { code: 'fermataAbove', between_lines: false },\n    'a@u': { code: 'fermataBelow', between_lines: false },\n    'a@s': { aboveCode: 'fermataShortAbove', belowCode: 'fermataShortBelow', between_lines: false },\n    'a@as': { code: 'fermataShortAbove', between_lines: false },\n    'a@us': { code: 'fermataShortBelow', between_lines: false },\n    'a@l': { aboveCode: 'fermataLongAbove', belowCode: 'fermataLongBelow', between_lines: false },\n    'a@al': { code: 'fermataLongAbove', between_lines: false },\n    'a@ul': { code: 'fermataLongBelow', between_lines: false },\n    'a@vl': { aboveCode: 'fermataVeryLongAbove', belowCode: 'fermataVeryLongBelow', between_lines: false },\n    'a@avl': { code: 'fermataVeryLongAbove', between_lines: false },\n    'a@uvl': { code: 'fermataVeryLongBelow', between_lines: false },\n    'a|': { code: 'stringsUpBow', between_lines: false },\n    am: { code: 'stringsDownBow', between_lines: false },\n    'a,': { code: 'pictChokeCymbal', between_lines: false }, // Choked\n};\nconst ornaments = {\n    mordent: { code: 'ornamentShortTrill' },\n    mordent_inverted: { code: 'ornamentMordent' },\n    turn: { code: 'ornamentTurn' },\n    turn_inverted: { code: 'ornamentTurnSlash' },\n    tr: { code: 'ornamentTrill' },\n    upprall: { code: 'ornamentPrecompSlideTrillDAnglebert' },\n    downprall: { code: 'ornamentPrecompDoubleCadenceUpperPrefix' },\n    prallup: { code: 'ornamentPrecompTrillSuffixDandrieu' },\n    pralldown: { code: 'ornamentPrecompTrillLowerSuffix' },\n    upmordent: { code: 'ornamentPrecompSlideTrillBach' },\n    downmordent: { code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn' },\n    lineprall: { code: 'ornamentPrecompAppoggTrill' },\n    prallprall: { code: 'ornamentTremblement' },\n    scoop: { code: 'brassScoop' },\n    doit: { code: 'brassDoitMedium' },\n    fall: { code: 'brassFallLipShort' },\n    doitLong: { code: 'brassLiftMedium' },\n    fallLong: { code: 'brassFallRoughMedium' },\n    bend: { code: 'brassBend' },\n    plungerClosed: { code: 'brassMuteClosed' },\n    plungerOpen: { code: 'brassMuteOpen' },\n    flip: { code: 'brassFlip' },\n    jazzTurn: { code: 'brassJazzTurn' },\n    smear: { code: 'brassSmear' },\n};\nclass Tables {\n    /**\n     * @returns the `Font` object at the head of the music font stack.\n     */\n    static currentMusicFont() {\n        if (Tables.MUSIC_FONT_STACK.length === 0) {\n            throw new RuntimeError('NoFonts', 'The font stack is empty. See: await Flow.fetchMusicFont(...); Flow.setMusicFont(...).');\n        }\n        else {\n            return Tables.MUSIC_FONT_STACK[0];\n        }\n    }\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    /**\n     * @param keyOctaveGlyph a string in the format \"key/octave\" (e.g., \"c/5\") or \"key/octave/custom-note-head-code\" (e.g., \"g/5/t3\").\n     * @param clef\n     * @param params a struct with one option, `octave_shift` for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n     * @returns properties for the specified note.\n     */\n    static keyProperties(keyOctaveGlyph, clef = 'treble', params) {\n        let options = { octave_shift: 0, duration: '4' };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const duration = Tables.sanitizeDuration(options.duration);\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        if (value.octave)\n            pieces[1] = value.octave.toString();\n        let octave = parseInt(pieces[1], 10);\n        // Octave_shift is the shift to compensate for clef 8va/8vb.\n        octave += -1 * options.octave_shift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).line_shift;\n        let stroke = 0;\n        if (line <= 0 && (line * 2) % 2 === 0)\n            stroke = 1; // stroke up\n        if (line >= 6 && (line * 2) % 2 === 0)\n            stroke = -1; // stroke down\n        // Integer value for note arithmetic.\n        const int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : undefined;\n        // If the user specified a glyph, overwrite the glyph code.\n        const code = value.code;\n        const shift_right = value.shift_right;\n        let customNoteHeadProps = {};\n        if (pieces.length > 2 && pieces[2]) {\n            const glyphName = pieces[2].toUpperCase();\n            customNoteHeadProps = { code: this.codeNoteHead(glyphName, duration) } || {};\n        }\n        return Object.assign({ key,\n            octave,\n            line,\n            int_value, accidental: value.accidental, code,\n            stroke,\n            shift_right, displaced: false }, customNoteHeadProps);\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    static tabToGlyphProps(fret, scale = 1.0) {\n        let glyph = undefined;\n        let width = 0;\n        let shift_y = 0;\n        if (fret.toUpperCase() === 'X') {\n            const glyphMetrics = new Glyph('accidentalDoubleSharp', Tables.TABLATURE_FONT_SCALE).getMetrics();\n            glyph = 'accidentalDoubleSharp';\n            if (glyphMetrics.width == undefined || glyphMetrics.height == undefined)\n                throw new RuntimeError('InvalidMetrics', 'Width and height required');\n            width = glyphMetrics.width;\n            shift_y = -glyphMetrics.height / 2;\n        }\n        else {\n            width = Tables.textWidth(fret);\n        }\n        return {\n            text: fret,\n            code: glyph,\n            getWidth: () => width * scale,\n            shift_y,\n        };\n    }\n    // Used by annotation.ts and bend.ts. Clearly this implementation only works for the default font size.\n    // TODO: The actual width depends on the font family, size, weight, style.\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(acc) {\n        return accidentals[acc];\n    }\n    static ornamentCodes(acc) {\n        return ornaments[acc];\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.acc) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        const notes = accidentalList[keySpec.acc];\n        const acc_list = [];\n        for (let i = 0; i < keySpec.num; ++i) {\n            const line = notes[i];\n            acc_list.push({ type: keySpec.acc, line });\n        }\n        return acc_list;\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    /**\n     * Convert duration aliases to the number based duration.\n     * If the input isn't an alias, simply return the input.\n     * @param duration\n     * @returns Example: 'q' -> '4', '8' -> '8'\n     */\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    /** Convert the `duration` to a fraction. */\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    /** Convert the `duration` to a number. */\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    /* Convert the `duration` to total ticks. */\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    static codeNoteHead(type, duration) {\n        let code = '';\n        switch (type) {\n            /* Diamond */\n            case 'D0':\n                code = 'noteheadDiamondWhole';\n                break;\n            case 'D1':\n                code = 'noteheadDiamondHalf';\n                break;\n            case 'D2':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'D3':\n                code = 'noteheadDiamondBlack';\n                break;\n            /* Triangle */\n            case 'T0':\n                code = 'noteheadTriangleUpWhole';\n                break;\n            case 'T1':\n                code = 'noteheadTriangleUpHalf';\n                break;\n            case 'T2':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'T3':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            /* Cross */\n            case 'X0':\n                code = 'noteheadXWhole';\n                break;\n            case 'X1':\n                code = 'noteheadXHalf';\n                break;\n            case 'X2':\n                code = 'noteheadXBlack';\n                break;\n            case 'X3':\n                code = 'noteheadCircleX';\n                break;\n            /* Square */\n            case 'S1':\n                code = 'noteheadSquareWhite';\n                break;\n            case 'S2':\n                code = 'noteheadSquareBlack';\n                break;\n            /* Rectangle */\n            case 'R1':\n                code = 'vexNoteHeadRectWhite'; // no smufl code\n                break;\n            case 'R2':\n                code = 'vexNoteHeadRectBlack'; // no smufl code\n                break;\n            case 'DO':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'RE':\n                code = 'noteheadMoonBlack';\n                break;\n            case 'MI':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'FA':\n                code = 'noteheadTriangleLeftBlack';\n                break;\n            case 'FAUP':\n                code = 'noteheadTriangleRightBlack';\n                break;\n            case 'SO':\n                code = 'noteheadBlack';\n                break;\n            case 'LA':\n                code = 'noteheadSquareBlack';\n                break;\n            case 'TI':\n                code = 'noteheadTriangleRoundDownBlack';\n                break;\n            case 'D':\n            case 'H': // left for backwards compatibility\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDiamondDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadDiamondWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadDiamondHalf';\n                        break;\n                    default:\n                        code = 'noteheadDiamondBlack';\n                        break;\n                }\n                break;\n            case 'N':\n            case 'G':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadHalf';\n                        break;\n                    default:\n                        code = 'noteheadBlack';\n                        break;\n                }\n                break;\n            case 'M': // left for backwards compatibility\n            case 'X':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadXHalf';\n                        break;\n                    default:\n                        code = 'noteheadXBlack';\n                        break;\n                }\n                break;\n            case 'CX':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircleXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircleXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircleXHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircleX';\n                        break;\n                }\n                break;\n            case 'CI':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircledDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircledWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircledHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircledBlack';\n                        break;\n                }\n                break;\n            case 'SQ':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWholeSquare';\n                        break;\n                    case '1':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    case '2':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    default:\n                        code = 'noteheadSquareBlack';\n                        break;\n                }\n                break;\n            case 'TU':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleUpDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleUpWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleUpHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleUpBlack';\n                        break;\n                }\n                break;\n            case 'TD':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleDownDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleDownWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleDownHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleDownBlack';\n                        break;\n                }\n                break;\n            case 'SF':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole1';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole1';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf1';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack1';\n                }\n                break;\n            case 'SB':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole2';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole2';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf2';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack2';\n                }\n                break;\n        }\n        return code;\n    }\n    // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n    // The default type is a regular note ('n').\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        // Lookup duration for default glyph head code\n        let code = durationCodes[duration];\n        if (code === undefined) {\n            code = durationCodes['4'];\n        }\n        // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n        let glyphTypeProperties = code[type];\n        // Try and get it from the custom list of note heads\n        const codeNoteHead = Tables.codeNoteHead(type.toUpperCase(), duration);\n        if (codeNoteHead != '')\n            glyphTypeProperties = Object.assign(Object.assign({}, glyphTypeProperties), { code_head: codeNoteHead, code: codeNoteHead });\n        const code_head = glyphTypeProperties.code_head;\n        // The default implementation of getWidth() calls Glyph.getWidth(code_head, scale).\n        // This can be overridden by an individual glyph type (see slash noteheads below: Tables.SLASH_NOTEHEAD_WIDTH).\n        const getWidth = (scale = Tables.NOTATION_FONT_SCALE) => Glyph.getWidth(code_head, scale);\n        // Merge duration props for 'duration' with the note head properties.\n        return Object.assign(Object.assign(Object.assign({}, code.common), { getWidth: getWidth }), glyphTypeProperties);\n    }\n}\nTables.UNISON = true;\nTables.SOFTMAX_FACTOR = 10;\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RENDER_PRECISION_PLACES = 3;\nTables.RESOLUTION = RESOLUTION;\n/**\n * Customize this by calling Flow.setMusicFont(...fontNames);\n */\nTables.MUSIC_FONT_STACK = [];\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\n// HACK:\n// Since text origins are positioned at the baseline, we must\n// compensate for the ascender of the text. Of course, 1 staff space is\n// a very poor approximation.\n//\n// This will be deprecated in the future. This is a temporary solution until\n// we have more robust text metrics.\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalMap = accidentals;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    // ♯ accidental sharp\n    sharp: String.fromCharCode(0x266f),\n    // ♭ accidental flat\n    flat: String.fromCharCode(0x266d),\n    // ♮ accidental natural\n    natural: String.fromCharCode(0x266e),\n    // △ major seventh\n    triangle: String.fromCharCode(0x25b3),\n    // ø half-diminished\n    'o-with-slash': String.fromCharCode(0x00f8),\n    // ° diminished\n    degrees: String.fromCharCode(0x00b0),\n    // ○ diminished\n    circle: String.fromCharCode(0x25cb),\n};\n/* The list of valid note types. Used by note.ts during parseNoteStruct(). */\nTables.validTypes = validNoteTypes;\n// Default time signature.\nTables.TIME4_4 = {\n    num_beats: 4,\n    beat_value: 4,\n    resolution: RESOLUTION,\n};\nexport { Tables };\n// 1/2, 1, 2, 4, 8, 16, 32, 64, 128\n// NOTE: There is no 256 here! However, there are other mentions of 256 in this file.\n// For example, in durations has a 256 key, and sanitizeDuration() can return 256.\n// The sanitizeDuration() bit may need to be removed by 0xfe.\nconst durationCodes = {\n    '1/2': {\n        common: {\n            code_head: '',\n            stem: false,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Breve rest\n            code_head: 'restDoubleWhole',\n            rest: true,\n            position: 'B/5',\n            dot_shiftY: 0.5,\n        },\n        s: {\n            // Breve note slash -\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    1: {\n        common: {\n            code_head: '',\n            stem: false,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Whole rest\n            code_head: 'restWhole',\n            ledger_code_head: 'restWholeLegerLine',\n            rest: true,\n            position: 'D/5',\n            dot_shiftY: 0.5,\n        },\n        s: {\n            // Whole note slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    2: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Half rest\n            code_head: 'restHalf',\n            ledger_code_head: 'restHalfLegerLine',\n            stem: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n        },\n        s: {\n            // Half note slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    4: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Quarter rest\n            code_head: 'restQuarter',\n            stem: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.5,\n            line_below: 1.5,\n        },\n        s: {\n            // Quarter slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    8: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: true,\n            beam_count: 1,\n            stem_beam_extension: 0,\n            code_flag_upstem: 'flag8thUp',\n            code_flag_downstem: 'flag8thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Eighth rest\n            code_head: 'rest8th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.0,\n            line_below: 1.0,\n        },\n        s: {\n            // Eighth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    16: {\n        common: {\n            code_head: '',\n            beam_count: 2,\n            stem_beam_extension: 0,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag16thUp',\n            code_flag_downstem: 'flag16thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Sixteenth rest\n            code_head: 'rest16th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.0,\n            line_below: 2.0,\n        },\n        s: {\n            // Sixteenth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    32: {\n        common: {\n            code_head: '',\n            beam_count: 3,\n            stem_beam_extension: 7.5,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag32ndUp',\n            code_flag_downstem: 'flag32ndDown',\n            stem_up_extension: 9,\n            stem_down_extension: 9,\n            tabnote_stem_up_extension: 9,\n            tabnote_stem_down_extension: 9,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Thirty-second rest\n            code_head: 'rest32nd',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -1.5,\n            line_above: 2.0,\n            line_below: 2.0,\n        },\n        s: {\n            // Thirty-second slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    64: {\n        common: {\n            code_head: '',\n            beam_count: 4,\n            stem_beam_extension: 15,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag64thUp',\n            code_flag_downstem: 'flag64thDown',\n            stem_up_extension: 13,\n            stem_down_extension: 13,\n            tabnote_stem_up_extension: 13,\n            tabnote_stem_down_extension: 13,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Sixty-fourth rest\n            code_head: 'rest64th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -1.5,\n            line_above: 2.0,\n            line_below: 3.0,\n        },\n        s: {\n            // Sixty-fourth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    128: {\n        common: {\n            code_head: '',\n            beam_count: 5,\n            stem_beam_extension: 22.5,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag128thUp',\n            code_flag_downstem: 'flag128thDown',\n            stem_up_extension: 22,\n            stem_down_extension: 22,\n            tabnote_stem_up_extension: 22,\n            tabnote_stem_down_extension: 22,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Hundred-twenty-eight rest\n            code_head: 'rest128th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -2.5,\n            line_above: 3.0,\n            line_below: 3.0,\n        },\n        s: {\n            // Hundred-twenty-eight slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var OutlineCode;\n(function (OutlineCode) {\n    OutlineCode[OutlineCode[\"MOVE\"] = 0] = \"MOVE\";\n    OutlineCode[OutlineCode[\"LINE\"] = 1] = \"LINE\";\n    OutlineCode[OutlineCode[\"QUADRATIC\"] = 2] = \"QUADRATIC\";\n    OutlineCode[OutlineCode[\"BEZIER\"] = 3] = \"BEZIER\";\n})(OutlineCode || (OutlineCode = {}));\nclass GlyphCacheEntry {\n    constructor(fontStack, code, category) {\n        this.point = -1;\n        this.metrics = Glyph.loadMetrics(fontStack, code, category);\n        this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.metrics.scale, this.metrics.x_shift, this.metrics.y_shift);\n        if (category) {\n            this.point = Glyph.lookupFontMetric(this.metrics.font, category, code, 'point', -1);\n        }\n    }\n}\nclass GlyphCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    lookup(code, category) {\n        let entries = this.cache.get(Glyph.CURRENT_CACHE_KEY);\n        if (entries === undefined) {\n            entries = {};\n            this.cache.set(Glyph.CURRENT_CACHE_KEY, entries);\n        }\n        const key = category ? `${code}%${category}` : code;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = new GlyphCacheEntry(Glyph.MUSIC_FONT_STACK, code, category);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n}\nclass GlyphOutline {\n    constructor(outline, originX, originY, scale) {\n        this.outline = outline;\n        this.originX = originX;\n        this.originY = originY;\n        this.scale = scale;\n        this.i = 0;\n        this.precision = 1;\n        // Automatically assign private properties: this.outline, this.originX, this.originY, and this.scale.\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n    }\n    done() {\n        return this.i >= this.outline.length;\n    }\n    next() {\n        return Math.round((this.outline[this.i++] * this.precision) / this.precision);\n    }\n    nextX() {\n        return Math.round((this.originX + this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    nextY() {\n        return Math.round((this.originY - this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    static parse(str) {\n        const result = [];\n        const parts = str.split(' ');\n        let i = 0;\n        while (i < parts.length) {\n            switch (parts[i++]) {\n                case 'm':\n                    result.push(OutlineCode.MOVE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'l':\n                    result.push(OutlineCode.LINE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'q':\n                    result.push(OutlineCode.QUADRATIC, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'b':\n                    result.push(OutlineCode.BEZIER, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n            }\n        }\n        return result;\n    }\n}\nclass Glyph extends Element {\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Glyph;\n    }\n    /**\n     * Pass a key of the form `glyphs.{category}.{code}.{key}` to Font.lookupMetric(). If the initial lookup fails,\n     * try again with the path `glyphs.{category}.{key}`. If the second lookup fails, return the defaultValue.\n     *\n     * @param font\n     * @param category any metric path under 'glyphs', so 'stem.up' could resolve to glyphs.stem.up.shiftX, glyphs.stem.up.shiftY, etc.\n     * @param code\n     * @param key\n     * @param defaultValue\n     */\n    static lookupFontMetric(font, category, code, key, defaultValue) {\n        let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, undefined);\n        if (value === undefined) {\n            // The first lookup failed, so we omit .${code} and try again (with a defaultValue this time).\n            value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n        }\n        return value;\n    }\n    static lookupGlyph(fontStack, code) {\n        defined(fontStack, 'BadFontStack', 'Font stack is misconfigured');\n        let glyph;\n        let font;\n        for (let i = 0; i < fontStack.length; i++) {\n            font = fontStack[i];\n            glyph = font.getGlyphs()[code];\n            if (glyph)\n                return { glyph, font };\n        }\n        throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n    static loadMetrics(fontStack, code, category) {\n        const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n        if (!glyph.o)\n            throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n        let x_shift = 0;\n        let y_shift = 0;\n        let scale = 1;\n        if (category && font) {\n            x_shift = Glyph.lookupFontMetric(font, category, code, 'shiftX', 0);\n            y_shift = Glyph.lookupFontMetric(font, category, code, 'shiftY', 0);\n            scale = Glyph.lookupFontMetric(font, category, code, 'scale', 1);\n        }\n        const x_min = glyph.x_min;\n        const x_max = glyph.x_max;\n        const ha = glyph.ha;\n        if (!glyph.cached_outline) {\n            glyph.cached_outline = GlyphOutline.parse(glyph.o);\n        }\n        return {\n            x_min,\n            x_max,\n            x_shift,\n            y_shift,\n            scale,\n            ha,\n            outline: glyph.cached_outline,\n            font,\n            width: x_max - x_min,\n            height: ha,\n        };\n    }\n    /**\n     * Renders glyphs from the default font stack.\n     *\n     * @param ctx Canvas or SVG context\n     * @param x_pos x coordinate\n     * @param y_pos y coordinate\n     * @param point the point size of the font\n     * @param code the glyph code in font.getGlyphs()\n     * @param options\n     * @returns\n     */\n    static renderGlyph(ctx, x_pos, y_pos, point, code, options) {\n        var _a;\n        const data = Glyph.cache.lookup(code, options === null || options === void 0 ? void 0 : options.category);\n        const metrics = data.metrics;\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const customScale = (_a = options === null || options === void 0 ? void 0 : options.scale) !== null && _a !== void 0 ? _a : 1;\n        const scale = ((point * 72.0) / (metrics.font.getResolution() * 100.0)) * metrics.scale * customScale;\n        Glyph.renderOutline(ctx, metrics.outline, scale, x_pos + metrics.x_shift * customScale, y_pos + metrics.y_shift * customScale);\n        return metrics;\n    }\n    static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        ctx.beginPath();\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    ctx.moveTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.LINE:\n                    ctx.lineTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.quadraticCurveTo(go.nextX(), go.nextY(), x, y);\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.bezierCurveTo(go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    break;\n            }\n        }\n        ctx.fill();\n    }\n    static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        const bboxComp = new BoundingBoxComputation();\n        // (penX, penY) hold the pen position: the start of each stroke.\n        let penX = x_pos;\n        let penY = y_pos;\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    // Note that we don't add any points to the bounding box until a srroke is actually drawn.\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    break;\n                case OutlineCode.LINE:\n                    bboxComp.addPoint(penX, penY);\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    bboxComp.addPoint(penX, penY);\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addQuadraticCurve(penX, penY, go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addBezierCurve(penX, penY, go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n            }\n        }\n        return new BoundingBox(bboxComp.getX1(), bboxComp.getY1(), bboxComp.width(), bboxComp.height());\n    }\n    static getWidth(code, point, category) {\n        const data = Glyph.cache.lookup(code, category);\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const scale = (point * 72) / (data.metrics.font.getResolution() * 100);\n        return data.bbox.getW() * scale;\n    }\n    /**\n     * @param code\n     * @param point\n     * @param options\n     */\n    constructor(code, point, options) {\n        super();\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.bbox = new BoundingBox(0, 0, 0, 0);\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        this.options = {};\n        this.scale = 1;\n        this.code = code;\n        this.point = point;\n        this.originShift = { x: 0, y: 0 };\n        this.x_shift = 0;\n        this.y_shift = 0;\n        if (options) {\n            this.setOptions(options);\n        }\n        else {\n            this.reset();\n        }\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n    getCode() {\n        return this.code;\n    }\n    // eslint-disable-next-line\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.reset();\n    }\n    setPoint(point) {\n        this.point = point;\n        return this;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    setXShift(x_shift) {\n        this.x_shift = x_shift;\n        return this;\n    }\n    getYshift() {\n        return this.y_shift;\n    }\n    setYShift(y_shift) {\n        this.y_shift = y_shift;\n        return this;\n    }\n    reset() {\n        const data = Glyph.cache.lookup(this.code, this.options.category);\n        this.metrics = data.metrics;\n        // Override point from metrics file\n        if (data.point != -1) {\n            this.point = data.point;\n        }\n        this.scale = (this.point * 72) / (this.metrics.font.getResolution() * 100);\n        this.bbox = new BoundingBox(data.bbox.getX() * this.scale, data.bbox.getY() * this.scale, data.bbox.getW() * this.scale, data.bbox.getH() * this.scale);\n    }\n    checkMetrics() {\n        return defined(this.metrics, 'BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n    getMetrics() {\n        const metrics = this.checkMetrics();\n        const metricsScale = metrics.scale;\n        return {\n            x_min: metrics.x_min * this.scale * metricsScale,\n            x_max: metrics.x_max * this.scale * metricsScale,\n            width: this.bbox.getW(),\n            height: this.bbox.getH(),\n            scale: this.scale * metricsScale,\n            x_shift: metrics.x_shift,\n            y_shift: metrics.y_shift,\n            outline: metrics.outline,\n            font: metrics.font,\n            ha: metrics.ha,\n        };\n    }\n    setOriginX(x) {\n        const { bbox } = this;\n        const originX = Math.abs(bbox.getX() / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.originShift.x = -xShift;\n    }\n    setOriginY(y) {\n        const { bbox } = this;\n        const originY = Math.abs(bbox.getY() / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.originShift.y = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n    render(ctx, x, y) {\n        const metrics = this.checkMetrics();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle(ctx);\n        const xPos = x + this.originShift.x + metrics.x_shift;\n        const yPos = y + this.originShift.y + metrics.y_shift;\n        Glyph.renderOutline(ctx, outline, scale, xPos, yPos);\n        this.restoreStyle(ctx);\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    renderToStave(x) {\n        const context = this.checkContext();\n        const metrics = this.checkMetrics();\n        const stave = this.checkStave();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle();\n        const xPos = x + this.x_shift + metrics.x_shift;\n        const yPos = stave.getYForGlyphs() + this.y_shift + metrics.y_shift;\n        Glyph.renderOutline(context, outline, scale, xPos, yPos);\n        this.restoreStyle();\n    }\n}\nGlyph.cache = new GlyphCache();\n// The current cache key for GlyphCache above.\n// Computed when Flow.setMusicFont(...) is called.\n// It is set to a comma separated list of font names.\nGlyph.CURRENT_CACHE_KEY = '';\n// Used by the GlyphCache above.\n// Set when Flow.setMusicFont(...) is called.\nGlyph.MUSIC_FONT_STACK = [];\nexport { Glyph };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n    /**\n     * Modifiers category string. Every modifier has a different category.\n     * The `ModifierContext` uses this to determine the type and order of the modifiers.\n     */\n    static get CATEGORY() {\n        return Category.Modifier;\n    }\n    /** Modifiers can be positioned almost anywhere, relative to a note. */\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    constructor() {\n        super();\n        this.width = 0;\n        // The `text_line` is reserved space above or below a stave.\n        this.text_line = 0;\n        this.position = Modifier.Position.LEFT;\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.spacingFromNextModifier = 0;\n    }\n    /** Called when position changes. */\n    reset() {\n        // DO NOTHING.\n    }\n    /** Get modifier widths. */\n    getWidth() {\n        return this.width;\n    }\n    /** Set modifier widths. */\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    /**\n     * Used in draw() to check and get the attached note (`StaveNote`, `TabNote`, etc.).\n     * Also verifies that the index is valid.\n     */\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    /**\n     * Set attached note.\n     * @param note (`StaveNote`, `TabNote`, etc.)\n     */\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    /** Get note index, which is a specific note in a chord. */\n    getIndex() {\n        return this.index;\n    }\n    /** Check and get note index, which is a specific note in a chord. */\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    /** Set note index, which is a specific note in a chord. */\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'Modifier Context Required');\n    }\n    /** Every modifier must be part of a `ModifierContext`. */\n    setModifierContext(c) {\n        this.modifierContext = c;\n        return this;\n    }\n    /** Get position. */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Set position.\n     * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n     */\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    /** Set the `text_line` for the modifier. */\n    setTextLine(line) {\n        this.text_line = line;\n        return this;\n    }\n    /** Shift modifier down `y` pixels. Negative values shift up. */\n    setYShift(y) {\n        this.y_shift = y;\n        return this;\n    }\n    /** Set spacing from next modifier. */\n    setSpacingFromNextModifier(x) {\n        this.spacingFromNextModifier = x;\n    }\n    /** Get spacing from next modifier. */\n    getSpacingFromNextModifier() {\n        return this.spacingFromNextModifier;\n    }\n    /**\n     * Shift modifier `x` pixels in the direction of the modifier. Negative values\n     * shift reverse.\n     */\n    setXShift(x) {\n        this.x_shift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.x_shift -= x;\n        }\n        else {\n            this.x_shift += x;\n        }\n        return this;\n    }\n    /** Get shift modifier `x` */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render the modifier onto the canvas. */\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n    alignSubNotesWithNote(subNotes, note) {\n        // Shift over the tick contexts of each note\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { RuntimeError } from './util';\n/** Music implements some standard music theory routines. */\nexport class Music {\n    /** Number of an canonical notes (12). */\n    static get NUM_TONES() {\n        return this.canonical_notes.length;\n    }\n    /** Names of root notes ('c', 'd',...) */\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    /** Values of the root notes.*/\n    static get root_values() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    /** Indices of the root notes.*/\n    static get root_indices() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    /** Names of canonical notes ('c', 'c#', 'd',...). */\n    static get canonical_notes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n    static get diatonic_intervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    /** NoteAccidental associated to diatonic intervals. */\n    static get diatonic_accidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    /** Semitones shift associated to intervals .*/\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    /** Semitones shifts associated with scales. */\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    /** Scales associated with m (minor) and M (major). */\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    /** Accidentals abbreviations. */\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    /** Note values. */\n    static get noteValues() {\n        return {\n            c: { root_index: 0, int_val: 0 },\n            cn: { root_index: 0, int_val: 0 },\n            'c#': { root_index: 0, int_val: 1 },\n            'c##': { root_index: 0, int_val: 2 },\n            cb: { root_index: 0, int_val: 11 },\n            cbb: { root_index: 0, int_val: 10 },\n            d: { root_index: 1, int_val: 2 },\n            dn: { root_index: 1, int_val: 2 },\n            'd#': { root_index: 1, int_val: 3 },\n            'd##': { root_index: 1, int_val: 4 },\n            db: { root_index: 1, int_val: 1 },\n            dbb: { root_index: 1, int_val: 0 },\n            e: { root_index: 2, int_val: 4 },\n            en: { root_index: 2, int_val: 4 },\n            'e#': { root_index: 2, int_val: 5 },\n            'e##': { root_index: 2, int_val: 6 },\n            eb: { root_index: 2, int_val: 3 },\n            ebb: { root_index: 2, int_val: 2 },\n            f: { root_index: 3, int_val: 5 },\n            fn: { root_index: 3, int_val: 5 },\n            'f#': { root_index: 3, int_val: 6 },\n            'f##': { root_index: 3, int_val: 7 },\n            fb: { root_index: 3, int_val: 4 },\n            fbb: { root_index: 3, int_val: 3 },\n            g: { root_index: 4, int_val: 7 },\n            gn: { root_index: 4, int_val: 7 },\n            'g#': { root_index: 4, int_val: 8 },\n            'g##': { root_index: 4, int_val: 9 },\n            gb: { root_index: 4, int_val: 6 },\n            gbb: { root_index: 4, int_val: 5 },\n            a: { root_index: 5, int_val: 9 },\n            an: { root_index: 5, int_val: 9 },\n            'a#': { root_index: 5, int_val: 10 },\n            'a##': { root_index: 5, int_val: 11 },\n            ab: { root_index: 5, int_val: 8 },\n            abb: { root_index: 5, int_val: 7 },\n            b: { root_index: 6, int_val: 11 },\n            bn: { root_index: 6, int_val: 11 },\n            'b#': { root_index: 6, int_val: 0 },\n            'b##': { root_index: 6, int_val: 1 },\n            bb: { root_index: 6, int_val: 10 },\n            bbb: { root_index: 6, int_val: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonical_notes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonic_intervals.length;\n    }\n    /** Return root and accidental associated to a note. */\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    /** Return root, accidental and type associated to a key. */\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            // Unspecified type implies major\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    /** Note value associated to a note name. */\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.int_val;\n    }\n    /** Interval value associated to an interval name. */\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    /** Canonical note name associated to a value. */\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonical_notes[noteValue];\n    }\n    /** Interval name associated to a value. */\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonic_intervals[intervalValue];\n    }\n    /**\n     * Given a note, interval, and interval direction, produce the relative note.\n     */\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    /**\n     * Given a root and note value, produce the relative note name.\n     */\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            // Possibly wrap around. (Add +1 for modulo operator)\n            const reverse_interval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverse_interval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverse_interval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    /**\n     * Return scale tones, given intervals. Each successive interval is\n     * relative to the previous one, e.g., Major Scale:\n     *\n     *   TTSTTTS = [2,2,1,2,2,2,1]\n     *\n     * When used with key = 0, returns C scale (which is isomorphic to\n     * interval list).\n     */\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    /**\n     * Return the interval of a note, given a diatonic scale.\n     * e.g., given the scale C, and the note E, returns M3.\n     */\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    /**\n     * Create a scale map that represents the pitch state for a\n     * `keySignature`. For example, passing a `G` to `keySignature` would\n     * return a scale map with every note naturalized except for `F` which\n     * has an `F#` state.\n     */\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.root_indices[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Music } from './music';\nimport { Tables } from './tables';\nimport { Category, isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('Vex.Flow.Accidental', args);\n}\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.ts` for usage examples.\n */\nclass Accidental extends Modifier {\n    /** Accidentals category string. */\n    static get CATEGORY() {\n        return Category.Accidental;\n    }\n    /** Arrange accidentals inside a ModifierContext. */\n    static format(accidentals, state) {\n        // If there are no accidentals, no need to format their positions.\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const musicFont = Tables.currentMusicFont();\n        const noteheadAccidentalPadding = musicFont.lookupMetric('accidental.noteheadAccidentalPadding');\n        const leftShift = state.left_shift + noteheadAccidentalPadding;\n        const accidentalSpacing = musicFont.lookupMetric('accidental.accidentalSpacing');\n        const additionalPadding = musicFont.lookupMetric('accidental.leftPadding'); // padding to the left of all accidentals\n        const accList = [];\n        let prevNote = undefined;\n        let shiftL = 0;\n        // First determine the accidentals' Y positions from the note.keys\n        for (let i = 0; i < accidentals.length; ++i) {\n            const acc = accidentals[i];\n            const note = acc.getNote();\n            const stave = note.getStave();\n            const index = acc.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), shiftL);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n            }\n            else {\n                accList.push({ line: props.line, shift: shiftL, acc });\n            }\n        }\n        // Sort accidentals by line number.\n        accList.sort((a, b) => b.line - a.line);\n        // FIXME: Confusing name. Each object in this array has a property called `line`.\n        // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n        const lineList = [];\n        // amount by which all accidentals must be shifted right or left for\n        // stem flipping, notehead shifting concerns.\n        let accShift = 0;\n        let previousLine = undefined;\n        // Create an array of unique line numbers (lineList) from accList\n        for (let i = 0; i < accList.length; i++) {\n            const acc = accList[i];\n            // if this is the first line, or a new line, add a lineList\n            if (previousLine === undefined || previousLine !== acc.line) {\n                lineList.push({\n                    line: acc.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                });\n            }\n            // if this accidental is not a flat, the accidental needs 3.0 lines lower\n            // clearance instead of 2.5 lines for b or bb.\n            // FIXME: Naming could use work. acc.acc is very awkward\n            if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n                lineList[lineList.length - 1].flatLine = false;\n            }\n            // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n            if (acc.acc.type !== '##') {\n                lineList[lineList.length - 1].dblSharpLine = false;\n            }\n            // Track how many accidentals are on this line:\n            lineList[lineList.length - 1].numAcc++;\n            // Track the total x_offset needed for this line which will be needed\n            // for formatting lines w/ multiple accidentals:\n            // width = accidental width + universal spacing between accidentals\n            lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n            // if this accShift is larger, use it to keep first column accidentals in the same line\n            accShift = acc.shift > accShift ? acc.shift : accShift;\n            previousLine = acc.line;\n        }\n        // ### Place Accidentals in Columns\n        //\n        // Default to a classic triangular layout (middle accidental farthest left),\n        // but follow exceptions as outlined in G. Read's _Music Notation_ and\n        // Elaine Gould's _Behind Bars_.\n        //\n        // Additionally, this implements different vertical collision rules for\n        // flats (only need 2.5 lines clearance below) and double sharps (only\n        // need 2.5 lines of clearance above or below).\n        //\n        // Classic layouts and exception patterns are found in the 'tables.js'\n        // in 'Tables.accidentalColumnsTable'\n        //\n        // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n        // using as few columns as possible for the verticle structure.\n        //\n        // TODO (?): Allow column to be specified for an accidental at run-time?\n        let totalColumns = 0;\n        // establish the boundaries for a group of notes with clashing accidentals:\n        for (let i = 0; i < lineList.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n                // if this note conflicts with the next:\n                if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n                    // include the next note in the group:\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            // Gets an a line from the `lineList`, relative to the current group\n            const getGroupLine = (index) => lineList[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n            // Set columns for the lines in this group:\n            const groupLength = groupEnd - groupStart + 1;\n            // Set the accidental column for each line of the group\n            let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'second_on_bottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spaced_out_tetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spaced_out_pentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'very_spaced_out_pentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spaced_out_hexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'very_spaced_out_hexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            // If the group contains seven members or more, use ascending parallel lines\n            // of accidentals, using as few columns as possible while avoiding collisions.\n            if (groupLength >= 7) {\n                // First, determine how many columns to use:\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < lineList.length; line++) {\n                        if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                // Then, assign a column to each line of accidentals\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                // If the group contains fewer than seven members, use the layouts from\n                // the Tables.accidentalColumnsTable (See: tables.ts).\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            // Increment i to the last note that was set, so that if a lower set of notes\n            // does not conflict at all with this group, it can have its own classic shape.\n            i = groupEnd;\n        }\n        // ### Convert Columns to x_offsets\n        //\n        // This keeps columns aligned, even if they have different accidentals within them\n        // which sometimes results in a larger x_offset than is an accidental might need\n        // to preserve the symmetry of the accidental shape.\n        //\n        // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n        // music with complex chord clusters.\n        //\n        // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n        // parallel columns.\n        // track each column's max width, which will be used as initial shift of later columns:\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = accShift + leftShift;\n        columnXOffsets[0] = accShift + leftShift;\n        // Fill columnWidths with widest needed x-space;\n        // this is what keeps the columns parallel.\n        lineList.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            // this column's offset = this column's width + previous column's offset\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        // Set the xShift for each accidental according to column offsets:\n        let accCount = 0;\n        lineList.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            // handle all of the accidentals on a given line:\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth;\n                accList[accCount].acc.setXShift(xShift);\n                // keep track of the width of accidentals we've added so far, so that when\n                // we loop, we add space for them.\n                lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        // update the overall layout with the full width of the accidental shapes:\n        state.left_shift += totalShift + additionalPadding;\n    }\n    /** Helper function to determine whether two lines of accidentals collide vertically */\n    static checkCollision(line1, line2) {\n        let clearance = line2.line - line1.line;\n        let clearanceRequired = 3;\n        // But less clearance is required for certain accidentals: b, bb and ##.\n        if (clearance > 0) {\n            // then line 2 is on top\n            clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n            if (line1.dblSharpLine)\n                clearance -= 0.5;\n        }\n        else {\n            // line 1 is on top\n            clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n            if (line2.dblSharpLine)\n                clearance -= 0.5;\n        }\n        const collision = Math.abs(clearance) < clearanceRequired;\n        L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n        return collision;\n    }\n    /**\n     * Use this method to automatically apply accidentals to a set of `voices`.\n     * The accidentals will be remembered between all the voices provided.\n     * Optionally, you can also provide an initial `keySignature`.\n     */\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        // Sort the tickables in each voice by their tick position in the voice.\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        // Default key signature is C major.\n        if (!keySignature)\n            keySignature = 'C';\n        // Get the scale map, which represents the current state of each pitch.\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            // Array to store all pitches that modified accidental states\n            // at this tick position\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                // Only StaveNote implements .addModifier(), which is used below.\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                // Go through each key and determine if an accidental should be applied.\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    // Force a natural for every key without an accidental\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    // Determine if the current pitch has the same accidental\n                    // as the scale state\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    // Determine if an identical pitch in the chord already\n                    // modified the accidental state\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    // Remove accidentals\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    // Add the accidental to the StaveNote\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        // Modify the scale map so that the root pitch has an\n                        // updated state\n                        scaleMap[key.root + octave] = pitch;\n                        // Create the accidental\n                        const accidental = new Accidental(accidentalString);\n                        // Attach the accidental to the StaveNote\n                        staveNote.addModifier(accidental, keyIndex);\n                        // Add the pitch to list of pitches that modified accidentals\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                // process grace notes\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    /**\n     * Create accidental.\n     * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n     * For example: `#`, `##`, `b`, `n`, etc.\n     */\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            // Font size for glyphs\n            font_scale: Tables.NOTATION_FONT_SCALE,\n            // Padding between accidental and parentheses on each side\n            parenLeftPadding: 2,\n            parenRightPadding: 2,\n        };\n        this.accidental = Tables.accidentalCodes(this.type);\n        defined(this.accidental, 'ArgumentError', `Unknown accidental type: ${type}`);\n        // Cautionary accidentals have parentheses around them\n        this.cautionary = false;\n        this.reset();\n    }\n    reset() {\n        const fontScale = this.render_options.font_scale;\n        this.glyph = new Glyph(this.accidental.code, fontScale);\n        this.glyph.setOriginX(1.0);\n        if (this.cautionary) {\n            this.parenLeft = new Glyph(Tables.accidentalCodes('{').code, fontScale);\n            this.parenRight = new Glyph(Tables.accidentalCodes('}').code, fontScale);\n            this.parenLeft.setOriginX(1.0);\n            this.parenRight.setOriginX(1.0);\n        }\n    }\n    /** Get width in pixels. */\n    getWidth() {\n        if (this.cautionary) {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            const parenWidth = parenLeft.getMetrics().width +\n                parenRight.getMetrics().width +\n                this.render_options.parenLeftPadding +\n                this.render_options.parenRightPadding;\n            return this.glyph.getMetrics().width + parenWidth;\n        }\n        else {\n            return this.glyph.getMetrics().width;\n        }\n    }\n    /** Attach this accidental to `note`, which must be a `StaveNote`. */\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        // Accidentals attached to grace notes are rendered smaller.\n        if (isGraceNote(note)) {\n            this.render_options.font_scale = 25;\n            this.reset();\n        }\n        return this;\n    }\n    /** If called, draws parenthesis around accidental. */\n    setAsCautionary() {\n        this.cautionary = true;\n        this.render_options.font_scale = 28;\n        this.reset();\n        return this;\n    }\n    /** Render accidental onto canvas. */\n    draw() {\n        const { type, position, index, cautionary, x_shift, y_shift, glyph, render_options: { parenLeftPadding, parenRightPadding }, } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // Figure out the start `x` and `y` coordinates for note and index.\n        const start = note.getModifierStartXY(position, index);\n        let accX = start.x + x_shift;\n        const accY = start.y + y_shift;\n        L('Rendering: ', type, accX, accY);\n        if (!cautionary) {\n            glyph.render(ctx, accX, accY);\n        }\n        else {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            // Render the accidental in parentheses.\n            parenRight.render(ctx, accX, accY);\n            accX -= parenRight.getMetrics().width;\n            accX -= parenRightPadding;\n            accX -= this.accidental.parenRightPaddingAdjustment;\n            glyph.render(ctx, accX, accY);\n            accX -= glyph.getMetrics().width;\n            accX -= parenLeftPadding;\n            parenLeft.render(ctx, accX, accY);\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\nAccidental.DEBUG = false;\nexport { Accidental };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('Vex.Flow.Stem', args);\n}\nclass Stem extends Element {\n    static get CATEGORY() {\n        return Category.Stem;\n    }\n    // Stem directions\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    // Theme\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    constructor(options) {\n        super();\n        this.stem_up_y_offset = 0;\n        this.stem_down_y_offset = 0;\n        this.stem_up_y_base_offset = 0;\n        this.stem_down_y_base_offset = 0;\n        // Default notehead x bounds\n        this.x_begin = (options === null || options === void 0 ? void 0 : options.x_begin) || 0;\n        this.x_end = (options === null || options === void 0 ? void 0 : options.x_end) || 0;\n        // Y bounds for top/bottom most notehead\n        this.y_top = (options === null || options === void 0 ? void 0 : options.y_top) || 0;\n        this.y_bottom = (options === null || options === void 0 ? void 0 : options.y_bottom) || 0;\n        // Stem top extension\n        this.stem_extension = (options === null || options === void 0 ? void 0 : options.stem_extension) || 0;\n        // Direction of the stem\n        this.stem_direction = (options === null || options === void 0 ? void 0 : options.stem_direction) || 0;\n        // Flag to override all draw calls\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (options === null || options === void 0 ? void 0 : options.stemletHeight) || 0;\n        // Use to adjust the rendered height without affecting\n        // the results of `.getExtents()`\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        // Changing where the stem meets the head\n        this.stem_up_y_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_offset) || 0;\n        this.stem_down_y_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_offset) || 0;\n        this.stem_up_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_base_offset) || 0;\n        this.stem_down_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_base_offset) || 0;\n    }\n    // Set the x bounds for the default notehead\n    setNoteHeadXBounds(x_begin, x_end) {\n        this.x_begin = x_begin;\n        this.x_end = x_end;\n        return this;\n    }\n    // Set the direction of the stem in relation to the noteheads\n    setDirection(direction) {\n        this.stem_direction = direction;\n    }\n    // Set the extension for the stem, generally for flags or beams\n    setExtension(ext) {\n        this.stem_extension = ext;\n    }\n    getExtension() {\n        return this.stem_extension;\n    }\n    // The the y bounds for the top and bottom noteheads\n    setYBounds(y_top, y_bottom) {\n        this.y_top = y_top;\n        this.y_bottom = y_bottom;\n    }\n    // Gets the entire height for the stem\n    getHeight() {\n        const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n        const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension); // parentheses just for grouping.\n        return unsigned_height * this.stem_direction;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    // Get the y coordinates for the very base of the stem to the top of\n    // the extension\n    getExtents() {\n        const isStemUp = this.stem_direction === Stem.UP;\n        const ys = [this.y_top, this.y_bottom];\n        const stemHeight = Stem.HEIGHT + this.stem_extension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Tables.currentMusicFont().lookupMetric('stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    // Render the stem onto the canvas\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stem_x;\n        let stem_y;\n        const stem_direction = this.stem_direction;\n        let y_base_offset = 0;\n        if (stem_direction === Stem.DOWN) {\n            // Down stems are rendered to the left of the head.\n            stem_x = this.x_begin;\n            stem_y = this.y_top + this.stem_down_y_offset;\n            y_base_offset = this.stem_down_y_base_offset;\n        }\n        else {\n            // Up stems are rendered to the right of the head.\n            stem_x = this.x_end;\n            stem_y = this.y_bottom - this.stem_up_y_offset;\n            y_base_offset = this.stem_up_y_base_offset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n        // The offset from the stem's base which is required fo satisfy the stemlet height\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n        // Draw the stem\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('stem', this.getAttribute('id'), { pointerBBox: true });\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n        ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n        ctx.stroke();\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`. */\nStem.DEBUG = false;\nexport { Stem };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextFormatter.DEBUG)\n        log('Vex.Flow.TextFormatter', args);\n}\n/**\n * Text widths are stored in a cache, so we don't have to recompute widths\n * for the same font + string combination.\n *\n * The cache is first keyed by the font information. The key is of the form:\n *   `${family}-${size}-${weight}-${style}`\n * The second level key is the specific text to be measured.\n *\n * The stored value is the measured width in `em` units.\n *   textWidth == textWidthCache[cacheKey][textToMeasure]\n */\nconst textWidthCache = {};\nconst textHeightCache = {};\n/**\n * Applications may register additional fonts via `TextFormatter.registerInfo(info)`.\n * The metrics for those fonts will be made available to the application.\n */\nconst registry = {};\nclass TextFormatter {\n    /**\n     * Return all registered font families.\n     */\n    static getFontFamilies() {\n        const registeredFonts = [];\n        for (const fontFamily in registry) {\n            const formatterInfo = registry[fontFamily];\n            registeredFonts.push(Object.assign({}, formatterInfo));\n        }\n        return registeredFonts;\n    }\n    /**\n     * Call `TextFormatter.registerInfo(info)` to register font information before using this method.\n     *\n     * This method creates a formatter for the font that most closely matches the requested font.\n     * We compare font family, bold, and italic attributes.\n     * This method will return a fallback formatter if there are no matches.\n     */\n    static create(requestedFont = {}) {\n        L('create: ', requestedFont);\n        if (!requestedFont.family) {\n            requestedFont.family = Font.SANS_SERIF;\n        }\n        // TODO: One potential (small) optimization is to cache the TextFormatter object\n        // returned for each font info. We would probably want to clear the cache if\n        // the registry is ever updated.\n        const candidates = [];\n        // The incoming font family is a string of comma-separated font family names.\n        // (e.g., `PetalumaScript, Arial, sans-serif`).\n        const requestedFamilies = requestedFont.family.split(/\\s*,\\s*/);\n        for (const requestedFamily of requestedFamilies) {\n            for (const fontFamily in registry) {\n                // Support cases where the registry contains 'Roboto Slab Medium',\n                // but the requestedFont.family is 'Roboto Slab'.\n                if (fontFamily.startsWith(requestedFamily)) {\n                    candidates.push(registry[fontFamily]);\n                }\n            }\n            if (candidates.length > 0) {\n                break;\n            }\n        }\n        let formatter;\n        if (candidates.length === 0) {\n            // No match, so return a fallback text formatter.\n            formatter = new TextFormatter(Object.values(registry)[0]);\n        }\n        else if (candidates.length === 1) {\n            formatter = new TextFormatter(candidates[0]);\n        }\n        else {\n            const bold = Font.isBold(requestedFont.weight);\n            const italic = Font.isItalic(requestedFont.style);\n            const perfectMatch = candidates.find((f) => f.bold === bold && f.italic === italic);\n            if (perfectMatch) {\n                formatter = new TextFormatter(perfectMatch);\n            }\n            else {\n                const partialMatch = candidates.find((f) => f.italic === italic || f.bold === bold);\n                if (partialMatch) {\n                    formatter = new TextFormatter(partialMatch);\n                }\n                else {\n                    formatter = new TextFormatter(candidates[0]);\n                }\n            }\n        }\n        const fontSize = requestedFont.size;\n        if (typeof fontSize !== 'undefined') {\n            const fontSizeInPt = Font.convertSizeToPointValue(fontSize);\n            formatter.setFontSize(fontSizeInPt);\n        }\n        return formatter;\n    }\n    /**\n     * @param fontFamily used as a key to the font registry.\n     * @returns the same info object that was passed in via `TextFormatter.registerInfo(info)`\n     */\n    static getInfo(fontFamily) {\n        return registry[fontFamily];\n    }\n    /**\n     * Apps may register their own fonts and metrics, and those metrics\n     * will be available to the app for formatting.\n     *\n     * Metrics can be generated from a font file using fontgen_text.js in the tools/fonts directory.\n     * @param info\n     * @param overwrite\n     */\n    static registerInfo(info, overwrite = false) {\n        L('registerInfo: ', info, overwrite);\n        const fontFamily = info.family;\n        const currFontInfo = registry[fontFamily];\n        if (currFontInfo === undefined || overwrite) {\n            registry[fontFamily] = info;\n        }\n    }\n    /**\n     * Use `TextFormatter.create(...)` to build an instance from information previously\n     * registered via `TextFormatter.registerInfo(info)`.\n     */\n    constructor(formatterInfo) {\n        /** Font family. */\n        this.family = '';\n        /** Specified in `pt` units. */\n        this.size = 14;\n        /** Font metrics are extracted at 1000 upem (units per em). */\n        this.resolution = 1000;\n        /**\n         * For text formatting, we do not require glyph outlines, but instead rely on glyph\n         * bounding box metrics such as:\n         * ```\n         * {\n         *    x_min: 48,\n         *    x_max: 235,\n         *    y_min: -17,\n         *    y_max: 734,\n         *    ha: 751,\n         *    leftSideBearing: 48,\n         *    advanceWidth: 286,\n         *  }\n         * ```\n         */\n        this.glyphs = {};\n        this.serifs = false;\n        this.monospaced = false;\n        this.italic = false;\n        this.bold = false;\n        this.superscriptOffset = 0;\n        this.subscriptOffset = 0;\n        this.maxSizeGlyph = '@';\n        // This is an internal key used to index the `textWidthCache`.\n        this.cacheKey = '';\n        this.updateParams(formatterInfo);\n    }\n    get localHeightCache() {\n        var _a;\n        if (textHeightCache[this.cacheKey] === undefined) {\n            textHeightCache[this.cacheKey] = {};\n        }\n        return (_a = textHeightCache[this.cacheKey]) !== null && _a !== void 0 ? _a : {};\n    }\n    updateParams(params) {\n        if (params.family)\n            this.family = params.family;\n        if (params.resolution)\n            this.resolution = params.resolution;\n        if (params.glyphs)\n            this.glyphs = params.glyphs;\n        if (params.serifs)\n            this.serifs = params.serifs;\n        if (params.monospaced)\n            this.monospaced = params.monospaced;\n        if (params.italic)\n            this.italic = params.italic;\n        if (params.bold)\n            this.bold = params.bold;\n        if (params.maxSizeGlyph)\n            this.maxSizeGlyph = params.maxSizeGlyph;\n        if (params.superscriptOffset)\n            this.superscriptOffset = params.superscriptOffset;\n        if (params.subscriptOffset)\n            this.subscriptOffset = params.subscriptOffset;\n        this.updateCacheKey();\n    }\n    /** Create a hash with the current font data, so we can cache computed widths. */\n    updateCacheKey() {\n        const family = this.family.replace(/\\s+/g, '_');\n        const size = this.size;\n        const weight = this.bold ? FontWeight.BOLD : FontWeight.NORMAL;\n        const style = this.italic ? FontStyle.ITALIC : FontStyle.NORMAL;\n        // Use the same key format as SVGContext.\n        this.cacheKey = `${family}%${size}%${weight}%${style}`;\n    }\n    /**\n     * The glyphs table is indexed by the character (e.g., 'C', '@').\n     * See: robotoslab_glyphs.ts & petalumascript_glyphs.ts.\n     */\n    getGlyphMetrics(character) {\n        if (this.glyphs[character]) {\n            return this.glyphs[character];\n        }\n        else {\n            return this.glyphs[this.maxSizeGlyph];\n        }\n    }\n    get maxHeight() {\n        const metrics = this.getGlyphMetrics(this.maxSizeGlyph);\n        return (metrics.ha / this.resolution) * this.fontSizeInPixels;\n    }\n    /**\n     * Retrieve the character's advanceWidth as a fraction of an `em` unit.\n     * For the space character ' ' as defined in the:\n     *   petalumascript_glyphs.ts: 250 advanceWidth in the 1000 unitsPerEm font returns 0.25.\n     *   robotoslab_glyphs.ts:     509 advanceWidth in the 2048 unitsPerEm font returns 0.2485.\n     */\n    getWidthForCharacterInEm(c) {\n        var _a;\n        const metrics = this.getGlyphMetrics(c);\n        if (!metrics) {\n            // An arbitrary number, close to the `em` width of the '#' and '5' characters in PetalumaScript.\n            return 0.65;\n        }\n        else {\n            const advanceWidth = (_a = metrics.advanceWidth) !== null && _a !== void 0 ? _a : 0;\n            return advanceWidth / this.resolution;\n        }\n    }\n    /**\n     * Retrieve the character's y bounds (ymin, ymax) and height.\n     */\n    getYForCharacterInPx(c) {\n        const metrics = this.getGlyphMetrics(c);\n        const rv = { yMin: 0, yMax: this.maxHeight, height: this.maxHeight };\n        if (!metrics) {\n            return rv;\n        }\n        else {\n            if (typeof metrics.y_min === 'number') {\n                rv.yMin = (metrics.y_min / this.resolution) * this.fontSizeInPixels;\n            }\n            if (typeof metrics.y_max === 'number') {\n                rv.yMax = (metrics.y_max / this.resolution) * this.fontSizeInPixels;\n            }\n            rv.height = rv.yMax - rv.yMin;\n            return rv;\n        }\n    }\n    getYForStringInPx(str) {\n        const entry = this.localHeightCache;\n        const extent = { yMin: 0, yMax: this.maxHeight, height: this.maxHeight };\n        const cache = entry[str];\n        if (cache !== undefined) {\n            return cache;\n        }\n        for (let i = 0; i < str.length; ++i) {\n            const curY = this.getYForCharacterInPx(str[i]);\n            extent.yMin = Math.min(extent.yMin, curY.yMin);\n            extent.yMax = Math.max(extent.yMax, curY.yMax);\n            extent.height = extent.yMax - extent.yMin;\n        }\n        entry[str] = extent;\n        return extent;\n    }\n    /**\n     * Retrieve the total width of `text` in `em` units.\n     */\n    getWidthForTextInEm(text) {\n        const key = this.cacheKey;\n        // Get the cache for this specific font family, size, weight, style combination.\n        // The cache contains previously computed widths for different `text` strings.\n        let cachedWidths = textWidthCache[key];\n        if (cachedWidths === undefined) {\n            cachedWidths = {};\n            textWidthCache[key] = cachedWidths;\n        }\n        let width = cachedWidths[text];\n        if (width === undefined) {\n            width = 0;\n            for (let i = 0; i < text.length; ++i) {\n                width += this.getWidthForCharacterInEm(text[i]);\n            }\n            cachedWidths[text] = width;\n        }\n        return width;\n    }\n    /** The width of the text (in `em`) is scaled by the font size (in `px`). */\n    getWidthForTextInPx(text) {\n        return this.getWidthForTextInEm(text) * this.fontSizeInPixels;\n    }\n    /**\n     * @param size in pt.\n     */\n    setFontSize(size) {\n        this.size = size;\n        // The width cache key depends on the current font size.\n        this.updateCacheKey();\n        return this;\n    }\n    /** `this.size` is specified in points. Convert to pixels. */\n    get fontSizeInPixels() {\n        return this.size * Font.scaleToPxFrom.pt;\n    }\n    getResolution() {\n        return this.resolution;\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextFormatter.DEBUG` to `true`. */\nTextFormatter.DEBUG = false;\nexport { TextFormatter };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote, isTabNote } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('Vex.Flow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nclass Annotation extends Modifier {\n    /** Annotations category string. */\n    static get CATEGORY() {\n        return Category.Annotation;\n    }\n    // Use the same padding for annotations as note head so the\n    // words don't run into each other.\n    static get minAnnotationPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /** Arrange annotations within a `ModifierContext` */\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            const textFormatter = TextFormatter.create(annotation.textFont);\n            // Text height is expressed in fractional stave spaces.\n            const textLines = (2 + textFormatter.getYForStringInPx(annotation.text).height) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const glyphWidth = note.getGlyphProps().getWidth();\n            // Get the text width from the font metrics.\n            const textWidth = textFormatter.getWidthForTextInPx(annotation.text);\n            if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n                maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n            }\n            else if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n                maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                rightWidth = Math.max(rightWidth, textWidth);\n            }\n            else {\n                leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n                rightWidth = Math.max(rightWidth, textWidth / 2);\n                maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n            }\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (isTabNote(note)) {\n                if (note.render_options.draw_stem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (isTabNote(note)) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.top_text_line + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.top_text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.top_text_line);\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (isTabNote(note)) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.text_line + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.text_line);\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.text_line);\n            }\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    /**\n     * Annotations inherit from `Modifier` and is positioned correctly when\n     * in a `ModifierContext`.\n     * Create a new `Annotation` with the string `text`.\n     */\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        // warning: the default in the constructor is TOP, but in the factory the default is BOTTOM.\n        // this is to support legacy application that may expect this.\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n        this.resetFont();\n        // The default width is calculated from the text.\n        this.setWidth(Tables.textWidth(text));\n    }\n    /**\n     * Set vertical position of text (above or below stave).\n     * @param just value in `AnnotationVerticalJustify`.\n     */\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    /**\n     * Get horizontal justification.\n     */\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    /**\n     * Set horizontal justification.\n     * @param justification value in `Annotation.Justify`.\n     */\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    /** Render text beside the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const textFormatter = TextFormatter.create(this.textFont);\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        // Apply style might not save context, if this.style is undefined, so we\n        // still need to save context state just before this, since we will be\n        // changing ctx parameters below.\n        this.applyStyle();\n        ctx.openGroup('annotation', this.getAttribute('id'));\n        ctx.setFont(this.textFont);\n        const text_width = textFormatter.getWidthForTextInPx(this.text);\n        const text_height = textFormatter.getYForStringInPx(this.text).height;\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - text_width;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - text_width / 2;\n        } /* CENTER_STEM */\n        else {\n            x = note.getStemX() - text_width / 2;\n        }\n        let stem_ext = {};\n        let spacing = 0;\n        const has_stem = note.hasStem();\n        const stave = note.checkStave();\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        if (has_stem) {\n            stem_ext = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            // Use the largest (lowest) Y value\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE + text_height;\n            if (has_stem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stem_ext.topY + text_height + spacing * this.text_line);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.text_line) - 1;\n            const yb = stave.getYForBottomText(this.text_line);\n            y = yt + (yb - yt) / 2 + text_height / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            const topY = Math.min(...note.getYs());\n            y = topY - (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (has_stem && stemDirection === Stem.UP) {\n                // If the stem is above the stave already, go with default line width vs. actual\n                // since the lines between don't really matter.\n                spacing = stem_ext.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stem_ext.topY - spacing * (this.text_line + 1));\n            }\n        } /* CENTER_STEM */\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        ctx.fillText(this.text, x, y);\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\nAnnotation.DEBUG = false;\nAnnotation.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n/** Text annotations can be positioned and justified relative to the note. */\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\nexport { Annotation };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('Vex.Flow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\n// This includes both staff and ledger lines\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    // Initially, snap to nearest staff line or space\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\n// Helper function for checking if a Note object is either a StaveNote or a GraceNote.\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nfunction getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nfunction getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\n/**\n * Get the initial offset of the articulation from the y value of the starting position.\n * This is required because the top/bottom text positions already have spacing applied to\n * provide a \"visually pleasant\" default position. However the y values provided from\n * the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n * normalizes this asymmetry.\n * @param note\n * @param position\n * @returns\n */\nfunction getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            // this amount is larger than the stem-tip offset because we start from\n            // the center of the notehead\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.ts` for usage examples.\n */\nclass Articulation extends Modifier {\n    /** Articulations category string. */\n    static get CATEGORY() {\n        return Category.Articulation;\n    }\n    /**\n     * FIXME:\n     * Most of the complex formatting logic (ie: snapping to space) is\n     * actually done in .render(). But that logic belongs in this method.\n     *\n     * Unfortunately, this isn't possible because, by this point, stem lengths\n     * have not yet been finalized. Finalized stem lengths are required to determine the\n     * initial position of any stem-side articulation.\n     *\n     * This indicates that all objects should have their stave set before being\n     * formatted. It can't be an optional if you want accurate vertical positioning.\n     * Consistently positioned articulations that play nice with other modifiers\n     * won't be possible until we stop relying on render-time formatting.\n     *\n     * Ideally, when this function has completed, the vertical articulation positions\n     * should be ready to render without further adjustment. But the current state\n     * is far from this ideal.\n     */\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        let maxGlyphWidth = 0;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), defined(articulation.glyph.getMetrics().height) / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            maxGlyphWidth = Math.max(note.getGlyphProps().getWidth(), maxGlyphWidth);\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            // Decide if we need to consider beam direction in placement.\n            if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.top_text_line, ABOVE);\n                const curTop = noteLine + state.top_text_line + 0.5;\n                // If articulation must be above stave, add lines between note and stave top\n                if (!articulation.articulation.between_lines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.top_text_line);\n                state.top_text_line += increment;\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.text_line, BELOW);\n                const curBottom = noteLine + state.text_line + 0.5;\n                // if articulation must be below stave, add lines from note to stave bottom\n                if (!articulation.articulation.between_lines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.text_line);\n                state.text_line += increment;\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        const overlap = Math.min(Math.max(width - maxGlyphWidth, 0), Math.max(width - (state.left_shift + state.right_shift), 0));\n        state.left_shift += overlap / 2;\n        state.right_shift += overlap / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(artic, 0));\n    }\n    /**\n     * Create a new articulation.\n     * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts` or Glyph code.\n     *\n     * Notes (by default):\n     * - Glyph codes ending with 'Above' will be positioned ABOVE\n     * - Glyph codes ending with 'Below' will be positioned BELOW\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.position = ABOVE;\n        this.render_options = {\n            font_scale: Tables.NOTATION_FONT_SCALE,\n        };\n        this.reset();\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        // Use type as glyph code, if not defined as articulation code\n        if (!this.articulation) {\n            this.articulation = { code: this.type, between_lines: false };\n            if (this.type.endsWith('Above'))\n                this.position = ABOVE;\n            if (this.type.endsWith('Below'))\n                this.position = BELOW;\n        }\n        const code = (this.position === ABOVE ? this.articulation.aboveCode : this.articulation.belowCode) || this.articulation.code;\n        this.glyph = new Glyph(code !== null && code !== void 0 ? code : '', this.render_options.font_scale);\n        defined(this.glyph, 'ArgumentError', `Articulation not found: ${this.type}`);\n        this.setWidth(defined(this.glyph.getMetrics().width));\n    }\n    /** Set if articulation should be rendered between lines. */\n    setBetweenLines(betweenLines = true) {\n        this.articulation.between_lines = betweenLines;\n        return this;\n    }\n    /** Render articulation in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, glyph, text_line: textLine } = this;\n        const canSitBetweenLines = this.articulation.between_lines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        // Articulations are centered over/under the note head.\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        const padding = Tables.currentMusicFont().lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n        let y = {\n            [ABOVE]: () => {\n                glyph.setOrigin(0.5, 1);\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                glyph.setOrigin(0.5, 0);\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                glyph.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + padding * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        glyph.render(ctx, x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\nexport { Articulation };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2021.\n// MIT License\nimport { Category } from './typeguard';\nexport class RenderContext {\n    static get CATEGORY() {\n        return Category.RenderContext;\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n    /**\n     * This is kept for backwards compatibility with 3.0.9.\n     * @deprecated use `setFont(...)` instead since it now supports CSS font shorthand.\n     */\n    setRawFont(f) {\n        this.setFont(f);\n        return this;\n    }\n}\n/**\n * Draw a tiny dot marker on the specified context. A great debugging aid.\n * @param ctx context\n * @param x dot x coordinate\n * @param y dot y coordinate\n * @param color\n */\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    // draw a circle\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport class Tickable extends Element {\n    static get CATEGORY() {\n        return Category.Tickable;\n    }\n    constructor() {\n        super();\n        this._preFormatted = false;\n        this._postFormatted = false;\n        // These properties represent the duration of\n        // this tickable element.\n        this.ticks = new Fraction(0, 1); // Fractional value of ticks\n        this.intrinsicTicks = 0; // Floating point value of ticks\n        this.tickMultiplier = new Fraction(1, 1);\n        // Formatter metrics\n        this.width = 0;\n        this.x_shift = 0; // Shift from tick context\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.align_center = false;\n        this.center_x_shift = 0; // Shift from tick context if center aligned\n        // This flag tells the formatter to ignore this tickable during\n        // formatting and justification. It is set by tickables such as BarNote.\n        this.ignore_ticks = false;\n        // This is a space for an external formatting class or function to maintain\n        // metrics.\n        this.formatterMetrics = {\n            // The freedom of a tickable is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n            // The simplified rational duration of this tick as a string. It can be\n            // used as an index to a map or hashtable.\n            duration: '',\n            // The number of formatting iterations undergone.\n            iterations: 0,\n            // The space in pixels allocated by this formatter, along with the mean space\n            // for tickables of this duration, and the deviation from the mean.\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    /** Reset the Tickable, this function will be overloaded. */\n    reset() {\n        return this;\n    }\n    /** Return the ticks. */\n    getTicks() {\n        return this.ticks;\n    }\n    /** Check if it ignores the ticks. */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Ignore the ticks. */\n    setIgnoreTicks(flag) {\n        this.ignore_ticks = flag;\n        return this;\n    }\n    /** Set width of note. Used by the formatter for positioning. */\n    setWidth(width) {\n        this.width = width;\n    }\n    /** Get width of note. Used by the formatter for positioning. */\n    getWidth() {\n        if (!this._preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    /** Displace note by `x` pixels. Used by the formatter. */\n    setXShift(x) {\n        this.x_shift = x;\n        return this;\n    }\n    /** Get the `x` displaced pixels of the note. */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Get `x` position of this tick context. */\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.x_shift;\n    }\n    /** Return the formatterMetrics. */\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    /** Return the center `x` shift. */\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.center_x_shift;\n        }\n        return 0;\n    }\n    /** Set the center `x` shift. */\n    setCenterXShift(centerXShift) {\n        this.center_x_shift = centerXShift;\n        return this;\n    }\n    // Check if tickable is center aligned. */\n    isCenterAligned() {\n        return this.align_center;\n    }\n    // Set/unset center alignment. */\n    setCenterAlignment(align_center) {\n        this.align_center = align_center;\n        return this;\n    }\n    /**\n     * Return the associated voice. Every tickable must be associated with a voice.\n     * This allows formatters and preFormatter to associate them with the right modifierContexts.\n     */\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    /** Set the associated voice. */\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    /** Get the tuplet. */\n    getTuplet() {\n        return this.tuplet;\n    }\n    /** Return a list of Tuplets. */\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    /**\n     * Reset the specific Tuplet (if this is not provided, all tuplets are reset).\n     * Remove any prior tuplets from the tick calculation and\n     * reset the intrinsic tick value.\n     */\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                // Revert old multiplier by inverting numerator & denom.:\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            // Revert old multiplier by inverting numerator & denom.:\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    /** Attach to new tuplet. */\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    /**\n     * Add self to the provided ModifierContext `mc`.\n     * If this tickable has modifiers, set modifierContext.\n     * @returns this\n     */\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        this._preFormatted = false;\n        return this;\n    }\n    /**\n     * Optional, if tickable has modifiers, associate a Modifier.\n     * @param mod the modifier\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        this._preFormatted = false;\n        return this;\n    }\n    /** Get the list of associated modifiers. */\n    getModifiers() {\n        return this.modifiers;\n    }\n    /** Set the Tick Context. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this._preFormatted = false;\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    /** Preformat the Tickable. */\n    preFormat() {\n        if (this._preFormatted)\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    /** Set preformatted status. */\n    set preFormatted(value) {\n        this._preFormatted = value;\n    }\n    get preFormatted() {\n        return this._preFormatted;\n    }\n    /** Postformat the Tickable. */\n    postFormat() {\n        if (this._postFormatted)\n            return this;\n        this._postFormatted = true;\n        return this;\n    }\n    /** Set postformatted status. */\n    set postFormatted(value) {\n        this._postFormatted = value;\n    }\n    get postFormatted() {\n        return this._postFormatted;\n    }\n    /** Return the intrinsic ticks. */\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    /** Set the intrinsic ticks. */\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Get the tick multiplier. */\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    /** Apply a tick multiplier. */\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Set the duration. */\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    /** Attach this note to a modifier context. */\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { drawDot } from './rendercontext';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport class Note extends Tickable {\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Note;\n    }\n    /** Debug helper. Displays various note metrics for the given note. */\n    static plotMetrics(ctx, note, yPos) {\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        // Preserve backwards-compatibility\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        // If specified type is invalid, return undefined.\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        // If no type specified, check duration or custom types\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            // If we have keys, try and check if we've got a custom glyph\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    // We have a custom glyph specified after the note eg. /X2\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        // Calculate the tick duration of the note\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        // Are there any dots?\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        // Add ticks as necessary depending on the numbr of dots\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    /**\n     * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n     * positioning and layout.\n     *\n     * @param noteStruct To create a new note you need to provide a `noteStruct`.\n     */\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        /** Parses `noteStruct` and get note properties. */\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        // Set note properties from parameters.\n        this.keys = noteStruct.keys || [];\n        // per-pitch properties\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.duration_override) {\n            // Custom duration\n            this.setDuration(noteStruct.duration_override);\n        }\n        else {\n            // Default duration\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        // Get the glyph code for this note from the font.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Tables.getGlyphProps(this.duration, t));\n        // Note to play for audio players.\n        this.playNote = undefined;\n        // Positioning contexts used by the Formatter.\n        this.ignore_ticks = false;\n        // Positioning variables\n        this.width = 0; // Width in pixels calculated after preFormat\n        this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n        this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n        this.x_shift = 0; // X shift from tick context X\n        this.ys = []; // list of y coordinates for each note\n        // we need to hold on to these for ties and beams.\n        if (noteStruct.align_center) {\n            this.setCenterAlignment(noteStruct.align_center);\n        }\n        // The render surface.\n        this.render_options = {\n            annotation_spacing: 5,\n            glyph_font_scale: 1,\n            stroke_px: 1,\n            scale: 1,\n            font: '',\n            y_shift: 0,\n        };\n    }\n    /**\n     * Get the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    getPlayNote() {\n        return this.playNote;\n    }\n    /**\n     * Set the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    /**\n     * @returns true if this note is a type of rest.\n     *\n     * Rests don't have pitches, but take up space in the score.\n     * Subclasses should override this default implementation.\n     */\n    isRest() {\n        return false;\n    }\n    /** Add stroke. */\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the target stave. */\n    getStave() {\n        return this.stave;\n    }\n    /** Check and get the target stave. */\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /** Set the target stave. */\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    /** Get spacing to the left of the notes. */\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    /** Get spacing to the right of the notes. */\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    /** Set spacing to the left of the notes. */\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    /** Set spacing to the right of the notes. */\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Get the stave line number for the note. */\n    // eslint-disable-next-line\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    /** Get the stave line number for rest. */\n    getLineForRest() {\n        return 0;\n    }\n    /**\n     * @deprecated Use `getGlyphProps()` instead.\n     */\n    // eslint-disable-next-line\n    getGlyph() {\n        return this.glyphProps;\n    }\n    /** Get the glyph associated with this note. */\n    getGlyphProps() {\n        return this.glyphProps;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return this.glyphProps.getWidth(this.render_options.glyph_font_scale);\n    }\n    /**\n     * Set Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    /**\n     * Get Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    /**\n     * Get the Y position of the space above the stave onto which text can\n     * be rendered.\n     */\n    getYForTopText(text_line) {\n        return this.checkStave().getYForTopText(text_line);\n    }\n    /** Return the voice that this note belongs in. */\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    /** Attach this note to `voice`. */\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the `TickContext` for this note. */\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    /** Set the `TickContext` for this note. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Accessor to duration. */\n    getDuration() {\n        return this.duration;\n    }\n    /** Accessor to isDotted. */\n    isDotted() {\n        return this.getModifiersByType(Category.Dot).length > 0;\n    }\n    /** Accessor to hasStem. */\n    hasStem() {\n        return false;\n    }\n    /** Accessor to note type. */\n    getNoteType() {\n        return this.noteType;\n    }\n    /** Get the beam. */\n    getBeam() {\n        return this.beam;\n    }\n    /** Check and get the beam. */\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    /** Check it has a beam. */\n    hasBeam() {\n        return this.beam != undefined;\n    }\n    /** Set the beam. */\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    /**\n     * Attach a modifier to this note.\n     * @param modifier the Modifier to add.\n     * @param index of the key to modify.\n     * @returns this\n     */\n    addModifier(modifier, index = 0) {\n        const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n        // Backwards compatibility with 3.0.9.\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            // eslint-disable-next-line\n            console.warn(signature + ' expected a number for `index`, but received a string.');\n        }\n        // Some versions of VexFlow had the two parameters reversed.\n        // Check here and throw an error if the argument types are not correct.\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        super.addModifier(modifier);\n        return this;\n    }\n    /** Get all modifiers of a specific type in `this.modifiers`. */\n    getModifiersByType(type) {\n        return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n    }\n    /** Get the coordinates for where modifiers begin. */\n    // eslint-disable-next-line\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    getRightParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n    }\n    getLeftParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getLeftDisplacedHeadPx() - this.x_shift : -this.x_shift;\n    }\n    getFirstDotPx() {\n        let px = this.getRightDisplacedHeadPx();\n        if (this.checkModifierContext().getMembers('Parenthesis').length !== 0)\n            px += Tables.currentMusicFont().lookupMetric('parenthesis.default.width');\n        return px;\n    }\n    /** Get the metrics for this note. */\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.getState().left_shift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.getState().right_shift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx - // subtract left modifiers\n            modRightPx - // subtract right modifiers\n            this.leftDisplacedHeadPx - // subtract left displaced head\n            this.rightDisplacedHeadPx; // subtract right displaced head\n        // NOTE: If you change this, remember to update MockTickable.getMetrics() in the tests/ directory.\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            // Modifier spacing.\n            modLeftPx,\n            modRightPx,\n            // Displaced note head on left or right.\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    /**\n     * Get the absolute `X` position of this note's tick context. This\n     * excludes x_shift, so you'll need to factor it in if you're\n     * looking for the post-formatted x-position.\n     */\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        // Position note to left edge of tick context.\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Tables.currentMusicFont().lookupMetric('stave.padding');\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    /** Get point for notes. */\n    static getPoint(size) {\n        // for sizes other than 'default', note is 2/3 of the default value\n        return size == 'default' ? Tables.NOTATION_FONT_SCALE : (Tables.NOTATION_FONT_SCALE / 5) * 3;\n    }\n    /** Get the direction of the stem. */\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the top and bottom `y` values of the stem. */\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the `x` coordinate to the right of the note. */\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const note_glyph_width = this.glyphProps.getWidth();\n        tieStartX += note_glyph_width / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    /** Get the `x` coordinate to the left of the note. */\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const note_glyph_width = this.glyphProps.getWidth();\n        tieEndX += note_glyph_width / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    // Get the pitches in the note\n    getKeys() {\n        return this.keys;\n    }\n    // Get the properties for all the keys in the note\n    getKeyProps() {\n        return this.keyProps;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    static get CATEGORY() {\n        return Category.StaveModifier;\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    constructor() {\n        super();\n        this.width = 0;\n        this.x = 0;\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /**\n     * Runs setYShift() for the Glyph object so that it matches the position of line for\n     * the Stave provided.  A `customShift` can also be given (measured in the same units\n     * as `setYShift` not in lines) and this will be added after all other positions are\n     * calculated from the Stave.\n     *\n     * Note that this routine only sets the yShift; it does not actually \"place\" (meaning\n     * draw) the Glyph on the Stave.  Call .draw() afterwards to do that.\n     */\n    placeGlyphOnLine(glyph, stave, line, customShift = 0) {\n        glyph.setYShift(stave.getYForLine(line !== null && line !== void 0 ? line : 0) - stave.getYForGlyphs() + customShift);\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Barline;\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    // Draw barlines\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('stavebarline', this.getAttribute('id'));\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                // If the barline is shifted over (in front of clef/time/key)\n                // Draw vertical bar at the beginning.\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n    drawVerticalBar(stave, x, double_bar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (double_bar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let x_shift = 3;\n        if (!begin) {\n            x_shift = -5;\n        }\n        staveCtx.fillRect(x + x_shift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dot_radius = 2;\n        // Shift dots left or right\n        if (begin) {\n            x_shift += 4;\n        }\n        else {\n            x_shift -= 4;\n        }\n        const dot_x = x + x_shift + dot_radius / 2;\n        // calculate the y offset based on number of stave lines\n        let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dot_y = topY + y_offset + dot_radius / 2;\n        // draw the top repeat dot\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        // draw the bottom repeat dot\n        dot_y += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author: Aaron (@AaronDavidNewman)\n//\n// This implements chord symbols above/below a chord.\n// Chord symbols are modifiers that can be attached to notes.\n// They can contain multiple 'blocks' which represent text or\n// glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.ts` for usage examples.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('Vex.Flow.ChordSymbol', args);\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolTypes;\n(function (SymbolTypes) {\n    SymbolTypes[SymbolTypes[\"GLYPH\"] = 1] = \"GLYPH\";\n    SymbolTypes[SymbolTypes[\"TEXT\"] = 2] = \"TEXT\";\n    SymbolTypes[SymbolTypes[\"LINE\"] = 3] = \"LINE\";\n})(SymbolTypes || (SymbolTypes = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\n/**\n * ChordSymbol is a modifier that creates a chord symbol above/below a chord.\n * As a modifier, it is attached to an existing note.\n */\nclass ChordSymbol extends Modifier {\n    static get CATEGORY() {\n        return Category.ChordSymbol;\n    }\n    static get superSubRatio() {\n        return ChordSymbol.metrics.global.superSubRatio;\n    }\n    /** Currently unused: Globally turn off text formatting, if the built-in formatting does not work for your font. */\n    static set NO_TEXT_FORMAT(val) {\n        ChordSymbol.noFormat = val;\n    }\n    static get NO_TEXT_FORMAT() {\n        return ChordSymbol.noFormat;\n    }\n    static getMetricForGlyph(glyphCode) {\n        if (ChordSymbol.metrics.glyphs[glyphCode]) {\n            return ChordSymbol.metrics.glyphs[glyphCode];\n        }\n        return undefined;\n    }\n    static get engravingFontResolution() {\n        return Tables.currentMusicFont().getResolution();\n    }\n    static get spacingBetweenBlocks() {\n        return ChordSymbol.metrics.global.spacing / ChordSymbol.engravingFontResolution;\n    }\n    static getWidthForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0.65; // probably should do something here.\n        }\n        return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n    }\n    static getYShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return metric.yOffset / ChordSymbol.engravingFontResolution;\n    }\n    static getXShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n    }\n    static get superscriptOffset() {\n        return ChordSymbol.metrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get subscriptOffset() {\n        return ChordSymbol.metrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get kerningOffset() {\n        return ChordSymbol.metrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get metrics() {\n        const chordSymbol = Tables.currentMusicFont().getMetrics().chordSymbol;\n        if (!chordSymbol)\n            throw new RuntimeError('BadMetrics', `chordSymbol missing`);\n        return chordSymbol;\n    }\n    static get lowerKerningText() {\n        // For example, see: `bravura_metrics.ts`\n        // BravuraMetrics.glyphs.chordSymbol.global.lowerKerningText, which returns an array of letters.\n        // ['D', 'F', 'P', 'T', 'V', 'Y']\n        return ChordSymbol.metrics.global.lowerKerningText;\n    }\n    static get upperKerningText() {\n        return ChordSymbol.metrics.global.upperKerningText;\n    }\n    static isSuperscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    static isSubscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /**\n     * Estimate the width of the whole chord symbol, based on the sum of the widths of the individual blocks.\n     * Estimate how many lines above/below the staff we need.\n     */\n    static format(symbols, state) {\n        var _a;\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let nonSuperWidth = 0;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (const symbol of symbols) {\n            const fontSize = Font.convertSizeToPointValue((_a = symbol.textFont) === null || _a === void 0 ? void 0 : _a.size);\n            const fontAdj = Font.scaleSize(fontSize, 0.05);\n            const glyphAdj = fontAdj * 2;\n            const note = symbol.checkAttachedNote();\n            let symbolWidth = 0;\n            let lineSpaces = 1;\n            let vAlign = false;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = ChordSymbol.isSuperscript(block);\n                const sub = ChordSymbol.isSubscript(block);\n                const superSubScale = sup || sub ? ChordSymbol.superSubRatio : 1;\n                const adj = block.symbolType === SymbolTypes.GLYPH ? glyphAdj * superSubScale : fontAdj * superSubScale;\n                // If there are super/subscripts, they extend beyond the line so\n                // assume they take up 2 lines\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                // If there is a symbol-specific offset, add it but consider font\n                // size since font and glyphs will be interspersed.\n                const fontSize = symbol.textFormatter.fontSizeInPixels;\n                const superSubFontSize = fontSize * superSubScale;\n                if (block.symbolType === SymbolTypes.GLYPH && block.glyph !== undefined) {\n                    block.width = ChordSymbol.getWidthForGlyph(block.glyph) * superSubFontSize;\n                    block.yShift += ChordSymbol.getYShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.xShift += ChordSymbol.getXShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.glyph.scale = block.glyph.scale * adj;\n                }\n                else if (block.symbolType === SymbolTypes.TEXT) {\n                    block.width = block.width * superSubFontSize;\n                    block.yShift += symbol.getYOffsetForText(block.text) * adj;\n                }\n                if (block.symbolType === SymbolTypes.GLYPH &&\n                    block.glyph !== undefined &&\n                    block.glyph.code === ChordSymbol.glyphs.over.code) {\n                    lineSpaces = 2;\n                }\n                block.width += ChordSymbol.spacingBetweenBlocks * fontSize * superSubScale;\n                // If a subscript immediately  follows a superscript block, try to\n                // overlay them.\n                if (sup && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (!ChordSymbol.isSuperscript(prev)) {\n                        nonSuperWidth = width;\n                    }\n                }\n                if (sub && nonSuperWidth > 0) {\n                    vAlign = true;\n                    // slide the symbol over so it lines up with superscript\n                    block.xShift = block.xShift + (nonSuperWidth - width);\n                    width = nonSuperWidth;\n                    nonSuperWidth = 0;\n                    // If we have vertically lined up, turn kerning off.\n                    symbol.setEnableKerning(false);\n                }\n                if (!sup && !sub) {\n                    nonSuperWidth = 0;\n                }\n                block.vAlign = vAlign;\n                width += block.width;\n                symbolWidth = width;\n            }\n            // make kerning adjustments after computing super/subscripts\n            symbol.updateKerningAdjustments();\n            symbol.updateOverBarAdjustments();\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.top_text_line);\n                state.top_text_line += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.text_line + 1);\n                state.text_line += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth() && isStemmableNote(note)) {\n                const glyphWidth = note.getGlyphProps().getWidth();\n                if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.LEFT) {\n                    maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                    leftWidth = Math.max(leftWidth, symbolWidth) + ChordSymbol.minPadding;\n                }\n                else if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.RIGHT) {\n                    maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                    rightWidth = Math.max(rightWidth, symbolWidth);\n                }\n                else {\n                    leftWidth = Math.max(leftWidth, symbolWidth / 2) + ChordSymbol.minPadding;\n                    rightWidth = Math.max(rightWidth, symbolWidth / 2);\n                    maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                    maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n                }\n            }\n            width = 0; // reset symbol width\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.useKerning = true;\n        this.reportWidth = true;\n        this.resetFont();\n    }\n    /**\n     * Default text font.\n     * Choose a font family that works well with the current music engraving font.\n     * @override `Element.TEXT_FONT`.\n     */\n    static get TEXT_FONT() {\n        let family = 'Roboto Slab, Times, serif';\n        if (Tables.currentMusicFont().getName() === 'Petaluma') {\n            // Fixes Issue #1180\n            family = 'PetalumaScript, Arial, sans-serif';\n        }\n        return {\n            family,\n            size: 12,\n            weight: FontWeight.NORMAL,\n            style: FontStyle.NORMAL,\n        };\n    }\n    /**\n     * The offset is specified in `em`. Scale this value by the font size in pixels.\n     */\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    updateOverBarAdjustments() {\n        const barIndex = this.symbolBlocks.findIndex(({ symbolType, glyph }) => symbolType === SymbolTypes.GLYPH && glyph !== undefined && glyph.code === 'csymDiagonalArrangementSlash');\n        if (barIndex < 0) {\n            return;\n        }\n        const bar = this.symbolBlocks[barIndex];\n        const xoff = bar.width / 4;\n        const yoff = 0.25 * this.textFormatter.fontSizeInPixels;\n        let symIndex = 0;\n        for (symIndex === 0; symIndex < barIndex; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift + xoff;\n            symbol.yShift = symbol.yShift - yoff;\n        }\n        for (symIndex = barIndex + 1; symIndex < this.symbolBlocks.length; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift - xoff;\n            symbol.yShift = symbol.yShift + yoff;\n        }\n    }\n    updateKerningAdjustments() {\n        let accum = 0;\n        for (let j = 0; j < this.symbolBlocks.length; ++j) {\n            const symbol = this.symbolBlocks[j];\n            accum += this.getKerningAdjustment(j);\n            symbol.xShift += accum;\n        }\n    }\n    /** Do some basic kerning so that letter chords like 'A' don't have the extensions hanging off to the right. */\n    getKerningAdjustment(j) {\n        if (!this.useKerning) {\n            return 0;\n        }\n        const currSymbol = this.symbolBlocks[j];\n        const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : undefined;\n        let adjustment = 0;\n        // Move things into the '/' over bar\n        if (currSymbol.symbolType === SymbolTypes.GLYPH &&\n            currSymbol.glyph !== undefined &&\n            currSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += currSymbol.glyph.metrics.x_shift;\n        }\n        if (prevSymbol !== undefined &&\n            prevSymbol.symbolType === SymbolTypes.GLYPH &&\n            prevSymbol.glyph !== undefined &&\n            prevSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += prevSymbol.glyph.metrics.x_shift;\n        }\n        // For superscripts that follow a letter without much top part, move it to the left slightly\n        let preKernUpper = false;\n        let preKernLower = false;\n        if (prevSymbol !== undefined && prevSymbol.symbolType === SymbolTypes.TEXT) {\n            preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n            preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n        }\n        const kerningOffsetPixels = ChordSymbol.kerningOffset * this.textFormatter.fontSizeInPixels;\n        // TODO: adjust kern for font size.\n        // Where should this constant live?\n        if (preKernUpper && currSymbol.symbolModifier === SymbolModifiers.SUPERSCRIPT) {\n            adjustment += kerningOffsetPixels;\n        }\n        if (preKernLower && currSymbol.symbolType === SymbolTypes.TEXT) {\n            if (currSymbol.text[0] >= 'a' && currSymbol.text[0] <= 'z') {\n                adjustment += kerningOffsetPixels / 2;\n            }\n            if (ChordSymbol.upperKerningText.some((xx) => xx === (prevSymbol === null || prevSymbol === void 0 ? void 0 : prevSymbol.text[prevSymbol.text.length - 1]))) {\n                adjustment += kerningOffsetPixels / 2;\n            }\n        }\n        return adjustment;\n    }\n    /**\n     * ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n     * Each block can have its own vertical orientation.\n     */\n    // eslint-disable-next-line\n    getSymbolBlock(params = {}) {\n        var _a, _b, _c;\n        const symbolType = (_a = params.symbolType) !== null && _a !== void 0 ? _a : SymbolTypes.TEXT;\n        const symbolBlock = {\n            text: (_b = params.text) !== null && _b !== void 0 ? _b : '',\n            symbolType,\n            symbolModifier: (_c = params.symbolModifier) !== null && _c !== void 0 ? _c : SymbolModifiers.NONE,\n            xShift: 0,\n            yShift: 0,\n            vAlign: false,\n            width: 0,\n        };\n        // Note: symbol widths are resolution and font-independent.\n        // We convert to pixel values when we know what the font is.\n        if (symbolType === SymbolTypes.GLYPH && typeof params.glyph === 'string') {\n            const glyphArgs = ChordSymbol.glyphs[params.glyph];\n            const glyphPoints = 20;\n            symbolBlock.glyph = new Glyph(glyphArgs.code, glyphPoints, { category: 'chordSymbol' });\n        }\n        else if (symbolType === SymbolTypes.TEXT) {\n            symbolBlock.width = this.textFormatter.getWidthForTextInEm(symbolBlock.text);\n        }\n        else if (symbolType === SymbolTypes.LINE) {\n            symbolBlock.width = params.width;\n        }\n        return symbolBlock;\n    }\n    /** Add a symbol to this chord, could be text, glyph or line. */\n    // eslint-disable-next-line\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    // ### Convenience functions for creating different types of chord symbol parts.\n    /** Add a text block. */\n    // eslint-disable-next-line\n    addText(text, parameters = {}) {\n        const symbolType = SymbolTypes.TEXT;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text, symbolType }));\n    }\n    /** Add a text block with superscript modifier. */\n    addTextSuperscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a text block with subscript modifier. */\n    addTextSubscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a glyph block with superscript modifier. */\n    addGlyphSuperscript(glyph) {\n        const symbolType = SymbolTypes.GLYPH;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ glyph, symbolType, symbolModifier });\n    }\n    /** Add a glyph block. */\n    // eslint-disable-next-line\n    addGlyph(glyph, params = {}) {\n        const symbolType = SymbolTypes.GLYPH;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { glyph, symbolType }));\n    }\n    /**\n     * Add a glyph for each character in 'text'. If the glyph is not available, use text from the font.\n     * e.g. `addGlyphOrText('(+5#11)')` will use text for the '5' and '11', and glyphs for everything else.\n     */\n    // eslint-disable-next-line\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            if (ChordSymbol.glyphs[char]) {\n                if (str.length > 0) {\n                    this.addText(str, params);\n                    str = '';\n                }\n                this.addGlyph(char, params);\n            }\n            else {\n                // Collect consecutive characters with no glyphs.\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    /** Add a line of the given width, used as a continuation of the previous symbol in analysis, or lyrics, etc. */\n    // eslint-disable-next-line\n    addLine(width, params = {}) {\n        const symbolType = SymbolTypes.LINE;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { symbolType, width }));\n    }\n    /**\n     * Set the chord symbol's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     *\n     * @override See: Element.\n     */\n    setFont(f, size, weight, style) {\n        super.setFont(f, size, weight, style);\n        this.textFormatter = TextFormatter.create(this.textFont);\n        return this;\n    }\n    setEnableKerning(val) {\n        this.useKerning = val;\n        return this;\n    }\n    /** Set vertical position of text (above or below stave). */\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    /** Set horizontal justification. */\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    getWidth() {\n        let width = 0;\n        this.symbolBlocks.forEach((symbol) => {\n            width += symbol.vAlign ? 0 : symbol.width;\n        });\n        return width;\n    }\n    getYOffsetForText(text) {\n        var _a;\n        let acc = 0;\n        let i = 0;\n        for (i = 0; i < text.length; ++i) {\n            const metrics = this.textFormatter.getGlyphMetrics(text[i]);\n            if (metrics) {\n                const yMax = (_a = metrics.y_max) !== null && _a !== void 0 ? _a : 0;\n                acc = yMax < acc ? yMax : acc;\n            }\n        }\n        const resolution = this.textFormatter.getResolution();\n        return i > 0 ? -1 * (acc / resolution) : 0;\n    }\n    /** Render text and glyphs above/below the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('chordsymbol', this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.textFont);\n        let y;\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            // HACK: We need to compensate for the text's height since its origin is bottom-right.\n            y = stave.getYForBottomText(this.text_line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stem_base = note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n                y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n            }\n        }\n        else {\n            // (this.vertical === VerticalJustify.TOP)\n            const topY = Math.min(...note.getYs());\n            y = Math.min(stave.getYForTopText(this.text_line), topY - 10);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            // HorizontalJustify.CENTER_STEM\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', this.textFormatter, x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            const isSuper = ChordSymbol.isSuperscript(symbol);\n            const isSub = ChordSymbol.isSubscript(symbol);\n            let curY = y;\n            L('shift was ', symbol.xShift, symbol.yShift);\n            L('curY pre sub ', curY);\n            if (isSuper) {\n                curY += this.superscriptOffset;\n            }\n            if (isSub) {\n                curY += this.subscriptOffset;\n            }\n            L('curY sup/sub ', curY);\n            if (symbol.symbolType === SymbolTypes.TEXT) {\n                if (isSuper || isSub) {\n                    ctx.save();\n                    if (this.textFont) {\n                        const { family, size, weight, style } = this.textFont;\n                        const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n                        ctx.setFont(family, smallerFontSize, weight, style);\n                    }\n                }\n                // TODO???\n                // We estimate the text width, fill it in with the empirical value so the formatting is even.\n                // const textDim = ctx.measureText(symbol.text);\n                // symbol.width = textDim.width;\n                L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                ctx.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                if (isSuper || isSub) {\n                    ctx.restore();\n                }\n            }\n            else if (symbol.symbolType === SymbolTypes.GLYPH && symbol.glyph) {\n                curY += symbol.yShift;\n                L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n                symbol.glyph.render(ctx, x + symbol.xShift, curY);\n            }\n            else if (symbol.symbolType === SymbolTypes.LINE) {\n                L('Rendering Line : ', symbol.width, x, curY);\n                ctx.beginPath();\n                ctx.setLineWidth(1); // ?\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + symbol.width, curY);\n                ctx.stroke();\n            }\n            x += symbol.width;\n            if (symbol.vAlign) {\n                x += symbol.xShift;\n            }\n        });\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\nChordSymbol.DEBUG = false;\n// Chord symbols can be positioned and justified relative to the note.\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\n// Glyph data\nChordSymbol.glyphs = {\n    diminished: {\n        code: 'csymDiminished',\n    },\n    dim: {\n        code: 'csymDiminished',\n    },\n    halfDiminished: {\n        code: 'csymHalfDiminished',\n    },\n    '+': {\n        code: 'csymAugmented',\n    },\n    augmented: {\n        code: 'csymAugmented',\n    },\n    majorSeventh: {\n        code: 'csymMajorSeventh',\n    },\n    minor: {\n        code: 'csymMinor',\n    },\n    '-': {\n        code: 'csymMinor',\n    },\n    '(': {\n        code: 'csymParensLeftTall',\n    },\n    leftParen: {\n        code: 'csymParensLeftTall',\n    },\n    ')': {\n        code: 'csymParensRightTall',\n    },\n    rightParen: {\n        code: 'csymParensRightTall',\n    },\n    leftBracket: {\n        code: 'csymBracketLeftTall',\n    },\n    rightBracket: {\n        code: 'csymBracketRightTall',\n    },\n    leftParenTall: {\n        code: 'csymParensLeftVeryTall',\n    },\n    rightParenTall: {\n        code: 'csymParensRightVeryTall',\n    },\n    '/': {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    over: {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    '#': {\n        code: 'accidentalSharp',\n    },\n    b: {\n        code: 'accidentalFlat',\n    },\n};\nChordSymbol.symbolTypes = SymbolTypes;\nChordSymbol.symbolModifiers = SymbolModifiers;\n/** Currently unused. */\nChordSymbol.noFormat = false;\nexport { ChordSymbol };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('Vex.Flow.BarNote', args);\n}\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.ts` for usage examples.\n */\nclass BarNote extends Note {\n    static get CATEGORY() {\n        return Category.BarNote;\n    }\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        // Tell the formatter that bar notes have no duration.\n        this.ignore_ticks = true;\n        this.setType(type);\n    }\n    /** Get the type of bar note.*/\n    getType() {\n        return this.type;\n    }\n    /** Set the type of bar note. */\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        // Set width to width of relevant `Barline`.\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    /** Overridden to ignore. */\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render note to stave. */\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        this.applyStyle(ctx);\n        const barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.draw(this.checkStave());\n        this.restoreStyle(ctx);\n        this.setRendered();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\nBarNote.DEBUG = false;\nexport { BarNote };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { TextFormatter } from './textformatter';\nimport { Category, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n/** Bend implements tablature bends. */\nclass Bend extends Modifier {\n    static get CATEGORY() {\n        return Category.Bend;\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    // Arrange bends in `ModifierContext`\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let last_width = 0;\n        // Format Bends\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (isTabNote(note)) {\n                const stringPos = note.leastString() - 1;\n                if (state.top_text_line < stringPos) {\n                    state.top_text_line = stringPos;\n                }\n            }\n            bend.setXShift(last_width);\n            last_width = bend.getWidth();\n            bend.setTextLine(state.top_text_line);\n        }\n        state.right_shift += last_width;\n        state.top_text_line += 1;\n        return true;\n    }\n    /**\n     * Example of a phrase:\n     * ```\n     *    [{\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"half\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"1 1/2\"\n     *     width: 8;\n     *   }]\n     * ```\n     * @param text text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n     * @param release if true, render a release. (DEPRECATED)\n     * @param phrase if set, ignore \"text\" and \"release\", and use the more sophisticated phrase specified\n     */\n    constructor(text, release = false, phrase) {\n        super();\n        this.text = text;\n        this.x_shift = 0;\n        this.release = release;\n        this.tap = '';\n        this.resetFont();\n        this.render_options = {\n            line_width: 1.5,\n            line_style: '#777777',\n            bend_width: 8,\n            release_width: 8,\n        };\n        if (phrase) {\n            this.phrase = phrase;\n        }\n        else {\n            // Backward compatibility\n            this.phrase = [{ type: Bend.UP, text: this.text }];\n            if (this.release)\n                this.phrase.push({ type: Bend.DOWN, text: '' });\n        }\n        this.updateWidth();\n    }\n    /** Set horizontal shift in pixels. */\n    setXShift(value) {\n        this.x_shift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    /** Get text provided in the constructor. */\n    getText() {\n        return this.text;\n    }\n    getTextHeight() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        return textFormatter.maxHeight;\n    }\n    /** Recalculate width. */\n    updateWidth() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        const measureText = (text) => {\n            return textFormatter.getWidthForTextInPx(text);\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additional_width = bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n                bend.width = Math.max(additional_width, measureText(bend.text)) + 3;\n                bend.draw_width = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.x_shift);\n        return this;\n    }\n    /** Draw the bend on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const x_shift = this.x_shift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        // this.text_line is relative to top string in the group.\n        const bend_height = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) + 3;\n        const annotation_y = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cp_x = x + width;\n            const cp_y = y;\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderRelease = (x, y, width, height) => {\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y); // tip of the arrow\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const render_x = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, render_x, annotation_y);\n            ctx.restore();\n        };\n        let last_bend = undefined;\n        let last_bend_draw_width = 0;\n        let last_drawn_width = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.draw_width)\n                bend.draw_width = 0;\n            if (i === 0)\n                bend.draw_width += x_shift;\n            last_drawn_width = bend.draw_width + last_bend_draw_width - (i === 1 ? x_shift : 0);\n            if (bend.type === Bend.UP) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderArrowHead(start.x, bend_height, +1);\n                }\n                renderBend(start.x, start.y, last_drawn_width, bend_height);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (last_bend && last_bend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (!last_bend) {\n                    last_drawn_width = bend.draw_width;\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n            }\n            renderText(start.x + last_drawn_width, bend.text);\n            last_bend = bend;\n            last_bend_draw_width = bend.draw_width;\n            last_bend.x = start.x;\n            start.x += last_drawn_width;\n        }\n        if (!last_bend || last_bend.x == undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        // Final arrowhead and text\n        if (last_bend.type === Bend.UP) {\n            renderArrowHead(last_bend.x + last_drawn_width, bend_height, +1);\n        }\n        else if (last_bend.type === Bend.DOWN) {\n            renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n        }\n    }\n}\n/** Default text font. */\nBend.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\nexport { Bend };\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\nimport { Modifier } from './modifier';\nimport { Category, isGraceNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Dot extends Modifier {\n    static get CATEGORY() {\n        return Category.Dot;\n    }\n    /** Returns the dots associated to a Note. */\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    /** Add a dot on the specified keys to the notes. */\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                    note.addModifier(dot, i);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) != undefined) {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                note.addModifier(dot, options === null || options === void 0 ? void 0 : options.index);\n            }\n            else {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                note.addModifier(dot, 0);\n            }\n        }\n    }\n    // Arrange dots inside a ModifierContext.\n    static format(dots, state) {\n        const right_shift = state.right_shift;\n        const dot_spacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dot_list = [];\n        const max_shift_map = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                // consider right displaced head with no previous modifier\n                shift = note.getFirstDotPx();\n            }\n            else if (isTabNote(note)) {\n                props = { line: 0.5 }; // Shim key props for dot placement\n                shift = right_shift;\n            }\n            else {\n                // note object is not StaveNote or TabNote.\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const note_id = note.getAttribute('id');\n            dot_list.push({ line: props.line, note, note_id, dot });\n            max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n        }\n        // Sort dots by line number.\n        dot_list.sort((a, b) => b.line - a.line);\n        let dot_shift = right_shift;\n        let x_width = 0;\n        let last_line = null;\n        let last_note = null;\n        let prev_dotted_space = null;\n        let half_shiftY = 0;\n        for (let i = 0; i < dot_list.length; ++i) {\n            const { dot, note, note_id, line } = dot_list[i];\n            // Reset the position of the dot every line.\n            if (line !== last_line || note !== last_note) {\n                dot_shift = max_shift_map[note_id];\n            }\n            if (!note.isRest() && line !== last_line) {\n                if (Math.abs(line % 1) === 0.5) {\n                    // note is on a space, so no dot shift\n                    half_shiftY = 0;\n                }\n                else {\n                    // note is on a line, so shift dot to space above the line\n                    half_shiftY = 0.5;\n                    if (last_note != null && !last_note.isRest() && last_line != null && last_line - line === 0.5) {\n                        // previous note on a space, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                    else if (line + half_shiftY === prev_dotted_space) {\n                        // previous space is dotted, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                }\n            }\n            // convert half_shiftY to a multiplier for dots.draw()\n            if (note.isRest()) {\n                dot.dot_shiftY += -half_shiftY;\n            }\n            else {\n                dot.dot_shiftY = -half_shiftY;\n            }\n            prev_dotted_space = line + half_shiftY;\n            dot.setXShift(dot_shift);\n            dot_shift += dot.getWidth() + dot_spacing; // spacing\n            x_width = dot_shift > x_width ? dot_shift : x_width;\n            last_line = line;\n            last_note = note;\n        }\n        // Update state.\n        state.right_shift += x_width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.radius = 2;\n        this.setWidth(5);\n        this.dot_shiftY = 0;\n    }\n    setNote(note) {\n        this.note = note;\n        if (isGraceNote(note)) {\n            this.radius *= 0.5;\n            this.setWidth(3);\n        }\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dot_shiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        // Set the starting y coordinate to the base of the stem for TabNotes.\n        if (isTabNote(note)) {\n            start.y = note.getStemExtents().baseY;\n        }\n        const x = start.x + this.x_shift + this.width - this.radius;\n        const y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nclass FretHandFinger extends Modifier {\n    static get CATEGORY() {\n        return Category.FretHandFinger;\n    }\n    // Arrange fingerings inside a ModifierContext.\n    static format(nums, state) {\n        const { left_shift, right_shift } = state;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const textFormatter = TextFormatter.create(num.textFont);\n            const textHeight = textFormatter.maxHeight;\n            if (num.position === ModifierPosition.ABOVE) {\n                state.top_text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (num.position === ModifierPosition.BELOW) {\n                state.text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (right_shift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prev_note = note;\n            }\n            nums_list.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort fingernumbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = left_shift + shiftL;\n                numShiftR = right_shift + shiftR;\n            }\n            const numWidth = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift + numShiftL);\n                num_shift = left_shift + numWidth; // spacing\n                xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                num_shift = shiftRight + numWidth; // spacing\n                xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.left_shift += xWidthL;\n        state.right_shift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(fingering, index));\n    }\n    constructor(finger) {\n        super();\n        this.finger = finger;\n        this.width = 7;\n        this.position = Modifier.Position.LEFT; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.resetFont();\n    }\n    setFretHandFinger(finger) {\n        this.finger = finger;\n        return this;\n    }\n    getFretHandFinger() {\n        return this.finger;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let dot_y = start.y + this.y_shift + this.y_offset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dot_x -= 4;\n                dot_y -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dot_x -= 2;\n                dot_y += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        ctx.save();\n        ctx.setFont(this.textFont);\n        ctx.fillText('' + this.finger, dot_x, dot_y);\n        ctx.restore();\n    }\n}\nFretHandFinger.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { FretHandFinger };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('Vex.Flow.NoteHead', args);\n}\n/**\n * Draw slashnote head manually. No glyph exists for this.\n * @param ctx the Canvas context\n * @param duration the duration of the note. ex: \"4\"\n * @param x the x coordinate to draw at\n * @param y the y coordinate to draw at\n * @param stem_direction the direction of the stem\n */\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n    const width = Tables.SLASH_NOTEHEAD_WIDTH;\n    ctx.save();\n    ctx.setLineWidth(Tables.STEM_WIDTH);\n    let fill = false;\n    if (Tables.durationToNumber(duration) > 2) {\n        fill = true;\n    }\n    if (!fill)\n        x -= (Tables.STEM_WIDTH / 2) * stem_direction;\n    ctx.beginPath();\n    ctx.moveTo(x, y + staveSpace);\n    ctx.lineTo(x, y + 1);\n    ctx.lineTo(x + width, y - staveSpace);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x, y + staveSpace);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    else {\n        ctx.stroke();\n    }\n    if (Tables.durationToFraction(duration).equals(0.5)) {\n        const breve_lines = [-3, -1, width + 1, width + 3];\n        for (let i = 0; i < breve_lines.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(x + breve_lines[i], y - 10);\n            ctx.lineTo(x + breve_lines[i], y + 11);\n            ctx.stroke();\n        }\n    }\n    ctx.restore();\n}\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nclass NoteHead extends Note {\n    static get CATEGORY() {\n        return Category.NoteHead;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.custom_glyph = false;\n        this.stem_up_x_offset = 0;\n        this.stem_down_x_offset = 0;\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.note_type)\n            this.noteType = noteStruct.note_type;\n        this.displaced = noteStruct.displaced || false;\n        this.stem_direction = noteStruct.stem_direction || Stem.UP;\n        this.line = noteStruct.line || 0;\n        // Get glyph code based on duration and note type. This could be\n        // regular notes, rests, or other custom codes.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // Swap out the glyph with ledger lines\n        if ((this.line > 5 || this.line < 0) && this.glyphProps.ledger_code_head) {\n            this.glyphProps.code_head = this.glyphProps.ledger_code_head;\n        }\n        this.glyph_code = this.glyphProps.code_head;\n        this.x_shift = noteStruct.x_shift || 0;\n        if (noteStruct.custom_glyph_code) {\n            this.custom_glyph = true;\n            this.glyph_code = noteStruct.custom_glyph_code;\n            this.stem_up_x_offset = noteStruct.stem_up_x_offset || 0;\n            this.stem_down_x_offset = noteStruct.stem_down_x_offset || 0;\n        }\n        this.setStyle(noteStruct.style);\n        this.slashed = noteStruct.slashed || false;\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE });\n        this.setWidth(this.custom_glyph &&\n            !this.glyph_code.startsWith('noteheadSlashed') &&\n            !this.glyph_code.startsWith('noteheadCircled')\n            ? Glyph.getWidth(this.glyph_code, this.render_options.glyph_font_scale)\n            : this.glyphProps.getWidth(this.render_options.glyph_font_scale));\n    }\n    /** Get the width of the notehead. */\n    getWidth() {\n        return this.width;\n    }\n    /** Determine if the notehead is displaced. */\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    /** Set the X coordinate. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Get the Y coordinate. */\n    getY() {\n        return this.y;\n    }\n    /** Set the Y coordinate. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Get the stave line the notehead is placed on. */\n    getLine() {\n        return this.line;\n    }\n    /** Set the stave line the notehead is placed on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Get the canvas `x` coordinate position of the notehead. */\n    getAbsoluteX() {\n        // If the note has not been preformatted, then get the static x value\n        // Otherwise, it's been formatted and we should use it's x value relative\n        // to its tick context\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        // For a more natural displaced notehead, we adjust the displacement amount\n        // by half the stem width in order to maintain a slight overlap with the stem\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        const musicFont = Tables.currentMusicFont();\n        const fontShift = musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n        const displacedFontShift = musicFont.lookupMetric('noteHead.displacedShiftX', 0) * this.stem_direction;\n        return (x +\n            fontShift +\n            (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0));\n    }\n    /** Get the `BoundingBox` for the `NoteHead`. */\n    getBoundingBox() {\n        const spacing = this.checkStave().getSpacingBetweenLines();\n        const half_spacing = spacing / 2;\n        const min_y = this.y - half_spacing;\n        return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n    }\n    /** Set notehead to a provided `stave`. */\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n        this.setWidth(width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the notehead. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let head_x = this.getAbsoluteX();\n        if (this.custom_glyph) {\n            // head_x += this.x_shift;\n            head_x +=\n                this.stem_direction === Stem.UP\n                    ? this.stem_up_x_offset +\n                        (this.glyphProps.stem ? this.glyphProps.getWidth(this.render_options.glyph_font_scale) - this.width : 0)\n                    : this.stem_down_x_offset;\n        }\n        const y = this.y;\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", head_x, y);\n        // Begin and end positions for head.\n        const stem_direction = this.stem_direction;\n        const glyph_font_scale = this.render_options.glyph_font_scale;\n        const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n        if (this.noteType === 's') {\n            const staveSpace = this.checkStave().getSpacingBetweenLines();\n            drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n        }\n        else {\n            Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n                category: `noteHead.${categorySuffix}`,\n            });\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\nNoteHead.DEBUG = false;\nexport { NoteHead };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StemmableNote extends Note {\n    static get CATEGORY() {\n        return Category.StemmableNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n    }\n    // Get and set the note's `Stem`\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        this.addChildElement(stem);\n        return this;\n    }\n    // Builds and sets a new stem\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag(category = 'flag') {\n        const { glyphProps } = this;\n        if (this.hasFlag()) {\n            const flagCode = this.getStemDirection() === Stem.DOWN ? glyphProps.code_flag_downstem : glyphProps.code_flag_upstem;\n            if (flagCode)\n                this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, { category });\n        }\n    }\n    // Get the custom glyph associated with the outer note head on the base of the stem.\n    getBaseCustomNoteHeadGlyphProps() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    // Get the full length of stem\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    // Get the number of beams for this duration\n    getBeamCount() {\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            return glyphProps.beam_count;\n        }\n        else {\n            return 0;\n        }\n    }\n    // Get the minimum length of stem\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        let length = frac.value() <= 1 ? 0 : 20;\n        // if note is flagged, cannot shorten beam\n        switch (this.duration) {\n            case '8':\n                if (this.beam == undefined)\n                    length = 35;\n                break;\n            case '16':\n                length = this.beam == undefined ? 35 : 25;\n                break;\n            case '32':\n                length = this.beam == undefined ? 45 : 35;\n                break;\n            case '64':\n                length = this.beam == undefined ? 50 : 40;\n                break;\n            case '128':\n                length = this.beam == undefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    // Get/set the direction of the stem\n    getStemDirection() {\n        if (!this.stem_direction)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem_direction;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stem_direction = direction;\n        // Reset and reformat everything. Flag has to be built before calling getStemExtension.\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n            // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n            // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n            const glyphProps = this.getBaseCustomNoteHeadGlyphProps() || this.getGlyphProps();\n            // Get the font-specific customizations for the note heads.\n            const offsets = Tables.currentMusicFont().lookupMetric(`stem.noteHead.${glyphProps.code_head}`, {\n                offsetYBaseStemUp: 0,\n                offsetYTopStemUp: 0,\n                offsetYBaseStemDown: 0,\n                offsetYTopStemDown: 0,\n            });\n            // Configure the stem to use these offsets.\n            this.stem.setOptions({\n                stem_up_y_offset: offsets.offsetYTopStemUp,\n                stem_down_y_offset: offsets.offsetYTopStemDown,\n                stem_up_y_base_offset: offsets.offsetYBaseStemUp,\n                stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n            });\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    // Get the `x` coordinate of the stem\n    getStemX() {\n        const x_begin = this.getAbsoluteX() + this.x_shift;\n        const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n        const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n        return stem_x;\n    }\n    // Get the `x` coordinate for the center of the glyph.\n    // Used for `TabNote` stems and stemlets over rests\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n    }\n    // Get the stem extension for the current duration\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        if (this.stem_extension_override != undefined) {\n            return this.stem_extension_override;\n        }\n        // Use stem_beam_extension with beams\n        if (this.beam) {\n            return glyphProps.stem_beam_extension;\n        }\n        if (glyphProps) {\n            return this.getStemDirection() === Stem.UP ? glyphProps.stem_up_extension : glyphProps.stem_down_extension;\n        }\n        return 0;\n    }\n    // Set the stem length to a specific. Will override the default length.\n    setStemLength(height) {\n        this.stem_extension_override = height - Stem.HEIGHT;\n        return this;\n    }\n    // Get the top and bottom `y` values of the stem.\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return Tables.getGlyphProps(this.duration).flag == true && !this.beam;\n    }\n    /** Post formats the note. */\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    /** Renders the stem onto the canvas. */\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).draw();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.\n//\n// See `tests/stavenote_tests.ts` for usage examples.\nimport { BoundingBox } from './boundingbox';\nimport { Modifier } from './modifier';\nimport { NoteHead } from './notehead';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\nfunction showDeprecationWarningForNoteHeads() {\n    // eslint-disable-next-line\n    console.warn('StaveNote.note_heads is deprecated. Use StaveNote.noteHeads instead.', 'This accessor will be removed in VexFlow 5.0.');\n}\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('Vex.Flow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nclass StaveNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.StaveNote;\n    }\n    /**\n     * @deprecated Use Stem.UP.\n     */\n    static get STEM_UP() {\n        return Stem.UP;\n    }\n    /**\n     * @deprecated Use Stem.DOWN.\n     */\n    static get STEM_DOWN() {\n        return Stem.DOWN;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /** Format notes inside a ModifierContext. */\n    static format(notes, state) {\n        var _a, _b;\n        if (!notes || notes.length < 2)\n            return false;\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            // Formatting uses sortedKeyProps to calculate line and minL.\n            const props = notes[i].sortedKeyProps;\n            const line = props[0].keyProps.line;\n            let minL = props[props.length - 1].keyProps.line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL = line + notes[i].glyphProps.line_above;\n                minL = line - notes[i].glyphProps.line_below;\n            }\n            else {\n                maxL =\n                    stemDirection === 1 ? props[props.length - 1].keyProps.line + stemMax : props[props.length - 1].keyProps.line;\n                minL = stemDirection === 1 ? props[0].keyProps.line : props[0].keyProps.line - stemMax;\n            }\n            notesList.push({\n                line: props[0].keyProps.line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection: stemDirection,\n                stemMax,\n                stemMin,\n                voice_shift: notes[i].getVoiceShiftWidth(),\n                is_displaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        let voices = 0;\n        let noteU = undefined;\n        let noteM = undefined;\n        let noteL = undefined;\n        const draw = [false, false, false];\n        for (let i = 0; i < notesList.length; i++) {\n            draw[i] = notesList[i].note.render_options.draw == false ? false : true;\n        }\n        if (draw[0] && draw[1] && draw[2]) {\n            // Three visible notes\n            voices = 3;\n            noteU = notesList[0];\n            noteM = notesList[1];\n            noteL = notesList[2];\n        }\n        else if (draw[0] && draw[1]) {\n            // Two visible notes, 0 & 1\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[1];\n        }\n        else if (draw[0] && draw[2]) {\n            // Two visible notes, 0 & 2\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[2];\n        }\n        else if (draw[1] && draw[2]) {\n            // Two visible notes, 1 & 2\n            voices = 2;\n            noteU = notesList[1];\n            noteL = notesList[2];\n        }\n        else {\n            // No shift required for less than 2 visible notes\n            return true;\n        }\n        // for two voice backward compatibility, ensure upper voice is stems up\n        // for three voices, the voices must be in order (upper, middle, lower)\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n        let xShift = 0;\n        // Test for two voice note intersection\n        if (voices === 2) {\n            const lineSpacing = noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n                noteL.note.render_options.draw = false;\n            }\n            else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    // shift rest up\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    // shift rest down\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    //Instead of shifting notes, remove the appropriate flag\n                    //If we are sharing a line, switch one notes stem direction.\n                    //If we are sharing a line and in the same voice, only then offset one note\n                    const lineDiff = Math.abs(noteU.line - noteL.line);\n                    if (noteU.note.hasStem() && noteL.note.hasStem()) {\n                        const noteUHead = Tables.codeNoteHead((_a = noteU.note.sortedKeyProps[0].keyProps.code) !== null && _a !== void 0 ? _a : 'N', noteU.note.duration);\n                        const noteLHead = Tables.codeNoteHead((_b = noteL.note.sortedKeyProps[noteL.note.sortedKeyProps.length - 1].keyProps.code) !== null && _b !== void 0 ? _b : 'N', noteL.note.duration);\n                        if (\n                        // If unison is not configured, shift\n                        !Tables.UNISON ||\n                            // If we have different noteheads, shift\n                            noteUHead !== noteLHead ||\n                            // If we have different dot values, shift\n                            noteU.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                                .length !==\n                                noteL.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                                    .length ||\n                            // If the notes are quite close but not on the same line, shift\n                            (lineDiff < 1 && lineDiff > 0) ||\n                            // If styles are different, shift\n                            JSON.stringify(noteU.note.getStyle()) !== JSON.stringify(noteL.note.getStyle())) {\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (noteU.note.voice !== noteL.note.voice) {\n                            //If we are not in the same voice\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                if (noteU.line != noteL.line) {\n                                    xShift = voiceXShift + 2;\n                                    noteU.note.setXShift(xShift);\n                                }\n                                else {\n                                    //same line, swap stem direction for one note\n                                    if (noteL.stemDirection === 1) {\n                                        noteL.stemDirection = -1;\n                                        noteL.note.setStemDirection(-1);\n                                    }\n                                }\n                            }\n                        } //Very close whole notes\n                    }\n                    else if (lineDiff < 1) {\n                        xShift = voiceXShift + 2;\n                        if (noteU.note.duration < noteL.note.duration) {\n                            // upper voice is shorter, so shift it right\n                            noteU.note.setXShift(xShift);\n                        }\n                        else {\n                            // shift lower voice right\n                            noteL.note.setXShift(xShift);\n                        }\n                    }\n                    else if (noteU.note.hasStem()) {\n                        noteU.stemDirection = -noteU.note.getStemDirection();\n                        noteU.note.setStemDirection(noteU.stemDirection);\n                    }\n                    else if (noteL.note.hasStem()) {\n                        noteL.stemDirection = -noteL.note.getStemDirection();\n                        noteL.note.setStemDirection(noteL.stemDirection);\n                    }\n                }\n            }\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        // For three voices, test if rests can be repositioned\n        //\n        // Special case 1 :: middle voice rest between two notes\n        //\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    // center middle voice rest between the upper and lower voices\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 2; // shift middle rest right\n                    noteM.note.setXShift(xShift);\n                    if (noteL.note.hasBeam() === false) {\n                        noteL.stemDirection = -1;\n                        noteL.note.setStemDirection(-1);\n                    }\n                    if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                        noteU.stemDirection = 1;\n                        noteU.note.setStemDirection(1);\n                    }\n                }\n                // format complete\n                state.right_shift += xShift;\n                return true;\n            }\n        }\n        // Special case 2 :: all voices are rests\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            // Hide upper voice rest\n            noteU.note.render_options.draw = false;\n            // Hide lower voice rest\n            noteL.note.render_options.draw = false;\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        // Test if any other rests can be repositioned\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            // shift upper voice rest up;\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            // shift lower voice rest down\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        // If middle voice intersects upper or lower voice\n        if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n            // shift middle note right\n            xShift = voiceXShift + 2;\n            noteM.note.setXShift(xShift);\n            if (noteL.note.hasBeam() === false) {\n                noteL.stemDirection = -1;\n                noteL.note.setStemDirection(-1);\n            }\n            if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                noteU.stemDirection = 1;\n                noteU.note.setStemDirection(1);\n            }\n        }\n        state.right_shift += xShift;\n        return true;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.minLine = 0;\n        this.maxLine = 0;\n        // Sorted variant of keyProps used internally\n        this.sortedKeyProps = [];\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octave_shift = (_b = noteStruct.octave_shift) !== null && _b !== void 0 ? _b : 0;\n        // Pull note rendering properties.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // if true, displace note to right\n        this.displaced = false;\n        this.dot_shiftY = 0;\n        // for displaced ledger lines\n        this.use_default_head_x = false;\n        // Drawing\n        this._noteHeads = [];\n        this.modifiers = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE, \n            // number of stroke px to the left and right of head\n            stroke_px: noteStruct.stroke_px || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        // Set the stem direction\n        if (noteStruct.auto_stem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stem_direction) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    reset() {\n        super.reset();\n        // Save prior noteHead styles & reapply them after making new noteheads.\n        const noteHeadStyles = this._noteHeads.map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        this._noteHeads.forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this.setStave(stave);\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        // Update stem extension if a beam is assigned.\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    // Builds a `Stem` for the note\n    buildStem() {\n        this.setStem(new Stem({ hide: !!this.isRest() }));\n        return this;\n    }\n    // Builds a `NoteHead` for each key in the note\n    buildNoteHeads() {\n        this._noteHeads = [];\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        // Draw notes from bottom to top.\n        // For down-stem notes, we draw from top to bottom.\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            // Building noteheads rely on sortedKeNotes in order to calculate the displacements\n            const noteProps = this.sortedKeyProps[i].keyProps;\n            const line = noteProps.line;\n            // Keep track of last line with a note head, so that consecutive heads\n            // are correctly displaced.\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.use_default_head_x = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                note_type: this.noteType,\n                displaced,\n                stem_direction: stemDirection,\n                custom_glyph_code: noteProps.code,\n                glyph_font_scale: this.render_options.glyph_font_scale,\n                x_shift: noteProps.shift_right,\n                stem_up_x_offset: noteProps.stem_up_x_offset,\n                stem_down_x_offset: noteProps.stem_down_x_offset,\n                line: noteProps.line,\n            });\n            this.addChildElement(notehead);\n            this._noteHeads[this.sortedKeyProps[i].index] = notehead;\n        }\n    }\n    // Automatically sets the stem direction based on the keys in the note\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        // Figure out optimal stem direction based on given notes\n        // minLine & maxLine rely on sortedKeyProps\n        this.minLine = this.sortedKeyProps[0].keyProps.line;\n        this.maxLine = this.sortedKeyProps[this.keyProps.length - 1].keyProps.line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    // Calculates and stores the properties for each key in the note\n    calculateKeyProps() {\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            // All rests use the same position on the line.\n            // if (this.glyph.rest) key = this.glyph.position;\n            if (this.glyphProps.rest)\n                this.glyphProps.position = key;\n            const options = { octave_shift: this.octave_shift || 0, duration: this.duration };\n            const props = Tables.keyProperties(key, this.clef, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            // Override line placement for default rests\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            // Calculate displacement of this note\n            const line = props.line;\n            if (lastLine == undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) === 0.5) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    // Have to mark the previous note as\n                    // displaced as well, for modifier placement\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        // Sort the notes from lowest line to highest line in sortedKeyProps\n        // Warn no longer required as keyProps remains unsorted\n        this.keyProps.forEach((keyProps, index) => {\n            this.sortedKeyProps.push({ keyProps, index });\n        });\n        this.sortedKeyProps.sort((a, b) => a.keyProps.line - b.keyProps.line);\n    }\n    // Get the `BoundingBox` for the entire note\n    getBoundingBox() {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const { width: w, modLeftPx, leftDisplacedHeadPx } = this.getMetrics();\n        const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n        let minY = 0;\n        let maxY = 0;\n        const halfLineSpacing = ((_b = (_a = this.getStave()) === null || _a === void 0 ? void 0 : _a.getSpacingBetweenLines()) !== null && _b !== void 0 ? _b : 0) / 2;\n        const lineSpacing = halfLineSpacing * 2;\n        if (this.isRest()) {\n            const y = this.ys[0];\n            const frac = Tables.durationToFraction(this.duration);\n            if (frac.equals(1) || frac.equals(2)) {\n                minY = y - halfLineSpacing;\n                maxY = y + halfLineSpacing;\n            }\n            else {\n                minY = y - this.glyphProps.line_above * lineSpacing;\n                maxY = y + this.glyphProps.line_below * lineSpacing;\n            }\n        }\n        else if (this.glyphProps.stem) {\n            const ys = this.getStemExtents();\n            ys.baseY += halfLineSpacing * this.getStemDirection();\n            minY = Math.min(ys.topY, ys.baseY);\n            maxY = Math.max(ys.topY, ys.baseY);\n        }\n        else {\n            minY = 0;\n            maxY = 0;\n            for (let i = 0; i < this.ys.length; ++i) {\n                const yy = this.ys[i];\n                if (i === 0) {\n                    minY = yy;\n                    maxY = yy;\n                }\n                else {\n                    minY = Math.min(yy, minY);\n                    maxY = Math.max(yy, maxY);\n                }\n            }\n            minY -= halfLineSpacing;\n            maxY += halfLineSpacing;\n        }\n        return new BoundingBox(x, minY, w, maxY - minY);\n    }\n    // Gets the line number of the bottom note in the chord.\n    // If `isTopNote` is `true` then get the top note's line number instead\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        // No precondition assumed for sortedness of keyProps array\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return this.glyphProps.rest;\n    }\n    // Determine if the current note is a chord\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    // Determine if the `StaveNote` has a stem\n    hasStem() {\n        return this.glyphProps.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            // We adjust the origin of the stem because we want the stem left-aligned\n            // with the notehead if stemmed-down, and right-aligned if stemmed-up\n            return super.getStemX() + (this.stem_direction ? Stem.WIDTH / (2 * -this.stem_direction) : 0);\n        }\n    }\n    // Get the `y` coordinate for text placed on the top/bottom of a\n    // note at a desired `text_line`\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n    }\n    // Sets the current note to the provided `stave`. This applies\n    // `y` values to the `NoteHeads`.\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = this._noteHeads.map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(y_top, y_bottom);\n        }\n        return this;\n    }\n    // Check if note is shifted to the right\n    isDisplaced() {\n        return this.displaced;\n    }\n    // Sets whether shift note to the right. `displaced` is a `boolean`\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    // Get the starting `x` coordinate for a `StaveTie`\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    // Get the ending `x` coordinate for a `StaveTie`\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    // Get the stave line on which to place a rest\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    // Get the default `x` and `y` coordinates for the provided `position`\n    // and key `index`\n    getModifierStartXY(position, index, options = {}) {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            // FIXME: Left modifier padding, move to font file\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            // FIXME: Right modifier padding, move to font file\n            x = this.getGlyphWidth() + this.x_shift + 2;\n            if (this.stem_direction === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += (_b = (_a = this === null || this === void 0 ? void 0 : this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().width) !== null && _b !== void 0 ? _b : 0;\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Sets the style of the complete StaveNote, including all keys\n    // and the stem.\n    setStyle(style) {\n        return super.setGroupStyle(style);\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        if (stem)\n            stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        var _a;\n        (_a = this.flag) === null || _a === void 0 ? void 0 : _a.setStyle(style);\n    }\n    getFlagStyle() {\n        var _a;\n        return (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    // Sets the notehead at `index` to the provided coloring `style`.\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    setKeyStyle(index, style) {\n        this._noteHeads[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    // Get the width of the note if it is displaced. Used for `Voice`\n    // formatting\n    getVoiceShiftWidth() {\n        // TODO: may need to accommodate for dot here.\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    // Calculates and sets the extra pixels to the left or right\n    // if the note is displaced.\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stem_direction === Stem.DOWN ? this.getGlyphWidth() : 0);\n        // For upstems with flags, the extra space is unnecessary, since it's taken\n        // up by the flag.\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stem_direction === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            // If there are no modifiers on this note, make sure there is adequate padding\n            // between the notes.\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        // For upward flagged notes, the width of the flag needs to be added\n        if (this.shouldDrawFlag() && this.stem_direction === Stem.UP) {\n            width += this.getGlyphWidth();\n            // TODO: Add flag width as a separate metric\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    /**\n     * @typedef {Object} noteHeadBounds\n     * @property {number} y_top the highest notehead bound\n     * @property {number} y_bottom the lowest notehead bound\n     * @property {number|Null} displaced_x the starting x for displaced noteheads\n     * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n     * @property {number} highest_line the highest notehead line in traditional music line\n     *  numbering (bottom line = 1, top line = 5)\n     * @property {number} lowest_line the lowest notehead line\n     * @property {number|false} highest_displaced_line the highest staff line number\n     *   for a displaced notehead\n     * @property {number|false} lowest_displaced_line\n     * @property {number} highest_non_displaced_line\n     * @property {number} lowest_non_displaced_line\n     */\n    /**\n     * Get the staff line and y value for the highest & lowest noteheads\n     * @returns {noteHeadBounds}\n     */\n    getNoteHeadBounds() {\n        // Top and bottom Y values for stem.\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        this._noteHeads.forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            y_top: yTop,\n            y_bottom: yBottom,\n            displaced_x: displacedX,\n            non_displaced_x: nonDisplacedX,\n            highest_line: highestLine,\n            lowest_line: lowestLine,\n            highest_displaced_line: highestDisplacedLine,\n            lowest_displaced_line: lowestDisplacedLine,\n            highest_non_displaced_line: highestNonDisplacedLine,\n            lowest_non_displaced_line: lowestNonDisplacedLine,\n        };\n    }\n    // Get the starting `x` coordinate for the noteheads\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.x_shift;\n    }\n    // Get the ending `x` coordinate for the noteheads\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return this._noteHeads.slice();\n    }\n    /** @deprecated use StaveNote.noteHeads instead. */\n    get note_heads() {\n        showDeprecationWarningForNoteHeads();\n        return this.noteHeads;\n    }\n    // Draw the ledger lines between the stave and the highest/lowest keys\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { glyphProps, render_options: { stroke_px }, } = this;\n        const ctx = this.checkContext();\n        const width = glyphProps.getWidth() + stroke_px * 2;\n        const doubleWidth = 2 * (glyphProps.getWidth() + stroke_px) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highest_line, lowest_line, highest_displaced_line, highest_non_displaced_line, lowest_displaced_line, lowest_non_displaced_line, displaced_x, non_displaced_x, } = this.getNoteHeadBounds();\n        // Early out if there are no ledger lines to draw.\n        if (highest_line < 6 && lowest_line > 0)\n            return;\n        const min_x = Math.min(displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0, non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = min_x - stroke_px;\n            else if (normal)\n                x = (non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0) - stroke_px;\n            else\n                x = (displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0) - stroke_px;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        this.applyStyle(ctx, style);\n        // Draw ledger lines below the staff:\n        for (let line = 6; line <= highest_line; ++line) {\n            const normal = non_displaced_x !== undefined && line <= highest_non_displaced_line;\n            const displaced = highest_displaced_line !== undefined && line <= highest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        // Draw ledger lines above the staff:\n        for (let line = 0; line >= lowest_line; --line) {\n            const normal = non_displaced_x !== undefined && line >= lowest_non_displaced_line;\n            const displaced = lowest_displaced_line !== undefined && line >= lowest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        this.restoreStyle(ctx, style);\n    }\n    // Draw all key modifiers\n    drawModifiers(noteheadParam) {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = this._noteHeads[index];\n            if (notehead == noteheadParam) {\n                const noteheadStyle = notehead.getStyle();\n                notehead.applyStyle(ctx, noteheadStyle);\n                modifier.setContext(ctx);\n                modifier.drawWithStyle();\n                notehead.restoreStyle(ctx, noteheadStyle);\n            }\n        }\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyphProps.flag == true;\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam;\n    }\n    // Draw the flag for the note\n    drawFlag() {\n        var _a, _b, _c, _d, _e;\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            // eslint-disable-next-line\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX();\n            // What's with the magic +/- 2\n            // ANSWER: a corner of the note stem pokes out beyond the tip of the flag.\n            // The extra +/- 2 pushes the flag glyph outward so it covers the stem entirely.\n            // Alternatively, we could shorten the stem.\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    y_top -\n                        noteStemHeight +\n                        2 -\n                        (this.glyphProps ? this.glyphProps.stem_down_extension : 0) * this.getStaveNoteScale() -\n                        ((_b = (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().y_shift) !== null && _b !== void 0 ? _b : 0) * (1 - this.getStaveNoteScale())\n                : // Up stems are above the note head and have flags on the right.\n                    y_bottom -\n                        noteStemHeight -\n                        2 +\n                        (this.glyphProps ? this.glyphProps.stem_up_extension : 0) * this.getStaveNoteScale() -\n                        ((_d = (_c = this.flag) === null || _c === void 0 ? void 0 : _c.getMetrics().y_shift) !== null && _d !== void 0 ? _d : 0) * (1 - this.getStaveNoteScale());\n            // Draw the Flag\n            (_e = this.flag) === null || _e === void 0 ? void 0 : _e.render(ctx, flagX, flagY);\n        }\n    }\n    // Draw the NoteHeads\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        this._noteHeads.forEach((notehead) => {\n            notehead.applyStyle(ctx);\n            ctx.openGroup('notehead', notehead.getAttribute('id'), { pointerBBox: true });\n            notehead.setContext(ctx).draw();\n            this.drawModifiers(notehead);\n            ctx.closeGroup();\n            notehead.restoreStyle(ctx);\n        });\n    }\n    drawStem(stemOptions) {\n        // GCR TODO: I can't find any context in which this is called with the stemStruct\n        // argument in the codebase or tests. Nor can I find a case where super.drawStem\n        // is called at all. Perhaps these should be removed?\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        // If we will render a flag, we shorten the stem so that the tip\n        // does not poke through the flag.\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        if (this.stem) {\n            this.stem.setContext(ctx).draw();\n        }\n    }\n    /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n    getStaveNoteScale() {\n        return 1.0;\n    }\n    /**\n     * Override stemmablenote stem extension to adjust for distance from middle line.\n     */\n    getStemExtension() {\n        const super_stem_extension = super.getStemExtension();\n        if (!this.glyphProps.stem) {\n            return super_stem_extension;\n        }\n        const stem_direction = this.getStemDirection();\n        if (stem_direction !== this.calculateOptimalStemDirection()) {\n            return super_stem_extension; // no adjustment for manually set stem direction.\n        }\n        let mid_line_distance;\n        const MIDDLE_LINE = 3;\n        if (stem_direction === Stem.UP) {\n            // Note that the use of maxLine here instead of minLine might\n            // seem counterintuitive, but in the case of (say) treble clef\n            // chord(F2, E4) stem up, we do not want to extend the stem because\n            // of F2, when a normal octave-length stem above E4 is fine.\n            //\n            // maxLine and minLine are set in calculateOptimalStemDirection() so\n            // will be known.\n            mid_line_distance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            mid_line_distance = this.minLine - MIDDLE_LINE;\n        }\n        // how many lines more than an octave is the relevant notehead?\n        const lines_over_octave_from_mid_line = mid_line_distance - 3.5;\n        if (lines_over_octave_from_mid_line <= 0) {\n            return super_stem_extension;\n        }\n        const stave = this.getStave();\n        let spacing_between_lines = 10;\n        if (stave != undefined) {\n            spacing_between_lines = stave.getSpacingBetweenLines();\n        }\n        return super_stem_extension + lines_over_octave_from_mid_line * spacing_between_lines;\n    }\n    // Draws all the `StaveNote` parts. This is the main drawing method.\n    draw() {\n        if (this.render_options.draw === false)\n            return;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        // Format note head x positions\n        this._noteHeads.forEach((notehead) => notehead.setX(xBegin));\n        if (this.stem) {\n            // Format stem x positions\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n        }\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        // Apply the overall style -- may be contradicted by local settings:\n        this.applyStyle();\n        ctx.openGroup('stavenote', this.getAttribute('id'));\n        this.drawLedgerLines();\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        ctx.closeGroup();\n        this.restoreStyle();\n        this.setRendered();\n    }\n}\nStaveNote.DEBUG = false;\nexport { StaveNote };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nclass StaveTie extends Element {\n    static get CATEGORY() {\n        return Category.StaveTie;\n    }\n    /**\n     * @param notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.render_options = {\n            cp1: 8,\n            cp2: 12,\n            text_shift_x: 0,\n            first_x_shift: 0,\n            last_x_shift: 0,\n            y_shift: 7,\n            tie_spacing: 0,\n        };\n        this.resetFont();\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    /**\n     * Set the notes to attach this tie to.\n     *\n     * @param {!Object} notes The notes to tie up.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices) {\n            notes.first_indices = [0];\n        }\n        if (!notes.last_indices) {\n            notes.last_indices = [0];\n        }\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indices.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.notes.first_note || !this.notes.last_note;\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.render_options.cp1;\n        let cp2 = this.render_options.cp2;\n        if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n            cp1 = 2;\n            cp2 = 8;\n        }\n        const first_x_shift = this.render_options.first_x_shift;\n        const last_x_shift = this.render_options.last_x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        // setNotes(...) verified that first_indices and last_indices are not undefined.\n        // As a result, we use the ! non-null assertion operator here.\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        // eslint-disable-next-line\n        const last_indices = this.notes.last_indices;\n        this.applyStyle();\n        ctx.openGroup('stavetie', this.getAttribute('id'));\n        for (let i = 0; i < first_indices.length; ++i) {\n            const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n            const first_y_px = params.first_ys[first_indices[i]] + y_shift;\n            const last_y_px = params.last_ys[last_indices[i]] + y_shift;\n            if (isNaN(first_y_px) || isNaN(last_y_px)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n            }\n            const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n            const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n            ctx.beginPath();\n            ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n            ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n            ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n            ctx.closePath();\n            ctx.fill();\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n    renderText(first_x_px, last_x_px) {\n        var _a, _b, _c;\n        if (!this.text)\n            return;\n        const ctx = this.checkContext();\n        let center_x = (first_x_px + last_x_px) / 2;\n        center_x -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.first_note) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.last_note) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n            ctx.restore();\n        }\n    }\n    /**\n     * Returns the TieNotes structure of the first and last note this tie connects.\n     */\n    getNotes() {\n        return this.notes;\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.notes.first_note;\n        const last_note = this.notes.last_note;\n        // Provide some default values so the compiler doesn't complain.\n        let first_x_px = 0;\n        let last_x_px = 0;\n        let first_ys = [0];\n        let last_ys = [0];\n        let stem_direction = 0;\n        if (first_note) {\n            first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n            stem_direction = first_note.getStemDirection();\n            first_ys = first_note.getYs();\n        }\n        else if (last_note) {\n            const stave = last_note.checkStave();\n            first_x_px = stave.getTieStartX();\n            first_ys = last_note.getYs();\n            this.notes.first_indices = this.notes.last_indices;\n        }\n        if (last_note) {\n            last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n            stem_direction = last_note.getStemDirection();\n            last_ys = last_note.getYs();\n        }\n        else if (first_note) {\n            const stave = first_note.checkStave();\n            last_x_px = stave.getTieEndX();\n            last_ys = first_note.getYs();\n            this.notes.last_indices = this.notes.first_indices;\n        }\n        if (this.direction) {\n            stem_direction = this.direction;\n        }\n        this.renderTie({\n            first_x_px,\n            last_x_px,\n            first_ys,\n            last_ys,\n            direction: stem_direction,\n        });\n        this.renderText(first_x_px, last_x_px);\n        return true;\n    }\n}\n/** Default text font. */\nStaveTie.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\nexport { StaveTie };\n","// / [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { StaveTie } from './stavetie';\nimport { Category } from './typeguard';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return Category.TabTie;\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    /**\n     * @param notes is a struct that has:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super(notes, text);\n        this.render_options.cp1 = 9;\n        this.render_options.cp2 = 11;\n        this.render_options.y_shift = 3;\n        this.direction = -1; // Tab tie's are always face up.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError, sumArray } from './util';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n    static get CATEGORY() {\n        return Category.Voice;\n    }\n    /**\n     * Modes allow the addition of ticks in three different ways:\n     * - STRICT: This is the default. Ticks must fill the voice.\n     * - SOFT: Ticks can be added without restrictions.\n     * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n     */\n    static get Mode() {\n        return VoiceMode;\n    }\n    constructor(time) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = {\n            softmaxFactor: Tables.SOFTMAX_FACTOR,\n        };\n        // Convert the `time` string into a VoiceTime object if necessary.\n        let voiceTime;\n        if (typeof time === 'string') {\n            // Time signature shortcut: \"4/4\", \"3/8\", etc.\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    num_beats: parseInt(match[1]),\n                    beat_value: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        // Default time signature is 4/4.\n        this.time = Object.assign({ num_beats: 4, beat_value: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        // Recalculate total ticks.\n        this.totalTicks = new Fraction(this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n        // until tickables are added, the smallestTickCount is the same as the stated totalTicks duration.\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    /** Get the total ticks in the voice. */\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    /** Get the total ticks used in the voice by all the tickables. */\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    /** Get the largest width of all the tickables. */\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    /** Get the tick count for the shortest tickable */\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    /** Get the tickables in the voice. */\n    getTickables() {\n        return this.tickables;\n    }\n    /** Get the voice mode (Voice.Mode.SOFT, STRICT, or FULL) */\n    getMode() {\n        return this.mode;\n    }\n    /**\n     * Set the voice mode.\n     * @param mode value from `VoiceMode` or Voice.Mode\n     */\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    /** Get the resolution multiplier for the voice. */\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    /** Get the actual tick resolution for the voice. */\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    /** Set the voice's stave. */\n    setStave(stave) {\n        this.stave = stave;\n        // Reset the bounding box so we can reformat.\n        this.boundingBox = undefined;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    /** Get the bounding box for the voice. */\n    getBoundingBox() {\n        if (!this.boundingBox) {\n            const stave = this.checkStave();\n            let boundingBox = undefined;\n            for (let i = 0; i < this.tickables.length; ++i) {\n                const tickable = this.tickables[i];\n                if (!tickable.getStave())\n                    tickable.setStave(stave);\n                const bb = tickable.getBoundingBox();\n                if (bb) {\n                    boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n                }\n            }\n            this.boundingBox = boundingBox;\n        }\n        return this.boundingBox;\n    }\n    /** Set the voice mode to strict or soft. */\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    /** Determine if the voice is complete according to the voice mode. */\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * We use softmax to layout the tickables proportional to the exponent of\n     * their duration. The softmax factor is used to determine the 'linearness' of\n     * the layout.\n     *\n     * The softmax of all the tickables in this voice should sum to 1.\n     */\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        this.expTicksUsed = 0; // reset\n        return this;\n    }\n    /**\n     * Calculate the sum of the exponents of all the ticks in this voice to use\n     * as the denominator of softmax.  (It is not the sum of the softmax(t) over all tickables)\n     *\n     * Note that the \"exp\" of \"expTicksUsed\" stands for \"expontential\" ticks used,\n     * not \"expected\" ticks used.\n     */\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = sumArray(this.tickables.map(exp));\n        return this.expTicksUsed;\n    }\n    /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    /** Add a tickable to the voice. */\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            // Update the total ticks for this line.\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0; // reset\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            // Track the smallest tickable for formatting.\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            // Expand total ticks using denominator from ticks used.\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        // Add the tickable to the line.\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    /** Add an array of tickables to the voice. */\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    /** Preformat the voice by applying the voice's stave to each note. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /**\n     * Render the voice onto the canvas `context` and an optional `stave`.\n     * If `stave` is omitted, it is expected that the notes have staves\n     * already set.\n     *\n     * This method also calculates the voice's boundingBox while drawing\n     * the notes. Note the similarities with this.getBoundingBox().\n     */\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        let boundingBox = undefined;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            // Set the stave if provided.\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            const bb = tickable.getBoundingBox();\n            if (bb) {\n                boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n            }\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n        this.boundingBox = boundingBox;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\nimport { Beam } from './beam';\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { Tables } from './tables';\nimport { TabTie } from './tabtie';\nimport { Category, isStaveNote } from './typeguard';\nimport { log } from './util';\nimport { Voice } from './voice';\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('Vex.Flow.GraceNoteGroup', args);\n}\n/** GraceNoteGroup is used to format and render grace notes. */\nclass GraceNoteGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.GraceNoteGroup;\n    }\n    /** Arranges groups inside a `ModifierContext`. */\n    static format(gracenote_groups, state) {\n        const group_spacing_stave = 4;\n        const group_spacing_tab = 0;\n        if (!gracenote_groups || gracenote_groups.length === 0)\n            return false;\n        const group_list = [];\n        let prev_note = null;\n        let shiftL = 0;\n        for (let i = 0; i < gracenote_groups.length; ++i) {\n            const gracenote_group = gracenote_groups[i];\n            const note = gracenote_group.getNote();\n            const is_stavenote = isStaveNote(note);\n            const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n            if (is_stavenote && note !== prev_note) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prev_note = note;\n            }\n            group_list.push({ shift: shiftL, gracenote_group, spacing });\n        }\n        // If first note left shift in case it is displaced\n        let group_shift = group_list[0].shift;\n        let formatWidth;\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            gracenote_group.preFormat();\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            group_shift = Math.max(formatWidth, group_shift);\n        }\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift) + StaveNote.minNoteheadPadding);\n        }\n        state.left_shift += group_shift;\n        return true;\n    }\n    //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n    constructor(grace_notes, show_slur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.grace_notes = grace_notes;\n        this.width = 0;\n        this.show_slur = show_slur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.render_options = {\n            slur_y_shift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.grace_notes);\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(grace_notes) {\n        grace_notes = grace_notes || this.grace_notes;\n        if (grace_notes.length > 1) {\n            const beam = new Beam(grace_notes);\n            beam.render_options.beam_width = 3;\n            beam.render_options.partial_beam_length = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width + StaveNote.minNoteheadPadding;\n    }\n    getGraceNotes() {\n        return this.grace_notes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n        // Draw grace notes.\n        this.grace_notes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n        // Draw beams.\n        this.beams.forEach((beam) => beam.setContext(ctx).draw());\n        if (this.show_slur) {\n            // Create and draw slur.\n            const is_stavenote = isStaveNote(note);\n            const TieClass = is_stavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                last_note: this.grace_notes[0],\n                first_note: note,\n                first_indices: [0],\n                last_indices: [0],\n            });\n            this.slur.render_options.cp2 = 12;\n            this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n            this.slur.setContext(ctx).draw();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\nexport { GraceNoteGroup };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { Voice } from './voice';\nexport class NoteSubGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.NoteSubGroup;\n    }\n    // Arrange groups inside a `ModifierContext`\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.left_shift += width;\n        return true;\n    }\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\nimport { Fraction } from './fraction';\nimport { RuntimeError } from './util';\n/**\n * TickContext formats abstract tickable objects, such as notes, chords, tabs, etc.\n */\nexport class TickContext {\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    constructor(options) {\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = options && options.tickID ? options.tickID : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined; // Biggest tickable\n        this.minTicks = undefined; // this can remian null if all tickables have ignore_ticks\n        this.minTickable = undefined;\n        this.padding = 1; // padding on each side (width += padding * 2)\n        this.x = 0;\n        this.xBase = 0; // base x position without xOffset\n        this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n        this.tickables = []; // Notes, tabs, chords, lyrics.\n        this.tickablesByVoice = {}; // Tickables indexed by voice number\n        // Formatting metrics\n        this.notePx = 0; // width of widest note in this context\n        this.glyphPx = 0; // width of glyph (note head)\n        this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n        this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n        this.modLeftPx = 0; // Left modifier pixels\n        this.modRightPx = 0; // Right modifier pixels\n        this.totalLeftPx = 0; // Total left pixels\n        this.totalRightPx = 0; // Total right pixels\n        this.tContexts = []; // Parent array of tick contexts\n        this.width = 0;\n        this.formatterMetrics = {\n            // The freedom of a tickcontext is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    } // use of xBase and xOffset is optional, avoids offset creep\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    /**\n     * Introduced on 2020-04-17 as getTickablesForVoice(voiceIndex).\n     *   https://github.com/0xfe/vexflow/blame/dc97b0cc5bb93171c0038638c34362dc958222ca/src/tickcontext.js#L63\n     * Renamed on 2021-08-05 to getTickableForVoice(voiceIndex). Method renamed to singular, since it returns one Tickable.\n     */\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    /** Gets widths context, note and left/right modifiers for formatting. */\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks == null) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex || 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            // Maintain max displaced head pixels from all tickables in the context\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            // Maintain the widest note for all tickables in the context\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            // Maintain the widest note head\n            this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth || 0);\n            // Total modifier shift\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            // Total shift\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            // Recalculate the tick context total width\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { Category, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('Vex.Flow.Ornament', args);\n}\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nclass Ornament extends Modifier {\n    /** Ornaments category string. */\n    static get CATEGORY() {\n        return Category.Ornament;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /** Arrange ornaments inside `ModifierContext` */\n    static format(ornaments, state) {\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0; // width is used by ornaments, which are always centered on the note head\n        let right_shift = state.right_shift; // jazz ornaments calculate r/l shift separately\n        let left_shift = state.left_shift;\n        let yOffset = 0;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n                ornament.x_shift += right_shift + 2;\n            }\n            if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n                ornament.x_shift -= left_shift + 2;\n            }\n            if (ornament.reportedWidth && ornament.x_shift < 0) {\n                left_shift += ornament.reportedWidth;\n            }\n            else if (ornament.reportedWidth && ornament.x_shift >= 0) {\n                right_shift += ornament.reportedWidth + Ornament.minPadding;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n            }\n            // articulations above/below the line can be stacked.\n            if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n                // Unfortunately we don't know the stem direction.  So we base it\n                // on the line number, but also allow it to be overridden.\n                const ornamentNote = defined(ornament.note, 'NoAttachedNote');\n                if (ornamentNote.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n                    state.top_text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset -= ornament.glyph.bbox.getH();\n                }\n                else {\n                    state.text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset += ornament.glyph.bbox.getH();\n                }\n            }\n            else {\n                if (ornament.getPosition() === Modifier.Position.ABOVE) {\n                    ornament.setTextLine(state.top_text_line);\n                    state.top_text_line += increment;\n                }\n                else {\n                    ornament.setTextLine(state.text_line);\n                    state.text_line += increment;\n                }\n            }\n        }\n        // Note: 'legit' ornaments don't consider other modifiers when calculating their\n        // X position, but jazz ornaments sometimes need to.\n        state.left_shift = left_shift + width / 2;\n        state.right_shift = right_shift + width / 2;\n        return true;\n    }\n    /**\n     * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n     * these are generally on the top of the staff.\n     */\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    /**\n     * ornamentAttack indicates something that happens in the attach, placed before the note and\n     * any accidentals\n     */\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    /**\n     * The ornament is aligned based on the note head, but without regard to whether the\n     * stem goes up or down.\n     */\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n    }\n    /**\n     * An ornament that happens on the release of the note, generally placed after the\n     * note and overlapping the next beat/measure..\n     */\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    /** ornamentArticulation goes above/below the note based on space availablity */\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    /**\n     * Legacy ornaments have hard-coded metrics.  If additional ornament types are\n     * added, get their metrics here.\n     */\n    getMetrics() {\n        const ornamentMetrics = Tables.currentMusicFont().getMetrics().ornament;\n        if (!ornamentMetrics)\n            throw new RuntimeError('BadMetrics', `ornament missing`);\n        return ornamentMetrics[this.ornament.code];\n    }\n    /**\n     * Create a new ornament of type `type`, which is an entry in\n     * `Vex.Flow.ornamentCodes` in `tables.ts`.\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.delayed = false;\n        this.render_options = {\n            font_scale: Tables.NOTATION_FONT_SCALE,\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        this.ornament = Tables.ornamentCodes(this.type);\n        // new ornaments have their origin at the origin, and have more specific\n        // metrics.  Legacy ornaments do some\n        // x scaling, and have hard-coded metrics\n        const metrics = this.getMetrics();\n        // some jazz ornaments are above or below depending on stem direction.\n        this.adjustForStemDirection = false;\n        // some jazz ornaments like falls are supposed to overlap with future bars\n        // and so we report a different width than they actually take up.\n        this.reportedWidth = metrics && metrics.reportedWidth ? metrics.reportedWidth : 0;\n        this.stemUpYOffset = metrics && metrics.stemUpYOffset ? metrics.stemUpYOffset : 0;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        if (!this.ornament) {\n            throw new RuntimeError('ArgumentError', `Ornament not found: '${this.type}'`);\n        }\n        this.x_shift = metrics ? metrics.xOffset : 0;\n        this.y_shift = metrics ? metrics.yOffset : 0;\n        this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, {\n            category: `ornament.${this.ornament.code}`,\n        });\n        // Is this a jazz ornament that goes between this note and the next note.\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n        // happen if I don't set it.\n        if (!metrics) {\n            this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n        }\n    }\n    /** Set whether the ornament is to be delayed. */\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    /** Set the upper accidental for the ornament. */\n    setUpperAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalUpper = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalUpper.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Set the lower accidental for the ornament. */\n    setLowerAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalLower = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalLower.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Render ornament in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDir = note.getStemDirection();\n        const stave = note.checkStave();\n        this.applyStyle();\n        ctx.openGroup('ornament', this.getAttribute('id'));\n        // Get stem extents\n        const stemExtents = note.checkStem().getExtents();\n        let y = stemDir === Stem.DOWN ? stemExtents.baseY : stemExtents.topY;\n        // TabNotes don't have stems attached to them. Tab stems are rendered outside the stave.\n        if (isTabNote(note)) {\n            if (note.hasStem()) {\n                if (stemDir === Stem.DOWN) {\n                    y = stave.getYForTopText(this.text_line);\n                }\n            }\n            else {\n                // Without a stem\n                y = stave.getYForTopText(this.text_line);\n            }\n        }\n        const isPlacedOnNoteheadSide = stemDir === Stem.DOWN;\n        const spacing = stave.getSpacingBetweenLines();\n        let lineSpacing = 1;\n        // Beamed stems are longer than quarter note stems, adjust accordingly\n        if (!isPlacedOnNoteheadSide && note.hasBeam()) {\n            lineSpacing += 0.5;\n        }\n        const totalSpacing = spacing * (this.text_line + lineSpacing);\n        const glyphYBetweenLines = y - totalSpacing;\n        // Get initial coordinates for the modifier position\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        // If the ornament is aligned with the note head, don't consider the stave y\n        // but use the 'natural' modifier y\n        let glyphY = this.ornamentAlignWithNoteHead\n            ? start.y\n            : Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n        glyphY += this.y_shift;\n        // Ajdust x position if ornament is delayed\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = glyphX - (stave.getX() - 10);\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                delayXShift += this.glyph.getMetrics().width / 2;\n                const nextContext = TickContext.getNextContext(note.getTickContext());\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - startX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.render(ctx, glyphX, glyphY);\n            glyphY -= this.accidentalLower.getMetrics().height;\n            glyphY -= this.render_options.accidentalLowerPadding;\n        }\n        if (this.stemUpYOffset && note.hasStem() && note.getStemDirection() === 1) {\n            glyphY += this.stemUpYOffset;\n        }\n        if (note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            glyphY = note.checkStave().getBoundingBox().getY() + 40;\n        }\n        this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n        if (this.accidentalUpper) {\n            glyphY -= this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding;\n            this.accidentalUpper.render(ctx, glyphX, glyphY);\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\nOrnament.DEBUG = false;\nexport { Ornament };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Rodrigo Vilar\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Parenthesis implements parenthesis modifiers for notes. */\nexport class Parenthesis extends Modifier {\n    static get CATEGORY() {\n        return Category.Parenthesis;\n    }\n    /** Add parentheses to the notes. */\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    /** Arrange parentheses inside a ModifierContext. */\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                x_widthR = x_widthR > shift + parenthesis.width ? x_widthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index);\n                x_widthL = x_widthL > shift + parenthesis.width ? x_widthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    /**\n     * Constructor\n     *\n     * @param position Modifier.Position.LEFT (default) or Modifier.Position.RIGHT\n     */\n    constructor(position) {\n        var _a;\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        this.point = (_a = Tables.currentMusicFont().lookupMetric('parenthesis.default.point')) !== null && _a !== void 0 ? _a : Note.getPoint('default');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n    }\n    /** Set the associated note. */\n    setNote(note) {\n        var _a, _b;\n        this.note = note;\n        this.point = (_a = Tables.currentMusicFont().lookupMetric('parenthesis.default.point')) !== null && _a !== void 0 ? _a : Note.getPoint('default');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n        if (isGraceNote(note)) {\n            this.point = (_b = Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.point')) !== null && _b !== void 0 ? _b : Note.getPoint('gracenote');\n            this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.width'));\n        }\n        return this;\n    }\n    /** Render the parenthesis. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        const x = start.x + this.x_shift;\n        const y = start.y + this.y_shift;\n        if (this.position == Modifier.Position.RIGHT) {\n            Glyph.renderGlyph(ctx, x + 1, y, this.point, 'noteheadParenthesisRight', {\n                category: `noteHead.standard.noteheadParenthesisRight`,\n            });\n        }\n        else if (this.position == Modifier.Position.LEFT) {\n            Glyph.renderGlyph(ctx, x - 2, y, this.point, 'noteheadParenthesisLeft', {\n                category: `noteHead.standard.noteheadParenthesisLeft`,\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n//\n// Utilities for working with Web APIs.\n// See: https://developer.mozilla.org/en-US/docs/Web/API\nimport { globalObject } from './util';\n// eslint-disable-next-line\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLCanvasElement class,\n    (typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        // OR it's pretending to be a <canvas> element. Good enough!\n        // Do not rely on .tagName, because node-canvas doesn't provide a tagName.\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\n// eslint-disable-next-line\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLDivElement class.\n    (typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        // OR it's pretending to be a <div>. See: svgcontext.ts.\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { RenderContext } from './rendercontext';\nimport { globalObject, warn } from './util';\nimport { isHTMLCanvas } from './web';\n/**\n * A rendering context for the Canvas backend. This class serves as a proxy for the\n * underlying CanvasRenderingContext2D object, part of the browser's API.\n */\nexport class CanvasContext extends RenderContext {\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n    }\n    /**\n     * Ensure that width and height do not exceed the browser limit.\n     * @returns array of [width, height] clamped to the browser limit.\n     */\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    constructor(context) {\n        super();\n        /** Height of one line of text (in pixels). */\n        this.textHeight = 0;\n        this.context2D = context;\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    /**\n     * Set all pixels to transparent black rgba(0,0,0,0).\n     */\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // eslint-disable-next-line\n    openGroup(cls, id, attrs) {\n        // Containers not implemented.\n    }\n    closeGroup() {\n        // Containers not implemented.\n    }\n    // eslint-disable-next-line\n    add(child) {\n        // Containers not implemented.\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    /** CanvasContext ignores `setBackgroundFillStyle()`. */\n    // eslint-disable-next-line\n    setBackgroundFillStyle(style) {\n        // DO NOTHING\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        // CanvasRenderingContext2D does not scale the shadow blur by the current\n        // transform, so we have to do it manually. We assume uniform scaling\n        // (though allow for rotation) because the blur can only be scaled\n        // uniformly anyway.\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height, devicePixelRatio) {\n        var _a;\n        const canvas = this.context2D.canvas;\n        const dpr = (_a = devicePixelRatio !== null && devicePixelRatio !== void 0 ? devicePixelRatio : globalObject().devicePixelRatio) !== null && _a !== void 0 ? _a : 1;\n        // Scale the canvas size by the device pixel ratio clamping to the maximum supported size.\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * dpr, height * dpr);\n        // Divide back down by the pixel ratio and convert to integers.\n        width = (width / dpr) | 0;\n        height = (height / dpr) | 0;\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        // The canvas could be an instance of either HTMLCanvasElement or an OffscreenCanvas.\n        // Only HTMLCanvasElement has a style attribute.\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(dpr, dpr);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    /**\n     * Set the pixels in a rectangular area to transparent black rgba(0,0,0,0).\n     */\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        // Return x, y, width & height in the same manner as svg getBBox\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Gregory Ristow (2015)\nimport { Font, FontStyle, FontWeight } from './font';\nimport { RenderContext } from './rendercontext';\nimport { Tables } from './tables';\nimport { normalizeAngle, prefix, RuntimeError } from './util';\n/** For a particular element type (e.g., rect), we will not apply certain presentation attributes. */\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\nclass MeasureTextCache {\n    constructor() {\n        // The cache is keyed first by the text string, then by the font attributes\n        // joined together.\n        this.cache = {};\n    }\n    lookup(text, svg, attributes) {\n        let entries = this.cache[text];\n        if (entries === undefined) {\n            entries = {};\n            this.cache[text] = entries;\n        }\n        const family = attributes['font-family'];\n        const size = attributes['font-size'];\n        const weight = attributes['font-weight'];\n        const style = attributes['font-style'];\n        const key = `${family}%${size}%${weight}%${style}`;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = this.measureImpl(text, svg, attributes);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n    measureImpl(text, svg, attributes) {\n        let txt = this.txt;\n        if (!txt) {\n            // Create the SVG text element that will be used to measure text in the event\n            // of a cache miss.\n            txt = document.createElementNS(SVG_NS, 'text');\n            this.txt = txt;\n        }\n        txt.textContent = text;\n        if (attributes['font-family'])\n            txt.setAttributeNS(null, 'font-family', attributes['font-family']);\n        if (attributes['font-size'])\n            txt.setAttributeNS(null, 'font-size', `${attributes['font-size']}`);\n        if (attributes['font-style'])\n            txt.setAttributeNS(null, 'font-style', attributes['font-style']);\n        if (attributes['font-weight'])\n            txt.setAttributeNS(null, 'font-weight', `${attributes['font-weight']}`);\n        svg.appendChild(txt);\n        const bbox = txt.getBBox();\n        svg.removeChild(txt);\n        return { x: bbox.x, y: bbox.y, width: bbox.width, height: bbox.height };\n    }\n}\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nclass SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        this.width = 0;\n        this.height = 0;\n        this.precision = 1;\n        this.backgroundFillStyle = 'white';\n        /** Formatted as CSS font shorthand (e.g., 'italic bold 12pt Arial') */\n        this.fontCSSString = '';\n        this.element = element;\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n        // Create a SVG element and add it to the container element.\n        const svg = this.create('svg');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        this.lineWidth = 1.0;\n        const defaultFontAttributes = {\n            'font-family': Font.SANS_SERIF,\n            'font-size': Font.SIZE + 'pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scaleX: 1, scaleY: 1 }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 0.3, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black' }, defaultFontAttributes);\n        this.groupAttributes = [];\n        this.applyAttributes(svg, this.attributes);\n        this.groupAttributes.push(Object.assign({}, this.attributes));\n        this.shadow_attributes = {\n            width: 0,\n            color: 'black',\n        };\n        this.state_stack = [];\n    }\n    round(n) {\n        return Math.round(n * this.precision) / this.precision;\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    // Allow grouping elements in containers for interactivity.\n    openGroup(cls, id, attrs) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        if (attrs && attrs.pointerBBox) {\n            group.setAttribute('pointer-events', 'bounding-box');\n        }\n        this.applyAttributes(group, this.attributes);\n        this.groupAttributes.push(Object.assign(Object.assign({}, this.groupAttributes[this.groupAttributes.length - 1]), this.attributes));\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.groupAttributes.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    /**\n     * Used to set the fill color for `clearRect()`. This allows us to simulate\n     * cutting a \"hole\" into the SVG drawing.\n     */\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.shadow_attributes.color = color;\n        return this;\n    }\n    /**\n     * @param blur A non-negative float specifying the level of shadow blur, where 0\n     *             represents no blur and larger numbers represent increasingly more blur.\n     * @returns this\n     */\n    setShadowBlur(blur) {\n        this.shadow_attributes.width = blur;\n        return this;\n    }\n    /**\n     * @param width\n     * @returns this\n     */\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n        return this;\n    }\n    /**\n     * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n     * @returns this\n     *\n     * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n     */\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    /**\n     * @param capType\n     * @returns this\n     */\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    // ### Sizing & Scaling Methods:\n    // TODO (GCR): See note at scale() -- separate our internal\n    // conception of pixel-based width/height from the style.width\n    // and style.height properties eventually to allow users to\n    // apply responsive sizing attributes to the SVG.\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scaleX, this.state.scaleY);\n        return this;\n    }\n    scale(x, y) {\n        // uses viewBox to scale\n        // TODO (GCR): we may at some point want to distinguish the\n        // style.width / style.height properties that are applied to\n        // the SVG object from our internal conception of the SVG\n        // width/height.  This would allow us to create automatically\n        // scaling SVG's that filled their containers, for instance.\n        //\n        // As this isn't implemented in Canvas contexts,\n        // I've left as is for now, but in using the viewBox to\n        // handle internal scaling, am trying to make it possible\n        // for us to eventually move in that direction.\n        this.state.scaleX = this.state.scaleX ? this.state.scaleX * x : x;\n        this.state.scaleY = this.state.scaleY ? this.state.scaleY * y : y;\n        const visibleWidth = this.width / this.state.scaleX;\n        const visibleHeight = this.height / this.state.scaleY;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    /**\n     * 1 arg: string in the \"x y w h\" format\n     * 4 args: x:number, y:number, w:number, h:number\n     */\n    setViewBox(viewBox_or_minX, minY, width, height) {\n        if (typeof viewBox_or_minX === 'string') {\n            this.svg.setAttribute('viewBox', viewBox_or_minX);\n        }\n        else {\n            const viewBoxString = viewBox_or_minX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    // ### Drawing helper methods:\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            if (attributes[attrName] &&\n                (this.groupAttributes.length == 0 ||\n                    attributes[attrName] != this.groupAttributes[this.groupAttributes.length - 1][attrName]))\n                element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    // ### Shape & Path Methods:\n    clear() {\n        // Clear the SVG by removing all inner children.\n        // (This approach is usually slightly more efficient\n        // than removing the old SVG & adding a new one to\n        // the container element, since it does not cause the\n        // container to resize twice.  Also, the resize\n        // triggered by removing the entire SVG can trigger\n        // a touchcancel event when the element resizes away\n        // from a touch point.)\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n        // Replace the viewbox attribute we just removed.\n        this.scale(this.state.scaleX, this.state.scaleY);\n    }\n    // ## Rectangles:\n    rect(x, y, width, height, attributes) {\n        // Avoid invalid negative height attributes by flipping the rectangle on its head:\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.lineWidth, stroke: 'black' };\n        x = this.round(x);\n        y = this.round(y);\n        width = this.round(width);\n        height = this.round(height);\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill, stroke: 'none' };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        // Currently this fills a rect with the backgroundFillStyle, rather\n        // than \"cut a hole\" into the existing shapes.\n        //\n        // Since tabNote seems to be the only module that makes use of this\n        // it may be worth creating a separate tabStave that would\n        // draw lines around locations of tablature fingering.\n        this.rect(x, y, width, height, { fill: this.backgroundFillStyle, stroke: 'none' });\n        return this;\n    }\n    // ## Paths:\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        x2 = this.round(x2);\n        y2 = this.round(y2);\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        let x0 = x + radius * Math.cos(startAngle);\n        let y0 = y + radius * Math.sin(startAngle);\n        x0 = this.round(x0);\n        y0 = this.round(y0);\n        // svg behavior different from canvas.  Don't normalize angles if\n        // we are drawing a circle because they both normalize to 0\n        const tmpStartTest = normalizeAngle(startAngle);\n        const tmpEndTest = normalizeAngle(endAngle);\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI) ||\n            tmpStartTest === tmpEndTest) {\n            let x1 = x + radius * Math.cos(startAngle + Math.PI);\n            let y1 = y + radius * Math.sin(startAngle + Math.PI);\n            // There's no way to specify a completely circular arc in SVG so we have to\n            // use two semi-circular arcs.\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            let x1 = x + radius * Math.cos(endAngle);\n            let y1 = y + radius * Math.sin(endAngle);\n            startAngle = tmpStartTest;\n            endAngle = tmpEndTest;\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    getShadowStyle() {\n        const sa = this.shadow_attributes;\n        // A CSS drop-shadow filter blur looks different than a canvas shadowBlur\n        // of the same radius, so we scale the drop-shadow radius here to make it\n        // look close to the canvas shadow.\n        return `filter: drop-shadow(0 0 ${sa.width / 1.5}px ${sa.color})`;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', 'stroke-width': this.lineWidth, d: this.path });\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    // ## Text Methods:\n    measureText(text) {\n        return SVGContext.measureTextCache.lookup(text, this.svg, this.attributes);\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        x = this.round(x);\n        y = this.round(y);\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    // TODO: State should be deep-copied.\n    save() {\n        this.state_stack.push({\n            state: {\n                'font-family': this.state['font-family'],\n                'font-weight': this.state['font-weight'],\n                'font-style': this.state['font-style'],\n                'font-size': this.state['font-size'],\n                scale: this.state.scale,\n            },\n            attributes: {\n                'font-family': this.attributes['font-family'],\n                'font-weight': this.attributes['font-weight'],\n                'font-style': this.attributes['font-style'],\n                'font-size': this.attributes['font-size'],\n                fill: this.attributes.fill,\n                stroke: this.attributes.stroke,\n                'stroke-width': this.attributes['stroke-width'],\n                'stroke-dasharray': this.attributes['stroke-dasharray'],\n            },\n            shadow_attributes: {\n                width: this.shadow_attributes.width,\n                color: this.shadow_attributes.color,\n            },\n            lineWidth: this.lineWidth,\n        });\n        return this;\n    }\n    // TODO: State should be deep-restored.\n    restore() {\n        const savedState = this.state_stack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state['font-family'] = state.state['font-family'];\n            this.state['font-weight'] = state.state['font-weight'];\n            this.state['font-style'] = state.state['font-style'];\n            this.state['font-size'] = state.state['font-size'];\n            this.state.scale = state.state.scale;\n            this.attributes['font-family'] = state.attributes['font-family'];\n            this.attributes['font-weight'] = state.attributes['font-weight'];\n            this.attributes['font-style'] = state.attributes['font-style'];\n            this.attributes['font-size'] = state.attributes['font-size'];\n            this.attributes.fill = state.attributes.fill;\n            this.attributes.stroke = state.attributes.stroke;\n            this.attributes['stroke-width'] = state.attributes['stroke-width'];\n            this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n            this.shadow_attributes.width = state.shadow_attributes.width;\n            this.shadow_attributes.color = state.shadow_attributes.color;\n            this.lineWidth = state.lineWidth;\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900). It is inserted\n     *               into the font-weight attribute (e.g., font-weight=\"bold\")\n     * @param style is a string (e.g., 'italic', 'normal') that is inserted into the\n     *              font-style attribute (e.g., font-style=\"italic\")\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.fontCSSString;\n    }\n}\nSVGContext.measureTextCache = new MeasureTextCache();\nexport { SVGContext };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { CanvasContext } from './canvascontext';\nimport { SVGContext } from './svgcontext';\nimport { isRenderContext } from './typeguard';\nimport { RuntimeError } from './util';\nimport { isHTMLCanvas, isHTMLDiv } from './web';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\n// End of line types\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\n/**\n * Support Canvas & SVG rendering contexts.\n */\nclass Renderer {\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    // Draw a dashed line (horizontal, vertical or diagonal\n    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n    // setting the second number to 0 draws a solid line.\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    constructor(arg0, arg1) {\n        if (isRenderContext(arg0)) {\n            // The user has provided what looks like a RenderContext, let's just use it.\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                // The backend must be specified if the render context isn't directly provided.\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 == 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            // Verify backend and create context\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d', { willReadFrequently: true });\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\n// Used by vexflow_test_helpers.ts\n// Should this be private?\n// Can we do this in a cleaner way?\nRenderer.lastContext = undefined;\nexport { Renderer };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var TextJustification;\n(function (TextJustification) {\n    TextJustification[TextJustification[\"LEFT\"] = 1] = \"LEFT\";\n    TextJustification[TextJustification[\"CENTER\"] = 2] = \"CENTER\";\n    TextJustification[TextJustification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(TextJustification || (TextJustification = {}));\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nclass TextNote extends Note {\n    static get CATEGORY() {\n        return Category.TextNote;\n    }\n    /** Glyph data. */\n    static get GLYPHS() {\n        return {\n            segno: {\n                code: 'segno',\n            },\n            tr: {\n                code: 'ornamentTrill',\n            },\n            mordent: {\n                code: 'ornamentMordent',\n            },\n            mordent_upper: {\n                code: 'ornamentShortTrill',\n            },\n            mordent_lower: {\n                code: 'ornamentMordent',\n            },\n            f: {\n                code: 'dynamicForte',\n            },\n            p: {\n                code: 'dynamicPiano',\n            },\n            m: {\n                code: 'dynamicMezzo',\n            },\n            s: {\n                code: 'dynamicSforzando',\n            },\n            z: {\n                code: 'dynamicZ',\n            },\n            coda: {\n                code: 'coda',\n            },\n            pedal_open: {\n                code: 'keyboardPedalPed',\n            },\n            pedal_close: {\n                code: 'keyboardPedalUp',\n            },\n            caesura_straight: {\n                code: 'caesura',\n            },\n            caesura_curved: {\n                code: 'caesuraCurved',\n            },\n            breath: {\n                code: 'breathMarkComma',\n            },\n            tick: {\n                code: 'breathMarkTick',\n            },\n            turn: {\n                code: 'ornamentTurn',\n            },\n            turn_inverted: {\n                code: 'ornamentTurnSlash',\n            },\n        };\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.text = noteStruct.text || '';\n        this.superscript = noteStruct.superscript;\n        this.subscript = noteStruct.subscript;\n        this.setFont(noteStruct.font);\n        this.line = noteStruct.line || 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignore_ticks = noteStruct.ignore_ticks || false;\n        this.justification = TextJustification.LEFT;\n        // Determine and set initial note width. Note that the text width is\n        // an approximation and isn't very accurate. The only way to accurately\n        // measure the length of text is with `CanvasRenderingContext2D.measureText()`.\n        if (noteStruct.glyph) {\n            const struct = TextNote.GLYPHS[noteStruct.glyph];\n            if (!struct)\n                throw new RuntimeError('Invalid glyph type: ' + noteStruct.glyph);\n            this.glyph = new Glyph(struct.code, Tables.NOTATION_FONT_SCALE, { category: 'textNote' });\n            this.setWidth(this.glyph.getMetrics().width);\n        }\n        else {\n            this.glyph = undefined;\n        }\n    }\n    /** Set the horizontal justification of the TextNote. */\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Return the Stave line on which the TextNote is placed. */\n    getLine() {\n        return this.line;\n    }\n    /** Return the unformatted text of this TextNote. */\n    getText() {\n        return this.text;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.smooth) {\n            this.setWidth(0);\n        }\n        else {\n            if (this.glyph) {\n                // Width already set.\n            }\n            else {\n                const ctx = this.checkContext();\n                ctx.setFont(this.textFont);\n                this.setWidth(ctx.measureText(this.text).width);\n            }\n        }\n        if (this.justification === TextJustification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        // We reposition to the center of the note head\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    /**\n     * Renders the TextNote.\n     * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        // Reposition to center of note head\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        // Align based on tick-context width.\n        const width = this.getWidth();\n        if (this.justification === TextJustification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            x -= width;\n        }\n        let y;\n        if (this.glyph) {\n            y = stave.getYForLine(this.line + -3);\n            this.glyph.render(ctx, x, y);\n        }\n        else {\n            y = stave.getYForLine(this.line + -3);\n            this.applyStyle(ctx);\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, x, y);\n            const height = ctx.measureText(this.text).height;\n            // We called this.setFont(...) in the constructor, so we know this.textFont is available.\n            // eslint-disable-next-line\n            const { family, size, weight, style } = this.textFont;\n            // Scale the font size by 1/1.3.\n            const smallerFontSize = Font.scaleSize(size, 0.769231);\n            if (this.superscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.superscript, x + this.width + 2, y - height / 2.2);\n            }\n            if (this.subscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.subscript, x + this.width + 2, y + height / 2.2 - 1);\n            }\n            this.restoreStyle(ctx);\n        }\n    }\n}\nTextNote.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 12,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nTextNote.Justification = TextJustification;\nexport { TextNote };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nclass Volta extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Volta;\n    }\n    static get type() {\n        return VoltaType;\n    }\n    constructor(type, number, x, y_shift) {\n        super();\n        this.volta = type;\n        this.x = x;\n        this.y_shift = y_shift;\n        this.number = number;\n        this.resetFont();\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x; // don't include x (offset) for width\n        const top_y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        const vert_height = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.volta) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            default:\n                break;\n        }\n        // If the beginning of a volta, draw measure number\n        if (this.volta === VoltaType.BEGIN || this.volta === VoltaType.BEGIN_END) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n            ctx.restore();\n        }\n        ctx.fillRect(this.x + x, top_y, width, 1);\n        return this;\n    }\n}\nVolta.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { Volta };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Renderer } from './renderer';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isStaveNote, isStemmableNote } from './typeguard';\nimport { RuntimeError } from './util';\nclass StringNumber extends Modifier {\n    static get CATEGORY() {\n        return Category.StringNumber;\n    }\n    static get metrics() {\n        var _a;\n        return ((_a = Tables.currentMusicFont().getMetrics().stringNumber) !== null && _a !== void 0 ? _a : {\n            verticalPadding: 0,\n            stemPadding: 0,\n            leftPadding: 0,\n            rightPadding: 0,\n        });\n    }\n    // ## Static Methods\n    // Arrange string numbers inside a `ModifierContext`\n    static format(nums, state) {\n        const left_shift = state.left_shift;\n        const right_shift = state.right_shift;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shift_left = 0;\n        let shift_right = 0;\n        const modLines = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const mc = note.getModifierContext();\n            const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n            if (mc) {\n                if (pos === ModifierPosition.ABOVE) {\n                    num.text_line = mc.getState().top_text_line;\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n                else if (pos === ModifierPosition.BELOW) {\n                    num.text_line = mc.getState().text_line;\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shift_left = Math.max(note.getLeftDisplacedHeadPx(), shift_left);\n                    }\n                    if (right_shift === 0) {\n                        shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n                    }\n                }\n                prev_note = note;\n            }\n            const glyphLine = modLines === 0 ? props.line : modLines;\n            nums_list.push({\n                pos,\n                note,\n                num,\n                line: glyphLine,\n                shiftL: shift_left,\n                shiftR: shift_right,\n            });\n        }\n        // Sort string numbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let num_shiftR = 0;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        let last_line = null;\n        let last_note = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const note = nums_list[i].note;\n            const pos = nums_list[i].pos;\n            const num = nums_list[i].num;\n            const line = nums_list[i].line;\n            const shiftR = nums_list[i].shiftR;\n            // Reset the position of the string number every line.\n            if (line !== last_line || note !== last_note) {\n                num_shiftR = right_shift + shiftR;\n            }\n            const num_width = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift);\n                num_shift = shift_left + num_width; // spacing\n                x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(num_shiftR);\n                num_shift += num_width; // spacing\n                x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n            }\n            last_line = line;\n            last_note = note;\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    constructor(number) {\n        super();\n        this.string_number = number;\n        this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.text_line = 0;\n        this.stem_offset = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.dashed = true; // true - draw dashed extension  false - no extension\n        this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n        this.radius = 8;\n        this.drawCircle = true;\n        this.setWidth(this.radius * 2 + 4);\n        this.resetFont();\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.string_number = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.last_note = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    setDrawCircle(drawCircle) {\n        this.drawCircle = drawCircle;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let stem_ext = {};\n        if (note.hasStem()) {\n            stem_ext = note.checkStem().getExtents();\n        }\n        let dot_y = start.y + this.y_shift + this.y_offset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a < b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.UP) {\n                        dot_y = stem_ext.topY + StringNumber.metrics.stemPadding;\n                    }\n                    dot_y -= this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.BELOW:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a > b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.DOWN) {\n                        dot_y = stem_ext.topY - StringNumber.metrics.stemPadding;\n                    }\n                    dot_y += this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.radius / 2 + StringNumber.metrics.leftPadding;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += this.radius / 2 + StringNumber.metrics.rightPadding;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        ctx.save();\n        if (this.drawCircle) {\n            ctx.beginPath();\n            ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n            ctx.setLineWidth(1.5);\n            ctx.stroke();\n        }\n        ctx.setFont(this.textFont);\n        const x = dot_x - ctx.measureText(this.string_number).width / 2;\n        ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n        const lastNote = this.last_note;\n        if (isStemmableNote(lastNote)) {\n            // Only StemmableNote objects have getStemX().\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n        ctx.restore();\n    }\n}\nStringNumber.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { StringNumber };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category, isNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nclass Stroke extends Modifier {\n    static get CATEGORY() {\n        return Category.Stroke;\n    }\n    // Arrange strokes inside `ModifierContext`\n    static format(strokes, state) {\n        const left_shift = state.left_shift;\n        const stroke_spacing = 0;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                // Only StaveNote objects have getKeyProps().\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                // Only TabNote objects have getPositions().\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = left_shift;\n        // There can only be one stroke .. if more than one, they overlay each other\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n        }, 0);\n        state.left_shift += xShift;\n        return true;\n    }\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ all_voices: true }, options);\n        // multi voice - span stroke across all voices if true\n        this.all_voices = this.options.all_voices;\n        // multi voice - end note of stroke, set in draw()\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            font_scale: Tables.NOTATION_FONT_SCALE,\n        };\n        this.resetFont();\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.note_end = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let ys = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const line_space = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                // Only Note objects have getYs().\n                // note is an instance of either StaveNote or TabNote.\n                ys = note.getYs();\n                for (let n = 0; n < ys.length; n++) {\n                    if (this.note === notes[i] || this.all_voices) {\n                        topY = Math.min(topY, ys[n]);\n                        botY = Math.max(botY, ys[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrow_shift_x = 0;\n        let arrow_y = 0;\n        let text_shift_x = 0;\n        let text_y = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                arrow_y = topY - line_space / 2 + 10;\n                botY += line_space / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = 0.5;\n                arrow_y = botY + line_space / 2;\n                topY -= line_space / 2;\n                break;\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASQUEDO_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                text_shift_x = this.x_shift + arrow_shift_x - 2;\n                if (isStaveNote(note)) {\n                    topY += 1.5 * line_space;\n                    if ((botY - topY) % 2 !== 0) {\n                        botY += 0.5 * line_space;\n                    }\n                    else {\n                        botY += line_space;\n                    }\n                    arrow_y = topY - line_space;\n                    text_y = botY + line_space + 2;\n                }\n                else {\n                    topY += 1.5 * line_space;\n                    botY += line_space;\n                    arrow_y = topY - 0.75 * line_space;\n                    text_y = botY + 0.25 * line_space;\n                }\n                break;\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASQUEDO_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = -4;\n                text_shift_x = this.x_shift + arrow_shift_x - 1;\n                if (isStaveNote(note)) {\n                    arrow_y = line_space / 2;\n                    topY += 0.5 * line_space;\n                    if ((botY - topY) % 2 === 0) {\n                        botY += line_space / 2;\n                    }\n                    arrow_y = botY + 0.5 * line_space;\n                    text_y = topY - 1.25 * line_space;\n                }\n                else {\n                    topY += 0.25 * line_space;\n                    botY += 0.5 * line_space;\n                    arrow_y = botY + 0.25 * line_space;\n                    text_y = topY - line_space;\n                }\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY += 0.5 * line_space;\n                botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        let strokeLine = 'straight';\n        // Draw the stroke\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n        }\n        else {\n            strokeLine = 'wiggly';\n            if (isStaveNote(note)) {\n                for (let i = topY; i <= botY; i += line_space) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n            }\n            else {\n                let i;\n                for (i = topY; i <= botY; i += 10) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n                if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n                    text_y = i + 0.25 * line_space;\n                }\n            }\n        }\n        if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n            return; // skip drawing arrow heads or text\n        }\n        // Draw the arrow head\n        Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n            category: `stroke_${strokeLine}.${arrow}`,\n        });\n        // Draw the rasquedo \"R\"\n        if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText('R', x + text_shift_x, text_y);\n            ctx.restore();\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n};\nStroke.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\nexport { Stroke };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Bend } from './bend';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n    static get CATEGORY() {\n        return Category.Vibrato;\n    }\n    /** Arrange vibratos inside a `ModifierContext`. */\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        // Vibratos are always on top.\n        let text_line = state.top_text_line;\n        let width = 0;\n        let shift = state.right_shift - 7;\n        // If there's a bend, drop the text line\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            text_line = text_line - (bendHeight + 1);\n        }\n        else {\n            state.top_text_line += 1;\n        }\n        // Format Vibratos\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(text_line);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.right_shift += width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.render_options = {\n            harsh: false,\n            vibrato_width: 20,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n        };\n        this.setVibratoWidth(this.render_options.vibrato_width);\n    }\n    /** Set harsh vibrato. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Set vibrato width in pixels. */\n    setVibratoWidth(width) {\n        this.render_options.vibrato_width = width;\n        this.setWidth(width);\n        return this;\n    }\n    /** Draw the vibrato on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x + this.x_shift;\n        const vy = note.getYForTopText(this.text_line) + 2;\n        Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n    }\n    /**\n     * Static rendering method that can be called from\n     * other classes (e.g. VibratoBracket).\n     */\n    static renderVibrato(ctx, x, y, opts) {\n        const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n        const num_waves = vibrato_width / wave_width;\n        ctx.beginPath();\n        let i;\n        if (harsh) {\n            ctx.moveTo(x, y + wave_girth + 1);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x + wave_width, y - wave_height / 2);\n                x += wave_width;\n                ctx.lineTo(x + wave_width, y + wave_height / 2);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n                ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n        else {\n            ctx.moveTo(x, y + wave_girth);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n                x += wave_width;\n                ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n                ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.).  The ModifierContext works with tickables\n// that are at the same tick to ensure that they and their modifiers\n// all have proper alignment.  (Note that the ModifierContext also\n// runs the spacing of the tickable).\n//\n// see https://github.com/0xfe/vexflow/wiki/How-Formatting-Works\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Bend } from './bend';\nimport { ChordSymbol } from './chordsymbol';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { StaveNote } from './stavenote';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\nimport { Vibrato } from './vibrato';\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('Vex.Flow.ModifierContext', args);\n}\nclass ModifierContext {\n    constructor() {\n        // Formatting data.\n        this.state = {\n            left_shift: 0,\n            right_shift: 0,\n            text_line: 0,\n            top_text_line: 0,\n        };\n        // Current members -- a mapping of Category (string) to a list of Tickables, Modifiers,\n        // StaveNotes, TabNotes, etc.\n        this.members = {};\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.formatted = false;\n        this.width = 0;\n        this.spacing = 0;\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    /**\n     * this.members maps CATEGORY strings to arrays of Tickable | Modifier | StaveNote | TabNote.\n     * Here we add a new member to this.members, and create a new array if needed.\n     * @param member\n     * @returns this\n     */\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    /**\n     * @deprecated\n     */\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        var _a;\n        return (_a = this.members[category]) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Get the width of the entire\n     */\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.left_shift;\n    }\n    getRightShift() {\n        return this.state.right_shift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.left_shift + this.state.right_shift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        L('Preformatting ModifierContext');\n        const state = this.state;\n        const members = this.members;\n        // The ordering below determines when different members are formatted and rendered.\n        StaveNote.format(members[Category.StaveNote], state);\n        Parenthesis.format(members[Category.Parenthesis], state);\n        Dot.format(members[Category.Dot], state);\n        FretHandFinger.format(members[Category.FretHandFinger], state);\n        Accidental.format(members[Category.Accidental], state);\n        Stroke.format(members[Category.Stroke], state);\n        GraceNoteGroup.format(members[Category.GraceNoteGroup], state);\n        NoteSubGroup.format(members[Category.NoteSubGroup], state);\n        StringNumber.format(members[Category.StringNumber], state);\n        Articulation.format(members[Category.Articulation], state);\n        Ornament.format(members[Category.Ornament], state);\n        Annotation.format(members[Category.Annotation], state);\n        ChordSymbol.format(members[Category.ChordSymbol], state);\n        Bend.format(members[Category.Bend], state);\n        Vibrato.format(members[Category.Vibrato], state, this);\n        // Update width of this member context\n        this.width = state.left_shift + state.right_shift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        L('Postformatting ModifierContext');\n        // If post-formatting is required for an element, add more lines below.\n        StaveNote.postFormat(this.getMembers(Category.StaveNote));\n    }\n}\nModifierContext.DEBUG = false;\nexport { ModifierContext };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n// MIT License\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('Vex.Flow.Clef', args);\n}\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nclass Clef extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Clef;\n    }\n    /**\n     * Every clef name is associated with a glyph code from the font file\n     * and a default stave line number.\n     */\n    static get types() {\n        return {\n            treble: {\n                code: 'gClef',\n                line: 3,\n            },\n            bass: {\n                code: 'fClef',\n                line: 1,\n            },\n            alto: {\n                code: 'cClef',\n                line: 2,\n            },\n            tenor: {\n                code: 'cClef',\n                line: 1,\n            },\n            percussion: {\n                code: 'unpitchedPercussionClef1',\n                line: 2,\n            },\n            soprano: {\n                code: 'cClef',\n                line: 4,\n            },\n            'mezzo-soprano': {\n                code: 'cClef',\n                line: 3,\n            },\n            'baritone-c': {\n                code: 'cClef',\n                line: 0,\n            },\n            'baritone-f': {\n                code: 'fClef',\n                line: 2,\n            },\n            subbass: {\n                code: 'fClef',\n                line: 0,\n            },\n            french: {\n                code: 'gClef',\n                line: 4,\n            },\n            tab: {\n                code: '6stringTabClef',\n                line: 2.5,\n            },\n        };\n    }\n    static get annotationSmufl() {\n        return {\n            '8va': 'timeSig8',\n            '8vb': 'timeSig8',\n        };\n    }\n    /** Create a new clef. */\n    constructor(type, size, annotation) {\n        super();\n        /**\n         * The attribute `clef` must be a key from\n         * `Clef.types`\n         */\n        this.clef = Clef.types['treble'];\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clef_${this.size}`));\n        L('Creating clef:', type);\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef = Clef.types[type];\n        if (size === undefined) {\n            this.size = 'default';\n        }\n        else {\n            this.size = size;\n        }\n        const musicFont = Tables.currentMusicFont();\n        // If an annotation, such as 8va, is specified, add it to the Clef object.\n        if (annotation !== undefined) {\n            const code = Clef.annotationSmufl[annotation];\n            const point = (Clef.getPoint(this.size) / 5) * 3;\n            const line = musicFont.lookupMetric(`clef_${this.size}.annotations.${annotation}.${this.type}.line`);\n            const x_shift = musicFont.lookupMetric(`clef_${this.size}.annotations.${annotation}.${this.type}.shiftX`);\n            this.annotation = { code, point, line, x_shift };\n            this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n            this.attachment.metrics.x_max = 0;\n            this.attachment.setXShift(this.annotation.x_shift);\n        }\n        else {\n            this.annotation = undefined;\n        }\n        return this;\n    }\n    /** Get clef width. */\n    getWidth() {\n        if (this.type === 'tab') {\n            defined(this.stave, 'ClefError', \"Can't get width without stave.\");\n        }\n        return this.width;\n    }\n    /** Get point for clefs. */\n    static getPoint(size) {\n        // for sizes other than 'default', clef is 2/3 of the default value\n        return size == 'default' ? Tables.NOTATION_FONT_SCALE : (Tables.NOTATION_FONT_SCALE / 3) * 2;\n    }\n    /** Set associated stave. */\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    /** Render clef. */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('clef', this.getAttribute('id'));\n        Glyph.renderGlyph(ctx, this.x, stave.getYForLine(this.clef.line), Clef.getPoint(this.size), this.clef.code, {\n            category: `clef_${this.size}`,\n        });\n        if (this.annotation !== undefined && this.attachment !== undefined) {\n            this.placeGlyphOnLine(this.attachment, stave, this.annotation.line);\n            this.attachment.setStave(stave);\n            this.attachment.setContext(ctx);\n            this.attachment.renderToStave(this.x);\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n/** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\nClef.DEBUG = false;\nexport { Clef };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nclass KeySignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.KeySignature;\n    }\n    // Create a new Key Signature based on a `key_spec`\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.glyphFontScale = Tables.NOTATION_FONT_SCALE;\n        this.glyphs = [];\n        this.xPositions = []; // relative to this.x\n        this.paddingForced = false;\n    }\n    // Add an accidental glyph to the `KeySignature` instance which represents\n    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n    // spacing will be included in the glyph's position\n    convertToGlyph(acc, nextAcc) {\n        const accGlyphData = Tables.accidentalCodes(acc.type);\n        const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n        // Determine spacing between current accidental and the next accidental\n        let extraWidth = 1;\n        if (acc.type === 'n' && nextAcc) {\n            const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n            if (spacing) {\n                const isAbove = nextAcc.line >= acc.line;\n                extraWidth = isAbove ? spacing.above : spacing.below;\n            }\n        }\n        // Place the glyph on the stave\n        this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n        this.glyphs.push(glyph);\n        const xPosition = this.xPositions[this.xPositions.length - 1];\n        const glyphWidth = glyph.getMetrics().width + extraWidth;\n        // Store the next accidental's x position\n        this.xPositions.push(xPosition + glyphWidth);\n        // Expand size of key signature\n        this.width += glyphWidth;\n    }\n    // Cancel out a key signature provided in the `spec` parameter. This will\n    // place appropriate natural accidentals before the key signature.\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        // Get the accidental list for the cancelled key signature\n        const cancel_accList = Tables.keySignature(spec);\n        // If the cancelled key has a different accidental type, ie: # vs b\n        const different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n        // Determine how many naturals needed to add\n        const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n        // Return if no naturals needed\n        if (naturals < 1)\n            return undefined;\n        // Get the line position for each natural\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!different_types) {\n                index = cancel_accList.length - naturals + i;\n            }\n            const acc = cancel_accList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        // Combine naturals with main accidental list for the key signature\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancel_accList[0].type,\n        };\n    }\n    // Deprecated\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    // Apply the accidental staff line placement based on the `clef` and\n    // the  accidental `type` for the key signature ('# or 'b').\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0; // if clef === \"treble\"\n        let customLines; // when clef doesn't follow treble key sig shape\n        switch (clef) {\n            // Treble & Subbass both have offsets of 0, so are not included.\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        // If there's a special case, assign those lines/spaces:\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    // Alter the accidentals of a key spec one by one.\n    // Each alteration is a new accidental that replaces the\n    // original accidental (or the canceled one).\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        const stave = this.checkStave();\n        this.width = 0;\n        this.glyphs = [];\n        this.xPositions = [0]; // initialize with initial x position\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n            }\n        }\n        this.formatted = true;\n    }\n    /**\n     * Return the Glyph objects making up this KeySignature.\n     */\n    getGlyphs() {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.glyphs.length; i++) {\n            const glyph = this.glyphs[i];\n            const x = this.x + this.xPositions[i];\n            glyph.setStave(stave);\n            glyph.setContext(ctx);\n            glyph.renderToStave(x);\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n// Space between natural and following accidental depending\n// on vertical position\nKeySignature.accidentalSpacing = {\n    '#': {\n        above: 6,\n        below: 4,\n    },\n    b: {\n        above: 4,\n        below: 7,\n    },\n    n: {\n        above: 4,\n        below: 1,\n    },\n    '##': {\n        above: 6,\n        below: 4,\n    },\n    bb: {\n        above: 4,\n        below: 7,\n    },\n    db: {\n        above: 4,\n        below: 7,\n    },\n    d: {\n        above: 4,\n        below: 7,\n    },\n    bbs: {\n        above: 4,\n        below: 7,\n    },\n    '++': {\n        above: 6,\n        below: 4,\n    },\n    '+': {\n        above: 6,\n        below: 4,\n    },\n    '+-': {\n        above: 6,\n        below: 4,\n    },\n    '++-': {\n        above: 6,\n        below: 4,\n    },\n    bs: {\n        above: 4,\n        below: 10,\n    },\n    bss: {\n        above: 4,\n        below: 10,\n    },\n};\nexport { KeySignature };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nclass Repetition extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Repetition;\n    }\n    constructor(type, x, y_shift) {\n        super();\n        this.symbol_type = type;\n        this.x = x;\n        this.x_shift = 0;\n        this.y_shift = y_shift;\n        this.resetFont();\n    }\n    setShiftX(x) {\n        this.x_shift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        this.setRendered();\n        switch (this.symbol_type) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSignoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSignoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.coda.offsetY'), 40, 'coda', { category: 'coda' });\n        return this;\n    }\n    drawSignoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.segno.offsetY'), 30, 'segno', { category: 'segno' });\n        return this;\n    }\n    drawSymbolText(stave, x, text, draw_coda) {\n        var _a;\n        const ctx = stave.checkContext();\n        ctx.save();\n        ctx.setFont(this.textFont);\n        let text_x = 0;\n        let symbol_x = 0;\n        const modifierWidth = stave.getNoteStartX() - this.x;\n        switch (this.symbol_type) {\n            // To the left with symbol\n            case Repetition.type.CODA_LEFT:\n                // Offset Coda text to right of stave beginning\n                text_x = this.x + stave.getVerticalBarWidth();\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n            // To the right without symbol\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width;\n                break;\n            // To the right with symbol\n            default:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) +\n            this.y_shift +\n            Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetY');\n        if (draw_coda) {\n            Glyph.renderGlyph(ctx, symbol_x, y, Font.convertSizeToPointValue((_a = this.textFont) === null || _a === void 0 ? void 0 : _a.size) * 2, 'coda', {\n                category: 'coda',\n            });\n        }\n        ctx.fillText(text, text_x, y + 5);\n        ctx.restore();\n        return this;\n    }\n}\nRepetition.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Tables.NOTATION_FONT_SCALE / 3,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13, // To Coda at end of stave\n};\nexport { Repetition };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nclass StaveSection extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveSection;\n    }\n    constructor(section, x, shift_y, drawRect = true) {\n        super();\n        this.setWidth(16);\n        this.section = section;\n        this.x = x;\n        this.shift_x = 0;\n        this.shift_y = shift_y;\n        this.drawRect = drawRect;\n        this.resetFont();\n    }\n    setStaveSection(section) {\n        this.section = section;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const borderWidth = 2;\n        const padding = 2;\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(borderWidth);\n        ctx.setFont(this.textFont);\n        const textFormatter = TextFormatter.create(this.textFont);\n        const textWidth = textFormatter.getWidthForTextInPx(this.section);\n        const textY = textFormatter.getYForStringInPx(this.section);\n        const textHeight = textY.height;\n        const headroom = -1 * textY.yMin;\n        const width = textWidth + 2 * padding; // add left & right padding\n        const height = textHeight + 2 * padding; // add top & bottom padding\n        //  Seems to be a good default y\n        const y = stave.getYForTopText(1.5) + this.shift_y;\n        const x = this.x + shift_x;\n        if (this.drawRect) {\n            ctx.beginPath();\n            ctx.rect(x, y - height + headroom, width, height);\n            ctx.stroke();\n        }\n        ctx.fillText(this.section, x + padding, y - padding);\n        ctx.restore();\n        return this;\n    }\n}\nStaveSection.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { StaveSection };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nclass StaveTempo extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveTempo;\n    }\n    constructor(tempo, x, shift_y) {\n        super();\n        /** Font size for note. */\n        this.render_options = { glyph_font_scale: 30 };\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.shift_x = 10;\n        this.shift_y = shift_y;\n        this.resetFont();\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const options = this.render_options;\n        const scale = options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n        const name = this.tempo.name;\n        const duration = this.tempo.duration;\n        const dots = this.tempo.dots || 0;\n        const bpm = this.tempo.bpm;\n        let x = this.x + this.shift_x + shift_x;\n        const y = stave.getYForTopText(1) + this.shift_y;\n        ctx.save();\n        const textFormatter = TextFormatter.create(this.textFont);\n        if (name) {\n            ctx.setFont(this.textFont);\n            ctx.fillText(name, x, y);\n            x += textFormatter.getWidthForTextInPx(name);\n        }\n        if (duration && bpm) {\n            // Override the weight and style.\n            const noteTextFont = Object.assign(Object.assign({}, this.textFont), { weight: 'normal', style: 'normal' });\n            ctx.setFont(noteTextFont);\n            const noteTextFormatter = TextFormatter.create(noteTextFont);\n            if (name) {\n                x += noteTextFormatter.getWidthForTextInPx('|');\n                ctx.fillText('(', x, y);\n                x += noteTextFormatter.getWidthForTextInPx('(');\n            }\n            const glyphProps = Tables.getGlyphProps(duration);\n            x += 3 * scale;\n            Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, glyphProps.code_head);\n            x += Glyph.getWidth(glyphProps.code_head, options.glyph_font_scale);\n            // Draw stem and flags\n            if (glyphProps.stem) {\n                let stem_height = 30;\n                if (glyphProps.beam_count)\n                    stem_height += 3 * (glyphProps.beam_count - 1);\n                stem_height *= scale;\n                const y_top = y - stem_height;\n                ctx.fillRect(x - scale, y_top, scale, stem_height);\n                if (glyphProps.code && glyphProps.code_flag_upstem) {\n                    const flagMetrics = Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, glyphProps.code_flag_upstem, {\n                        category: 'flag.staveTempo',\n                    });\n                    x += (flagMetrics.width * Tables.NOTATION_FONT_SCALE) / flagMetrics.font.getData().resolution;\n                }\n            }\n            // Draw dot\n            for (let i = 0; i < dots; i++) {\n                x += 6 * scale;\n                ctx.beginPath();\n                ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n                ctx.fill();\n            }\n            ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n        }\n        ctx.restore();\n        return this;\n    }\n}\nStaveTempo.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 14,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { StaveTempo };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { TextJustification, TextNote } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nclass StaveText extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveText;\n    }\n    constructor(text, position, options = {}) {\n        super();\n        this.setWidth(16);\n        this.text = text;\n        this.position = position;\n        this.options = Object.assign({ shift_x: 0, shift_y: 0, justification: TextNote.Justification.CENTER }, options);\n        this.resetFont();\n    }\n    setStaveText(text) {\n        this.text = text;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText('' + this.text).width;\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - text_width - 24 + this.options.shift_x;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX() + this.options.shift_x;\n                if (this.options.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - text_width / 2;\n                }\n                else if (this.options.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - text_width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2) + this.options.shift_y;\n                }\n                else {\n                    y = stave.getYForBottomText(2) + this.options.shift_y;\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        ctx.fillText('' + this.text, x, y + 4);\n        ctx.restore();\n        return this;\n    }\n}\nStaveText.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nexport { StaveText };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Renders time signatures glyphs for staffs\n// This class is used by TimeSignature to render the associated glyphs\nimport { Glyph } from './glyph';\nimport { defined } from './util';\nexport class TimeSignatureGlyph extends Glyph {\n    constructor(timeSignature, topDigits, botDigits, code, point, options) {\n        var _a;\n        super(code, point, options);\n        this.timeSignature = timeSignature;\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        let topWidth = 0;\n        let height = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            let timeSigType = topDigits[i];\n            switch (topDigits[i]) {\n                case '-':\n                    timeSigType = 'Minus';\n                    break;\n                case '+':\n                    timeSigType = botDigits.length > 0 ? 'PlusSmall' : 'Plus';\n                    break;\n                case '(':\n                    timeSigType = botDigits.length > 0 ? 'ParensLeftSmall' : 'ParensLeft';\n                    break;\n                case ')':\n                    timeSigType = botDigits.length > 0 ? 'ParensRightSmall' : 'ParensRight';\n                    break;\n            }\n            const topGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.topGlyphs.push(topGlyph);\n            topWidth += (_a = topGlyph.getMetrics().width) !== null && _a !== void 0 ? _a : 0;\n            height = Math.max(height, topGlyph.getMetrics().height);\n        }\n        let botWidth = 0;\n        for (let i = 0; i < botDigits.length; ++i) {\n            let timeSigType = botDigits[i];\n            switch (botDigits[i]) {\n                case '+':\n                    timeSigType = 'PlusSmall';\n                    break;\n                case '(':\n                    timeSigType = 'ParensLeftSmall';\n                    break;\n                case ')':\n                    timeSigType = 'ParensRightSmall';\n                    break;\n            }\n            const botGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.botGlyphs.push(botGlyph);\n            botWidth += defined(botGlyph.getMetrics().width);\n            height = Math.max(height, botGlyph.getMetrics().height);\n        }\n        // If the height of the digits is more than two staff spaces (20), shift to the next line\n        // in order to center the digits on lines 1 and 5 rather than 2 and 4.\n        this.lineShift = height > 22 ? 1 : 0;\n        this.width = Math.max(topWidth, botWidth);\n        this.xMin = this.getMetrics().x_min;\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n        this.reset();\n    }\n    getMetrics() {\n        return {\n            x_min: this.xMin,\n            x_max: this.xMin + this.width,\n            width: this.width,\n        };\n    }\n    renderToStave(x) {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        let start_x = x + this.topStartX;\n        let y = 0;\n        if (this.botGlyphs.length > 0)\n            y = stave.getYForLine(this.timeSignature.topLine - this.lineShift);\n        else\n            y = (stave.getYForLine(this.timeSignature.topLine) + stave.getYForLine(this.timeSignature.bottomLine)) / 2;\n        for (let i = 0; i < this.topGlyphs.length; ++i) {\n            const glyph = this.topGlyphs[i];\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + this.x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n        start_x = x + this.botStartX;\n        y = stave.getYForLine(this.timeSignature.bottomLine + this.lineShift);\n        for (let i = 0; i < this.botGlyphs.length; ++i) {\n            const glyph = this.botGlyphs[i];\n            this.timeSignature.placeGlyphOnLine(glyph, stave, this.timeSignature.getLine());\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + glyph.getMetrics().x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignatureGlyph } from './timesigglyph';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    if (numbers.length !== 2 && numbers[0] !== '+' && numbers[0] !== '-') {\n        throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`);\n    }\n    numbers.forEach((number) => {\n        // Characters consisting in number 0..9, '+', '-', '(' or ')'\n        if (/^[0-9+\\-()]+$/.test(number) == false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\n/**\n * A TimeSignature is a StaveModifier that can make its appropriate Glyphs directly from\n * a provided \"timeSpec\" such as \"4/4\", \"C|\" (cut time), or even something more advanced\n * such as \"3/4(6/8)\" or \"2/4+5/8\".\n */\nexport class TimeSignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.TimeSignature;\n    }\n    static get glyphs() {\n        return {\n            C: {\n                code: 'timeSigCommon',\n                line: 2,\n            },\n            'C|': {\n                code: 'timeSigCutCommon',\n                line: 2,\n            },\n        };\n    }\n    constructor(timeSpec = '4/4', customPadding = 15, validate_args = true) {\n        super();\n        this.timeSpec = '4/4';\n        this.line = 0;\n        this.is_numeric = true;\n        this.validate_args = validate_args;\n        const padding = customPadding;\n        // point must be defined before parsing spec.\n        const musicFont = Tables.currentMusicFont();\n        this.point = musicFont.lookupMetric('digits.point') || Tables.NOTATION_FONT_SCALE;\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.topLine = 2 + fontLineShift;\n        this.bottomLine = 4 + fontLineShift;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setTimeSig(timeSpec);\n        this.setPadding(padding);\n    }\n    /**\n     * Return TimeSignatureInfo given a string, consisting of line (number),\n     * num (boolean: same as TimeSignature.getIsNumeric()), and glyph (a Glyph or\n     * TimeSignatureGlyph object).\n     */\n    parseTimeSpec(timeSpec) {\n        var _a, _b;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const { line, code } = TimeSignature.glyphs[timeSpec];\n            return {\n                line,\n                num: false,\n                glyph: new Glyph(code, Tables.NOTATION_FONT_SCALE),\n            };\n        }\n        if (this.validate_args) {\n            assertIsValidTimeSig(timeSpec);\n        }\n        const parts = timeSpec.split('/');\n        return {\n            line: 0,\n            num: true,\n            glyph: this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : ''),\n        };\n    }\n    /**\n     * Returns a new TimeSignatureGlyph (a Glyph subclass that knows how to draw both\n     * top and bottom digits along with plus signs etc.)\n     */\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        // note that 'code' is ignored by TimeSignatureGlyph when rendering.\n        return new TimeSignatureGlyph(this, topDigits, botDigits, 'timeSig0', this.point);\n    }\n    /**\n     * Returns {line, num (=getIsNumeric), glyph} --\n     * but these can also be accessed directly w/ getters and setters.\n     */\n    getInfo() {\n        const { line, is_numeric, glyph } = this;\n        return { line, num: is_numeric, glyph };\n    }\n    /**\n     * Set a new time signature specification without changing customPadding, etc.\n     *\n     * The getter for this is `getTimeSpec` not `getTimeSig`.\n     */\n    setTimeSig(timeSpec) {\n        this.timeSpec = timeSpec;\n        const info = this.parseTimeSpec(timeSpec);\n        this.setGlyph(info.glyph);\n        this.is_numeric = info.num;\n        this.line = info.line;\n        return this;\n    }\n    /**\n     * Return the timeSpec (such as '4/4' or 'C|' or even '2/4+3/8') of the TimeSignature\n     */\n    getTimeSpec() {\n        return this.timeSpec;\n    }\n    /**\n     * Return the staff line that the TimeSignature sits on.  Generally 0 for numerator/\n     * denominator time signatures such as 3/4 and 2 for cut/common.\n     */\n    getLine() {\n        return this.line;\n    }\n    /**\n     * Set the line number that the TimeSignature sits on.  Half-values are acceptable\n     * for spaces, etc. Can be altered, for instance, for signatures that sit above the\n     * staff in large orchestral scores.\n     */\n    setLine(line) {\n        this.line = line;\n    }\n    /**\n     * Get the Glyph object used to create the time signature.  Numeric time signatures\n     * such as 3/8 have a composite Glyph stored as a single Glyph object.\n     */\n    getGlyph() {\n        return this.glyph;\n    }\n    /**\n     * Set the Glyph object used to draw the time signature, and update the width of the\n     * TimeSignature to match.  The Glyph must define width in its metrics.\n     */\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(defined(this.glyph.getMetrics().width));\n    }\n    /**\n     * Return a boolean on whether this TimeSignature is drawn with one or more numbers\n     * (such as 4/4) or not (as in cut time).\n     */\n    getIsNumeric() {\n        return this.is_numeric;\n    }\n    /**\n     * Set whether this TimeSignature is drawn with one or more numbers.\n     */\n    setIsNumeric(isNumeric) {\n        this.is_numeric = isNumeric;\n    }\n    /**\n     * Draw the time signature on a Stave using its RenderContext.  Both setStave\n     * and setContext must already be run.\n     */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        this.glyph.setStave(stave);\n        this.glyph.setContext(ctx);\n        this.placeGlyphOnLine(this.glyph, stave, this.line);\n        this.glyph.renderToStave(this.x);\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { KeySignature } from './keysignature';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { Volta } from './stavevolta';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { RuntimeError } from './util';\n// Used by Stave.format() to sort the modifiers at the beginning and end of a stave.\n// The keys (computed property names) match the CATEGORY property in the\n// Barline, Clef, KeySignature, TimeSignature classes.\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nclass Stave extends Element {\n    static get CATEGORY() {\n        return Category.Stave;\n    }\n    // This is the sum of the padding that normally goes on left + right of a stave during\n    // drawing. Used to size staves correctly with content width.\n    static get defaultPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.padding') + musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    // Right padding, used by system if startX is already determined.\n    static get rightPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    constructor(x, y, width, options) {\n        super();\n        // Initialized by the constructor via this.resetLines().\n        this.height = 0;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.start_x = x + 5;\n        this.end_x = x + width;\n        this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.resetFont();\n        this.options = Object.assign({ vertical_bar_width: 10, num_lines: 5, fill_style: '#999999', left_bar: true, right_bar: true, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, space_above_staff_ln: 4, space_below_staff_ln: 4, top_text_position: 1, bottom_text_position: 4, line_config: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 1.4 };\n        this.resetLines();\n        // beg bar\n        this.addModifier(new Barline(this.options.left_bar ? BarlineType.SINGLE : BarlineType.NONE));\n        // end bar\n        this.addEndModifier(new Barline(this.options.right_bar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    /** Set default style for ledger lines. */\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    /** Get default style for ledger lines. */\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacing_between_lines_px * spacing;\n    }\n    resetLines() {\n        this.options.line_config = [];\n        for (let i = 0; i < this.options.num_lines; i++) {\n            this.options.line_config.push({ visible: true });\n        }\n        this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n        this.options.bottom_text_position = this.options.num_lines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.start_x = x;\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.start_x;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.end_x;\n    }\n    getTieStartX() {\n        return this.start_x;\n    }\n    getTieEndX() {\n        return this.end_x;\n    }\n    getX() {\n        return this.x;\n    }\n    getNumLines() {\n        return this.options.num_lines;\n    }\n    setNumLines(n) {\n        this.options.num_lines = n;\n        this.resetLines();\n        return this;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    getY() {\n        return this.y;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0) - Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    getBottomLineBottomY() {\n        return this.getYForLine(this.getNumLines() - 1) + Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.start_x += shift;\n        this.end_x += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.end_x = this.x + width;\n        // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n        // this.modifiers[1].setX(this.end_x);\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    getStyle() {\n        return Object.assign({ fillStyle: this.options.fill_style, strokeStyle: this.options.fill_style, lineWidth: Tables.STAVE_LINE_THICKNESS }, super.getStyle());\n    }\n    /**\n     * Set the measure number of this Stave.\n     */\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    /**\n     * Return the measure number of this Stave.\n     */\n    getMeasure() {\n        return this.measure;\n    }\n    /**\n     * Gets the pixels to shift from the beginning of the stave\n     * following the modifier at the provided index\n     * @param  {Number} index The index from which to determine the shift\n     * @return {Number}       The amount of pixels shifted\n     */\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let start_x = this.start_x - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n            start_x -= begBarline.getWidth();\n        }\n        return start_x;\n    }\n    /** Coda & Segno Symbol functions */\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    // Volta functions\n    setVoltaType(type, number_t, y) {\n        this.modifiers.push(new Volta(type, number_t, this.x, y));\n        return this;\n    }\n    // Section functions\n    setSection(section, y, xOffset = 0, fontSize, drawRect = true) {\n        const staveSection = new StaveSection(section, this.x + xOffset, y, drawRect);\n        if (fontSize)\n            staveSection.setFontSize(fontSize);\n        this.modifiers.push(staveSection);\n        return this;\n    }\n    // Tempo functions\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    // Text functions\n    setText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacing_between_lines_px;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n        return score_bottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.num_lines);\n    }\n    // This returns\n    /** @returns the y for the *center* of a staff line */\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        // Does the reverse of getYForLine - somewhat dumb and just calls\n        // getYForLine until the right value is reaches\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.top_text_position);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottom_text_position + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    // This method adds a stave modifier to the stave. Note that the first two\n    // modifiers (BarLines) are automatically added upon construction.\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    // Bar Line functions\n    setBegBarType(type) {\n        // Only valid bar types at beginning of stave is none, single or begin repeat\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        // Repeat end not valid at end of stave\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a key signature to the stave.\n     *\n     * Example:\n     * `stave.addKeySignature('Db');`\n     * @param keySpec new key specification `[A-G][b|#]?`\n     * @param cancelKeySpec\n     * @param position\n     * @returns\n     */\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    /**\n     * Add a clef to the stave.\n     *\n     * Example:\n     *\n     * stave.addClef('treble')\n     * @param clef clef (treble|bass|...) see {@link Clef.types}\n     * @param size\n     * @param annotation\n     * @param position\n     * @returns\n     */\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a time signature to the stave\n     *\n     * Example:\n     *\n     * `stave.addTimeSignature('4/4');`\n     * @param timeSpec time signature specification `(C\\||C|\\d\\/\\d)`\n     * @param customPadding\n     * @param position\n     * @returns\n     */\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    // Deprecated\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    /**\n     * @param position\n     * @param category\n     * @returns array of StaveModifiers that match the provided position and category.\n     */\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            // A category was provided.\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            // A position was provided.\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            // Both position and category were provided!\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    /**\n     * Use the modifier's `getCategory()` as a key for the `order` array.\n     * The retrieved value is used to sort modifiers from left to right (0 to to 3).\n     */\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.start_x = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = layoutMetrics.xMax || 0;\n                    widths.paddingRight = layoutMetrics.paddingRight || 0;\n                }\n                widths.left = -layoutMetrics.xMin || 0;\n                widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    /**\n     * All drawing functions below need the context to be set.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.applyStyle();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const num_lines = this.options.num_lines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        // Render lines\n        for (let line = 0; line < num_lines; line++) {\n            y = this.getYForLine(line);\n            if (this.options.line_config[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + width, y);\n                ctx.stroke();\n            }\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n        // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            // Only draw modifier if it has a draw function\n            if (typeof modifier.draw === 'function') {\n                modifier.applyStyle(ctx);\n                modifier.draw(this, this.getModifierXShift(i));\n                modifier.restoreStyle(ctx);\n            }\n        }\n        // Render measure numbers\n        if (this.measure > 0) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n            ctx.restore();\n        }\n        return this;\n    }\n    getVerticalBarWidth() {\n        return this.options.vertical_bar_width;\n    }\n    /**\n     * Get the current configuration for the Stave.\n     * @return {Array} An array of configuration objects.\n     */\n    getConfigForLines() {\n        return this.options.line_config;\n    }\n    /**\n     * Configure properties of the lines in the Stave\n     * @param line_number The index of the line to configure.\n     * @param line_config An configuration object for the specified line.\n     * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n     *   range of the number of lines specified in the constructor.\n     */\n    setConfigForLine(line_number, line_config) {\n        if (line_number >= this.options.num_lines || line_number < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (line_config.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof line_config.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.line_config[line_number] = line_config;\n        return this;\n    }\n    /**\n     * Set the staff line configuration array for all of the lines at once.\n     * @param lines_configuration An array of line configuration objects.  These objects\n     *   are of the same format as the single one passed in to setLineConfiguration().\n     *   The caller can set null for any line config entry if it is desired that the default be used\n     * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n     *   exactly the same number of elements as the num_lines configuration object set in\n     *   the constructor.\n     */\n    setConfigForLines(lines_configuration) {\n        if (lines_configuration.length !== this.options.num_lines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        // Make sure the defaults are present in case an incomplete set of\n        //  configuration options were supplied.\n        // eslint-disable-next-line\n        for (const line_config in lines_configuration) {\n            // Allow '{}' to be used if the caller just wants the default for a particular node.\n            if (lines_configuration[line_config].visible == undefined) {\n                lines_configuration[line_config] = this.options.line_config[line_config];\n            }\n            this.options.line_config[line_config] = Object.assign(Object.assign({}, this.options.line_config[line_config]), lines_configuration[line_config]);\n        }\n        this.options.line_config = lines_configuration;\n        return this;\n    }\n    static formatBegModifiers(staves) {\n        const adjustCategoryStartX = (category) => {\n            let minStartX = 0;\n            // Calculate min start X for the category\n            staves.forEach((stave) => {\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                // Consider only the first instance\n                if (modifiers.length > 0 && modifiers[0].getX() > minStartX)\n                    minStartX = modifiers[0].getX();\n            });\n            let adjustX = 0;\n            staves.forEach((stave) => {\n                adjustX = 0;\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                // Calculate adjustement required for the stave\n                modifiers.forEach((modifier) => {\n                    if (minStartX - modifier.getX() > adjustX)\n                        adjustX = minStartX - modifier.getX();\n                });\n                const allModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n                let bAdjust = false;\n                // Apply adjustment to all the modifiers in and beyond the category\n                allModifiers.forEach((modifier) => {\n                    if (modifier.getCategory() === category)\n                        bAdjust = true;\n                    if (bAdjust && adjustX > 0)\n                        modifier.setX(modifier.getX() + adjustX);\n                });\n                // Apply adjustment also to note start.\n                stave.setNoteStartX(stave.getNoteStartX() + adjustX);\n            });\n        };\n        // Make sure that staves are formatted\n        staves.forEach((stave) => {\n            if (!stave.formatted)\n                stave.format();\n        });\n        // Align Clefs\n        adjustCategoryStartX(Category.Clef);\n        // Align key signatures\n        adjustCategoryStartX(Category.KeySignature);\n        // Align time signatures\n        adjustCategoryStartX(Category.TimeSignature);\n        let maxX = 0;\n        // align note start\n        staves.forEach((stave) => {\n            if (stave.getNoteStartX() > maxX)\n                maxX = stave.getNoteStartX();\n        });\n        staves.forEach((stave) => {\n            stave.setNoteStartX(maxX);\n        });\n        maxX = 0;\n        // align REPEAT_BEGIN\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    if (modifier.getX() > maxX)\n                        maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    modifier.setX(maxX);\n            });\n        });\n    }\n}\nStave.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 8,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nexport { Stave };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let x_shift = 3;\n    let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    const thickLineOffset = 2; // For aesthetics\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        x_shift = -5; // Flips the side of the thin line\n        variableWidth = 3;\n    }\n    // Thin line\n    ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n/** StaveConnector implements the connector lines between staves of a system. */\nclass StaveConnector extends Element {\n    static get CATEGORY() {\n        return Category.StaveConnector;\n    }\n    constructor(top_stave, bottom_stave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.width = 3;\n        this.top_stave = top_stave;\n        this.bottom_stave = bottom_stave;\n        this.type = StaveConnector.type.DOUBLE;\n        this.resetFont();\n        // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n        // 2. Offset BRACE type not to overlap with another StaveConnector\n        this.x_shift = 0;\n        this.texts = [];\n    }\n    /**\n     * Set type.\n     * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n     */\n    setType(type) {\n        const newType = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        // Be certain that the type is a valid type:\n        if (Object.values(StaveConnector.type).includes(newType)) {\n            this.type = newType;\n        }\n        return this;\n    }\n    /**\n     * Get type.\n     * @returns number {@link StaveConnector.type}\n     */\n    getType() {\n        return this.type;\n    }\n    /** Set optional associated Text. */\n    setText(text, options = {}) {\n        this.texts.push({\n            content: text,\n            options: Object.assign({ shift_x: 0, shift_y: 0 }, options),\n        });\n        return this;\n    }\n    setXShift(x_shift) {\n        if (typeof x_shift !== 'number') {\n            throw new RuntimeError('InvalidType', 'x_shift must be a Number');\n        }\n        this.x_shift = x_shift;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render connector and associated text. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.top_stave.getYForLine(0);\n        let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n        let width = this.width;\n        let topX = this.top_stave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.top_stave.getX() + this.top_stave.getWidth();\n        }\n        let attachment_height = botY - topY;\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= this.width + 2;\n                topY -= this.thickness;\n                attachment_height += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                // May need additional code to draw brace\n                const x1 = this.top_stave.getX() - 2 + this.x_shift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachment_height / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachment_height;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachment_height;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachment_height;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachment_height;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachment_height;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachment_height;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachment_height = botY - topY;\n                Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n                Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n                topX -= this.width + 2;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachment_height -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachment_height);\n        }\n        // If the connector is a thin double barline, draw the paralell line\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachment_height);\n        }\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        // Add stave connector text\n        for (let i = 0; i < this.texts.length; i++) {\n            const text = this.texts[i];\n            const text_width = ctx.measureText('' + text.content).width;\n            const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n            const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n            ctx.fillText('' + text.content, x, y + 4);\n        }\n        ctx.restore();\n    }\n}\nStaveConnector.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n/**\n * SINGLE_LEFT and SINGLE are the same value for compatibility\n * with older versions of vexflow which didn't have right sided\n * stave connectors.\n */\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\n/**\n * Connector type:\n * * \"singleRight\"\n * * \"singleLeft\"\n * * \"single\"\n * * \"double\"\n * * \"brace\"\n * * \"bracket\"\n * * \"boldDoubleLeft\"\n * * \"boldDoubleRight\"\n * * \"thinDouble\"\n * * \"none\"\n */\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\nexport { StaveConnector };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Beam } from './beam';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { ModifierContext } from './modifiercontext';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { isNote, isStaveNote } from './typeguard';\nimport { defined, log, midLine, RuntimeError, sumArray } from './util';\nimport { Voice } from './voice';\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts(voices, makeContext, addToContext) {\n    if (voices.length == 0)\n        return {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n    // Initialize tick maps.\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach((voice, voiceIndex) => {\n        // Use resolution multiplier as denominator so that no additional expansion\n        // of fractional tick values is needed.\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            // If we have no tick context for this tick, create one.\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                // Maintain a list of unique integerTicks.\n                tickList.push(integerTicks);\n            }\n            // Add this tickable to the TickContext.\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('Vex.Flow.Formatter', args);\n}\n/**\n * Get the rest line number of the next non-rest note(s).\n * @param notes array of Notes\n * @param currRestLine\n * @param currNoteIndex current note index\n * @param compare if true, return the midpoint between the current rest line and the next rest line\n * @returns a line number, which determines the vertical position of a rest.\n */\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    // If no valid next note group, nextRestLine is same as current.\n    let nextRestLine = currRestLine;\n    // Start with the next note and keep going until we find a valid non-rest note group.\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    // Locate the mid point between two lines.\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nclass Formatter {\n    /**\n     * Helper function to layout \"notes\" one after the other without\n     * regard for proportions. Useful for tests and debugging.\n     */\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tick = new TickContext().addTickable(note).preFormat();\n            const metrics = tick.getMetrics();\n            tick.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    /** Helper function to plot formatter debug info. */\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        options = Object.assign({ stavePadding: Tables.currentMusicFont().lookupMetric('stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    /**\n     * Helper function to format and draw a single voice. Returns a bounding\n     * box for the notation.\n     * @param ctx  the rendering context\n     * @param stave the stave to which to draw (`Stave` or `TabStave`)\n     * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n     * @param params one of below:\n     *    * Setting `autobeam` only `(context, stave, notes, true)` or\n     *      `(ctx, stave, notes, {autobeam: true})`\n     *    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n     *    * Setting both a struct is needed `(context, stave, notes, {\n     *      autobeam: true, align_rests: true})`\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            auto_beam: false,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.auto_beam = params;\n        }\n        // Start by creating a voice and adding all the notes to it.\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Then create beams, if requested.\n        const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n        // Instantiate a `Formatter` and format the notes.\n        new Formatter()\n            .joinVoices([voice]) // , { align_rests: options.align_rests })\n            .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n        // Render the voice and beams to the stave.\n        voice.setStave(stave).draw(ctx, stave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Return the bounding box of the voice.\n        return voice.getBoundingBox();\n    }\n    /**\n     * Helper function to format and draw aligned tab and stave notes in two\n     * separate staves.\n     * @param ctx the rendering context\n     * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n     * @param stave a `Stave` instance on which to render `Note`s.\n     * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n     * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n     * @param autobeam automatically generate beams.\n     * @param params a configuration object:\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n        let opts = {\n            auto_beam: autobeam,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.auto_beam = params;\n        }\n        // Create a `4/4` voice for `notes`.\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Create a `4/4` voice for `tabnotes`.\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        // Then create beams, if requested.\n        const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n        // Instantiate a `Formatter` and align tab and stave notes.\n        new Formatter()\n            .joinVoices([notevoice]) // , { align_rests: opts.align_rests })\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n        // Render voices and beams to staves.\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Draw a connector between tab and note staves.\n        new StaveConnector(stave, tabstave).setContext(ctx).draw();\n    }\n    /**\n     * Automatically set the vertical position of rests based on previous/next note positions.\n     * @param tickables an array of Tickables.\n     * @param alignAllNotes If `false`, only align rests that are within a group of beamed notes.\n     * @param alignTuplets If `false`, ignores tuplets.\n     */\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                // If activated rests not on default can be rendered as specified.\n                const position = currTickable.getGlyphProps().position.toUpperCase();\n                if (position !== 'R/4' && position !== 'B/4') {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    // Align rests with previous/next notes.\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        // If previous tickable is a rest, use its line number.\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                // Get the rest line for next valid non-rest note group.\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: Tables.SOFTMAX_FACTOR, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        // Minimum width required to render all the notes in the voices.\n        this.minTotalWidth = 0;\n        // This is set to `true` after `minTotalWidth` is calculated.\n        this.hasMinTotalWidth = false;\n        // Arrays of tick and modifier contexts.\n        this.tickContexts = {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n        this.modifierContexts = [];\n        // Gaps between contexts, for free movement of notes post\n        // formatting.\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    /**\n     * Find all the rests in each of the `voices` and align them to neighboring notes.\n     *\n     * @param voices\n     * @param alignAllNotes If `false`, only align rests within beamed groups of notes. If `true`, align all rests.\n     */\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    /**\n     * Estimate the width required to render 'voices'.  This is done by:\n     * 1. Sum the widths of all the tick contexts\n     * 2. Estimate the padding.\n     * The latter is done by calculating the padding 3 different ways, and taking the\n     * greatest value:\n     * 1. the padding required for unaligned notes in different voices\n     * 2. the padding based on the stddev of the tickable widths\n     * 3. the padding based on the stddev of the tickable durations.\n     *\n     * The last 2 quantities estimate a 'width entropy', where notes might need more\n     * room than the proportional formatting gives them.  A measure of all same duration\n     * and width will need no extra padding, and all these quantities will be\n     * zero in that case.\n     *\n     * Note: joinVoices has to be called before calling preCalculateMinTotalWidth.\n     *\n     * @param voices the voices that contain the notes\n     * @returns the estimated width in pixels\n     */\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Tables.currentMusicFont().lookupMetric('stave.unalignedNotePadding');\n        // Calculate additional padding based on 3 methods:\n        // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        // Cache results.\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        // Create tick contexts.\n        if (!voices) {\n            throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n        }\n        this.createTickContexts(voices);\n        // eslint-disable-next-line\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        // Go through each tick context and calculate total width,\n        // and also accumulate values used in padding hints\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            // If this TC doesn't have all the voices on it, it's unaligned.\n            // so increment the unaligned padding accumulator\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            // Calculate the 'width entropy' over all the Tickables.\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        // Find max of 3 methods pad the width with that\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    /**\n     * Get minimum width required to render all voices. Either `format` or\n     * `preCalculateMinTotalWidth` must be called before this method.\n     */\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    /** Calculate the resolution multiplier for `voices`. */\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    /** Create a `ModifierContext` for each tick in `voices`. */\n    createModifierContexts(voices) {\n        if (voices.length == 0)\n            return;\n        const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n        // Initialize tick maps.\n        const tickToContextMap = new Map();\n        const contexts = [];\n        // For each voice, extract notes and create a context for every\n        // new tick that hasn't been seen before.\n        voices.forEach((voice) => {\n            // Use resolution multiplier as denominator so that no additional expansion\n            // of fractional tick values is needed.\n            const ticksUsed = new Fraction(0, resolutionMultiplier);\n            voice.getTickables().forEach((tickable) => {\n                const integerTicks = ticksUsed.numerator;\n                let staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                // If we have no tick context for this tick, create one.\n                if (!staveTickToContextMap) {\n                    tickToContextMap.set(tickable.getStave(), {});\n                    staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                }\n                if (!(staveTickToContextMap ? staveTickToContextMap[integerTicks] : undefined)) {\n                    const newContext = new ModifierContext();\n                    contexts.push(newContext);\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    staveTickToContextMap[integerTicks] = newContext;\n                }\n                // Add this tickable to the TickContext.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tickable.addToModifierContext(staveTickToContextMap[integerTicks]);\n                ticksUsed.add(tickable.getTicks());\n            });\n        });\n        this.modifierContexts.push({\n            map: tickToContextMap,\n            array: contexts,\n            resolutionMultiplier,\n        });\n    }\n    /**\n     * Create a `TickContext` for each tick in `voices`. Also calculate the\n     * total number of ticks in voices.\n     */\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    /**\n     * Get the AlignmentContexts of TickContexts that were created by createTickContexts.\n     * Returns undefined if createTickContexts has not yet been run.\n     */\n    getTickContexts() {\n        return this.tickContexts;\n    }\n    /**\n     * This is the core formatter logic. Format voices and justify them\n     * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n     * that can't retrieve widths without a canvas. This method sets the `x` positions\n     * of all the tickables/notes in the formatter.\n     */\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        // Initialize context maps.\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        // Reset loss history for evaluator.\n        this.lossHistory = [];\n        // If voices and a stave were provided, set the Stave for each voice\n        // and preFormat to apply Y values to the notes;\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        // Now distribute the ticks to each tick context, and assign them their\n        // own X positions.\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        // Pass 1: Give each note maximum width requested by context.\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            // Make sure that all tickables in this context have calculated their\n            // space requirements.\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            // Calculate shift for the next tick.\n            shift = width - metrics.totalLeftPx;\n        });\n        // Use softmax based on all notes across all staves. (options.globalSoftmax)\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        // No justification needed. End formatting.\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        // Start justification. Subtract the right extra pixels of the final context because the formatter\n        // justifies based on the context's X position, which is the left-most part of the note head.\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n        // the softmax of the ticks.\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    // Go through each tickable and search backwards for another tickable\n                    // in the same voice. If found, use that duration (ticks) to calculate\n                    // the expected distance.\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        // Look for matching voices between tick contexts.\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            // Found matching voices, get largest duration\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                // Calculate the limits of the shift based on modifiers, etc.\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                // Don't allow shifting if notes in the same voice can collide\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n                            // so that two different tick contexts don't align across staves.\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            // Calculate the expected distance of the current context from the last matching tickable. The\n                            // distance is scaled down by the softmax for the voice.\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            // Distribute ticks to the contexts based on the calculated distance error.\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                // Move center aligned tickables to middle\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const musicFont = Tables.currentMusicFont();\n        const configMinPadding = musicFont.lookupMetric('stave.endPaddingMin');\n        const configMaxPadding = musicFont.lookupMetric('stave.endPaddingMax');\n        const leftPadding = musicFont.lookupMetric('stave.padding');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        // Just one context. Done formatting.\n        if (contextList.length === 1)\n            return 0;\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        // right justify to either the configured padding, or the min distance between notes, whichever is greatest.\n        // This * 2 keeps the existing formatting unless there is 'a lot' of extra whitespace, which won't break\n        // existing visual regression tests.\n        const paddingMaxCalc = (curTargetWidth) => {\n            let lastTickablePadding = 0;\n            const lastTickable = lastContext && lastContext.getMaxTickable();\n            if (lastTickable) {\n                const voice = lastTickable.getVoice();\n                // If the number of actual ticks in the measure <> configured ticks, right-justify\n                // because the softmax won't yield the correct value\n                if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n                    return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n                }\n                const tickWidth = lastTickable.getWidth();\n                lastTickablePadding =\n                    voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n            }\n            return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n        };\n        let paddingMax = paddingMaxCalc(targetWidth);\n        let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        // Adjust justification width until the right margin is as close as possible to the calculated padding,\n        // without going over\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            paddingMax = paddingMaxCalc(targetWidth);\n            paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    /** Calculate the total cost of this formatting decision. */\n    evaluate() {\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        // Calculate available slack per tick context. This works out how much freedom\n        // to move a context has in either direction, without affecting other notes.\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            // Calculate X position of right edge of previous note\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            // Calculate X position of left edge of current note\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            // Tell the tick contexts how much they can reposition themselves.\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        // Calculate mean distance in each voice for each duration type, then calculate\n        // how far each note is from the mean.\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1 };\n            }\n            else {\n                stats.count += 1;\n                stats.mean = (stats.mean + space) / 2;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        // Calculate how much each note deviates from the mean. Loss function is square\n        // root of the sum of squared deviations.\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    /**\n     * Run a single iteration of rejustification. At a high level, this method calculates\n     * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n     * attempt to reduce the cost. You can call this method multiple times until it finds\n     * and oscillates around a global minimum.\n     * @param options[alpha] the \"learning rate\" for the formatter. It determines how much of a shift\n     * the formatter should make based on its cost function.\n     */\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n        // on adjacent tickcontexts.\n        function move(current, shift, prev, next) {\n            current.setX(current.getX() + shift);\n            current.getFormatterMetrics().freedom.left += shift;\n            current.getFormatterMetrics().freedom.right -= shift;\n            if (prev)\n                prev.getFormatterMetrics().freedom.right += shift;\n            if (next)\n                next.getFormatterMetrics().freedom.left -= shift;\n        }\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            move(context, shift, prevContext, nextContext);\n            const cost = -sumArray(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    /**\n     * This is the top-level call for all formatting logic completed\n     * after `x` *and* `y` values have been computed for the notes\n     * in the voices.\n     */\n    postFormat() {\n        this.modifierContexts.forEach((modifierContexts) => {\n            modifierContexts.array.forEach((mc) => mc.postFormat());\n        });\n        this.tickContexts.list.forEach((tick) => {\n            this.tickContexts.map[tick].postFormat();\n        });\n        return this;\n    }\n    /**\n     * Take all `voices` and create `ModifierContext`s out of them. This tells\n     * the formatters that the voices belong on a single stave.\n     */\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    /**\n     * Align rests in voices, justify the contexts, and position the notes\n     * so voices are aligned and ready to render onto the stave. This method\n     * mutates the `x` positions of all tickables in `voices`.\n     *\n     * Voices are full justified to fit in `justifyWidth` pixels.\n     *\n     * Set `options.context` to the rendering context. Set `options.align_rests`\n     * to true to enable rest alignment.\n     */\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ align_rests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.align_rests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        // Only postFormat if a stave was supplied for y value formatting\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    // This method is just like `format` except that the `justifyWidth` is inferred from the `stave`.\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        // eslint-disable-next-line\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nFormatter.DEBUG = false;\nexport { Formatter };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var TupletLocation;\n(function (TupletLocation) {\n    TupletLocation[TupletLocation[\"BOTTOM\"] = -1] = \"BOTTOM\";\n    TupletLocation[TupletLocation[\"TOP\"] = 1] = \"TOP\";\n})(TupletLocation || (TupletLocation = {}));\nexport class Tuplet extends Element {\n    static get CATEGORY() {\n        return Category.Tuplet;\n    }\n    static get LOCATION_TOP() {\n        return TupletLocation.TOP;\n    }\n    static get LOCATION_BOTTOM() {\n        return TupletLocation.BOTTOM;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    static get metrics() {\n        const tupletMetrics = Tables.currentMusicFont().getMetrics().tuplet;\n        if (!tupletMetrics)\n            throw new RuntimeError('BadMetrics', `tuplet missing`);\n        return tupletMetrics;\n    }\n    constructor(notes, options = {}) {\n        super();\n        this.numerator_glyphs = [];\n        this.denom_glyphs = [];\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.options = options;\n        this.notes = notes;\n        this.num_notes = this.options.num_notes != undefined ? this.options.num_notes : notes.length;\n        // We accept beats_occupied, but warn that it's deprecated:\n        // the preferred property name is now notes_occupied.\n        if (this.options.beats_occupied) {\n            this.beatsOccupiedDeprecationWarning();\n        }\n        this.notes_occupied = this.options.notes_occupied || this.options.beats_occupied || 2;\n        if (this.options.bracketed != undefined) {\n            this.bracketed = this.options.bracketed;\n        }\n        else {\n            this.bracketed = notes.some((note) => !note.hasBeam());\n        }\n        this.ratioed =\n            this.options.ratioed != undefined ? this.options.ratioed : Math.abs(this.notes_occupied - this.num_notes) > 1;\n        this.point = (Tables.NOTATION_FONT_SCALE * 3) / 5;\n        this.y_pos = 16;\n        this.x_pos = 100;\n        this.width = 200;\n        this.setTupletLocation(this.options.location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    /**\n     * Set whether or not the bracket is drawn.\n     */\n    setBracketed(bracketed) {\n        this.bracketed = !!bracketed;\n        return this;\n    }\n    /**\n     * Set whether or not the ratio is shown.\n     */\n    setRatioed(ratioed) {\n        this.ratioed = !!ratioed;\n        return this;\n    }\n    /**\n     * Set the tuplet indicator to be displayed either on the top or bottom of the stave.\n     */\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            // eslint-disable-next-line\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.num_notes;\n    }\n    beatsOccupiedDeprecationWarning() {\n        // eslint-disable-next-line\n        console.warn('beats_occupied has been deprecated as an option for tuplets. Please use notes_occupied instead.', 'Calls to getBeatsOccupied / setBeatsOccupied should now be routed to getNotesOccupied / setNotesOccupied.', 'The old methods will be removed in VexFlow 5.0.');\n    }\n    getBeatsOccupied() {\n        this.beatsOccupiedDeprecationWarning();\n        return this.getNotesOccupied();\n    }\n    setBeatsOccupied(beats) {\n        this.beatsOccupiedDeprecationWarning();\n        return this.setNotesOccupied(beats);\n    }\n    getNotesOccupied() {\n        return this.notes_occupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.notes_occupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        this.numerator_glyphs = [];\n        let n = this.num_notes;\n        while (n >= 1) {\n            this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n        this.denom_glyphs = [];\n        n = this.notes_occupied;\n        while (n >= 1) {\n            this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n    }\n    // determine how many tuplets are nested within this tuplet\n    // on the same side (above/below), to calculate a y\n    // offset for this tuplet:\n    getNestedTupletCount() {\n        const location = this.location;\n        const first_note = this.notes[0];\n        let maxTupletCount = countTuplets(first_note, location);\n        let minTupletCount = countTuplets(first_note, location);\n        // Count the tuplets that are on the same side (above/below)\n        // as this tuplet:\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    // determine the y position of the tuplet:\n    getYPosition() {\n        // offset the tuplet for any nested tuplets between\n        // it and the notes:\n        const nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n        // offset the tuplet for any manual y_offset:\n        const y_offset = this.options.y_offset || 0;\n        // now iterate through the notes and find our highest\n        // or lowest locations, to form a base y_pos\n        const first_note = this.notes[0];\n        let y_pos;\n        if (this.location === Tuplet.LOCATION_TOP) {\n            y_pos = first_note.checkStave().getYForLine(0) - Tuplet.metrics.topModifierOffset;\n            // check modifiers above note to see if they will collide with tuplet beam\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().top_text_line);\n                }\n                const modY = note.getYForTopText(modLines) - Tuplet.metrics.noteHeadOffset;\n                if (note.hasStem() || note.isRest()) {\n                    const top_y = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tuplet.metrics.stemOffset\n                        : note.getStemExtents().baseY - Tuplet.metrics.noteHeadOffset;\n                    y_pos = Math.min(top_y, y_pos);\n                    if (modLines > 0) {\n                        y_pos = Math.min(modY, y_pos);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = Tuplet.metrics.bottomLine; // tuplet default on line 4\n            // check modifiers below note to see if they will collide with tuplet beam\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().text_line + 1);\n                }\n            });\n            y_pos = first_note.checkStave().getYForLine(lineCheck) + Tuplet.metrics.noteHeadOffset;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + Tuplet.metrics.noteHeadOffset\n                        : this.notes[i].getStemExtents().topY + Tuplet.metrics.stemOffset;\n                    if (bottom_y > y_pos) {\n                        y_pos = bottom_y;\n                    }\n                }\n            }\n        }\n        return y_pos + nested_tuplet_y_offset + y_offset;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        // determine x value of left bound of tuplet\n        const first_note = this.notes[0];\n        const last_note = this.notes[this.notes.length - 1];\n        if (!this.bracketed) {\n            this.x_pos = first_note.getStemX();\n            this.width = last_note.getStemX() - this.x_pos;\n        }\n        else {\n            this.x_pos = first_note.getTieLeftX() - 5;\n            this.width = last_note.getTieRightX() - this.x_pos + 5;\n        }\n        // determine y value for tuplet\n        this.y_pos = this.getYPosition();\n        const addGlyphWidth = (width, glyph) => width + defined(glyph.getMetrics().width);\n        // calculate total width of tuplet notation\n        let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n        if (this.ratioed) {\n            width = this.denom_glyphs.reduce(addGlyphWidth, width);\n            width += this.point * 0.32;\n        }\n        const notation_center_x = this.x_pos + this.width / 2;\n        const notation_start_x = notation_center_x - width / 2;\n        // draw bracket if the tuplet is not beamed\n        if (this.bracketed) {\n            const line_width = this.width / 2 - width / 2 - 5;\n            // only draw the bracket if it has positive length\n            if (line_width > 0) {\n                ctx.fillRect(this.x_pos, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n                ctx.fillRect(this.x_pos + this.width, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n            }\n        }\n        // draw numerator glyphs\n        const shiftY = Tables.currentMusicFont().lookupMetric('digits.shiftY', 0);\n        let x_offset = 0;\n        this.numerator_glyphs.forEach((glyph) => {\n            glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n            x_offset += defined(glyph.getMetrics().width);\n        });\n        // display colon and denominator if the ratio is to be shown\n        if (this.ratioed) {\n            const colon_x = notation_start_x + x_offset + this.point * 0.16;\n            const colon_radius = this.point * 0.06;\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n            x_offset += this.point * 0.32;\n            this.denom_glyphs.forEach((glyph) => {\n                glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n                x_offset += defined(glyph.getMetrics().width);\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TupletLocation } from './tuplet';\nimport { Category, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n    static get CATEGORY() {\n        return Category.Beam;\n    }\n    /** Get the direction of the beam */\n    getStemDirection() {\n        return this.stem_direction;\n    }\n    /**\n     * Get the default beam groups for a provided time signature.\n     * Attempt to guess if the time signature is not found in table.\n     * Currently this is fairly naive.\n     */\n    static getDefaultBeamGroups(time_sig) {\n        if (!time_sig || time_sig === 'c') {\n            time_sig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[time_sig];\n        if (groups === undefined) {\n            // If no beam groups found, naively determine\n            // the beam groupings from the time signature\n            const beatTotal = parseInt(time_sig.split('/')[0], 10);\n            const beatValue = parseInt(time_sig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    /**\n     * A helper function to automatically build basic beams for a voice. For more\n     * complex auto-beaming use `Beam.generateBeams()`.\n     * @param voice the voice to generate the beams for\n     * @param stem_direction a stem direction to apply to the entire voice\n     * @param groups an array of `Fraction` representing beat groupings for the beam\n     */\n    static applyAndGetBeams(voice, stem_direction, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stem_direction });\n    }\n    /**\n     * A helper function to autimatically build beams for a voice with\n     * configuration options.\n     *\n     * Example configuration object:\n     *\n     * ```\n     * config = {\n     *   groups: [new Vex.Flow.Fraction(2, 8)],\n     *   stem_direction: -1,\n     *   beam_rests: true,\n     *   beam_middle_only: true,\n     *   show_stemlets: false\n     * };\n     * ```\n     * @param notes an array of notes to create the beams for\n     * @param config the configuration object\n     * @param config.stem_direction set to apply the same direction to all notes\n     * @param config.beam_rests set to `true` to include rests in the beams\n     * @param config.beam_middle_only set to `true` to only beam rests in the middle of the beat\n     * @param config.show_stemlets set to `true` to draw stemlets for rests\n     * @param config.maintain_stem_directions set to `true` to not apply new stem directions\n     * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n     *\n     */\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        // Convert beam groups to tick amounts\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(vf_notes) {\n            return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            // number of ticks in current group\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return; // Ignore untickables (like bar notes)\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                // Double the amount of ticks in a group, if it's an unbeamable tuplet\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                // If the note that was just added overflows the group tick total\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    // If the overflow note can be beamed, start the next group\n                    // with it. Unbeamable notes leave the group overflowed.\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    // We have overflown, so we're going to next tick group. As we might have\n                    // overflown by more than 1 group, we need to go forward as many times as\n                    // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n                    // in current groups as we go forward.\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            // Adds any remainder notes beam\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        // Splits up groups by Rest\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beam_rests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    // Determine if the group should be broken at this note\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        // Add current group\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        // Start a new group. Include the current note if the group\n                        // was broken up by stem direction, as that note needs to start\n                        // the next group of notes\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        // Add note to group\n                        tempGroup.push(note);\n                    }\n                });\n                // If there is a remaining group, add it as well\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintain_stem_directions) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stem_direction) {\n                        stemDirection = config.stem_direction;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        // Get all of the tuplets in all of the note groups\n        function getTuplets() {\n            const uniqueTuplets = [];\n            // Go through all of the note groups and inspect for tuplets\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        // Using closures to store the variables throughout the various functions\n        // IMO Keeps it this process lot cleaner - but not super consistent with\n        // the rest of the API's style - Silverwolf90 (Cyril)\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        // Get the notes to be beamed\n        const beamedNoteGroups = getBeamGroups();\n        // Get the tuplets in order to format them accurately\n        const allTuplets = getTuplets();\n        // Create a Vex.Flow.Beam from each group of notes to be beamed\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.show_stemlets) {\n                beam.render_options.show_stemlets = true;\n            }\n            if (config.secondary_breaks) {\n                beam.render_options.secondary_break_ticks = Tables.durationToTicks(config.secondary_breaks);\n            }\n            if (config.flat_beams === true) {\n                beam.render_options.flat_beams = true;\n                beam.render_options.flat_beam_offset = config.flat_beam_offset;\n            }\n            beams.push(beam);\n        });\n        // Reformat tuplets\n        allTuplets.forEach((tuplet) => {\n            // Set the tuplet location based on the stem direction\n            const direction = tuplet.notes[0].stem_direction === Stem.DOWN ? TupletLocation.BOTTOM : TupletLocation.TOP;\n            tuplet.setTupletLocation(direction);\n            // If any of the notes in the tuplet are not beamed, draw a bracket.\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    constructor(notes, auto_stem = false) {\n        super();\n        this.slope = 0;\n        this.y_shift = 0;\n        /**\n         * Overrides to default beam directions for secondary-level beams that do not\n         * connect to any other note. See further explanation at\n         * `setPartialBeamSideAt`\n         */\n        this.forcedPartialDirections = {};\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        // Validate beam line, direction and ticks.\n        this.ticks = notes[0].getIntrinsicTicks();\n        if (this.ticks >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i; // shared iterator\n        let note;\n        this.stem_direction = notes[0].getStemDirection();\n        let stem_direction = this.stem_direction;\n        // Figure out optimal stem direction based on given notes\n        if (auto_stem && isStaveNote(notes[0])) {\n            stem_direction = calculateStemDirection(notes);\n        }\n        else if (auto_stem && isTabNote(notes[0])) {\n            // Auto Stem TabNotes\n            const stem_weight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        // Apply stem directions and attach beam to notes\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (auto_stem) {\n                note.setStemDirection(stem_direction);\n                this.stem_direction = stem_direction;\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        this.beam_count = this.getBeamCount();\n        this.break_on_indices = [];\n        this.render_options = {\n            beam_width: 5,\n            max_slope: 0.25,\n            min_slope: -0.25,\n            slope_iterations: 20,\n            slope_cost: 100,\n            show_stemlets: false,\n            stemlet_extension: 7,\n            partial_beam_length: 10,\n            flat_beams: false,\n            min_flat_beam_offset: 15,\n        };\n    }\n    /** Get the notes in this beam. */\n    getNotes() {\n        return this.notes;\n    }\n    /** Get the max number of beams in the set of notes. */\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyphProps().beam_count);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    /** Set which note `indices` to break the secondary beam at. */\n    breakSecondaryAt(indices) {\n        this.break_on_indices = indices;\n        return this;\n    }\n    /**\n     * Forces the direction of a partial beam (a secondary-level beam that exists\n     * on one note only of the beam group). This is useful in rhythms such as 6/8\n     * eighth-sixteenth-eighth-sixteenth, where the direction of the beam on the\n     * first sixteenth note can help imply whether the rhythm is to be felt as\n     * three groups of eighth notes (typical) or as two groups of three-sixteenths\n     * (less common):\n     * ```\n     *  ┌───┬──┬──┐      ┌──┬──┬──┐\n     *  │   ├─ │ ─┤  vs  │ ─┤  │ ─┤\n     *  │   │  │  │      │  │  │  │\n     * ```\n     */\n    setPartialBeamSideAt(noteIndex, side) {\n        this.forcedPartialDirections[noteIndex] = side;\n        return this;\n    }\n    /**\n     * Restore the default direction of a partial beam (a secondary-level beam\n     * that does not connect to any other notes).\n     */\n    unsetPartialBeamSideAt(noteIndex) {\n        delete this.forcedPartialDirections[noteIndex];\n        return this;\n    }\n    /** Return the y coordinate for linear function. */\n    getSlopeY(x, first_x_px, first_y_px, slope) {\n        return first_y_px + (x - first_x_px) * slope;\n    }\n    /** Calculate the best possible slope for the provided notes. */\n    calculateSlope() {\n        const { notes, stem_direction: stemDirection, render_options: { max_slope, min_slope, slope_iterations, slope_cost }, } = this;\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (max_slope - min_slope) / slope_iterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        // iterate through slope values to find best weighted fit\n        for (let slope = min_slope; slope <= max_slope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            // iterate through notes, calculating y shift and stem extension\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    // beam needs to be shifted up to accommodate note\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        // beam overshoots note, account for the difference\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            // most engraving books suggest aiming for a slope about half the angle of the\n            // difference between the first and last notes' stem length;\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            // This tries to align most beams to something closer to the idealSlope, but\n            // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n            const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n            // update state when a more ideal slope is found\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        this.y_shift = yShift;\n    }\n    /** Calculate a slope and y-shift for flat beams. */\n    calculateFlatSlope() {\n        const { notes, stem_direction, render_options: { beam_width, min_flat_beam_offset, flat_beam_offset }, } = this;\n        // If a flat beam offset has not yet been supplied or calculated,\n        // generate one based on the notes in this particular note group\n        let total = 0;\n        let extremeY = 0; // Store the highest or lowest note here\n        let extremeBeamCount = 0; // The beam count of the extreme note\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            // Total up all of the offsets so we can average them out later\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            // Store the highest (stems-up) or lowest (stems-down) note so the\n            //  offset can be adjusted in case the average isn't enough\n            if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        // Average the offsets to try and come up with a reasonable one that\n        //  works for all of the notes in the beam group.\n        let offset = total / notes.length;\n        // In case the average isn't long enough, add or subtract some more\n        //  based on the highest or lowest note (again, based on the stem\n        //  direction). This also takes into account the added height due to\n        //  the width of the beams.\n        const beamWidth = beam_width * 1.5;\n        const extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n        const newOffset = extremeY + extremeTest * -stem_direction;\n        if (stem_direction === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stem_direction === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flat_beam_offset) {\n            // Set the offset for the group based on the calculations above.\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        // for flat beams, the slope and y_shift are simply 0\n        this.slope = 0;\n        this.y_shift = 0;\n    }\n    /** Return the Beam y offset. */\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        // For flat beams, set the first and last Y to the offset, rather than\n        //  using the note's stem extents.\n        if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n            beamY = this.render_options.flat_beam_offset;\n        }\n        return beamY;\n    }\n    /**\n     * Create new stems for the notes in the beam, so that each stem\n     * extends into the beams.\n     */\n    applyStemExtensions() {\n        const { notes, slope, y_shift, beam_count, render_options: { show_stemlets, stemlet_extension, beam_width }, } = this;\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = note.getStemDirection() === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                // Determine necessary extension for cross-stave notes in the beam group\n                let crossStemExtension = 0;\n                if (note.getStemDirection() !== this.stem_direction) {\n                    const beamCount = note.getGlyphProps().beam_count;\n                    crossStemExtension = (1 + (beamCount - 1) * 1.5) * this.render_options.beam_width;\n                    /* This will be required if the partial beams are moved to the note side.\n                    if (i > 0 && note.getGlyph().beam_count > 1) {\n                      const prevBeamCount = this.notes[i - 1].getGlyph().beam_count;\n                      const beamDiff = Math.abs(prevBeamCount - beamCount);\n                      if (beamDiff > 0) crossStemExtension -= beamDiff * (this.render_options.beam_width * 1.5);\n                    }\n                    */\n                }\n                stem.setExtension(preBeamExtension + beamExtension + crossStemExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && show_stemlets) {\n                    const beamWidth = beam_width;\n                    const totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n                }\n            }\n        }\n    }\n    /** Return upper level beam direction. */\n    lookupBeamDirection(duration, prev_tick, tick, next_tick, noteIndex) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const forcedBeamDirection = this.forcedPartialDirections[noteIndex];\n        if (forcedBeamDirection)\n            return forcedBeamDirection;\n        const lookup_duration = `${Tables.durationToNumber(duration) / 2}`;\n        const prev_note_gets_beam = prev_tick < Tables.durationToTicks(lookup_duration);\n        const next_note_gets_beam = next_tick < Tables.durationToTicks(lookup_duration);\n        const note_gets_beam = tick < Tables.durationToTicks(lookup_duration);\n        if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_BOTH;\n        }\n        else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n            return BEAM_LEFT;\n        }\n        else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick, noteIndex);\n    }\n    /** Get the x coordinates for the beam lines of specific `duration`. */\n    getBeamLines(duration) {\n        const tick_of_duration = Tables.durationToTicks(duration);\n        let beam_started = false;\n        const beam_lines = [];\n        let current_beam = undefined;\n        const partial_beam_length = this.render_options.partial_beam_length;\n        let previous_should_break = false;\n        let tick_tally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            // See if we need to break secondary beams on this note.\n            const ticks = note.getTicks().value();\n            tick_tally += ticks;\n            let should_break = false;\n            // 8th note beams are always drawn.\n            if (parseInt(duration, 10) >= 8) {\n                // First, check to see if any indices were set up through breakSecondaryAt()\n                should_break = this.break_on_indices.indexOf(i) !== -1;\n                // If the secondary breaks were auto-configured in the render options,\n                //  handle that as well.\n                if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n                    tick_tally = 0;\n                    should_break = true;\n                }\n            }\n            const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n            const stem_x = note.getStemX() - Stem.WIDTH / 2;\n            // Check to see if the next note in the group will get a beam at this\n            //  level. This will help to inform the partial beam logic below.\n            const prev_note = this.notes[i - 1];\n            const next_note = this.notes[i + 1];\n            const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n            const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n            const beam_alone = prev_note && next_note && note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            if (note_gets_beam) {\n                // This note gets a beam at the current level\n                if (beam_started) {\n                    // We're currently in the middle of a beam. Just continue it on to\n                    //  the stem X of the current note.\n                    current_beam = beam_lines[beam_lines.length - 1];\n                    current_beam.end = stem_x;\n                    // If a secondary beam break is set up, end the beam right now.\n                    if (should_break) {\n                        beam_started = false;\n                        if (next_note && !next_note_gets_beam && current_beam.end === undefined) {\n                            // This note gets a beam,.but the next one does not. This means\n                            //  we need a partial pointing right.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                }\n                else {\n                    // No beam started yet. Start a new one.\n                    current_beam = { start: stem_x, end: undefined };\n                    beam_started = true;\n                    if (beam_alone) {\n                        // previous and next beam exists and does not get a beam but current gets it.\n                        const prev_tick = prev_note.getIntrinsicTicks();\n                        const next_tick = next_note.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick, i);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                        else {\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                    }\n                    else if (!next_note_gets_beam) {\n                        // The next note doesn't get a beam. Draw a partial.\n                        if ((previous_should_break || i === 0) && next_note) {\n                            // This is the first note (but not the last one), or it is\n                            //  following a secondary break. Draw a partial to the right.\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                        else {\n                            // By default, draw a partial to the left.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                    else if (should_break) {\n                        // This note should have a secondary break after it. Even though\n                        //  we just started a beam, it needs to end immediately.\n                        current_beam.end = current_beam.start - partial_beam_length;\n                        beam_started = false;\n                    }\n                    beam_lines.push(current_beam);\n                }\n            }\n            else {\n                // The current note does not get a beam.\n                beam_started = false;\n            }\n            // Store the secondary break flag to inform the partial beam logic in\n            //  the next iteration of the loop.\n            previous_should_break = should_break;\n        }\n        // Add a partial beam pointing left if this is the last note in the group\n        const last_beam = beam_lines[beam_lines.length - 1];\n        if (last_beam && last_beam.end === undefined) {\n            last_beam.end = last_beam.start - partial_beam_length;\n        }\n        return beam_lines;\n    }\n    /** Render the stems for each note. */\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                const stem_x = note.getStemX();\n                stem.setNoteHeadXBounds(stem_x, stem_x);\n                stem.setContext(ctx).draw();\n            }\n        }, this);\n    }\n    // Render the beam lines\n    drawBeamLines(ctx) {\n        const valid_beam_durations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.render_options.beam_width * this.stem_direction;\n        // Draw the beams.\n        for (let i = 0; i < valid_beam_durations.length; ++i) {\n            const duration = valid_beam_durations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beam_line = beamLines[j];\n                const startBeamX = beam_line.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beam_line.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    /** Pre-format the beam. */\n    preFormat() {\n        return this;\n    }\n    /**\n     * Post-format the beam. This can only be called after\n     * the notes in the beam have both `x` and `y` values. ie: they've\n     * been formatted and have staves.\n     */\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        // Calculate a smart slope if we're not forcing the beams to be flat.\n        if (isTabNote(this.notes[0]) || this.render_options.flat_beams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    /** Render the beam to the canvas context */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (this.unbeamable)\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        this.drawStems(ctx);\n        this.applyStyle();\n        ctx.openGroup('beam', this.getAttribute('id'));\n        this.drawBeamLines(ctx);\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n// MIT License\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n    static get CATEGORY() {\n        return Category.ClefNote;\n    }\n    constructor(type, size, annotation) {\n        super({ duration: 'b' });\n        this.type = type;\n        const clef = new Clef(type, size, annotation);\n        this.clef = clef.clef;\n        this.annotation = clef.annotation;\n        this.size = size === undefined ? 'default' : size;\n        this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clefNote_${this.size}`));\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.size = size;\n        const clef = new Clef(type, size, annotation);\n        this.clef = clef.clef;\n        this.annotation = clef.annotation;\n        this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clefNote_${this.size}`));\n        return this;\n    }\n    /** Get associated clef. */\n    getClef() {\n        return this.clef;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render clef note. */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        const abs_x = this.getAbsoluteX();\n        Glyph.renderGlyph(ctx, abs_x, stave.getYForLine(this.clef.line), Clef.getPoint(this.size), this.clef.code, {\n            category: `clefNote_${this.size}`,\n        });\n        // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n        if (this.annotation !== undefined) {\n            const attachment = new Glyph(this.annotation.code, this.annotation.point);\n            attachment.setContext(ctx);\n            attachment.setStave(stave);\n            attachment.setYShift(stave.getYForLine(this.annotation.line) - stave.getYForGlyphs());\n            attachment.setXShift(this.annotation.x_shift);\n            attachment.renderToStave(abs_x);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('Vex.Flow.Crescendo', args);\n}\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n    const begin_x = params.begin_x;\n    const end_x = params.end_x;\n    const y = params.y;\n    const half_height = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(begin_x, y - half_height);\n        ctx.lineTo(end_x, y);\n        ctx.lineTo(begin_x, y + half_height);\n    }\n    else {\n        ctx.moveTo(end_x, y - half_height);\n        ctx.lineTo(begin_x, y);\n        ctx.lineTo(end_x, y + half_height);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nclass Crescendo extends Note {\n    /** Crescendo category string. */\n    static get CATEGORY() {\n        return Category.Crescendo;\n    }\n    // Initialize the crescendo's properties\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.options = {\n            // Extensions to the length of the crescendo on either side\n            extend_left: 0,\n            extend_right: 0,\n            // Vertical shift\n            y_shift: 0,\n        };\n        // Whether the object is a decrescendo\n        this.decrescendo = false;\n        // The staff line to be placed on\n        this.line = noteStruct.line || 0;\n        // The height at the open end of the cresc/decresc\n        this.height = 15;\n    }\n    // Set the line to center the element on\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Set the full height at the open end\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    // Set whether the sign should be a descresendo by passing a bool\n    // to `decresc`\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    // Preformat the note\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    // Render the Crescendo object onto the canvas\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tick_context = this.getTickContext();\n        const next_context = TickContext.getNextContext(tick_context);\n        const begin_x = this.getAbsoluteX();\n        const end_x = next_context ? next_context.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n        renderHairpin(ctx, {\n            begin_x: begin_x - this.options.extend_left,\n            end_x: end_x + this.options.extend_right,\n            y: y + this.options.y_shift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\nexport { Crescendo };\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    static get CATEGORY() {\n        return Category.Curve;\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    // from: Start note\n    // to: End note\n    // options:\n    //    cps: List of control points\n    //    x_shift: pixels to shift\n    //    y_shift: pixels to shift\n    constructor(from, to, options) {\n        super();\n        this.render_options = Object.assign({ thickness: 2, x_shift: 0, y_shift: 10, position: CurvePosition.NEAR_HEAD, position_end: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ] }, options);\n        this.from = from;\n        this.to = to;\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        const ctx = this.checkContext();\n        const x_shift = this.render_options.x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        const first_x = params.first_x + x_shift;\n        const first_y = params.first_y + y_shift;\n        const last_x = params.last_x - x_shift;\n        const last_y = params.last_y + y_shift;\n        const thickness = this.render_options.thickness;\n        const cps = this.render_options.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const cp_spacing = (last_x - first_x) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(first_x, first_y);\n        ctx.bezierCurveTo(first_x + cp_spacing + cp0x, first_y + cp0y * params.direction, last_x - cp_spacing + cp1x, last_y + cp1y * params.direction, last_x, last_y);\n        ctx.bezierCurveTo(last_x - cp_spacing + cp1x, last_y + (cp1y + thickness) * params.direction, first_x + cp_spacing + cp0x, first_y + (cp0y + thickness) * params.direction, first_x, first_y);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.from;\n        const last_note = this.to;\n        let first_x;\n        let last_x;\n        let first_y;\n        let last_y;\n        let stem_direction = 0;\n        let metric = 'baseY';\n        let end_metric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.render_options.position);\n        const position_end = getPosition(this.render_options.position_end);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            end_metric = 'topY';\n        }\n        if (position_end === CurvePosition.NEAR_HEAD) {\n            end_metric = 'baseY';\n        }\n        else if (position_end === CurvePosition.NEAR_TOP) {\n            end_metric = 'topY';\n        }\n        if (first_note) {\n            first_x = first_note.getTieRightX();\n            stem_direction = first_note.getStemDirection();\n            first_y = first_note.getStemExtents()[metric];\n        }\n        else {\n            const stave = last_note.checkStave();\n            first_x = stave.getTieStartX();\n            first_y = last_note.getStemExtents()[metric];\n        }\n        if (last_note) {\n            last_x = last_note.getTieLeftX();\n            stem_direction = last_note.getStemDirection();\n            last_y = last_note.getStemExtents()[end_metric];\n        }\n        else {\n            const stave = first_note.checkStave();\n            last_x = stave.getTieEndX();\n            last_y = first_note.getStemExtents()[end_metric];\n        }\n        this.renderCurve({\n            first_x,\n            last_x,\n            first_y,\n            last_y,\n            direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('Vex.Flow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString; // string\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches); // nested array\n}\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nclass Parser {\n    // For an example of a simple grammar, take a look at tests/parser_tests.ts or\n    // the EasyScore grammar in easyscore.ts.\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Parse `line` using current grammar. Returns `{success: true}` if the\n    // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n    // where `errorPos` is the location of the error in the string.\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Look for `token` in this.line[this.pos], and return success\n    // if one is found. `token` is specified as a regular expression.\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n    // set, then return success even if the token is not found, but reset\n    // the position before exiting.\n    // TODO: expectOne(...) is never called with the `maybe` parameter.\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        // Execute all sub rules in sequence.\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                // If `rule.or` is set, then return success if any one\n                // of the subrules match, else all subrules must match.\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n    // then a failed match is also a success (but the position is reset).\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    // Execute the rule produced by the provided `rules` function. This\n    // offloads to one of the above matchers and consolidates the results. It is also\n    // responsible for executing any code triggered by the rule (in `rule.run`.)\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        // Get rule from Grammar class.\n        // expect(...) handles both lexing & parsing:\n        // - lexer rules produce tokens.\n        // - parser rules produce expressions which may trigger code via the\n        //   { run: () => ... } trigger functions in easyscore.ts.\n        //   These functions build the VexFlow objects that are displayed on screen.\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            // A lexer rule has a `token` property.\n            // Base case: parse the regex and throw an error if the\n            // line doesn't match.\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                // Token match! Update position and throw away parsed portion\n                // of string.\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            // A parser rule has an `expect` property.\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        // If there's a trigger attached to this rule, then run it.\n        // Make the matches accessible through `state.matches` in the\n        // `run: (state) => ...` trigger.\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\nexport { Parser };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Articulation } from './articulation';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Music } from './music';\nimport { Parser } from './parser';\nimport { Stem } from './stem';\nimport { defined, log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('Vex.Flow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                // eslint-disable-next-line\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    // notes is an array with 3 entries\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n); // n => [string, string | null, string]\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n        // e.g., auto | up | down\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        // e.g., treble | bass\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        // Create a string[] that will be assigned to the .keys property of the StaveNote.\n        // Each string in the array represents a note pitch and is of the form: {NoteName}{Accidental}/{Octave}\n        // Only standard accidentals are included in the .keys property. Microtonal accidentals are not included.\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const auto_stem = stem === 'auto'; // StaveNoteStruct expects the underscore & lowercase.\n        // Build a GhostNote or StaveNote using the information we gathered.\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) == 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, auto_stem });\n        if (!auto_stem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        // Attach accidentals.\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(accidental, index);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        // Attach dots.\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\n// Used by setClass() below.\nconst commaSeparatedRegex = /\\s*,\\s*/;\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\n/**\n * EasyScore implements a parser for a simple language to generate VexFlow objects.\n */\nclass EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Set the score defaults.\n     * clef must be set appropriately to avoid errors when adding Staves.\n     * @param defaults.clef default clef ( treble | bass ...) see {@link Clef.types}\n     * @param defaults.time default time signature ( 4/4 | 9/8 ...)\n     * @param defaults.stem default stem arrangement (auto | up | down)\n     * @returns this\n     */\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    /**\n     * @param options.factory is required.\n     * @returns this\n     */\n    setOptions(options) {\n        var _a, _b;\n        // eslint-disable-next-line\n        const factory = options.factory; // ! operator, because options.factory was set in Factory.EasyScore().\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\nexport { EasyScore };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\nimport { StemmableNote } from './stemmablenote';\nimport { Category, isAnnotation } from './typeguard';\nimport { RuntimeError } from './util';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.GhostNote;\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            // Preserve backwards-compatibility\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        // Note properties\n        this.setWidth(0);\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        // Draw Annotations\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (isAnnotation(modifier)) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Any glyph that is set to appear on a Stave and take up musical time and graphical space.\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class GlyphNote extends Note {\n    static get CATEGORY() {\n        return Category.GlyphNote;\n    }\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        // Note properties\n        this.ignore_ticks = this.options.ignoreTicks;\n        this.setGlyph(glyph);\n    }\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    getBoundingBox() {\n        return this.glyph.getBoundingBox();\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return this.glyph.getMetrics().width;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        // Context is set when setStave is called on Note\n        const glyph = this.glyph;\n        if (!glyph.getContext()) {\n            glyph.setContext(ctx);\n        }\n        glyph.setStave(stave);\n        glyph.setYShift(stave.getYForLine(this.options.line) - stave.getYForGlyphs());\n        const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        glyph.renderToStave(x);\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class GraceNote extends StaveNote {\n    static get CATEGORY() {\n        return Category.GraceNote;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    static get SCALE() {\n        return 0.66;\n    }\n    constructor(noteStruct) {\n        super(Object.assign({ glyph_font_scale: Tables.NOTATION_FONT_SCALE * GraceNote.SCALE, stroke_px: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 3;\n    }\n    getStemExtension() {\n        if (this.stem_extension_override) {\n            return this.stem_extension_override;\n        }\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            let ret = super.getStemExtension();\n            if (glyphProps.stem) {\n                const staveNoteScale = this.getStaveNoteScale();\n                ret = (Stem.HEIGHT + ret) * staveNoteScale - Stem.HEIGHT;\n            }\n            return ret;\n        }\n        return 0;\n    }\n    getStaveNoteScale() {\n        return this.render_options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const staveNoteScale = this.getStaveNoteScale();\n            // some magic numbers are based on the staveNoteScale 0.66.\n            const offsetScale = staveNoteScale / 0.66;\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                // FIXME: should render slash after beam?\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale, 8 * offsetScale, {\n                    stem: 6 * offsetScale,\n                    beam: 5 * offsetScale,\n                });\n            }\n            else {\n                const stem_direction = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteStemHeight = stem.getHeight();\n                let x = this.getAbsoluteX();\n                let y = stem_direction === Stem.DOWN\n                    ? noteHeadBounds.y_top - noteStemHeight\n                    : noteHeadBounds.y_bottom - noteStemHeight;\n                const defaultStemExtention = stem_direction === Stem.DOWN ? this.glyphProps.stem_down_extension : this.glyphProps.stem_up_extension;\n                let defaultOffsetY = Tables.STEM_HEIGHT;\n                defaultOffsetY -= defaultOffsetY / 2.8;\n                defaultOffsetY += defaultStemExtention;\n                y += defaultOffsetY * staveNoteScale * stem_direction;\n                const offsets = stem_direction === Stem.UP\n                    ? {\n                        x1: 1,\n                        y1: 0,\n                        x2: 13,\n                        y2: -9,\n                    }\n                    : {\n                        x1: -4,\n                        y1: 1,\n                        x2: 13,\n                        y2: 9,\n                    };\n                x += offsets.x1 * offsetScale;\n                y += offsets.y1 * offsetScale;\n                slashBBox = {\n                    x1: x,\n                    y1: y,\n                    x2: x + offsets.x2 * offsetScale,\n                    y2: y + offsets.y2 * offsetScale,\n                };\n            }\n            // FIXME: avoid staff lines, ledger lines or others.\n            const ctx = this.checkContext();\n            ctx.save();\n            ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.restore();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beam_slope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beam_angle = Math.atan(beam_slope * scaleX);\n        // slash line intersecting point on beam.\n        const iPointOnBeam = {\n            dx: Math.cos(beam_angle) * slashBeamOffset,\n            dy: Math.sin(beam_angle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n        const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n        const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n        const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beam_slope;\n        const ret = {\n            x1: stemX - protrusion_stem_dx,\n            y1: stemY + slashStemOffset - protrusion_stem_dy,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusion_beam_dx,\n            y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n        };\n        return ret;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\nimport { KeySignature } from './keysignature';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class KeySigNote extends Note {\n    static get CATEGORY() {\n        return Category.KeySigNote;\n    }\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.draw();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests.\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { defined } from './util';\nlet semibreve_rest;\nfunction get_semibreve_rest() {\n    if (!semibreve_rest) {\n        const noteHead = new NoteHead({ duration: 'w', note_type: 'r' });\n        semibreve_rest = {\n            glyph_font_scale: noteHead.render_options.glyph_font_scale,\n            glyph_code: noteHead.glyph_code,\n            width: noteHead.getWidth(),\n        };\n    }\n    return semibreve_rest;\n}\nexport class MultiMeasureRest extends Element {\n    static get CATEGORY() {\n        return Category.MultiMeasureRest;\n    }\n    /**\n     *\n     * @param number_of_measures Number of measures.\n     * @param options The options object.\n     */\n    constructor(number_of_measures, options) {\n        var _a;\n        super();\n        this.xs = { left: NaN, right: NaN };\n        this.hasPaddingLeft = false;\n        this.hasPaddingRight = false;\n        this.hasLineThickness = false;\n        this.hasSymbolSpacing = false;\n        this.number_of_measures = number_of_measures;\n        // Keep track of whether these four options were provided.\n        this.hasPaddingLeft = typeof options.padding_left === 'number';\n        this.hasPaddingRight = typeof options.padding_right === 'number';\n        this.hasLineThickness = typeof options.line_thickness === 'number';\n        this.hasSymbolSpacing = typeof options.symbol_spacing === 'number';\n        const musicFont = Tables.currentMusicFont();\n        this.render_options = Object.assign({ use_symbols: false, show_number: true, number_line: -0.5, number_glyph_point: (_a = musicFont.lookupMetric('digits.point')) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE, line: 2, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, serif_thickness: 2, semibreve_rest_glyph_scale: Tables.NOTATION_FONT_SCALE, padding_left: 0, padding_right: 0, line_thickness: 5, symbol_spacing: 0 }, options);\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.render_options.number_line += fontLineShift;\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right, spacingBetweenLines) {\n        const options = this.render_options;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let lineThicknessHalf;\n        if (this.hasLineThickness) {\n            lineThicknessHalf = options.line_thickness * 0.5;\n        }\n        else {\n            lineThicknessHalf = spacingBetweenLines * 0.25;\n        }\n        const serifThickness = options.serif_thickness;\n        const top = y - spacingBetweenLines;\n        const bot = y + spacingBetweenLines;\n        const leftIndented = left + serifThickness;\n        const rightIndented = right - serifThickness;\n        const lineTop = y - lineThicknessHalf;\n        const lineBottom = y + lineThicknessHalf;\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(left, top);\n        ctx.lineTo(leftIndented, top);\n        ctx.lineTo(leftIndented, lineTop);\n        ctx.lineTo(rightIndented, lineTop);\n        ctx.lineTo(rightIndented, top);\n        ctx.lineTo(right, top);\n        ctx.lineTo(right, bot);\n        ctx.lineTo(rightIndented, bot);\n        ctx.lineTo(rightIndented, lineBottom);\n        ctx.lineTo(leftIndented, lineBottom);\n        ctx.lineTo(leftIndented, bot);\n        ctx.lineTo(left, bot);\n        ctx.closePath();\n        ctx.fill();\n    }\n    drawSymbols(stave, ctx, left, right, spacingBetweenLines) {\n        const n4 = Math.floor(this.number_of_measures / 4);\n        const n = this.number_of_measures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.render_options;\n        // FIXME: TODO: invalidate semibreve_rest at the appropriate time\n        // (e.g., if the system font settings are changed).\n        semibreve_rest = undefined;\n        const rest = get_semibreve_rest();\n        const rest_scale = options.semibreve_rest_glyph_scale;\n        const rest_width = rest.width * (rest_scale / rest.glyph_font_scale);\n        const glyphs = {\n            2: {\n                width: rest_width * 0.5,\n                height: spacingBetweenLines,\n            },\n            1: {\n                width: rest_width,\n            },\n        };\n        /* 10: normal spacingBetweenLines */\n        const spacing = this.hasSymbolSpacing ? options.symbol_spacing : 10;\n        const width = n4 * glyphs[2].width + n2 * glyphs[2].width + n1 * glyphs[1].width + (n4 + n2 + n1 - 1) * spacing;\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        const yBottom = stave.getYForLine(line + 1);\n        ctx.save();\n        ctx.setStrokeStyle('none');\n        ctx.setLineWidth(0);\n        for (let i = 0; i < n4; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n2; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n1; ++i) {\n            Glyph.renderGlyph(ctx, x, yTop, rest_scale, rest.glyph_code);\n            x += glyphs[1].width + spacing;\n        }\n        ctx.restore();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        // FIXME: getNoteStartX() returns x + 5(barline width)\n        //        getNoteEndX() returns x + width(no barline width)\n        // See Stave constructor. How do we fix this?\n        // Here, we subtract the barline width.\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.render_options;\n        if (this.hasPaddingLeft) {\n            left = stave.getX() + options.padding_left;\n        }\n        if (this.hasPaddingRight) {\n            right = stave.getX() + stave.getWidth() - options.padding_right;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        const spacingBetweenLines = options.spacing_between_lines_px;\n        if (options.use_symbols) {\n            this.drawSymbols(stave, ctx, left, right, spacingBetweenLines);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right, spacingBetweenLines);\n        }\n        if (options.show_number) {\n            const timeSpec = '/' + this.number_of_measures;\n            const timeSig = new TimeSignature(timeSpec, 0, false);\n            timeSig.point = options.number_glyph_point;\n            timeSig.setTimeSig(timeSpec);\n            timeSig.setStave(stave);\n            timeSig.setX(left + (right - left) * 0.5 - timeSig.getInfo().glyph.getMetrics().width * 0.5);\n            timeSig.bottomLine = options.number_line;\n            timeSig.setContext(ctx).draw();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('Vex.Flow.PedalMarking', args);\n}\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name, context, x, y, point) {\n    const glyph_data = PedalMarking.GLYPHS[name];\n    const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n    // Center the middle of the glyph with the middle of the note head (Tables.STAVE_LINE_DISTANCE / 2)\n    glyph.render(context, x - (glyph.getMetrics().width - Tables.STAVE_LINE_DISTANCE) / 2, y);\n}\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nclass PedalMarking extends Element {\n    static get CATEGORY() {\n        return Category.PedalMarking;\n    }\n    /**\n     * Create a sustain pedal marking. Returns the defaults PedalMarking.\n     * Which uses the traditional \"Ped\" and \"*\"\" markings.\n     */\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    /** Create a sostenuto pedal marking */\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    /** Create an una corda pedal marking */\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        // Custom text for the release/depress markings\n        this.custom_depress_text = '';\n        this.custom_release_text = '';\n        this.resetFont();\n        this.render_options = {\n            bracket_height: 10,\n            text_margin_right: 6,\n            bracket_line_width: 1,\n            color: 'black',\n        };\n    }\n    /** Set pedal type. */\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    /**\n     * Set custom text for the `depress`/`release` pedal markings. No text is\n     * set if the parameter is falsy.\n     */\n    setCustomText(depress, release) {\n        this.custom_depress_text = depress || '';\n        this.custom_release_text = release || '';\n        return this;\n    }\n    /** Set the staff line to render the markings on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Draw the bracket based pedal markings. */\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        let prev_x;\n        let prev_y;\n        // Iterate through each note\n        this.notes.forEach((note, index, notes) => {\n            var _a;\n            // Each note triggers the opposite pedal action\n            is_pedal_depressed = !is_pedal_depressed;\n            // Get the initial coordinates for the note\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            // Throw if current note is positioned before the previous note\n            if (x < prev_x) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            // Determine if the previous or next note are the same\n            // as the current note. We need to keep track of this for\n            // when adjustments are made for the release+depress action\n            const next_is_same = notes[index + 1] === note;\n            const prev_is_same = notes[index - 1] === note;\n            let x_shift = 0;\n            const point = (_a = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`)) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE;\n            if (is_pedal_depressed) {\n                // Adjustment for release+depress\n                x_shift = prev_is_same ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n                    // For MIXED style, start with text instead of bracket\n                    if (this.custom_depress_text) {\n                        // If we have custom text, use instead of the default \"Ped\" glyph\n                        const text_width = ctx.measureText(this.custom_depress_text).width;\n                        ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                        x_shift = text_width / 2 + this.render_options.text_margin_right;\n                    }\n                    else {\n                        // Render the Ped glyph in position\n                        drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                        x_shift = 20 + this.render_options.text_margin_right;\n                    }\n                }\n                else {\n                    // Draw start bracket\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.render_options.bracket_height);\n                    ctx.lineTo(x + x_shift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                // Adjustment for release+depress\n                x_shift = next_is_same ? -5 : 0;\n                // Draw end bracket\n                ctx.beginPath();\n                ctx.moveTo(prev_x, prev_y);\n                ctx.lineTo(x + x_shift, y);\n                ctx.lineTo(x, y - this.render_options.bracket_height);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            // Store previous coordinates\n            prev_x = x + x_shift;\n            prev_y = y;\n        });\n    }\n    /**\n     * Draw the text based pedal markings. This defaults to the traditional\n     * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n     */\n    drawText() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        // Iterate through each note, placing glyphs or custom text accordingly\n        this.notes.forEach((note) => {\n            var _a;\n            is_pedal_depressed = !is_pedal_depressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            const point = (_a = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`)) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE;\n            let text_width = 0;\n            if (is_pedal_depressed) {\n                if (this.custom_depress_text) {\n                    text_width = ctx.measureText(this.custom_depress_text).width;\n                    ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                }\n            }\n            else {\n                if (this.custom_release_text) {\n                    text_width = ctx.measureText(this.custom_release_text).width;\n                    ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_release', ctx, x, y, point);\n                }\n            }\n        });\n    }\n    /** Render the pedal marking in position on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setStrokeStyle(this.render_options.color);\n        ctx.setFillStyle(this.render_options.color);\n        ctx.setFont(this.textFont);\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.render_options.bracket_line_width);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\nPedalMarking.DEBUG = false;\nPedalMarking.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n/** Glyph data */\nPedalMarking.GLYPHS = {\n    pedal_depress: {\n        code: 'keyboardPedalPed',\n    },\n    pedal_release: {\n        code: 'keyboardPedalUp',\n    },\n};\n/** Pedal type as number. */\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\n/** Pedal type as string. */\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\nexport { PedalMarking };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n// Map `type` to SMuFL glyph code.\nconst CODES = {\n    '1': 'repeat1Bar',\n    '2': 'repeat2Bars',\n    '4': 'repeat4Bars',\n    slash: 'repeatBarSlash',\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return Category.RepeatNote;\n    }\n    constructor(type, noteStruct, options) {\n        const glyphCode = CODES[type] || 'repeat1Bar';\n        const glyph = new Glyph(glyphCode, Tables.currentMusicFont().lookupMetric('repeatNote.point', 40), {\n            category: 'repeatNote',\n        });\n        super(glyph, Object.assign({ duration: 'q', align_center: type !== 'slash' }, noteStruct), options);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { TextJustification } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nclass StaveLine extends Element {\n    static get CATEGORY() {\n        return Category.StaveLine;\n    }\n    // Initialize the StaveLine with the given `notes`.\n    //\n    // `notes` is a struct that has:\n    //\n    //  ```\n    //  {\n    //    first_note: Note,\n    //    last_note: Note,\n    //    first_indices: [n1, n2, n3],\n    //    last_indices: [n1, n2, n3]\n    //  }\n    //  ```\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.resetFont();\n        this.render_options = {\n            // Space to add to the left or the right\n            padding_left: 4,\n            padding_right: 3,\n            // The width of the line in pixels\n            line_width: 1,\n            // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n            line_dash: undefined,\n            // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n            rounded_end: true,\n            // The color of the line and arrowheads\n            color: undefined,\n            // Flags to draw arrows on each end of the line\n            draw_start_arrow: false,\n            draw_end_arrow: false,\n            // The length of the arrowhead sides\n            arrowhead_length: 10,\n            // The angle of the arrowhead\n            arrowhead_angle: Math.PI / 8,\n            // The position of the text\n            text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n            text_justification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    // The the annotation for the `StaveLine`\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    // Set the notes for the `StaveLine`\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices)\n            notes.first_indices = [0];\n        if (!notes.last_indices)\n            notes.last_indices = [0];\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indices.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.first_indices = notes.first_indices;\n        this.last_note = notes.last_note;\n        this.last_indices = notes.last_indices;\n        return this;\n    }\n    // Apply the style of the `StaveLine` to the context\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const render_options = this.render_options;\n        if (render_options.line_dash) {\n            ctx.setLineDash(render_options.line_dash);\n        }\n        if (render_options.line_width) {\n            ctx.setLineWidth(render_options.line_width);\n        }\n        if (render_options.rounded_end) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    // Apply the text styling to the context\n    applyFontStyle() {\n        const ctx = this.checkContext();\n        ctx.setFont(this.textFont);\n        const render_options = this.render_options;\n        const color = render_options.color;\n        if (color) {\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n        }\n    }\n    // Helper function to draw a line with arrow heads\n    drawArrowLine(ctx, pt1, pt2) {\n        const both_arrows = this.render_options.draw_start_arrow && this.render_options.draw_end_arrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        // For ends with arrow we actually want to stop before we get to the arrow\n        // so that wide lines won't put a flat end on the arrow.\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.render_options.arrowhead_length / 3) / distance;\n        let end_x;\n        let end_y;\n        let start_x;\n        let start_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            end_x = Math.round(x1 + (x2 - x1) * ratio);\n            end_y = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            end_x = x2;\n            end_y = y2;\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            start_x = x1 + (x2 - x1) * (1 - ratio);\n            start_y = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            start_x = x1;\n            start_y = y1;\n        }\n        if (this.render_options.color) {\n            ctx.setStrokeStyle(this.render_options.color);\n            ctx.setFillStyle(this.render_options.color);\n        }\n        // Draw the shaft of the arrow\n        ctx.beginPath();\n        ctx.moveTo(start_x, start_y);\n        ctx.lineTo(end_x, end_y);\n        ctx.stroke();\n        ctx.closePath();\n        // calculate the angle of the line\n        const line_angle = Math.atan2(y2 - y1, x2 - x1);\n        // h is the line length of a side of the arrow head\n        const h = Math.abs(this.render_options.arrowhead_length / Math.cos(this.render_options.arrowhead_angle));\n        let angle1;\n        let angle2;\n        let top_x;\n        let top_y;\n        let bottom_x;\n        let bottom_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            angle1 = line_angle + Math.PI + this.render_options.arrowhead_angle;\n            top_x = x2 + Math.cos(angle1) * h;\n            top_y = y2 + Math.sin(angle1) * h;\n            angle2 = line_angle + Math.PI - this.render_options.arrowhead_angle;\n            bottom_x = x2 + Math.cos(angle2) * h;\n            bottom_y = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            angle1 = line_angle + this.render_options.arrowhead_angle;\n            top_x = x1 + Math.cos(angle1) * h;\n            top_y = y1 + Math.sin(angle1) * h;\n            angle2 = line_angle - this.render_options.arrowhead_angle;\n            bottom_x = x1 + Math.cos(angle2) * h;\n            bottom_y = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n        }\n    }\n    // Renders the `StaveLine` on the context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const first_note = this.first_note;\n        const last_note = this.last_note;\n        const render_options = this.render_options;\n        ctx.save();\n        this.applyLineStyle();\n        // Cycle through each set of indices and draw lines\n        let start_position = { x: 0, y: 0 };\n        let end_position = { x: 0, y: 0 };\n        this.first_indices.forEach((first_index, i) => {\n            const last_index = this.last_indices[i];\n            // Get initial coordinates for the start/end of the line\n            start_position = first_note.getModifierStartXY(2, first_index);\n            end_position = last_note.getModifierStartXY(1, last_index);\n            const upwards_slope = start_position.y > end_position.y;\n            // Adjust `x` coordinates for modifiers\n            start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n            end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n            // Adjust first `x` coordinates for displacements\n            const notehead_width = first_note.getGlyphProps().getWidth();\n            const first_displaced = first_note.getKeyProps()[first_index].displaced;\n            if (first_displaced && first_note.getStemDirection() === 1) {\n                start_position.x += notehead_width + render_options.padding_left;\n            }\n            // Adjust last `x` coordinates for displacements\n            const last_displaced = last_note.getKeyProps()[last_index].displaced;\n            if (last_displaced && last_note.getStemDirection() === -1) {\n                end_position.x -= notehead_width + render_options.padding_right;\n            }\n            // Adjust y position better if it's not coming from the center of the note\n            start_position.y += upwards_slope ? -3 : 1;\n            end_position.y += upwards_slope ? 2 : 0;\n            this.drawArrowLine(ctx, start_position, end_position);\n        });\n        ctx.restore();\n        // Determine the x coordinate where to start the text\n        const text_width = ctx.measureText(this.text).width;\n        const justification = render_options.text_justification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = start_position.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const delta_x = end_position.x - start_position.x;\n            const center_x = delta_x / 2 + start_position.x;\n            x = center_x - text_width / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = end_position.x - text_width;\n        }\n        // Determine the y value to start the text\n        let y = 0;\n        const vertical_position = render_options.text_position_vertical;\n        if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n            y = first_note.checkStave().getYForTopText();\n        }\n        else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = first_note.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        // Draw the text\n        ctx.save();\n        this.applyFontStyle();\n        ctx.fillText(this.text, x, y);\n        ctx.restore();\n        return this;\n    }\n}\n/** Default text font. */\nStaveLine.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n// Text Positioning\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = TextJustification;\nexport { StaveLine };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n    static get CATEGORY() {\n        return Category.System;\n    }\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.partStaves = [];\n        this.partStaveInfos = [];\n        this.partVoices = [];\n    }\n    /** Set formatting options. */\n    setOptions(options = {}) {\n        if (!options.factory) {\n            throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n        }\n        this.factory = options.factory;\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    /** Get origin X. */\n    getX() {\n        return this.options.x;\n    }\n    /** Set origin X. */\n    setX(x) {\n        this.options.x = x;\n        this.partStaves.forEach((s) => {\n            s.setX(x);\n        });\n    }\n    /** Get origin y. */\n    getY() {\n        return this.options.y;\n    }\n    /** Set origin y. */\n    setY(y) {\n        this.options.y = y;\n        this.partStaves.forEach((s) => {\n            s.setY(y);\n        });\n    }\n    /** Get associated staves. */\n    getStaves() {\n        return this.partStaves;\n    }\n    /** Get associated voices. */\n    getVoices() {\n        return this.partVoices;\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    /**\n     * Add connector between staves.\n     * @param type see {@link StaveConnector.typeString}\n     */\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            top_stave: this.partStaves[0],\n            bottom_stave: this.partStaves[this.partStaves.length - 1],\n            type,\n        });\n        return this.connector;\n    }\n    /**\n     * Add a stave to the system.\n     *\n     * Example (one voice):\n     *\n     * `system.addStave({voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]});`\n     *\n     * Example (two voices):\n     *\n     * `system.addStave({voices: [`\n     *   `score.voice(score.notes('C#5/q, B4, A4, G#4', {stem: 'up'})),`\n     *   `score.voice(score.notes('C#4/h, C#4', {stem: 'down'}))`\n     * `]});`\n     */\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ left_bar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => {\n            voice\n                .setContext(ctx)\n                .setStave(stave)\n                .getTickables()\n                .forEach((tickable) => tickable.setStave(stave));\n            this.partVoices.push(voice);\n        });\n        this.partStaves.push(stave);\n        this.partStaveInfos.push(p);\n        return stave;\n    }\n    /**\n     * Add voices to the system with stave already assigned.\n     */\n    addVoices(voices) {\n        const ctx = this.getContext();\n        voices.forEach((voice) => {\n            voice.setContext(ctx);\n            this.partVoices.push(voice);\n        });\n    }\n    /** Format the system. */\n    format() {\n        const options_details = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(options_details);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        const debugNoteMetricsYs = [];\n        this.partStaves.forEach((part, index) => {\n            y = y + part.space(this.partStaveInfos[index].spaceAbove);\n            part.setY(y);\n            y = y + part.space(this.partStaveInfos[index].spaceBelow);\n            y = y + part.space(this.options.spaceBetweenStaves);\n            if (this.partStaveInfos[index].debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, stave: part });\n                y += 15;\n            }\n            startX = Math.max(startX, part.getNoteStartX());\n        });\n        // Re-assign Stave to update y position\n        this.partVoices.forEach((voice) => {\n            voice.getTickables().forEach((tickable) => {\n                const stave = tickable.getStave();\n                if (stave)\n                    tickable.setStave(stave);\n            });\n        });\n        // Join the voices\n        formatter.joinVoices(this.partVoices);\n        // Update the start position of all staves.\n        this.partStaves.forEach((part) => part.setNoteStartX(startX));\n        if (this.options.autoWidth && this.partVoices.length > 0) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(this.partVoices);\n            this.options.width = justifyWidth + Stave.rightPadding + (startX - this.options.x);\n            this.partStaves.forEach((part) => {\n                part.setWidth(this.options.width);\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - (startX - this.options.x)\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        if (this.partVoices.length > 0) {\n            formatter.format(this.partVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        }\n        formatter.postFormat();\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(options_details);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        this.boundingBox = new BoundingBox(this.options.x, this.options.y, this.options.width, this.lastY - this.options.y);\n        Stave.formatBegModifiers(this.partStaves);\n    }\n    /** Render the system. */\n    draw() {\n        // Render debugging information, if requested.\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            this.partVoices.forEach((voice) => {\n                voice.getTickables().forEach((tickable) => {\n                    if (tickable.getStave() === d.stave)\n                        Note.plotMetrics(ctx, tickable, d.y);\n                });\n            });\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isDot } from './typeguard';\nimport { defined, RuntimeError } from './util';\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n    const stem_through = [];\n    let group = [];\n    for (let string = 1; string <= num_lines; string++) {\n        const is_used = strings_used.indexOf(string) > -1;\n        if (!is_used) {\n            group.push(string);\n        }\n        else {\n            stem_through.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stem_through.push(group);\n    return stem_through;\n}\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n    const up_stem = stem_direction !== 1;\n    const down_stem = stem_direction !== -1;\n    const line_spacing = stave.getSpacingBetweenLines();\n    const total_lines = stave.getNumLines();\n    const stem_lines = [];\n    unused_strings.forEach((strings) => {\n        const containsLastString = strings.indexOf(total_lines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((up_stem && containsFirstString) || (down_stem && containsLastString)) {\n            return;\n        }\n        // If there's only one string in the group, push a duplicate value.\n        // We do this because we need 2 strings to convert into upper/lower y\n        // values.\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const line_ys = [];\n        // Iterate through each group string and store it's y position\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === total_lines;\n            // Get the y value for the appropriate staff line,\n            // we adjust for a 0 index array, since string numbers are index 1\n            let y = stave.getYForLine(string - 1);\n            // Unless the string is the first or last, add padding to each side\n            // of the line\n            if (index === 0 && !isTopBound) {\n                y -= line_spacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += line_spacing / 2 - 1;\n            }\n            // Store the y value\n            line_ys.push(y);\n            // Store a subsequent y value connecting this group to the main\n            // stem above/below the stave if it's the top/bottom string\n            if (stem_direction === 1 && isTopBound) {\n                line_ys.push(stem_y - 2);\n            }\n            else if (stem_direction === -1 && isBottomBound) {\n                line_ys.push(stem_y + 2);\n            }\n        });\n        // Add the sorted y values to the\n        stem_lines.push(line_ys.sort((a, b) => a - b));\n    });\n    return stem_lines;\n}\nexport class TabNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.TabNote;\n    }\n    // Initialize the TabNote with a `noteStruct` full of properties\n    // and whether to `draw_stem` when rendering the note\n    constructor(noteStruct, draw_stem = false) {\n        super(noteStruct);\n        this.glyphPropsArr = [];\n        // Return the number of the greatest string, which is the string lowest on the display\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        // Return the number of the least string, which is the string highest on the display\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false; // Renders parenthesis around notes\n        // Note properties\n        // The fret positions in the note. An array of `{ str: X, fret: X }`\n        this.positions = noteStruct.positions || [];\n        // Render Options\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: Tables.TABLATURE_FONT_SCALE, \n            // Flag to draw a stem\n            draw_stem, \n            // Flag to draw dot modifiers\n            draw_dots: draw_stem, \n            // Flag to extend the main stem through the stave and fret positions\n            draw_stem_through_stave: false, \n            // vertical shift from stave line\n            y_shift: 0, \n            // normal glyph scale\n            scale: 1.0, \n            // default tablature font\n            font: `${Font.SIZE}pt ${Font.SANS_SERIF}` });\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stem_direction) {\n            this.setStemDirection(noteStruct.stem_direction);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        // Renders parenthesis around notes\n        this.ghost = false;\n        this.updateWidth();\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n    // Often used for indicating frets that are being bent to\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    // Determine if the note has a stem\n    hasStem() {\n        if (this.render_options.draw_stem)\n            return true;\n        return false;\n    }\n    // Get the default stem extension for the note\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        if (this.stem_extension_override != null) {\n            return this.stem_extension_override;\n        }\n        if (glyphProps) {\n            return this.getStemDirection() === Stem.UP\n                ? glyphProps.tabnote_stem_up_extension\n                : glyphProps.tabnote_stem_down_extension;\n        }\n        return 0;\n    }\n    // Calculate and store the width of the note\n    updateWidth() {\n        this.glyphPropsArr = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const glyphProps = Tables.tabToGlyphProps(fret.toString(), this.render_options.scale);\n            this.glyphPropsArr.push(glyphProps);\n            this.width = Math.max(glyphProps.getWidth(), this.width);\n        }\n        // For some reason we associate a notehead glyph with a TabNote, and this\n        // glyph is used for certain width calculations. Of course, this is totally\n        // incorrect since a notehead is a poor approximation for the dimensions of\n        // a fret number which can have multiple digits. As a result, we must\n        // overwrite getWidth() to return the correct width\n        this.glyphProps.getWidth = () => this.width;\n    }\n    // Set the `stave` to the note\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        // Calculate the fret number width based on font used\n        if (ctx) {\n            this.width = 0;\n            for (let i = 0; i < this.glyphPropsArr.length; ++i) {\n                const glyphProps = this.glyphPropsArr[i];\n                const text = '' + glyphProps.text;\n                if (text.toUpperCase() !== 'X') {\n                    ctx.save();\n                    ctx.setFont(this.render_options.font);\n                    glyphProps.width = ctx.measureText(text).width;\n                    ctx.restore();\n                    glyphProps.getWidth = () => glyphProps.width;\n                }\n                this.width = Math.max(glyphProps.getWidth(), this.width);\n            }\n            this.glyphProps.getWidth = () => this.width;\n        }\n        // we subtract 1 from `line` because getYForLine expects a 0-based index,\n        // while the position.str is a 1-based index\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    // Get the fret positions for the note\n    getPositions() {\n        return this.positions;\n    }\n    // Get the default `x` and `y` coordinates for a modifier at a specific\n    // `position` at a fret position `index`\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const note_glyph_width = this.glyphProps.getWidth();\n            x = note_glyph_width / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Get the default line for rest\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        // width is already set during init()\n        this.preFormatted = true;\n    }\n    // Get the x position for the stem\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    // Get the y position for the stem\n    getStemY() {\n        const num_lines = this.checkStave().getNumLines();\n        // The decimal staff line amounts provide optimal spacing between the\n        // fret number and the stem\n        const stemUpLine = -0.5;\n        const stemDownLine = num_lines - 0.5;\n        const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    // Get the stem extents for the tabnote\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    // Draw the fal onto the context\n    drawFlag() {\n        var _a;\n        const { beam, glyphProps, render_options: { draw_stem }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam == undefined && draw_stem;\n        // Now it's the flag's turn.\n        if (glyphProps.flag && shouldDrawFlag) {\n            const flag_x = this.getStemX();\n            const flag_y = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() - (this.glyphProps ? this.glyphProps.stem_down_extension : 0)\n                : // Up stems are above the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() + (this.glyphProps ? this.glyphProps.stem_up_extension : 0);\n            // Draw the Flag\n            //this.flag?.setOptions({ category: 'flag.tabStem' });\n            (_a = this.flag) === null || _a === void 0 ? void 0 : _a.render(context, flag_x, flag_y);\n            //Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, { category: 'flag.tabStem' });\n        }\n    }\n    // Render the modifiers onto the context.\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            // Only draw the dots if enabled.\n            if (isDot(modifier) && !this.render_options.draw_dots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    // Render the stem extension through the fret positions\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.render_options.draw_stem;\n        const stemThrough = this.render_options.draw_stem_through_stave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.save();\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n            ctx.restore();\n        }\n    }\n    // Render the fret positions onto the context\n    drawPositions() {\n        var _a;\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.render_options.y_shift;\n            const glyphProps = this.glyphPropsArr[i];\n            // Center the fret text beneath the notation note head\n            const note_glyph_width = this.glyphProps.getWidth();\n            const tab_x = x + note_glyph_width / 2 - glyphProps.getWidth() / 2;\n            // FIXME: Magic numbers.\n            ctx.clearRect(tab_x - 2, y - 3, glyphProps.getWidth() + 4, 6);\n            if (glyphProps.code) {\n                Glyph.renderGlyph(ctx, tab_x, y, this.render_options.glyph_font_scale * this.render_options.scale, glyphProps.code);\n            }\n            else {\n                ctx.save();\n                ctx.setFont(this.render_options.font);\n                const text = (_a = glyphProps.text) !== null && _a !== void 0 ? _a : '';\n                ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n                ctx.restore();\n            }\n        }\n    }\n    // The main rendering function for the entire note.\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const render_stem = this.beam == undefined && this.render_options.draw_stem;\n        this.applyStyle();\n        ctx.openGroup('tabnote', this.getAttribute('id'), { pointerBBox: true });\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && render_stem) {\n            const stem_x = this.getStemX();\n            this.stem.setNoteHeadXBounds(stem_x, stem_x);\n            this.stem.setContext(ctx).draw();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return Category.TabStave;\n    }\n    constructor(x, y, width, options) {\n        const tab_options = Object.assign({ spacing_between_lines_px: 13, num_lines: 6, top_text_position: 1 }, options);\n        super(x, y, width, tab_options);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    // Deprecated\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// This file implements `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Renderer } from './renderer';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nclass TextBracket extends Element {\n    static get CATEGORY() {\n        return Category.TextBracket;\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    /**\n     * @deprecated Use `TextBracket.Position` instead.\n     */\n    static get Positions() {\n        L('Positions is deprecated, use TextBracketPosition instead.');\n        return TextBracketPosition;\n    }\n    /**\n     * @deprecated Use `TextBracket.PositionString` instead.\n     */\n    static get PositionsString() {\n        L('PositionsString is deprecated, use PositionString instead.');\n        return TextBracket.PositionString;\n    }\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.text = text;\n        this.superscript = superscript;\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.resetFont();\n        this.render_options = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            line_width: 1,\n            show_bracket: true,\n            bracket_height: 8,\n            // In the BOTTOM position, the bracket line can extend\n            // under the superscript.\n            underline_superscript: true,\n        };\n    }\n    /**\n     * Apply the text backet styling to the provided context.\n     * @param ctx\n     * @returns this\n     */\n    applyStyle(ctx) {\n        ctx.setFont(this.font);\n        const options = this.render_options;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.line_width);\n        return this;\n    }\n    // Set whether the bracket line should be `dashed`. You can also\n    // optionally set the `dash` pattern by passing in an array of numbers\n    setDashed(dashed, dash) {\n        this.render_options.dashed = dashed;\n        if (dash)\n            this.render_options.dash = dash;\n        return this;\n    }\n    // Set the rendering `context` for the octave bracket\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Draw the octave bracket on the rendering context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        // Get the preliminary start and stop coordintates for the bracket\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracket_height = this.render_options.bracket_height * this.position;\n        ctx.save();\n        this.applyStyle(ctx);\n        // Draw text\n        ctx.fillText(this.text, start.x, start.y);\n        // Get the width and height for the octave number\n        const main_measure = ctx.measureText(this.text);\n        const main_width = main_measure.width;\n        const main_height = main_measure.height;\n        // Calculate the y position for the super script\n        const super_y = start.y - main_height / 2.5;\n        // We called this.resetFont() in the constructor, so we know this.textFont is available.\n        // eslint-disable-next-line\n        const { family, size, weight, style } = this.textFont;\n        // To draw the superscript, we scale the font size by 1/1.4.\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n        // Determine width and height of the superscript\n        const super_measure = ctx.measureText(this.superscript);\n        const super_width = super_measure.width;\n        const super_height = super_measure.height;\n        // Setup initial coordinates for the bracket line\n        let start_x = start.x;\n        let line_y = super_y;\n        const end_x = stop.x + this.stop.getGlyphProps().getWidth();\n        // Adjust x and y coordinates based on position\n        if (this.position === TextBracketPosition.TOP) {\n            start_x += main_width + super_width + 5;\n            line_y -= super_height / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            line_y += super_height / 2.7;\n            start_x += main_width + 2;\n            if (!this.render_options.underline_superscript) {\n                start_x += super_width;\n            }\n        }\n        if (this.render_options.dashed) {\n            // Main line\n            Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n            // Ending Bracket\n            if (this.render_options.show_bracket) {\n                Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(start_x, line_y);\n            // Main line\n            ctx.lineTo(end_x, line_y);\n            if (this.render_options.show_bracket) {\n                // Ending bracket\n                ctx.lineTo(end_x, line_y + bracket_height);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n}\nTextBracket.DEBUG = false;\nTextBracket.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 15,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.ITALIC,\n};\nexport { TextBracket };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('Vex.Flow.TextDynamics', args);\n}\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nclass TextDynamics extends Note {\n    static get CATEGORY() {\n        return Category.TextDynamics;\n    }\n    /** The glyph data for each dynamics letter. */\n    static get GLYPHS() {\n        return {\n            f: {\n                code: 'dynamicForte',\n                width: 12,\n            },\n            p: {\n                code: 'dynamicPiano',\n                width: 14,\n            },\n            m: {\n                code: 'dynamicMezzo',\n                width: 17,\n            },\n            s: {\n                code: 'dynamicSforzando',\n                width: 10,\n            },\n            z: {\n                code: 'dynamicZ',\n                width: 12,\n            },\n            r: {\n                code: 'dynamicRinforzando',\n                width: 12,\n            },\n        };\n    }\n    /**\n     * Create the dynamics marking.\n     *\n     * A `TextDynamics` object inherits from `Note` so that it can be formatted\n     * within a `Voice`.\n     *\n     * @param noteStruct an object that contains a `duration` property and a\n     * `sequence` of letters that represents the letters to render.\n     */\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.sequence = (noteStruct.text || '').toLowerCase();\n        this.line = noteStruct.line || 0;\n        this.glyphs = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { glyph_font_size: Tables.NOTATION_FONT_SCALE });\n        L('New Dynamics Text: ', this.sequence);\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Preformat the dynamics text. */\n    preFormat() {\n        let total_width = 0;\n        // length of this.glyphs must be <=\n        // length of this.sequence, so if we're formatted before\n        // create new glyphs.\n        this.glyphs = [];\n        // Iterate through each letter\n        this.sequence.split('').forEach((letter) => {\n            // Get the glyph data for the letter\n            const glyph_data = TextDynamics.GLYPHS[letter];\n            if (!glyph_data)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            const size = defined(this.render_options.glyph_font_size);\n            const glyph = new Glyph(glyph_data.code, size, { category: 'textNote' });\n            // Add the glyph\n            this.glyphs.push(glyph);\n            total_width += glyph_data.width;\n        });\n        // Store the width of the text\n        this.setWidth(total_width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the dynamics text on the rendering context. */\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        let letter_x = x;\n        this.glyphs.forEach((glyph, index) => {\n            const current_letter = this.sequence[index];\n            glyph.render(this.checkContext(), letter_x, y);\n            letter_x += TextDynamics.GLYPHS[current_letter].width;\n        });\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\nTextDynamics.DEBUG = false;\nexport { TextDynamics };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nimport { Category } from './typeguard';\nexport class TimeSigNote extends Note {\n    static get CATEGORY() {\n        return Category.TimeSigNote;\n    }\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        this.timeSig = new TimeSignature(timeSpec, customPadding);\n        this.setWidth(this.timeSig.getGlyph().getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        const tsGlyph = this.timeSig.getGlyph();\n        if (!tsGlyph.getContext()) {\n            tsGlyph.setContext(ctx);\n        }\n        tsGlyph.setStave(stave);\n        tsGlyph.setYShift(stave.getYForLine(2) - stave.getYForGlyphs());\n        tsGlyph.renderToStave(this.getAbsoluteX());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { log } from './util';\nimport { Vibrato } from './vibrato';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('Vex.Flow.VibratoBracket', args);\n}\n/** `VibratoBracket` renders vibrato effect between two notes. */\nclass VibratoBracket extends Element {\n    static get CATEGORY() {\n        return Category.VibratoBracket;\n    }\n    /**\n     * Either the stop or start note must be set, or both of them.\n     * An undefined value for the start or stop note indicates that the vibrato\n     * is drawn from the beginning or until the end of the stave accordingly.\n     */\n    constructor(bracket_data) {\n        super();\n        if (bracket_data.start)\n            this.start = bracket_data.start;\n        if (bracket_data.stop)\n            this.stop = bracket_data.stop;\n        this.line = 1;\n        this.render_options = {\n            harsh: false,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n            vibrato_width: 0,\n        };\n    }\n    /** Set line position of the vibrato bracket. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Set harsh vibrato bracket. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Draw the vibrato bracket on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        // If start note is not set then vibrato will be drawn\n        // from the beginning of the stave\n        const start_x = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        // If stop note is not set then vibrato will be drawn\n        // until the end of the stave\n        const stop_x = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.render_options.vibrato_width = stop_x - start_x;\n        L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n        Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\nVibratoBracket.DEBUG = false;\nexport { VibratoBracket };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { ChordSymbol } from './chordsymbol';\nimport { ClefNote } from './clefnote';\nimport { Curve } from './curve';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { KeySigNote } from './keysignote';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StringNumber } from './stringnumber';\nimport { System } from './system';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSigNote } from './timesignote';\nimport { Tuplet } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nimport { isHTMLCanvas } from './web';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('Vex.Flow.Factory', args);\n}\n/**\n * Factory implements a high level API around VexFlow.\n */\nclass Factory {\n    /**\n     * Static simplified function to access constructor without providing FactoryOptions\n     *\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = Vex.Flow.Factory.newFromElementId('boo', 1200, 600 );`\n     */\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    /**\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});`\n     */\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n            font: Factory.TEXT_FONT,\n        };\n        this.setOptions(options);\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined; // current stave\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId == null) {\n            return;\n        }\n        if (elementId == '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            // We use a custom type check here, because node-canvas mimics canvas,\n            // but is not an instance of window.HTMLCanvasElement.\n            // In fact, `window` might be undefined here.\n            // See: https://www.npmjs.com/package/canvas\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    /** Return pixels from current stave spacing. */\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center', kerning: true, reportWidth: true }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        chordSymbol.setEnableKerning(p.kerning);\n        chordSymbol.setReportWidth(p.reportWidth);\n        // There is a default font based on the engraving font.  Only set then\n        // font if it is specific, else use the default\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        var _a;\n        const articulation = new Articulation((_a = params === null || params === void 0 ? void 0 : params.type) !== null && _a !== void 0 ? _a : 'a.');\n        if ((params === null || params === void 0 ? void 0 : params.position) != undefined)\n            articulation.setPosition(params.position);\n        if ((params === null || params === void 0 ? void 0 : params.betweenLines) != undefined)\n            articulation.setBetweenLines(params.betweenLines);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    Ornament(type, params) {\n        const options = Object.assign({ type, position: 0, accidental: '' }, params);\n        const ornament = new Ornament(type);\n        ornament.setPosition(options.position);\n        if (options.upperAccidental) {\n            ornament.setUpperAccidental(options.upperAccidental);\n        }\n        if (options.lowerAccidental) {\n            ornament.setLowerAccidental(options.lowerAccidental);\n        }\n        if (typeof options.delayed !== 'undefined') {\n            ornament.setDelayed(options.delayed);\n        }\n        ornament.setContext(this.context);\n        return ornament;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params, drawCircle = true) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        stringNumber.setDrawCircle(drawCircle);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.number_of_measures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.harsh)\n            vibratoBracket.setHarsh(params.options.harsh);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    /**\n     * Creates EasyScore. Normally the first step after constructing a Factory. For example:\n     * ```\n     * const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});\n     * const score: EasyScore = vf.EasyScore();\n     * ```\n     * @param options.factory optional instance of Factory\n     * @param options.builder instance of Builder\n     * @param options.commitHooks function to call after a note element is created\n     * @param options.throwOnError throw error in case of parsing error\n     */\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    /** Render the score. */\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).draw());\n        this.voices.forEach((v) => v.setContext(ctx).draw());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).draw();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).draw());\n        this.reset();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`. */\nFactory.DEBUG = false;\n/** Default text font. */\nFactory.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\nexport { Factory };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { TabNote } from './tabnote';\nimport { Category } from './typeguard';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return Category.GraceTabNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // vertical shift from stave line\n            y_shift: 0.3, \n            // grace glyph scale\n            scale: 0.6, \n            // grace tablature font\n            font: `7.5pt ${Font.SANS_SERIF}` });\n        this.updateWidth();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\nimport { Music } from './music';\nimport { RuntimeError } from './util';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const is_supported_type = Music.scaleTypes[this.keyParts.type];\n        if (!is_supported_type) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.root_indices[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        // First look for matching note in our altered scale\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in our altered scale\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote != null) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in the original scale\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote != null) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        // Then try to unmodify a currently modified note.\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        // Last resort -- shitshoot\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Author: Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either crescendo or decrescendo.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nclass StaveHairpin extends Element {\n    static get CATEGORY() {\n        return Category.StaveHairpin;\n    }\n    /* Helper function to convert ticks into pixels.\n     * Requires a Formatter with voices joined and formatted (to\n     * get pixels per tick)\n     *\n     * options is struct that has:\n     *\n     *  {\n     *   height: px,\n     *   y_shift: px,         // vertical offset\n     *   left_shift_ticks: 0, // left horizontal offset expressed in ticks\n     *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n     *  }\n     *\n     **/\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt == null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const l_shift_px = ppt * ((_a = options.left_shift_ticks) !== null && _a !== void 0 ? _a : 0);\n        const r_shift_px = ppt * ((_b = options.right_shift_ticks) !== null && _b !== void 0 ? _b : 0);\n        const hairpin_options = {\n            height: options.height,\n            y_shift: options.y_shift,\n            left_shift_px: l_shift_px,\n            right_shift_px: r_shift_px,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n        new StaveHairpin({\n            first_note: notes.first_note,\n            last_note: notes.last_note,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpin_options)\n            .setPosition(position)\n            .draw();\n    }\n    /**\n     * Create a new hairpin from the specified notes.\n     *\n     * @param {!Object} notes The notes to tie up.\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     * @param {!Object} type The type of hairpin\n     */\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.render_options = {\n            height: 10,\n            y_shift: 0,\n            left_shift_px: 0,\n            right_shift_px: 0,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        if (options.height != null &&\n            options.y_shift != null &&\n            options.left_shift_px != null &&\n            options.right_shift_px != null) {\n            this.render_options = options;\n        }\n        return this;\n    }\n    /**\n     * Set the notes to attach this hairpin to.\n     *\n     * @param {!Object} notes The start and end notes.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.last_note = notes.last_note;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.render_options.y_shift + 20;\n        let y_shift = params.first_y;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            y_shift = params.first_y - params.staff_height;\n        }\n        const l_shift = this.render_options.left_shift_px;\n        const r_shift = this.render_options.right_shift_px;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.first_note;\n        const lastNote = this.last_note;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            first_x: start.x,\n            last_x: end.x,\n            first_y: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            last_y: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staff_height: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\nexport { StaveHairpin };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { TabTie } from './tabtie';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nclass TabSlide extends TabTie {\n    static get CATEGORY() {\n        return Category.TabSlide;\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    /**\n     * @param notes is a struct of the form:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     * @param notes.first_note the starting note of the slide\n     * @param notes.last_note the ending note of the slide\n     * @param notes.first_indices specifies which string + fret positions of the TabNote are used in this slide. zero indexed.\n     * @param notes.last_indices currently unused. we assume it's the same as first_indices.\n     *\n     * @param direction TabSlide.SLIDE_UP or TabSlide.SLIDE_DOWN\n     */\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        // Determine the direction automatically if it is not provided.\n        if (!direction) {\n            let first_fret = notes.first_note.getPositions()[0].fret;\n            if (typeof first_fret === 'string') {\n                first_fret = parseInt(first_fret, 10);\n            }\n            let last_fret = notes.last_note.getPositions()[0].fret;\n            if (typeof last_fret === 'string') {\n                last_fret = parseInt(last_fret, 10);\n            }\n            // If either of the frets are 'X', parseInt() above will return NaN.\n            // Choose TabSlide.SLIDE_UP by default.\n            if (isNaN(first_fret) || isNaN(last_fret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = first_fret > last_fret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.render_options.cp1 = 11;\n        this.render_options.cp2 = 14;\n        this.render_options.y_shift = 0.5;\n        this.resetFont();\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const first_x_px = params.first_x_px;\n        const first_ys = params.first_ys;\n        const last_x_px = params.last_x_px;\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const slide_y = first_ys[first_indices[i]] + this.render_options.y_shift;\n            if (isNaN(slide_y)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(first_x_px, slide_y + 3 * direction);\n            ctx.lineTo(last_x_px, slide_y - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\nTabSlide.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\nexport { TabSlide };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n// MIT License\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n    static get CATEGORY() {\n        return Category.Tremolo;\n    }\n    /**\n     * @param num number of bars\n     */\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.code = 'tremolo1';\n        // big strokes scales initialised to 1 (no scale)\n        this.y_spacing_scale = 1;\n        this.extra_stroke_scale = 1;\n    }\n    /** Draw the tremolo on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let x = start.x;\n        const gn = isGraceNote(note);\n        const scale = gn ? GraceNote.SCALE : 1;\n        const category = `tremolo.${gn ? 'grace' : 'default'}`;\n        const musicFont = Tables.currentMusicFont();\n        let y_spacing = musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n        // add y_spacing_scale for big strokes (#1258)\n        y_spacing *= this.y_spacing_scale;\n        const height = this.num * y_spacing;\n        let y = note.getStemExtents().baseY - height;\n        if (stemDirection < 0) {\n            y += musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n        }\n        else {\n            y += musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n        }\n        const fontScale = (_a = musicFont.lookupMetric(`${category}.point`)) !== null && _a !== void 0 ? _a : Note.getPoint(gn ? 'grace' : 'default');\n        x += musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n        for (let i = 0; i < this.num; ++i) {\n            Glyph.renderGlyph(ctx, x, y, fontScale, this.code, { category, scale: this.extra_stroke_scale });\n            y += y_spacing;\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n        };\n    }\n    /**\n     * Constructor.\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        // Default to standard tuning.\n        this.setTuning(tuningString);\n    }\n    /** Return the note number associated to the note string. */\n    noteToInteger(noteString) {\n        var _a;\n        return (_a = Tables.keyProperties(noteString).int_value) !== null && _a !== void 0 ? _a : -1;\n    }\n    /**\n     * Set tuning identified by tuning name (eg. 'dagdad')\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    /** Return the note number associated with a tablature string. */\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    /** Return the note number associated with a tablature string and fret. */\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    /** Return the note string associated with tablature string and fret. */\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { CanvasContext } from './canvascontext';\nimport { ChordSymbol, ChordSymbolHorizontalJustify, ChordSymbolVerticalJustify, SymbolModifiers, SymbolTypes, } from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve, CurvePosition } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { Repetition } from './staverepetition';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Volta, VoltaType } from './stavevolta';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { SVGContext } from './svgcontext';\nimport { System } from './system';\nimport { Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket, TextBracketPosition } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextFormatter } from './textformatter';\nimport { TextJustification, TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { DATE, ID, VERSION } from './version';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice, VoiceMode } from './voice';\nclass Flow {\n    static get BUILD() {\n        return {\n            /** version number. */\n            VERSION: VERSION,\n            /** git commit ID that this library was built from. */\n            ID: ID,\n            /** The date when this library was compiled. */\n            DATE: DATE,\n        };\n    }\n    /**\n     * Examples:\n     * ```\n     * Vex.Flow.setMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Bravura', 'Gonville');\n     * ```\n     *\n     * **CASE 1**: You are using `vexflow.js`, which includes all music fonts (Bravura, Gonville, Petaluma, Custom).\n     * In this case, calling this method is optional, since VexFlow already defaults to a music font stack of:\n     * 'Bravura', 'Gonville', 'Custom'.\n     *\n     * **CASE 2**: You are using `vexflow-bravura.js` or `vexflow-petaluma.js` or `vexflow-gonville.js`,\n     * which includes a single music font. Calling this method is unnecessary.\n     *\n     * **CASE 3**: You are using the light weight `vexflow-core.js` to take advantage of lazy loading for fonts.\n     * In this case, the default music font stack is empty.\n     * Example:\n     * ```\n     * await Vex.Flow.fetchMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Petaluma');\n     * ... (do VexFlow stuff) ...\n     * ```\n     * See `demos/fonts/` for more examples.\n     *\n     * @returns an array of Font objects corresponding to the provided `fontNames`.\n     */\n    static setMusicFont(...fontNames) {\n        // Convert the array of font names into an array of Font objects.\n        const fonts = fontNames.map((fontName) => Font.load(fontName));\n        Tables.MUSIC_FONT_STACK = fonts;\n        Glyph.MUSIC_FONT_STACK = fonts.slice();\n        Glyph.CURRENT_CACHE_KEY = fontNames.join(',');\n        return fonts;\n    }\n    /**\n     * Used with vexflow-core which supports dynamic font loading.\n     */\n    // eslint-disable-next-line\n    static fetchMusicFont(fontName, fontModuleOrPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The default implementation does nothing.\n            // See vexflow-core.ts for the implementation that vexflow-core.js uses.\n        });\n    }\n    static getMusicFont() {\n        const fonts = Tables.MUSIC_FONT_STACK;\n        return fonts.map((font) => font.getName());\n    }\n    static getMusicFontStack() {\n        return Tables.MUSIC_FONT_STACK;\n    }\n    static get RENDER_PRECISION_PLACES() {\n        return Tables.RENDER_PRECISION_PLACES;\n    }\n    static set RENDER_PRECISION_PLACES(precision) {\n        Tables.RENDER_PRECISION_PLACES = precision;\n    }\n    static get SOFTMAX_FACTOR() {\n        return Tables.SOFTMAX_FACTOR;\n    }\n    static set SOFTMAX_FACTOR(factor) {\n        Tables.SOFTMAX_FACTOR = factor;\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return Tables.STAVE_LINE_THICKNESS;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        Tables.STAVE_LINE_THICKNESS = value;\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get accidentalMap() {\n        return Tables.accidentalMap;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    // eslint-disable-next-line\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nFlow.Accidental = Accidental;\nFlow.Annotation = Annotation;\nFlow.Articulation = Articulation;\nFlow.Barline = Barline;\nFlow.BarNote = BarNote;\nFlow.Beam = Beam;\nFlow.Bend = Bend;\nFlow.BoundingBox = BoundingBox;\nFlow.BoundingBoxComputation = BoundingBoxComputation;\nFlow.CanvasContext = CanvasContext;\nFlow.ChordSymbol = ChordSymbol;\nFlow.Clef = Clef;\nFlow.ClefNote = ClefNote;\nFlow.Crescendo = Crescendo;\nFlow.Curve = Curve;\nFlow.Dot = Dot;\nFlow.EasyScore = EasyScore;\nFlow.Element = Element;\nFlow.Factory = Factory;\nFlow.Font = Font;\nFlow.Formatter = Formatter;\nFlow.Fraction = Fraction;\nFlow.FretHandFinger = FretHandFinger;\nFlow.GhostNote = GhostNote;\nFlow.Glyph = Glyph;\nFlow.GlyphNote = GlyphNote;\nFlow.GraceNote = GraceNote;\nFlow.GraceNoteGroup = GraceNoteGroup;\nFlow.GraceTabNote = GraceTabNote;\nFlow.KeyManager = KeyManager;\nFlow.KeySignature = KeySignature;\nFlow.KeySigNote = KeySigNote;\nFlow.Modifier = Modifier;\nFlow.ModifierContext = ModifierContext;\nFlow.MultiMeasureRest = MultiMeasureRest;\nFlow.Music = Music;\nFlow.Note = Note;\nFlow.NoteHead = NoteHead;\nFlow.NoteSubGroup = NoteSubGroup;\nFlow.Ornament = Ornament;\nFlow.Parenthesis = Parenthesis;\nFlow.Parser = Parser;\nFlow.PedalMarking = PedalMarking;\nFlow.Registry = Registry;\nFlow.RenderContext = RenderContext;\nFlow.Renderer = Renderer;\nFlow.RepeatNote = RepeatNote;\nFlow.Repetition = Repetition;\nFlow.Stave = Stave;\nFlow.StaveConnector = StaveConnector;\nFlow.StaveHairpin = StaveHairpin;\nFlow.StaveLine = StaveLine;\nFlow.StaveModifier = StaveModifier;\nFlow.StaveNote = StaveNote;\nFlow.StaveTempo = StaveTempo;\nFlow.StaveText = StaveText;\nFlow.StaveTie = StaveTie;\nFlow.Stem = Stem;\nFlow.StringNumber = StringNumber;\nFlow.Stroke = Stroke;\nFlow.SVGContext = SVGContext;\nFlow.System = System;\nFlow.TabNote = TabNote;\nFlow.TabSlide = TabSlide;\nFlow.TabStave = TabStave;\nFlow.TabTie = TabTie;\nFlow.TextBracket = TextBracket;\nFlow.TextDynamics = TextDynamics;\nFlow.TextFormatter = TextFormatter;\nFlow.TextNote = TextNote;\nFlow.TickContext = TickContext;\nFlow.TimeSignature = TimeSignature;\nFlow.TimeSigNote = TimeSigNote;\nFlow.Tremolo = Tremolo;\nFlow.Tuning = Tuning;\nFlow.Tuplet = Tuplet;\nFlow.Vibrato = Vibrato;\nFlow.VibratoBracket = VibratoBracket;\nFlow.Voice = Voice;\nFlow.Volta = Volta;\n// Exported Enums.\n// Sorted by the module / file they are exported from.\nFlow.AnnotationHorizontalJustify = AnnotationHorizontalJustify;\nFlow.AnnotationVerticalJustify = AnnotationVerticalJustify;\nFlow.ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\nFlow.ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\nFlow.SymbolTypes = SymbolTypes;\nFlow.SymbolModifiers = SymbolModifiers;\nFlow.CurvePosition = CurvePosition;\nFlow.FontWeight = FontWeight;\nFlow.FontStyle = FontStyle;\nFlow.ModifierPosition = ModifierPosition;\nFlow.RendererBackends = RendererBackends;\nFlow.RendererLineEndType = RendererLineEndType;\nFlow.BarlineType = BarlineType;\nFlow.StaveModifierPosition = StaveModifierPosition;\nFlow.VoltaType = VoltaType;\nFlow.TextBracketPosition = TextBracketPosition;\nFlow.TextJustification = TextJustification;\nFlow.VoiceMode = VoiceMode;\nexport { Flow };\n","export const VERSION = '4.2.0-rc.0';\nexport const ID = 'fa66018377f6514021e705f5cd47d4050e93e104';\nexport const DATE = '2023-06-05T21:03:29.286Z';\n","export const PetalumaScriptFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 250,\n            y_min: 0,\n            y_max: 500,\n            ha: 500,\n            leftSideBearing: 0,\n            advanceWidth: 250,\n        },\n        '0': {\n            x_min: 33,\n            x_max: 534,\n            y_min: -13,\n            y_max: 751,\n            ha: 764,\n            leftSideBearing: 33,\n            advanceWidth: 570,\n        },\n        '1': {\n            x_min: 48,\n            x_max: 235,\n            y_min: -17,\n            y_max: 734,\n            ha: 751,\n            leftSideBearing: 48,\n            advanceWidth: 286,\n        },\n        '2': {\n            x_min: 56,\n            x_max: 571,\n            y_min: -19,\n            y_max: 741,\n            ha: 760,\n            leftSideBearing: 56,\n            advanceWidth: 626,\n        },\n        '3': {\n            x_min: 50,\n            x_max: 528,\n            y_min: -7,\n            y_max: 731,\n            ha: 738,\n            leftSideBearing: 50,\n            advanceWidth: 589,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 564,\n            y_min: -13,\n            y_max: 743,\n            ha: 756,\n            leftSideBearing: 38,\n            advanceWidth: 614,\n        },\n        '5': {\n            x_min: 42,\n            x_max: 601,\n            y_min: -34,\n            y_max: 743,\n            ha: 777,\n            leftSideBearing: 42,\n            advanceWidth: 648,\n        },\n        '6': {\n            x_min: 47,\n            x_max: 606,\n            y_min: -16,\n            y_max: 743,\n            ha: 759,\n            leftSideBearing: 47,\n            advanceWidth: 667,\n        },\n        '7': {\n            x_min: 47,\n            x_max: 567,\n            y_min: 5,\n            y_max: 739,\n            ha: 734,\n            leftSideBearing: 0,\n            advanceWidth: 615,\n        },\n        '8': {\n            x_min: 40,\n            x_max: 541,\n            y_min: -15,\n            y_max: 752,\n            ha: 767,\n            leftSideBearing: 40,\n            advanceWidth: 585,\n        },\n        '9': {\n            x_min: 40,\n            x_max: 537,\n            y_min: -52,\n            y_max: 736,\n            ha: 788,\n            leftSideBearing: 40,\n            advanceWidth: 592,\n        },\n        '!': {\n            x_min: 49,\n            x_max: 180,\n            y_min: -7,\n            y_max: 761,\n            ha: 768,\n            leftSideBearing: 49,\n            advanceWidth: 230,\n        },\n        '\"': {\n            x_min: 39,\n            x_max: 304,\n            y_min: 596,\n            y_max: 804,\n            ha: 208,\n            leftSideBearing: 39,\n            advanceWidth: 353,\n        },\n        '#': {\n            x_min: 33,\n            x_max: 599,\n            y_min: -8,\n            y_max: 765,\n            ha: 773,\n            leftSideBearing: 33,\n            advanceWidth: 648,\n        },\n        $: {\n            x_min: 53,\n            x_max: 495,\n            y_min: -111,\n            y_max: 823,\n            ha: 934,\n            leftSideBearing: 53,\n            advanceWidth: 560,\n        },\n        '%': {\n            x_min: 35,\n            x_max: 656,\n            y_min: -128,\n            y_max: 808,\n            ha: 936,\n            leftSideBearing: 35,\n            advanceWidth: 711,\n        },\n        '&': {\n            x_min: 53,\n            x_max: 441,\n            y_min: -3,\n            y_max: 753,\n            ha: 756,\n            leftSideBearing: 53,\n            advanceWidth: 500,\n        },\n        \"'\": {\n            x_min: 43,\n            x_max: 161,\n            y_min: 590,\n            y_max: 811,\n            ha: 221,\n            leftSideBearing: 43,\n            advanceWidth: 217,\n        },\n        '(': {\n            x_min: 41,\n            x_max: 311,\n            y_min: -36,\n            y_max: 845,\n            ha: 881,\n            leftSideBearing: 41,\n            advanceWidth: 308,\n        },\n        ')': {\n            x_min: -8,\n            x_max: 257,\n            y_min: -21,\n            y_max: 852,\n            ha: 873,\n            leftSideBearing: -8,\n            advanceWidth: 280,\n        },\n        '*': {\n            x_min: 59,\n            x_max: 539,\n            y_min: 175,\n            y_max: 589,\n            ha: 414,\n            leftSideBearing: 59,\n            advanceWidth: 601,\n        },\n        '+': {\n            x_min: 33,\n            x_max: 361,\n            y_min: 180,\n            y_max: 587,\n            ha: 407,\n            leftSideBearing: 33,\n            advanceWidth: 400,\n        },\n        ',': {\n            x_min: 15,\n            x_max: 176,\n            y_min: -129,\n            y_max: 92,\n            ha: 221,\n            leftSideBearing: 15,\n            advanceWidth: 205,\n        },\n        '-': {\n            x_min: 40,\n            x_max: 380,\n            y_min: 317,\n            y_max: 452,\n            ha: 135,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '.': {\n            x_min: 48,\n            x_max: 185,\n            y_min: -56,\n            y_max: 84,\n            ha: 140,\n            leftSideBearing: 48,\n            advanceWidth: 227,\n        },\n        '/': {\n            x_min: -58,\n            x_max: 654,\n            y_min: -122,\n            y_max: 844,\n            ha: 966,\n            leftSideBearing: -58,\n            advanceWidth: 626,\n        },\n        ':': {\n            x_min: 65,\n            x_max: 225,\n            y_min: 97,\n            y_max: 536,\n            ha: 439,\n            leftSideBearing: 65,\n            advanceWidth: 302,\n        },\n        ';': {\n            x_min: 13,\n            x_max: 295,\n            y_min: -139,\n            y_max: 536,\n            ha: 675,\n            leftSideBearing: 13,\n            advanceWidth: 334,\n        },\n        '<': {\n            x_min: 28,\n            x_max: 438,\n            y_min: -1,\n            y_max: 607,\n            ha: 608,\n            leftSideBearing: 28,\n            advanceWidth: 475,\n        },\n        '=': {\n            x_min: 40,\n            x_max: 383,\n            y_min: 199.9598640852289,\n            y_max: 541,\n            ha: 341.0401359147711,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '>': {\n            x_min: 35,\n            x_max: 421,\n            y_min: 28,\n            y_max: 632,\n            ha: 604,\n            leftSideBearing: 35,\n            advanceWidth: 466,\n        },\n        '?': {\n            x_min: 45,\n            x_max: 548,\n            y_min: -17,\n            y_max: 767,\n            ha: 784,\n            leftSideBearing: 45,\n            advanceWidth: 592,\n        },\n        '@': {\n            x_min: 51,\n            x_max: 730,\n            y_min: -78,\n            y_max: 753,\n            ha: 831,\n            leftSideBearing: 51,\n            advanceWidth: 781,\n        },\n        A: {\n            x_min: 37,\n            x_max: 554,\n            y_min: -4,\n            y_max: 746,\n            ha: 750,\n            leftSideBearing: 37,\n            advanceWidth: 617,\n        },\n        B: {\n            x_min: 37,\n            x_max: 532,\n            y_min: 3,\n            y_max: 783,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 579,\n        },\n        C: {\n            x_min: 37,\n            x_max: 583,\n            y_min: -3,\n            y_max: 775,\n            ha: 778,\n            leftSideBearing: 37,\n            advanceWidth: 623,\n        },\n        D: {\n            x_min: 50,\n            x_max: 530,\n            y_min: -15,\n            y_max: 749,\n            ha: 764,\n            leftSideBearing: 50,\n            advanceWidth: 579,\n        },\n        E: {\n            x_min: 45,\n            x_max: 531,\n            y_min: -1,\n            y_max: 743,\n            ha: 744,\n            leftSideBearing: 45,\n            advanceWidth: 585,\n        },\n        F: {\n            x_min: 45,\n            x_max: 459,\n            y_min: 23,\n            y_max: 727,\n            ha: 704,\n            leftSideBearing: 45,\n            advanceWidth: 510,\n        },\n        G: {\n            x_min: 31,\n            x_max: 577,\n            y_min: -8,\n            y_max: 733,\n            ha: 741,\n            leftSideBearing: 31,\n            advanceWidth: 611,\n        },\n        H: {\n            x_min: 37,\n            x_max: 493,\n            y_min: -22,\n            y_max: 758,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 535,\n        },\n        I: {\n            x_min: 47,\n            x_max: 501,\n            y_min: -3,\n            y_max: 731,\n            ha: 734,\n            leftSideBearing: 47,\n            advanceWidth: 541,\n        },\n        J: {\n            x_min: 33,\n            x_max: 531,\n            y_min: -23,\n            y_max: 725,\n            ha: 748,\n            leftSideBearing: 33,\n            advanceWidth: 573,\n        },\n        K: {\n            x_min: 43,\n            x_max: 505,\n            y_min: -10,\n            y_max: 740,\n            ha: 750,\n            leftSideBearing: 43,\n            advanceWidth: 560,\n        },\n        L: {\n            x_min: 49,\n            x_max: 457,\n            y_min: -2,\n            y_max: 746,\n            ha: 748,\n            leftSideBearing: 49,\n            advanceWidth: 510,\n        },\n        M: {\n            x_min: 35,\n            x_max: 699,\n            y_min: 1,\n            y_max: 744,\n            ha: 743,\n            leftSideBearing: 35,\n            advanceWidth: 743,\n        },\n        N: {\n            x_min: 34,\n            x_max: 533,\n            y_min: -17,\n            y_max: 761,\n            ha: 778,\n            leftSideBearing: 34,\n            advanceWidth: 579,\n        },\n        O: {\n            x_min: 41,\n            x_max: 608,\n            y_min: -5,\n            y_max: 735,\n            ha: 740,\n            leftSideBearing: 41,\n            advanceWidth: 667,\n        },\n        P: {\n            x_min: 53,\n            x_max: 451,\n            y_min: -18,\n            y_max: 735,\n            ha: 753,\n            leftSideBearing: 53,\n            advanceWidth: 497,\n        },\n        Q: {\n            x_min: 40,\n            x_max: 599,\n            y_min: -67,\n            y_max: 744,\n            ha: 811,\n            leftSideBearing: 40,\n            advanceWidth: 648,\n        },\n        R: {\n            x_min: 39,\n            x_max: 487,\n            y_min: 16,\n            y_max: 735,\n            ha: 719,\n            leftSideBearing: 39,\n            advanceWidth: 535,\n        },\n        S: {\n            x_min: 35,\n            x_max: 552,\n            y_min: -47,\n            y_max: 708,\n            ha: 755,\n            leftSideBearing: 35,\n            advanceWidth: 604,\n        },\n        T: {\n            x_min: 26,\n            x_max: 656,\n            y_min: -13,\n            y_max: 718,\n            ha: 731,\n            leftSideBearing: 26,\n            advanceWidth: 705,\n        },\n        U: {\n            x_min: 41,\n            x_max: 518,\n            y_min: -20,\n            y_max: 748,\n            ha: 768,\n            leftSideBearing: 41,\n            advanceWidth: 567,\n        },\n        V: {\n            x_min: 47,\n            x_max: 509,\n            y_min: -26,\n            y_max: 744,\n            ha: 770,\n            leftSideBearing: 47,\n            advanceWidth: 567,\n        },\n        W: {\n            x_min: 44,\n            x_max: 789,\n            y_min: -35,\n            y_max: 720,\n            ha: 755,\n            leftSideBearing: 44,\n            advanceWidth: 833,\n        },\n        X: {\n            x_min: 63,\n            x_max: 635,\n            y_min: -10,\n            y_max: 745,\n            ha: 755,\n            leftSideBearing: 63,\n            advanceWidth: 680,\n        },\n        Y: {\n            x_min: 43,\n            x_max: 503,\n            y_min: -21,\n            y_max: 734,\n            ha: 755,\n            leftSideBearing: 43,\n            advanceWidth: 541,\n        },\n        Z: {\n            x_min: 42,\n            x_max: 584,\n            y_min: -10,\n            y_max: 739,\n            ha: 749,\n            leftSideBearing: 42,\n            advanceWidth: 629,\n        },\n        '[': {\n            x_min: 46,\n            x_max: 346,\n            y_min: -150,\n            y_max: 884,\n            ha: 1034,\n            leftSideBearing: 46,\n            advanceWidth: 291,\n        },\n        '\\\\': {\n            x_min: 20,\n            x_max: 616,\n            y_min: -100,\n            y_max: 797,\n            ha: 897,\n            leftSideBearing: 20,\n            advanceWidth: 645,\n        },\n        ']': {\n            x_min: -76,\n            x_max: 226,\n            y_min: -150,\n            y_max: 881,\n            ha: 1031,\n            leftSideBearing: -76,\n            advanceWidth: 297,\n        },\n        '^': {\n            x_min: 43,\n            x_max: 437,\n            y_min: 517,\n            y_max: 812,\n            ha: 295,\n            leftSideBearing: 43,\n            advanceWidth: 478,\n        },\n        _: {\n            x_min: 29,\n            x_max: 563,\n            y_min: -110,\n            y_max: -1,\n            ha: 109,\n            leftSideBearing: 29,\n            advanceWidth: 598,\n        },\n        '`': {\n            x_min: 54,\n            x_max: 321,\n            y_min: 540,\n            y_max: 747,\n            ha: 207,\n            leftSideBearing: 54,\n            advanceWidth: 368,\n        },\n        a: {\n            x_min: 20,\n            x_max: 447,\n            y_min: -17,\n            y_max: 495,\n            ha: 512,\n            leftSideBearing: 20,\n            advanceWidth: 494,\n        },\n        b: {\n            x_min: 37,\n            x_max: 466,\n            y_min: -27,\n            y_max: 770,\n            ha: 797,\n            leftSideBearing: 37,\n            advanceWidth: 510,\n        },\n        c: {\n            x_min: 35,\n            x_max: 456,\n            y_min: -9,\n            y_max: 507,\n            ha: 516,\n            leftSideBearing: 35,\n            advanceWidth: 460,\n        },\n        d: {\n            x_min: 45,\n            x_max: 520,\n            y_min: -15,\n            y_max: 764,\n            ha: 779,\n            leftSideBearing: 45,\n            advanceWidth: 560,\n        },\n        e: {\n            x_min: 33,\n            x_max: 370,\n            y_min: -5,\n            y_max: 501,\n            ha: 506,\n            leftSideBearing: 33,\n            advanceWidth: 397,\n        },\n        f: {\n            x_min: 35,\n            x_max: 411,\n            y_min: -13,\n            y_max: 695,\n            ha: 708,\n            leftSideBearing: 35,\n            advanceWidth: 453,\n        },\n        g: {\n            x_min: 33,\n            x_max: 551,\n            y_min: -257,\n            y_max: 505,\n            ha: 762,\n            leftSideBearing: 33,\n            advanceWidth: 611,\n        },\n        h: {\n            x_min: 32,\n            x_max: 458,\n            y_min: -29,\n            y_max: 743,\n            ha: 772,\n            leftSideBearing: 32,\n            advanceWidth: 491,\n        },\n        i: {\n            x_min: 45,\n            x_max: 167,\n            y_min: -13,\n            y_max: 631,\n            ha: 644,\n            leftSideBearing: 45,\n            advanceWidth: 220,\n        },\n        j: {\n            x_min: -127,\n            x_max: 261,\n            y_min: -231,\n            y_max: 601,\n            ha: 832,\n            leftSideBearing: -127,\n            advanceWidth: 308,\n        },\n        k: {\n            x_min: 39,\n            x_max: 443,\n            y_min: -3,\n            y_max: 700,\n            ha: 703,\n            leftSideBearing: 39,\n            advanceWidth: 497,\n        },\n        l: {\n            x_min: 58,\n            x_max: 168,\n            y_min: -8,\n            y_max: 686,\n            ha: 694,\n            leftSideBearing: 58,\n            advanceWidth: 227,\n        },\n        m: {\n            x_min: 39,\n            x_max: 688,\n            y_min: -14,\n            y_max: 501,\n            ha: 515,\n            leftSideBearing: 39,\n            advanceWidth: 718,\n        },\n        n: {\n            x_min: 45,\n            x_max: 491,\n            y_min: -32,\n            y_max: 512,\n            ha: 544,\n            leftSideBearing: 45,\n            advanceWidth: 541,\n        },\n        o: {\n            x_min: 41,\n            x_max: 424,\n            y_min: -12,\n            y_max: 493,\n            ha: 505,\n            leftSideBearing: 41,\n            advanceWidth: 447,\n        },\n        p: {\n            x_min: 25,\n            x_max: 529,\n            y_min: -260,\n            y_max: 500,\n            ha: 760,\n            leftSideBearing: 25,\n            advanceWidth: 573,\n        },\n        q: {\n            x_min: 53,\n            x_max: 603,\n            y_min: -235,\n            y_max: 514,\n            ha: 749,\n            leftSideBearing: 53,\n            advanceWidth: 623,\n        },\n        r: {\n            x_min: 32,\n            x_max: 407,\n            y_min: -7,\n            y_max: 492,\n            ha: 499,\n            leftSideBearing: 32,\n            advanceWidth: 460,\n        },\n        s: {\n            x_min: 49,\n            x_max: 416,\n            y_min: -12,\n            y_max: 519,\n            ha: 531,\n            leftSideBearing: 49,\n            advanceWidth: 460,\n        },\n        t: {\n            x_min: 32,\n            x_max: 442,\n            y_min: -5,\n            y_max: 684,\n            ha: 689,\n            leftSideBearing: 32,\n            advanceWidth: 469,\n        },\n        u: {\n            x_min: 41,\n            x_max: 487,\n            y_min: -5,\n            y_max: 507,\n            ha: 512,\n            leftSideBearing: 41,\n            advanceWidth: 510,\n        },\n        v: {\n            x_min: 16,\n            x_max: 441,\n            y_min: -20,\n            y_max: 542,\n            ha: 562,\n            leftSideBearing: 16,\n            advanceWidth: 456,\n        },\n        w: {\n            x_min: 39,\n            x_max: 639,\n            y_min: -22,\n            y_max: 505,\n            ha: 527,\n            leftSideBearing: 39,\n            advanceWidth: 661,\n        },\n        x: {\n            x_min: 15,\n            x_max: 505,\n            y_min: -39,\n            y_max: 539,\n            ha: 578,\n            leftSideBearing: 15,\n            advanceWidth: 541,\n        },\n        y: {\n            x_min: -98,\n            x_max: 501,\n            y_min: -242,\n            y_max: 511,\n            ha: 753,\n            leftSideBearing: -98,\n            advanceWidth: 548,\n        },\n        z: {\n            x_min: 27,\n            x_max: 479,\n            y_min: -3,\n            y_max: 494,\n            ha: 497,\n            leftSideBearing: 27,\n            advanceWidth: 494,\n        },\n        '{': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '|': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '}': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '~': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n    },\n    fontFamily: 'PetalumaScript',\n    resolution: 1000,\n    generatedOn: '2020-06-14T18:33:25.407Z',\n};\n","export const RobotoSlabFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 509,\n            y_min: 0,\n            y_max: 2000,\n            ha: 2000,\n            leftSideBearing: 0,\n            advanceWidth: 509,\n        },\n        '0': {\n            x_min: 121,\n            x_max: 1048,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1168,\n        },\n        '1': {\n            x_min: 117,\n            x_max: 767,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 117,\n            advanceWidth: 844,\n        },\n        '2': {\n            x_min: 75.8474576645637,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 75,\n            advanceWidth: 1131,\n        },\n        '3': {\n            x_min: 74.85365853658536,\n            x_max: 994,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1106,\n        },\n        '4': {\n            x_min: 63,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1187,\n        },\n        '5': {\n            x_min: 96.8448275474953,\n            x_max: 982,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 96,\n            advanceWidth: 1081,\n        },\n        '6': {\n            x_min: 121,\n            x_max: 1067,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1144,\n        },\n        '7': {\n            x_min: 76,\n            x_max: 1060,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: -30,\n            advanceWidth: 1128,\n        },\n        '8': {\n            x_min: 92,\n            x_max: 1039,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 92,\n            advanceWidth: 1131,\n        },\n        '9': {\n            x_min: 84,\n            x_max: 1026,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 84,\n            advanceWidth: 1154,\n        },\n        '!': {\n            x_min: 143,\n            x_max: 340,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 143,\n            advanceWidth: 483,\n        },\n        '\"': {\n            x_min: 166,\n            x_max: 634,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 770,\n        },\n        '#': {\n            x_min: 63,\n            x_max: 1179,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1246,\n        },\n        $: {\n            x_min: 81.92156915727656,\n            x_max: 1012,\n            y_min: -208,\n            y_max: 1693,\n            ha: 1901,\n            leftSideBearing: 81,\n            advanceWidth: 1110,\n        },\n        '%': {\n            x_min: 77,\n            x_max: 1384,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 77,\n            advanceWidth: 1460,\n        },\n        '&': {\n            x_min: 74,\n            x_max: 1242,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1289,\n        },\n        \"'\": {\n            x_min: 166,\n            x_max: 324,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 460,\n        },\n        '(': {\n            x_min: 114,\n            x_max: 650,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 114,\n            advanceWidth: 662,\n        },\n        ')': {\n            x_min: 11,\n            x_max: 547,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 11,\n            advanceWidth: 654,\n        },\n        '*': {\n            x_min: 66,\n            x_max: 893,\n            y_min: 607,\n            y_max: 1456,\n            ha: 849,\n            leftSideBearing: 66,\n            advanceWidth: 958,\n        },\n        '+': {\n            x_min: 73,\n            x_max: 1071,\n            y_min: 146,\n            y_max: 1206,\n            ha: 1060,\n            leftSideBearing: 73,\n            advanceWidth: 1145,\n        },\n        ',': {\n            x_min: 23,\n            x_max: 315,\n            y_min: -311,\n            y_max: 221,\n            ha: 532,\n            leftSideBearing: 23,\n            advanceWidth: 404,\n        },\n        '-': {\n            x_min: 154,\n            x_max: 643,\n            y_min: 538,\n            y_max: 692,\n            ha: 154,\n            leftSideBearing: 154,\n            advanceWidth: 797,\n        },\n        '.': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 202,\n            ha: 202,\n            leftSideBearing: 145,\n            advanceWidth: 493,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 774,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 0,\n            advanceWidth: 824,\n        },\n        ':': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 145,\n            advanceWidth: 419,\n        },\n        ';': {\n            x_min: 53,\n            x_max: 345,\n            y_min: -311,\n            y_max: 1082,\n            ha: 1393,\n            leftSideBearing: 53,\n            advanceWidth: 424,\n        },\n        '<': {\n            x_min: 76,\n            x_max: 892,\n            y_min: 107,\n            y_max: 1013,\n            ha: 906,\n            leftSideBearing: 76,\n            advanceWidth: 1017,\n        },\n        '=': {\n            x_min: 147,\n            x_max: 981,\n            y_min: 407,\n            y_max: 987,\n            ha: 580,\n            leftSideBearing: 147,\n            advanceWidth: 1127,\n        },\n        '>': {\n            x_min: 125,\n            x_max: 980,\n            y_min: 87,\n            y_max: 993,\n            ha: 906,\n            leftSideBearing: 125,\n            advanceWidth: 1060,\n        },\n        '?': {\n            x_min: 65.92660602419838,\n            x_max: 890,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 65,\n            advanceWidth: 953,\n        },\n        '@': {\n            x_min: 84.3592218305664,\n            x_max: 1705.2346925277395,\n            y_min: -453,\n            y_max: 1431,\n            ha: 1884,\n            leftSideBearing: 84,\n            advanceWidth: 1821,\n        },\n        A: {\n            x_min: 70,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 70,\n            advanceWidth: 1533,\n        },\n        B: {\n            x_min: 81,\n            x_max: 1253,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1322,\n        },\n        C: {\n            x_min: 80,\n            x_max: 1174,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1290,\n        },\n        D: {\n            x_min: 81,\n            x_max: 1291,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1356,\n        },\n        E: {\n            x_min: 81,\n            x_max: 1190,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1306,\n        },\n        F: {\n            x_min: 81,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1256,\n        },\n        G: {\n            x_min: 80,\n            x_max: 1226,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1346,\n        },\n        H: {\n            x_min: 81,\n            x_max: 1497,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1578,\n        },\n        I: {\n            x_min: 81,\n            x_max: 604,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 685,\n        },\n        J: {\n            x_min: 60,\n            x_max: 1100,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 60,\n            advanceWidth: 1169,\n        },\n        K: {\n            x_min: 81,\n            x_max: 1427,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1501,\n        },\n        L: {\n            x_min: 81,\n            x_max: 1130,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1210,\n        },\n        M: {\n            x_min: 94,\n            x_max: 1888,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 94,\n            advanceWidth: 1982,\n        },\n        N: {\n            x_min: 83,\n            x_max: 1509,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 83,\n            advanceWidth: 1592,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1281,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 70,\n            advanceWidth: 1351,\n        },\n        P: {\n            x_min: 81,\n            x_max: 1242,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1297,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1348,\n            y_min: -245,\n            y_max: 1477,\n            ha: 1722,\n            leftSideBearing: 70,\n            advanceWidth: 1376,\n        },\n        R: {\n            x_min: 81,\n            x_max: 1285,\n            y_min: 0,\n            y_max: 1455,\n            ha: 1455,\n            leftSideBearing: 81,\n            advanceWidth: 1385,\n        },\n        S: {\n            x_min: 115,\n            x_max: 1116,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 115,\n            advanceWidth: 1206,\n        },\n        T: {\n            x_min: 96,\n            x_max: 1306,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 96,\n            advanceWidth: 1406,\n        },\n        U: {\n            x_min: 70,\n            x_max: 1452,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 70,\n            advanceWidth: 1522,\n        },\n        V: {\n            x_min: 65,\n            x_max: 1443,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1508,\n        },\n        W: {\n            x_min: 72,\n            x_max: 2057,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 72,\n            advanceWidth: 2129,\n        },\n        X: {\n            x_min: 80,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 80,\n            advanceWidth: 1529,\n        },\n        Y: {\n            x_min: 65,\n            x_max: 1396,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1461,\n        },\n        Z: {\n            x_min: 90,\n            x_max: 1107,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 90,\n            advanceWidth: 1197,\n        },\n        '[': {\n            x_min: 157,\n            x_max: 541,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 157,\n            advanceWidth: 573,\n        },\n        '\\\\': {\n            x_min: 36,\n            x_max: 830,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 36,\n            advanceWidth: 841,\n        },\n        ']': {\n            x_min: 23,\n            x_max: 408,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 23,\n            advanceWidth: 552,\n        },\n        '^': {\n            x_min: 71,\n            x_max: 802,\n            y_min: 729,\n            y_max: 1456,\n            ha: 727,\n            leftSideBearing: 71,\n            advanceWidth: 864,\n        },\n        _: {\n            x_min: 119,\n            x_max: 1041,\n            y_min: -154,\n            y_max: 0,\n            ha: 154,\n            leftSideBearing: 119,\n            advanceWidth: 1168,\n        },\n        '`': {\n            x_min: 40,\n            x_max: 456,\n            y_min: 1288,\n            y_max: 1560,\n            ha: 272,\n            leftSideBearing: 40,\n            advanceWidth: 496,\n        },\n        a: {\n            x_min: 79,\n            x_max: 1053,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 79,\n            advanceWidth: 1132,\n        },\n        b: {\n            x_min: -16,\n            x_max: 1071,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: -16,\n            advanceWidth: 1145,\n        },\n        c: {\n            x_min: 78,\n            x_max: 988,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1067,\n        },\n        d: {\n            x_min: 78,\n            x_max: 1156,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: 78,\n            advanceWidth: 1218,\n        },\n        e: {\n            x_min: 74,\n            x_max: 980,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 74,\n            advanceWidth: 1059,\n        },\n        f: {\n            x_min: 64,\n            x_max: 731,\n            y_min: 0,\n            y_max: 1581,\n            ha: 1581,\n            leftSideBearing: 64,\n            advanceWidth: 725,\n        },\n        g: {\n            x_min: 78,\n            x_max: 1133,\n            y_min: -437,\n            y_max: 1102,\n            ha: 1539,\n            leftSideBearing: 78,\n            advanceWidth: 1157,\n        },\n        h: {\n            x_min: 49,\n            x_max: 1255,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 49,\n            advanceWidth: 1315,\n        },\n        i: {\n            x_min: 67,\n            x_max: 590,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 67,\n            advanceWidth: 652,\n        },\n        j: {\n            x_min: -56,\n            x_max: 381,\n            y_min: -437,\n            y_max: 1560,\n            ha: 1997,\n            leftSideBearing: -56,\n            advanceWidth: 525,\n        },\n        k: {\n            x_min: 64,\n            x_max: 1248,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 1287,\n        },\n        l: {\n            x_min: 64,\n            x_max: 587,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 653,\n        },\n        m: {\n            x_min: 74,\n            x_max: 1905,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1977,\n        },\n        n: {\n            x_min: 74,\n            x_max: 1278,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1343,\n        },\n        o: {\n            x_min: 78,\n            x_max: 1046,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1124,\n        },\n        p: {\n            x_min: 34,\n            x_max: 1119,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 34,\n            advanceWidth: 1197,\n        },\n        q: {\n            x_min: 78,\n            x_max: 1135,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 78,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 72,\n            x_max: 808,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 72,\n            advanceWidth: 854,\n        },\n        s: {\n            x_min: 104,\n            x_max: 933,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 104,\n            advanceWidth: 1022,\n        },\n        t: {\n            x_min: 24,\n            x_max: 678,\n            y_min: -17,\n            y_max: 1343,\n            ha: 1360,\n            leftSideBearing: 24,\n            advanceWidth: 730,\n        },\n        u: {\n            x_min: 52,\n            x_max: 1181,\n            y_min: -21,\n            y_max: 1082,\n            ha: 1103,\n            leftSideBearing: 52,\n            advanceWidth: 1245,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 26,\n            advanceWidth: 1206,\n        },\n        w: {\n            x_min: 52,\n            x_max: 1777,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 52,\n            advanceWidth: 1823,\n        },\n        x: {\n            x_min: 42,\n            x_max: 1163,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 42,\n            advanceWidth: 1203,\n        },\n        y: {\n            x_min: 24,\n            x_max: 1172,\n            y_min: -437,\n            y_max: 1082,\n            ha: 1519,\n            leftSideBearing: 24,\n            advanceWidth: 1192,\n        },\n        z: {\n            x_min: 88,\n            x_max: 960,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 88,\n            advanceWidth: 1032,\n        },\n        '{': {\n            x_min: 63,\n            x_max: 671,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 63,\n            advanceWidth: 701,\n        },\n        '|': {\n            x_min: 150,\n            x_max: 307,\n            y_min: -270,\n            y_max: 1456,\n            ha: 1726,\n            leftSideBearing: 150,\n            advanceWidth: 451,\n        },\n        '}': {\n            x_min: 27,\n            x_max: 635,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 27,\n            advanceWidth: 701,\n        },\n        '~': {\n            x_min: 121,\n            x_max: 1257,\n            y_min: 401,\n            y_max: 803,\n            ha: 402,\n            leftSideBearing: 121,\n            advanceWidth: 1386,\n        },\n    },\n    fontFamily: 'Roboto Slab',\n    resolution: 2048,\n    generatedOn: '2020-06-15T19:12:58.120Z',\n};\n","export const SansFontBold = {\n    glyphs: {\n        '0': {\n            x_min: 86,\n            x_max: 1038,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        '1': {\n            x_min: 162,\n            x_max: 806,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 162,\n            advanceWidth: 1139,\n        },\n        '2': {\n            x_min: 51,\n            x_max: 1036,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 51,\n            advanceWidth: 1139,\n        },\n        '3': {\n            x_min: 77,\n            x_max: 1051,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 77,\n            advanceWidth: 1139,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 1092,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 38,\n            advanceWidth: 1139,\n        },\n        '5': {\n            x_min: 91,\n            x_max: 1077,\n            y_min: -25,\n            y_max: 1446,\n            ha: 1471,\n            leftSideBearing: 91,\n            advanceWidth: 1139,\n        },\n        '6': {\n            x_min: 87,\n            x_max: 1066,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 87,\n            advanceWidth: 1139,\n        },\n        '7': {\n            x_min: 87,\n            x_max: 1048,\n            y_min: 0,\n            y_max: 1446,\n            ha: 1446,\n            leftSideBearing: 87,\n            advanceWidth: 1139,\n        },\n        '8': {\n            x_min: 83,\n            x_max: 1047,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 83,\n            advanceWidth: 1139,\n        },\n        '9': {\n            x_min: 65,\n            x_max: 1044,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 65,\n            advanceWidth: 1139,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        '!': {\n            x_min: 184,\n            x_max: 488,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 184,\n            advanceWidth: 682,\n        },\n        '\"': {\n            x_min: 112,\n            x_max: 869,\n            y_min: 945,\n            y_max: 1466,\n            ha: 521,\n            leftSideBearing: 112,\n            advanceWidth: 971,\n        },\n        '#': {\n            x_min: 18,\n            x_max: 1115,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 18,\n            advanceWidth: 1139,\n        },\n        $: {\n            x_min: 70,\n            x_max: 1048,\n            y_min: -205,\n            y_max: 1584,\n            ha: 1789,\n            leftSideBearing: 70,\n            advanceWidth: 1139,\n        },\n        '%': {\n            x_min: 89,\n            x_max: 1725,\n            y_min: -59,\n            y_max: 1491,\n            ha: 1550,\n            leftSideBearing: 89,\n            advanceWidth: 1821,\n        },\n        '&': {\n            x_min: 90,\n            x_max: 1446,\n            y_min: -38,\n            y_max: 1491,\n            ha: 1529,\n            leftSideBearing: 90,\n            advanceWidth: 1479,\n        },\n        \"'\": {\n            x_min: 92,\n            x_max: 398,\n            y_min: 945,\n            y_max: 1466,\n            ha: 521,\n            leftSideBearing: 92,\n            advanceWidth: 487,\n        },\n        '(': {\n            x_min: 107,\n            x_max: 616,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 107,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 67,\n            x_max: 576,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 67,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 28,\n            x_max: 753,\n            y_min: 792,\n            y_max: 1491,\n            ha: 699,\n            leftSideBearing: 28,\n            advanceWidth: 797,\n        },\n        '+': {\n            x_min: 85,\n            x_max: 1110,\n            y_min: 211,\n            y_max: 1236,\n            ha: 1025,\n            leftSideBearing: 85,\n            advanceWidth: 1196,\n        },\n        ',': {\n            x_min: 117,\n            x_max: 421,\n            y_min: -327,\n            y_max: 281,\n            ha: 608,\n            leftSideBearing: 117,\n            advanceWidth: 569,\n        },\n        '-': {\n            x_min: 115,\n            x_max: 667,\n            y_min: 391,\n            y_max: 672,\n            ha: 281,\n            leftSideBearing: 115,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 281,\n            ha: 281,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        '/': {\n            x_min: -3,\n            x_max: 571,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: -3,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 201,\n            x_max: 482,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 201,\n            advanceWidth: 682,\n        },\n        ';': {\n            x_min: 170,\n            x_max: 474,\n            y_min: -327,\n            y_max: 1062,\n            ha: 1389,\n            leftSideBearing: 170,\n            advanceWidth: 682,\n        },\n        '<': {\n            x_min: 95,\n            x_max: 1100,\n            y_min: 167,\n            y_max: 1281,\n            ha: 1114,\n            leftSideBearing: 95,\n            advanceWidth: 1196,\n        },\n        '=': {\n            x_min: 85,\n            x_max: 1110,\n            y_min: 372,\n            y_max: 1074,\n            ha: 702,\n            leftSideBearing: 85,\n            advanceWidth: 1196,\n        },\n        '>': {\n            x_min: 95,\n            x_max: 1101,\n            y_min: 166,\n            y_max: 1279,\n            ha: 1113,\n            leftSideBearing: 95,\n            advanceWidth: 1196,\n        },\n        '?': {\n            x_min: 106,\n            x_max: 1158,\n            y_min: 0,\n            y_max: 1481,\n            ha: 1481,\n            leftSideBearing: 106,\n            advanceWidth: 1251,\n        },\n        '@': {\n            x_min: 61,\n            x_max: 1990,\n            y_min: -431,\n            y_max: 1492,\n            ha: 1923,\n            leftSideBearing: 61,\n            advanceWidth: 1997,\n        },\n        A: {\n            x_min: 0,\n            x_max: 1471,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 0,\n            advanceWidth: 1479,\n        },\n        B: {\n            x_min: 150,\n            x_max: 1378,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        C: {\n            x_min: 97,\n            x_max: 1374,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 97,\n            advanceWidth: 1479,\n        },\n        D: {\n            x_min: 148,\n            x_max: 1377,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 148,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 149,\n            x_max: 1264,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 149,\n            advanceWidth: 1366,\n        },\n        F: {\n            x_min: 151,\n            x_max: 1156,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 151,\n            advanceWidth: 1251,\n        },\n        G: {\n            x_min: 98,\n            x_max: 1469,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 98,\n            advanceWidth: 1593,\n        },\n        H: {\n            x_min: 150,\n            x_max: 1322,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 140,\n            x_max: 436,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 140,\n            advanceWidth: 569,\n        },\n        J: {\n            x_min: 35,\n            x_max: 973,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 35,\n            advanceWidth: 1139,\n        },\n        K: {\n            x_min: 153,\n            x_max: 1475,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 153,\n            advanceWidth: 1479,\n        },\n        L: {\n            x_min: 157,\n            x_max: 1189,\n            y_min: 0,\n            y_max: 1454,\n            ha: 1454,\n            leftSideBearing: 157,\n            advanceWidth: 1251,\n        },\n        M: {\n            x_min: 145,\n            x_max: 1561,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 145,\n            advanceWidth: 1706,\n        },\n        N: {\n            x_min: 152,\n            x_max: 1315,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 152,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 89,\n            x_max: 1511,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 89,\n            advanceWidth: 1593,\n        },\n        P: {\n            x_min: 149,\n            x_max: 1272,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 149,\n            advanceWidth: 1366,\n        },\n        Q: {\n            x_min: 89,\n            x_max: 1566,\n            y_min: -147,\n            y_max: 1491,\n            ha: 1638,\n            leftSideBearing: 89,\n            advanceWidth: 1593,\n        },\n        R: {\n            x_min: 150,\n            x_max: 1468,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        S: {\n            x_min: 74,\n            x_max: 1266,\n            y_min: -26,\n            y_max: 1491,\n            ha: 1517,\n            leftSideBearing: 74,\n            advanceWidth: 1366,\n        },\n        T: {\n            x_min: 44,\n            x_max: 1209,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 44,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 147,\n            x_max: 1316,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 147,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: -1,\n            x_max: 1364,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -1,\n            advanceWidth: 1366,\n        },\n        W: {\n            x_min: 7,\n            x_max: 1931,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 7,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 0,\n            x_max: 1363,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 0,\n            advanceWidth: 1366,\n        },\n        Y: {\n            x_min: -3,\n            x_max: 1368,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -3,\n            advanceWidth: 1366,\n        },\n        Z: {\n            x_min: 22,\n            x_max: 1213,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 22,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 146,\n            x_max: 644,\n            y_min: -413,\n            y_max: 1466,\n            ha: 1879,\n            leftSideBearing: 146,\n            advanceWidth: 682,\n        },\n        '\\\\': {\n            x_min: -3,\n            x_max: 571,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: -3,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 38,\n            x_max: 536,\n            y_min: -413,\n            y_max: 1466,\n            ha: 1879,\n            leftSideBearing: 38,\n            advanceWidth: 682,\n        },\n        '^': {\n            x_min: 115,\n            x_max: 1080,\n            y_min: 692,\n            y_max: 1491,\n            ha: 799,\n            leftSideBearing: 115,\n            advanceWidth: 1196,\n        },\n        _: {\n            x_min: -19,\n            x_max: 1149,\n            y_min: -405,\n            y_max: -223,\n            ha: 182,\n            leftSideBearing: -19,\n            advanceWidth: 1139,\n        },\n        '`': {\n            x_min: 42,\n            x_max: 495,\n            y_min: 1192,\n            y_max: 1491,\n            ha: 299,\n            leftSideBearing: 42,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 73,\n            x_max: 1070,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 73,\n            advanceWidth: 1139,\n        },\n        b: {\n            x_min: 135,\n            x_max: 1172,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 135,\n            advanceWidth: 1251,\n        },\n        c: {\n            x_min: 85,\n            x_max: 1087,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        d: {\n            x_min: 84,\n            x_max: 1121,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 84,\n            advanceWidth: 1251,\n        },\n        e: {\n            x_min: 65,\n            x_max: 1057.2517482517483,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 65,\n            advanceWidth: 1139,\n        },\n        f: {\n            x_min: 24,\n            x_max: 742,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 24,\n            advanceWidth: 682,\n        },\n        g: {\n            x_min: 84,\n            x_max: 1120,\n            y_min: -431,\n            y_max: 1086,\n            ha: 1517,\n            leftSideBearing: 84,\n            advanceWidth: 1251,\n        },\n        h: {\n            x_min: 146,\n            x_max: 1113,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 146,\n            advanceWidth: 1251,\n        },\n        i: {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        j: {\n            x_min: -94,\n            x_max: 422,\n            y_min: -431,\n            y_max: 1466,\n            ha: 1897,\n            leftSideBearing: -94,\n            advanceWidth: 569,\n        },\n        k: {\n            x_min: 137,\n            x_max: 1119,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 137,\n            advanceWidth: 1139,\n        },\n        l: {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        m: {\n            x_min: 126,\n            x_max: 1688,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 126,\n            advanceWidth: 1821,\n        },\n        n: {\n            x_min: 145,\n            x_max: 1113,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 145,\n            advanceWidth: 1251,\n        },\n        o: {\n            x_min: 82,\n            x_max: 1178,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 82,\n            advanceWidth: 1251,\n        },\n        p: {\n            x_min: 139,\n            x_max: 1175,\n            y_min: -404,\n            y_max: 1086,\n            ha: 1490,\n            leftSideBearing: 139,\n            advanceWidth: 1251,\n        },\n        q: {\n            x_min: 91,\n            x_max: 1122,\n            y_min: -404,\n            y_max: 1086,\n            ha: 1490,\n            leftSideBearing: 91,\n            advanceWidth: 1251,\n        },\n        r: {\n            x_min: 135,\n            x_max: 823,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 797,\n        },\n        s: {\n            x_min: 48,\n            x_max: 1040,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 48,\n            advanceWidth: 1139,\n        },\n        t: {\n            x_min: 31,\n            x_max: 657,\n            y_min: -24,\n            y_max: 1437,\n            ha: 1461,\n            leftSideBearing: 31,\n            advanceWidth: 682,\n        },\n        u: {\n            x_min: 141,\n            x_max: 1107,\n            y_min: -24,\n            y_max: 1062,\n            ha: 1086,\n            leftSideBearing: 141,\n            advanceWidth: 1251,\n        },\n        v: {\n            x_min: 11,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 11,\n            advanceWidth: 1139,\n        },\n        w: {\n            x_min: 9,\n            x_max: 1592,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 9,\n            advanceWidth: 1593,\n        },\n        x: {\n            x_min: 12,\n            x_max: 1120,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 12,\n            advanceWidth: 1139,\n        },\n        y: {\n            x_min: 14,\n            x_max: 1106,\n            y_min: -431,\n            y_max: 1062,\n            ha: 1493,\n            leftSideBearing: 14,\n            advanceWidth: 1139,\n        },\n        z: {\n            x_min: 34,\n            x_max: 982,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 34,\n            advanceWidth: 1024,\n        },\n        '{': {\n            x_min: 60,\n            x_max: 744,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 60,\n            advanceWidth: 797,\n        },\n        '|': {\n            x_min: 176,\n            x_max: 399,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 176,\n            advanceWidth: 573,\n        },\n        '}': {\n            x_min: 45,\n            x_max: 729,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 45,\n            advanceWidth: 797,\n        },\n        '~': {\n            x_min: 67,\n            x_max: 1129,\n            y_min: 519,\n            y_max: 924,\n            ha: 405,\n            leftSideBearing: 67,\n            advanceWidth: 1196,\n        },\n    },\n    fontFamily: 'Arial',\n    resolution: 2048,\n    generatedOn: '2022-11-04T20:05:21.000Z',\n};\n","export const SansFont = {\n    smufl: false,\n    name: 'SANS',\n    spacing: 50,\n    Description: 'Built-in sans-serif font',\n    bold: true,\n    italic: true,\n    monospaced: false,\n    serifs: false,\n    glyphs: {\n        '0': {\n            x_min: 85,\n            x_max: 1041,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        '1': {\n            x_min: 223,\n            x_max: 763,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 223,\n            advanceWidth: 1139,\n        },\n        '2': {\n            x_min: 61.840001123045234,\n            x_max: 1031,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 61,\n            advanceWidth: 1139,\n        },\n        '3': {\n            x_min: 86,\n            x_max: 1046,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        '4': {\n            x_min: 26,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 26,\n            advanceWidth: 1139,\n        },\n        '5': {\n            x_min: 85,\n            x_max: 1057,\n            y_min: -25,\n            y_max: 1446,\n            ha: 1471,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        '6': {\n            x_min: 77,\n            x_max: 1045,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 77,\n            advanceWidth: 1139,\n        },\n        '7': {\n            x_min: 97,\n            x_max: 1046,\n            y_min: 0,\n            y_max: 1447,\n            ha: 1447,\n            leftSideBearing: 97,\n            advanceWidth: 1139,\n        },\n        '8': {\n            x_min: 83,\n            x_max: 1049,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 83,\n            advanceWidth: 1139,\n        },\n        '9': {\n            x_min: 85,\n            x_max: 1049,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        '!': {\n            x_min: 176,\n            x_max: 399,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 176,\n            advanceWidth: 569,\n        },\n        '\"': {\n            x_min: 94,\n            x_max: 631,\n            y_min: 947,\n            y_max: 1466,\n            ha: 519,\n            leftSideBearing: 94,\n            advanceWidth: 727,\n        },\n        '#': {\n            x_min: 21,\n            x_max: 1113,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 21,\n            advanceWidth: 1139,\n        },\n        $: {\n            x_min: 73,\n            x_max: 1043,\n            y_min: -211,\n            y_max: 1601,\n            ha: 1812,\n            leftSideBearing: 73,\n            advanceWidth: 1139,\n        },\n        '%': {\n            x_min: 119,\n            x_max: 1695,\n            y_min: -54,\n            y_max: 1491,\n            ha: 1545,\n            leftSideBearing: 119,\n            advanceWidth: 1821,\n        },\n        '&': {\n            x_min: 88,\n            x_max: 1319,\n            y_min: -34,\n            y_max: 1491,\n            ha: 1525,\n            leftSideBearing: 88,\n            advanceWidth: 1366,\n        },\n        \"'\": {\n            x_min: 90,\n            x_max: 295,\n            y_min: 947,\n            y_max: 1466,\n            ha: 519,\n            leftSideBearing: 90,\n            advanceWidth: 391,\n        },\n        '(': {\n            x_min: 124,\n            x_max: 608,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 124,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 124,\n            x_max: 608,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 124,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 64,\n            x_max: 725,\n            y_min: 867,\n            y_max: 1491,\n            ha: 624,\n            leftSideBearing: 64,\n            advanceWidth: 797,\n        },\n        '+': {\n            x_min: 114,\n            x_max: 1082,\n            y_min: 237,\n            y_max: 1206,\n            ha: 969,\n            leftSideBearing: 114,\n            advanceWidth: 1196,\n        },\n        ',': {\n            x_min: 170,\n            x_max: 387,\n            y_min: -290,\n            y_max: 205,\n            ha: 495,\n            leftSideBearing: 170,\n            advanceWidth: 569,\n        },\n        '-': {\n            x_min: 65,\n            x_max: 618,\n            y_min: 440,\n            y_max: 621,\n            ha: 181,\n            leftSideBearing: 65,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 186,\n            x_max: 391,\n            y_min: 0,\n            y_max: 205,\n            ha: 205,\n            leftSideBearing: 186,\n            advanceWidth: 569,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 569,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 185,\n            x_max: 390,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 185,\n            advanceWidth: 569,\n        },\n        ';': {\n            x_min: 170,\n            x_max: 387,\n            y_min: -290,\n            y_max: 1062,\n            ha: 1352,\n            leftSideBearing: 170,\n            advanceWidth: 569,\n        },\n        '<': {\n            x_min: 112,\n            x_max: 1083,\n            y_min: 226,\n            y_max: 1219,\n            ha: 993,\n            leftSideBearing: 112,\n            advanceWidth: 1196,\n        },\n        '=': {\n            x_min: 114,\n            x_max: 1082,\n            y_min: 417,\n            y_max: 1030,\n            ha: 613,\n            leftSideBearing: 114,\n            advanceWidth: 1196,\n        },\n        '>': {\n            x_min: 112,\n            x_max: 1083,\n            y_min: 226,\n            y_max: 1219,\n            ha: 993,\n            leftSideBearing: 112,\n            advanceWidth: 1196,\n        },\n        '?': {\n            x_min: 90,\n            x_max: 1036,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 90,\n            advanceWidth: 1139,\n        },\n        '@': {\n            x_min: 111,\n            x_max: 2005,\n            y_min: -431,\n            y_max: 1493,\n            ha: 1924,\n            leftSideBearing: 111,\n            advanceWidth: 2079,\n        },\n        A: {\n            x_min: -3,\n            x_max: 1369,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -3,\n            advanceWidth: 1366,\n        },\n        B: {\n            x_min: 150,\n            x_max: 1257,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1366,\n        },\n        C: {\n            x_min: 102,\n            x_max: 1398,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 102,\n            advanceWidth: 1479,\n        },\n        D: {\n            x_min: 158,\n            x_max: 1370,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 158,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 162,\n            x_max: 1256,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 162,\n            advanceWidth: 1366,\n        },\n        F: {\n            x_min: 168,\n            x_max: 1157,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 168,\n            advanceWidth: 1251,\n        },\n        G: {\n            x_min: 109,\n            x_max: 1465,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 109,\n            advanceWidth: 1593,\n        },\n        H: {\n            x_min: 164,\n            x_max: 1314,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 164,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 191,\n            x_max: 385,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 191,\n            advanceWidth: 569,\n        },\n        J: {\n            x_min: 58.84976474807333,\n            x_max: 865,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 58,\n            advanceWidth: 1024,\n        },\n        K: {\n            x_min: 150,\n            x_max: 1362,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1366,\n        },\n        L: {\n            x_min: 150,\n            x_max: 1066,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1139,\n        },\n        M: {\n            x_min: 152,\n            x_max: 1551,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 152,\n            advanceWidth: 1706,\n        },\n        N: {\n            x_min: 156,\n            x_max: 1311,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 156,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 99,\n            x_max: 1501,\n            y_min: -25,\n            y_max: 1492,\n            ha: 1517,\n            leftSideBearing: 99,\n            advanceWidth: 1593,\n        },\n        P: {\n            x_min: 158,\n            x_max: 1277,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 158,\n            advanceWidth: 1366,\n        },\n        Q: {\n            x_min: 88,\n            x_max: 1518,\n            y_min: -114,\n            y_max: 1492,\n            ha: 1606,\n            leftSideBearing: 88,\n            advanceWidth: 1593,\n        },\n        R: {\n            x_min: 161,\n            x_max: 1453,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 161,\n            advanceWidth: 1479,\n        },\n        S: {\n            x_min: 92,\n            x_max: 1259,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 92,\n            advanceWidth: 1366,\n        },\n        T: {\n            x_min: 48,\n            x_max: 1210,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 48,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 161,\n            x_max: 1314,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 161,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: 9,\n            x_max: 1350,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 9,\n            advanceWidth: 1366,\n        },\n        W: {\n            x_min: 25,\n            x_max: 1910,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 25,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 9,\n            x_max: 1353,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 9,\n            advanceWidth: 1366,\n        },\n        Y: {\n            x_min: 6,\n            x_max: 1350,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 6,\n            advanceWidth: 1366,\n        },\n        Z: {\n            x_min: 41,\n            x_max: 1200,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 41,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 139,\n            x_max: 536,\n            y_min: -407,\n            y_max: 1466,\n            ha: 1873,\n            leftSideBearing: 139,\n            advanceWidth: 569,\n        },\n        '\\\\': {\n            x_min: 0,\n            x_max: 569,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 39,\n            x_max: 436,\n            y_min: -407,\n            y_max: 1466,\n            ha: 1873,\n            leftSideBearing: 39,\n            advanceWidth: 569,\n        },\n        '^': {\n            x_min: 54,\n            x_max: 907,\n            y_min: 690,\n            y_max: 1491,\n            ha: 801,\n            leftSideBearing: 54,\n            advanceWidth: 961,\n        },\n        _: {\n            x_min: -31,\n            x_max: 1162,\n            y_min: -407,\n            y_max: -277,\n            ha: 130,\n            leftSideBearing: -31,\n            advanceWidth: 1139,\n        },\n        '`': {\n            x_min: 89,\n            x_max: 465,\n            y_min: 1194,\n            y_max: 1474,\n            ha: 280,\n            leftSideBearing: 89,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 74,\n            x_max: 1052,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 74,\n            advanceWidth: 1139,\n        },\n        b: {\n            x_min: 134,\n            x_max: 1055,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 134,\n            advanceWidth: 1139,\n        },\n        c: {\n            x_min: 80,\n            x_max: 1005,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 80,\n            advanceWidth: 1024,\n        },\n        d: {\n            x_min: 70,\n            x_max: 991,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 70,\n            advanceWidth: 1139,\n        },\n        e: {\n            x_min: 75,\n            x_max: 1054,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 75,\n            advanceWidth: 1139,\n        },\n        f: {\n            x_min: 19,\n            x_max: 640,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 19,\n            advanceWidth: 569,\n        },\n        g: {\n            x_min: 66,\n            x_max: 1002,\n            y_min: -431,\n            y_max: 1086,\n            ha: 1517,\n            leftSideBearing: 66,\n            advanceWidth: 1139,\n        },\n        h: {\n            x_min: 135,\n            x_max: 1000,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        i: {\n            x_min: 136,\n            x_max: 316,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 136,\n            advanceWidth: 455,\n        },\n        j: {\n            x_min: -94,\n            x_max: 314,\n            y_min: -431,\n            y_max: 1466,\n            ha: 1897,\n            leftSideBearing: -94,\n            advanceWidth: 455,\n        },\n        k: {\n            x_min: 136,\n            x_max: 1016,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 136,\n            advanceWidth: 1024,\n        },\n        l: {\n            x_min: 131,\n            x_max: 311,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 131,\n            advanceWidth: 455,\n        },\n        m: {\n            x_min: 135,\n            x_max: 1574,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 1706,\n        },\n        n: {\n            x_min: 135,\n            x_max: 998,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        o: {\n            x_min: 68,\n            x_max: 1063,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 68,\n            advanceWidth: 1139,\n        },\n        p: {\n            x_min: 135,\n            x_max: 1057,\n            y_min: -407,\n            y_max: 1086,\n            ha: 1493,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        q: {\n            x_min: 72,\n            x_max: 992,\n            y_min: -407,\n            y_max: 1086,\n            ha: 1493,\n            leftSideBearing: 72,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 133,\n            x_max: 710,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 133,\n            advanceWidth: 682,\n        },\n        s: {\n            x_min: 63,\n            x_max: 945,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 63,\n            advanceWidth: 1024,\n        },\n        t: {\n            x_min: 36,\n            x_max: 554,\n            y_min: -14,\n            y_max: 1433,\n            ha: 1447,\n            leftSideBearing: 36,\n            advanceWidth: 569,\n        },\n        u: {\n            x_min: 131,\n            x_max: 992,\n            y_min: -24,\n            y_max: 1062,\n            ha: 1086,\n            leftSideBearing: 131,\n            advanceWidth: 1139,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1000,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 26,\n            advanceWidth: 1024,\n        },\n        w: {\n            x_min: 6,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 6,\n            advanceWidth: 1479,\n        },\n        x: {\n            x_min: 15,\n            x_max: 1009,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 15,\n            advanceWidth: 1024,\n        },\n        y: {\n            x_min: 33,\n            x_max: 1006,\n            y_min: -431,\n            y_max: 1062,\n            ha: 1493,\n            leftSideBearing: 33,\n            advanceWidth: 1024,\n        },\n        z: {\n            x_min: 40,\n            x_max: 980,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 40,\n            advanceWidth: 1024,\n        },\n        '{': {\n            x_min: 57,\n            x_max: 636,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 57,\n            advanceWidth: 684,\n        },\n        '|': {\n            x_min: 188,\n            x_max: 345,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 188,\n            advanceWidth: 532,\n        },\n        '}': {\n            x_min: 47,\n            x_max: 626,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 47,\n            advanceWidth: 684,\n        },\n        '~': {\n            x_min: 87,\n            x_max: 1110,\n            y_min: 557,\n            y_max: 885,\n            ha: 328,\n            leftSideBearing: 87,\n            advanceWidth: 1196,\n        },\n    },\n    fontFamily: 'sans-serif',\n    resolution: 2048,\n    generatedOn: '2020-10-18T18:48:11.823Z',\n};\n","export const SerifFont = {\n    smufl: false,\n    name: 'SERIF',\n    spacing: 50,\n    Description: 'Built-in serif font',\n    bold: true,\n    italic: true,\n    monospaced: false,\n    serifs: true,\n    glyphs: {\n        '0': {\n            x_min: 49,\n            x_max: 975,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 49,\n            advanceWidth: 1024,\n        },\n        '1': {\n            x_min: 227,\n            x_max: 811,\n            y_min: 0,\n            y_max: 1383,\n            ha: 1383,\n            leftSideBearing: 227,\n            advanceWidth: 1024,\n        },\n        '2': {\n            x_min: 61,\n            x_max: 965,\n            y_min: 0,\n            y_max: 1383,\n            ha: 1383,\n            leftSideBearing: 61,\n            advanceWidth: 1024,\n        },\n        '3': {\n            x_min: 88,\n            x_max: 883,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 88,\n            advanceWidth: 1024,\n        },\n        '4': {\n            x_min: 25,\n            x_max: 967,\n            y_min: 0,\n            y_max: 1384,\n            ha: 1384,\n            leftSideBearing: 25,\n            advanceWidth: 1024,\n        },\n        '5': {\n            x_min: 66,\n            x_max: 898,\n            y_min: -27,\n            y_max: 1409,\n            ha: 1436,\n            leftSideBearing: 66,\n            advanceWidth: 1024,\n        },\n        '6': {\n            x_min: 70,\n            x_max: 958,\n            y_min: -27,\n            y_max: 1401,\n            ha: 1428,\n            leftSideBearing: 70,\n            advanceWidth: 1024,\n        },\n        '7': {\n            x_min: 41,\n            x_max: 920,\n            y_min: -16,\n            y_max: 1356,\n            ha: 1372,\n            leftSideBearing: 41,\n            advanceWidth: 1024,\n        },\n        '8': {\n            x_min: 115,\n            x_max: 911,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 115,\n            advanceWidth: 1024,\n        },\n        '9': {\n            x_min: 61,\n            x_max: 940,\n            y_min: -41,\n            y_max: 1383,\n            ha: 1424,\n            leftSideBearing: 61,\n            advanceWidth: 1024,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 512,\n        },\n        '!': {\n            x_min: 266,\n            x_max: 488,\n            y_min: -22,\n            y_max: 1383,\n            ha: 1405,\n            leftSideBearing: 266,\n            advanceWidth: 682,\n        },\n        '\"': {\n            x_min: 157.2000021972655,\n            x_max: 678.2500021457677,\n            y_min: 881,\n            y_max: 1385,\n            ha: 504,\n            leftSideBearing: 157,\n            advanceWidth: 836,\n        },\n        '#': {\n            x_min: 10,\n            x_max: 1016,\n            y_min: -1,\n            y_max: 1356,\n            ha: 1357,\n            leftSideBearing: 10,\n            advanceWidth: 1024,\n        },\n        $: {\n            x_min: 90,\n            x_max: 936,\n            y_min: -180,\n            y_max: 1492,\n            ha: 1672,\n            leftSideBearing: 90,\n            advanceWidth: 1024,\n        },\n        '%': {\n            x_min: 125,\n            x_max: 1581,\n            y_min: -30,\n            y_max: 1388,\n            ha: 1418,\n            leftSideBearing: 125,\n            advanceWidth: 1706,\n        },\n        '&': {\n            x_min: 86,\n            x_max: 1536,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 86,\n            advanceWidth: 1593,\n        },\n        \"'\": {\n            x_min: 97.20000219726548,\n            x_max: 273.2500021457677,\n            y_min: 881,\n            y_max: 1385,\n            ha: 504,\n            leftSideBearing: 97,\n            advanceWidth: 369,\n        },\n        '(': {\n            x_min: 98,\n            x_max: 623,\n            y_min: -363,\n            y_max: 1383,\n            ha: 1746,\n            leftSideBearing: 98,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 59,\n            x_max: 584,\n            y_min: -363,\n            y_max: 1383,\n            ha: 1746,\n            leftSideBearing: 59,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 137.96078522291893,\n            x_max: 886.039214777081,\n            y_min: 543,\n            y_max: 1383,\n            ha: 840,\n            leftSideBearing: 137,\n            advanceWidth: 1024,\n        },\n        '+': {\n            x_min: 61,\n            x_max: 1093,\n            y_min: 2,\n            y_max: 1034,\n            ha: 1032,\n            leftSideBearing: 61,\n            advanceWidth: 1155,\n        },\n        ',': {\n            x_min: 115,\n            x_max: 399,\n            y_min: -291,\n            y_max: 208,\n            ha: 499,\n            leftSideBearing: 115,\n            advanceWidth: 512,\n        },\n        '-': {\n            x_min: 80,\n            x_max: 584,\n            y_min: 396,\n            y_max: 525,\n            ha: 129,\n            leftSideBearing: 80,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 143,\n            x_max: 371,\n            y_min: -22,\n            y_max: 205,\n            ha: 227,\n            leftSideBearing: 143,\n            advanceWidth: 512,\n        },\n        '/': {\n            x_min: -17,\n            x_max: 586,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: -17,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 166,\n            x_max: 394,\n            y_min: -22,\n            y_max: 943,\n            ha: 965,\n            leftSideBearing: 166,\n            advanceWidth: 569,\n        },\n        ';': {\n            x_min: 164,\n            x_max: 448,\n            y_min: -290,\n            y_max: 943,\n            ha: 1233,\n            leftSideBearing: 164,\n            advanceWidth: 569,\n        },\n        '<': {\n            x_min: 57,\n            x_max: 1098,\n            y_min: -15,\n            y_max: 1051,\n            ha: 1066,\n            leftSideBearing: 57,\n            advanceWidth: 1155,\n        },\n        '=': {\n            x_min: 61,\n            x_max: 1093,\n            y_min: 246,\n            y_max: 791,\n            ha: 545,\n            leftSideBearing: 61,\n            advanceWidth: 1155,\n        },\n        '>': {\n            x_min: 57,\n            x_max: 1098,\n            y_min: -15,\n            y_max: 1051,\n            ha: 1066,\n            leftSideBearing: 57,\n            advanceWidth: 1155,\n        },\n        '?': {\n            x_min: 139,\n            x_max: 848,\n            y_min: -15,\n            y_max: 1383,\n            ha: 1398,\n            leftSideBearing: 139,\n            advanceWidth: 909,\n        },\n        '@': {\n            x_min: 238,\n            x_max: 1657,\n            y_min: -29,\n            y_max: 1386,\n            ha: 1415,\n            leftSideBearing: 238,\n            advanceWidth: 1886,\n        },\n        A: {\n            x_min: 31,\n            x_max: 1445,\n            y_min: 0,\n            y_max: 1380,\n            ha: 1380,\n            leftSideBearing: 31,\n            advanceWidth: 1479,\n        },\n        B: {\n            x_min: 35,\n            x_max: 1214,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1366,\n        },\n        C: {\n            x_min: 57,\n            x_max: 1296,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 57,\n            advanceWidth: 1366,\n        },\n        D: {\n            x_min: 33,\n            x_max: 1403,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 33,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 25,\n            x_max: 1222,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1251,\n        },\n        F: {\n            x_min: 25,\n            x_max: 1119,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1139,\n        },\n        G: {\n            x_min: 66,\n            x_max: 1452,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 66,\n            advanceWidth: 1479,\n        },\n        H: {\n            x_min: 39,\n            x_max: 1438,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 39,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 37,\n            x_max: 642,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 37,\n            advanceWidth: 682,\n        },\n        J: {\n            x_min: 20,\n            x_max: 758,\n            y_min: -28,\n            y_max: 1356,\n            ha: 1384,\n            leftSideBearing: 20,\n            advanceWidth: 797,\n        },\n        K: {\n            x_min: 70,\n            x_max: 1479,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        L: {\n            x_min: 25,\n            x_max: 1224,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1251,\n        },\n        M: {\n            x_min: 25,\n            x_max: 1768,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1821,\n        },\n        N: {\n            x_min: 25,\n            x_max: 1450,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 25,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1409,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        P: {\n            x_min: 33,\n            x_max: 1110,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 33,\n            advanceWidth: 1139,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1435,\n            y_min: -364.28571588721996,\n            y_max: 1383,\n            ha: 1747.28571588722,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        R: {\n            x_min: 35,\n            x_max: 1347,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1366,\n        },\n        S: {\n            x_min: 86,\n            x_max: 1006,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        T: {\n            x_min: 35,\n            x_max: 1214,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 29,\n            x_max: 1444,\n            y_min: -28,\n            y_max: 1356,\n            ha: 1384,\n            leftSideBearing: 29,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: 33,\n            x_max: 1428,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 33,\n            advanceWidth: 1479,\n        },\n        W: {\n            x_min: 10,\n            x_max: 1906,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 10,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 20,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 20,\n            advanceWidth: 1479,\n        },\n        Y: {\n            x_min: 45,\n            x_max: 1441,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 45,\n            advanceWidth: 1479,\n        },\n        Z: {\n            x_min: 18,\n            x_max: 1222,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 18,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 180,\n            x_max: 612,\n            y_min: -319,\n            y_max: 1355,\n            ha: 1674,\n            leftSideBearing: 180,\n            advanceWidth: 682,\n        },\n        '\\\\': {\n            x_min: -17,\n            x_max: 586,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: -17,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 70,\n            x_max: 502,\n            y_min: -319,\n            y_max: 1355,\n            ha: 1674,\n            leftSideBearing: 70,\n            advanceWidth: 682,\n        },\n        '^': {\n            x_min: 49,\n            x_max: 914,\n            y_min: 608,\n            y_max: 1355,\n            ha: 747,\n            leftSideBearing: 49,\n            advanceWidth: 961,\n        },\n        _: {\n            x_min: 0,\n            x_max: 1024,\n            y_min: -255,\n            y_max: -153,\n            ha: 102,\n            leftSideBearing: 0,\n            advanceWidth: 1024,\n        },\n        '`': {\n            x_min: 39,\n            x_max: 499,\n            y_min: 1037,\n            y_max: 1392.509803639748,\n            ha: 355.50980363974804,\n            leftSideBearing: 39,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 76,\n            x_max: 905,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 76,\n            advanceWidth: 909,\n        },\n        b: {\n            x_min: 6,\n            x_max: 958,\n            y_min: -20,\n            y_max: 1399,\n            ha: 1419,\n            leftSideBearing: 6,\n            advanceWidth: 1024,\n        },\n        c: {\n            x_min: 51,\n            x_max: 843,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 51,\n            advanceWidth: 909,\n        },\n        d: {\n            x_min: 55,\n            x_max: 1006,\n            y_min: -20,\n            y_max: 1399,\n            ha: 1419,\n            leftSideBearing: 55,\n            advanceWidth: 1024,\n        },\n        e: {\n            x_min: 51,\n            x_max: 868,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 51,\n            advanceWidth: 909,\n        },\n        f: {\n            x_min: 41,\n            x_max: 783,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 41,\n            advanceWidth: 682,\n        },\n        g: {\n            x_min: 57,\n            x_max: 963,\n            y_min: -446,\n            y_max: 942,\n            ha: 1388,\n            leftSideBearing: 57,\n            advanceWidth: 1024,\n        },\n        h: {\n            x_min: 18,\n            x_max: 997,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 18,\n            advanceWidth: 1024,\n        },\n        i: {\n            x_min: 33,\n            x_max: 516,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 33,\n            advanceWidth: 569,\n        },\n        j: {\n            x_min: -142,\n            x_max: 397,\n            y_min: -446,\n            y_max: 1399,\n            ha: 1845,\n            leftSideBearing: -142,\n            advanceWidth: 569,\n        },\n        k: {\n            x_min: 14,\n            x_max: 1029,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 14,\n            advanceWidth: 1024,\n        },\n        l: {\n            x_min: 39,\n            x_max: 523,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 39,\n            advanceWidth: 569,\n        },\n        m: {\n            x_min: 33,\n            x_max: 1587,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 33,\n            advanceWidth: 1593,\n        },\n        n: {\n            x_min: 33,\n            x_max: 993,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 33,\n            advanceWidth: 1024,\n        },\n        o: {\n            x_min: 59,\n            x_max: 963,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 59,\n            advanceWidth: 1024,\n        },\n        p: {\n            x_min: 10,\n            x_max: 964,\n            y_min: -443,\n            y_max: 944,\n            ha: 1387,\n            leftSideBearing: 10,\n            advanceWidth: 1024,\n        },\n        q: {\n            x_min: 49,\n            x_max: 999,\n            y_min: -443,\n            y_max: 942.0135137169275,\n            ha: 1385.0135137169275,\n            leftSideBearing: 49,\n            advanceWidth: 1024,\n        },\n        r: {\n            x_min: 10,\n            x_max: 685,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 10,\n            advanceWidth: 682,\n        },\n        s: {\n            x_min: 104,\n            x_max: 713,\n            y_min: -20,\n            y_max: 942.0263161804552,\n            ha: 962.0263161804552,\n            leftSideBearing: 104,\n            advanceWidth: 797,\n        },\n        t: {\n            x_min: 27,\n            x_max: 572,\n            y_min: -18,\n            y_max: 1186,\n            ha: 1204,\n            leftSideBearing: 27,\n            advanceWidth: 569,\n        },\n        u: {\n            x_min: 18,\n            x_max: 981,\n            y_min: -21,\n            y_max: 921,\n            ha: 942,\n            leftSideBearing: 18,\n            advanceWidth: 1024,\n        },\n        v: {\n            x_min: 39,\n            x_max: 976,\n            y_min: -28,\n            y_max: 921,\n            ha: 949,\n            leftSideBearing: 39,\n            advanceWidth: 1024,\n        },\n        w: {\n            x_min: 43,\n            x_max: 1423,\n            y_min: -28,\n            y_max: 921,\n            ha: 949,\n            leftSideBearing: 43,\n            advanceWidth: 1479,\n        },\n        x: {\n            x_min: 35,\n            x_max: 989,\n            y_min: 0,\n            y_max: 921,\n            ha: 921,\n            leftSideBearing: 35,\n            advanceWidth: 1024,\n        },\n        y: {\n            x_min: 29,\n            x_max: 976,\n            y_min: -445,\n            y_max: 921,\n            ha: 1366,\n            leftSideBearing: 29,\n            advanceWidth: 1024,\n        },\n        z: {\n            x_min: 55,\n            x_max: 855,\n            y_min: 0,\n            y_max: 921,\n            ha: 921,\n            leftSideBearing: 55,\n            advanceWidth: 909,\n        },\n        '{': {\n            x_min: 205,\n            x_max: 717,\n            y_min: -377,\n            y_max: 1397,\n            ha: 1774,\n            leftSideBearing: 205,\n            advanceWidth: 983,\n        },\n        '|': {\n            x_min: 137,\n            x_max: 273,\n            y_min: -512,\n            y_max: 1535,\n            ha: 2047,\n            leftSideBearing: 137,\n            advanceWidth: 410,\n        },\n        '}': {\n            x_min: 266,\n            x_max: 778,\n            y_min: -377,\n            y_max: 1397,\n            ha: 1774,\n            leftSideBearing: 266,\n            advanceWidth: 983,\n        },\n        '~': {\n            x_min: 82,\n            x_max: 1028,\n            y_min: 380,\n            y_max: 666,\n            ha: 286,\n            leftSideBearing: 82,\n            advanceWidth: 1108,\n        },\n    },\n    fontFamily: 'serif',\n    resolution: 2048,\n    generatedOn: '2020-10-18T19:03:12.514Z',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Utility methods used by the rest of the VexFlow codebase.\nimport { Flow } from './flow';\nimport { log, RuntimeError } from './util';\nclass Vex {\n    // Users of `Vex.forEach(a, fn)` should use `Array.prototype.forEach()` instead.\n    // static forEach<T>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => void) {\n    //   arr.forEach(callbackFn);\n    // }\n    /**\n     * Take `arr` and return a new list consisting of the sorted, unique,\n     * contents of arr. Does not modify `arr`.\n     */\n    // eslint-disable-next-line\n    static sortAndUnique(arr, cmp, eq) {\n        if (arr.length > 1) {\n            const newArr = [];\n            let last;\n            arr.sort(cmp);\n            for (let i = 0; i < arr.length; ++i) {\n                if (i === 0 || !eq(arr[i], last)) {\n                    newArr.push(arr[i]);\n                }\n                last = arr[i];\n            }\n            return newArr;\n        }\n        else {\n            return arr;\n        }\n    }\n    /** Check if array `arr` contains `obj`. */\n    // eslint-disable-next-line\n    static contains(arr, obj) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n    // Get the 2D Canvas context from DOM element `canvas_sel`.\n    static getCanvasContext(canvasSelector) {\n        if (!canvasSelector) {\n            throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvasSelector);\n        }\n        const canvas = document.getElementById(canvasSelector);\n        if (!(canvas && canvas.getContext)) {\n            throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n        }\n        return canvas.getContext('2d');\n    }\n    /** Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds. */\n    // eslint-disable-next-line\n    static benchmark(s, f) {\n        const start_time = new Date().getTime();\n        f();\n        const elapsed = new Date().getTime() - start_time;\n        log(s, elapsed + 'ms');\n    }\n    // Get stack trace.\n    static stackTrace() {\n        const err = new Error();\n        return err.stack;\n    }\n}\nVex.Flow = Flow;\nexport { Vex };\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Ron B. Yeh\n//\n// A smaller initial bundle that supports dynamic importing of music engraving fonts.\n//\n// vexflow-core.ts is the entry point for output file vexflow-core.js.\n// It does not preload / bundle any music fonts by default.\n// All music fonts will be loaded dynamically via: `Flow.fetchMusicFont(fontName)`\n// Remember to call `Flow.setMusicFont(fontName)` after fetching the font module.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Flow } from '../src/flow';\nimport { Font } from '../src/font';\nimport { loadTextFonts } from '../src/fonts/textfonts';\nimport { globalObject, RuntimeError } from '../src/util';\n// fontModules maps font names => font module paths, which can be loaded at runtime by vexflow-core.js.\n// ADD_MUSIC_FONT\nconst fontModules = {\n    Bravura: './vexflow-font-bravura.js',\n    Gonville: './vexflow-font-gonville.js',\n    Petaluma: './vexflow-font-petaluma.js',\n    Leland: './vexflow-font-leland.js',\n    Custom: './vexflow-font-custom.js',\n};\n/**\n * @param fontName the name of the music font to load.\n * @param fontModuleOrPath Either a font module object (containing a .data and .metrics properties) or a path to a font module.\n * The font module is assumed to be in the same directory as the vexflow-core.js entry point.\n *\n * This replaces the default empty implementation in flow.ts.\n */\nFlow.fetchMusicFont = (fontName, fontModuleOrPath) => __awaiter(void 0, void 0, void 0, function* () {\n    const font = Font.load(fontName);\n    // If the font has already been loaded before we do nothing.\n    if (font.hasData()) {\n        return;\n    }\n    if (!fontModuleOrPath) {\n        // Determine the font module path.\n        if (fontName in fontModules) {\n            fontModuleOrPath = fontModules[fontName];\n        }\n        else {\n            throw new RuntimeError('UnknownFont', `Music font ${fontName} does not exist.`);\n        }\n    }\n    let fontModule;\n    if (typeof fontModuleOrPath === 'string') {\n        const module = yield import(/* webpackIgnore: true */ fontModuleOrPath);\n        const g = globalObject();\n        const VexFlowFont = g['VexFlowFont'];\n        if (typeof VexFlowFont !== 'undefined' && typeof VexFlowFont[fontName] !== 'undefined') {\n            // CJS font modules will set a global variable named: VexFlowFont.Bravura | VexFlowFont.Gonville | VexFlowFont.Petaluma | etc.\n            fontModule = VexFlowFont[fontName];\n        }\n        else {\n            // ESM font modules will export an object named \"Font\" with properties named \"data\" and \"metrics\".\n            // See vexflow-font-bravura.ts for an example.\n            fontModule = module.Font;\n        }\n    }\n    else {\n        fontModule = fontModuleOrPath;\n    }\n    font.setData(fontModule.data);\n    font.setMetrics(fontModule.metrics);\n});\n// Load the two text fonts that ChordSymbol & Annotation use.\nloadTextFonts();\n// Re-export all exports from index.ts.\nexport * from '../src/index';\n// Also collect all exports into a default export for CJS projects.\nexport * as default from '../src/index';\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { TextFormatter } from '../textformatter';\nimport { PetalumaScriptFont } from './petalumascript_glyphs';\nimport { RobotoSlabFont } from './robotoslab_glyphs';\nimport { SansFontBold } from './sans_bold_text_metrics';\nimport { SansFont } from './sans_text_metrics';\nimport { SerifFont } from './serif_text_metrics';\nexport function loadTextFonts() {\n    // Sans-serif fallback font, very close to Arial\n    {\n        const fontData = SansFontBold;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Usually @ is the tallest and widest character, although not the\n        // highest since it starts below the baseline.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: true,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Generic SANS font',\n        });\n    }\n    // Sans-serif fallback font, very close to Arial\n    {\n        const fontData = SansFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Usually @ is the tallest and widest character, although not the\n        // highest since it starts below the baseline.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Generic SANS font',\n        });\n    }\n    // Serif fallback font, very close to Times\n    {\n        const fontData = SerifFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Generic SERIF font',\n        });\n    }\n    // Roboto Slab\n    {\n        const fontData = RobotoSlabFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Previously we used 'H', but it isn't actually the tallest or the widest.\n        // Interestingly, the lowercase 'b' is the tallest glyph.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Text font to pair with the Bravura / Gonville music fonts.',\n        });\n    }\n    // PetalumaScript\n    {\n        const fontData = PetalumaScriptFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Text font to pair with the Petaluma music font.',\n        });\n    }\n}\n"],"names":["root","factory","exports","module","define","amd","window","globalThis","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","Function","e","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","isCategory","category","checkAncestors","constructorFcn","constructor","CATEGORY","getPrototypeOf","isAccidental","Category","Accidental","isAnnotation","Annotation","isBarline","Barline","isDot","Dot","isGraceNote","GraceNote","isGraceNoteGroup","GraceNoteGroup","isNote","Note","isRenderContext","RenderContext","isStaveNote","StaveNote","isStemmableNote","StemmableNote","isTabNote","TabNote","RuntimeError","Error","code","message","super","globalObject","self","defined","x","undefined","log","block","args","line","Array","slice","join","console","warn","err","stack","midLine","a","b","mid_line","n","parseInt","prefix","text","normalizeAngle","Math","PI","sumArray","arr","reduce","Fraction","static","Number","isNaN","t","GCD","length","LCM","shift","LCMM","numerator","denominator","set","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","__staticFractionA","copy","__staticFractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","floor","remainder","makeAbs","abs","toString","toSimplifiedString","__staticFractionTmp","toMixedString","s","q","f","parse","str","i","split","BoundingBox","that","y","w","h","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","new_x","new_y","new_w","max","new_h","BoundingBoxComputation","x1","NaN","y1","x2","y2","getX1","getY1","width","height","addPoint","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","p01x","denom","it","p01y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","t1","sqrt","t2","FontWeight","FontStyle","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","fontParser","Fonts","Font","fontSize","SIZE","_a","scaleToPxFrom","pt","parseFloat","unit","replace","toLowerCase","size","weight","style","fromCSSString","family","SANS_SERIF","NORMAL","cssFontShorthand","document","createElement","font","fontFamily","fontWeight","fontStyle","fontInfo","st","trim","wt","sz","scaleFactor","parsedWeight","ITALIC","fontName","woffURL","includeWoff2","fontFace","FontFace","load","fonts","host","WEB_FONT_HOST","files","WEB_FONT_FILES","fontPath","loadWebFont","data","metrics","setData","setMetrics","name","getName","getData","getMetrics","hasData","getResolution","resolution","getGlyphs","glyphs","lookupMetric","defaultValue","keyParts","currObj","SERIF","px","em","in","mm","cm","PetalumaScript","Index","id","type","class","Registry","defaultRegistry","registry","index","clear","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","_b","getElementsByAttribute","attribute","index_attr","index_attr_val","keys","map","k","getElementsByType","getElementsByClass","className","onUpdate","info","includes","Element","ID","children","attrs","newID","getCategory","rendered","getDefaultRegistry","addChildElement","child","push","setStyle","setGroupStyle","forEach","getStyle","applyStyle","context","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","indexOf","addClass","removeClass","splice","isRendered","setRendered","getAttributes","getSVGElement","suffix","element","oldID","getBoundingBox","getContext","setContext","setFont","toCSSString","textFont","defaultTextFont","TEXT_FONT","fontIsObject","fontIsString","fontIsUndefined","sizeWeightStyleAreUndefined","assign","validate","getFont","resetFont","setFontSize","getFontSize","fontSizeInPoints","convertSizeToPointValue","fontSizeInPixels","convertSizeToPixelValue","RESOLUTION","durations","durationAliases","keySignatures","C","num","Am","F","acc","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","G","Em","D","Bm","A","E","B","clefs","treble","line_shift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","int_val","CN","accidental","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","rest","X","octave","shift_right","accidentals","parenRightPaddingAdjustment","bb","db","bs","bss","bbs","ashs","afhf","accSagittal5v7KleismaUp","accSagittal5v7KleismaDown","accSagittal5CommaUp","accSagittal5CommaDown","accSagittal7CommaUp","accSagittal7CommaDown","accSagittal25SmallDiesisUp","accSagittal25SmallDiesisDown","accSagittal35MediumDiesisUp","accSagittal35MediumDiesisDown","accSagittal11MediumDiesisUp","accSagittal11MediumDiesisDown","accSagittal11LargeDiesisUp","accSagittal11LargeDiesisDown","accSagittal35LargeDiesisUp","accSagittal35LargeDiesisDown","accSagittalSharp25SDown","accSagittalFlat25SUp","accSagittalSharp7CDown","accSagittalFlat7CUp","accSagittalSharp5CDown","accSagittalFlat5CUp","accSagittalSharp5v7kDown","accSagittalFlat5v7kUp","accSagittalSharp","accSagittalFlat","accSagittalSharp5v7kUp","accSagittalFlat5v7kDown","accSagittalSharp5CUp","accSagittalFlat5CDown","accSagittalSharp7CUp","accSagittalFlat7CDown","accSagittalSharp25SUp","accSagittalFlat25SDown","accSagittalSharp35MUp","accSagittalFlat35MDown","accSagittalSharp11MUp","accSagittalFlat11MDown","accSagittalSharp11LUp","accSagittalFlat11LDown","accSagittalSharp35LUp","accSagittalFlat35LDown","accSagittalDoubleSharp25SDown","accSagittalDoubleFlat25SUp","accSagittalDoubleSharp7CDown","accSagittalDoubleFlat7CUp","accSagittalDoubleSharp5CDown","accSagittalDoubleFlat5CUp","accSagittalDoubleSharp5v7kDown","accSagittalDoubleFlat5v7kUp","accSagittalDoubleSharp","accSagittalDoubleFlat","accSagittal7v11KleismaUp","accSagittal7v11KleismaDown","accSagittal17CommaUp","accSagittal17CommaDown","accSagittal55CommaUp","accSagittal55CommaDown","accSagittal7v11CommaUp","accSagittal7v11CommaDown","accSagittal5v11SmallDiesisUp","accSagittal5v11SmallDiesisDown","accSagittalSharp5v11SDown","accSagittalFlat5v11SUp","accSagittalSharp7v11CDown","accSagittalFlat7v11CUp","accSagittalSharp55CDown","accSagittalFlat55CUp","accSagittalSharp17CDown","accSagittalFlat17CUp","accSagittalSharp7v11kDown","accSagittalFlat7v11kUp","accSagittalSharp7v11kUp","accSagittalFlat7v11kDown","accSagittalSharp17CUp","accSagittalFlat17CDown","accSagittalSharp55CUp","accSagittalFlat55CDown","accSagittalSharp7v11CUp","accSagittalFlat7v11CDown","accSagittalSharp5v11SUp","accSagittalFlat5v11SDown","accSagittalDoubleSharp5v11SDown","accSagittalDoubleFlat5v11SUp","accSagittalDoubleSharp7v11CDown","accSagittalDoubleFlat7v11CUp","accSagittalDoubleSharp55CDown","accSagittalDoubleFlat55CUp","accSagittalDoubleSharp17CDown","accSagittalDoubleFlat17CUp","accSagittalDoubleSharp7v11kDown","accSagittalDoubleFlat7v11kUp","accSagittal23CommaUp","accSagittal23CommaDown","accSagittal5v19CommaUp","accSagittal5v19CommaDown","accSagittal5v23SmallDiesisUp","accSagittal5v23SmallDiesisDown","accSagittalSharp5v23SDown","accSagittalFlat5v23SUp","accSagittalSharp5v19CDown","accSagittalFlat5v19CUp","accSagittalSharp23CDown","accSagittalFlat23CUp","accSagittalSharp23CUp","accSagittalFlat23CDown","accSagittalSharp5v19CUp","accSagittalFlat5v19CDown","accSagittalSharp5v23SUp","accSagittalFlat5v23SDown","accSagittalDoubleSharp5v23SDown","accSagittalDoubleFlat5v23SUp","accSagittalDoubleSharp5v19CDown","accSagittalDoubleFlat5v19CUp","accSagittalDoubleSharp23CDown","accSagittalDoubleFlat23CUp","accSagittal19SchismaUp","accSagittal19SchismaDown","accSagittal17KleismaUp","accSagittal17KleismaDown","accSagittal143CommaUp","accSagittal143CommaDown","accSagittal11v49CommaUp","accSagittal11v49CommaDown","accSagittal19CommaUp","accSagittal19CommaDown","accSagittal7v19CommaUp","accSagittal7v19CommaDown","accSagittal49SmallDiesisUp","accSagittal49SmallDiesisDown","accSagittal23SmallDiesisUp","accSagittal23SmallDiesisDown","accSagittal5v13MediumDiesisUp","accSagittal5v13MediumDiesisDown","accSagittal11v19MediumDiesisUp","accSagittal11v19MediumDiesisDown","accSagittal49MediumDiesisUp","accSagittal49MediumDiesisDown","accSagittal5v49MediumDiesisUp","accSagittal5v49MediumDiesisDown","accSagittal49LargeDiesisUp","accSagittal49LargeDiesisDown","accSagittal11v19LargeDiesisUp","accSagittal11v19LargeDiesisDown","accSagittal5v13LargeDiesisUp","accSagittal5v13LargeDiesisDown","accSagittalSharp23SDown","accSagittalFlat23SUp","accSagittalSharp49SDown","accSagittalFlat49SUp","accSagittalSharp7v19CDown","accSagittalFlat7v19CUp","accSagittalSharp19CDown","accSagittalFlat19CUp","accSagittalSharp11v49CDown","accSagittalFlat11v49CUp","accSagittalSharp143CDown","accSagittalFlat143CUp","accSagittalSharp17kDown","accSagittalFlat17kUp","accSagittalSharp19sDown","accSagittalFlat19sUp","accSagittalSharp19sUp","accSagittalFlat19sDown","accSagittalSharp17kUp","accSagittalFlat17kDown","accSagittalSharp143CUp","accSagittalFlat143CDown","accSagittalSharp11v49CUp","accSagittalFlat11v49CDown","accSagittalSharp19CUp","accSagittalFlat19CDown","accSagittalSharp7v19CUp","accSagittalFlat7v19CDown","accSagittalSharp49SUp","accSagittalFlat49SDown","accSagittalSharp23SUp","accSagittalFlat23SDown","accSagittalSharp5v13MUp","accSagittalFlat5v13MDown","accSagittalSharp11v19MUp","accSagittalFlat11v19MDown","accSagittalSharp49MUp","accSagittalFlat49MDown","accSagittalSharp5v49MUp","accSagittalFlat5v49MDown","accSagittalSharp49LUp","accSagittalFlat49LDown","accSagittalSharp11v19LUp","accSagittalFlat11v19LDown","accSagittalSharp5v13LUp","accSagittalFlat5v13LDown","accSagittalDoubleSharp23SDown","accSagittalDoubleFlat23SUp","accSagittalDoubleSharp49SDown","accSagittalDoubleFlat49SUp","accSagittalDoubleSharp7v19CDown","accSagittalDoubleFlat7v19CUp","accSagittalDoubleSharp19CDown","accSagittalDoubleFlat19CUp","accSagittalDoubleSharp11v49CDown","accSagittalDoubleFlat11v49CUp","accSagittalDoubleSharp143CDown","accSagittalDoubleFlat143CUp","accSagittalDoubleSharp17kDown","accSagittalDoubleFlat17kUp","accSagittalDoubleSharp19sDown","accSagittalDoubleFlat19sUp","accSagittalShaftUp","accSagittalShaftDown","accSagittalAcute","accSagittalGrave","accSagittal1MinaUp","accSagittal1MinaDown","accSagittal2MinasUp","accSagittal2MinasDown","accSagittal1TinaUp","accSagittal1TinaDown","accSagittal2TinasUp","accSagittal2TinasDown","accSagittal3TinasUp","accSagittal3TinasDown","accSagittal4TinasUp","accSagittal4TinasDown","accSagittal5TinasUp","accSagittal5TinasDown","accSagittal6TinasUp","accSagittal6TinasDown","accSagittal7TinasUp","accSagittal7TinasDown","accSagittal8TinasUp","accSagittal8TinasDown","accSagittal9TinasUp","accSagittal9TinasDown","accSagittalFractionalTinaUp","accSagittalFractionalTinaDown","accidentalNarrowReversedFlat","accidentalNarrowReversedFlatAndFlat","accidentalWilsonPlus","accidentalWilsonMinus","articulations","between_lines","av","aboveCode","belowCode","ao","ah","am","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","Tables","MUSIC_FONT_STACK","clef","keyOctaveGlyph","params","options","octave_shift","duration","sanitizeDuration","pieces","toUpperCase","clefProperties","stroke","int_value","customNoteHeadProps","glyphName","codeNoteHead","displaced","integer","noteValue","fret","scale","glyph","shift_y","glyphMetrics","Glyph","TABLATURE_FONT_SCALE","textWidth","getWidth","artic","spec","keySpec","notes","acc_list","durationNumber","durationToFraction","ticks","durationCodes","glyphTypeProperties","code_head","common","NOTATION_FONT_SCALE","UNISON","SOFTMAX_FACTOR","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RENDER_PRECISION_PLACES","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalMap","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","unicode","sharp","String","fromCharCode","flat","natural","triangle","degrees","circle","validTypes","m","ci","cx","sf","sb","sq","tu","td","TIME4_4","num_beats","beat_value","stem","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","ledger_code_head","beam_count","stem_beam_extension","code_flag_upstem","code_flag_downstem","OutlineCode","ModifierPosition","GlyphCacheEntry","fontStack","point","loadMetrics","bbox","getOutlineBoundingBox","outline","x_shift","y_shift","lookupFontMetric","GlyphOutline","originX","originY","precision","round","nextX","nextY","parts","MOVE","LINE","QUADRATIC","BEZIER","lookupGlyph","x_min","x_max","ha","cached_outline","ctx","x_pos","y_pos","cache","lookup","customScale","renderOutline","go","beginPath","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","fill","bboxComp","penX","penY","topGlyphs","botGlyphs","originShift","setOptions","reset","getCode","setPoint","setStave","stave","getXShift","setXShift","getYshift","setYShift","checkMetrics","metricsScale","setOriginX","xShift","setOriginY","yShift","setOrigin","render","xPos","yPos","checkStave","renderToStave","getYForGlyphs","Map","entries","CURRENT_CACHE_KEY","entry","Modifier","Position","PositionString","center","CENTER","above","ABOVE","below","BELOW","left","LEFT","right","RIGHT","text_line","spacingFromNextModifier","setWidth","getNote","note","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifierContext","checkModifierContext","setModifierContext","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setXOffset","Music","NUM_TONES","canonical_notes","roots","root_values","root_indices","diatonic_intervals","diatonic_accidentals","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","noteValues","root_index","cn","cb","cbb","dn","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","match","exec","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySignature","keySigParts","scaleName","keySigString","noteLocation","scaleMap","rootName","noteName","L","DEBUG","state","musicFont","currentMusicFont","noteheadAccidentalPadding","leftShift","left_shift","accidentalSpacing","additionalPadding","accList","prevNote","shiftL","props","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","sort","lineList","previousLine","accShift","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","clearance","clearanceRequired","collision","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","getModifiers","modifier","addModifier","getGraceNotes","render_options","font_scale","parenLeftPadding","parenRightPadding","accidentalCodes","cautionary","fontScale","parenLeft","parenRight","parenWidth","setAsCautionary","start","getModifierStartXY","accX","accY","Stem","UP","DOWN","WIDTH","HEIGHT","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","getHeight","y_offset","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","min","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stem_x","stem_y","y_base_offset","stemletYOffset","openGroup","pointerBBox","closeGroup","TextFormatter","textWidthCache","textHeightCache","registeredFonts","formatterInfo","requestedFont","candidates","requestedFamilies","requestedFamily","startsWith","formatter","values","bold","isBold","italic","isItalic","perfectMatch","find","partialMatch","fontSizeInPt","overwrite","serifs","monospaced","superscriptOffset","subscriptOffset","maxSizeGlyph","cacheKey","updateParams","localHeightCache","updateCacheKey","BOLD","getGlyphMetrics","character","maxHeight","getWidthForCharacterInEm","advanceWidth","getYForCharacterInPx","rv","yMin","yMax","y_min","y_max","getYForStringInPx","extent","curY","getWidthForTextInEm","cachedWidths","getWidthForTextInPx","AnnotationHorizontalJustify","AnnotationVerticalJustify","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","textFormatter","create","verticalSpaceNeeded","glyphWidth","getGlyphProps","horizontalJustification","stemDirection","hasStem","getStemDirection","lines","draw_stem","getStem","getNoteType","getNumLines","verticalJustification","VerticalJustify","TOP","noteLine","getLineNumber","leastString","top_text_line","BOTTOM","greatestString","curBottom","rightOverlap","right_shift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","text_width","text_height","getStemX","stem_ext","spacing","has_stem","checkStem","getYs","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","fillText","HorizontalJustify","centerStem","CENTER_STEM","top","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveOrGraceNote","Articulation","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","articulationCodes","endsWith","setBetweenLines","betweenLines","textLine","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","padding","stemTipY","stemBaseY","getTopY","INITIAL_OFFSET","getBottomY","offsetDirection","articLine","snappedLine","snapLineToStaff","setRawFont","drawDot","color","arc","closePath","Tickable","_preFormatted","_postFormatted","intrinsicTicks","tickMultiplier","modifiers","tupletStack","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","centerXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","pop","setTuplet","addToModifierContext","mc","addMember","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","xStart","leftDisplacedHeadPx","xPre1","xAbs","xPost1","notePx","xPost2","rightDisplacedHeadPx","xEnd","xFreedomRight","xWidth","yy","spaceDeviation","durationString","dots","noteStruct","durationProps","parseDuration","customTypes","durationToTicks","currentTicks","parsedNoteStruct","parseNoteStruct","JSON","stringify","keyProps","noteType","duration_override","glyphProps","customGlyphs","playNote","annotation_spacing","glyph_font_scale","stroke_px","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getGlyph","getGlyphWidth","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","filter","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","getMembers","getState","glyphPx","getNoteStartX","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifierPosition","BarlineType","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","SymbolTypes","SymbolModifiers","StaveModifier","placeGlyphOnLine","customShift","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","typeString","single","SINGLE","double","DOUBLE","end","END","repeatBegin","REPEAT_BEGIN","repeatEnd","REPEAT_END","repeatBoth","REPEAT_BOTH","none","NONE","thickness","TYPE","widths","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","setType","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","staveCtx","botY","getBottomLineBottomY","fillRect","begin","dot_x","dot_radius","dot_y","BarNote","barline","Bend","bends","last_width","stringPos","release","phrase","tap","line_width","line_style","bend_width","release_width","updateWidth","setTap","getText","getTextHeight","totalWidth","additional_width","draw_width","lowestY","bend_height","annotation_y","renderBend","cp_x","cp_y","renderRelease","renderArrowHead","yBase","renderText","render_x","measureText","last_bend","last_bend_draw_width","last_drawn_width","ChordSymbol","superSubRatio","global","NO_TEXT_FORMAT","val","noFormat","glyphCode","engravingFontResolution","spacingBetweenBlocks","metric","getMetricForGlyph","yOffset","leftSideBearing","kerningOffset","chordSymbol","lowerKerningText","upperKerningText","symbolModifier","SUPERSCRIPT","SUBSCRIPT","minPadding","symbols","nonSuperWidth","symbol","fontAdj","scaleSize","glyphAdj","symbolWidth","lineSpaces","vAlign","j","symbolBlocks","sup","isSuperscript","sub","isSubscript","superSubScale","adj","symbolType","GLYPH","superSubFontSize","getWidthForGlyph","getYShiftForGlyph","getXShiftForGlyph","TEXT","getYOffsetForText","over","prev","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","getReportWidth","getHorizontal","horizontal","vertical","useKerning","reportWidth","setReportWidth","barIndex","findIndex","xoff","yoff","symIndex","accum","getKerningAdjustment","currSymbol","prevSymbol","adjustment","preKernUpper","preKernLower","some","xx","kerningOffsetPixels","getSymbolBlock","_c","symbolBlock","glyphArgs","glyphPoints","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","stem_base","isSuper","isSub","smallerFontSize","diminished","dim","halfDiminished","augmented","majorSeventh","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","symbolTypes","symbolModifiers","all","dot","setDotShiftY","dot_list","max_shift_map","note_id","dot_shift","x_width","last_line","last_note","prev_dotted_space","half_shiftY","radius","forceFlagRight","FretHandFinger","nums","nums_list","prev_note","shiftLeft","shiftRight","pos","textHeight","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","lastLine","lastNote","num_shift","numWidth","fingerings","fingeringString","number","Fingering","fingering","finger","x_offset","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","NoteHead","custom_glyph","stem_up_x_offset","stem_down_x_offset","note_type","glyph_code","custom_glyph_code","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","fontShift","displacedFontShift","half_spacing","min_y","getYForNote","head_x","categorySuffix","staveSpace","durationToNumber","breve_lines","drawSlashNoteHead","renderGlyph","setStem","buildStem","buildFlag","hasFlag","flagCode","getBaseCustomNoteHeadGlyphProps","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","setStemDirection","offsets","offsetYBaseStemUp","offsetYTopStemUp","offsetYBaseStemDown","offsetYTopStemDown","getCenterGlyphX","stem_extension_override","setStemLength","drawStem","stemOptions","shiftRestVertical","dir","delta","maxLine","minLine","setKeyLine","getKeyLine","STEM_UP","STEM_DOWN","LEDGER_LINE_OFFSET","minNoteheadPadding","notesList","sortedKeyProps","minL","stemMax","stemMin","maxL","isrest","voice_shift","getVoiceShiftWidth","is_displaced","noteU","noteM","noteL","voiceXShift","lineSpacing","lineDiff","noteUHead","noteLHead","centerRest","ledgerLineStyle","use_default_head_x","_noteHeads","calculateKeyProps","auto_stem","autoStem","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","calcNoteDisplacements","noteProps","notehead","calculateOptimalStemDirection","keyProperties","minY","maxY","halfLineSpacing","frac","resultLine","thisLine","isChord","getNoteHeadBounds","setNoteDisplaced","getRightShift","restLine","isInnerNoteIndex","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","getFlagStyle","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","yTop","Infinity","yBottom","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","noteHeads","note_heads","drawLedgerLines","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","drawModifiers","noteheadParam","noteheadStyle","hasNoBeam","drawFlag","_d","_e","noteStemHeight","flagX","flagY","getStaveNoteScale","drawNoteHeads","super_stem_extension","mid_line_distance","lines_over_octave_from_mid_line","spacing_between_lines","xBegin","shouldRenderStem","stemX","StaveTie","setNotes","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","first_note","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","first_x_px","first_y_px","last_y_px","top_cp_y","bottom_cp_y","center_x","getNotes","getTieStartX","getTieEndX","TabTie","VoiceMode","Voice","Mode","time","voiceTime","resolutionMultiplier","mode","STRICT","ticksUsed","largestTickWidth","softmaxFactor","totalTicks","smallestTickCount","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","tickable","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","expTicksUsed","reCalculateExpTicksUsed","softmax","tickValue","v","exp","addTickable","addTickables","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","grace_notes","show_slur","slur","slur_y_shift","beams","Formatter","joinVoices","format","getMinTotalWidth","beamNotes","Beam","beam_width","partial_beam_length","graceNote","TieClass","NoteSubGroup","groups","group","TickContext","tContext","contexts","tContexts","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","totalLeftPx","totalRightPx","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","getCurrentTick","setCurrentTick","tick","Ornament","ornament","ornamentRelease","ornamentAttack","reportedWidth","ornamentArticulation","ornamentNoteTransition","ornamentAlignWithNoteHead","ornamentMetrics","delayed","accidentalLowerPadding","accidentalUpperPadding","ornamentCodes","adjustForStemDirection","stemUpYOffset","setDelayed","setUpperAccidental","accid","accidentalUpper","setLowerAccidental","accidentalLower","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","nextContext","getNextContext","Parenthesis","parentheses","x_widthL","x_widthR","parenthesis","getPoint","isHTMLCanvas","HTMLCanvasElement","toDataURL","isHTMLDiv","HTMLDivElement","appendChild","CanvasContext","CANVAS_BROWSER_SIZE_LIMIT","limit","context2D","canvas","clearRect","cls","setBackgroundFillStyle","blur","getTransform","setLineCap","capType","lineCap","setLineDash","dash","resize","devicePixelRatio","dpr","sanitizeCanvasDims","rect","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","ATTRIBUTES_TO_IGNORE","path","SVG_NS","TWO_PI","SVGContext","backgroundFillStyle","fontCSSString","svg","parent","pen","defaultFontAttributes","scaleX","scaleY","attributes","groupAttributes","applyAttributes","shadow_attributes","state_stack","svgElementType","createElementNS","lineDash","visibleWidth","visibleHeight","setViewBox","viewBox_or_minX","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","removeChild","rectangle","x0","cos","y0","sin","tmpStartTest","tmpEndTest","large","sweep","getShadowStyle","sa","measureTextCache","txt","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","TextJustification","VoltaType","measureImpl","getBBox","Renderer","elementId","backend","background","renderer","lastContext","buildContext","Backends","CANVAS","SVG","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","arg0","arg1","maybeElement","willReadFrequently","LineEndType","StringNumber","stringNumber","verticalPadding","stemPadding","leftPadding","rightPadding","shift_left","glyphLine","num_shiftR","num_width","string_number","stem_offset","dashed","leg","drawCircle","setLineEndType","setStringNumber","setLastNote","setDashed","setDrawCircle","len","pattern","drawDashedLine","Stroke","strokes","strokeList","string","getPositions","strokeShift","all_voices","addEndNote","note_end","line_space","arrow","arrow_shift_x","arrow_y","text_y","Type","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","Vibrato","vibratos","vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","setHarsh","vx","vy","renderVibrato","opts","num_waves","ModifierContext","members","formatted","member","getLeftShift","Clef","types","tab","annotationSmufl","attachment","KeySignature","cancelKeySpec","alterKeySpec","setKeySig","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","xPosition","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","concat","addToStave","convertAccLines","customLines","offset","alterKey","convertToAlterAccList","firstAccidentalType","cancelAccList","getEndClef","getClef","Repetition","symbol_type","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSignoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","draw_coda","text_x","symbol_x","modifierWidth","getVerticalBarWidth","StaveSection","section","drawRect","shift_x","setStaveSection","textY","headroom","StaveTempo","tempo","setTempo","bpm","noteTextFont","noteTextFormatter","stem_height","flagMetrics","TextNote","GLYPHS","segno","mordent_upper","mordent_lower","p","z","coda","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","superscript","subscript","smooth","justification","struct","Justification","StaveText","setStaveText","setText","getBottomLineY","Volta","volta","top_y","vert_height","BEGIN_END","TimeSignatureGlyph","timeSignature","topDigits","botDigits","topWidth","timeSigType","topGlyph","botWidth","botGlyph","lineShift","topStartX","botStartX","start_x","topLine","bottomLine","TimeSignature","timeSpec","customPadding","validate_args","is_numeric","fontLineShift","setTimeSig","parseTimeSpec","numbers","test","assertIsValidTimeSig","makeTimeSignatureGlyph","getInfo","setGlyph","getTimeSpec","getIsNumeric","setIsNumeric","isNumeric","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","Stave","defaultPadding","end_x","measure","endClef","vertical_bar_width","num_lines","fill_style","left_bar","right_bar","spacing_between_lines_px","space_above_staff_ln","space_below_staff_ln","top_text_position","bottom_text_position","line_config","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","setDefaultLedgerLineStyle","visible","setNoteStartX","getNoteEndX","setNumLines","mod","setMeasure","getMeasure","getModifierXShift","begBarline","setRepetitionType","setVoltaType","number_t","setSection","staveSection","getLineForY","setBegBarType","setEndBarType","setClef","clefSpec","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","staves","adjustCategoryStartX","minStartX","adjustX","allModifiers","bAdjust","maxX","drawBoldDoubleLine","topX","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","texts","newType","content","SINGLE_RIGHT","THIN_DOUBLE","attachment_height","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","noteIndex","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","paddingBetween","accumulator","stavePadding","contextGaps","gaps","gap","totalCost","toFixed","total","auto_beam","align_rests","applyAndGetBeams","formatToStave","tabstave","tabnotes","autobeam","notevoice","tabvoice","alignAllNotes","alignTuplets","currTickable","prevTickable","formatterOptions","globalSoftmax","maxIterations","justifyWidth","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","array","list","modifierContexts","lossHistory","alignRests","AlignRestsToNotes","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","tickToContextMap","integerTicks","staveTickToContextMap","newContext","makeContext","addToContext","tickList","createContexts","contextArray","getTickContexts","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","calcMinDistance","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","tune","alpha","current","cost","optionsParam","TupletLocation","Tuplet","LOCATION_TOP","LOCATION_BOTTOM","NESTING_OFFSET","tupletMetrics","numerator_glyphs","denom_glyphs","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","ratioed","setTupletLocation","location","resolveGlyphs","attach","detach","setBracketed","setRatioed","getBeatsOccupied","setBeatsOccupied","beats","setNotesOccupied","unshift","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nested_tuplet_y_offset","topModifierOffset","modLines","modY","noteHeadOffset","stemOffset","lineCheck","nn","bottom_y","addGlyphWidth","notation_start_x","shiftY","colon_x","colon_radius","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_RIGHT","BEAM_BOTH","time_sig","beatTotal","beatValue","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","vf_notes","memo","unbeamable","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","show_stemlets","secondary_breaks","secondary_break_ticks","flat_beams","flat_beam_offset","slope","forcedPartialDirections","stem_weight","break_on_indices","max_slope","min_slope","slope_iterations","slope_cost","stemlet_extension","min_flat_beam_offset","beamCount","breakSecondaryAt","indices","setPartialBeamSideAt","side","unsetPartialBeamSideAt","getSlopeY","calculateSlope","firstNote","initialSlope","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","crossStemExtension","totalBeamWidth","lookupBeamDirection","prev_tick","next_tick","forcedBeamDirection","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","getBeamLines","tick_of_duration","beam_started","beam_lines","current_beam","previous_should_break","tick_tally","should_break","next_note","beam_alone","beam_direction","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","ClefNote","abs_x","Crescendo","extend_left","extend_right","decrescendo","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","renderHairpin","CurvePosition","Curve","nearHead","NEAR_HEAD","nearTop","NEAR_TOP","from","to","position_end","invert","cps","renderCurve","first_x","first_y","last_x","last_y","cp0x","cp0y","cp_spacing","end_metric","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","bind","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","standardAccidentals","notePiece","GhostNote","buildAndAttach","setId","commaSeparatedRegex","setClass","defaults","easyScoreHook","throwOnError","parser","ERROR_MSG","parameter","GlyphNote","ignoreTicks","SCALE","slash","ret","staveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beam_slope","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","KeySigNote","semibreve_rest","MultiMeasureRest","number_of_measures","xs","hasPaddingLeft","hasPaddingRight","hasLineThickness","hasSymbolSpacing","padding_left","padding_right","line_thickness","symbol_spacing","use_symbols","show_number","number_line","number_glyph_point","serif_thickness","semibreve_rest_glyph_scale","getXs","drawLine","spacingBetweenLines","lineThicknessHalf","serifThickness","bot","leftIndented","rightIndented","lineTop","lineBottom","drawSymbols","n4","n2","n1","get_semibreve_rest","rest_scale","rest_width","yMiddle","timeSig","drawPedalGlyph","glyph_data","PedalMarking","pedal","MIXED","setCustomText","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","pedal_depress","pedal_release","mixed","CODES","RepeatNote","drawArrowHead","StaveLine","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","applyLineStyle","applyFontStyle","drawArrowLine","pt1","pt2","both_arrows","distance","ratio","end_y","start_y","line_angle","angle1","angle2","top_x","bottom_x","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","vertical_position","System","partStaves","partStaveInfos","partVoices","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","getStaves","getVoices","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","addVoices","options_details","debugNoteMetricsYs","part","lastY","formatBegModifiers","plotDebugging","plotMetrics","glyphPropsArr","positions","ghost","draw_dots","draw_stem_through_stave","setGhost","tabToGlyphProps","getStemY","stemDownLine","stemStartLine","flag_x","flag_y","drawStemThrough","stemThrough","stemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","strings","containsLastString","containsFirstString","line_ys","isTopBound","isBottomBound","getPartialStemLines","strings_used","stem_through","getUnusedStringGroups","drawPositions","tab_x","render_stem","TabStave","addTabGlyph","TextBracket","TextBracketPosition","Positions","PositionsString","stop","show_bracket","underline_superscript","main_measure","main_width","main_height","super_y","super_measure","super_width","super_height","line_y","TextDynamics","sequence","glyph_font_size","total_width","letter","letter_x","current_letter","TimeSigNote","tsGlyph","VibratoBracket","bracket_data","stop_x","Factory","renderQ","systems","initRenderer","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","kerning","upperAccidental","lowerAccidental","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","curve","tie","vibratoBracket","textBracket","system","GraceTabNote","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","StaveHairpin","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","left_shift_px","right_shift_px","setRenderOptions","hairpin","dis","staff_height","l_shift","r_shift","CRESC","DECRESC","TabSlide","SLIDE_UP","SLIDE_DOWN","first_fret","last_fret","slide_y","Tremolo","y_spacing_scale","extra_stroke_scale","y_spacing","Tuning","names","standard","dagdad","dropd","standardBanjo","tuningString","tuningValues","setTuning","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","integerToNote","Flow","BUILD","VERSION","DATE","fontNames","fontModuleOrPath","hasKeySignature","getKeySignatures","PetalumaScriptFont","$","I","J","K","N","O","Q","U","V","Y","Z","_","l","generatedOn","RobotoSlabFont","SansFontBold","SansFont","smufl","Description","SerifFont","Vex","cmp","eq","newArr","last","canvasSelector","start_time","Date","getTime","fontModules","Bravura","Gonville","Petaluma","Leland","Custom","fetchMusicFont","fontModule","import","VexFlowFont","fontData","registerInfo","description","loadTextFonts"],"sourceRoot":""}