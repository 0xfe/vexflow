{"version":3,"sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/./src/vex.js","webpack://Vex/./src/fraction.js","webpack://Vex/./src/registry.js","webpack://Vex/./src/element.js","webpack://Vex/./src/boundingboxcomputation.js","webpack://Vex/./src/boundingbox.js","webpack://Vex/./src/fonts/vexflow_font.js","webpack://Vex/./src/glyph.js","webpack://Vex/./src/tables.js","webpack://Vex/./src/canvascontext.js","webpack://Vex/./src/raphaelcontext.js","webpack://Vex/./src/svgcontext.js","webpack://Vex/./src/renderer.js","webpack://Vex/./src/stem.js","webpack://Vex/./src/tuplet.js","webpack://Vex/./src/beam.js","webpack://Vex/./src/voice.js","webpack://Vex/./src/staveconnector.js","webpack://Vex/./src/tickable.js","webpack://Vex/./src/note.js","webpack://Vex/./src/notehead.js","webpack://Vex/./src/stemmablenote.js","webpack://Vex/./src/modifier.js","webpack://Vex/./src/dot.js","webpack://Vex/./src/stavenote.js","webpack://Vex/./src/frethandfinger.js","webpack://Vex/./src/music.js","webpack://Vex/./src/accidental.js","webpack://Vex/./src/notesubgroup.js","webpack://Vex/./src/stavetie.js","webpack://Vex/./src/tabtie.js","webpack://Vex/./src/gracenotegroup.js","webpack://Vex/./src/strokes.js","webpack://Vex/./src/stringnumber.js","webpack://Vex/./src/articulation.js","webpack://Vex/./src/tickcontext.js","webpack://Vex/./src/ornament.js","webpack://Vex/./src/annotation.js","webpack://Vex/./src/bend.js","webpack://Vex/./src/vibrato.js","webpack://Vex/./src/modifiercontext.js","webpack://Vex/./src/formatter.js","webpack://Vex/./src/stavemodifier.js","webpack://Vex/./src/stavebarline.js","webpack://Vex/./src/staverepetition.js","webpack://Vex/./src/stavesection.js","webpack://Vex/./src/stavetempo.js","webpack://Vex/./src/textnote.js","webpack://Vex/./src/stavetext.js","webpack://Vex/./src/clef.js","webpack://Vex/./src/keysignature.js","webpack://Vex/./src/timesignature.js","webpack://Vex/./src/stavevolta.js","webpack://Vex/./src/stave.js","webpack://Vex/./src/tabstave.js","webpack://Vex/./src/tabnote.js","webpack://Vex/./src/vibratobracket.js","webpack://Vex/./src/multimeasurerest.js","webpack://Vex/./src/clefnote.js","webpack://Vex/./src/keysignote.js","webpack://Vex/./src/timesignote.js","webpack://Vex/./src/tabslide.js","webpack://Vex/./src/gracenote.js","webpack://Vex/./src/gracetabnote.js","webpack://Vex/./src/tuning.js","webpack://Vex/./src/keymanager.js","webpack://Vex/./src/stavehairpin.js","webpack://Vex/./src/curve.js","webpack://Vex/./src/textdynamics.js","webpack://Vex/./src/staveline.js","webpack://Vex/./src/pedalmarking.js","webpack://Vex/./src/textbracket.js","webpack://Vex/./src/barnote.js","webpack://Vex/./src/ghostnote.js","webpack://Vex/./src/tremolo.js","webpack://Vex/./src/crescendo.js","webpack://Vex/./src/parser.js","webpack://Vex/./src/easyscore.js","webpack://Vex/./src/factory.js","webpack://Vex/./src/system.js","webpack://Vex/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","enumerable","get","getter","value","key","bind","Object","prototype","hasOwnProperty","call","object","property","Vex","L","block","args","line","Array","slice","join","console","log","MakeException","name","message","data","Error","RERR","RuntimeError","code","this","Merge","destination","source","Min","Math","min","Max","max","forEach","a","fn","i","length","RoundN","x","n","parseInt","MidLine","b","mid_line","SortAndUnique","arr","cmp","eq","last","newArr","sort","push","Contains","obj","getCanvasContext","canvas_sel","canvas","document","getElementById","getContext","drawDot","ctx","y","color","save","setFillStyle","beginPath","arc","PI","closePath","fill","restore","BM","s","f","start_time","Date","getTime","elapsed","StackTrace","stack","W","Prefix","text","prefix","Fraction","numerator","denominator","set","t","GCD","LCM","arg0","shift","LCMM","undefined","u","d","gcd","param1","param2","otherNumerator","otherDenominator","lcm","compare","__compareA","copy","simplify","__compareB","subtract","greaterThanEquals","greaterThan","floor","abs","__tmp","toString","q","quotient","fraction","toSimplifiedString","str","split","X","setIndexValue","index","id","elem","Registry","clear","type","class","oldValue","getAttribute","setAttribute","INDEXES","updateIndex","onRegister","attrName","keys","map","getElementsByAttribute","className","array","filter","includes","concat","registry","defaultRegistry","Element","attrs","newID","el","classes","boundingBox","context","rendered","getDefaultRegistry","register","ID","style","getStyle","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","checkContext","applyStyle","draw","restoreStyle","onUpdate","BoundingBoxComputation","x1","y1","x2","y2","Number","NaN","addPoint","isNaN","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","t1","sqrt","addX","addY","t2","BoundingBox","w","h","that","new_x","new_y","new_w","new_h","rect","stroke","Font","processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","command","nextX","nextY","Glyph","point","options","cache","font","metrics","x_shift","y_shift","originShift","setOptions","reset","glyph","glyphs","x_min","x_max","ha","o","cached_outline","x_pos","y_pos","val","nocache","scale","resolution","loadMetrics","renderOutline","moveTo","m","l","lineTo","quadraticCurveTo","bezierCurveTo","bboxComp","addQuadraticCurve","width","height","stave","bbox","getOutlineBoundingBox","getW","getH","xShift","getX","yShift","getY","setOriginX","setOriginY","setRendered","getYForGlyphs","Flow","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RESOLUTION","DEFAULT_NOTATION_FONT_SCALE","DEFAULT_TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","TEXT_HEIGHT_OFFSET_HACK","IsKerned","clefProperties","clef","props","values","line_shift","keyProperties","params","octave_shift","pieces","k","toUpperCase","note_values","octave","int_value","int_val","shift_right","glyph_name","note_glyph","accidental","displaced","rest","stem_up_y_offset","stem_down_y_offset","integerToNote","integer","noteValue","table","0","1","2","3","4","5","6","7","8","9","10","11","tabToGlyph","fret","shift_y","glyphMetrics","getMetrics","textWidth","getWidth","articulationCodes","artic","articulations","between_lines","accidentalCodes","acc","accidentals","parenRightPaddingAdjustment","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","ornamentCodes","ornaments","keySignature","spec","keySpec","keySpecs","notes","accidentalList","acc_list","num","unicode","String","fromCharCode","parseNoteDurationString","durationString","result","exec","duration","dots","parseNoteData","noteData","durationStringData","ticks","durationToTicks","currentTicks","sanitizeDuration","alias","durationAliases","durations","durationToFraction","parse","durationToNumber","durationToGlyph","duration_codes","glyphTypeProperties","customGlyphTypeProperties","code_head","common","stem","stem_offset","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","beam_count","code_flag_upstem","code_flag_downstem","smufl","to_code_points","bracketTop","bracketBottom","barlineTick","segno","coda","gClef","cClef","fClef","unpitchedPercussionClef1","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","noteheadDoubleWhole","noteheadWhole","noteheadHalf","noteheadBlack","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleX","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalFlat","accidentalNatural","accidentalSharp","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalBuyukMucennebFlat","accidentalBakiyeFlat","accidentalKomaSharp","accidentalKucukMucennebSharp","accidentalKoron","accidentalSori","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articStaccatissimoAbove","articMarcatoAbove","fermataAbove","fermataBelow","breathMarkComma","breathMarkUpbow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restHalf","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentMordentInverted","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","wiggleArpeggiatoUp","arrowheadBlackUp","arrowheadBlackDown","TIME4_4","num_beats","beat_value","CanvasContext","vexFlowCanvasContext","WIDTH","HEIGHT","clearRect","family","size","weight","background_fillStyle","blur","cap_type","lineCap","dash","lineDash","parseFloat","resize","fillRect","radius","startAngle","endAngle","antiClockwise","glow","measureText","fillText","RaphaelContext","element","paper","Raphael","path","pen","state","font_family","font_size","font_weight","attributes","background_attributes","shadow_attributes","state_stack","transform","setSize","viewBox","attr","normalizeAngle","angle","tmp","delta","arcHelper","cos","sin","largeArcFlag","sweepFlag","out","sa","num_paths","toFixed","opacity","strokeWidth","txt","bounds","getBBox","remove","pop","attrNamesToIgnoreMap","fontAttrNamesToIgnore","SVGContext","svgNS","svg","create","appendChild","groups","parent","iePolyfill","svgElementType","createElementNS","cls","group","pointerBBox","navigator","ie","test","userAgent","bold","italic","indexOf","replace","fontAttributes","fontSize","fontArray","trim","match","applyAttributes","visibleWidth","visibleHeight","setViewBox","xMin","yMin","viewBoxString","attrNamesToIgnore","nodeName","propertyName","setAttributeNS","lastChild","removeChild","rectangle","add","peth","textContent","ieMeasureTextFix","widthCorrection","lastContext","Renderer","elementId","backend","Backends","CANVAS","bolsterCanvasContext","RAPHAEL","SVG","background","renderer","setBackgroundFillStyle","buildContext","USE_CANVAS_PROXY","methodName","fromX","fromY","toX","toY","dashPattern","dx","dy","atan2","idx","dashLength","nx","ny","VML","NONE","UP","DOWN","devicePixelRatio","Stem","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","direction","ext","CATEGORY","y_offset","isStemUp","ys","stemHeight","innerMostNoteheadY","outerMostNoteheadY","topY","baseY","isVisible","stem_x","stem_y","getHeight","DEBUG","stemletYOffset","Tuplet","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","some","note","beam","ratioed","location","LOCATION_TOP","Formatter","AlignRestsToNotes","resolveGlyphs","attach","setTuplet","resetTuplet","LOCATION_BOTTOM","msg","warn","getNotesOccupied","beats","setNotesOccupied","detach","numerator_glyphs","unshift","denom_glyphs","first_note","maxTupletCount","countTuplets","minTupletCount","tupletStack","tuplet","tupletCount","nested_tuplet_y_offset","getNestedTupletCount","NESTING_OFFSET","getStave","getYForLine","top_y","getStemDirection","getStemExtents","bottom_y","last_note","getTieLeftX","getTieRightX","getStemX","getYPosition","addGlyphWidth","reduce","notation_start_x","line_width","x_offset","render","colon_x","colon_radius","calculateStemDirection","lineSum","keyProps","keyProp","BEAM_LEFT","BEAM_BOTH","Beam","auto_stem","getIntrinsicTicks","hasStem","getCategory","memo","setStemDirection","setBeam","postFormatted","getBeamCount","break_on_indices","render_options","beam_width","max_slope","min_slope","slope_iterations","slope_cost","show_stemlets","stemlet_extension","partial_beam_length","flat_beams","min_flat_beam_offset","time_sig","beatTotal","beatValue","voice","generateBeams","getTickables","config","nextGroup","sanitizedGroups","tickGroups","multiply","clone","currentTickGroup","noteGroups","currentGroup","nextTickGroup","unprocessedNote","shouldIgnoreTicks","ticksPerGroup","totalTicks","getTicks","unbeamable","equals","tempGroup","isFirstOrLast","prevNote","breaksOnEachRest","beam_rests","isRest","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","stemDirection","findFirstNote","applyStemDirection","uniqueTuplets","beamedNoteGroups","beamable","allTuplets","beams","secondary_breaks","secondary_break_ticks","flat_beam_offset","setTupletLocation","setBracketed","getGlyph","beamCount","indices","first_x_px","first_y_px","slope","firstNote","initialSlope","lastNote","firstStemTipY","firstStemX","getStemSlope","increment","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","getSlopeY","stemTipY","diff","idealSlope","cost","total","extremeY","extremeBeamCount","currentExtreme","getYs","offset","extremeTest","newOffset","beamY","getBeamYToDraw","stemX","beamedStemTipY","preBeamExtension","getStem","getExtension","beamExtension","setExtension","totalBeamWidth","setVisibility","setStemlet","prev_tick","tick","next_tick","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","lookupBeamDirection","tick_of_duration","beam_lines","beam_started","current_beam","previous_should_break","tick_tally","should_break","prev_note","next_note","beam_alone","end","start","beam_direction","last_beam","setContext","valid_beam_durations","beamThickness","beamLines","getBeamLines","j","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","calculateFlatSlope","calculateSlope","applyStemExtensions","postFormat","drawStems","drawBeamLines","Voice","time","resolutionMultiplier","tickables","ticksUsed","smallestTickCount","largestTickWidth","mode","Mode","STRICT","voiceGroup","SOFT","FULL","bb","setStave","getBoundingBox","mergeWith","g","strict","tickable","lessThan","setVoice","addTickable","preFormatted","tickable_bb","drawWithStyle","drawBoldDoubleLine","topX","botY","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","thickness","DOUBLE","texts","SINGLE_RIGHT","SINGLE_LEFT","SINGLE","BRACE","BRACKET","THIN_DOUBLE","singleRight","singleLeft","single","double","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","none","typeString","content","shift_x","getNumLines","attachment_height","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","renderGlyph","setFont","text_width","getBottomLineY","Tickable","intrinsicTicks","tickMultiplier","tickContext","modifierContext","modifiers","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","left","right","iterations","space","used","mean","deviation","isCenterAligned","noteCount","notesOccupied","splice","getNoteCount","applyTickMultiplier","mc","mod","tc","preFormat","Note","note_struct","initData","JSON","stringify","noteType","duration_override","setDuration","setIntrinsicTicks","positions","playNote","extraLeftPx","extraRightPx","left_modPx","right_modPx","setCenterAlignment","annotation_spacing","stave_padding","STAVEPADDING","yPos","xStart","getAbsoluteX","modLeftPx","xPre1","xAbs","xPost1","noteWidth","xPost2","xEnd","modRightPx","xFreedomRight","getFormatterMetrics","xWidth","round","getXShift","yy","spaceDeviation","setNote","setIndex","setPreFormatted","setYs","glyph_font_scale","text_line","getYForTopText","modifier","left_shift","right_shift","getNoteStartX","getCenterXShift","extra","getExtraPx","NoteHead","head_options","note_type","StaveNote","STEM_UP","glyph_code","custom_glyph_code","custom_glyph","slashed","stroke_px","setWidth","displacementStemAdjustment","spacing","getSpacingBetweenLines","half_spacing","min_y","getLine","setY","getYForNote","head_x","staveSpace","breve_lines","drawSlashNoteHead","StemmableNote","stemExtensionOverride","setStem","shouldRenderFlag","flagCode","getStemExtension","setDirection","buildFlag","getGlyphWidth","getExtents","textLine","extents","getYForBottomText","stem_struct","Modifier","Position","LEFT","modifier_context","spacingFromNextModifier","RIGHT","ABOVE","BELOW","above","below","PositionString","subNotes","getTickContext","extraPx","subNoteXOffset","extraLeft","getSpacingFromNextModifier","subNote","subTickContext","setXOffset","Dot","dot_list","max_shift_map","dot","getNote","getKeyProps","getIndex","getExtraRightPx","note_id","dot_shift","x_width","last_line","prev_dotted_space","half_shiftY","setXShift","lineSpace","spacing_between_lines_px","getModifierStartXY","forceFlagRight","shiftRestVertical","dir","isrest","maxLine","minLine","setKeyLine","getKeyLine","noteStruct","use_default_head_x","note_heads","DEFAULT_LEDGER_LINE_OFFSET","calculateKeyProps","buildStem","autoStem","formatByY","notesList","minL","stemMax","getStemLength","stemMin","getStemMinumumLength","maxL","voice_shift","getVoiceShiftWidth","is_displaced","isDisplaced","voices","noteU","noteM","noteL","stemDelta","voiceXShift","lineSpacing","setStemLength","centerRest","hasStave","topNote","bottomNote","topKeys","bottomKeys","topNotBottomY","noteHeadStyles","noteHead","buildNoteHeads","setStyle","head","calcExtraPx","step","getKeys","lastLine","lineDiff","noteProps","notehead","Infinity","minY","maxY","halfLineSpacing","frac","isTopNote","resultLine","thisLine","getCenterGlyphX","getNoteHeadBounds","setYBounds","tieStartX","tieEndX","restLine","top","bot","hasFlag","isInnerNoteIndex","ledgerLineStyle","flagStyle","mContext","setModifierContext","addModifier","articulation","annotation","setDotShiftY","addDot","getModifiers","setExtraLeftPx","setExtraRightPx","yTop","yBottom","nonDisplacedX","displacedX","highestLine","lowestLine","highestDisplacedLine","lowestDisplacedLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getLedgerLineStyle","openGroup","noteheadStyle","closeGroup","noteStemHeight","flagX","flagY","getFlagStyle","stemStruct","xBegin","shouldRenderStem","setX","setNoteHeadXBounds","isChord","drawLedgerLines","drawStem","drawNoteHeads","drawFlag","drawModifiers","FretHandFinger","number","finger","nums","nums_list","shiftLeft","shiftRight","pos","getPosition","props_tmp","getExtraLeftPx","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","num_shift","numWidth","dot_x","dot_y","Music","major","dorian","mixolydian","minor","scales","root_index","NUM_TONES","interval","isValidNoteValue","noteString","toLowerCase","keyString","noteValues","intervalString","intervals","canonical_notes","intervalValue","isValidIntervalValue","diatonic_intervals","sum","parts","getNoteParts","rootValue","getNoteValue","multiplier","reverse_interval","relativeNoteName","tones","nextNote","getRelativeNoteValue","note1","note2","difference","keySigParts","getKeyParts","scaleName","scaleTypes","keySigString","getScaleTones","noteLocation","root_indices","scaleMap","roots","rootName","noteName","getRelativeNoteName","Accidental","font_scale","parenLeftPadding","parenRightPadding","cautionary","parenLeft","parenRight","leftShift","accList","accLine","lineList","accShift","previousLine","flatLine","dblSharpLine","numAcc","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","lines","groupLength","endCase","groupMember","column","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","line1","line2","clearance","clearanceRequired","collision","tickPositions","tickNoteMap","tickPosition","notesAtPosition","music","createScaleMap","modifiedPitches","processNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","addAccidental","getGraceNotes","fontScale","parenWidth","accX","accY","NoteSubGroup","formatter","setStrict","addTickables","joinVoices","format","getMinTotalWidth","alignSubNotesWithNote","StaveTie","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","setNotes","first_indices","last_indices","first_ys","last_ys","last_x_px","cp_x","last_y_px","top_cp_y","bottom_cp_y","center_x","getTieStartX","getTieEndX","renderTie","renderText","TabTie","GraceNoteGroup","grace_notes","show_slur","slur","slur_y_shift","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","setSpacingFromNextModifier","graceNote","TieClass","Stroke","all_voices","note_end","stroke_spacing","strokes","strokeList","getPositions","strokeShift","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","ROLL_UP","RASQUEDO_DOWN","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","arrow","arrow_shift_x","arrow_y","text_y","line_space","getModifierContext","Type","StringNumber","string_number","dashed","leg","LineEndType","shift_left","num_shiftR","x_widthL","x_widthR","num_width","stem_ext","bottom","STEM_DOWN","len","pattern","drawDashedLine","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveNote","noteCategory","Articulation","getIncrement","setTextLine","top_text_line","maxWidth","articWidth","builder","articNameToCode","staccato","tenuto","articString","getFactory","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","setOrigin","stemBaseY","getTopY","INITIAL_OFFSET","getBottomY","offsetDirection","noteLine","articLine","snappedLine","snapLineToStaff","TickContext","currentTick","maxTicks","minTicks","padding","xBase","xOffset","notePx","tContexts","tContext","contexts","extraRight","setTickContext","Ornament","delayed","accidentalUpper","accidentalLower","accidentalLowerPadding","accidentalUpperPadding","ornament","accid","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","nextContext","getNextContext","Annotation","justification","Justify","CENTER","vert_justification","VerticalJustify","TOP","annotations","CENTER_STEM","center","centerStem","BOTTOM","just","VerticalJustifyString","JustifyString","text_height","has_stem","stem_base","yt","Bend","release","phrase","line_style","bend_width","release_width","updateWidth","bends","last_width","bend","total_width","additional_width","draw_width","bend_height","annotation_y","renderRelease","renderArrowHead","setRawFont","render_x","cp_y","last_bend","last_drawn_width","Vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vibratos","vibrato","vx","vy","renderVibrato","opts","num_waves","ModifierContext","PREFORMAT","POSTFORMAT","formatted","extra_left_px","extra_right_px","lookAhead","nextRestLine","getLineForRest","createContexts","ContextType","addToContext","getTotalTicks","getMode","isComplete","getResolutionMultiplier","tickToContextMap","tickList","integerTicks","newContext","list","minTotalWidth","hasMinTotalWidth","tickContexts","modiferContexts","contextGaps","gaps","paddingBetween","addToModifierContext","xPos","gap","lossHistory","loss","auto_beam","align_rests","setMode","applyAndGetBeams","formatToStave","tabstave","tabnotes","autobeam","notevoice","tabvoice","alignAllNotes","alignTuplets","createTickContexts","contextList","contextMap","getTicksUsed","justifyWidth","renderingContext","centerX","remainingX","leftoverPxPerTick","spaceAccum","prevTick","getCenterAlignedTickables","evaluate","prevContext","prevMetrics","insideRightEdge","insideLeftEdge","durationStats","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","totalCost","current","prev","next","move","minShift","postFormatContexts","createModifierContexts","alignRests","getNoteEndX","StaveModifier","layoutMetrics","BEGIN","END","renderToStave","setYShift","Barline","TYPE","widths","REPEAT_BEGIN","REPEAT_END","REPEAT_BOTH","paddings","layoutMetricsMap","xMax","paddingLeft","paddingRight","setPosition","setType","repeatBegin","repeatEnd","repeatBoth","setPadding","setLayoutMetrics","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","getTopLineTopY","getBottomLineBottomY","begin","dot_radius","Repetition","symbol_type","CODA_LEFT","CODA_RIGHT","SEGNO_LEFT","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","drawCodaFixed","drawSymbolText","drawSignoFixed","num_lines","draw_coda","text_x","symbol_x","vertical_bar_width","StaveSection","section","StaveTempo","tempo","bpm","stem_height","TextNote","text_struct","superscript","subscript","glyph_type","struct","GLYPHS","glyph_struct","smooth","Justification","StaveText","Clef","sizes","attachments","types","anno_dict","attachment","glyphScale","glyphOffset","numLines","getOptions","setPoint","placeGlyphOnLine","KeySignature","cancelKeySpec","alterKeySpec","setKeySig","glyphFontScale","xPositions","paddingForced","nextAcc","accGlyphData","extraWidth","accidentalSpacing","xPosition","glyphWidth","cancel_accList","different_types","naturals","cancelled","customLines","cancelAccList","firstAccidentalType","convertToCancelAccList","convertToAlterAccList","endClef","convertAccLines","convertToGlyph","TimeSignature","timeSpec","customPadding","validate_args","topLine","bottomLine","setTimeSig","timeSig","numbers","assertIsValidFraction","topDigits","botDigits","makeTimeSignatureGlyph","topGlyphs","botGlyphs","topWidth","topGlyph","botWidth","botGlyph","topStartX","botStartX","start_x","parseTimeSpec","Volta","volta","MID","BEGIN_END","vert_height","Stave","end_x","measure","glyph_spacing_px","fill_style","left_bar","right_bar","space_above_staff_ln","space_below_staff_ln","top_text_position","resetLines","BARTYPE","addEndModifier","line_config","visible","bottom_text_position","begBarline","getType","number_t","headroom","clefSpec","clefs","addClef","setClef","keySignatures","addKeySignature","setKeySignature","timeSignatures","addTimeSignature","setTimeSignature","category","items","order","temp","endBarline","begModifiers","endModifiers","sortByCategory","barlines","keysignatures","timesignatures","getPadding","lastBarlineIdx","getLayoutMetrics","getModifierXShift","isDouble","drawVerticalFixed","top_line","bottom_line","drawVerticalBarFixed","line_number","lines_configuration","TabStave","tab_options","TabNote","tab_struct","draw_stem","ghost","draw_dots","draw_stem_through_stave","stem_extension_override","getStemY","stemDownLine","stemStartLine","shouldDrawFlag","flag_x","flag_y","flag_code","stem_through","stem_lines","unused_strings","up_stem","down_stem","line_spacing","total_lines","strings","containsLastString","containsFirstString","line_ys","string","isTopBound","isBottomBound","getPartialStemLines","strings_used","getUnusedStringGroups","tab_x","render_stem","drawPositions","drawStemThrough","semibrave_rest","VibratoBracket","bracket_data","stop","stop_x","MultiMeasureRest","number_of_measures","show_number","number_line","number_glyph_point","padding_left","padding_right","line_thickness","serif_thickness","use_symbols","symbol_spacing","semibrave_rest_glyph_scale","xs","sbl","serif","lineThicknessHalf","n4","n2","n1","get_semibrave_rest","semibrave_rest_width","yMiddle","drawSymbols","drawLine","ClefNote","clef_obj","abs_x","KeySigNote","TimeSigNote","timeSignature","getTimeSig","TabSlide","first_fret","last_fret","SLIDE_DOWN","SLIDE_UP","slide_direction","slide_y","GraceNote","SCALE","LEDGER_LINE_OFFSET","slash","ret","staveNoteScale","getStaveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","offsets","slashStemOffset","slashBeamOffset","protrusions","beam_slope","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","GraceTabNote","Tuning","tuningString","setTuning","names","tuningValues","numStrings","noteToInteger","stringNum","fretNum","stringValue","getValueForString","getValueForFret","KeyManager","setKey","keyParts","scaleMapByValue","originalScaleMapByValue","scaleNote","modparts","valueNote","originalValueNote","StaveHairpin","hairpin","left_shift_px","right_shift_px","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","setRenderOptions","CRESC","DECRESC","dis","first_y","staff_height","l_shift","r_shift","last_x","first_x","renderHairpin","last_y","Curve","from","to","NEAR_HEAD","position_end","invert","cps","NEAR_TOP","nearHead","nearTop","cp_spacing","metric","end_metric","renderCurve","TextDynamics","sequence","glyph_font_size","letter","glyph_data","letter_x","current_letter","drawArrowHead","x0","y0","StaveLine","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","TextJustification","setLineDash","setLineCap","start_position","end_position","applyLineStyle","first_index","last_index","upwards_slope","notehead_width","point1","point2","end_y","start_y","both_arrows","distance","ratio","angle1","angle2","top_x","line_angle","drawArrowLine","vertical_position","applyFontStyle","drawPedalGlyph","PedalMarking","TEXT","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","glyph_point_size","pedal","Styles","MIXED","setCustomText","mixed","depress","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawBracketed","drawText","TextBracket","Positions","show_bracket","underline_superscript","main_width","main_height","super_y","superscript_width","super_height","line_y","BarNote","barline","GhostNote","parameter","Tremolo","y_spacing","YOFFSETSTEMDOWN","YOFFSETSTEMUP","XOFFSETSTEMDOWN","XOFFSETSTEMUP","Crescendo","decrescendo","extend_left","extend_right","decresc","tick_context","next_context","begin_x","half_height","reverse","Parser","flattenMatches","results","matchedString","grammar","errorPos","expect","returnPos","token","noSpace","regexp","RegExp","workingLine","success","incrementPos","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","matchSuccess","matchFail","numMatches","more","expectOne","expectOneOrMore","rules","matchToken","oneOrMore","zeroOrMore","expectZeroOrMore","matches","r","run","EasyScore","Grammar","LINE","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Builder","commitHooks","elements","rollingDuration","resetPiece","commitHook","piece","chord","addNote","accids","addDotToAll","setId","setClass","addClass","defaults","easyScoreHook","throwOnError","parser","addCommitHook","getElements","voiceOptions","setDefaults","default_options","Factory","face","renderQ","systems","staves","initRenderer","ghostNote","textNoteStruct","textNote","barNote","clefNote","timeSigNote","keySigNote","cancelKey","alterKey","vJustify","hJustify","fontFamily","fontWeight","setJustification","setVerticalJustification","fingering","stringNumber","multimeasurerest","connector","secondaryBeamBreaks","breakSecondaryAt","curve","tie","setText","vibratoBracket","setLine","setHarsh","textBracket","system","System","StylesString","isRendered","spaceBetweenStaves","debugFormatter","formatIterations","spaceAbove","spaceBelow","debugNoteMetrics","startX","allVoices","debugNoteMetricsYs","part","setNoteStartX","tune","lastY","plotDebugging","plotMetrics"],"mappings":"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","file":"vexflow-debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n\nconst Vex = () => {};\n\n// Default log function sends all arguments to console.\nVex.L = (block, args) => {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log(block + ': ' + line);\n};\n\nVex.MakeException = (name) => {\n  const exception = class extends Error {\n    constructor(message, data) {\n      super(message);\n      this.name = name;\n      this.message = message;\n      this.data = data;\n    }\n  };\n\n  return exception;\n};\n\n// Default runtime exception.\nclass RuntimeError {\n  constructor(code, message) {\n    this.code = code;\n    this.message = message;\n  }\n\n  toString() {\n    return '[RuntimeError] ' + this.code + ':' + this.message;\n  }\n}\n\n// Shortcut method for `RuntimeError`.\nVex.RuntimeError = RuntimeError;\nVex.RERR = Vex.RuntimeError;\n\n// Merge `destination` hash with `source` hash, overwriting like keys\n// in `source` if necessary.\nVex.Merge = (destination, source) => {\n  for (const property in source) { // eslint-disable-line guard-for-in\n    destination[property] = source[property];\n  }\n  return destination;\n};\n\n// DEPRECATED. Use `Math.*`.\nVex.Min = Math.min;\nVex.Max = Math.max;\nVex.forEach = (a, fn) => {\n  for (let i = 0; i < a.length; i++) {\n    fn(a[i], i);\n  }\n};\n\n// Round number to nearest fractional value (`.5`, `.25`, etc.)\nVex.RoundN = (x, n) =>\n  (x % n) >= (n / 2)\n    ? parseInt(x / n, 10) * n + n\n    : parseInt(x / n, 10) * n;\n\n// Locate the mid point between stave lines. Returns a fractional line if a space.\nVex.MidLine = (a, b) => {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n};\n\n// Take `arr` and return a new list consisting of the sorted, unique,\n// contents of arr. Does not modify `arr`.\nVex.SortAndUnique = (arr, cmp, eq) => {\n  if (arr.length > 1) {\n    const newArr = [];\n    let last;\n    arr.sort(cmp);\n\n    for (let i = 0; i < arr.length; ++i) {\n      if (i === 0 || !eq(arr[i], last)) {\n        newArr.push(arr[i]);\n      }\n      last = arr[i];\n    }\n\n    return newArr;\n  } else {\n    return arr;\n  }\n};\n\n// Check if array `a` contains `obj`.\nVex.Contains = (a, obj) => {\n  let i = a.length;\n  while (i--) {\n    if (a[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Get the 2D Canvas context from DOM element `canvas_sel`.\nVex.getCanvasContext = canvas_sel => {\n  if (!canvas_sel) {\n    throw new Vex.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n  }\n\n  const canvas = document.getElementById(canvas_sel);\n  if (!(canvas && canvas.getContext)) {\n    throw new Vex.RERR(\n      'UnsupportedBrowserError', 'This browser does not support HTML5 Canvas'\n    );\n  }\n\n  return canvas.getContext('2d');\n};\n\n// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n//\n// `ctx`: Canvas context.\n// `x`, `y`: Dot coordinates.\nVex.drawDot = (ctx, x, y, color = '#55') => {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\nVex.BM = (s, f) => {\n  const start_time = new Date().getTime();\n  f();\n  const elapsed = new Date().getTime() - start_time;\n  Vex.L(s + elapsed + 'ms');\n};\n\n// Get stack trace.\nVex.StackTrace = () => {\n  const err = new Error();\n  return err.stack;\n};\n\n// Dump warning to console.\nVex.W = (...args) => {\n  const line = args.join(' ');\n  window.console.log('Warning: ', line, Vex.StackTrace());\n};\n\n// Used by various classes (e.g., SVGContext) to provide a\n// unique prefix to element names (or other keys in shared namespaces).\nVex.Prefix = text => Vex.Prefix.prefix + text;\nVex.Prefix.prefix = 'vf-';\n\nexport { Vex };\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Fraction class that represents a rational number\n//\n// @author zz85\n// @author incompleteopus (modifications)\n\n/* eslint-disable no-underscore-dangle */\n\nimport { Vex } from './vex';\nexport class Fraction {\n  /**\n   * GCD: Find greatest common divisor using Euclidean algorithm\n   */\n  static GCD(a, b) {\n    if (typeof a !== 'number' || typeof b !== 'number') {\n      throw new Vex.RERR('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /**\n   * LCM: Lowest common multiple\n   */\n  static LCM(a, b) {\n    return ((a * b) / Fraction.GCD(a, b));\n  }\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers\n   */\n  static LCMM(args) {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length === 1) {\n      return args[0];\n    } else if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    } else {\n      const arg0 = args[0];\n      args.shift();\n      return Fraction.LCM(arg0, Fraction.LCMM(args));\n    }\n  }\n\n  constructor(numerator, denominator) {\n    this.set(numerator, denominator);\n  }\n  set(numerator, denominator) {\n    this.numerator = numerator === undefined ? 1 : numerator;\n    this.denominator = denominator === undefined ? 1 : denominator;\n    return this;\n  }\n  value() {\n    return this.numerator / this.denominator;\n  }\n  simplify() {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n  add(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  subtract(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  multiply(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n  divide(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  // Simplifies both sides and checks if they are equal.\n  equals(compare) {\n    const a = Fraction.__compareA.copy(compare).simplify();\n    const b = Fraction.__compareB.copy(this).simplify();\n\n    return (a.numerator === b.numerator) && (a.denominator === b.denominator);\n  }\n\n  // Greater than operator.\n  greaterThan(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator > 0);\n  }\n\n  // Greater than or equals operator.\n  greaterThanEquals(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator >= 0);\n  }\n\n  // Less than operator.\n  lessThan(compare) {\n    return !(this.greaterThanEquals(compare));\n  }\n\n  // Less than or equals operator.\n  lessThanEquals(compare) {\n    return !(this.greaterThan(compare));\n  }\n\n  // Creates a new copy with this current values.\n  clone() {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  // Copies value of another Fraction into itself.\n  copy(copy) {\n    if (typeof copy === 'number') {\n      return this.set(copy || 0, 1);\n    }\n    return this.set(copy.numerator, copy.denominator);\n  }\n\n  // Returns the integer component eg. (4/2) == 2\n  quotient() {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  // Returns the fraction component when reduced to a mixed number\n  fraction() {\n    return this.numerator % this.denominator;\n  }\n\n  // Returns the absolute value\n  abs() {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  // Returns a raw string representation\n  toString() {\n    return this.numerator + '/' + this.denominator;\n  }\n\n  // Returns a simplified string respresentation\n  toSimplifiedString() {\n    return Fraction.__tmp.copy(this).simplify().toString();\n  }\n\n  // Returns string representation in mixed form\n  toMixedString() {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__tmp.copy(this);\n\n    if (q < 0) {\n      f.abs().fraction();\n    } else {\n      f.fraction();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ' ' + f.toSimplifiedString();\n      }\n    } else {\n      if (f.numerator === 0) {\n        s = '0';\n      } else {\n        s = f.toSimplifiedString();\n      }\n    }\n\n    return s;\n  }\n\n  // Parses a fraction string\n  parse(str) {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = (i[1]) ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n\n// Temporary cached objects\nFraction.__compareA = new Fraction();\nFraction.__compareB = new Fraction();\nFraction.__tmp = new Fraction();\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to regiser with a registry:\n//\n// 1) Explicitly call `element.register(registry)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\n\nimport { Vex } from './vex';\n\nexport const X = Vex.MakeException('RegistryError');\n\nfunction setIndexValue(index, name, value, id, elem) {\n  if (!index[name][value]) index[name][value] = {};\n  index[name][value][id] = elem;\n}\n\nexport class Registry {\n  static get INDEXES() { return ['type']; }\n\n  constructor() {\n    this.clear();\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry) {\n    Registry.defaultRegistry = registry;\n  }\n\n  static getDefaultRegistry() {\n    return Registry.defaultRegistry;\n  }\n\n  static disableDefaultRegistry() {\n    Registry.defaultRegistry = null;\n  }\n\n  clear() {\n    // Indexes are represented as maps of maps (of maps). This allows\n    // for both multi-labeling (e.g., an element can have multiple classes)\n    // and efficient lookup.\n    this.index = {\n      id: {},\n      type: {},\n      class: {},\n    };\n    return this;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({ id, name, value, oldValue }) {\n    const elem = this.getElementById(id);\n    if (oldValue !== null && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value !== null) {\n      setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  // Register element `elem` with this registry. This adds the element to its index and watches\n  // it for attribute changes.\n  register(elem, id) {\n    id = id || elem.getAttribute('id');\n\n    if (!id) {\n      throw new X('Can\\'t add element without `id` attribute to registry', elem);\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    setIndexValue(this.index, 'id', id, id, elem);\n    Registry.INDEXES.forEach(name => {\n      this.updateIndex({ id, name, value: elem.getAttribute(name), oldValue: null });\n    });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id) {\n    return this.index.id[id] ? this.index.id[id][id] : null;\n  }\n\n  getElementsByAttribute(attrName, value) {\n    const index = this.index[attrName];\n    if (index && index[value]) {\n      return Object.keys(index[value]).map(i => index[value][i]);\n    } else {\n      return [];\n    }\n  }\n\n  getElementsByType(type) { return this.getElementsByAttribute('type', type); }\n  getElementsByClass(className) { return this.getElementsByAttribute('class', className); }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate({ id, name, value, oldValue }) {\n    function includes(array, value) {\n      return array.filter(x => x === value).length > 0;\n    }\n\n    if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n    this.updateIndex({ id, name, value, oldValue });\n    return this;\n  }\n}\n\nRegistry.defaultRegistry = null;\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a generic base class for VexFlow, with implementations\n// of general functions and properties that can be inherited by all VexFlow elements.\n\nimport { Vex } from './vex';\nimport { Registry } from './registry';\n\nexport class Element {\n  static newID() { return 'auto' + (Element.ID++); }\n\n  constructor({ type } = {}) {\n    this.attrs = {\n      id: Element.newID(),\n      el: null,\n      type: type || 'Base',\n      classes: {},\n    };\n\n    this.boundingBox = null;\n    this.context = null;\n    this.rendered = false;\n\n    // If a default registry exist, then register with it right away.\n    if (Registry.getDefaultRegistry()) {\n      Registry.getDefaultRegistry().register(this);\n    }\n  }\n\n  // set the draw style of a stemmable note:\n  setStyle(style) { this.style = style; return this; }\n  getStyle() { return this.style; }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n\n    context.save();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    if (style.lineWidth) context.setLineWidth(style.lineWidth);\n    return this;\n  }\n\n  restoreStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n    context.restore();\n    return this;\n  }\n\n  // draw with style of an element.\n  drawWithStyle() {\n    this.checkContext();\n    this.applyStyle();\n    this.draw();\n    this.restoreStyle();\n  }\n\n  // An element can have multiple class labels.\n  hasClass(className) { return (this.attrs.classes[className] === true); }\n  addClass(className) {\n    this.attrs.classes[className] = true;\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: className,\n        oldValue: null,\n      });\n    }\n    return this;\n  }\n\n  removeClass(className) {\n    delete this.attrs.classes[className];\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: null,\n        oldValue: className,\n      });\n    }\n    return this;\n  }\n\n  // This is called by the registry after the element is registered.\n  onRegister(registry) { this.registry = registry; return this; }\n  isRendered() { return this.rendered; }\n  setRendered(rendered = true) { this.rendered = rendered; return this; }\n\n  getAttributes() { return this.attrs; }\n  getAttribute(name) { return this.attrs[name]; }\n  setAttribute(name, value) {\n    const id = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    if (this.registry) {\n      // Register with old id to support id changes.\n      this.registry.onUpdate({ id, name, value, oldValue });\n    }\n    return this;\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getBoundingBox() { return this.boundingBox; }\n\n  // Validators\n  checkContext() {\n    if (!this.context) {\n      throw new Vex.RERR('NoContext', 'No rendering context attached to instance');\n    }\n    return this.context;\n  }\n}\n\nElement.ID = 1000;\n","// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\n\nexport class BoundingBoxComputation {\n  constructor(x1, y1, x2, y2) { // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width() {\n    return this.x2 - this.x1;\n  }\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n  addPoint(x, y) {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x) {\n    this.addPoint(x, null);\n  }\n\n  addY(y) {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n","// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n// Bounding boxes for interactive notation\n\nexport class BoundingBox {\n  static copy(that) {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n  getX() { return this.x; }\n  getY() { return this.y; }\n  getW() { return this.w; }\n  getH() { return this.h; }\n  setX(x) { this.x = x; return this; }\n  setY(y) { this.y = y; return this; }\n  setW(w) { this.w = w; return this; }\n  setH(h) { this.h = h; return this; }\n  move(x, y) { this.x += x; this.y += y; }\n  clone() { return BoundingBox.copy(this); }\n\n  // Merge my box with given box. Creates a bigger bounding box unless\n  // the given box is contained in this one.\n  mergeWith(boundingBox, ctx) {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n    const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    if (ctx) this.draw(ctx);\n    return this;\n  }\n\n  draw(ctx, x, y) {\n    if (!x) x = 0;\n    if (!y) y = 0;\n    ctx.rect(this.x + x, this.y + y, this.w, this.h);\n    ctx.stroke();\n  }\n}\n","export const Font = {\n\"glyphs\":{\n\"v0\":{\"x_min\":0,\"x_max\":514.5,\"ha\":525,\"o\":\"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 \"},\n\"v1\":{\"x_min\":-1.359375,\"x_max\":344.359375,\"ha\":351,\"o\":\"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 \"},\n\"v2\":{\"x_min\":-1.359375,\"x_max\":458.6875,\"ha\":468,\"o\":\"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 \"},\n\"v3\":{\"x_min\":-1.359375,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v4\":{\"x_min\":0,\"x_max\":468.21875,\"ha\":478,\"o\":\"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 \"},\n\"v5\":{\"x_min\":0,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v6\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"v7\":{\"x_min\":0,\"x_max\":442.359375,\"ha\":451,\"o\":\"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 \"},\n\"v8\":{\"x_min\":0,\"x_max\":488.640625,\"ha\":499,\"o\":\"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 \"},\n\"v9\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"va\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 \"},\n\"vb\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 \"},\n\"vc\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 \"},\n\"vf\":{\"x_min\":0,\"x_max\":370.21875,\"ha\":378,\"o\":\"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 \"},\n\"v10\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 \"},\n\"v11\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\n\"v18\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\n\"v1b\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 \"},\n\"v1d\":{\"x_min\":0,\"x_max\":619.3125,\"ha\":632,\"o\":\"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 \"},\n\"v1e\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 \"},\n\"v1f\":{\"x_min\":-340.28125,\"x_max\":338.921875,\"ha\":346,\"o\":\"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 \"},\n\"v20\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 \"},\n\"v22\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 \"},\n\"v23\":{\"x_min\":0,\"x_max\":133.390625,\"ha\":136,\"o\":\"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 \"},\n\"v25\":{\"x_min\":0,\"x_max\":318.5,\"ha\":325,\"o\":\"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 \"},\n\"v26\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v27\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 \"},\n\"v28\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 \"},\n\"v29\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 \"},\n\"v2a\":{\"x_min\":-21.78125,\"x_max\":366.140625,\"ha\":374,\"o\":\"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 \"},\n\"v2c\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 \"},\n\"v2d\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 \"},\n\"v2f\":{\"x_min\":-1.359375,\"x_max\":680.5625,\"ha\":694,\"o\":\"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 \"},\n\"v30\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 \"},\n\"v31\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 \"},\n\"v33\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 \"},\n\"v34\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\n\"v36\":{\"x_min\":-1.359375,\"x_max\":1064.390625,\"ha\":1086,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 \"},\n\"v38\":{\"x_min\":-1.359375,\"x_max\":651.96875,\"ha\":665,\"o\":\"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 \"},\n\"v39\":{\"x_min\":-171.5,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v3b\":{\"x_min\":0,\"x_max\":484.5625,\"ha\":494,\"o\":\"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 \"},\n\"v3c\":{\"x_min\":0,\"x_max\":450.53125,\"ha\":460,\"o\":\"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 \"},\n\"v3e\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 \"},\n\"v3f\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 \"},\n\"v40\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v41\":{\"x_min\":-1.359375,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 \"},\n\"v42\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 \"},\n\"v43\":{\"x_min\":-442.359375,\"x_max\":441,\"ha\":450,\"o\":\"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 \"},\n\"v44\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v45\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 \"},\n\"v46\":{\"x_min\":0,\"x_max\":627.46875,\"ha\":640,\"o\":\"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 \"},\n\"v47\":{\"x_min\":-24.5,\"x_max\":315.78125,\"ha\":322,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 \"},\n\"v49\":{\"x_min\":0,\"x_max\":630.203125,\"ha\":643,\"o\":\"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 \"},\n\"v4a\":{\"x_min\":70.78125,\"x_max\":378.390625,\"ha\":315,\"o\":\"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 \"},\n\"v4b\":{\"x_min\":0,\"x_max\":503.609375,\"ha\":514,\"o\":\"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 \"},\n\"v4d\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 \"},\n\"v4e\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\n\"v51\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\n\"v52\":{\"x_min\":-10.890625,\"x_max\":298.078125,\"ha\":294,\"o\":\"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 \"},\n\"v53\":{\"x_min\":0,\"x_max\":902.421875,\"ha\":921,\"o\":\"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 \"},\n\"v54\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 \"},\n\"v55\":{\"x_min\":0,\"x_max\":551.25,\"ha\":563,\"o\":\"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 \"},\n\"v58\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 \"},\n\"v59\":{\"x_min\":0,\"x_max\":464.140625,\"ha\":474,\"o\":\"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 \"},\n\"v5a\":{\"x_min\":-171.5,\"x_max\":170.140625,\"ha\":174,\"o\":\"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 \"},\n\"v5b\":{\"x_min\":-441,\"x_max\":439.640625,\"ha\":449,\"o\":\"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\n\"v5c\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 \"},\n\"v5d\":{\"x_min\":-1.359375,\"x_max\":592.078125,\"ha\":604,\"o\":\"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 \"},\n\"v60\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 \"},\n\"v62\":{\"x_min\":46.28125,\"x_max\":669.671875,\"ha\":563,\"o\":\"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 \"},\n\"v68\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"v6c\":{\"x_min\":-1.359375,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 \"},\n\"v6d\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 \"},\n\"v6f\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 \"},\n\"v70\":{\"x_min\":0,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 \"},\n\"v72\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 \"},\n\"v74\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 \"},\n\"v75\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 \"},\n\"v78\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\n\"v79\":{\"x_min\":-1.359375,\"x_max\":899.703125,\"ha\":918,\"o\":\"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 \"},\n\"v7a\":{\"x_min\":-1.359375,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 \"},\n\"v7c\":{\"x_min\":0,\"x_max\":300.8125,\"ha\":307,\"o\":\"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 \"},\n\"v7d\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v7f\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\n\"v80\":{\"x_min\":29.9375,\"x_max\":420.578125,\"ha\":371,\"o\":\"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 \"},\n\"v81\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 \"},\n\"v83\":{\"x_min\":-1.359375,\"x_max\":847.96875,\"ha\":865,\"o\":\"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 \"},\n\"v84\":{\"x_min\":25.859375,\"x_max\":164.6875,\"ha\":168,\"o\":\"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 \"},\n\"v86\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 \"},\n\"v8a\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 \"},\n\"v8b\":{\"x_min\":0,\"x_max\":319.859375,\"ha\":326,\"o\":\"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 \"},\n\"v8c\":{\"x_min\":-330.75,\"x_max\":329.390625,\"ha\":336,\"o\":\"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 \"},\n\"v8d\":{\"x_min\":-1.359375,\"x_max\":255.890625,\"ha\":261,\"o\":\"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 \"},\n\"v8f\":{\"x_min\":-21.78125,\"x_max\":362.0625,\"ha\":369,\"o\":\"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 \"},\n\"v90\":{\"x_min\":-171.5,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v92\":{\"x_min\":0,\"x_max\":598.890625,\"ha\":611,\"o\":\"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 \"},\n\"v93\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\n\"v94\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 \"},\n\"v95\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 \"},\n\"v97\":{\"x_min\":-228.671875,\"x_max\":227.3125,\"ha\":232,\"o\":\"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 \"},\n\"v9a\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 \"},\n\"v9b\":{\"x_min\":-24.5,\"x_max\":313.0625,\"ha\":319,\"o\":\"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 \"},\n\"v9c\":{\"x_min\":-166.0625,\"x_max\":-25.859375,\"ha\":0,\"o\":\"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 \"},\n\"v9e\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\n\"va3\":{\"x_min\":58.53125,\"x_max\":228.671875,\"ha\":294,\"o\":\"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 \"},\n\"va5\":{\"x_min\":0,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 \"},\n\"va9\":{\"x_min\":-24.5,\"x_max\":314.421875,\"ha\":321,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 \"},\n\"vaa\":{\"x_min\":-1.359375,\"x_max\":752.703125,\"ha\":768,\"o\":\"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 \"},\n\"vab\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\n\"vad\":{\"x_min\":0,\"x_max\":873.828125,\"ha\":892,\"o\":\"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 \"},\n\"vb1\":{\"x_min\":78.9375,\"x_max\":485.921875,\"ha\":417,\"o\":\"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 \"},\n\"vb3\":{\"x_min\":0,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 \"},\n\"vb4\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"vb6\":{\"x_min\":0,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 \"},\n\"vb7\":{\"x_min\":-176.9375,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"vb9\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\n\"vba\":{\"x_min\":-118.421875,\"x_max\":597.53125,\"ha\":381,\"o\":\"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 \"},\n\"vbf\":{\"x_min\":-53.078125,\"x_max\":513.140625,\"ha\":485,\"o\":\"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 \"},\n\"vc3\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 \"},\n\"vd0\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 \"},\n\"vd1\":{\"x_min\":-20,\"x_max\":320,\"ha\":257,\"o\":\"m -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 \"},\n\"vd2\":{\"x_min\":0,\"x_max\":430.75,\"ha\":386,\"o\":\"m 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 \"},\n\"vd3\":{\"x_min\":0,\"x_max\":430.75,\"ha\":386,\"o\":\"m 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 \"},\n\"vd4\":{\"x_min\":0,\"x_max\":430.75,\"ha\":360,\"o\":\"m 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 \"},\n\"vd5\":{\"x_min\":0,\"x_max\":430.75,\"ha\":360,\"o\":\"m 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100\"},\n\"vd6\":{\"x_min\":0,\"x_max\":430.75,\"ha\":360,\"o\":\"m -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z \"},\n\"vd7\":{\"x_min\":0,\"x_max\":430.75,\"ha\":360,\"o\":\"m 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z \"},\n},\n\"cssFontWeight\":\"normal\",\"ascender\":1903,\"underlinePosition\":-125,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-2065.375,\"xMin\":-695.53125,\"yMax\":1901.578125,\"xMax\":1159.671875},\n\"resolution\":1000,\"descender\":-2066,\"familyName\":\"VexFlow-18\",\"lineHeight\":4093,\"underlineThickness\":50\n};\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './fonts/vexflow_font';\n\nfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n  let command;\n  let x;\n  let y;\n  let i = 0;\n\n  function nextX() { return originX + outline[i++] * scaleX; }\n  function nextY() { return originY + outline[i++] * scaleY; }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        outlineFns[command](nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        outlineFns.q(nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        outlineFns.b(nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  /* Static methods used to implement loading / unloading of glyphs */\n  static loadMetrics(font, code, cache) {\n    const glyph = font.glyphs[code];\n    if (!glyph) {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline;\n\n    if (glyph.o) {\n      if (cache) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min,\n        x_max,\n        ha,\n        outline,\n      };\n    } else {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   *\n   * @param {!Object} ctx The canvas context.\n   * @param {number} x_pos X coordinate.\n   * @param {number} y_pos Y coordinate.\n   * @param {number} point The point size to use.\n   * @param {string} val The glyph code in Vex.Flow.Font.\n   * @param {boolean} nocache If set, disables caching of font outline.\n   */\n  static renderGlyph(ctx, x_pos, y_pos, point, val, nocache) {\n    const scale = point * 72.0 / (Font.resolution * 100.0);\n    const metrics = Glyph.loadMetrics(Font, val, !nocache);\n    Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n  }\n\n  static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n    });\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n    });\n\n    return new BoundingBox(\n      bboxComp.x1,\n      bboxComp.y1,\n      bboxComp.width(),\n      bboxComp.height()\n    );\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code, point, options) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      cache: true,\n      font: Font,\n    };\n\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  setOptions(options) {\n    Vex.Merge(this.options, options);\n    this.reset();\n  }\n\n  setPoint(point) { this.point = point; return this; }\n  setStave(stave) { this.stave = stave; return this; }\n  setXShift(x_shift) { this.x_shift = x_shift; return this; }\n  setYShift(y_shift) { this.y_shift = y_shift; return this; }\n\n  reset() {\n    this.scale = this.point * 72 / (this.options.font.resolution * 100);\n    this.metrics = Glyph.loadMetrics(\n      this.options.font,\n      this.code,\n      this.options.cache\n    );\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale,\n      0,\n      0\n    );\n  }\n\n  getMetrics() {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale,\n      x_max: this.metrics.x_max * this.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n    };\n  }\n\n  setOriginX(x) {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y) {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x, y) {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx, x, y) {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    this.applyStyle(ctx);\n    Glyph.renderOutline(ctx, outline, scale, x + this.originShift.x, y + this.originShift.y);\n    this.restoreStyle(ctx);\n  }\n\n  renderToStave(x) {\n    this.checkContext();\n\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new Vex.RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    this.applyStyle();\n    Glyph.renderOutline(this.context, outline, scale,\n      x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/* eslint-disable key-spacing */\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\n\nconst Flow = {\n  STEM_WIDTH: 1.5,\n  STEM_HEIGHT: 35,\n  STAVE_LINE_THICKNESS: 1,\n  RESOLUTION: 16384,\n  DEFAULT_NOTATION_FONT_SCALE: 39,\n  DEFAULT_TABLATURE_FONT_SCALE: 39,\n  SLASH_NOTEHEAD_WIDTH: 15,\n\n  // HACK:\n  // Since text origins are positioned at the baseline, we must\n  // compensate for the ascender of the text. Of course, 1 staff space is\n  // a very poor approximation.\n  //\n  // This will be deprecated in the future. This is a temporary solution until\n  // we have more robust text metrics.\n  TEXT_HEIGHT_OFFSET_HACK: 1,\n\n  /* Kerning (DEPRECATED) */\n  IsKerned: true,\n};\n\n\nFlow.clefProperties = clef => {\n  if (!clef) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  const props = Flow.clefProperties.values[clef];\n  if (!props) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  return props;\n};\n\nFlow.clefProperties.values = {\n  'treble': { line_shift: 0 },\n  'bass': { line_shift: 6 },\n  'tenor': { line_shift: 4 },\n  'alto': { line_shift: 3 },\n  'soprano': { line_shift: 1 },\n  'percussion': { line_shift: 0 },\n  'mezzo-soprano': { line_shift: 2 },\n  'baritone-c': { line_shift: 5 },\n  'baritone-f': { line_shift: 5 },\n  'subbass': { line_shift: 7 },\n  'french': { line_shift: -1 },\n};\n\n/*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option,\n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\nFlow.keyProperties = (key, clef, params) => {\n  if (clef === undefined) {\n    clef = 'treble';\n  }\n\n  const options = { octave_shift: 0 };\n\n  if (typeof params === 'object') {\n    Vex.Merge(options, params);\n  }\n\n  const pieces = key.split('/');\n\n  if (pieces.length < 2) {\n    throw new Vex.RERR('BadArguments', `Key must have note + octave and an optional glyph: ${key}`);\n  }\n\n  const k = pieces[0].toUpperCase();\n  const value = Flow.keyProperties.note_values[k];\n  if (!value) throw new Vex.RERR('BadArguments', 'Invalid key name: ' + k);\n  if (value.octave) pieces[1] = value.octave;\n\n  let octave = parseInt(pieces[1], 10);\n\n  // Octave_shift is the shift to compensate for clef 8va/8vb.\n  octave += -1 * options.octave_shift;\n\n  const base_index = (octave * 7) - (4 * 7);\n  let line = (base_index + value.index) / 2;\n  line += Flow.clefProperties(clef).line_shift;\n\n  let stroke = 0;\n\n  if (line <= 0 && (((line * 2) % 2) === 0)) stroke = 1;  // stroke up\n  if (line >= 6 && (((line * 2) % 2) === 0)) stroke = -1; // stroke down\n\n  // Integer value for note arithmetic.\n  const int_value = typeof (value.int_val) !== 'undefined'\n    ? (octave * 12) + value.int_val\n    : null;\n\n  /* Check if the user specified a glyph. */\n  let code = value.code;\n  let shift_right = value.shift_right;\n  if (pieces.length > 2 && pieces[2]) {\n    const glyph_name = pieces[2].toUpperCase();\n    const note_glyph = Flow.keyProperties.note_glyph[glyph_name];\n    if (note_glyph) {\n      code = note_glyph.code;\n      shift_right = note_glyph.shift_right;\n    }\n  }\n\n  return {\n    key: k,\n    octave,\n    line,\n    int_value,\n    accidental: value.accidental,\n    code,\n    stroke,\n    shift_right,\n    displaced: false,\n  };\n};\n\nFlow.keyProperties.note_values = {\n  'C': { index: 0, int_val: 0, accidental: null },\n  'CN': { index: 0, int_val: 0, accidental: 'n' },\n  'C#': { index: 0, int_val: 1, accidental: '#' },\n  'C##': { index: 0, int_val: 2, accidental: '##' },\n  'CB': { index: 0, int_val: -1, accidental: 'b' },\n  'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n  'D': { index: 1, int_val: 2, accidental: null },\n  'DN': { index: 1, int_val: 2, accidental: 'n' },\n  'D#': { index: 1, int_val: 3, accidental: '#' },\n  'D##': { index: 1, int_val: 4, accidental: '##' },\n  'DB': { index: 1, int_val: 1, accidental: 'b' },\n  'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n  'E': { index: 2, int_val: 4, accidental: null },\n  'EN': { index: 2, int_val: 4, accidental: 'n' },\n  'E#': { index: 2, int_val: 5, accidental: '#' },\n  'E##': { index: 2, int_val: 6, accidental: '##' },\n  'EB': { index: 2, int_val: 3, accidental: 'b' },\n  'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n  'F': { index: 3, int_val: 5, accidental: null },\n  'FN': { index: 3, int_val: 5, accidental: 'n' },\n  'F#': { index: 3, int_val: 6, accidental: '#' },\n  'F##': { index: 3, int_val: 7, accidental: '##' },\n  'FB': { index: 3, int_val: 4, accidental: 'b' },\n  'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n  'G': { index: 4, int_val: 7, accidental: null },\n  'GN': { index: 4, int_val: 7, accidental: 'n' },\n  'G#': { index: 4, int_val: 8, accidental: '#' },\n  'G##': { index: 4, int_val: 9, accidental: '##' },\n  'GB': { index: 4, int_val: 6, accidental: 'b' },\n  'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n  'A': { index: 5, int_val: 9, accidental: null },\n  'AN': { index: 5, int_val: 9, accidental: 'n' },\n  'A#': { index: 5, int_val: 10, accidental: '#' },\n  'A##': { index: 5, int_val: 11, accidental: '##' },\n  'AB': { index: 5, int_val: 8, accidental: 'b' },\n  'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n  'B': { index: 6, int_val: 11, accidental: null },\n  'BN': { index: 6, int_val: 11, accidental: 'n' },\n  'B#': { index: 6, int_val: 12, accidental: '#' },\n  'B##': { index: 6, int_val: 13, accidental: '##' },\n  'BB': { index: 6, int_val: 10, accidental: 'b' },\n  'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n  'R': { index: 6, int_val: 9, rest: true }, // Rest\n  'X': {\n    index: 6,\n    accidental: '',\n    octave: 4,\n    code: 'v3e',\n    shift_right: 5.5,\n  },\n};\n\nFlow.keyProperties.note_glyph = {\n  /* Diamond */\n  'D0': { code: 'v27', shift_right: -0.5 },\n  'D1': { code: 'v2d', shift_right: -0.5 },\n  'D2': { code: 'v22', shift_right: -0.5 },\n  'D3': { code: 'v70', shift_right: -0.5 },\n\n  /* Triangle */\n  'T0': { code: 'v49', shift_right: -2, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T1': { code: 'v93', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T2': { code: 'v40', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T3': { code: 'v7d', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n\n  /* Cross */\n  'X0': { code: 'v92', shift_right: -2, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X1': { code: 'v95', shift_right: -0.5, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X2': { code: 'v3e', shift_right: 0.5, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X3': { code: 'v3b', shift_right: -2, stem_up_y_offset: 2, stem_down_y_offset: 2 },\n\n  /* Square */\n  'S1': { code: 'vd3', shift_right: 0 },\n  'S2': { code: 'vd2', shift_right: 0 },\n  /* Rectangle */\n  'R1': { code: 'vd5', shift_right: 0 },\n  'R2': { code: 'vd4', shift_right: 0 },\n};\n\nFlow.integerToNote = integer => {\n  if (typeof (integer) === 'undefined') {\n    throw new Vex.RERR('BadArguments', 'Undefined integer for integerToNote');\n  }\n\n  if (integer < -2) {\n    throw new Vex.RERR('BadArguments', `integerToNote requires integer > -2: ${integer}`);\n  }\n\n  const noteValue = Flow.integerToNote.table[integer];\n  if (!noteValue) {\n    throw new Vex.RERR('BadArguments', `Unknown note value for integer: ${integer}`);\n  }\n\n  return noteValue;\n};\n\nFlow.integerToNote.table = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B',\n};\n\n\nFlow.tabToGlyph = (fret, scale = 1.0) => {\n  let glyph = null;\n  let width = 0;\n  let shift_y = 0;\n\n  if (fret.toString().toUpperCase() === 'X') {\n    const glyphMetrics = new Glyph('v7f', Flow.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n    glyph = 'v7f';\n    width = glyphMetrics.width;\n    shift_y = -glyphMetrics.height / 2;\n  } else {\n    width = Flow.textWidth(fret.toString());\n  }\n\n  return {\n    text: fret,\n    code: glyph,\n    getWidth: () => width * scale,\n    shift_y,\n  };\n};\n\nFlow.textWidth = text => 7 * text.toString().length;\n\nFlow.articulationCodes = artic => Flow.articulationCodes.articulations[artic];\n\nFlow.articulationCodes.articulations = {\n  'a.': { code: 'v23', between_lines: true }, // Staccato\n  'av': { code: 'v28', between_lines: true }, // Staccatissimo\n  'a>': { code: 'v42', between_lines: true }, // Accent\n  'a-': { code: 'v25', between_lines: true }, // Tenuto\n  'a^': { code: 'va', between_lines: false }, // Marcato\n  'a+': { code: 'v8b', between_lines: false }, // Left hand pizzicato\n  'ao': { code: 'v94', between_lines: false }, // Snap pizzicato\n  'ah': { code: 'vb9', between_lines: false }, // Natural harmonic or open note\n  'a@a': { code: 'v43', between_lines: false }, // Fermata above staff\n  'a@u': { code: 'v5b', between_lines: false }, // Fermata below staff\n  'a|': { code: 'v75', between_lines: false }, // Bow up - up stroke\n  'am': { code: 'v97', between_lines: false }, // Bow down - down stroke\n  'a,': { code: 'vb3', between_lines: false }, // Choked\n};\n\nFlow.accidentalCodes = acc => Flow.accidentalCodes.accidentals[acc];\n\nFlow.accidentalCodes.accidentals = {\n  '#': { code: 'v18', parenRightPaddingAdjustment: -1 },\n  '##': { code: 'v7f', parenRightPaddingAdjustment: -1 },\n  'b': { code: 'v44', parenRightPaddingAdjustment: -2 },\n  'bb': { code: 'v26', parenRightPaddingAdjustment: -2 },\n  'n': { code: 'v4e', parenRightPaddingAdjustment: -1 },\n  '{': { code: 'v9c', parenRightPaddingAdjustment: -1 },\n  '}': { code: 'v84', parenRightPaddingAdjustment: -1 },\n  'db': { code: 'v9e', parenRightPaddingAdjustment: -1 },\n  'd': { code: 'vab', parenRightPaddingAdjustment: 0 },\n  'bbs': { code: 'v90', parenRightPaddingAdjustment: -1 },\n  '++': { code: 'v51', parenRightPaddingAdjustment: -1 },\n  '+': { code: 'v78', parenRightPaddingAdjustment: -1 },\n  '+-': { code: 'v8d', parenRightPaddingAdjustment: -1 },\n  '++-': { code: 'v7a', parenRightPaddingAdjustment: -1 },\n  'bs': { code: 'vb7', parenRightPaddingAdjustment: -1 },\n  'bss': { code: 'v39', parenRightPaddingAdjustment: -1 },\n  'o': { code: 'vd0', parenRightPaddingAdjustment: -1 },\n  'k': { code: 'vd1', parenRightPaddingAdjustment: -1 },\n  'ashs': { code: 'vd6', parenRightPaddingAdjustment: -1 },  // arabic sharp half sharp\n  'afhf': { code: 'vd7', parenRightPaddingAdjustment: -1 },  // arabic flat half flat\n};\n\nFlow.accidentalColumnsTable = {\n  1: {\n    a: [1],\n    b: [1],\n  },\n  2: {\n    a: [1, 2],\n  },\n  3: {\n    a: [1, 3, 2],\n    b: [1, 2, 1],\n    second_on_bottom: [1, 2, 3],\n  },\n  4: {\n    a: [1, 3, 4, 2],\n    b: [1, 2, 3, 1],\n    spaced_out_tetrachord: [1, 2, 1, 2],\n  },\n  5: {\n    a: [1, 3, 5, 4, 2],\n    b: [1, 2, 4, 3, 1],\n    spaced_out_pentachord: [1, 2, 3, 2, 1],\n    very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n  },\n  6: {\n    a: [1, 3, 5, 6, 4, 2],\n    b: [1, 2, 4, 5, 3, 1],\n    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n  },\n};\n\nFlow.ornamentCodes = acc => Flow.ornamentCodes.ornaments[acc];\n\nFlow.ornamentCodes.ornaments = {\n  'mordent': { code: 'v1e' },\n  'mordent_inverted': { code: 'v45' },\n  'turn': { code: 'v72' },\n  'turn_inverted': { code: 'v33' },\n  'tr': { code: 'v1f' },\n  'upprall': { code: 'v60' },\n  'downprall': { code: 'vb4' },\n  'prallup': { code: 'v6d' },\n  'pralldown': { code: 'v2c' },\n  'upmordent': { code: 'v29' },\n  'downmordent': { code: 'v68' },\n  'lineprall': { code: 'v20' },\n  'prallprall': { code: 'v86' },\n};\n\nFlow.keySignature = spec => {\n  const keySpec = Flow.keySignature.keySpecs[spec];\n\n  if (!keySpec) {\n    throw new Vex.RERR('BadKeySignature', `Bad key signature spec: '${spec}'`);\n  }\n\n  if (!keySpec.acc) {\n    return [];\n  }\n\n  const notes = Flow.keySignature.accidentalList(keySpec.acc);\n\n  const acc_list = [];\n  for (let i = 0; i < keySpec.num; ++i) {\n    const line = notes[i];\n    acc_list.push({ type: keySpec.acc, line });\n  }\n\n  return acc_list;\n};\n\nFlow.keySignature.keySpecs = {\n  'C': { acc: null, num: 0 },\n  'Am': { acc: null, num: 0 },\n  'F': { acc: 'b', num: 1 },\n  'Dm': { acc: 'b', num: 1 },\n  'Bb': { acc: 'b', num: 2 },\n  'Gm': { acc: 'b', num: 2 },\n  'Eb': { acc: 'b', num: 3 },\n  'Cm': { acc: 'b', num: 3 },\n  'Ab': { acc: 'b', num: 4 },\n  'Fm': { acc: 'b', num: 4 },\n  'Db': { acc: 'b', num: 5 },\n  'Bbm': { acc: 'b', num: 5 },\n  'Gb': { acc: 'b', num: 6 },\n  'Ebm': { acc: 'b', num: 6 },\n  'Cb': { acc: 'b', num: 7 },\n  'Abm': { acc: 'b', num: 7 },\n  'G': { acc: '#', num: 1 },\n  'Em': { acc: '#', num: 1 },\n  'D': { acc: '#', num: 2 },\n  'Bm': { acc: '#', num: 2 },\n  'A': { acc: '#', num: 3 },\n  'F#m': { acc: '#', num: 3 },\n  'E': { acc: '#', num: 4 },\n  'C#m': { acc: '#', num: 4 },\n  'B': { acc: '#', num: 5 },\n  'G#m': { acc: '#', num: 5 },\n  'F#': { acc: '#', num: 6 },\n  'D#m': { acc: '#', num: 6 },\n  'C#': { acc: '#', num: 7 },\n  'A#m': { acc: '#', num: 7 },\n};\n\nFlow.unicode = {\n  // Unicode accidentals\n  'sharp': String.fromCharCode(parseInt('266F', 16)),\n  'flat': String.fromCharCode(parseInt('266D', 16)),\n  'natural': String.fromCharCode(parseInt('266E', 16)),\n  // Major Chord\n  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n  // half-diminished\n  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n  // Diminished\n  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n  'circle': String.fromCharCode(parseInt('25CB', 16)),\n};\n\nFlow.keySignature.accidentalList = (acc) => {\n  const patterns = {\n    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n  };\n\n  return patterns[acc];\n};\n\nFlow.parseNoteDurationString = durationString => {\n  if (typeof (durationString) !== 'string') {\n    return null;\n  }\n\n  const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\n  const result = regexp.exec(durationString);\n  if (!result) {\n    return null;\n  }\n\n  const duration = result[1];\n  const dots = result[2].length;\n  let type = result[3];\n\n  if (type.length === 0) {\n    type = 'n';\n  }\n\n  return {\n    duration,\n    dots,\n    type,\n  };\n};\n\nFlow.parseNoteData = noteData => {\n  const duration = noteData.duration;\n\n  // Preserve backwards-compatibility\n  const durationStringData = Flow.parseNoteDurationString(duration);\n  if (!durationStringData) {\n    return null;\n  }\n\n  let ticks = Flow.durationToTicks(durationStringData.duration);\n  if (ticks == null) {\n    return null;\n  }\n\n  let type = noteData.type;\n\n  if (type) {\n    if (!(type === 'n' || type === 'r' || type === 'h' || type === 'm' || type === 's')) {\n      return null;\n    }\n  } else {\n    type = durationStringData.type;\n\n    // If we have keys, try and check if we've got a custom glyph\n    if (noteData.keys !== undefined) {\n      const result = noteData.keys[0].split('/');\n\n      // We have a custom glyph specified after the note eg. /X2\n      if (result && result.length === 3) {\n        type = result[2]; // Set the type to the custom note head\n      }\n    }\n    if (!type) {\n      type = 'n';\n    }\n  }\n\n  const dots = noteData.dots ? noteData.dots : durationStringData.dots;\n\n  if (typeof (dots) !== 'number') {\n    return null;\n  }\n\n  let currentTicks = ticks;\n\n  for (let i = 0; i < dots; i++) {\n    if (currentTicks <= 1) return null;\n\n    currentTicks = currentTicks / 2;\n    ticks += currentTicks;\n  }\n\n  return {\n    duration: durationStringData.duration,\n    type,\n    dots,\n    ticks,\n  };\n};\n\n// Used to convert duration aliases to the number based duration.\n// If the input isn't an alias, simply return the input.\n//\n// example: 'q' -> '4', '8' -> '8'\nFlow.sanitizeDuration = duration => {\n  const alias = Flow.durationAliases[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  if (Flow.durationToTicks.durations[duration] === undefined) {\n    throw new Vex.RERR('BadArguments', `The provided duration is not valid: ${duration}`);\n  }\n\n  return duration;\n};\n\n// Convert the `duration` to an fraction\nFlow.durationToFraction = duration => new Fraction().parse(Flow.sanitizeDuration(duration));\n\n// Convert the `duration` to an number\nFlow.durationToNumber = duration => Flow.durationToFraction(duration).value();\n\n// Convert the `duration` to total ticks\nFlow.durationToTicks = duration => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const ticks = Flow.durationToTicks.durations[duration];\n  if (ticks === undefined) {\n    return null;\n  }\n\n  return ticks;\n};\n\nFlow.durationToTicks.durations = {\n  '1/2': Flow.RESOLUTION * 2,\n  '1': Flow.RESOLUTION / 1,\n  '2': Flow.RESOLUTION / 2,\n  '4': Flow.RESOLUTION / 4,\n  '8': Flow.RESOLUTION / 8,\n  '16': Flow.RESOLUTION / 16,\n  '32': Flow.RESOLUTION / 32,\n  '64': Flow.RESOLUTION / 64,\n  '128': Flow.RESOLUTION / 128,\n  '256': Flow.RESOLUTION / 256,\n};\n\nFlow.durationAliases = {\n  'w': '1',\n  'h': '2',\n  'q': '4',\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  //\n  // TODO(0xfe): This needs to be cleaned up.\n  'b': '256',\n};\n\nFlow.durationToGlyph = (duration, type) => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const code = Flow.durationToGlyph.duration_codes[duration];\n  if (code === undefined) {\n    return null;\n  }\n\n  if (!type) {\n    type = 'n';\n  }\n\n  let glyphTypeProperties = code.type[type];\n  if (glyphTypeProperties === undefined) {\n    // Try and get it from the custom list of note heads\n    const customGlyphTypeProperties = Flow.keyProperties.note_glyph[type.toUpperCase()];\n\n    // If not, then return with nothing\n    if (customGlyphTypeProperties === undefined) {\n      return null;\n    }\n\n    // Otherwise set it as the code_head value\n    glyphTypeProperties = {\n      code_head: customGlyphTypeProperties.code,\n      stem_up_y_offset: customGlyphTypeProperties.stem_up_y_offset,\n      stem_down_y_offset: customGlyphTypeProperties.stem_down_y_offset,\n    };\n  }\n\n  return Vex.Merge(Vex.Merge({}, code.common), glyphTypeProperties);\n};\n\nFlow.durationToGlyph.duration_codes = {\n  '1/2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v53', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Breve note\n        code_head: 'v53',\n      },\n      'h': { // Breve note harmonic\n        code_head: 'v59',\n      },\n      'm': { // Breve note muted -\n        code_head: 'vf',\n        stem_offset: 0,\n      },\n      'r': { // Breve rest\n        code_head: 'v31',\n        rest: true,\n        position: 'B/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Breve note slash -\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '1': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Whole note\n        code_head: 'v1d',\n      },\n      'h': { // Whole note harmonic\n        code_head: 'v46',\n      },\n      'm': { // Whole note muted\n        code_head: 'v92',\n        stem_offset: -3,\n      },\n      'r': { // Whole rest\n        code_head: 'v5c',\n        rest: true,\n        position: 'D/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Whole note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v81', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Half note\n        code_head: 'v81',\n      },\n      'h': { // Half note harmonic\n        code_head: 'v2d',\n      },\n      'm': { // Half note muted\n        code_head: 'v95',\n        stem_offset: -3,\n      },\n      'r': { // Half rest\n        code_head: 'vc',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n      },\n      's': { // Half note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '4': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Quarter note\n        code_head: 'vb',\n      },\n      'h': { // Quarter harmonic\n        code_head: 'v22',\n      },\n      'm': { // Quarter muted\n        code_head: 'v3e',\n        stem_offset: -3,\n      },\n      'r': { // Quarter rest\n        code_head: 'v7c',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5,\n      },\n      's': { // Quarter slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '8': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      beam_count: 1,\n      code_flag_upstem: 'v54',\n      code_flag_downstem: 'v9a',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Eighth note\n        code_head: 'vb',\n      },\n      'h': { // Eighth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Eighth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Eighth rest\n        code_head: 'va5',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0,\n      },\n      's': { // Eight slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '16': {\n    common: {\n      beam_count: 2,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v3f',\n      code_flag_downstem: 'v8f',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixteenth note\n        code_head: 'vb',\n      },\n      'h': { // Sixteenth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixteenth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixteenth rest\n        code_head: 'v3c',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0,\n      },\n      's': { // Sixteenth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '32': {\n    common: {\n      beam_count: 3,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v47',\n      code_flag_downstem: 'v2a',\n      stem_up_extension: 9,\n      stem_down_extension: 9,\n      tabnote_stem_up_extension: 8,\n      tabnote_stem_down_extension: 5,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Thirty-second note\n        code_head: 'vb',\n      },\n      'h': { // Thirty-second harmonic\n        code_head: 'v22',\n      },\n      'm': { // Thirty-second muted\n        code_head: 'v3e',\n      },\n      'r': { // Thirty-second rest\n        code_head: 'v55',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0,\n      },\n      's': { // Thirty-second slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '64': {\n    common: {\n      beam_count: 4,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'va9',\n      code_flag_downstem: 'v58',\n      stem_up_extension: 13,\n      stem_down_extension: 13,\n      tabnote_stem_up_extension: 12,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixty-fourth note\n        code_head: 'vb',\n      },\n      'h': { // Sixty-fourth harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixty-fourth muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixty-fourth rest\n        code_head: 'v38',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0,\n      },\n      's': { // Sixty-fourth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '128': {\n    common: {\n      beam_count: 5,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v9b',\n      code_flag_downstem: 'v30',\n      stem_up_extension: 22,\n      stem_down_extension: 22,\n      tabnote_stem_up_extension: 21,\n      tabnote_stem_down_extension: 18,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': {  // Hundred-twenty-eight note\n        code_head: 'vb',\n      },\n      'h': { // Hundred-twenty-eight harmonic\n        code_head: 'v22',\n      },\n      'm': { // Hundred-twenty-eight muted\n        code_head: 'v3e',\n      },\n      'r': {  // Hundred-twenty-eight rest\n        code_head: 'vaa',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: 1.5,\n        line_above: 3.0,\n        line_below: 3.0,\n      },\n      's': { // Hundred-twenty-eight rest\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n};\n\n// For future collaboration with the SMuFL Standard Music Font Layout\n\nFlow.smufl = {};\n\n// add references between smufl glyph names and code points.\nFlow.smufl.to_code_points = {\n  // staff brackets and dividers (e000-e00f)\n  bracketTop: 'v1b',\n  bracketBottom: 'v10',\n\n  // barlines (e030-e03f)\n  barlineTick: 'v6f',\n\n  // repeats (e040-e04f)\n  segno: 'v8c',\n  coda: 'v4d',\n\n  // clefs (e050-e07f)\n  gClef: 'v83',\n  cClef: 'vad',\n  fClef: 'v79',\n  unpitchedPercussionClef1: 'v59', // same as breveNoteheadHarmonic\n  '6stringTabClef': 'v2f',\n\n  // time signatures (e080-e09f)\n  timeSig0: 'v0',\n  timeSig1: 'v1',\n  timeSig2: 'v2',\n  timeSig3: 'v3',\n  timeSig4: 'v4',\n  timeSig5: 'v5',\n  timeSig6: 'v6',\n  timeSig7: 'v7',\n  timeSig8: 'v8',\n  timeSig9: 'v9',\n  timeSigCommon: 'v41',\n  timeSigCutCommon: 'vb6',\n\n  // notehead (e0a0-e0ff)\n  noteheadDoubleWhole: 'v53',\n  noteheadWhole: 'v1d',\n  noteheadHalf: 'v81',\n  noteheadBlack: 'vb',\n  noteheadXWhole: 'v92',\n  noteheadXHalf: 'v95',\n  noteheadXBlack: 'v3e',\n  noteheadCircleX: 'v3b',\n  noteheadTriangleUpWhole: 'v49',\n  noteheadTriangleUpHalf: 'v93',\n  noteheadTriangleUpBlack: 'v40',\n  noteheadDiamondWhole: 'v46',\n  noteheadDiamondHalf: 'v2d',\n  noteheadDiamondBlack: 'v22',\n\n  // individual notes (e1d0-e1ef)\n  augmentationDot: 'v23',\n\n  // temolos (e220-e23f)\n  tremolo1: 'v74',\n\n  // flags (e240-e25f)\n  flag8thUp: 'v54',\n  flag8thDown: 'v9a',\n  flag16thUp: 'v3f',\n  flag16thDown: 'v8f',\n  flag32ndUp: 'v47',\n  flag32ndDown: 'v2a',\n  flag64thUp: 'va9',\n  flag64thDown: 'v58',\n  flag128thUp: 'v9b',\n  flag128thDown: 'v30',\n\n  // standard accidentals (e260-e26f)\n  accidentalFlat: 'v44',\n  accidentalNatural: 'v4e',\n  accidentalSharp: 'v18',\n  accidentalDoubleSharp: 'v7f',\n  accidentalDoubleFlat: 'v26',\n  accidentalParensLeft: 'v9c',\n  accidentalParensRight: 'v84',\n\n  // stein-zimmermann accidentals (24-edo) (e280-e28f)\n  accidentalQuarterToneFlatStein: 'vab',\n  accidentalThreeQuarterTonesFlatZimmermann: 'v9e',\n  accidentalQuarterToneSharpStein: 'v78',\n  accidentalThreeQuarterTonesSharpStein: 'v51',\n\n  // arel-ezgi-uzdilek accidentals (e440-e44f)\n  accidentalBuyukMucennebFlat: 'v39',\n  accidentalBakiyeFlat: 'vb7',\n  accidentalKomaSharp: 'v51', // same as accidentalQuarterToneSharpStein\n  accidentalKucukMucennebSharp: 'v8d',\n\n  // persian accidentals (e460-e46f)\n  accidentalKoron: 'vd1',\n  accidentalSori: 'vd0',\n\n  // articulation (e4a0-e4bf)\n  articAccentAbove: 'v42',\n  articAccentBelow: 'v42', // same as above\n  articTenutoAbove: 'v25',\n  articTenutoBelow: 'v25', // same as above\n  articStaccatoAbove: 'v23', // = dot\n  articStaccatoBelow: 'v23', // = dot\n  articStaccatissimoAbove: 'v28',\n  articMarcatoAbove: 'va',\n\n  // holds and pauses (e4c0-e4df)\n  fermataAbove: 'v43',\n  fermataBelow: 'v5b',\n  breathMarkComma: 'v6c',\n  breathMarkUpbow: 'v8a', // looks better than current upbow\n  caesura: 'v34',\n  caesuraCurved: 'v4b',\n\n  // rests (e4e0-e4ff)\n  restMaxima: 'v59', // not designed for this, but should do the trick\n  // need restLonga -- used in multimeasure rests, like above\n  restDoubleWhole: 'v31',\n  restWhole: 'v5c',\n  restHalf: 'vc',\n  restQuarter: 'v7c',\n  rest8th: 'va5',\n  rest16th: 'v3c',\n  rest32nd: 'v55',\n  rest64th: 'v38',\n  rest128th: 'vaa',\n\n  // dynamics (e520-e54f)\n  dynamicPiano: 'vbf',\n  dynamicMezzo: 'v62',\n  dynamicForte: 'vba',\n  dynamicRinforzando: 'vba',\n  dynamicSforzando: 'v4a',\n  dynamicZ: 'v80',\n\n  // common ornaments (e560-e56f)\n  ornamentTrill: 'v1f',\n  ornamentTurn: 'v72',\n  ornamentTurnSlash: 'v33',\n  ornamentMordent: 'v45',\n  ornamentMordentInverted: 'v1e',\n  ornamentTremblement: 'v86',\n\n  // precomposed trills and mordents (e5b0-e5cf)\n  ornamentPrecompAppoggTrill: 'v20',\n  ornamentPrecompSlideTrillDAnglebert: 'v60',\n  ornamentPrecompSlideTrillBach: 'v29',\n  ornamentPrecompTrillSuffixDandrieu: 'v6d',\n  ornamentPrecompDoubleCadenceUpperPrefix: 'vb4',\n  ornamentPrecompDoubleCadenceUpperPrefixTurn: 'v68',\n  ornamentPrecompTrillLowerSuffix: 'v2c',\n\n  // string techniques (e610-e62f)\n  stringsDownBow: 'v94',\n  stringsUpBow: 'v75',\n  stringsHarmonic: 'vb9',\n\n  // plucked techniques (e630-e63f)\n  pluckedSnapPizzicatoAbove: 'v94',\n  pluckedLeftHandPizzicato: 'v8b', // plus sign\n\n  // keyboard techniques (e650-e67f)\n  keyboardPedalPed: 'v36',\n  keyboardPedalUp: 'v5d',\n\n  // percussion playing technique pictograms (e7f0-e80f)\n  pictChokeCymbal: 'vb3',\n\n  // multi-segment lines (eaa0-eb0f)\n  wiggleArpeggiatoUp: 'va3', // rotated 90deg from reference implementation\n\n  // arrows and arrowheads (eb60-eb8f)\n  arrowheadBlackUp: 'vc3',\n  arrowheadBlackDown: 'v52',\n\n  // not found:\n  // noteheadDiamondWhole: 'v27', stylistic alternate to v46?\n  // noteheadDiamondBlack: 'v70', stylistic alternate to v22?\n  // noteheadTriangleUpBlack: 'v7d', stylistic alternate to v40?\n  // accidentalSlashedDoubleFlat: 'v90',\n  // accidentalOneAndAHalfSharpTurned: 'v7a',\n  // unused marcato alternative?  'v5a',\n  // arpeggioBrushDown: 'v11',\n};\n\n// Some defaults\nFlow.TIME4_4 = {\n  num_beats: 4,\n  beat_value: 4,\n  resolution: Flow.RESOLUTION,\n};\nexport { Flow };\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nexport class CanvasContext {\n  static get WIDTH() {\n    return 600;\n  }\n  static get HEIGHT() {\n    return 400;\n  }\n\n  constructor(context) {\n    // Use a name that is unlikely to clash with a canvas context\n    // property\n    this.vexFlowCanvasContext = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  clear() {\n    this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.vexFlowCanvasContext.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.vexFlowCanvasContext.fillStyle = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_fillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.vexFlowCanvasContext.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.vexFlowCanvasContext.shadowColor = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.vexFlowCanvasContext.shadowBlur = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.vexFlowCanvasContext.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(cap_type) {\n    this.vexFlowCanvasContext.lineCap = cap_type;\n    return this;\n  }\n\n  // setLineDash: is the one native method in a canvas context\n  // that begins with set, therefore we don't bolster the method\n  // if it already exists (see renderer.bolsterCanvasContext).\n  // If it doesn't exist, we bolster it and assume it's looking for\n  // a ctx.lineDash method, as previous versions of VexFlow\n  // expected.\n  setLineDash(dash) {\n    this.vexFlowCanvasContext.lineDash = dash;\n    return this;\n  }\n\n  scale(x, y) {\n    return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n  }\n\n  resize(width, height) {\n    return this.vexFlowCanvasContext.resize(parseInt(width, 10), parseInt(height, 10));\n  }\n\n  rect(x, y, width, height) {\n    return this.vexFlowCanvasContext.rect(x, y, width, height);\n  }\n\n  fillRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n  }\n\n  clearRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n  }\n\n  beginPath() {\n    return this.vexFlowCanvasContext.beginPath();\n  }\n\n  moveTo(x, y) {\n    return this.vexFlowCanvasContext.moveTo(x, y);\n  }\n\n  lineTo(x, y) {\n    return this.vexFlowCanvasContext.lineTo(x, y);\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    return this.vexFlowCanvasContext.glow();\n  }\n\n  fill() {\n    return this.vexFlowCanvasContext.fill();\n  }\n\n  stroke() {\n    return this.vexFlowCanvasContext.stroke();\n  }\n\n  closePath() {\n    return this.vexFlowCanvasContext.closePath();\n  }\n\n  measureText(text) {\n    return this.vexFlowCanvasContext.measureText(text);\n  }\n\n  fillText(text, x, y) {\n    return this.vexFlowCanvasContext.fillText(text, x, y);\n  }\n\n  save() {\n    return this.vexFlowCanvasContext.save();\n  }\n\n  restore() {\n    return this.vexFlowCanvasContext.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A rendering context for the Raphael backend.\n//\n// ## Warning: Deprecated for SVGContext\n// Except in instances where SVG support for IE < 9.0 is\n// needed, SVGContext is recommended.\n\nexport class RaphaelContext {\n  constructor(element) {\n    this.element = element;\n    this.paper = Raphael(element); // eslint-disable-line\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      font_family: 'Arial',\n      font_size: 8,\n      font_weight: 800,\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'font': '10pt Arial',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'font': '10pt Arial',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.state.font_family = family;\n    this.state.font_size = size;\n    this.state.font_weight = weight;\n    this.attributes.font = (this.state.font_weight || '') + ' ' +\n      (this.state.font_size * this.state.scale.x) + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.attributes.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // Empty because there is no equivalent in SVG\n  setLineDash() { return this; }\n  setLineCap() { return this; }\n\n  scale(x, y) {\n    this.state.scale = { x, y };\n    // The scale() method is deprecated as of Raphael.JS 2.0, and\n    // can no longer be used as an option in an Element.attr() call.\n    // It is preserved here for users running earlier versions of\n    // Raphael.JS, though it has no effect on the SVG output in\n    // Raphael 2 and higher.\n    this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.attributes.scale = x + ',' + y + ',0,0';\n    this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.background_attributes.font = this.state.font_size *\n      this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  clear() { this.paper.clear(); }\n\n  resize(width, height) {\n    this.element.style.width = width;\n    this.paper.setSize(width, height);\n    return this;\n  }\n\n  // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n  // is resized.\n  //\n  // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n  setViewBox(viewBox) {\n    this.paper.canvas.setAttribute('viewBox', viewBox);\n  }\n\n  rect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', this.lineWidth);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.background_attributes);\n    return this;\n  }\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ',' +\n      y1 + ',' +\n      x2 + ',' +\n      y2 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ',' +\n      y1 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ',' + y1 + ',A' +\n      radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' +\n      x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    const out = this.paper.set();\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      for (let i = 1; i <= num_paths; i++) {\n        out.push(this.paper.path(this.path).attr({\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n          // See note in this.scale(): In Raphael the scale() method\n          // is deprecated and removed as of Raphael 2.0 and replaced\n          // by the transform() method.  It is preserved here for\n          // users with earlier versions of Raphael, but has no effect\n          // on the output SVG in Raphael 2.0+.\n          transform: this.attributes.transform,\n          scale: this.attributes.scale,\n        }));\n      }\n    }\n    return out;\n  }\n\n  fill() {\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('stroke-width', 0);\n    this.glow(elem);\n    return this;\n  }\n\n  stroke() {\n    // The first line of code below is, unfortunately, a bit of a hack:\n    // Raphael's transform() scaling does not scale the stroke-width, so\n    // in order to scale a stroke, we have to manually scale the\n    // stroke-width.\n    //\n    // This works well so long as the X & Y states for this.scale() are\n    // relatively similar.  However, if they are very different, we\n    // would expect horizontal and vertical lines to have different\n    // stroke-widths.\n    //\n    // In the future, if we want to support very divergent values for\n    // horizontal and vertical scaling, we may want to consider\n    // implementing SVG scaling with properties of the SVG viewBox &\n    // viewPort and removing it entirely from the Element.attr() calls.\n    // This would more closely parallel the approach taken in\n    // canvascontext.js as well.\n\n    const strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', strokeWidth);\n    this.glow(elem);\n    return this;\n  }\n\n  closePath() {\n    this.path += 'Z';\n    return this;\n  }\n\n  measureText(text) {\n    const txt = this.paper.text(0, 0, text)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke', 'none');\n    const bounds = txt.getBBox();\n    txt.remove();\n\n    return {\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n\n  fillText(text, x, y) {\n    this.paper\n      .text(\n        x + (this.measureText(text).width / 2),\n        y - (this.state.font_size / (2.25 * this.state.scale.y)),\n        text\n      )\n      .attr(this.attributes);\n\n    return this;\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        font_family: this.state.font_family,\n      },\n      attributes: {\n        font: this.attributes.font,\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state.font_family = state.state.font_family;\n    this.attributes.font = state.attributes.font;\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Gregory Ristow (2015)\n\nimport { Vex } from './vex';\n\nconst attrNamesToIgnoreMap = {\n  path: {\n    x: true,\n    y: true,\n    width: true,\n    height: true,\n  },\n  rect: {\n  },\n  text: {\n    width: true,\n    height: true,\n  },\n};\n\n{\n  const fontAttrNamesToIgnore = {\n    'font-family': true,\n    'font-weight': true,\n    'font-style': true,\n    'font-size': true,\n  };\n\n  Vex.Merge(attrNamesToIgnoreMap.rect, fontAttrNamesToIgnore);\n  Vex.Merge(attrNamesToIgnoreMap.path, fontAttrNamesToIgnore);\n}\n\nexport class SVGContext {\n  constructor(element) {\n    // element is the parent DOM object\n    this.element = element;\n    // Create the SVG in the SVG namespace:\n    this.svgNS = 'http://www.w3.org/2000/svg';\n    const svg = this.create('svg');\n    // Add it to the canvas:\n    this.element.appendChild(svg);\n\n    // Point to it:\n    this.svg = svg;\n    this.groups = [this.svg]; // Create the group stack\n    this.parent = this.svg;\n\n    this.path = '';\n    this.pen = { x: NaN, y: NaN };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      'font-family': 'Arial',\n      'font-size': '8pt',\n      'font-weight': 'normal',\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n\n    // Test for Internet Explorer\n    this.iePolyfill();\n  }\n\n  create(svgElementType) {\n    return document.createElementNS(this.svgNS, svgElementType);\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls, id, attrs) {\n    const group = this.create('g');\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', Vex.Prefix(cls));\n    if (id) group.setAttribute('id', Vex.Prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    return group;\n  }\n\n  closeGroup() {\n    this.groups.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem) {\n    this.parent.appendChild(elem);\n  }\n\n  // Tests if the browser is Internet Explorer; if it is,\n  // we do some tricks to improve text layout.  See the\n  // note at ieMeasureTextFix() for details.\n  iePolyfill() {\n    if (typeof (navigator) !== 'undefined') {\n      this.ie = (\n        /MSIE 9/i.test(navigator.userAgent) ||\n        /MSIE 10/i.test(navigator.userAgent) ||\n        /rv:11\\.0/i.test(navigator.userAgent) ||\n        /Trident/i.test(navigator.userAgent)\n      );\n    }\n  }\n\n  // ### Styling & State Methods:\n\n  setFont(family, size, weight) {\n    // Unlike canvas, in SVG italic is handled by font-style,\n    // not weight. So: we search the weight argument and\n    // apply bold and italic to weight and style respectively.\n    let bold = false;\n    let italic = false;\n    let style = 'normal';\n    // Weight might also be a number (200, 400, etc...) so we\n    // test its type to be sure we have access to String methods.\n    if (typeof weight === 'string') {\n      // look for \"italic\" in the weight:\n      if (weight.indexOf('italic') !== -1) {\n        weight = weight.replace(/italic/g, '');\n        italic = true;\n      }\n      // look for \"bold\" in weight\n      if (weight.indexOf('bold') !== -1) {\n        weight = weight.replace(/bold/g, '');\n        bold = true;\n      }\n      // remove any remaining spaces\n      weight = weight.replace(/ /g, '');\n    }\n    weight = bold ? 'bold' : weight;\n    weight = (typeof weight === 'undefined' || weight === '') ? 'normal' : weight;\n\n    style = italic ? 'italic' : style;\n\n    const fontAttributes = {\n      'font-family': family,\n      'font-size': size + 'pt',\n      'font-weight': weight,\n      'font-style': style,\n    };\n\n    // Store the font size so that if the browser is Internet\n    // Explorer we can fix its calculations of text width.\n    this.fontSize = Number(size);\n\n    Vex.Merge(this.attributes, fontAttributes);\n    Vex.Merge(this.state, fontAttributes);\n\n    return this;\n  }\n\n  setRawFont(font) {\n    font = font.trim();\n    // Assumes size first, splits on space -- which is presently\n    // how all existing modules are calling this.\n    const fontArray = font.split(' ');\n\n    this.attributes['font-family'] = fontArray[1];\n    this.state['font-family'] = fontArray[1];\n\n    this.attributes['font-size'] = fontArray[0];\n    this.state['font-size'] = fontArray[0];\n\n    // Saves fontSize for IE polyfill\n    this.fontSize = Number(fontArray[0].match(/\\d+/));\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n  setLineDash(lineDash) {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      lineDash = lineDash.join(', ');\n      this.attributes['stroke-dasharray'] = lineDash;\n      return this;\n    } else {\n      throw new Vex.RERR('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  setLineCap(lineCap) {\n    this.attributes['stroke-linecap'] = lineCap;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- seperate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.element.style.width = width;\n    const attributes = {\n      width,\n      height,\n    };\n    this.applyAttributes(this.svg, attributes);\n    this.scale(this.state.scale.x, this.state.scale.y);\n    return this;\n  }\n\n  scale(x, y) {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas or Raphael contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scale = { x, y };\n    const visibleWidth = this.width / x;\n    const visibleHeight = this.height / y;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  setViewBox(...args) {\n    // Override for \"x y w h\" style:\n    if (args.length === 1) {\n      const [viewBox] = args;\n      this.svg.setAttribute('viewBox', viewBox);\n    } else {\n      const [xMin, yMin, width, height] = args;\n      const viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n\n  applyAttributes(element, attributes) {\n    const attrNamesToIgnore = attrNamesToIgnoreMap[element.nodeName];\n    Object\n      .keys(attributes)\n      .forEach(propertyName => {\n        if (attrNamesToIgnore && attrNamesToIgnore[propertyName]) {\n          return;\n        }\n        element.setAttributeNS(null, propertyName, attributes[propertyName]);\n      });\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear() {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed:\n    this.scale(this.state.scale.x, this.state.scale.y);\n  }\n\n  // ## Rectangles:\n\n  rect(x, y, width, height, attributes) {\n    // Avoid invalid negative height attribs by\n    // flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    // Create the rect & style it:\n    const rectangle = this.create('rect');\n    if (typeof attributes === 'undefined') {\n      attributes = {\n        fill: 'none',\n        'stroke-width': this.lineWidth,\n        stroke: 'black',\n      };\n    }\n\n    Vex.Merge(attributes, {\n      x,\n      y,\n      width,\n      height,\n    });\n\n    this.applyAttributes(rectangle, attributes);\n\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    this.rect(x, y, width, height, this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    // TODO(GCR): Improve implementation of this...\n    // Currently it draws a box of the background color, rather\n    // than creating alpha through lower z-levels.\n    //\n    // See the implementation of this in SVGKit:\n    // http://sourceforge.net/projects/svgkit/\n    // as a starting point.\n    //\n    // Adding a large number of transform paths (as we would\n    // have to do) could be a real performance hit.  Since\n    // tabNote seems to be the only module that makes use of this\n    // it may be worth creating a seperate tabStave that would\n    // draw lines around locations of tablature fingering.\n    //\n\n    this.rect(x, y, width, height, this.background_attributes);\n    return this;\n  }\n\n  // ## Paths:\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = NaN;\n    this.pen.y = NaN;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ' ' +\n      y1 + ',' +\n      x2 + ' ' +\n      y2 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ' ' +\n      y1 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ' ' + y1 + ' A' +\n      radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' +\n      x2 + ' ' + y2;\n    if (!isNaN(this.pen.x) && !isNaN(this.pen.y)) {\n      this.peth += 'M' + this.pen.x + ' ' + this.pen.y;\n    }\n  }\n\n  closePath() {\n    this.path += 'Z';\n\n    return this;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    // Calculate the width & paths of the glow:\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      // Stroke at varying widths to create effect of gaussian blur:\n      for (let i = 1; i <= num_paths; i++) {\n        const attributes = {\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +((sa.width * 0.4) / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n        };\n\n        const path = this.create('path');\n        attributes.d = this.path;\n        this.applyAttributes(path, attributes);\n        this.add(path);\n      }\n    }\n    return this;\n  }\n\n  fill(attributes) {\n    // If our current path is set to glow, make it glow\n    this.glow();\n\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = {};\n      Vex.Merge(attributes, this.attributes);\n      attributes.stroke = 'none';\n    }\n\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke() {\n    // If our current path is set to glow, make it glow.\n    this.glow();\n\n    const path = this.create('path');\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.fill = 'none';\n    attributes['stroke-width'] = this.lineWidth;\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text) {\n    const txt = this.create('text');\n    if (typeof (txt.getBBox) !== 'function') {\n      return { x: 0, y: 0, width: 0, height: 0 };\n    }\n\n    txt.textContent = text;\n    this.applyAttributes(txt, this.attributes);\n\n    // Temporarily add it to the document for measurement.\n    this.svg.appendChild(txt);\n\n    let bbox = txt.getBBox();\n    if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n      bbox = this.ieMeasureTextFix(bbox, text);\n    }\n\n    this.svg.removeChild(txt);\n    return bbox;\n  }\n\n  ieMeasureTextFix(bbox) {\n    // Internet Explorer over-pads text in italics,\n    // resulting in giant width estimates for measureText.\n    // To fix this, we use this formula, tested against\n    // ie 11:\n    // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n    // And then subtract the overestimate from calculated width.\n\n    const fontSize = Number(this.fontSize);\n    const m = 1.196;\n    const b = 1.9598;\n    const widthCorrection = (m * fontSize) + b;\n    const width = bbox.width - widthCorrection;\n    const height = bbox.height - 1.5;\n\n    // Get non-protected copy:\n    const box = {\n      x: bbox.x,\n      y: bbox.y,\n      width,\n      height,\n    };\n\n    return box;\n  }\n\n  fillText(text, x, y) {\n    if (!text || text.length <= 0) {\n      return;\n    }\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.stroke = 'none';\n    attributes.x = x;\n    attributes.y = y;\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n        scale: this.state.scale,\n      },\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n      lineWidth: this.lineWidth,\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state['font-family'] = state.state['font-family'];\n    this.state['font-weight'] = state.state['font-weight'];\n    this.state['font-style'] = state.state['font-style'];\n    this.state['font-size'] = state.state['font-size'];\n    this.state.scale = state.state.scale;\n\n    this.attributes['font-family'] = state.attributes['font-family'];\n    this.attributes['font-weight'] = state.attributes['font-weight'];\n    this.attributes['font-style'] = state.attributes['font-style'];\n    this.attributes['font-size'] = state.attributes['font-size'];\n\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n\n    this.lineWidth = state.lineWidth;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Support for different rendering contexts: Canvas, Raphael\n\n/* global document: false */\n\nimport { CanvasContext } from './canvascontext';\nimport { RaphaelContext } from './raphaelcontext';\nimport { SVGContext } from './svgcontext';\nimport { Vex } from './vex';\n\nlet lastContext = null;\n\nexport class Renderer {\n  static get Backends() {\n    return {\n      CANVAS: 1,\n      RAPHAEL: 2,\n      SVG: 3,\n      VML: 4,\n    };\n  }\n\n  // End of line types\n  static get LineEndType() {\n    return {\n      NONE: 1, // No leg\n      UP: 2,   // Upward leg\n      DOWN: 3, // Downward leg\n    };\n  }\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  static get USE_CANVAS_PROXY() {\n    return false;\n  }\n\n  static get lastContext() {\n    return lastContext;\n  }\n  static set lastContext(ctx) {\n    lastContext = ctx;\n  }\n\n  static buildContext(elementId, backend, width, height, background) {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) { renderer.resize(width, height); }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getRaphaelContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n  }\n\n  static getSVGContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  static bolsterCanvasContext(ctx) {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    const methodNames = [\n      'clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle',\n      'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth',\n      'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach(methodName => {\n      ctx[methodName] = ctx[methodName] || CanvasContext.prototype[methodName];\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(elementId, backend) {\n    this.elementId = elementId;\n    if (!this.elementId) {\n      throw new Vex.RERR('BadArgument', 'Invalid id for renderer.');\n    }\n\n    this.element = document.getElementById(elementId);\n    if (!this.element) this.element = elementId;\n\n    // Verify backend and create context\n    this.ctx = null;\n    this.paper = null;\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      // Create context.\n      if (!this.element.getContext) {\n        throw new Vex.RERR('BadElement', `Can't get canvas context from element: ${elementId}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n      this.ctx = new RaphaelContext(this.element);\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new Vex.RERR('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width, height) {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new Vex.RERR(\n          'BadElement', `Can't get canvas context from element: ${this.elementId}`\n        );\n      }\n\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      this.element.width = width * devicePixelRatio;\n      this.element.height = height * devicePixelRatio;\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      this.ctx.scale(devicePixelRatio, devicePixelRatio);\n    } else {\n      this.ctx.resize(width, height);\n    }\n\n    return this;\n  }\n\n  getContext() { return this.ctx; }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\nfunction L(...args) { if (Stem.DEBUG) Vex.L('Vex.Flow.Stem', args); }\n\nexport class Stem extends Element {\n  static get CATEGORY() { return 'stem'; }\n\n  // Stem directions\n  static get UP() {\n    return 1;\n  }\n  static get DOWN() {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH() {\n    return Flow.STEM_WIDTH;\n  }\n  static get HEIGHT() {\n    return Flow.STEM_HEIGHT;\n  }\n\n  constructor(options = {}) {\n    super();\n    this.setAttribute('type', 'Stem');\n\n    // Default notehead x bounds\n    this.x_begin = options.x_begin || 0;\n    this.x_end = options.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options.y_top || 0;\n    this.y_bottom = options.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options.hide || false;\n\n    this.isStemlet = options.isStemlet || false;\n    this.stemletHeight = options.stemletHeight || 0;\n\n    // Changing where the stem meets the head\n    this.stem_up_y_offset = options.stem_up_y_offset || 0;\n    this.stem_down_y_offset = options.stem_down_y_offset || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin, x_end) {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction) { this.stem_direction = direction; }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext) { this.stem_extension = ext; }\n  getExtension() { return this.stem_extension; }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top, y_bottom) {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // The category of the object\n  getCategory() { return Stem.CATEGORY; }\n\n  // Gets the entire height for the stem\n  getHeight() {\n    const y_offset = (this.stem_direction === Stem.UP) ? this.stem_up_y_offset : this.stem_down_y_offset; // eslint-disable-line max-len\n    return ((this.y_bottom - this.y_top) * this.stem_direction) +\n           ((Stem.HEIGHT - y_offset + this.stem_extension) * this.stem_direction);\n  }\n  getBoundingBox() {\n    throw new Vex.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents() {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + (stemHeight * -this.stem_direction);\n\n    return { topY: stemTipY, baseY: outerMostNoteheadY };\n  }\n\n  setVisibility(isVisible) {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet, stemletHeight) {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  draw() {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top + this.stem_down_y_offset;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom - this.stem_up_y_offset;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet\n      ? stemHeight - this.stemletHeight * this.stem_direction\n      : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle(ctx);\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - (this.renderHeightAdjustment * stem_direction));\n    ctx.stroke();\n    this.restoreStyle(ctx);\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\nexport class Tuplet extends Element {\n  static get LOCATION_TOP() {\n    return 1;\n  }\n  static get LOCATION_BOTTOM() {\n    return -1;\n  }\n  static get NESTING_OFFSET() {\n    return 15;\n  }\n\n  constructor(notes, options) {\n    super();\n    this.setAttribute('type', 'Tuplet');\n    if (!notes || !notes.length) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    this.options = Vex.Merge({}, options);\n    this.notes = notes;\n    this.num_notes = 'num_notes' in this.options ?\n      this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied ||\n      this.options.beats_occupied ||\n      2;\n    if ('bracketed' in this.options) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed =\n        notes.some(note => note.beam === null);\n    }\n\n    this.ratioed = 'ratioed' in this.options ?\n      this.options.ratioed :\n      (Math.abs(this.notes_occupied - this.num_notes) > 1);\n    this.point = 28;\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n    this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed) {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed) {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet to be displayed either on the top or bottom of the stave\n   */\n  setTupletLocation(location) {\n    if (!location) {\n      location = Tuplet.LOCATION_TOP;\n    } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      throw new Vex.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes() {\n    return this.notes;\n  }\n\n  getNoteCount() {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning() {\n    const msg = [\n      'beats_occupied has been deprecated as an ',\n      'option for tuplets. Please use notes_occupied ',\n      'instead. Calls to getBeatsOccupied and ',\n      'setBeatsOccupied should now be routed to ',\n      'getNotesOccupied and setNotesOccupied instead',\n    ].join('');\n\n    if (console && console.warn) { // eslint-disable-line no-console\n      console.warn(msg); // eslint-disable-line no-console\n    } else if (console) {\n      console.log(msg); // eslint-disable-line no-console\n    }\n  }\n\n  getBeatsOccupied() {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats) {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied() {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes) {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs() {\n    this.numerator_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.numerator_glyphs.unshift(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.unshift(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount() {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note, location) {\n      return note.tupletStack.filter(tuplet => tuplet.location === location).length;\n    }\n\n    this.notes.forEach(note => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition() {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset =\n      this.getNestedTupletCount() *\n      Tuplet.NESTING_OFFSET *\n      -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.getStave().getYForLine(0) - 15;\n      // y_pos = first_note.getStemExtents().topY - 10;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const top_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().topY - 10\n          : this.notes[i].getStemExtents().baseY - 20;\n\n        if (top_y < y_pos) {\n          y_pos = top_y;\n        }\n      }\n    } else {\n      y_pos = first_note.getStave().getYForLine(4) + 20;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().baseY + 20\n          : this.notes[i].getStemExtents().topY + 10;\n        if (bottom_y > y_pos) {\n          y_pos = bottom_y;\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0];\n    const last_note = this.notes[this.notes.length - 1];\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width, glyph) => width + glyph.getMetrics().width;\n\n    // calculate total width of tuplet notation\n    let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + (this.width / 2);\n    const notation_start_x = notation_center_x - (width / 2);\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        this.context.fillRect(\n          this.x_pos + this.width / 2 + width / 2 + 5,\n          this.y_pos,\n          line_width,\n          1\n        );\n        this.context.fillRect(\n          this.x_pos,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n        this.context.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    let x_offset = 0;\n    this.numerator_glyphs.forEach(glyph => {\n      glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n      x_offset += glyph.getMetrics().width;\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach(glyph => {\n        glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n        x_offset += glyph.getMetrics().width;\n      });\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `Beams` that span over a set of `StemmableNotes`.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tuplet } from './tuplet';\nimport { Stem } from './stem';\n\nfunction calculateStemDirection(notes) {\n  let lineSum = 0;\n  notes.forEach(note => {\n    if (note.keyProps) {\n      note.keyProps.forEach(keyProp => {\n        lineSum += (keyProp.line - 3);\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nconst getStemSlope = (firstNote, lastNote) => {\n  const firstStemTipY = firstNote.getStemExtents().topY;\n  const firstStemX = firstNote.getStemX();\n  const lastStemTipY = lastNote.getStemExtents().topY;\n  const lastStemX = lastNote.getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n};\n\nconst BEAM_LEFT = 'L';\nconst BEAM_RIGHT = 'R';\nconst BEAM_BOTH = 'B';\n\nexport class Beam extends Element {\n  // Gets the default beam groups for a provided time signature.\n  // Attempts to guess if the time signature is not found in table.\n  // Currently this is fairly naive.\n  static getDefaultBeamGroups(time_sig) {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map(group => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  // A helper function to automatically build basic beams for a voice. For more\n  // complex auto-beaming use `Beam.generateBeams()`.\n  //\n  // Parameters:\n  // * `voice` - The voice to generate the beams for\n  // * `stem_direction` - A stem direction to apply to the entire voice\n  // * `groups` - An array of `Fraction` representing beat groupings for the beam\n  static applyAndGetBeams(voice, stem_direction, groups) {\n    return Beam.generateBeams(voice.getTickables(), {\n      groups,\n      stem_direction,\n    });\n  }\n\n  // A helper function to autimatically build beams for a voice with\n  // configuration options.\n  //\n  // Example configuration object:\n  //\n  // ```\n  // config = {\n  //   groups: [new Vex.Flow.Fraction(2, 8)],\n  //   stem_direction: -1,\n  //   beam_rests: true,\n  //   beam_middle_only: true,\n  //   show_stemlets: false\n  // };\n  // ```\n  //\n  // Parameters:\n  // * `notes` - An array of notes to create the beams for\n  // * `config` - The configuration object\n  //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n  //    * `stem_direction` - Set to apply the same direction to all notes\n  //    * `beam_rests` - Set to `true` to include rests in the beams\n  //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n  //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n  //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n  //\n  static generateBeams(notes, config) {\n    if (!config) config = {};\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map(group => {\n      if (!group.multiply) {\n        throw new Vex.RuntimeError('InvalidBeamGroups',\n          'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(Flow.RESOLUTION, 1);\n    });\n\n    const unprocessedNotes = notes;\n    let currentTickGroup = 0;\n    let noteGroups = [];\n    let currentGroup = [];\n\n    function getTotalTicks(vf_notes) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup = [];\n\n      unprocessedNotes.forEach(unprocessedNote => {\n        nextGroup = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = Flow.durationToNumber(unprocessedNote.duration) < 8;\n        if (unbeamable && unprocessedNote.tuplet) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            nextGroup.push(currentGroup.pop());\n          }\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n\n    function getBeamGroups() {\n      return noteGroups.filter(group => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach(note => {\n            if (note.getIntrinsicTicks() >= Flow.durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups = [];\n      noteGroups.forEach(group => {\n        let tempGroup = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest = (config.beam_rests &&\n            config.beam_middle_only && note.isRest() && isFirstOrLast);\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote &&\n            !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = prevNote.getStemDirection();\n            const currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest ||\n            breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach(group => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group, direction) {\n      group.forEach(note => {\n        note.setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach(group => {\n        let tuplet = null;\n        group.forEach(note => {\n          if (note.tuplet && (tuplet !== note.tuplet)) {\n            tuplet = note.tuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams = [];\n    beamedNoteGroups.forEach(group => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = Flow.durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach(tuplet => {\n      // Set the tuplet location based on the stem direction\n      const direction = tuplet.notes[0].stem_direction === Stem.DOWN ?\n        Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i];\n        if (note.beam === null) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes, auto_stem) {\n    super();\n    this.setAttribute('type', 'Beam');\n\n    if (!notes || notes === []) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= Flow.durationToTicks('4')) {\n      throw new Vex.RuntimeError('BadArguments',\n        'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = Stem.UP;\n\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (note.hasStem()) {\n        this.stem_direction = note.getStemDirection();\n        break;\n      }\n    }\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n    if (auto_stem && notes[0].getCategory() === 'stavenotes') {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + note.stem_direction, 0);\n\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        note.setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    };\n  }\n\n  // Get the notes in this beam\n  getNotes() { return this.notes; }\n\n  // Get the max number of beams in the set of notes\n  getBeamCount() {\n    const beamCounts = this.notes.map(note => note.getGlyph().beam_count);\n\n    const maxBeamCount = beamCounts.reduce((max, beamCount) => beamCount > max ? beamCount : max);\n\n    return maxBeamCount;\n  }\n\n  // Set which note `indices` to break the secondary beam at\n  breakSecondaryAt(indices) {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  // Return the y coordinate for linear function\n  getSlopeY(x, first_x_px, first_y_px, slope) {\n    return first_y_px + ((x - first_x_px) * slope);\n  }\n\n  // Calculate the best possible slope for the provided notes\n  calculateSlope() {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: { max_slope, min_slope, slope_iterations, slope_cost },\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        const adjustedStemTipY = this.getSlopeY(\n          note.getStemX(),\n          firstNote.getStemX(),\n          firstNote.getStemExtents().topY,\n          slope\n        ) + yShiftTemp;\n\n        const stemTipY = note.getStemExtents().topY;\n        // beam needs to be shifted up to accommodate note\n        if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n          const diff = Math.abs(stemTipY - adjustedStemTipY);\n          yShiftTemp += diff * -stemDirection;\n          totalStemExtension += diff * i;\n        } else { // beam overshoots note, account for the difference\n          totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  // Calculate a slope and y-shift for flat beams\n  calculateFlatSlope() {\n    const {\n      notes, stem_direction,\n      render_options: { beam_width, min_flat_beam_offset, flat_beam_offset },\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0;  // Store the highest or lowest note here\n    let extremeBeamCount = 0;  // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = note.getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      } else if (\n        stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)\n      ) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + (extremeBeamCount * beamWidth);\n    const newOffset = extremeY + (extremeTest * -stem_direction);\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  getBeamYToDraw() {\n    const firstNote = this.notes[0];\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n    return beamY;\n  }\n\n  // Create new stems for the notes in the beam, so that each stem\n  // extends into the beams.\n  applyStemExtensions() {\n    const {\n      notes, slope, y_shift, stem_direction, beam_count,\n      render_options: {\n        show_stemlets,\n        stemlet_extension,\n        beam_width,\n      },\n    } = this;\n\n    const firstNote = notes[0];\n    const firstStemTipY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stemX = note.getStemX();\n      const { topY: stemTipY } = note.getStemExtents();\n      const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n      const preBeamExtension = note.getStem().getExtension();\n      const beamExtension = stem_direction === Stem.UP\n        ? stemTipY - beamedStemTipY\n        : beamedStemTipY - stemTipY;\n\n      note.stem.setExtension(preBeamExtension + beamExtension);\n      note.stem.renderHeightAdjustment = -Stem.WIDTH / 2;\n\n      if (note.isRest() && show_stemlets) {\n        const beamWidth = beam_width;\n        const totalBeamWidth = ((beam_count - 1) * beamWidth * 1.5) + beamWidth;\n        note.stem\n          .setVisibility(true)\n          .setStemlet(true, totalBeamWidth + stemlet_extension);\n      }\n    }\n  }\n\n  // return upper level beam direction.\n  lookupBeamDirection(duration, prev_tick, tick, next_tick) {\n    if (duration === '4') {\n      return BEAM_LEFT;\n    }\n\n    const lookup_duration =  `${Flow.durationToNumber(duration) / 2}`;\n    const prev_note_gets_beam = prev_tick < Flow.durationToTicks(lookup_duration);\n    const next_note_gets_beam = next_tick < Flow.durationToTicks(lookup_duration);\n    const note_gets_beam = tick < Flow.durationToTicks(lookup_duration);\n\n    if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_BOTH;\n    } else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n      return BEAM_LEFT;\n    } else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_RIGHT;\n    }\n\n    return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick);\n  }\n\n  // Get the x coordinates for the beam lines of specific `duration`\n  getBeamLines(duration) {\n    const tick_of_duration = Flow.durationToTicks(duration);\n    const beam_lines = [];\n    let beam_started = false;\n    let current_beam = null;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.ticks.value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >=\n          this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n\n      const stem_x = note.getStemX() - (Stem.WIDTH / 2);\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const prev_note = this.notes[i - 1];\n      const next_note = this.notes[i + 1];\n      const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n      const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n      const beam_alone = prev_note && next_note &&\n      note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !next_note_gets_beam && current_beam.end === null) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = { start: stem_x, end: null };\n          beam_started = true;\n\n          if (beam_alone) {\n            // previous and next beam exists and does not get a beam but current gets it.\n            const prev_tick = prev_note.getIntrinsicTicks();\n            const next_tick = next_note.getIntrinsicTicks();\n            const tick = note.getIntrinsicTicks();\n            const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick);\n\n            if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n              current_beam.end = current_beam.start - partial_beam_length;\n            } else {\n              current_beam.end = current_beam.start + partial_beam_length;\n            }\n          } else if (!next_note_gets_beam) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === null) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  // Render the stems for each notes\n  drawStems() {\n    this.notes.forEach(note => {\n      if (note.getStem()) {\n        note.getStem().setContext(this.context).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  drawBeamLines() {\n    this.checkContext();\n\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n    let beamY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n        this.context.beginPath();\n        this.context.moveTo(startBeamX, startBeamY);\n        this.context.lineTo(startBeamX, startBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY);\n        this.context.closePath();\n        this.context.fill();\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  // Pre-format the beam\n  preFormat() { return this; }\n\n  // Post-format the beam. This can only be called after\n  // the notes in the beam have both `x` and `y` values. ie: they've\n  // been formatted and have staves\n  postFormat() {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  // Render the beam to the canvas context\n  draw() {\n    this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n\n    this.drawStems();\n    this.applyStyle();\n    this.drawBeamLines();\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the main Voice class. It's mainly a container\n// object to group `Tickables` for formatting.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Voice extends Element {\n  // Modes allow the addition of ticks in three different ways:\n  //\n  // STRICT: This is the default. Ticks must fill the voice.\n  // SOFT:   Ticks can be added without restrictions.\n  // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n  //         tick length.\n  static get Mode() {\n    return {\n      STRICT: 1,\n      SOFT: 2,\n      FULL: 3,\n    };\n  }\n\n  constructor(time) {\n    super();\n    this.setAttribute('type', 'Voice');\n\n    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n    if (typeof(time) === 'string') {\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        time = {\n          num_beats: match[1],\n          beat_value: match[2],\n          resolution: Flow.RESOLUTION,\n        };\n      }\n    }\n\n    // Default time sig is 4/4\n    this.time = Vex.Merge({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }, time);\n\n    // Recalculate total ticks.\n    this.totalTicks = new Fraction(\n      this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n    this.resolutionMultiplier = 1;\n\n    // Set defaults\n    this.tickables = [];\n    this.ticksUsed = new Fraction(0, 1);\n    this.smallestTickCount = this.totalTicks.clone();\n    this.largestTickWidth = 0;\n    this.stave = null;\n    // Do we care about strictly timed notes\n    this.mode = Voice.Mode.STRICT;\n\n    // This must belong to a VoiceGroup\n    this.voiceGroup = null;\n  }\n\n  // Get the total ticks in the voice\n  getTotalTicks() { return this.totalTicks; }\n\n  // Get the total ticks used in the voice by all the tickables\n  getTicksUsed() { return this.ticksUsed; }\n\n  // Get the largest width of all the tickables\n  getLargestTickWidth() { return this.largestTickWidth; }\n\n  // Get the tick count for the shortest tickable\n  getSmallestTickCount() { return this.smallestTickCount; }\n\n  // Get the tickables in the voice\n  getTickables() { return this.tickables; }\n\n  // Get/set the voice mode, use a value from `Voice.Mode`\n  getMode() { return this.mode; }\n  setMode(mode) { this.mode = mode; return this; }\n\n  // Get the resolution multiplier for the voice\n  getResolutionMultiplier() { return this.resolutionMultiplier; }\n\n  // Get the actual tick resolution for the voice\n  getActualResolution() { return this.resolutionMultiplier * this.time.resolution; }\n\n  // Set the voice's stave\n  setStave(stave) {\n    this.stave = stave;\n    this.boundingBox = null; // Reset bounding box so we can reformat\n    return this;\n  }\n\n  // Get the bounding box for the voice\n  getBoundingBox() {\n    let stave;\n    let boundingBox;\n    let bb;\n    let i;\n\n    if (!this.boundingBox) {\n      if (!this.stave) throw new Vex.RERR('NoStave', \"Can't get bounding box without stave.\");\n      stave = this.stave;\n      boundingBox = null;\n\n      for (i = 0; i < this.tickables.length; ++i) {\n        this.tickables[i].setStave(stave);\n\n        bb = this.tickables[i].getBoundingBox();\n        if (!bb) continue;\n\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  // Every tickable must be associated with a voiceGroup. This allows formatters\n  // and preformatters to associate them with the right modifierContexts.\n  getVoiceGroup() {\n    if (!this.voiceGroup) {\n      throw new Vex.RERR('NoVoiceGroup', 'No voice group for voice.');\n    }\n\n    return this.voiceGroup;\n  }\n\n  // Set the voice group\n  setVoiceGroup(g) { this.voiceGroup = g; return this; }\n\n  // Set the voice mode to strict or soft\n  setStrict(strict) {\n    this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n    return this;\n  }\n\n  // Determine if the voice is complete according to the voice mode\n  isComplete() {\n    if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  // Add a tickable to the voice\n  addTickable(tickable) {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n\n      if (\n        (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.ticksUsed.subtract(ticks);\n        throw new Vex.RERR('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  // Add an array of tickables to the voice.\n  addTickables(tickables) {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n\n    return this;\n  }\n\n  // Preformats the voice by applying the voice's stave to each note.\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    this.tickables.forEach((tickable) => {\n      if (!tickable.getStave()) {\n        tickable.setStave(this.stave);\n      }\n    });\n\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the voice onto the canvas `context` and an optional `stave`.\n  // If `stave` is omitted, it is expected that the notes have staves\n  // already set.\n  draw(context = this.context, stave = this.stave) {\n    this.setRendered();\n    let boundingBox = null;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n\n      // Set the stave if provided\n      if (stave) tickable.setStave(stave);\n\n      if (!tickable.getStave()) {\n        throw new Vex.RuntimeError(\n          'MissingStave', 'The voice cannot draw tickables without staves.'\n        );\n      }\n\n      if (i === 0) boundingBox = tickable.getBoundingBox();\n\n      if (i > 0 && boundingBox) {\n        const tickable_bb = tickable.getBoundingBox();\n        if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n      }\n\n      tickable.setContext(context);\n      tickable.drawWithStyle();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Glyph } from './glyph';\n\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n  if (\n    type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n    type !== StaveConnector.type.BOLD_DOUBLE_RIGHT\n  ) {\n    throw new Vex.RERR(\n      'InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.'\n    );\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\nexport class StaveConnector extends Element {\n  // SINGLE_LEFT and SINGLE are the same value for compatibility\n  // with older versions of vexflow which didn't have right sided\n  // stave connectors\n  static get type() {\n    return {\n      SINGLE_RIGHT: 0,\n      SINGLE_LEFT: 1,\n      SINGLE: 1,\n      DOUBLE: 2,\n      BRACE: 3,\n      BRACKET: 4,\n      BOLD_DOUBLE_LEFT: 5,\n      BOLD_DOUBLE_RIGHT: 6,\n      THIN_DOUBLE: 7,\n      NONE: 8,\n    };\n  }\n\n  static get typeString() {\n    return {\n      singleRight: StaveConnector.type.SINGLE_RIGHT,\n      singleLeft: StaveConnector.type.SINGLE_LEFT,\n      single: StaveConnector.type.SINGLE,\n      double: StaveConnector.type.DOUBLE,\n      brace: StaveConnector.type.BRACE,\n      bracket: StaveConnector.type.BRACKET,\n      boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n      boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n      thinDouble: StaveConnector.type.THIN_DOUBLE,\n      none: StaveConnector.type.NONE,\n    };\n  }\n\n  constructor(top_stave, bottom_stave) {\n    super();\n    this.setAttribute('type', 'StaveConnector');\n\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  setType(type) {\n    type = typeof(type) === 'string'\n      ? StaveConnector.typeString[type]\n      : type;\n\n    if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  setText(text, options) {\n    this.texts.push({\n      content: text,\n      options: Vex.Merge({ shift_x: 0, shift_y: 0 }, options),\n    });\n    return this;\n  }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setXShift(x_shift) {\n    if (typeof x_shift !== 'number') {\n      throw Vex.RERR('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) +\n      this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector = (\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE\n    );\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.width;\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - (0.90 * width);\n        const cpy1 = y1 + (0.2 * attachment_height);\n        const cpx2 = x1 + (1.10 * width);\n        const cpy2 = y2 - (0.135 * attachment_height);\n        const cpx3 = cpx2;\n        const cpy3 = y2 + (0.135 * attachment_height);\n        const cpx4 = cpx1;\n        const cpy4 = y3 - (0.2 * attachment_height);\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + (0.40 * width);\n        const cpy6 = y2 + (0.135 * attachment_height);\n        const cpx7 = cpx6;\n        const cpy7 = y2 - (0.135 * attachment_height);\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      } case StaveConnector.type.BRACKET:\n        topY -= 4;\n        botY += 4;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY - 3, 40, 'v1b', true);\n        Glyph.renderGlyph(ctx, topX - 5, botY + 3, 40, 'v10', true);\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidType', `The provided StaveConnector.type (${this.type}) is invalid`\n        );\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 +\n        text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// The tickable interface. Tickables are things that sit on a score and\n// have a duration, i.e., they occupy space in the musical rendering dimension.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Tickable extends Element {\n  constructor() {\n    super();\n    this.setAttribute('type', 'Tickable');\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1);\n    this.intrinsicTicks = 0;\n    this.tickMultiplier = new Fraction(1, 1);\n\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n    this.voice = null;\n    this.tickContext = null;\n    this.modifierContext = null;\n    this.modifiers = [];\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.tuplet = null;\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  reset() { return this; }\n  getTicks() { return this.ticks; }\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n  getWidth() { return this.width; }\n\n  getFormatterMetrics() { return this.formatterMetrics; }\n\n  setXShift(x) { this.x_shift = x; }\n  getCenterXShift() {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n  isCenterAligned() { return this.align_center; }\n  setCenterAlignment(align_center) {\n    this.align_center = align_center;\n    return this;\n  }\n\n  // Every tickable must be associated with a voice. This allows formatters\n  // and preFormatter to associate them with the right modifierContexts.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Tickable has no voice.');\n    return this.voice;\n  }\n  setVoice(voice) { this.voice = voice; }\n  getTuplet() { return this.tuplet; }\n\n  /*\n   * resetTuplet\n   * @param tuplet -- the specific tuplet to reset\n   *   if this is not provided, all tuplets are reset.\n   * @returns this\n   *\n   * Removes any prior tuplets from the tick calculation and\n   * resets the intrinsic tick value to\n   */\n  resetTuplet(tuplet) {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop();\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  setTuplet(tuplet) {\n    // Attach to new tuplet\n\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addToModifierContext(mc) {\n    this.modifierContext = mc;\n    // Add modifiers to modifier context (if any)\n    this.preFormatted = false;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addModifier(mod) {\n    this.modifiers.push(mod);\n    this.preFormatted = false;\n    return this;\n  }\n  getModifiers() {\n    return this.modifiers;\n  }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n  }\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n  getIntrinsicTicks() {\n    return this.intrinsicTicks;\n  }\n  setIntrinsicTicks(intrinsicTicks) {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  getTickMultiplier() {\n    return this.tickMultiplier;\n  }\n  applyTickMultiplier(numerator, denominator) {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  setDuration(duration) {\n    const ticks = duration.numerator * (Flow.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements an abstract interface for notes and chords that\n// are rendered on a stave. Notes have some common properties: All of them\n// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n//\n// Some notes have stems, heads, dots, etc. Most notational elements that\n// surround a note are called *modifiers*, and every note has an associated\n// array of them. All notes also have a rendering context and belong to a stave.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Tickable } from './tickable';\n\nexport class Note extends Tickable {\n  static get CATEGORY() { return 'note'; }\n  static get STAVEPADDING() { return 12; }\n\n  // Debug helper. Displays various note metrics for the given\n  // note.\n  static plotMetrics(ctx, note, yPos) {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n    const xPre1 = note.getAbsoluteX() - metrics.extraLeftPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.noteWidth;\n    const xPost2 = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx;\n    const xEnd = note.getAbsoluteX()\n      + metrics.noteWidth\n      + metrics.extraRightPx\n      + metrics.modRightPx;\n    const xFreedomRight = xEnd + note.getFormatterMetrics().freedom.right;\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = (yPos + 7);\n    function stroke(x1, x2, color, yy = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    Vex.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation),\n        xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n  // positioning and layout.\n  // To create a new note you need to provide a `note_struct`, which consists\n  // of the following fields:\n  //\n  // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n  // `dots`: The number of dots, which affects the duration.\n  // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n  //\n  // The range of values for these parameters are available in `src/tables.js`.\n  constructor(note_struct) {\n    super();\n    this.setAttribute('type', 'Note');\n\n    if (!note_struct) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Note must have valid initialization data to identify duration and type.'\n      );\n    }\n\n    // Parse `note_struct` and get note properties.\n    const initData = Flow.parseNoteData(note_struct);\n    if (!initData) {\n      throw new Vex.RuntimeError(\n        'BadArguments', `Invalid note initialization object: ${JSON.stringify(note_struct)}`\n      );\n    }\n\n    // Set note properties from parameters.\n    this.duration = initData.duration;\n    this.dots = initData.dots;\n    this.noteType = initData.type;\n\n    if (note_struct.duration_override) {\n      // Custom duration\n      this.setDuration(note_struct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(initData.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (this.positions && (typeof (this.positions) !== 'object' || !this.positions.length)) {\n      throw new Vex.RuntimeError('BadArguments', 'Note keys must be array type.');\n    }\n\n    // Note to play for audio players.\n    this.playNote = null;\n\n    // Positioning contexts used by the Formatter.\n    this.tickContext = null;    // The current tick context.\n    this.modifierContext = null;\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0;             // Width in pixels calculated after preFormat\n    this.extraLeftPx = 0;       // Extra room on left for offset note head\n    this.extraRightPx = 0;      // Extra room on right for offset note head\n    this.x_shift = 0;           // X shift from tick context X\n    this.left_modPx = 0;        // Max width of left modifiers\n    this.right_modPx = 0;       // Max width of right modifiers\n    this.voice = null;          // The voice that this note is in\n    this.preFormatted = false;  // Is this note preFormatted?\n    this.ys = [];               // list of y coordinates for each note\n    // we need to hold on to these for ties and beams.\n\n    if (note_struct.align_center) {\n      this.setCenterAlignment(note_struct.align_center);\n    }\n\n    // The render surface.\n    this.stave = null;\n    this.render_options = {\n      annotation_spacing: 5,\n      stave_padding: Note.STAVEPADDING,\n    };\n  }\n\n  // Get and set the play note, which is arbitrary data that can be used by an\n  // audio player.\n  getPlayNote() { return this.playNote; }\n  setPlayNote(note) { this.playNote = note; return this; }\n\n  // Don't play notes by default, call them rests. This is also used by things like\n  // beams and dots for positioning.\n  isRest() { return false; }\n\n  // TODO(0xfe): Why is this method here?\n  addStroke(index, stroke) {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get and set the target stave.\n  getStave() { return this.stave; }\n  setStave(stave) {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // `Note` is not really a modifier, but is used in\n  // a `ModifierContext`.\n  getCategory() { return Note.CATEGORY; }\n\n  // Set the rendering context for the note.\n  setContext(context) { this.context = context; return this; }\n\n  // Get and set spacing to the left and right of the notes.\n  getExtraLeftPx() { return this.extraLeftPx; }\n  getExtraRightPx() { return this.extraRightPx; }\n  setExtraLeftPx(x) { this.extraLeftPx = x; return this; }\n  setExtraRightPx(x) { this.extraRightPx = x; return this; }\n\n  // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n\n  // Get the stave line number for the note.\n  getLineNumber() { return 0; }\n\n  // Get the stave line number for rest.\n  getLineForRest() { return 0; }\n\n  // Get the glyph associated with this note.\n  getGlyph() { return this.glyph; }\n\n  getGlyphWidth() {\n    return this.glyph.getWidth(this.render_options.glyph_font_scale);\n  }\n\n  // Set and get Y positions for this note. Each Y value is associated with\n  // an individual pitch/key within the note/chord.\n  setYs(ys) { this.ys = ys; return this; }\n  getYs() {\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  // Get the Y position of the space above the stave onto which text can\n  // be rendered.\n  getYForTopText(text_line) {\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', 'No stave attached to this note.');\n    }\n\n    return this.stave.getYForTopText(text_line);\n  }\n\n  // Get a `BoundingBox` for this note.\n  getBoundingBox() { return null; }\n\n  // Returns the voice that this note belongs in.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  // Attach this note to `voice`.\n  setVoice(voice) {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get and set the `TickContext` for this note.\n  getTickContext() { return this.tickContext; }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Accessors for the note type.\n  getDuration() { return this.duration; }\n  isDotted() { return (this.dots > 0); }\n  hasStem() { return false; }\n  getDots() { return this.dots; }\n  getNoteType() { return this.noteType; }\n  setBeam() { return this; } // ignore parameters\n\n  // Attach this note to a modifier context.\n  setModifierContext(mc) { this.modifierContext = mc; return this; }\n\n  // Attach a modifier to this note.\n  addModifier(modifier, index = 0) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get the coordinates for where modifiers begin.\n  getModifierStartXY() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  // Get bounds and metrics for this note.\n  //\n  // Returns a struct with fields:\n  // `width`: The total width of the note (including modifiers.)\n  // `noteWidth`: The width of the note head only.\n  // `left_shift`: The horizontal displacement of the note.\n  // `modLeftPx`: Start `X` for left modifiers.\n  // `modRightPx`: Start `X` for right modifiers.\n  // `extraLeftPx`: Extra space on left of note.\n  // `extraRightPx`: Extra space on right of note.\n  getMetrics() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    let modLeftPx = 0;\n    let modRightPx = 0;\n    if (this.modifierContext != null) {\n      modLeftPx = this.modifierContext.state.left_shift;\n      modRightPx = this.modifierContext.state.right_shift;\n    }\n\n    const width = this.getWidth();\n    return {\n      width,\n      noteWidth: width - modLeftPx - modRightPx - this.extraLeftPx - this.extraRightPx,\n      left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n\n      // Modifiers, accidentals etc.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      extraLeftPx: this.extraLeftPx,\n      extraRightPx: this.extraRightPx,\n    };\n  }\n\n  // Get and set width of note. Used by the formatter for positioning.\n  setWidth(width) { this.width = width; }\n  getWidth() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  // Displace note by `x` pixels. Used by the formatter.\n  setXShift(x) { this.x_shift = x; return this; }\n  getXShift() { return this.x_shift; }\n\n  // Get `X` position of this tick context.\n  getX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    return this.tickContext.getX() + this.x_shift;\n  }\n\n  // Get the absolute `X` position of this note's tick context. This\n  // excludes x_shift, so you'll need to factor it in if you're\n  // looking for the post-formatted x-position.\n  getAbsoluteX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    // Position note to left edge of tick context.\n    let x = this.tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n    }\n\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n\n    return x;\n  }\n  setPreFormatted(value) {\n    this.preFormatted = value;\n\n    // Maintain the width of left and right modifiers in pixels.\n    if (this.preFormatted) {\n      const extra = this.tickContext.getExtraPx();\n      this.left_modPx = Math.max(this.left_modPx, extra.left);\n      this.right_modPx = Math.max(this.right_modPx, extra.right);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n// directly, but used internally in `StaveNote`.\n//\n// See `tests/notehead_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\nfunction L(...args) { if (NoteHead.DEBUG) Vex.L('Vex.Flow.NoteHead', args); }\n\n// Draw slashnote head manually. No glyph exists for this.\n//\n// Parameters:\n// * `ctx`: the Canvas context\n// * `duration`: the duration of the note. ex: \"4\"\n// * `x`: the x coordinate to draw at\n// * `y`: the y coordinate to draw at\n// * `stem_direction`: the direction of the stem\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n  const width = Flow.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Flow.STEM_WIDTH);\n\n  let fill = false;\n\n  if (Flow.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (Flow.STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (Flow.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\nexport class NoteHead extends Note {\n  static get CATEGORY() { return 'notehead'; }\n\n  constructor(head_options) {\n    super(head_options);\n    this.setAttribute('type', 'NoteHead');\n\n    this.index = head_options.index;\n    this.x = head_options.x || 0;\n    this.y = head_options.y || 0;\n    this.note_type = head_options.note_type;\n    this.duration = head_options.duration;\n    this.displaced = head_options.displaced || false;\n    this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n    this.line = head_options.line;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyph = Flow.durationToGlyph(this.duration, this.note_type);\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `No glyph found for duration '${this.duration}' and type '${this.note_type}'`);\n    }\n\n    this.glyph_code = this.glyph.code_head;\n    this.x_shift = head_options.x_shift;\n    if (head_options.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = head_options.custom_glyph_code;\n    }\n\n    this.style = head_options.style;\n    this.slashed = head_options.slashed;\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads\n      glyph_font_scale: head_options.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: 3,\n    });\n\n    this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n  }\n\n  getCategory() { return NoteHead.CATEGORY; }\n\n  // Get the width of the notehead\n  getWidth() { return this.width; }\n\n  // Determine if the notehead is displaced\n  isDisplaced() { return this.displaced === true; }\n\n  // Get the glyph data\n  getGlyph() { return this.glyph; }\n\n  // Set the X coordinate\n  setX(x) { this.x = x; return this; }\n\n  // get/set the Y coordinate\n  getY() { return this.y; }\n  setY(y) { this.y = y;  return this; }\n\n  // Get/set the stave line the notehead is placed on\n  getLine() { return this.line; }\n  setLine(line) { this.line = line; return this; }\n\n  // Get the canvas `x` coordinate position of the notehead.\n  getAbsoluteX() {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = (Stem.WIDTH / 2);\n\n    return x + (this.displaced\n      ? (this.width - displacementStemAdjustment) * this.stem_direction\n      : 0\n    );\n  }\n\n  // Get the `BoundingBox` for the `NoteHead`\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const spacing = this.stave.getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  // Set notehead to a provided `stave`\n  setStave(stave) {\n    const line = this.getLine();\n\n    this.stave = stave;\n    this.setY(stave.getYForNote(line));\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.extraLeftPx + this.extraRightPx;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Draw the notehead\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const head_x = this.getAbsoluteX();\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n\n    if (this.style) {\n      this.applyStyle(ctx);\n    }\n\n    if (this.note_type === 's') {\n      const staveSpace = this.stave.getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n    }\n\n    if (this.style) {\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Stem } from './stem';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\n\nexport class StemmableNote extends Note {\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'StemmableNote');\n\n    this.stem = null;\n    this.stemExtensionOverride = null;\n    this.beam = null;\n  }\n\n  // Get and set the note's `Stem`\n  getStem() { return this.stem; }\n  setStem(stem) { this.stem = stem; return this; }\n\n  // Builds and sets a new stem\n  buildStem() {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag() {\n    const { glyph, beam } = this;\n    const shouldRenderFlag = beam === null;\n\n    if (glyph && glyph.flag && shouldRenderFlag) {\n      const flagCode = this.getStemDirection() === Stem.DOWN\n        ? glyph.code_flag_downstem\n        : glyph.code_flag_upstem;\n\n      this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale);\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength() {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount() {\n    const glyph = this.getGlyph();\n\n    if (glyph) {\n      return glyph.beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinumumLength() {\n    const frac = Flow.durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == null) length = 35;\n        break;\n      case '16':\n        length = this.beam == null ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == null ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == null ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == null ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection() { return this.stem_direction; }\n  setStemDirection(direction) {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new Vex.RERR('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n    }\n\n    this.reset();\n    if (this.flag) {\n      this.buildFlag();\n    }\n\n    this.beam = null;\n    if (this.preFormatted) {\n      this.preFormat();\n    }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX() {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n    const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n    return stem_x;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX() {\n    return this.getAbsoluteX() + this.x_shift + (this.getGlyphWidth() / 2);\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stemExtensionOverride != null) {\n      return this.stemExtensionOverride;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.stem_up_extension\n        : glyph.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height) {\n    this.stemExtensionOverride = (height - Stem.HEIGHT);\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Sets the current note's beam\n  setBeam(beam) { this.beam = beam; return this; }\n\n  // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.min(\n        this.stave.getYForTopText(textLine),\n        extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n      );\n    } else {\n      return this.stave.getYForTopText(textLine);\n    }\n  }\n\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.max(\n        this.stave.getYForTopText(textLine),\n        extents.baseY + (this.render_options.annotation_spacing * (textLine))\n      );\n    } else {\n      return this.stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag() {\n    return Flow.durationToGlyph(this.duration).flag && !this.beam;\n  }\n\n  // Post format the note\n  postFormat() {\n    if (this.beam) this.beam.postFormat();\n\n    this.postFormatted = true;\n\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stem_struct) {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stem_struct));\n    this.stem.setContext(this.context).draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `Modifier` is an abstract interface for notational elements that modify\n// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n//\n// For a `Modifier` instance to be positioned correctly, it must be part of\n// a `ModifierContext`. All modifiers in the same context are rendered relative to\n// one another.\n//\n// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) Vex.L('Vex.Flow.Modifier', args); }\n\nexport class Modifier extends Element {\n  static get CATEGORY() { return 'none'; }\n\n  // Modifiers can be positioned almost anywhere, relative to a note.\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      above: Modifier.Position.ABOVE,\n      below: Modifier.Position.BELOW,\n      left: Modifier.Position.LEFT,\n      right: Modifier.Position.RIGHT,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Modifier');\n\n    this.width = 0;\n\n    // Modifiers are attached to a note and an index. An index is a\n    // specific head in a chord.\n    this.note = null;\n    this.index = null;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.modifier_context = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  // Every modifier has a category. The `ModifierContext` uses this to determine\n  // the type and order of the modifiers.\n  getCategory() { return Modifier.CATEGORY; }\n\n  // Get and set modifier widths.\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n\n  // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n\n  // Get and set note index, which is a specific note in a chord.\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  // Every modifier must be part of a `ModifierContext`.\n  getModifierContext() { return this.modifier_context; }\n  setModifierContext(c) { this.modifier_context = c; return this; }\n\n  // Get and set articulation position.\n  getPosition() { return this.position; }\n  setPosition(position) {\n    this.position = typeof(position) === 'string'\n      ? Modifier.PositionString[position]\n      : position;\n    return this;\n  }\n\n  // Set the `text_line` for the modifier.\n  setTextLine(line) { this.text_line = line; return this; }\n\n  // Shift modifier down `y` pixels. Negative values shift up.\n  setYShift(y) { this.y_shift = y; return this; }\n\n  setSpacingFromNextModifier(x) {\n    this.spacingFromNextModifier = x;\n  }\n\n  getSpacingFromNextModifier() { return this.spacingFromNextModifier; }\n\n  // Shift modifier `x` pixels in the direction of the modifier. Negative values\n  // shift reverse.\n  setXShift(x) {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n  }\n  getXShift() { return this.x_shift; }\n\n  // Render the modifier onto the canvas.\n  draw() {\n    this.checkContext();\n    throw new Vex.RERR('MethodNotImplemented', 'draw() not implemented for this modifier.');\n  }\n\n  // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n  alignSubNotesWithNote(subNotes, note) {\n    // Shift over the tick contexts of each note\n    const tickContext = note.getTickContext();\n    const extraPx = tickContext.getExtraPx();\n    const subNoteXOffset = tickContext.getX() - extraPx.left - extraPx.extraLeft\n      + this.getSpacingFromNextModifier();\n\n    subNotes.forEach((subNote) => {\n      const subTickContext = subNote.getTickContext();\n      subNote.setStave(note.stave);\n      subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n    });\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\n\nexport class Dot extends Modifier {\n  static get CATEGORY() { return 'dots'; }\n\n  // Arrange dots inside a ModifierContext.\n  static format(dots, state) {\n    const right_shift = state.right_shift;\n    const dot_spacing = 1;\n\n    if (!dots || dots.length === 0) return false;\n\n    const dot_list = [];\n    const max_shift_map = {};\n    for (let i = 0; i < dots.length; ++i) {\n      const dot = dots[i];\n      const note = dot.getNote();\n\n      let props;\n      let shift;\n      // Only StaveNote has .getKeyProps()\n      if (typeof note.getKeyProps === 'function') {\n        props = note.getKeyProps()[dot.getIndex()];\n        shift = (props.displaced ? note.getExtraRightPx() : 0);\n      } else { // Else it's a TabNote\n        props = { line: 0.5 }; // Shim key props for dot placement\n        shift = 0;\n      }\n\n      const note_id = note.getAttribute('id');\n      dot_list.push({ line: props.line, note, note_id, dot });\n      max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n    }\n\n    // Sort dots by line number.\n    dot_list.sort((a, b) => b.line - a.line);\n\n    let dot_shift = right_shift;\n    let x_width = 0;\n    let last_line = null;\n    let last_note = null;\n    let prev_dotted_space = null;\n    let half_shiftY = 0;\n\n    for (let i = 0; i < dot_list.length; ++i) {\n      const { dot, note, note_id, line } = dot_list[i];\n\n      // Reset the position of the dot every line.\n      if (line !== last_line || note !== last_note) {\n        dot_shift = max_shift_map[note_id];\n      }\n\n      if (!note.isRest() && line !== last_line) {\n        if (Math.abs(line % 1) === 0.5) {\n          // note is on a space, so no dot shift\n          half_shiftY = 0;\n        } else {\n          // note is on a line, so shift dot to space above the line\n          half_shiftY = 0.5;\n          if (last_note != null &&\n              !last_note.isRest() && last_line - line === 0.5) {\n            // previous note on a space, so shift dot to space below the line\n            half_shiftY = -0.5;\n          } else if (line + half_shiftY === prev_dotted_space) {\n            // previous space is dotted, so shift dot to space below the line\n            half_shiftY = -0.5;\n          }\n        }\n      }\n\n      // convert half_shiftY to a multiplier for dots.draw()\n      if (note.isRest()) {\n        dot.dot_shiftY += -half_shiftY;\n      } else {\n        dot.dot_shiftY = -half_shiftY;\n      }\n      prev_dotted_space = line + half_shiftY;\n\n      dot.setXShift(dot_shift);\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\n      x_width = (dot_shift > x_width) ? dot_shift : x_width;\n      last_line = line;\n      last_note = note;\n    }\n\n    // Update state.\n    state.right_shift += x_width;\n    return true;\n  }\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.setAttribute('type', 'Dot');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.RIGHT;\n\n    this.radius = 2;\n    this.setWidth(5);\n    this.dot_shiftY = 0;\n  }\n\n  getCategory() { return Dot.CATEGORY; }\n\n  setNote(note) {\n    this.note = note;\n\n    if (this.note.getCategory() === 'gracenotes') {\n      this.radius *= 0.50;\n      this.setWidth(3);\n    }\n  }\n\n  setDotShiftY(y) { this.dot_shiftY = y; return this; }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.note || this.index === null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\n    }\n\n    const lineSpace = this.note.stave.options.spacing_between_lines_px;\n\n    const start = this.note.getModifierStartXY(this.position, this.index,\n      { forceFlagRight: true });\n\n    // Set the starting y coordinate to the base of the stem for TabNotes\n    if (this.note.getCategory() === 'tabnotes') {\n      start.y = this.note.getStemExtents().baseY;\n    }\n\n    const x = (start.x + this.x_shift) + this.width - this.radius;\n    const y = start.y + this.y_shift + (this.dot_shiftY * lineSpace);\n    const ctx = this.context;\n\n    ctx.beginPath();\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n    ctx.fill();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { BoundingBox } from './boundingbox';\nimport { Stem } from './stem';\nimport { NoteHead } from './notehead';\nimport { StemmableNote } from './stemmablenote';\nimport { Modifier } from './modifier';\nimport { Dot } from './dot';\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\nfunction L(...args) { if (StaveNote.DEBUG) Vex.L('Vex.Flow.StaveNote', args); }\n\nconst getStemAdjustment = (note) => Stem.WIDTH / (2 * -note.getStemDirection());\n\nconst isInnerNoteIndex = (note, index) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n  const delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + (delta));\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n  const delta = rest.line - Vex.MidLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static get CATEGORY() { return 'stavenotes'; }\n  static get STEM_UP() { return Stem.UP; }\n  static get STEM_DOWN() { return Stem.DOWN; }\n  static get DEFAULT_LEDGER_LINE_OFFSET() { return 3; }\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  static format(notes, state) {\n    if (!notes || notes.length < 2) return false;\n\n    // FIXME: VexFlow will soon require that a stave be set before formatting.\n    // Which, according to the below condition, means that following branch will\n    // always be taken and the rest of this function is dead code.\n    //\n    // Problematically, `Formatter#formatByY` was not designed to work for more\n    // than 2 voices (although, doesn't throw on this condition, just tries\n    // to power through).\n    //\n    // Based on the above:\n    //   * 2 voices can be formatted *with or without* a stave being set but\n    //     the output will be different\n    //   * 3 voices can only be formatted *without* a stave\n    if (notes[0].getStave()) {\n      return StaveNote.formatByY(notes, state);\n    }\n\n    const notesList = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      const props = notes[i].getKeyProps();\n      const line = props[0].line;\n      let minL = props[props.length - 1].line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinumumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyph.line_above;\n        minL = line - notes[i].glyph.line_below;\n      } else {\n        maxL = stemDirection === 1\n          ? props[props.length - 1].line + stemMax\n          : props[props.length - 1].line;\n\n        minL = stemDirection === 1\n          ? props[0].line\n          : props[0].line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    const voices = notesList.length;\n\n    let noteU = notesList[0];\n    const noteM = voices > 2 ? notesList[1] : null;\n    let noteL = voices > 2 ? notesList[2] : notesList[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n    let stemDelta;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stemDirection === noteL.stemDirection &&\n        noteU.minLine <= noteL.maxLine) {\n        if (!noteU.isrest) {\n          stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n          stemDelta = Math.max(stemDelta, noteU.stemMin);\n          noteU.minLine = noteU.line - stemDelta;\n          noteU.note.setStemLength(stemDelta * 10);\n        }\n      }\n      if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          xShift = voiceXShift;\n          if (noteU.stemDirection === noteL.stemDirection) {\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(xShift + 3);\n          } else {\n            // shift lower voice right\n            noteL.note.setXShift(xShift);\n          }\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n      if (!noteM.isrest) {\n        stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n        stemDelta = Math.max(stemDelta, noteM.stemMin);\n        noteM.minLine = noteM.line - stemDelta;\n        noteM.note.setStemLength(stemDelta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n          // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 3;    // shift middle rest right\n          noteM.note.setXShift(xShift);\n        }\n        // format complete\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n\n    // If middle voice intersects upper or lower voice\n    if ((!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n      (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)) {\n      xShift = voiceXShift + 3;      // shift middle note right\n      noteM.note.setXShift(xShift);\n    }\n\n    return true;\n  }\n\n  static formatByY(notes, state) {\n    // NOTE: this function does not support more than two voices per stave\n    // use with care.\n    let hasStave = true;\n\n    for (let i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != null;\n    }\n\n    if (!hasStave) {\n      throw new Vex.RERR(\n        'Stave Missing',\n        'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!'\n      );\n    }\n\n    let xShift = 0;\n\n    for (let i = 0; i < notes.length - 1; i++) {\n      let topNote = notes[i];\n      let bottomNote = notes[i + 1];\n\n      if (topNote.getStemDirection() === Stem.DOWN) {\n        topNote = notes[i + 1];\n        bottomNote = notes[i];\n      }\n\n      const topKeys = topNote.getKeyProps();\n      const bottomKeys = bottomNote.getKeyProps();\n\n      const HALF_NOTEHEAD_HEIGHT = 0.5;\n\n      // `keyProps` and `stave.getYForLine` have different notions of a `line`\n      // so we have to convert the keyProps value by subtracting 5.\n      // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n      //\n      // We also extend the y for each note by a half notehead because the\n      // notehead's origin is centered\n      const topNotBottomY = topNote\n        .getStave()\n        .getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\n      const bottomNoteTopY = bottomNote\n        .getStave()\n        .getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\n      const areNotesColliding = bottomNoteTopY - topNotBottomY < 0;\n\n      if (areNotesColliding) {\n        xShift = topNote.getVoiceShiftWidth() + 2;\n        bottomNote.setXShift(xShift);\n      }\n    }\n\n    state.right_shift += xShift;\n  }\n\n  static postFormat(notes) {\n    if (!notes) return false;\n\n    notes.forEach(note => note.postFormat());\n\n    return true;\n  }\n\n  constructor(noteStruct) {\n    super(noteStruct);\n    this.setAttribute('type', 'StaveNote');\n\n    this.keys = noteStruct.keys;\n    this.clef = noteStruct.clef;\n    this.octave_shift = noteStruct.octave_shift;\n    this.beam = null;\n\n    // Pull note rendering properties\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // per-pitch properties\n    this.keyProps = [];\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this.note_heads = [];\n    this.modifiers = [];\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: noteStruct.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET,\n    });\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction);\n    }\n    this.reset();\n    this.buildFlag();\n  }\n\n  reset() {\n    super.reset();\n\n    // Save prior noteHead styles & reapply them after making new noteheads.\n    const noteHeadStyles = this.note_heads.map(noteHead => noteHead.getStyle());\n    this.buildNoteHeads();\n    this.note_heads.forEach((noteHead, index) => noteHead.setStyle(noteHeadStyles[index]));\n\n    if (this.stave) {\n      this.note_heads.forEach(head => head.setStave(this.stave));\n    }\n    this.calcExtraPx();\n  }\n\n  setBeam(beam) {\n    this.beam = beam;\n    this.calcExtraPx();\n    return this;\n  }\n\n  getCategory() { return StaveNote.CATEGORY; }\n\n  // Builds a `Stem` for the note\n  buildStem() {\n    const glyph = this.getGlyph();\n\n    this.setStem(new Stem({\n      stem_up_y_offset: glyph.stem_up_y_offset,\n      stem_down_y_offset: glyph.stem_down_y_offset,\n      hide: !!this.isRest(),\n    }));\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads() {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = null;\n    let lineDiff = null;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start;\n    let end;\n    let step;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else if (stemDirection === Stem.DOWN) {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        line: noteProps.line,\n      });\n\n      this.note_heads[i] = notehead;\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem() {\n    // Figure out optimal stem direction based on given notes\n    this.minLine = this.keyProps[0].line;\n    this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n    const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n    this.setStemDirection(stemDirection);\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps() {\n    let lastLine = null;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if (this.glyph.rest) this.glyph.position = key;\n\n      const options = { octave_shift: this.octave_shift || 0 };\n      const props = Flow.keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new Vex.RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n\n    // Sort the notes from lowest line to highest line\n    lastLine = -Infinity;\n    this.keyProps.forEach(key => {\n      if (key.line < lastLine) {\n        Vex.W(\n          'Unsorted keys in note will be sorted. ' +\n          'See https://github.com/0xfe/vexflow/issues/104 for details.'\n        );\n      }\n      lastLine = key.line;\n    });\n    this.keyProps.sort((a, b) => a.line - b.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const { width: w, modLeftPx, extraLeftPx } = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - extraLeftPx;\n\n    let minY = 0;\n    let maxY = 0;\n    const halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = Flow.durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - (this.glyph.line_above * lineSpacing);\n        maxY = y + (this.glyph.line_below * lineSpacing);\n      }\n    } else if (this.glyph.stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.stem_direction;\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = null;\n      maxY = null;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the top or bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note\n  getLineNumber(isTopNote) {\n    if (!this.keyProps.length) {\n      throw new Vex.RERR(\n        'NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\"\n      );\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  // Determine if current note is a rest\n  isRest() { return this.glyph.rest; }\n\n  // Determine if the current note is a chord\n  isChord() { return !this.isRest() && this.keys.length > 1; }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem() { return this.glyph.stem; }\n\n  hasFlag() {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX() {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + getStemAdjustment(this);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.stave.getYForTopText(textLine),\n      extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n    );\n  }\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.stave.getYForTopText(textLine),\n      extents.baseY + (this.render_options.annotation_spacing * (textLine))\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave) {\n    super.setStave(stave);\n\n    const ys = this.note_heads.map(notehead => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Get the pitches in the note\n  getKeys() { return this.keys; }\n\n  // Get the properties for all the keys in the note\n  getKeyProps() {\n    return this.keyProps;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced() {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced) {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.extraRightPx;\n    if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.extraLeftPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest() {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = Vex.MidLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(position, index, options) {\n    options = options || {};\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // extra_left_px\n      // FIXME: What are these magic numbers?\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // extra_right_px\n      // FIXME: What is this magical +2?\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (this.stem_direction === Stem.UP && this.hasFlag() &&\n        (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n        x += this.flag.getMetrics().width;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style) {\n    super.setStyle(style);\n    this.note_heads.forEach(notehead => notehead.setStyle(style));\n    this.stem.setStyle(style);\n  }\n\n  setStemStyle(style) {\n    const stem = this.getStem();\n    stem.setStyle(style);\n  }\n  getStemStyle() { return this.stem.getStyle(); }\n\n  setLedgerLineStyle(style) { this.ledgerLineStyle = style; }\n  getLedgerLineStyle() { return this.ledgerLineStyle; }\n\n  setFlagStyle(style) { this.flagStyle = style; }\n  getFlagStyle() { return this.flagStyle; }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index, style) {\n    this.note_heads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index, line) {\n    this.keyProps[index].line = line;\n    this.reset();\n    return this;\n  }\n\n  getKeyLine(index) {\n    return this.keyProps[index].line;\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext) {\n    this.setModifierContext(mContext);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Generic function to add modifiers to a note\n  //\n  // Parameters:\n  // * `index`: The index of the key that we're modifying\n  // * `modifier`: The modifier to add\n  addModifier(index, modifier) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Helper function to add an accidental to a key\n  addAccidental(index, accidental) {\n    return this.addModifier(index, accidental);\n  }\n\n  // Helper function to add an articulation to a key\n  addArticulation(index, articulation) {\n    return this.addModifier(index, articulation);\n  }\n\n  // Helper function to add an annotation to a key\n  addAnnotation(index, annotation) {\n    return this.addModifier(index, annotation);\n  }\n\n  // Helper function to add a dot on a specific key\n  addDot(index) {\n    const dot = new Dot();\n    dot.setDotShiftY(this.glyph.dot_shiftY);\n    this.dots++;\n    return this.addModifier(index, dot);\n  }\n\n  // Convenience method to add dot to all keys in note\n  addDotToAll() {\n    for (let i = 0; i < this.keys.length; ++i) {\n      this.addDot(i);\n    }\n    return this;\n  }\n\n  // Get all accidentals in the `ModifierContext`\n  getAccidentals() {\n    return this.modifierContext.getModifiers('accidentals');\n  }\n\n  // Get all dots in the `ModifierContext`\n  getDots() {\n    return this.modifierContext.getModifiers('dots');\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth() {\n    // TODO: may need to accomodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcExtraPx() {\n    this.setExtraLeftPx(\n      this.displaced && this.stem_direction === Stem.DOWN\n        ? this.getGlyphWidth()\n        : 0\n    );\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setExtraRightPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP\n        ? this.getGlyphWidth()\n        : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n\n    let width = this.getGlyphWidth() + this.extraLeftPx + this.extraRightPx;\n\n    // For upward flagged notes, the width of the flag needs to be added\n    if (this.glyph.flag && this.beam === null && this.stem_direction === Stem.UP) {\n      width += this.getGlyphWidth();\n    }\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n  }\n\n  /**\n   * @typedef {Object} noteHeadBounds\n   * @property {number} y_top the highest notehead bound\n   * @property {number} y_bottom the lowest notehead bound\n   * @property {number|Null} displaced_x the starting x for displaced noteheads\n   * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n   * @property {number} highest_line the highest notehead line in traditional music line\n   *  numbering (bottom line = 1, top line = 5)\n   * @property {number} lowest_line the lowest notehead line\n   * @property {number|false} highest_displaced_line the highest staff line number\n   *   for a displaced notehead\n   * @property {number|false} lowest_displaced_line\n   * @property {number} highest_non_displaced_line\n   * @property {number} lowest_non_displaced_line\n   */\n\n  /**\n   * Get the staff line and y value for the highest & lowest noteheads\n   * @returns {noteHeadBounds}\n   */\n  getNoteHeadBounds() {\n    // Top and bottom Y values for stem.\n    let yTop = null;\n    let yBottom = null;\n    let nonDisplacedX = null;\n    let displacedX = null;\n\n    let highestLine = this.stave.getNumLines();\n    let lowestLine = 1;\n    let highestDisplacedLine = false;\n    let lowestDisplacedLine = false;\n    let highestNonDisplacedLine = highestLine;\n    let lowestNonDisplacedLine = lowestLine;\n\n    this.note_heads.forEach(notehead => {\n      const line = notehead.getLine();\n      const y = notehead.getY();\n\n      if (yTop === null || y < yTop) {\n        yTop = y;\n      }\n\n      if (yBottom === null || y > yBottom) {\n        yBottom = y;\n      }\n\n      if (displacedX === null && notehead.isDisplaced()) {\n        displacedX = notehead.getAbsoluteX();\n      }\n\n      if (nonDisplacedX === null && !notehead.isDisplaced()) {\n        nonDisplacedX = notehead.getAbsoluteX();\n      }\n\n      highestLine = line > highestLine ? line : highestLine;\n      lowestLine = line < lowestLine ? line : lowestLine;\n\n      if (notehead.isDisplaced()) {\n        highestDisplacedLine = (highestDisplacedLine === false) ?\n          line : Math.max(line, highestDisplacedLine);\n        lowestDisplacedLine = (lowestDisplacedLine === false) ?\n          line : Math.min(line, lowestDisplacedLine);\n      } else {\n        highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n        lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n      }\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      displaced_x: displacedX,\n      non_displaced_x: nonDisplacedX,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n      highest_displaced_line: highestDisplacedLine,\n      lowest_displaced_line: lowestDisplacedLine,\n      highest_non_displaced_line: highestNonDisplacedLine,\n      lowest_non_displaced_line: lowestNonDisplacedLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX() {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX() {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines() {\n    const {\n      stave, glyph,\n      render_options: { stroke_px },\n      context: ctx,\n    } = this;\n\n    const width = glyph.getWidth() + (stroke_px * 2);\n    const doubleWidth = 2 * (glyph.getWidth() + stroke_px) - (Stem.WIDTH / 2);\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const {\n      highest_line,\n      lowest_line,\n      highest_displaced_line,\n      highest_non_displaced_line,\n      lowest_displaced_line,\n      lowest_non_displaced_line,\n      displaced_x,\n      non_displaced_x,\n    } = this.getNoteHeadBounds();\n\n    const min_x = Math.min(displaced_x, non_displaced_x);\n\n    const drawLedgerLine = (y, normal, displaced) => {\n      let x;\n      if (displaced && normal) x = min_x - stroke_px;\n      else if (normal) x = non_displaced_x - stroke_px;\n      else x = displaced_x - stroke_px;\n      const ledgerWidth = (normal && displaced) ? doubleWidth : width;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + ledgerWidth, y);\n      ctx.stroke();\n    };\n\n    const style = Object.assign({}, stave.getStyle() || {}, this.getLedgerLineStyle() || {});\n    this.applyStyle(ctx, style);\n\n    // Draw ledger lines below the staff:\n    for (let line = 6; line <= highest_line; ++line) {\n      const normal = (non_displaced_x !== null) && (line <= highest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line <= highest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    // Draw ledger lines above the staff:\n    for (let line = 0; line >= lowest_line; --line) {\n      const normal = (non_displaced_x !== null) && (line >= lowest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line >= lowest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    this.restoreStyle(ctx, style);\n  }\n\n  // Draw all key modifiers\n  drawModifiers() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const ctx = this.context;\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const notehead = this.note_heads[modifier.getIndex()];\n      const noteheadStyle = notehead.getStyle();\n      notehead.applyStyle(ctx, noteheadStyle);\n      modifier.setContext(ctx);\n      modifier.drawWithStyle();\n      notehead.restoreStyle(ctx, noteheadStyle);\n    }\n    ctx.closeGroup();\n  }\n\n  // Draw the flag for the note\n  drawFlag() {\n    const { stem, beam, context: ctx } = this;\n\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const shouldRenderFlag = beam === null;\n    const glyph = this.getGlyph();\n\n    if (glyph.flag && shouldRenderFlag) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      const noteStemHeight = stem.getHeight();\n      const flagX = this.getStemX();\n      // FIXME: What's with the magic +/- 2\n      const flagY = this.getStemDirection() === Stem.DOWN\n        // Down stems have flags on the left\n        ? y_top - noteStemHeight + 2\n        // Up stems have flags on the eft.\n        : y_bottom - noteStemHeight - 2;\n\n      // Draw the Flag\n      ctx.openGroup('flag', null, { pointerBBox: true });\n      this.applyStyle(ctx, this.getFlagStyle() || false);\n      this.flag.render(ctx, flagX, flagY);\n      this.restoreStyle(ctx, this.getFlagStyle() || false);\n      ctx.closeGroup();\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads() {\n    this.note_heads.forEach(notehead => {\n      this.context.openGroup('notehead', null, { pointerBBox: true });\n      notehead.setContext(this.context).draw();\n      this.context.closeGroup();\n    });\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stemStruct) {\n    // GCR TODO: I can't find any context in which this is called with the stemStruct\n    // argument in the codebase or tests. Nor can I find a case where super.drawStem\n    // is called at all. Perhaps these should be removed?\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (stemStruct) {\n      this.setStem(new Stem(stemStruct));\n    }\n\n    this.context.openGroup('stem', null, { pointerBBox: true });\n    this.stem.setContext(this.context).draw();\n    this.context.closeGroup();\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this.note_heads.forEach(notehead => notehead.setX(xBegin));\n\n    // Format stem x positions\n    const stemX = this.getStemX();\n    this.stem.setNoteHeadXBounds(stemX, stemX);\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Draw each part of the note\n    this.drawLedgerLines();\n\n    // Apply the overall style -- may be contradicted by local settings:\n    this.applyStyle();\n    this.setAttribute('el', this.context.openGroup('stavenote', this.getAttribute('id')));\n    this.context.openGroup('note', null, { pointerBBox: true });\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    this.context.closeGroup();\n    this.drawModifiers();\n    this.context.closeGroup();\n    this.restoreStyle();\n    this.setRendered();\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\n\n/**\n * @constructor\n */\nexport class FretHandFinger extends Modifier {\n  static get CATEGORY() { return 'frethandfinger'; }\n\n  // Arrange fingerings inside a ModifierContext.\n  static format(nums, state) {\n    const { left_shift, right_shift } = state;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return false;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shiftLeft = 0;\n    let shiftRight = 0;\n\n    for (let i = 0; i < nums.length; ++i) {\n      const num = nums[i];\n      const note = num.getNote();\n      const pos = num.getPosition();\n      const props = note.getKeyProps()[num.getIndex()];\n      if (note !== prev_note) {\n        for (let n = 0; n < note.keys.length; ++n) {\n          const props_tmp = note.getKeyProps()[n];\n          if (left_shift === 0) {\n            shiftLeft = props_tmp.displaced ? note.getExtraLeftPx() : shiftLeft;\n          }\n          if (right_shift === 0) {\n            shiftRight = props_tmp.displaced ? note.getExtraRightPx() : shiftRight;\n          }\n        }\n        prev_note = note;\n      }\n\n      nums_list.push({\n        note,\n        num,\n        pos,\n        line: props.line,\n        shiftL: shiftLeft,\n        shiftR: shiftRight,\n      });\n    }\n\n    // Sort fingernumbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    let numShiftL = 0;\n    let numShiftR = 0;\n    let xWidthL = 0;\n    let xWidthR = 0;\n    let lastLine = null;\n    let lastNote = null;\n\n    for (let i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n\n      // Reset the position of the string number every line.\n      if (line !== lastLine || note !== lastNote) {\n        numShiftL = left_shift + shiftL;\n        numShiftR = right_shift + shiftR;\n      }\n\n      const numWidth = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift + numShiftL);\n        num_shift = left_shift + numWidth; // spacing\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(numShiftR);\n        num_shift = shiftRight + numWidth; // spacing\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n      }\n      lastLine = line;\n      lastNote = note;\n    }\n\n    state.left_shift += xWidthL;\n    state.right_shift += xWidthR;\n\n    return true;\n  }\n\n  constructor(number) {\n    super();\n    this.setAttribute('type', 'FretHandFinger');\n\n    this.note = null;\n    this.index = null;\n    this.finger = number;\n    this.width = 7;\n    this.position = Modifier.Position.LEFT;  // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0;       // Horizontal offset from default\n    this.y_offset = 0;       // Vertical offset from default\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n  getCategory() { return FretHandFinger.CATEGORY; }\n  setFretHandFinger(number) { this.finger = number; return this; }\n  setOffsetX(x) { this.x_offset = x; return this; }\n  setOffsetY(y) { this.y_offset = y; return this; }\n\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let dot_x = start.x + this.x_shift + this.x_offset;\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n        dot_x -= 4;\n        dot_y -= 12;\n        break;\n      case Modifier.Position.BELOW:\n        dot_x -= 2;\n        dot_y += 10;\n        break;\n      case Modifier.Position.LEFT:\n        dot_x -= this.width;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += 1;\n        break;\n      default:\n        throw new Vex.RERR('InvalidPostion', `The position ${this.position} does not exist`);\n    }\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    ctx.fillText('' + this.finger, dot_x, dot_y);\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements some standard music theory routines.\n\nimport { Vex } from './vex';\n\nexport class Music {\n  static get NUM_TONES() {\n    return 12;\n  }\n\n  static get roots() {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  static get root_values() {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  static get root_indices() {\n    return {\n      'c': 0,\n      'd': 1,\n      'e': 2,\n      'f': 3,\n      'g': 4,\n      'a': 5,\n      'b': 6,\n    };\n  }\n\n  static get canonical_notes() {\n    return [\n      'c', 'c#', 'd', 'd#',\n      'e', 'f', 'f#', 'g',\n      'g#', 'a', 'a#', 'b',\n    ];\n  }\n\n  static get diatonic_intervals() {\n    return [\n      'unison', 'm2', 'M2', 'm3', 'M3',\n      'p4', 'dim5', 'p5', 'm6', 'M6',\n      'b7', 'M7', 'octave',\n    ];\n  }\n\n  static get diatonic_accidentals() {\n    return {\n      'unison': { note: 0, accidental: 0 },\n      'm2': { note: 1, accidental: -1 },\n      'M2': { note: 1, accidental: 0 },\n      'm3': { note: 2, accidental: -1 },\n      'M3': { note: 2, accidental: 0 },\n      'p4': { note: 3, accidental: 0 },\n      'dim5': { note: 4, accidental: -1 },\n      'p5': { note: 4, accidental: 0 },\n      'm6': { note: 5, accidental: -1 },\n      'M6': { note: 5, accidental: 0 },\n      'b7': { note: 6, accidental: -1 },\n      'M7': { note: 6, accidental: 0 },\n      'octave': { note: 7, accidental: 0 },\n    };\n  }\n\n  static get intervals() {\n    return {\n      'u': 0, 'unison': 0,\n      'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n      '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n      'm3': 3, 'b3': 3, 'min3': 3,\n      'M3': 4, '3': 4, 'maj3': 4,\n      '4': 5, 'p4': 5,\n      '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n      '5': 7, 'p5': 7,\n      '#5': 8, 'b6': 8, 'aug5': 8,\n      '6': 9, 'M6': 9, 'maj6': 9,\n      'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n      'M7': 11, 'maj7': 11,\n      '8': 12, 'octave': 12,\n    };\n  }\n\n  static get scales() {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n    };\n  }\n\n  static get scaleTypes() {\n    return {\n      'M': Music.scales.major,\n      'm': Music.scales.minor,\n    };\n  }\n\n  static get accidentals() {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  static get noteValues() {\n    return {\n      'c': { root_index: 0, int_val: 0 },\n      'cn': { root_index: 0, int_val: 0 },\n      'c#': { root_index: 0, int_val: 1 },\n      'c##': { root_index: 0, int_val: 2 },\n      'cb': { root_index: 0, int_val: 11 },\n      'cbb': { root_index: 0, int_val: 10 },\n      'd': { root_index: 1, int_val: 2 },\n      'dn': { root_index: 1, int_val: 2 },\n      'd#': { root_index: 1, int_val: 3 },\n      'd##': { root_index: 1, int_val: 4 },\n      'db': { root_index: 1, int_val: 1 },\n      'dbb': { root_index: 1, int_val: 0 },\n      'e': { root_index: 2, int_val: 4 },\n      'en': { root_index: 2, int_val: 4 },\n      'e#': { root_index: 2, int_val: 5 },\n      'e##': { root_index: 2, int_val: 6 },\n      'eb': { root_index: 2, int_val: 3 },\n      'ebb': { root_index: 2, int_val: 2 },\n      'f': { root_index: 3, int_val: 5 },\n      'fn': { root_index: 3, int_val: 5 },\n      'f#': { root_index: 3, int_val: 6 },\n      'f##': { root_index: 3, int_val: 7 },\n      'fb': { root_index: 3, int_val: 4 },\n      'fbb': { root_index: 3, int_val: 3 },\n      'g': { root_index: 4, int_val: 7 },\n      'gn': { root_index: 4, int_val: 7 },\n      'g#': { root_index: 4, int_val: 8 },\n      'g##': { root_index: 4, int_val: 9 },\n      'gb': { root_index: 4, int_val: 6 },\n      'gbb': { root_index: 4, int_val: 5 },\n      'a': { root_index: 5, int_val: 9 },\n      'an': { root_index: 5, int_val: 9 },\n      'a#': { root_index: 5, int_val: 10 },\n      'a##': { root_index: 5, int_val: 11 },\n      'ab': { root_index: 5, int_val: 8 },\n      'abb': { root_index: 5, int_val: 7 },\n      'b': { root_index: 6, int_val: 11 },\n      'bn': { root_index: 6, int_val: 11 },\n      'b#': { root_index: 6, int_val: 0 },\n      'b##': { root_index: 6, int_val: 1 },\n      'bb': { root_index: 6, int_val: 10 },\n      'bbb': { root_index: 6, int_val: 9 },\n    };\n  }\n\n  isValidNoteValue(note) {\n    if (note == null || note < 0 || note >= Music.NUM_TONES) {\n      return false;\n    }\n    return true;\n  }\n\n  isValidIntervalValue(interval) {\n    return this.isValidNoteValue(interval);\n  }\n\n  getNoteParts(noteString) {\n    if (!noteString || noteString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  getKeyParts(keyString) {\n    if (!keyString || keyString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  getNoteValue(noteString) {\n    const value = Music.noteValues[noteString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid note name: ${noteString}`);\n    }\n\n    return value.int_val;\n  }\n\n  getIntervalValue(intervalString) {\n    const value = Music.intervals[intervalString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid interval name: ${intervalString}`);\n    }\n\n    return value;\n  }\n\n  getCanonicalNoteName(noteValue) {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n\n    return Music.canonical_notes[noteValue];\n  }\n\n  getCanonicalIntervalName(intervalValue) {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /* Given a note, interval, and interval direction, product the\n   * relative note.\n   */\n  getRelativeNoteValue(noteValue, intervalValue, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + (direction * intervalValue)) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  getRelativeNoteName(root, noteValue) {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = (((noteValue + 1) + (rootValue + 1)) %\n        Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /* Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key, intervals) {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i += 1) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /* Returns the interval of a note, given a diatonic scale.\n   *\n   * E.g., Given the scale C, and the note E, returns M3\n   */\n  getIntervalBetween(note1, note2, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new Vex.RERR('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1\n      ? note2 - note1\n      : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  // Create a scale map that represents the pitch state for a\n  // `keySignature`. For example, passing a `G` to `keySignature` would\n  // return a scale map with every note naturalized except for `F` which\n  // has an `F#` state.\n  createScaleMap(keySignature) {\n    const keySigParts = this.getKeyParts(keySignature);\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new Vex.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {};\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n//\n// ## Description\n//\n// This file implements accidentals as modifiers that can be attached to\n// notes. Support is included for both western and microtonal accidentals.\n//\n// See `tests/accidental_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Flow } from './tables';\nimport { Music } from './music';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\nfunction L(...args) { if (Accidental.DEBUG) Vex.L('Vex.Flow.Accidental', args); }\n\nconst getGlyphWidth = glyph => glyph.getMetrics().width;\n\n// An `Accidental` inherits from `Modifier`, and is formatted within a\n// `ModifierContext`.\nexport class Accidental extends Modifier {\n  static get CATEGORY() { return 'accidentals'; }\n\n  // Arrange accidentals inside a ModifierContext.\n  static format(accidentals, state) {\n    const noteheadAccidentalPadding = 1;\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = 3;\n\n    // If there are no accidentals, we needn't format their positions\n    if (!accidentals || accidentals.length === 0) return;\n\n    const accList = [];\n    let prevNote = null;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    let propsTemp;\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc = accidentals[i];\n      const note = acc.getNote();\n      const stave = note.getStave();\n      const props = note.getKeyProps()[acc.getIndex()];\n      if (note !== prevNote) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          propsTemp = note.getKeyProps()[n];\n          shiftL = propsTemp.displaced ? note.getExtraLeftPx() : shiftL;\n        }\n        prevNote = note;\n      }\n      if (stave !== null) {\n        const lineSpace = stave.options.spacing_between_lines_px;\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round(y / lineSpace * 2) / 2;\n        accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n      } else {\n        accList.push({ line: props.line, shift: shiftL, acc });\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = null;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === null || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n        });\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Vex.Flow.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n          // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index) => lineList[groupStart + index];\n      const getGroupLines = (indexes) => indexes.map(getGroupLine);\n      const lineDifference = (indexA, indexB) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map(item => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs) =>\n        indexPairs\n          .map(getGroupLines)\n          .every(lines => !this.checkCollision(...lines));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains more than seven members, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n\n        // Otherwise, if the group contains fewer than seven members, use the layouts from\n        // the accidentalsColumnsTable housed in tables.js.\n      } else {\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = Flow.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths = [];\n    const columnXOffsets = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach(line => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach(line => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = (columnXOffsets[line.column - 1] + lineWidth);\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift;\n  }\n\n  // Helper function to determine whether two lines of accidentals collide vertically\n  static checkCollision(line1, line2) {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) { // then line 2 is on top\n      clearanceRequired = (line2.flatLine || line2.dblSharpLine) ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else { // line 1 is on top\n      clearanceRequired = (line1.flatLine || line1.dblSharpLine) ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  // Use this method to automatically apply accidentals to a set of `voices`.\n  // The accidentals will be remembered between all the voices provided.\n  // Optionally, you can also provide an initial `keySignature`.\n  static applyAccidentals(voices, keySignature) {\n    const tickPositions = [];\n    const tickNoteMap = {};\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach(voice => {\n      const tickPosition = new Fraction(0, 1);\n      const notes = voice.getTickables();\n      notes.forEach(note => {\n        if (note.shouldIgnoreTicks()) return;\n\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch\n    const scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach(tick => {\n      const notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches = [];\n\n      const processNote = (note) => {\n        if (note.isRest() || note.shouldIgnoreTicks()) return;\n\n        // Go through each key and determine if an accidental should be\n        // applied\n        note.keys.forEach((keyString, keyIndex) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          const sameAccidental = scaleMap[key.root] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n          // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            note.addAccidental(keyIndex, accidental);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(pitch);\n          }\n        });\n\n        // process grace notes\n        note.getModifiers().forEach(modifier => {\n          if (modifier.getCategory() === 'gracenotegroups') {\n            modifier.getGraceNotes().forEach(processNote);\n          }\n        });\n      };\n\n      notes.forEach(processNote);\n    });\n  }\n\n  // Create accidental. `type` can be a value from the\n  // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n  // example: `#`, `##`, `b`, `n`, etc.\n  constructor(type = null) {\n    super();\n    this.setAttribute('type', 'Accidental');\n\n    L('New accidental: ', type);\n\n    this.note = null;\n    // The `index` points to a specific note in a chord.\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: 38,\n\n      // Length of stroke across heads above or below the stave.\n      stroke_px: 3,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = Flow.accidentalCodes(this.type);\n    if (!this.accidental) {\n      throw new Vex.RERR('ArgumentError', `Unknown accidental type: ${type}`);\n    }\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n    this.parenLeft = null;\n    this.parenRight = null;\n\n    this.reset();\n  }\n\n  reset() {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(Flow.accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(Flow.accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  getCategory() { return Accidental.CATEGORY; }\n\n  getWidth() {\n    const parenWidth = this.cautionary\n      ? (\n        getGlyphWidth(this.parenLeft) +\n        getGlyphWidth(this.parenRight) +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding\n      )\n      : 0;\n\n    return getGlyphWidth(this.glyph) + parenWidth;\n  }\n\n  // Attach this accidental to `note`, which must be a `StaveNote`.\n  setNote(note) {\n    if (!note) {\n      throw new Vex.RERR('ArgumentError', `Bad note value: ${note}`);\n    }\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (this.note.getCategory() === 'gracenotes') {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n  }\n\n  // If called, draws parenthesis around accidental.\n  setAsCautionary() {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  // Render accidental onto canvas.\n  draw() {\n    const {\n      context,\n      type, position, note, index, cautionary,\n      x_shift, y_shift,\n      glyph, parenLeft, parenRight,\n      render_options: { parenLeftPadding, parenRightPadding },\n    } = this;\n\n    this.checkContext();\n\n    if (!(note && (index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n    }\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = note.getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(context, accX, accY);\n    } else {\n      // Render the accidental in parentheses.\n      parenRight.render(context, accX, accY);\n      accX -= getGlyphWidth(parenRight);\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(context, accX, accY);\n      accX -= getGlyphWidth(glyph);\n      accX -= parenLeftPadding;\n      parenLeft.render(context, accX, accY);\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\n\nexport class NoteSubGroup extends Modifier {\n  static get CATEGORY() { return 'notesubgroup'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups, state) {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  constructor(subNotes) {\n    super();\n    this.setAttribute('type', 'NoteSubGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach(subNote => { subNote.ignore_ticks = false; });\n    this.width = 0;\n    this.preFormatted = false;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n\n    return this;\n  }\n\n  getCategory() { return NoteSubGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw notes without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n\n    // Draw notes\n    this.subNotes.forEach(subNote => subNote.setContext(this.context).drawWithStyle());\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class StaveTie extends Element {\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.context = null;\n    this.text = text;\n    this.direction = null;\n\n    this.render_options = {\n      cp1: 8,      // Curve control point 1\n      cp2: 12,      // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: { family: 'Arial', size: 10, style: '' },\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font) { this.font = font; return this; }\n  setDirection(direction) { this.direction = direction; return this; }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Tie needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.first_note || !this.last_note);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2; cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const cp_x = ((params.last_x_px + last_x_shift) +\n          (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n      const bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px, last_x_px) {\n    if (!this.text) return;\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= this.context.measureText(this.text).width / 2;\n\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.style);\n    this.context.fillText(\n      this.text,\n      center_x + this.render_options.text_shift_x,\n      (this.first_note || this.last_note).getStave().getYForTopText() - 1\n    );\n    this.context.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { StaveTie } from './stavetie';\n\nexport class TabTie extends StaveTie {\n  static createHammeron(notes) {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes) {\n    return new TabTie(notes, 'P');\n  }\n\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, text);\n    this.setAttribute('type', 'TabTie');\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.setNotes(notes);\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: -1, // Tab tie's are always face up.\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabTie } from './tabtie';\nimport { StaveNote } from './stavenote';\n\n// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\nfunction L(...args) { if (GraceNoteGroup.DEBUG) Vex.L('Vex.Flow.GraceNoteGroup', args); }\n\nexport class GraceNoteGroup extends Modifier {\n  static get CATEGORY() { return 'gracenotegroups'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(gracenote_groups, state) {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = (note.getCategory() === StaveNote.CATEGORY);\n      const spacing = (is_stavenote ? group_spacing_stave : group_spacing_tab);\n\n      if (is_stavenote && note !== prev_note) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          const props_tmp = note.getKeyProps()[n];\n          shiftL = (props_tmp.displaced ? note.getExtraLeftPx() : shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({ shift: shiftL, gracenote_group, spacing });\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n  // `ModifierContext`.\n  constructor(grace_notes, show_slur) {\n    super();\n    this.setAttribute('type', 'GraceNoteGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.preFormatted = false;\n\n    this.show_slur = show_slur;\n    this.slur = null;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.beams = [];\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  getCategory() { return GraceNoteGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes(grace_notes) {\n    grace_notes = grace_notes || this.grace_notes;\n    if (grace_notes.length > 1) {\n      const beam = new Beam(grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beams.push(beam);\n    }\n\n    return this;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n  getGraceNotes() {\n    return this.grace_notes;\n  }\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    L('Drawing grace note group for:', note);\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw grace note without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n\n    // Draw notes\n    this.grace_notes.forEach(graceNote => {\n      graceNote.setContext(this.context).draw();\n    });\n\n    // Draw beam\n    this.beams.forEach(beam => {\n      beam.setContext(this.context).draw();\n    });\n\n    if (this.show_slur) {\n      // Create and draw slur\n      const is_stavenote = (this.getNote().getCategory() === StaveNote.CATEGORY);\n      const TieClass = (is_stavenote ? StaveTie : TabTie);\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(this.context).draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\nexport class Stroke extends Modifier {\n  static get CATEGORY() { return 'strokes'; }\n  static get Type() {\n    return {\n      BRUSH_DOWN: 1,\n      BRUSH_UP: 2,\n      ROLL_DOWN: 3, // Arpeggiated chord\n      ROLL_UP: 4,   // Arpeggiated chord\n      RASQUEDO_DOWN: 5,\n      RASQUEDO_UP: 6,\n      ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n    };\n  }\n\n  // Arrange strokes inside `ModifierContext`\n  static format(strokes, state) {\n    const left_shift = state.left_shift;\n    const stroke_spacing = 0;\n\n    if (!strokes || strokes.length === 0) return this;\n\n    const strokeList = strokes.map((stroke) => {\n      const note = stroke.getNote();\n      if (note instanceof StaveNote) {\n        const { line, displaced } = note.getKeyProps()[stroke.getIndex()];\n        const shift = displaced ? note.getExtraLeftPx() : 0;\n        return { line, shift, stroke };\n      } else {\n        const { str: string } = note.getPositions()[stroke.getIndex()];\n        return { line: string, shift: 0, stroke };\n      }\n    });\n\n    const strokeShift = left_shift;\n\n    // There can only be one stroke .. if more than one, they overlay each other\n    const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n      stroke.setXShift(strokeShift + shift);\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n    }, 0);\n\n    state.left_shift += xShift;\n    return true;\n  }\n\n  constructor(type, options) {\n    super();\n    this.setAttribute('type', 'Stroke');\n\n    this.note = null;\n    this.options = Vex.Merge({}, options);\n\n    // multi voice - span stroke across all voices if true\n    this.all_voices = 'all_voices' in this.options ? this.options.all_voices : true;\n\n    // multi voice - end note of stroke, set in draw()\n    this.note_end = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      font_scale: 38,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'serif',\n      size: 10,\n      weight: 'bold italic',\n    };\n\n    this.setXShift(0);\n    this.setWidth(10);\n  }\n\n  getCategory() { return Stroke.CATEGORY; }\n  getPosition() { return this.position; }\n  addEndNote(note) { this.note_end = note; return this; }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\n    }\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let ys = this.note.getYs();\n    let topY = start.y;\n    let botY = start.y;\n    const x = start.x - 5;\n    const line_space = this.note.stave.options.spacing_between_lines_px;\n\n    const notes = this.getModifierContext().getModifiers(this.note.getCategory());\n    for (let i = 0; i < notes.length; i++) {\n      ys = notes[i].getYs();\n      for (let n = 0; n < ys.length; n++) {\n        if (this.note === notes[i] || this.all_voices) {\n          topY = Vex.Min(topY, ys[n]);\n          botY = Vex.Max(botY, ys[n]);\n        }\n      }\n    }\n\n    let arrow;\n    let arrow_shift_x;\n    let arrow_y;\n    let text_shift_x;\n    let text_y;\n    switch (this.type) {\n      case Stroke.Type.BRUSH_DOWN:\n        arrow = 'vc3';\n        arrow_shift_x = -3;\n        arrow_y = topY - (line_space / 2) + 10;\n        botY += (line_space / 2);\n        break;\n      case Stroke.Type.BRUSH_UP:\n        arrow = 'v11';\n        arrow_shift_x = 0.5;\n        arrow_y = botY + (line_space / 2);\n        topY -= (line_space / 2);\n        break;\n      case Stroke.Type.ROLL_DOWN:\n      case Stroke.Type.RASQUEDO_DOWN:\n        arrow = 'vc3';\n        arrow_shift_x = -3;\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\n        if (this.note instanceof StaveNote) {\n          topY += 1.5 * line_space;\n          if ((botY - topY) % 2 !== 0) {\n            botY += 0.5 * line_space;\n          } else {\n            botY += line_space;\n          }\n          arrow_y = topY - line_space;\n          text_y = botY + line_space + 2;\n        } else {\n          topY += 1.5 * line_space;\n          botY += line_space;\n          arrow_y = topY - 0.75 * line_space;\n          text_y = botY + 0.25 * line_space;\n        }\n        break;\n      case Stroke.Type.ROLL_UP:\n      case Stroke.Type.RASQUEDO_UP:\n        arrow = 'v52';\n        arrow_shift_x = -4;\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\n        if (this.note instanceof StaveNote) {\n          arrow_y = line_space / 2;\n          topY += 0.5 * line_space;\n          if ((botY - topY) % 2 === 0) {\n            botY += line_space / 2;\n          }\n          arrow_y = botY + 0.5 * line_space;\n          text_y = topY - 1.25 * line_space;\n        } else {\n          topY += 0.25 * line_space;\n          botY += 0.5 * line_space;\n          arrow_y = botY + 0.25 * line_space;\n          text_y = topY - line_space;\n        }\n        break;\n      case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n        topY += 0.5 * line_space;\n        botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n        break;\n      default:\n        throw new Vex.RERR('InvalidType', `The stroke type ${this.type} does not exist`);\n    }\n\n    // Draw the stroke\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n      this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\n    } else {\n      if (this.note instanceof StaveNote) {\n        for (let i = topY; i <= botY; i += line_space) {\n          Glyph.renderGlyph(\n            this.context,\n            x + this.x_shift - 4,\n            i,\n            this.render_options.font_scale,\n            'va3'\n          );\n        }\n      } else {\n        let i;\n        for (i = topY; i <= botY; i += 10) {\n          Glyph.renderGlyph(\n            this.context,\n            x + this.x_shift - 4,\n            i,\n            this.render_options.font_scale,\n            'va3'\n          );\n        }\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n          text_y = i + 0.25 * line_space;\n        }\n      }\n    }\n\n    if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n      return; // skip drawing arrow heads or text\n    }\n\n    // Draw the arrow head\n    Glyph.renderGlyph(\n      this.context,\n      x + this.x_shift + arrow_shift_x,\n      arrow_y,\n      this.render_options.font_scale,\n      arrow\n    );\n\n    // Draw the rasquedo \"R\"\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      this.context.fillText('R', x + text_shift_x, text_y);\n      this.context.restore();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Renderer } from './renderer';\nimport { StaveNote } from './stavenote';\n\nexport class StringNumber extends Modifier {\n  static get CATEGORY() { return 'stringnumber'; }\n\n  // ## Static Methods\n  // Arrange string numbers inside a `ModifierContext`\n  static format(nums, state) {\n    const left_shift = state.left_shift;\n    const right_shift = state.right_shift;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return this;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shift_left = 0;\n    let shift_right = 0;\n\n    let i;\n    let num;\n    let note;\n    let pos;\n    let props_tmp;\n    for (i = 0; i < nums.length; ++i) {\n      num = nums[i];\n      note = num.getNote();\n\n      for (i = 0; i < nums.length; ++i) {\n        num = nums[i];\n        note = num.getNote();\n        pos = num.getPosition();\n        const props = note.getKeyProps()[num.getIndex()];\n\n        if (note !== prev_note) {\n          for (let n = 0; n < note.keys.length; ++n) {\n            props_tmp = note.getKeyProps()[n];\n            if (left_shift === 0) {\n              shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\n            }\n            if (right_shift === 0) {\n              shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\n            }\n          }\n          prev_note = note;\n        }\n\n        nums_list.push({\n          pos,\n          note,\n          num,\n          line: props.line,\n          shiftL: shift_left,\n          shiftR: shift_right,\n        });\n      }\n    }\n\n    // Sort string numbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\n    let num_shiftL = 0; // eslint-disable-line\n    let num_shiftR = 0;\n    let x_widthL = 0;\n    let x_widthR = 0;\n    let last_line = null;\n    let last_note = null;\n    for (i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      note = nums_list[i].note;\n      pos = nums_list[i].pos;\n      num = nums_list[i].num;\n      const line = nums_list[i].line;\n      const shiftL = nums_list[i].shiftL;\n      const shiftR = nums_list[i].shiftR;\n\n      // Reset the position of the string number every line.\n      if (line !== last_line || note !== last_note) {\n        num_shiftL = left_shift + shiftL;\n        num_shiftR = right_shift + shiftR;\n      }\n\n      const num_width = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift);\n        num_shift = shift_left + num_width; // spacing\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(num_shiftR);\n        num_shift += num_width; // spacing\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\n      }\n      last_line = line;\n      last_note = note;\n    }\n\n    state.left_shift += x_widthL;\n    state.right_shift += x_widthR;\n    return true;\n  }\n\n  constructor(number) {\n    super();\n    this.setAttribute('type', 'StringNumber');\n\n    this.note = null;\n    this.last_note = null;\n    this.index = null;\n    this.string_number = number;\n    this.setWidth(20); // ???\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0; // Horizontal offset from default\n    this.y_offset = 0; // Vertical offset from default\n    this.dashed = true; // true - draw dashed extension  false - no extension\n    this.leg = Renderer.LineEndType.NONE;   // draw upward/downward leg at the of extension line\n    this.radius = 8;\n    this.font = {\n      family: 'sans-serif',\n      size: 10,\n      weight: 'bold',\n    };\n  }\n  getCategory() { return StringNumber.CATEGORY; }\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  setLineEndType(leg) {\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n      this.leg = leg;\n    }\n    return this;\n  }\n\n  setStringNumber(number) { this.string_number = number; return this; }\n  setOffsetX(x) { this.x_offset = x; return this; }\n  setOffsetY(y) { this.y_offset = y; return this; }\n  setLastNote(note) { this.last_note = note; return this; }\n  setDashed(dashed) { this.dashed = dashed; return this; }\n\n  draw() {\n    const ctx = this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n    }\n    this.setRendered();\n\n    const line_space = this.note.stave.options.spacing_between_lines_px;\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let dot_x = (start.x + this.x_shift + this.x_offset);\n    let dot_y = start.y + this.y_shift + this.y_offset;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n      case Modifier.Position.BELOW: {\n        const stem_ext = this.note.getStemExtents();\n        let top = stem_ext.topY;\n        let bottom = stem_ext.baseY + 2;\n\n        if (this.note.stem_direction === StaveNote.STEM_DOWN) {\n          top = stem_ext.baseY;\n          bottom = stem_ext.topY - 2;\n        }\n\n        if (this.position === Modifier.Position.ABOVE) {\n          dot_y = this.note.hasStem()\n            ? top - (line_space * 1.75)\n            : start.y - (line_space * 1.75);\n        } else {\n          dot_y = this.note.hasStem()\n            ? bottom + (line_space * 1.5)\n            : start.y + (line_space * 1.75);\n        }\n\n        dot_y += this.y_shift + this.y_offset;\n\n        break;\n      } case Modifier.Position.LEFT:\n        dot_x -= (this.radius / 2) + 5;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += (this.radius / 2) + 6;\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidPosition', `The position ${this.position} is invalid`\n        );\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n    ctx.lineWidth = 1.5;\n    ctx.stroke();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n\n    if (this.last_note != null) {\n      const end = this.last_note.getStemX() - this.note.getX() + 5;\n      ctx.strokeStyle = '#000000';\n      ctx.lineCap = 'round';\n      ctx.lineWidth = 0.6;\n      if (this.dashed) {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n      } else {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n      }\n\n      let len;\n      let pattern;\n      switch (this.leg) {\n        case Renderer.LineEndType.UP:\n          len = -10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        case Renderer.LineEndType.DOWN:\n          len = 10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        default:\n          break;\n      }\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n//\n// ## Description\n//\n// This file implements articulations and accents as modifiers that can be\n// attached to notes. The complete list of articulations is available in\n// `tables.js` under `Vex.Flow.articulationCodes`.\n//\n// See `tests/articulation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\n// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\nfunction L(...args) { if (Articulation.DEBUG) Vex.L('Vex.Flow.Articulation', args); }\n\nconst { ABOVE, BELOW } = Modifier.Position;\n\nconst roundToNearestHalf = (mathFn, value) => mathFn(value / 0.5) * 0.5;\n\n// This includes both staff and ledger lines\nconst isWithinLines = (line, position) => position === ABOVE ? line <= 5 : line >= 1;\n\nconst getRoundingFunction = (line, position) => {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n};\n\nconst snapLineToStaff = (canSitBetweenLines, line, position, offsetDirection) => {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + (HALF_STAFF_SPACE * -offsetDirection);\n  } else {\n    return snappedLine;\n  }\n};\n\nconst isStaveNote = (note) => {\n  const noteCategory = note.getCategory();\n  return noteCategory === 'stavenotes' || noteCategory === 'gracenotes';\n};\n\nconst getTopY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stave.getYForTopText(textLine);\n      }\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\nconst getBottomY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stave.getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\n// Gets the initial offset of the articulation from the y value of the starting position.\n// This is required because the top/bottom text positions already have spacing applied to\n// provide a \"visually pleasent\" default position. However the y values provided from\n// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n// normalizes this asymmetry.\nconst getInitialOffset = (note, position) => {\n  const isOnStemTip = (\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN)\n  );\n\n  if (isStaveNote(note)) {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n};\n\nexport class Articulation extends Modifier {\n  static get CATEGORY() { return 'articulations'; }\n  static get INITIAL_OFFSET() { return -0.5; }\n\n  // FIXME:\n  // Most of the complex formatting logic (ie: snapping to space) is\n  // actually done in .render(). But that logic belongs in this method.\n  //\n  // Unfortunately, this isn't possible because, by this point, stem lengths\n  // have not yet been finalized. Finalized stem lengths are required to determine the\n  // initial position of any stem-side articulation.\n  //\n  // This indicates that all objects should have their stave set before being\n  // formatted. It can't be an optional if you want accurate vertical positioning.\n  // Consistently positioned articulations that play nice with other modifiers\n  // won't be possible until we stop relying on render-time formatting.\n  //\n  // Ideally, when this function has completed, the vertical articulation positions\n  // should be ready to render without further adjustment. But the current state\n  // is far from this ideal.\n  static format(articulations, state) {\n    if (!articulations || articulations.length === 0) return false;\n\n    const isAbove = artic => artic.getPosition() === ABOVE;\n    const isBelow = artic => artic.getPosition() === BELOW;\n    const margin = 0.5;\n    const getIncrement = (articulation, line, position) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        (articulation.glyph.getMetrics().height / 10) + margin\n      );\n\n    articulations\n      .filter(isAbove)\n      .forEach(articulation => {\n        articulation.setTextLine(state.top_text_line);\n        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n      });\n\n    articulations\n      .filter(isBelow)\n      .forEach(articulation => {\n        articulation.setTextLine(state.text_line);\n        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n      });\n\n    const width = articulations\n      .map(articulation => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  static easyScoreHook({ articulations }, note, builder) {\n    if (!articulations) return;\n\n    const articNameToCode = {\n      staccato: 'a.',\n      tenuto: 'a-',\n    };\n\n    articulations\n      .split(',')\n      .map(articString => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic = { type: articNameToCode[name] };\n        if (position) artic.position = Modifier.PositionString[position];\n        return builder.getFactory().Articulation(artic);\n      })\n      .map(artic => note.addModifier(0, artic));\n  }\n\n  // Create a new articulation of type `type`, which is an entry in\n  // `Vex.Flow.articulationCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Articulation');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = BELOW;\n    this.render_options = {\n      font_scale: 38,\n    };\n\n    this.articulation = Flow.articulationCodes(this.type);\n    if (!this.articulation) {\n      throw new Vex.RERR('ArgumentError', `Articulation not found: ${this.type}`);\n    }\n\n    this.glyph = new Glyph(this.articulation.code, this.render_options.font_scale);\n\n    this.setWidth(this.glyph.getMetrics().width);\n  }\n\n  getCategory() { return Articulation.CATEGORY; }\n\n  // Render articulation in position next to note.\n  draw() {\n    const {\n      note, index, position, glyph,\n      articulation: { between_lines: canSitBetweenLines },\n      text_line: textLine,\n      context: ctx,\n    } = this;\n\n    this.checkContext();\n\n    if (!note || index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const stave = note.getStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = note.getCategory() === 'tabnotes';\n\n    // Articulations are centered over/under the note head.\n    const { x } = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    let y = {\n      [ABOVE]: () => {\n        glyph.setOrigin(0.5, 1);\n        const y = getTopY(note, textLine) - ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n      [BELOW]: () => {\n        glyph.setOrigin(0.5, 0);\n        const y = getBottomY(note, textLine) + ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n    }[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + noteLine;\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport { Vex } from './vex';\nimport { Tickable } from './tickable';\nimport { Fraction } from './fraction';\n\nexport class TickContext extends Tickable {\n  static getNextContext(tContext) {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    return contexts[index + 1];\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'TickContext');\n    this.currentTick = new Fraction(0, 1);\n    this.maxTicks = new Fraction(0, 1);\n    this.minTicks = null;\n    this.padding = 3;     // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.xBase = 0;        // base x position without xOffset\n    this.xOffset = 0;      // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n    this.tickables = [];   // Notes, tabs, chords, lyrics.\n    this.notePx = 0;       // width of widest note in this context\n    this.extraLeftPx = 0;  // Extra left pixels for modifers & displace notes\n    this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n    this.tContexts = [];   // Parent array of tick contexts\n  }\n\n  getX() { return this.x; }\n  setX(x) { this.x = x; this.xBase = x; this.xOffset = 0; return this; }\n  getXBase() { return this.xBase; } // use of xBase and xOffset is optional, avoids offset creep\n  setXBase(xBase) { this.xBase = xBase; this.x = xBase + this.xOffset; }\n  getXOffset() { return this.xOffset; }\n  setXOffset(xOffset) { this.xOffset = xOffset; this.x = this.xBase + xOffset; }\n  getWidth() { return this.width + (this.padding * 2); }\n  setPadding(padding) { this.padding = padding; return this; }\n  getMaxTicks() { return this.maxTicks; }\n  getMinTicks() { return this.minTicks; }\n  getTickables() { return this.tickables; }\n\n  getCenterAlignedTickables() {\n    return this.tickables.filter(tickable => tickable.isCenterAligned());\n  }\n\n  // Get widths context, note and left/right modifiers for formatting\n  getMetrics() {\n    const { width, notePx, extraLeftPx, extraRightPx } = this;\n    return { width, notePx, extraLeftPx, extraRightPx };\n  }\n\n  getCurrentTick() { return this.currentTick; }\n  setCurrentTick(tick) {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  // ### DEPRECATED ###\n  // Get left & right pixels used for modifiers. THIS METHOD IS DEPRECATED. Use\n  // the getMetrics() method instead!\n  getExtraPx() {\n    let left_shift = 0;\n    let right_shift = 0;\n    let extraLeftPx = 0;\n    let extraRightPx = 0;\n    for (let i = 0; i < this.tickables.length; i++) {\n      extraLeftPx = Math.max(this.tickables[i].extraLeftPx || 0, extraLeftPx);\n      extraRightPx = Math.max(this.tickables[i].extraRightPx || 0, extraRightPx);\n      const mContext = this.tickables[i].modifierContext;\n      if (mContext && mContext != null) {\n        left_shift = Math.max(left_shift, mContext.state.left_shift);\n        right_shift = Math.max(right_shift, mContext.state.right_shift);\n      }\n    }\n    return {\n      left: left_shift,\n      right: right_shift,\n      extraLeft: extraLeftPx,\n      extraRight: extraRightPx,\n    };\n  }\n\n  addTickable(tickable) {\n    if (!tickable) {\n      throw new Vex.RERR('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      this.ignore_ticks = false;\n\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max extra pixels from all tickables in the context\n      this.extraLeftPx = Math.max(this.extraLeftPx, metrics.extraLeftPx + metrics.modLeftPx);\n      this.extraRightPx = Math.max(this.extraRightPx, metrics.extraRightPx + metrics.modRightPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.extraLeftPx + this.extraRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements ornaments as modifiers that can be\n// attached to notes. The complete list of ornaments is available in\n// `tables.js` under `Vex.Flow.ornamentCodes`.\n//\n// See `tests/ornament_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { TickContext } from './tickcontext';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\nfunction L(...args) { if (Ornament.DEBUG) Vex.L('Vex.Flow.Ornament', args); }\n\nexport class Ornament extends Modifier {\n  static get CATEGORY() { return 'ornaments'; }\n\n  // ## Static Methods\n  // Arrange ornaments inside `ModifierContext`\n  static format(ornaments, state) {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      width = Math.max(ornament.getWidth(), width);\n\n      if (ornament.getPosition() === Modifier.Position.ABOVE) {\n        ornament.setTextLine(state.top_text_line);\n        state.top_text_line += increment;\n      } else {\n        ornament.setTextLine(state.text_line);\n        state.text_line += increment;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // Create a new ornament of type `type`, which is an entry in\n  // `Vex.Flow.ornamentCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Ornament');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.ABOVE;\n    this.delayed = false;\n\n    this.accidentalUpper = null;\n    this.accidentalLower = null;\n\n    this.render_options = {\n      font_scale: 38,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3,\n    };\n\n    this.ornament = Flow.ornamentCodes(this.type);\n    if (!this.ornament) {\n      throw new Vex.RERR('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale);\n    this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n  }\n\n  getCategory() { return Ornament.CATEGORY; }\n\n  // Set whether the ornament is to be delayed\n  setDelayed(delayed) { this.delayed = delayed; return this; }\n\n  // Set the upper accidental for the ornament\n  setUpperAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Set the lower accidental for the ornament\n  setLowerAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Render ornament in position next to note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const ctx = this.context;\n    const stemDir = this.note.getStemDirection();\n    const stave = this.note.getStave();\n\n    // Get stem extents\n    const stemExtents = this.note.getStem().getExtents();\n    let y = stemDir === StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered\n    // outside the stave.\n    if (this.note.getCategory() === 'tabnotes') {\n      if (this.note.hasStem()) {\n        if (stemDir === StaveNote.STEM_DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else { // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === StaveNote.STEM_DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && this.note.beam) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n    let glyphY = Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      let delayXShift = 0;\n      if (this.delayXShift !== undefined) {\n        delayXShift = this.delayXShift;\n      } else {\n        delayXShift += this.glyph.getMetrics().width / 2;\n        const nextContext = TickContext.getNextContext(this.note.getTickContext());\n        if (nextContext) {\n          delayXShift += (nextContext.getX() - glyphX) * 0.5;\n        } else {\n          delayXShift += (stave.x + stave.width - glyphX) * 0.5;\n        }\n        this.delayXShift = delayXShift;\n      }\n      glyphX += delayXShift;\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    this.glyph.render(ctx, glyphX, glyphY);\n    glyphY -= this.glyph.getMetrics().height;\n\n    if (this.accidentalUpper) {\n      glyphY -= this.render_options.accidentalUpperPadding;\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements text annotations as modifiers that can be attached to\n// notes.\n//\n// See `tests/annotation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n\n// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\nfunction L(...args) { if (Annotation.DEBUG) Vex.L('Vex.Flow.Annotation', args); }\n\nexport class Annotation extends Modifier {\n  static get CATEGORY() { return 'annotations'; }\n\n  // Text annotations can be positioned and justified relative to the note.\n  static get Justify() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get JustifyString() {\n    return {\n      left: Annotation.Justify.LEFT,\n      right: Annotation.Justify.RIGHT,\n      center: Annotation.Justify.CENTER,\n      centerStem: Annotation.Justify.CENTER_STEM,\n    };\n  }\n\n  static get VerticalJustify() {\n    return {\n      TOP: 1,\n      CENTER: 2,\n      BOTTOM: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get VerticalJustifyString() {\n    return {\n      above: Annotation.VerticalJustify.TOP,\n      top: Annotation.VerticalJustify.TOP,\n      below: Annotation.VerticalJustify.BOTTOM,\n      bottom: Annotation.VerticalJustify.BOTTOM,\n      center: Annotation.VerticalJustify.CENTER,\n      centerStem: Annotation.VerticalJustify.CENTER_STEM,\n    };\n  }\n\n  // Arrange annotations within a `ModifierContext`\n  static format(annotations, state) {\n    if (!annotations || annotations.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < annotations.length; ++i) {\n      const annotation = annotations[i];\n      width = Math.max(annotation.getWidth(), width);\n      if (annotation.getPosition() === Modifier.Position.ABOVE) {\n        annotation.setTextLine(state.top_text_line);\n        state.top_text_line++;\n      } else {\n        annotation.setTextLine(state.text_line);\n        state.text_line++;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // Annotations inherit from `Modifier` and is positioned correctly when\n  // in a `ModifierContext`.\n  // Create a new `Annotation` with the string `text`.\n  constructor(text) {\n    super();\n    this.setAttribute('type', 'Annotation');\n\n    this.note = null;\n    this.index = null;\n    this.text = text;\n    this.justification = Annotation.Justify.CENTER;\n    this.vert_justification = Annotation.VerticalJustify.TOP;\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    // The default width is calculated from the text.\n    this.setWidth(Flow.textWidth(text));\n  }\n\n  getCategory() { return Annotation.CATEGORY; }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family, size, weight) {\n    this.font = { family, size, weight };\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `Annotation.VerticalJustify`.\n  setVerticalJustification(just) {\n    this.vert_justification = typeof (just) === 'string'\n      ? Annotation.VerticalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `Annotation.Justify`.\n  getJustification() { return this.justification; }\n  setJustification(just) {\n    this.justification = typeof (just) === 'string'\n      ? Annotation.JustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Render text beside the note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n      this.index);\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = this.context.measureText(this.text).width;\n\n    // Estimate text height to be the same as the width of an 'm'.\n    //\n    // This is a hack to work around the inability to measure text height\n    // in HTML5 Canvas (and SVG).\n    const text_height = this.context.measureText('m').width;\n    let x;\n    let y;\n\n    if (this.justification === Annotation.Justify.LEFT) {\n      x = start.x;\n    } else if (this.justification === Annotation.Justify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.justification === Annotation.Justify.CENTER) {\n      x = start.x - text_width / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() - text_width / 2;\n    }\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n      const yt = this.note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    } else /* CENTER_STEM */ {\n      const extents = this.note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 +\n        text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    this.context.fillText(this.text, x, y);\n    this.context.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements tablature bends.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n/**\n   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   @param release If true, render a release. (DEPRECATED)\n   @param phrase If set, ignore \"text\" and \"release\", and use the more\n                 sophisticated phrase specified.\n\n   Example of a phrase:\n\n     [{\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"half\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"1 1/2\"\n       width: 8;\n     }]\n */\nexport class Bend extends Modifier {\n  static get CATEGORY() { return 'bends'; }\n\n  static get UP() {\n    return 0;\n  }\n  static get DOWN() {\n    return 1;\n  }\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  static format(bends, state) {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Bends are always on top.\n    const text_line = state.top_text_line;\n\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor(text, release, phrase) {\n    super();\n    this.setAttribute('type', 'Bend');\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release || false;\n    this.font = '10pt Arial';\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{ type: Bend.UP, text: this.text }];\n      if (this.release) this.phrase.push({ type: Bend.DOWN, text: '' });\n    }\n\n    this.updateWidth();\n  }\n\n  getCategory() { return Bend.CATEGORY; }\n\n  setXShift(value) {\n    this.x_shift = value;\n    this.updateWidth();\n  }\n  setFont(font) { this.font = font; return this; }\n  getText() { return this.text; }\n  updateWidth() {\n    const that = this;\n\n    function measure_text(text) {\n      let text_width;\n      if (that.context) {\n        text_width = that.context.measureText(text).width;\n      } else {\n        text_width = Flow.textWidth(text);\n      }\n\n      return text_width;\n    }\n\n    let total_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if ('width' in bend) {\n        total_width += bend.width;\n      } else {\n        const additional_width = (bend.type === Bend.UP) ?\n          this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Vex.Max(additional_width, measure_text(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        total_width += bend.width;\n      }\n    }\n\n    this.setWidth(total_width + this.x_shift);\n    return this;\n  }\n  draw() {\n    this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n    }\n\n    this.setRendered();\n\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT,\n      this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const ctx = this.context;\n    const bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n    const annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n    const that = this;\n\n    function renderBend(x, y, width, height) {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderRelease(x, y, width, height) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(\n        x + width, height,\n        x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderArrowHead(x, y, direction) {\n      const width = 4;\n      const dir = direction || 1;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x - width, y + width * dir);\n      ctx.lineTo(x + width, y + width * dir);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    function renderText(x, text) {\n      ctx.save();\n      ctx.setRawFont(that.font);\n      const render_x = x - (ctx.measureText(text).width / 2);\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    }\n\n    let last_bend = null;\n    let last_drawn_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width +\n        (last_bend ? last_bend.draw_width : 0) -\n        (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend === null) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements vibratos.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Bend } from './bend';\n\nexport class Vibrato extends Modifier {\n  static get CATEGORY() { return 'vibratos'; }\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  static format(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getModifiers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n  getCategory() { return Vibrato.CATEGORY; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n  setVibratoWidth(width) {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = this.note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  // Static rendering method that can be called from\n  // other classes (e.g. VibratoBracket)\n  static renderVibrato(ctx, x, y, opts) {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - (wave_height / 2));\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + (wave_height / 2));\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y + (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y - (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of modifiers to notes (e.g. bends,\n// fingering positions etc.)\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Accidental } from './accidental';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Stroke } from './strokes';\nimport { StringNumber } from './stringnumber';\nimport { Articulation } from './articulation';\nimport { Ornament } from './ornament';\nimport { Annotation } from './annotation';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\nfunction L(...args) { if (ModifierContext.DEBUG) Vex.L('Vex.Flow.ModifierContext', args); }\n\nexport class ModifierContext {\n  constructor() {\n    // Current modifiers\n    this.modifiers = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0,\n      top_text_line: 0,\n    };\n\n    // Add new modifiers to this array. The ordering is significant -- lower\n    // modifiers are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      StaveNote,\n      Dot,\n      FretHandFinger,\n      Accidental,\n      Stroke,\n      GraceNoteGroup,\n      NoteSubGroup,\n      StringNumber,\n      Articulation,\n      Ornament,\n      Annotation,\n      Bend,\n      Vibrato,\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [StaveNote];\n  }\n\n  addModifier(modifier) {\n    const type = modifier.getCategory();\n    if (!this.modifiers[type]) this.modifiers[type] = [];\n    this.modifiers[type].push(modifier);\n    modifier.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(type) { return this.modifiers[type]; }\n  getWidth() { return this.width; }\n  getExtraLeftPx() { return this.state.left_shift; }\n  getExtraRightPx() { return this.state.right_shift; }\n  getState() { return this.state; }\n\n  getMetrics() {\n    if (!this.formatted) {\n      throw new Vex.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n      extra_left_px: this.state.left_shift,\n      extra_right_px: this.state.right_shift,\n    };\n  }\n\n  preFormat() {\n    if (this.preFormatted) return;\n    this.PREFORMAT.forEach((modifier) => {\n      L('Preformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.format(this.getModifiers(modifier.CATEGORY), this.state, this);\n    });\n\n    // Update width of this modifier context\n    this.width = this.state.left_shift + this.state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return;\n    this.POSTFORMAT.forEach((modifier) => {\n      L('Postformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.postFormat(this.getModifiers(modifier.CATEGORY), this);\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the formatting and layout algorithms that are used\n// to position notes in a voice. The algorithm can align multiple voices both\n// within a stave, and across multiple staves.\n//\n// To do this, the formatter breaks up voices into a grid of rational-valued\n// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n// to each tick based on the widths of the notes and modifiers in that tick. This\n// establishes the smallest amount of space required for each tick.\n//\n// Finally, the formatter distributes the left over space proportionally to\n// all the ticks, setting the `x` values of the notes in each tick.\n//\n// See `tests/formatter_tests.js` for usage examples. The helper functions included\n// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\nimport { Vex } from './vex';\nimport { Beam } from './beam';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\nimport { Voice } from './voice';\nimport { StaveConnector } from './staveconnector';\nimport { StaveNote } from './stavenote';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nfunction L(...args) { if (Formatter.DEBUG) Vex.L('Vex.Flow.Formatter', args); }\n\n// Helper function to locate the next non-rest note(s).\nfunction lookAhead(notes, restLine, i, compare) {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = restLine;\n\n  // Get the rest line for next valid non-rest note group.\n  for (i += 1; i < notes.length; i += 1) {\n    const note = notes[i];\n    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = note.getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && restLine !== nextRestLine) {\n    const top = Math.max(restLine, nextRestLine);\n    const bot = Math.min(restLine, nextRestLine);\n    nextRestLine = Vex.MidLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n// Take an array of `voices` and place aligned tickables in the same context. Returns\n// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n// multiplier.\n//\n// Params:\n// * `voices`: Array of `Voice` instances.\n// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n// * `addToContext`: Function to add tickable to context.\nfunction createContexts(voices, ContextType, addToContext) {\n  if (!voices || !voices.length) {\n    throw new Vex.RERR('BadArgument', 'No voices to format');\n  }\n\n  // Find out highest common multiple of resolution multipliers.\n  // The purpose of this is to find out a common denominator\n  // for all fractional tick values in all tickables of all voices,\n  // so that the values can be expanded and the numerator used\n  // as an integer tick value.\n  const totalTicks = voices[0].getTotalTicks();\n  const resolutionMultiplier = voices.reduce((resolutionMultiplier, voice) => {\n    if (!voice.getTotalTicks().equals(totalTicks)) {\n      throw new Vex.RERR(\n        'TickMismatch', 'Voices should have same total note duration in ticks.'\n      );\n    }\n\n    if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n      throw new Vex.RERR(\n        'IncompleteVoice', 'Voice does not have enough notes.'\n      );\n    }\n\n    return Math.max(\n      resolutionMultiplier,\n      Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier())\n    );\n  }, 1);\n\n  // Initialize tick maps.\n  const tickToContextMap = {};\n  const tickList = [];\n  const contexts = [];\n\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach(voice => {\n    // Use resolution multiplier as denominator to expand ticks\n    // to suitable integer values, so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach(tickable => {\n      const integerTicks = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext = new ContextType();\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks]);\n\n      // Maintain a sorted list of tick contexts.\n      tickList.push(integerTicks);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: Vex.SortAndUnique(tickList, (a, b) => a - b, (a, b) => a === b),\n    resolutionMultiplier,\n  };\n}\n\nexport class Formatter {\n  // Helper function to layout \"notes\" one after the other without\n  // regard for proportions. Useful for tests and debugging.\n  static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n    notes.reduce((x, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const extra = tick.getExtraPx();\n      tick.setX(x + extra.left);\n\n      return x + tick.getWidth() + extra.right + paddingBetween;\n    }, x);\n  }\n\n  // Helper function to plot formatter debug info.\n  static plotDebugging(ctx, formatter, xPos, y1, y2) {\n    const x = xPos + Note.STAVEPADDING;\n    const contextGaps = formatter.contextGaps;\n    function stroke(x1, x2, color) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n\n    contextGaps.gaps.forEach(gap => {\n      stroke(x + gap.x1, x + gap.x2, '#aaa');\n      // Vex.drawDot(ctx, xPos + gap.x1, yPos, 'blue');\n      ctx.fillText(Math.round(gap.x2 - gap.x1), x + gap.x1, y2 + 12);\n    });\n\n    ctx.fillText(Math.round(contextGaps.total) + 'px', x - 20, y2 + 12);\n    ctx.setFillStyle('red');\n\n    ctx.fillText('Loss: ' +\n      formatter.lossHistory.map(loss => Math.round(loss)), x - 20, y2 + 22);\n    ctx.restore();\n  }\n\n  // Helper function to format and draw a single voice. Returns a bounding\n  // box for the notation.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n  // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n  // * `params` - One of below:\n  //    * Setting `autobeam` only `(context, stave, notes, true)` or\n  //      `(ctx, stave, notes, {autobeam: true})`\n  //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n  //    * Setting both a struct is needed `(context, stave, notes, {\n  //      autobeam: true, align_rests: true})`\n  //\n  // `autobeam` automatically generates beams for the notes.\n  // `align_rests` aligns rests with nearby notes.\n  static FormatAndDraw(ctx, stave, notes, params) {\n    const options = {\n      auto_beam: false,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(options, params);\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice], { align_rests: options.align_rests })\n      .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  // Helper function to format and draw aligned tab and stave notes in two\n  // separate staves.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n  // * `stave` - A `Stave` instance on which to render `Note`s.\n  // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n  // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n  // * `autobeam` - Automatically generate beams.\n  // * `params` - A configuration object:\n  //    * `autobeam` automatically generates beams for the notes.\n  //    * `align_rests` aligns rests with nearby notes.\n  static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n    const opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(opts, params);\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(tabnotes);\n\n    // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice], { align_rests: opts.align_rests })\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  // Auto position rests based on previous/next note positions.\n  //\n  // Params:\n  // * `notes`: An array of notes.\n  // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n  // * `alignTuplets`: If set to false, ignores tuplets.\n  static AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n    notes.forEach((note, index) => {\n      if (note instanceof StaveNote && note.isRest()) {\n        if (note.tuplet && !alignTuplets) return;\n\n        // If activated rests not on default can be rendered as specified.\n        const position = note.getGlyph().position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') return;\n\n        if (alignAllNotes || note.beam != null) {\n          // Align rests with previous/next notes.\n          const props = note.getKeyProps()[0];\n          if (index === 0) {\n            props.line = lookAhead(notes, props.line, index, false);\n            note.setKeyLine(0, props.line);\n          } else if (index > 0 && index < notes.length) {\n            // If previous note is a rest, use its line number.\n            let restLine;\n            if (notes[index - 1].isRest()) {\n              restLine = notes[index - 1].getKeyProps()[0].line;\n              props.line = restLine;\n            } else {\n              restLine = notes[index - 1].getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, restLine, index, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    });\n\n    return this;\n  }\n\n  constructor() {\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Total number of ticks in the voice.\n    this.totalTicks = new Fraction(0, 1);\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = null;\n    this.modiferContexts = null;\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n  }\n\n  // Find all the rests in each of the `voices` and align them\n  // to neighboring notes. If `alignAllNotes` is `false`, then only\n  // align non-beamed notes.\n  alignRests(voices, alignAllNotes) {\n    if (!voices || !voices.length) {\n      throw new Vex.RERR('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach(voice =>\n      Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  // Calculate the minimum width required to align and format `voices`.\n  preCalculateMinTotalWidth(voices) {\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts if not already created.\n    if (!this.tickContexts) {\n      if (!voices) {\n        throw new Vex.RERR(\n          'BadArgument', \"'voices' required to run preCalculateMinTotalWidth\"\n        );\n      }\n\n      this.createTickContexts(voices);\n    }\n\n    const { list: contextList, map: contextMap } = this.tickContexts;\n\n    // Go through each tick context and calculate total width.\n    this.minTotalWidth = contextList\n      .map(tick => {\n        const context = contextMap[tick];\n        context.preFormat();\n        return context.getWidth();\n      })\n      .reduce((a, b) => a + b, 0);\n\n    this.hasMinTotalWidth = true;\n\n    return this.minTotalWidth;\n  }\n\n  // Get minimum width required to render all voices. Either `format` or\n  // `preCalculateMinTotalWidth` must be called before this method.\n  getMinTotalWidth() {\n    if (!this.hasMinTotalWidth) {\n      throw new Vex.RERR(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  // Create `ModifierContext`s for each tick in `voices`.\n  createModifierContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      ModifierContext,\n      (tickable, context) => tickable.addToModifierContext(context)\n    );\n\n    this.modiferContexts = contexts;\n    return contexts;\n  }\n\n  // Create `TickContext`s for each tick in `voices`. Also calculate the\n  // total number of ticks in voices.\n  createTickContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      TickContext,\n      (tickable, context) => context.addTickable(tickable)\n    );\n\n    contexts.array.forEach(context => {\n      context.tContexts = contexts.array;\n    });\n\n    this.totalTicks = voices[0].getTicksUsed().clone();\n    this.tickContexts = contexts;\n    return contexts;\n  }\n\n  // This is the core formatter logic. Format voices and justify them\n  // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n  // that can't retreive widths without a canvas. This method sets the `x` positions\n  // of all the tickables/notes in the formatter.\n  preFormat(justifyWidth = 0, renderingContext, voices, stave) {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    const { list: contextList, map: contextMap, resolutionMultiplier } = contexts;\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voices && stave) {\n      voices.forEach(voice => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    const centerX = justifyWidth / 2;\n    this.minTotalWidth = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      if (renderingContext) context.setContext(renderingContext);\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.extraLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.extraLeftPx;\n    });\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return;\n\n    // Pass 2: Take leftover width, and distribute it to proportionately to\n    // all notes.\n    const remainingX = justifyWidth - this.minTotalWidth;\n    const leftoverPxPerTick = remainingX / (this.totalTicks.value() * resolutionMultiplier);\n    let spaceAccum = 0;\n\n    contextList.forEach((tick, index) => {\n      const prevTick = contextList[index - 1] || 0;\n      const context = contextMap[tick];\n      const tickSpace = (tick - prevTick) * leftoverPxPerTick;\n\n      spaceAccum += tickSpace;\n      context.setX(context.getX() + spaceAccum);\n\n      // Move center aligned tickables to middle\n      context\n        .getCenterAlignedTickables()\n        .forEach(tickable => { // eslint-disable-line\n          tickable.center_x_shift = centerX - context.getX();\n        });\n    });\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return;\n\n    this.justifyWidth = justifyWidth;\n    this.lossHistory = [];\n    this.evaluate();\n  }\n\n  // Calculate the total cost of this formatting decision.\n  evaluate() {\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = { total: 0, gaps: [] };\n    this.tickContexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = this.tickContexts.list[index - 1];\n      const prevContext = this.tickContexts.map[prevTick];\n      const context = this.tickContexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n\n      const insideRightEdge = prevContext.getX() + prevMetrics.width;\n      const insideLeftEdge = context.getX();\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    const durationStats = this.durationStats = {};\n\n    function updateStats(duration, space) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = { mean: space, count: 1 };\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note, i, notes) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.noteWidth +\n          metrics.modRightPx + metrics.extraRightPx;\n        let space = 0;\n\n        if (i < (notes.length - 1)) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() -\n            rightMetrics.modLeftPx - rightMetrics.extraLeftPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.space.mean = durationStats[duration].mean;\n\n        totalDeviation += Math.pow(durationStats[duration].mean, 2);\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this;\n  }\n\n  // Run a single iteration of rejustification. At a high level, this method calculates\n  // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n  // attempt to reduce the cost. You can call this method multiple times until it finds\n  // and oscillates around a global minimum.\n  tune() {\n    const sum = (means) => means.reduce((a, b) => a + b);\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current, prev, next, shift) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.tickContexts.list.forEach((tick, index, list) => {\n      const context = this.tickContexts.map[tick];\n      const prevContext = (index > 0) ? this.tickContexts.map[list[index - 1]] : null;\n      const nextContext = (index < list.length - 1) ? this.tickContexts.map[list[index + 1]] : null;\n\n      move(context, prevContext, nextContext, shift);\n\n      const cost = -sum(\n        context.getTickables().map(t => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      const minShift = Math.min(5, Math.abs(shift));\n      shift = shift > 0 ? minShift : -minShift;\n    });\n\n    return this.evaluate();\n  }\n\n  // This is the top-level call for all formatting logic completed\n  // after `x` *and* `y` values have been computed for the notes\n  // in the voices.\n  postFormat() {\n    const postFormatContexts = (contexts) =>\n      contexts.list.forEach(tick => contexts.map[tick].postFormat());\n\n    postFormatContexts(this.modiferContexts);\n    postFormatContexts(this.tickContexts);\n\n    return this;\n  }\n\n  // Take all `voices` and create `ModifierContext`s out of them. This tells\n  // the formatters that the voices belong on a single stave.\n  joinVoices(voices) {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  // Align rests in voices, justify the contexts, and position the notes\n  // so voices are aligned and ready to render onto the stave. This method\n  // mutates the `x` positions of all tickables in `voices`.\n  //\n  // Voices are full justified to fit in `justifyWidth` pixels.\n  //\n  // Set `options.context` to the rendering context. Set `options.align_rests`\n  // to true to enable rest alignment.\n  format(voices, justifyWidth, options) {\n    const opts = {\n      align_rests: false,\n      context: null,\n      stave: null,\n    };\n\n    Vex.Merge(opts, options);\n    this.voices = voices;\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred\n  // from the `stave`.\n  formatToStave(voices, stave, options) {\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n    L('Formatting voices to width: ', justifyWidth);\n    const opts = { context: stave.getContext() };\n    Vex.Merge(opts, options);\n    return this.format(voices, justifyWidth, opts);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport { Element } from './element';\n\nexport class StaveModifier extends Element {\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n      BEGIN: 5,\n      END: 6,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'StaveModifier');\n\n    this.padding = 10;\n    this.position = StaveModifier.Position.ABOVE;\n    this.layoutMetrics = null;\n  }\n\n  getPosition() { return this.position; }\n  setPosition(position) { this.position = position; return this; }\n  getStave() { return this.stave; }\n  setStave(stave) { this.stave = stave; return this; }\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getCategory() { return ''; }\n  makeSpacer(padding) {\n    // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n    // instead of this hack.\n\n    return {\n      getContext() { return true; },\n      setStave() {},\n      renderToStave() {},\n      getMetrics() {\n        return { width: padding };\n      },\n    };\n  }\n  placeGlyphOnLine(glyph, stave, line) {\n    glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n  }\n  getPadding(index) {\n    return (index !== undefined && index < 2 ? 0 : this.padding);\n  }\n  setPadding(padding) { this.padding = padding; return this; }\n  setLayoutMetrics(layoutMetrics) {\n    this.layoutMetrics = layoutMetrics;\n    return this;\n  }\n  getLayoutMetrics() {\n    return this.layoutMetrics;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\n\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\n\nexport class Barline extends StaveModifier {\n  static get CATEGORY() { return 'barlines'; }\n  static get type() {\n    return {\n      SINGLE: 1,\n      DOUBLE: 2,\n      END: 3,\n      REPEAT_BEGIN: 4,\n      REPEAT_END: 5,\n      REPEAT_BOTH: 6,\n      NONE: 7,\n    };\n  }\n\n  static get typeString() {\n    return {\n      single: Barline.type.SINGLE,\n      double: Barline.type.DOUBLE,\n      end: Barline.type.END,\n      repeatBegin: Barline.type.REPEAT_BEGIN,\n      repeatEnd: Barline.type.REPEAT_END,\n      repeatBoth: Barline.type.REPEAT_BOTH,\n      none: Barline.type.NONE,\n    };\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Barline');\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n\n    const TYPE = Barline.type;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.layoutMetricsMap = {};\n    this.layoutMetricsMap[TYPE.SINGLE] = {\n      xMin: 0,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.DOUBLE] = {\n      xMin: -3,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.END] = {\n      xMin: -5,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_END] = {\n      xMin: -10,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n      xMin: -2,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n      xMin: -10,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.NONE] = {\n      xMin: 0,\n      xMax: 0,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type);\n  }\n  getCategory() { return Barline.CATEGORY; }\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave) {\n    stave.checkContext();\n    this.setRendered();\n\n    switch (this.type) {\n      case Barline.type.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case Barline.type.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case Barline.type.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case Barline.type.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case Barline.type.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case Barline.type.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n  }\n\n  drawVerticalBar(stave, x, double_bar) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      stave.context.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    stave.context.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave, x) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    stave.context.fillRect(x - 5, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave, x, begin) {\n    stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = (x + x_shift) + (dot_radius / 2);\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = (y_offset / 2) - (stave.getSpacingBetweenLines() / 2);\n    let dot_y = topY + y_offset + (dot_radius / 2);\n\n    // draw the top repeat dot\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class Repetition extends StaveModifier {\n  static get CATEGORY() { return 'repetitions'; }\n  static get type() {\n    return {\n      NONE: 1,         // no coda or segno\n      CODA_LEFT: 2,    // coda at beginning of stave\n      CODA_RIGHT: 3,   // coda at end of stave\n      SEGNO_LEFT: 4,   // segno at beginning of stave\n      SEGNO_RIGHT: 5,  // segno at end of stave\n      DC: 6,           // D.C. at end of stave\n      DC_AL_CODA: 7,   // D.C. al coda at end of stave\n      DC_AL_FINE: 8,   // D.C. al Fine end of stave\n      DS: 9,           // D.S. at end of stave\n      DS_AL_CODA: 10,  // D.S. al coda at end of stave\n      DS_AL_FINE: 11,  // D.S. al Fine at end of stave\n      FINE: 12,        // Fine at end of stave\n    };\n  }\n\n  constructor(type, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Repetition');\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n    this.font = {\n      family: 'times',\n      size: 12,\n      weight: 'bold italic',\n    };\n  }\n\n  getCategory() { return Repetition.CATEGORY; }\n  setShiftX(x) { this.x_shift = x; return this; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'v4d', true);\n    return this;\n  }\n\n  drawSignoFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'v8c', true);\n    return this;\n  }\n\n  drawSymbolText(stave, x, text, draw_coda) {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Default to right symbol\n    let text_x = 0 + this.x_shift;\n    let symbol_x = x + this.x_shift;\n    if (this.symbol_type === Repetition.type.CODA_LEFT) {\n      // Offset Coda text to right of stave beginning\n      text_x = this.x + stave.options.vertical_bar_width;\n      symbol_x = text_x + ctx.measureText(text).width + 12;\n    } else {\n      // Offset Signo text to left stave end\n      symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n      text_x = symbol_x - + ctx.measureText(text).width - 12;\n    }\n\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'v4d', true);\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class StaveSection extends StaveModifier {\n  static get CATEGORY() { return 'stavesection'; }\n\n  constructor(section, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveSection');\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'sans-serif',\n      size: 12,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return StaveSection.CATEGORY; }\n  setStaveSection(section) { this.section = section; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.section).width;\n    let width = text_width + 6;  // add left & right padding\n    if (width < 18) width = 18;\n    const height = 20;\n    //  Seems to be a good default y\n    const y = stave.getYForTopText(3) + this.shift_y;\n    let x = this.x + shift_x;\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n    x += (width - text_width) / 2;\n    ctx.fillText('' + this.section, x, y + 16);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY() { return 'stavetempo'; }\n\n  constructor(tempo, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = Modifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    };\n    this.render_options = {\n      glyph_font_scale: 30,  // font size for note\n    };\n  }\n  getCategory() { return StaveTempo.CATEGORY; }\n  setTempo(tempo) { this.tempo = tempo; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.durationToGlyph(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem);\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `TextNote` is a notation element that is positioned in time. Generally\n// meant for objects that sit above/below the staff and inline with each other.\n// Examples of this would be such as dynamics, lyrics, chord changes, etc.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\nexport class TextNote extends Note {\n  static get Justification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'segno': {\n        code: 'v8c',\n        point: 40,\n        x_shift: 0,\n        y_shift: -10,\n        // width: 10 // optional\n      },\n      'tr': {\n        code: 'v1f',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_upper': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_lower': {\n        code: 'v45',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'f': {\n        code: 'vba',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'p': {\n        code: 'vbf',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'm': {\n        code: 'v62',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      's': {\n        code: 'v4a',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'z': {\n        code: 'v80',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'coda': {\n        code: 'v4d',\n        point: 40,\n        x_shift: 0,\n        y_shift: -8,\n        // width: 10 // optional\n      },\n      'pedal_open': {\n        code: 'v36',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'pedal_close': {\n        code: 'v5d',\n        point: 40,\n        x_shift: 0,\n        y_shift: 3,\n      },\n      'caesura_straight': {\n        code: 'v34',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'caesura_curved': {\n        code: 'v4b',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'breath': {\n        code: 'v6c',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'tick': {\n        code: 'v6f',\n        point: 50,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn': {\n        code: 'v72',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn_inverted': {\n        code: 'v33',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n\n      // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n      'mordent': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n    };\n  }\n\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextNote');\n\n    // Note properties\n    this.text = text_struct.text;\n    this.superscript = text_struct.superscript;\n    this.subscript = text_struct.subscript;\n    this.glyph_type = text_struct.glyph;\n    this.glyph = null;\n    this.font = {\n      family: 'Arial',\n      size: 12,\n      weight: '',\n    };\n\n    // Set font\n    if (text_struct.font) this.font = text_struct.font;\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `canvasmeasureText()`\n    if (this.glyph_type) {\n      const struct = TextNote.GLYPHS[this.glyph_type];\n      if (!struct) throw new Vex.RERR('Invalid glyph type: ' + this.glyph_type);\n\n      this.glyph = new Glyph(struct.code, struct.point, { cache: false });\n\n      if (struct.width) {\n        this.setWidth(struct.width);\n      } else {\n        this.setWidth(this.glyph.getMetrics().width);\n      }\n\n      this.glyph_struct = struct;\n    } else {\n      this.setWidth(Flow.textWidth(this.text));\n    }\n    this.line = text_struct.line || 0;\n    this.smooth = text_struct.smooth || false;\n    this.ignore_ticks = text_struct.ignore_ticks || false;\n    this.justification = TextNote.Justification.LEFT;\n  }\n\n  // Set the horizontal justification of the TextNote\n  setJustification(just) {\n    this.justification = just;\n    return this;\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    this.checkContext();\n\n    if (this.preFormatted) return;\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        this.setWidth(this.context.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      this.extraLeftPx = this.width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      this.extraLeftPx = this.width;\n    }\n\n    this.setPreFormatted(true);\n  }\n\n  // Renders the TextNote\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    let x = this.getAbsoluteX();\n    if (this.justification === TextNote.Justification.CENTER) {\n      x -= this.getWidth() / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      x -= this.getWidth();\n    }\n\n    let y;\n    if (this.glyph) {\n      y = this.stave.getYForLine(this.line + -3);\n      this.glyph.render(\n        this.context,\n        x + this.glyph_struct.x_shift,\n        y + this.glyph_struct.y_shift\n      );\n    } else {\n      y = this.stave.getYForLine(this.line + -3);\n      this.applyStyle(ctx);\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.text, x, y);\n\n      // Width of the letter M gives us the approximate height of the text\n      const height = ctx.measureText('M').width;\n      // Get accurate width of text\n      const width = ctx.measureText(this.text).width;\n\n      // Write superscript\n      if (this.superscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.superscript, x + width + 2, y - (height / 2.2));\n      }\n\n      // Write subscript\n      if (this.subscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.subscript, x + width + 2, y + (height / 2.2) - 1);\n      }\n\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { TextNote } from './textnote';\n\nexport class StaveText extends StaveModifier {\n  static get CATEGORY() { return 'stavetext'; }\n\n  constructor(text, position, options) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    Vex.Merge(this.options, options);\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n  }\n\n  getCategory() { return StaveText.CATEGORY; }\n  setStaveText(text) { this.text = text; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setText(text) {\n    this.text = text;\n  }\n\n  draw(stave) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n//\n// ## Description\n//\n// This file implements various types of clefs that can be rendered on a stave.\n//\n// See `tests/clef_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\nfunction L(...args) { if (Clef.DEBUG) Vex.L('Vex.Flow.Clef', args); }\n\nexport class Clef extends StaveModifier {\n  static get CATEGORY() { return 'clefs'; }\n\n  // Every clef name is associated with a glyph code from the font file\n  // and a default stave line number.\n  static get types() {\n    return {\n      'treble': {\n        code: 'v83',\n        line: 3,\n      },\n      'bass': {\n        code: 'v79',\n        line: 1,\n      },\n      'alto': {\n        code: 'vad',\n        line: 2,\n      },\n      'tenor': {\n        code: 'vad',\n        line: 1,\n      },\n      'percussion': {\n        code: 'v59',\n        line: 2,\n      },\n      'soprano': {\n        code: 'vad',\n        line: 4,\n      },\n      'mezzo-soprano': {\n        code: 'vad',\n        line: 3,\n      },\n      'baritone-c': {\n        code: 'vad',\n        line: 0,\n      },\n      'baritone-f': {\n        code: 'v79',\n        line: 2,\n      },\n      'subbass': {\n        code: 'v79',\n        line: 0,\n      },\n      'french': {\n        code: 'v83',\n        line: 4,\n      },\n      'tab': {\n        code: 'v2f',\n      },\n    };\n  }\n\n  // Sizes affect the point-size of the clef.\n  static get sizes() {\n    return {\n      'default': 40,\n      'small': 32,\n    };\n  }\n\n  // Annotations attach to clefs -- such as \"8\" for octave up or down.\n  static get annotations() {\n    return {\n      '8va': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: -1.2,\n                x_shift: 11,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: -0.4,\n                x_shift: 8,\n              },\n            },\n          },\n        },\n      },\n      '8vb': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: 6.3,\n                x_shift: 10,\n              },\n              'bass': {\n                line: 4,\n                x_shift: 1,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: 5.8,\n                x_shift: 6,\n              },\n              'bass': {\n                line: 3.5,\n                x_shift: 0.5,\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n\n  // Create a new clef. The parameter `clef` must be a key from\n  // `Clef.types`.\n  constructor(type, size, annotation) {\n    super();\n    this.setAttribute('type', 'Clef');\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(this.glyph.getMetrics().width);\n    L('Creating clef:', type);\n  }\n\n  getCategory() { return Clef.CATEGORY; }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n    this.clef.point = Clef.sizes[this.size];\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const anno_dict = Clef.annotations[annotation];\n      this.annotation = {\n        code: anno_dict.code,\n        point: anno_dict.sizes[this.size].point,\n        line: anno_dict.sizes[this.size].attachments[this.type].line,\n        x_shift: anno_dict.sizes[this.size].attachments[this.type].x_shift,\n      };\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  getWidth() {\n    if (this.type === 'tab' && !this.stave) {\n      throw new Vex.RERR('ClefError', \"Can't get width without stave.\");\n    }\n\n    return this.width;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n\n    if (this.type !== 'tab') return this;\n\n    let glyphScale;\n    let glyphOffset;\n    const numLines = this.stave.getOptions().num_lines;\n    switch (numLines) {\n      case 8:\n        glyphScale = 55;\n        glyphOffset = 14;\n        break;\n      case 7:\n        glyphScale = 47;\n        glyphOffset = 8;\n        break;\n      case 6:\n        glyphScale = 40;\n        glyphOffset = 1;\n        break;\n      case 5:\n        glyphScale = 30;\n        glyphOffset = -6;\n        break;\n      case 4:\n        glyphScale = 23;\n        glyphOffset = -12;\n        break;\n      default:\n        throw new Vex.RERR('ClefError', `Invalid number of lines: ${numLines}`);\n    }\n\n    this.glyph.setPoint(glyphScale);\n    this.glyph.setYShift(glyphOffset);\n\n    return this;\n  }\n\n  draw() {\n    if (!this.x) throw new Vex.RERR('ClefError', \"Can't draw clef without x.\");\n    if (!this.stave) throw new Vex.RERR('ClefError', \"Can't draw clef without stave.\");\n    this.setRendered();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setContext(this.stave.context);\n    if (this.clef.line !== undefined) {\n      this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n    }\n\n    this.glyph.renderToStave(this.x);\n\n    if (this.annotation !== undefined) {\n      this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n      this.attachment.setStave(this.stave);\n      this.attachment.setContext(this.stave.context);\n      this.attachment.renderToStave(this.x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class KeySignature extends StaveModifier {\n  static get CATEGORY() { return 'keysignatures'; }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static get accidentalSpacing() {\n    return {\n      '#': {\n        above: 6,\n        below: 4,\n      },\n      'b': {\n        above: 4,\n        below: 7,\n      },\n      'n': {\n        above: 4,\n        below: 1,\n      },\n      '##': {\n        above: 6,\n        below: 4,\n      },\n      'bb': {\n        above: 4,\n        below: 7,\n      },\n      'db': {\n        above: 4,\n        below: 7,\n      },\n      'd': {\n        above: 4,\n        below: 7,\n      },\n      'bbs': {\n        above: 4,\n        below: 7,\n      },\n      '++': {\n        above: 6,\n        below: 4,\n      },\n      '+': {\n        above: 6,\n        below: 4,\n      },\n      '+-': {\n        above: 6,\n        below: 4,\n      },\n      '++-': {\n        above: 6,\n        below: 4,\n      },\n      'bs': {\n        above: 4,\n        below: 10,\n      },\n      'bss': {\n        above: 4,\n        below: 10,\n      },\n    };\n  }\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super();\n    this.setAttribute('type', 'KeySignature');\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  getCategory() { return KeySignature.CATEGORY; }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc, nextAcc) {\n    const accGlyphData = Flow.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.stave, acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec) {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec) {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = Flow.keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types = this.accList.length > 0\n      && cancel_accList.length > 0\n      && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types\n      ? cancel_accList.length\n      : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return undefined;\n\n    // Get the line position for each natural\n    const cancelled = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({ type: 'n', line: acc.line });\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n\n    return {\n      accList: cancelled,\n      type: cancel_accList[0].type\n    };\n  }\n\n  // Deprecated\n  addToStave(stave) {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef, type, accList = this.accList) {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index) {\n    if (!this.formatted) this.format();\n\n    return (\n      this.glyphs.length === 0 || (!this.paddingForced && index < 2) ?\n        0 : this.padding\n    );\n  }\n\n  getWidth() {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec) {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec) {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format() {\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = Flow.keySignature(this.keySpec);\n    const accList = this.accList;\n    const firstAccidentalType = accList.length > 0 ? accList[0].type : null;\n    let cancelAccList;\n    if (this.cancelKeySpec) {\n      cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      const clef = ((this.position === StaveModifier.Position.END) ?\n        this.stave.endClef : this.stave.clef) || this.stave.clef;\n      if (cancelAccList) {\n        this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n      }\n      this.convertAccLines(clef, firstAccidentalType, accList);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(this.stave);\n      glyph.setContext(this.stave.context);\n      glyph.renderToStave(x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { Vex } from './vex';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\n\nconst assertIsValidFraction = (timeSpec) => {\n  const numbers = timeSpec.split('/').filter(number => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new Vex.RERR(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach(number => {\n    if (isNaN(Number(number))) {\n      throw new Vex.RERR(\n        'BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`\n      );\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  static get CATEGORY() { return 'timesignatures'; }\n\n  static get glyphs() {\n    return {\n      'C': {\n        code: 'v41',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'vb6',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec = null, customPadding = 15, validate_args = true) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n    this.validate_args = validate_args;\n\n    if (timeSpec === null) return;\n\n    const padding = customPadding;\n\n    this.point = 40;\n    this.topLine = 2;\n    this.bottomLine = 4;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n    this.setPadding(padding);\n  }\n\n  getCategory() { return TimeSignature.CATEGORY; }\n\n  parseTimeSpec(timeSpec) {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code, point } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      };\n    }\n\n    if (this.validate_args) {\n      assertIsValidFraction(timeSpec);\n    }\n\n    const [topDigits, botDigits] = timeSpec\n      .split('/')\n      .map(number => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    };\n  }\n\n  makeTimeSignatureGlyph(topDigits, botDigits) {\n    const glyph = new Glyph('v0', this.point);\n    glyph.topGlyphs = [];\n    glyph.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('v' + num, this.point);\n\n      glyph.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('v' + num, this.point);\n\n      glyph.botGlyphs.push(botGlyph);\n      botWidth += botGlyph.getMetrics().width;\n    }\n\n    const width = topWidth > botWidth ? topWidth : botWidth;\n    const xMin = glyph.getMetrics().x_min;\n\n    glyph.getMetrics = () => ({\n      x_min: xMin,\n      x_max: xMin + width,\n      width,\n    });\n\n    const topStartX = (width - topWidth) / 2.0;\n    const botStartX = (width - botWidth) / 2.0;\n\n    const that = this;\n    glyph.renderToStave = function renderToStave(x) {\n      let start_x = x + topStartX;\n      for (let i = 0; i < this.topGlyphs.length; ++i) {\n        const glyph = this.topGlyphs[i];\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.topLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n\n      start_x = x + botStartX;\n      for (let i = 0; i < this.botGlyphs.length; ++i) {\n        const glyph = this.botGlyphs[i];\n        that.placeGlyphOnLine(glyph, this.stave, glyph.line);\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.bottomLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n    };\n\n    return glyph;\n  }\n\n  getTimeSig() {\n    return this.timeSig;\n  }\n\n  setTimeSig(timeSpec) {\n    this.timeSig = this.parseTimeSpec(timeSpec);\n    return this;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setContext(this.stave.context);\n    this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n    this.timeSig.glyph.renderToStave(this.x);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class Volta extends StaveModifier {\n  static get CATEGORY() { return 'voltas'; }\n  static get type() {\n    return {\n      NONE: 1,\n      BEGIN: 2,\n      MID: 3,\n      END: 4,\n      BEGIN_END: 5,\n    };\n  }\n\n  constructor(type, number, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return Volta.CATEGORY; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.width;\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n    // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Barline } from './stavebarline';\nimport { StaveModifier } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { Volta } from './stavevolta';\n\nexport class Stave extends Element {\n  constructor(x, y, width, options) {\n    super();\n    this.setAttribute('type', 'Stave');\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = [];  // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.endClef = undefined;\n    this.font = {\n      family: 'sans-serif',\n      size: 8,\n      weight: '',\n    };\n    this.options = {\n      vertical_bar_width: 10,       // Width around vertical bar end-marker\n      glyph_spacing_px: 10,\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true,               // draw vertical bar on left\n      right_bar: true,               // draw vertical bar on right\n      spacing_between_lines_px: 10, // in pixels\n      space_above_staff_ln: 4,      // in staff lines\n      space_below_staff_ln: 4,      // in staff lines\n      top_text_position: 1,          // in staff lines\n    };\n    this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n    Vex.Merge(this.options, options);\n\n    this.resetLines();\n\n    const BARTYPE = Barline.type;\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n  }\n\n  space(spacing) { return this.options.spacing_between_lines_px * spacing; }\n\n  resetLines() {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({ visible: true });\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) *\n      this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  getOptions() { return this.options; }\n\n  setNoteStartX(x) {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    if (this.modifiers.length > 0) {\n      const begBarline = this.modifiers[0];\n      if (begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n        begBarline.setX(this.start_x - begBarline.getWidth());\n      }\n    }\n    return this;\n  }\n  getNoteStartX() {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX() {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n  getTieStartX() { return this.start_x; }\n  getTieEndX() { return this.x + this.width; }\n  getX() { return this.x; }\n  getNumLines() { return this.options.num_lines; }\n  setNumLines(lines) {\n    this.options.num_lines = parseInt(lines, 10);\n    this.resetLines();\n    return this;\n  }\n  setY(y) { this.y = y; return this; }\n\n  getTopLineTopY() {\n    return this.getYForLine(0) - (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n  getBottomLineBottomY() {\n    return this.getYForLine(this.getNumLines() - 1) + (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n\n  setX(x) {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      if (mod.x !== undefined) {\n        mod.x += shift;\n      }\n    }\n    return this;\n  }\n\n  setWidth(width) {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getStyle() {\n    return Object.assign({\n      fillStyle: this.options.fill_style,\n      strokeStyle: this.options.fill_style, // yes, this is correct for legacy compatibility\n      lineWidth: Flow.STAVE_LINE_THICKNESS,\n    }, this.style || {});\n  }\n\n  setMeasure(measure) { this.measure = measure; return this; }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index = 0) {\n    if (typeof index !== 'number') {\n      throw new Vex.RERR('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0];\n    if (begBarline.getType() === Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  // Coda & Segno Symbol functions\n  setRepetitionTypeLeft(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  setRepetitionTypeRight(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type, number_t, y) {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section, y) {\n    this.modifiers.push(new StaveSection(section, this.x, y));\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo, y) {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(text, position, options) {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getSpacingBetweenLines() {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY() {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const score_bottom = this.getYForLine(options.num_lines) +\n      (options.space_below_staff_ln * spacing);\n\n    return score_bottom;\n  }\n\n  getBottomLineY() {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns the y for the *center* of a staff line\n  getYForLine(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    const y = this.y + (line * spacing) + (headroom * spacing);\n\n    return y;\n  }\n\n  getLineForY(y) {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return ((y - this.y) / spacing) - headroom;\n  }\n\n  getYForTopText(line) {\n    const l = line || 0;\n    return this.getYForLine(-l - this.options.top_text_position);\n  }\n\n  getYForBottomText(line) {\n    const l = line || 0;\n    return this.getYForLine(this.options.bottom_text_position + l);\n  }\n\n  getYForNote(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    const y = this.y + (headroom * spacing) + (5 * spacing) - (line * spacing);\n\n    return y;\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(3);\n  }\n\n  addModifier(modifier, position) {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier) {\n    this.addModifier(modifier, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type) {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const { SINGLE, REPEAT_BEGIN, NONE } = Barline.type;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      this.modifiers[0].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type) {\n    // Repeat end not valid at end of stave\n    if (type !== Barline.type.REPEAT_BEGIN) {\n      this.modifiers[1].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setClef(clefSpec, size, annotation, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    if (position === StaveModifier.Position.END) {\n      this.endClef = clefSpec;\n    } else {\n      this.clef = clefSpec;\n    }\n\n    const clefs = this.getModifiers(position, Clef.CATEGORY);\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      clefs[0].setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  setEndClef(clefSpec, size, annotation) {\n    this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  setKeySignature(keySpec, cancelKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, position);\n    } else {\n      keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec, cancelKeySpec) {\n    this.setKeySignature(keySpec, cancelKeySpec, StaveModifier.Position.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec, customPadding, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      timeSignatures[0].setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec, customPadding) {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  addKeySignature(keySpec, cancelKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec)\n      .setPosition(position), position);\n    return this;\n  }\n\n  addClef(clef, size, annotation, position) {\n    if (position === undefined || position === StaveModifier.Position.BEGIN) {\n      this.clef = clef;\n    } else if (position === StaveModifier.Position.END) {\n      this.endClef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef, size, annotation) {\n    this.addClef(clef, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  addTimeSignature(timeSpec, customPadding, position) {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec, customPadding) {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph() {\n    this.addClef('treble');\n    return this;\n  }\n\n  getModifiers(position, category) {\n    if (position === undefined && category === undefined) return this.modifiers;\n\n    return this.modifiers.filter(modifier =>\n      (position === undefined || position === modifier.getPosition()) &&\n      (category === undefined || category === modifier.getCategory())\n    );\n  }\n\n  sortByCategory(items, order) {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format() {\n    const begBarline = this.modifiers[0];\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n    this.sortByCategory(begModifiers, {\n      barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3,\n    });\n\n    this.sortByCategory(endModifiers, {\n      timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3,\n    });\n\n    if (begModifiers.length > 1 &&\n      begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(Barline.type.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(Barline.type.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    const widths = {\n      left: 0,\n      right: 0,\n      paddingRight: 0,\n      paddingLeft: 0,\n    };\n\n    let lastBarlineIdx = 0;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      lastBarlineIdx = (modifier.getCategory() === 'barlines') ? i : lastBarlineIdx;\n\n      widths.right = 0;\n      widths.left = 0;\n      widths.paddingRight = 0;\n      widths.paddingLeft = 0;\n      const layoutMetrics = modifier.getLayoutMetrics();\n\n      if (layoutMetrics) {\n        if (i !== 0) {\n          widths.right = layoutMetrics.xMax || 0;\n          widths.paddingRight = layoutMetrics.paddingRight || 0;\n        }\n        widths.left = (-layoutMetrics.xMin) || 0;\n        widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n\n        if (i === endModifiers.length - 1) {\n          widths.paddingLeft = 0;\n        }\n      } else {\n        widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n        if (i !== 0) {\n          widths.right = modifier.getWidth();\n        }\n        if (i === 0) {\n          widths.left = modifier.getWidth();\n        }\n      }\n      x -= widths.paddingRight;\n      x -= widths.right;\n\n      modifier.setX(x);\n\n      x -= widths.left;\n      x -= widths.paddingLeft;\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      this.applyStyle();\n      if (this.options.line_config[line].visible) {\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + width, y);\n        this.context.stroke();\n      }\n      this.restoreStyle();\n    }\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      // Only draw modifier if it has a draw function\n      if (typeof this.modifiers[i].draw === 'function') {\n        this.modifiers[i].applyStyle(this.context);\n        this.modifiers[i].draw(this, this.getModifierXShift(i));\n        this.modifiers[i].restoreStyle(this.context);\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      const text_width = this.context.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n      this.context.restore();\n    }\n\n    return this;\n  }\n\n  // Draw Simple barlines for backward compatability\n  // Do not delete - draws the beginning bar of the stave\n  drawVertical(x, isDouble) {\n    this.drawVerticalFixed(this.x + x, isDouble);\n  }\n\n  drawVerticalFixed(x, isDouble) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    if (isDouble) {\n      this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n    }\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  drawVerticalBar(x) {\n    this.drawVerticalBarFixed(this.x + x, false);\n  }\n\n  drawVerticalBarFixed(x) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines() {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number, line_config) {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration object is missing the 'visible' property.\"\n      );\n    }\n\n    if (typeof (line_config.visible) !== 'boolean') {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration) {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    // eslint-disable-next-line\n    for (const line_config in lines_configuration) {\n      // Allow 'null' to be used if the caller just wants the default for a particular node.\n      if (!lines_configuration[line_config]) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Stave } from './stave';\n\nexport class TabStave extends Stave {\n  constructor(x, y, width, options) {\n    const tab_options = {\n      spacing_between_lines_px: 13,\n      num_lines: 6,\n      top_text_position: 1,\n    };\n\n    Vex.Merge(tab_options, options);\n    super(x, y, width, tab_options);\n    this.setAttribute('type', 'TabStave');\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph() {\n    this.addClef('tab');\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Dot } from './dot';\nimport { Glyph } from './glyph';\n\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines = [];\n\n  unused_strings.forEach(strings => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString =  strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) ||\n       (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  static get CATEGORY() { return 'tabnotes'; }\n\n  // Initialize the TabNote with a `tab_struct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(tab_struct, draw_stem) {\n    super(tab_struct);\n    this.setAttribute('type', 'TabNote');\n\n    this.ghost = false; // Renders parenthesis around notes\n    // Note properties\n    //\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = tab_struct.positions;\n\n    // Render Options\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: Flow.DEFAULT_TABLATURE_FONT_SCALE,\n      // Flag to draw a stem\n      draw_stem,\n      // Flag to draw dot modifiers\n      draw_dots: draw_stem,\n      // Flag to extend the main stem through the stave and fret positions\n      draw_stem_through_stave: false,\n      // vertical shift from stave line\n      y_shift: 0,\n      // normal glyph scale\n      scale: 1.0,\n      // default tablature font\n      font: '10pt Arial',\n    });\n\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(tab_struct)}`\n      );\n    }\n\n    this.buildStem();\n\n    if (tab_struct.stem_direction) {\n      this.setStemDirection(tab_struct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n\n  reset() {\n    if (this.stave) this.setStave(this.stave);\n  }\n\n  // The ModifierContext category\n  getCategory() { return TabNote.CATEGORY; }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost) {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem() { return this.render_options.draw_stem; }\n\n  // Get the default stem extension for the note\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.tabnote_stem_up_extension\n        : glyph.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Add a dot to the note\n  addDot() {\n    const dot = new Dot();\n    this.dots += 1;\n    return this.addModifier(dot, 0);\n  }\n\n  // Calculate and store the width of the note\n  updateWidth() {\n    this.glyphs = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyph = Flow.tabToGlyph(fret, this.render_options.scale);\n      this.glyphs.push(glyph);\n      this.width = Math.max(glyph.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    this.glyph.getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave) {\n    super.setStave(stave);\n    this.context = stave.context;\n\n    // Calculate the fret number width based on font used\n    let i;\n    if (this.context) {\n      const ctx = this.context;\n      this.width = 0;\n      for (i = 0; i < this.glyphs.length; ++i) {\n        const glyph = this.glyphs[i];\n        const text = '' + glyph.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setRawFont(this.render_options.font);\n          glyph.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyph.getWidth = () => glyph.width;\n        }\n        this.width = Math.max(glyph.getWidth(), this.width);\n      }\n      this.glyph.getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({ str: line }) => stave.getYForLine(line - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions() { return this.positions; }\n\n  // Add self to the provided modifier context `mc`\n  addToModifierContext(mc) {\n    this.setModifierContext(mc);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get the `x` coordinate to the right of the note\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += (-this.width / 2) + this.width + 2;\n\n    return tieStartX;\n  }\n\n  // Get the `x` coordinate to the left of the note\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= (this.width / 2) + 2;\n\n    return tieEndX;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2;  // extra_left_px\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // extra_right_px\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = this.glyph.getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Get the default line for rest\n  getLineForRest() { return this.positions[0].str; }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.setPreFormatted(true);\n  }\n\n  // Get the x position for the stem\n  getStemX() { return this.getCenterGlyphX(); }\n\n  // Get the y position for the stem\n  getStemY() {\n    const num_lines = this.stave.getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.stave.getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag() {\n    const {\n      beam, glyph, context, stem, stem_direction,\n      render_options: { draw_stem, glyph_font_scale },\n    } = this;\n\n    const shouldDrawFlag = beam == null && draw_stem;\n\n    // Now it's the flag's turn.\n    if (glyph.flag && shouldDrawFlag) {\n      const flag_x = this.getStemX() + 1;\n      const flag_y = this.getStemY() - stem.getHeight();\n\n      const flag_code = stem_direction === Stem.DOWN\n        ? glyph.code_flag_downstem // Down stems have flags on the left.\n        : glyph.code_flag_upstem;\n\n      // Draw the Flag\n      Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code);\n    }\n  }\n\n  // Render the modifiers onto the context\n  drawModifiers() {\n    // Draw the modifiers\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled\n      if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n      modifier.setContext(this.context);\n      modifier.drawWithStyle();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough() {\n    const stem_x = this.getStemX();\n    const stem_y = this.getStemY();\n    const ctx = this.context;\n\n    const stem_through = this.render_options.draw_stem_through_stave;\n    const draw_stem = this.render_options.draw_stem;\n    if (draw_stem && stem_through) {\n      const total_lines = this.stave.getNumLines();\n      const strings_used = this.positions.map(position => position.str);\n\n      const unused_strings = getUnusedStringGroups(total_lines, strings_used);\n      const stem_lines = getPartialStemLines(\n        stem_y,\n        unused_strings,\n        this.getStave(),\n        this.getStemDirection()\n      );\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stem_lines.forEach(bounds => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stem_x, bounds[0]);\n        ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions() {\n    const ctx = this.context;\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyph = this.glyphs[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = this.glyph.getWidth();\n      const tab_x = x + (note_glyph_width / 2) - (glyph.getWidth() / 2);\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n\n      if (glyph.code) {\n        Glyph.renderGlyph(ctx, tab_x, y,\n          this.render_options.glyph_font_scale * this.render_options.scale,\n          glyph.code);\n      } else {\n        ctx.save();\n        ctx.setRawFont(this.render_options.font);\n        const text = glyph.text.toString();\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == null && this.render_options.draw_stem;\n\n    this.drawPositions();\n    this.drawStemThrough();\n\n    const stem_x = this.getStemX();\n\n    this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\n    if (render_stem) {\n      this.context.openGroup('stem', null, { pointerBBox: true });\n      this.stem.setContext(this.context).draw();\n      this.context.closeGroup();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\nfunction L(...args) { if (VibratoBracket.DEBUG) Vex.L('Vex.Flow.VibratoBracket', args); }\n\nexport class VibratoBracket extends Element {\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n  }\n\n  // Set line position of the vibrato bracket\n  setLine(line) { this.line = line; return this; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n\n  // Draw the vibrato bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    const y = (this.start)\n      ? this.start.getStave().getYForTopText(this.line)\n      : this.stop.getStave().getYForTopText(this.line);\n\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x = (this.start)\n      ? this.start.getAbsoluteX()\n      : this.stop.getStave().getTieStartX();\n\n    // If stop note is not set then vibrato will be drawn\n    // until the end of the stave\n    const stop_x = (this.stop)\n      ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5\n      : this.start.getStave().getTieEndX() - 10;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifier } from './stavemodifier';\nimport { TimeSignature } from './timesignature';\n\nlet semibrave_rest;\nfunction get_semibrave_rest() {\n  if (!semibrave_rest) {\n    const notehead = new NoteHead({ duration: 'w', note_type: 'r' });\n    semibrave_rest = {\n      glyph_font_scale: notehead.render_options.glyph_font_scale,\n      glyph_code: notehead.glyph_code,\n      width: notehead.getWidth(),\n    };\n  }\n  return semibrave_rest;\n}\n\nexport class MultiMeasureRest extends Element {\n  // Parameters:\n  // * `number_of_measures` - Number of measures.\n  // * `options` - The options object.\n  //   * `show_number` - Show number of measures string or not.\n  //   * `number_line` -  Staff line to render the number of measures string.\n  //   * `number_glyph_point` - Size of the number of measures string glyphs.\n  //   * `padding_left` - Left padding from stave x.\n  //   * `padding_right` - Right padding from stave end x.\n  //   * `line` - Staff line to render rest line or rest symbols.\n  //   * `spacing_between_lines_px` - Spacing between staff lines to\n  // resolve serif height or {2-bar and 4-bar}rest symbol height.\n  //   * `line_thickness` - Rest line thickness.\n  //   * `serif_thickness` - Rest serif line thickness.\n  //   * `use_symbols` - Use rest symbols or not.\n  //   * `symbol_spacing` - Spacing between each rest symbol glyphs.\n  //   * `semibrave_rest_glyph_scale` - Size of the semibrave(1-bar) rest symbol.\n  constructor(number_of_measures, options) {\n    super();\n    this.setAttribute('type', 'MultiMeasureRest');\n\n    this.render_options = {\n      show_number: true,\n      number_line: -0.5,\n      number_glyph_point: 40, // same as TimeSignature.\n\n      padding_left: undefined,\n      padding_right: undefined,\n\n      line: 2,\n\n      spacing_between_lines_px: 10, // same as Stave.\n\n      line_thickness: undefined,\n      serif_thickness: 2,\n\n      use_symbols: false,\n      symbol_spacing: undefined,\n\n      /* same as NoteHead. */\n      semibrave_rest_glyph_scale: Flow.DEFAULT_NOTATION_FONT_SCALE,\n    };\n    Vex.Merge(this.render_options, options);\n\n    this.number_of_measures = number_of_measures;\n    this.xs = {\n      left: NaN,\n      right: NaN,\n    };\n  }\n\n  getXs() {\n    return this.xs;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n    return this;\n  }\n\n  getStave() {\n    return this.stave;\n  }\n\n  drawLine(ctx, left, right, sbl) {\n    const y = this.stave.getYForLine(this.render_options.line);\n    const padding = (right - left) * 0.1;\n\n    left += padding;\n    right -= padding;\n\n    const serif = {\n      thickness: this.render_options.serif_thickness,\n      height: sbl,\n    };\n    let lineThicknessHalf = sbl * 0.25;\n    if (!isNaN(this.render_options.line_thickness)) {\n      lineThicknessHalf = this.render_options.line_thickness * 0.5;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(left, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - sbl);\n    ctx.lineTo(right, y - sbl);\n    ctx.lineTo(right, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + sbl);\n    ctx.lineTo(left, y + sbl);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  drawSymbols(ctx, left, right, sbl) {\n    const n4 = Math.floor(this.number_of_measures / 4);\n    const n = this.number_of_measures % 4;\n    const n2 = Math.floor(n / 2);\n    const n1 = n % 2;\n\n    const semibrave_rest = get_semibrave_rest();\n    const semibrave_rest_width = semibrave_rest.width *\n      (this.render_options.semibrave_rest_glyph_scale / semibrave_rest.glyph_font_scale);\n    const glyphs = {\n      2: {\n        width: semibrave_rest_width * 0.5,\n        height: sbl,\n      },\n      1: {\n        width: semibrave_rest_width,\n      },\n    };\n\n    let spacing = semibrave_rest_width * 1.35;\n    if (!isNaN(this.render_options.symbol_spacing)) {\n      spacing = this.render_options.symbol_spacing;\n    }\n\n    const width = (n4 * glyphs[2].width) + (n2 * glyphs[2].width)\n      + (n1 * glyphs[1].width) + ((n4 + n2 + n1 - 1) * spacing);\n    let x = left + ((right - left) * 0.5) - (width * 0.5);\n    const yTop = this.stave.getYForLine(this.render_options.line - 1);\n    const yMiddle = this.stave.getYForLine(this.render_options.line);\n    const yBottom = this.stave.getYForLine(this.render_options.line + 1);\n\n    ctx.save();\n    ctx.setStrokeStyle('none');\n    ctx.setLineWidth(0);\n\n    for (let i = 0; i < n4; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n2; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n1; ++i) {\n      Glyph.renderGlyph(ctx, x, yTop, this.render_options.semibrave_rest_glyph_scale,\n        semibrave_rest.glyph_code);\n      x += glyphs[1].width + spacing;\n    }\n\n    ctx.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const stave = this.stave;\n    const sbl = this.render_options.spacing_between_lines_px;\n\n    let left = stave.getNoteStartX();\n    let right = stave.getNoteEndX();\n\n    // FIXME: getNoteStartX() returns x+5(barline width) and\n    // getNoteEndX() returns x + width(no barline width) by default. how to fix?\n    const begModifiers = stave.getModifiers(StaveModifier.Position.BEGIN);\n    if (begModifiers.length === 1 && begModifiers[0].getCategory() === 'barlines') {\n      left -= begModifiers[0].getWidth();\n    }\n\n    if (!isNaN(this.render_options.padding_left)) {\n      left = stave.getX() + this.render_options.padding_left;\n    }\n\n    if (!isNaN(this.render_options.padding_right)) {\n      right = stave.getX() + stave.getWidth() - this.render_options.padding_right;\n    }\n\n    this.xs.left = left;\n    this.xs.right = right;\n\n    if (this.render_options.use_symbols) {\n      this.drawSymbols(ctx, left, right, sbl);\n    } else {\n      this.drawLine(ctx, left, right, sbl);\n    }\n\n    if (this.render_options.show_number) {\n      const timeSpec = '/' + this.number_of_measures;\n      const timeSig = new TimeSignature(null, undefined, false);\n      timeSig.point = this.render_options.number_glyph_point;\n      timeSig.setTimeSig(timeSpec);\n      timeSig.setStave(stave);\n      timeSig.x = left + ((right - left) * 0.5) - (timeSig.timeSig.glyph.getMetrics().width * 0.5);\n      timeSig.bottomLine = this.render_options.number_line;\n      timeSig.setContext(ctx).draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\n\n/** @constructor */\nexport class ClefNote extends Note {\n  static get CATEGORY() { return 'clefnote'; }\n\n  constructor(type, size, annotation) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'ClefNote');\n\n    this.setType(type, size, annotation);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getClef() {\n    return this.clef;\n  }\n\n  setContext(context) {\n    this.context = context;\n    this.glyph.setContext(this.context);\n    return this;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  getCategory() { return ClefNote.CATEGORY; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(this.context);\n    }\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setYShift(\n      this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n    this.glyph.renderToStave(abs_x);\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.clef_obj.annotation !== undefined) {\n      const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n      if (!attachment.getContext()) {\n        attachment.setContext(this.context);\n      }\n      attachment.setStave(this.stave);\n      attachment.setYShift(\n        this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n      attachment.setXShift(this.clef_obj.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\n\nimport { Note } from './note';\nimport { KeySignature } from './keysignature';\n\nexport class KeySigNote extends Note {\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'KeySigNote');\n\n    this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    this.keySignature.setStave(this.stave);\n    this.keySignature.format();\n    this.setWidth(this.keySignature.width);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n    this.keySignature.x = this.getAbsoluteX();\n    this.keySignature.setContext(this.context);\n    this.keySignature.draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\n\nexport class TimeSigNote extends Note {\n  constructor(timeSpec, customPadding) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(\n      this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { TabTie } from './tabtie';\n\nexport class TabSlide extends TabTie {\n  static get SLIDE_UP() {\n    return 1;\n  }\n  static get SLIDE_DOWN() {\n    return -1;\n  }\n\n  static createSlideUp(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  constructor(notes, direction) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, 'sl.');\n    this.setAttribute('type', 'TabSlide');\n\n    if (!direction) {\n      const first_fret = notes.first_note.getPositions()[0].fret;\n      const last_fret = notes.last_note.getPositions()[0].fret;\n\n      direction = ((parseInt(first_fret, 10) > parseInt(last_fret, 10)) ?\n        TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP);\n    }\n\n    this.slide_direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n    this.setNotes(notes);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = this.slide_direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new Vex.RERR('BadSlide', 'Invalid slide direction');\n    }\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const slide_y = first_ys[this.first_indices[i]] +\n        this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + (3 * direction));\n      ctx.lineTo(last_x_px, slide_y - (3 * direction));\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Flow } from './tables';\n\nexport class GraceNote extends StaveNote {\n  static get CATEGORY() { return 'gracenotes'; }\n  static get LEDGER_LINE_OFFSET() { return 2; }\n  static get SCALE() { return 0.66; }\n\n  constructor(note_struct) {\n    super(Object.assign(note_struct, {\n      glyph_font_scale: Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n      stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n    }));\n    this.setAttribute('type', 'GraceNote');\n\n    this.slash = note_struct.slash;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension() {\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    const glyph = this.getGlyph();\n    if (glyph) {\n      let ret = super.getStemExtension();\n      if (glyph.stem) {\n        const staveNoteScale = this.getStaveNoteScale();\n        ret = ((Stem.HEIGHT + ret) * staveNoteScale) - Stem.HEIGHT;\n      }\n      return ret;\n    }\n\n    return 0;\n  }\n\n  getCategory() { return GraceNote.CATEGORY; }\n\n  // FIXME: move this to more basic class.\n  getStaveNoteScale() {\n    return this.render_options.glyph_font_scale / Flow.DEFAULT_NOTATION_FONT_SCALE;\n  }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n    const stem = this.stem;\n    if (this.slash && stem) {\n      const staveNoteScale = this.getStaveNoteScale();\n\n      // some magic numbers are based on the staveNoteScale 0.66.\n      const offsetScale = staveNoteScale / 0.66;\n      let slashBBox = undefined;\n      const beam = this.beam;\n      if (beam) {\n        // FIXME: should render slash after beam?\n        if (!beam.postFormatted) {\n          beam.postFormat();\n        }\n\n        slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale,\n          8 * offsetScale,\n          {\n            stem: 6 * offsetScale,\n            beam: 5 * offsetScale,\n          });\n      } else {\n        const stem_direction = this.getStemDirection();\n        const noteHeadBounds = this.getNoteHeadBounds();\n        const noteStemHeight = stem.getHeight();\n        let x = this.getAbsoluteX();\n        let y = stem_direction === Flow.Stem.DOWN ?\n          noteHeadBounds.y_top - noteStemHeight :\n          noteHeadBounds.y_bottom - noteStemHeight;\n\n        const defaultStemExtention = stem_direction === Flow.Stem.DOWN ?\n          this.glyph.stem_down_extension :\n          this.glyph.stem_up_extension;\n\n        let defaultOffsetY = Flow.STEM_HEIGHT;\n        defaultOffsetY -= (defaultOffsetY / 2.8);\n        defaultOffsetY += defaultStemExtention;\n        y += ((defaultOffsetY * staveNoteScale) * stem_direction);\n\n        const offsets = stem_direction === Flow.Stem.UP ? {\n          x1: 1,\n          y1: 0,\n          x2: 13,\n          y2: -9,\n        } : {\n          x1: -4,\n          y1: 1,\n          x2: 13,\n          y2: 9,\n        };\n\n        x += (offsets.x1 * offsetScale);\n        y += (offsets.y1 * offsetScale);\n        slashBBox = {\n          x1: x,\n          y1: y,\n          x2: x + (offsets.x2 * offsetScale),\n          y2: y + (offsets.y2 * offsetScale),\n        };\n      }\n\n      // FIXME: avoide staff lines, leadger lines or others.\n\n      const ctx = this.context;\n      ctx.save();\n      ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n      ctx.beginPath();\n      ctx.moveTo(slashBBox.x1, slashBBox.y1);\n      ctx.lineTo(slashBBox.x2, slashBBox.y2);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n    const beam = this.beam;\n    const beam_slope = beam.slope;\n    const isBeamEndNote = (beam.notes[beam.notes.length - 1] === this);\n    const scaleX = isBeamEndNote ? -1 : 1;\n    const beam_angle = Math.atan(beam_slope * scaleX);\n\n    // slash line intersecting point on beam.\n    const iPointOnBeam = {\n      dx: Math.cos(beam_angle) * slashBeamOffset,\n      dy: Math.sin(beam_angle) * slashBeamOffset,\n    };\n\n    slashStemOffset *= this.getStemDirection();\n    const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n    const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n    const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n    const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n    const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n\n    const stemX = this.getStemX();\n    const stem0X = beam.notes[0].getStemX();\n    const stemY = this.beam.getBeamYToDraw() + ((stemX - stem0X) * beam_slope);\n\n    const ret = {\n      x1: stemX - protrusion_stem_dx,\n      y1: (stemY + slashStemOffset - protrusion_stem_dy),\n      x2: stemX + (iPointOnBeam.dx * scaleX) + protrusion_beam_dx,\n      y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n    };\n    return ret;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { TabNote } from './tabnote';\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY() { return 'gracetabnotes'; }\n\n  constructor(note_struct) {\n    super(note_struct, false);\n    this.setAttribute('type', 'GraceTabNote');\n\n    Vex.Merge(this.render_options, {\n      // vertical shift from stave line\n      y_shift: 0.3,\n      // grace glyph scale\n      scale: 0.6,\n      // grace tablature font\n      font: '7.5pt Arial',\n    });\n\n    this.updateWidth();\n  }\n\n  getCategory() { return GraceTabNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of tunings for tablature.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\n\nexport class Tuning {\n  static get names() {\n    return {\n      'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n      'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n      'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n      'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      'standardBanjo': 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  noteToInteger(noteString) {\n    return Flow.keyProperties(noteString).int_value;\n  }\n\n  setTuning(noteString) {\n    if (Tuning.names[noteString]) {\n      noteString = Tuning.names[noteString];\n    }\n\n    this.tuningString = noteString;\n    this.tuningValues = [];\n    this.numStrings = 0;\n\n    const keys = noteString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n    }\n\n    this.numStrings = keys.length;\n    for (let i = 0; i < this.numStrings; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  getValueForString(stringNum) {\n    const s = parseInt(stringNum, 10);\n    if (s < 1 || s > this.numStrings) {\n      throw new Vex.RERR(\n        'BadArguments', `String number must be between 1 and ${this.numStrings}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  getValueForFret(fretNum, stringNum) {\n    const stringValue = this.getValueForString(stringNum);\n    const f = parseInt(fretNum, 10);\n\n    if (f < 0) {\n      throw new Vex.RERR('BadArguments', 'Fret number must be 0 or higher: ' +\n          fretNum);\n    }\n\n    return stringValue + f;\n  }\n\n  getNoteForFret(fretNum, stringNum) {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return Flow.integerToNote(value) + '/' + octave;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\n\nimport { Vex } from './vex';\nimport { Music } from './music';\n\nexport class KeyManager {\n  constructor(key) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key) {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey() { return this.key; }\n\n  reset() {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new Vex.RERR('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key) {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    };\n  }\n\n  selectNote(note) {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        'note': scaleNote,\n        'accidental': parts.accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        'note': valueNote,\n        'accidental': this.music.getNoteParts(valueNote).accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[\n      this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        'note': originalValueNote,\n        'accidental': this.music.getNoteParts(originalValueNote).accidental,\n        'change': true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] =  modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        'note': modparts.root,\n        'accidental': null,\n        'change': true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      'accidental': parts.accidental,\n      'change': true,\n    };\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Modifier } from './modifier';\n\nexport class StaveHairpin extends Element {\n  static get type() {\n    return {\n      CRESC: 1,\n      DECRESC: 2,\n    };\n  }\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'A valid Formatter must be provide to draw offsets by ticks.'\n      );\n    }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px };\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note,\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes, type) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n    };\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position) {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options) {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'Hairpin needs to have either first_note or last_note set.'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params) {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.getStave().y + firstNote.getStave().height,\n      last_y: lastNote.getStave().y + lastNote.getStave().height,\n      staff_height: firstNote.getStave().height,\n    });\n    return true;\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class Curve extends Element {\n  static get Position() {\n    return {\n      NEAR_HEAD: 1,\n      NEAR_TOP: 2,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      nearHead: Curve.Position.NEAR_HEAD,\n      nearTop: Curve.Position.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from, to, options) {\n    super();\n    this.setAttribute('type', 'Curve');\n\n    this.render_options = {\n      spacing: 2,\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: Curve.Position.NEAR_HEAD,\n      position_end: Curve.Position.NEAR_HEAD,\n      invert: false,\n      cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }],\n    };\n\n    Vex.Merge(this.render_options, options);\n    this.setNotes(from, to);\n  }\n\n  setNotes(from, to) {\n    if (!from && !to) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Curve needs to have either first_note or last_note set.'\n      );\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.from || !this.to);\n  }\n\n  renderCurve(params) {\n    const ctx = this.context;\n    const cps = this.render_options.cps;\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cps[0].x,\n      first_y + (cps[0].y * params.direction),\n      last_x - cp_spacing + cps[1].x,\n      last_y + (cps[1].y * params.direction),\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cps[1].x,\n      last_y + ((cps[1].y + thickness) * params.direction),\n      first_x + cp_spacing + cps[0].x,\n      first_y + ((cps[0].y + thickness) * params.direction),\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position) {\n      return typeof(position) === 'string'\n        ? Curve.PositionString[position]\n        : position;\n    }\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === Curve.Position.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === Curve.Position.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === Curve.Position.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      first_x = last_note.getStave().getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      last_x = first_note.getStave().getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `TextDynamics` which renders traditional\n// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n//\n// You can render any dynamics string that contains a combination of\n// the following letters:  P, M, F, Z, R, S\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\nfunction L(...args) { if (TextDynamics.DEBUG) Vex.L('Vex.Flow.TextDynamics', args); }\n\nexport class TextDynamics extends Note {\n  // The glyph data for each dynamics letter\n  static get GLYPHS() {\n    return {\n      'f': {\n        code: 'vba',\n        width: 12,\n      },\n      'p': {\n        code: 'vbf',\n        width: 14,\n      },\n      'm': {\n        code: 'v62',\n        width: 17,\n      },\n      's': {\n        code: 'v4a',\n        width: 10,\n      },\n      'z': {\n        code: 'v80',\n        width: 12,\n      },\n      'r': {\n        code: 'vb1',\n        width: 12,\n      },\n    };\n  }\n\n  // A `TextDynamics` object inherits from `Note` so that it can be formatted\n  // within a `Voice`.\n  // Create the dynamics marking. `text_struct` is an object\n  // that contains a `duration` property and a `sequence` of\n  // letters that represents the letters to render\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextDynamics');\n\n    this.sequence = text_struct.text.toLowerCase();\n    this.line = text_struct.line || 0;\n    this.glyphs = [];\n\n    Vex.Merge(this.render_options, {\n      glyph_font_size: 40,\n    });\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Preformat the dynamics text\n  preFormat() {\n    let total_width = 0;\n    // Iterate through each letter\n    this.sequence.split('').forEach(letter => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new Vex.RERR('Invalid dynamics character: ' + letter);\n\n      const size =  this.render_options.glyph_font_size;\n      const glyph = new Glyph(glyph_data.code, size);\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Draw the dynamics text on the rendering context\n  draw() {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.stave.getYForLine(this.line + (-3));\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.context, letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\n// Helper function to draw a line with arrow heads\nfunction drawArrowLine(ctx, point1, point2, config) {\n  const both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n  const x1 = point1.x;\n  const y1 = point1.y;\n  const x2 = point2.x;\n  const y2 = point2.y;\n\n  // For ends with arrow we actually want to stop before we get to the arrow\n  // so that wide lines won't put a flat end on the arrow.\n  const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ratio = (distance - config.arrowhead_length / 3) / distance;\n  let end_x;\n  let end_y;\n  let start_x;\n  let start_y;\n  if (config.draw_end_arrow || both_arrows) {\n    end_x = Math.round(x1 + (x2 - x1) * ratio);\n    end_y = Math.round(y1 + (y2 - y1) * ratio);\n  } else {\n    end_x = x2;\n    end_y = y2;\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    start_x = x1 + (x2 - x1) * (1 - ratio);\n    start_y = y1 + (y2 - y1) * (1 - ratio);\n  } else {\n    start_x = x1;\n    start_y = y1;\n  }\n\n  if (config.color) {\n    ctx.setStrokeStyle(config.color);\n    ctx.setFillStyle(config.color);\n  }\n\n  // Draw the shaft of the arrow\n  ctx.beginPath();\n  ctx.moveTo(start_x, start_y);\n  ctx.lineTo(end_x, end_y);\n  ctx.stroke();\n  ctx.closePath();\n\n  // calculate the angle of the line\n  const line_angle = Math.atan2(y2 - y1, x2 - x1);\n  // h is the line length of a side of the arrow head\n  const h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n  let angle1;\n  let angle2;\n  let top_x;\n  let top_y;\n  let bottom_x;\n  let bottom_y;\n\n  if (config.draw_end_arrow || both_arrows) {\n    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n    top_x = x2 + Math.cos(angle1) * h;\n    top_y = y2 + Math.sin(angle1) * h;\n\n    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n    bottom_x = x2 + Math.cos(angle2) * h;\n    bottom_y = y2 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    angle1 = line_angle + config.arrowhead_angle;\n    top_x = x1 + Math.cos(angle1) * h;\n    top_y = y1 + Math.sin(angle1) * h;\n\n    angle2 = line_angle - config.arrowhead_angle;\n    bottom_x = x1 + Math.cos(angle2) * h;\n    bottom_y = y1 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n  }\n}\n\nexport class StaveLine extends Element {\n  // Text Positioning\n  static get TextVerticalPosition() {\n    return {\n      TOP: 1,\n      BOTTOM: 2,\n    };\n  }\n\n  static get TextJustification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'StaveLine');\n\n    this.notes = notes;\n\n    this.text = '';\n\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. Unsupported with Raphael (SVG)\n      line_dash: null,\n      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: null,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n\n    this.setNotes(notes);\n  }\n\n  // Set the font for the `StaveLine` text\n  setFont(font) { this.font = font; return this; }\n  // The the annotation for the `StaveLine`\n  setText(text) { this.text = text; return this; }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Notes needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Connected notes must have similar index sizes'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle() {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle() {\n    const ctx = this.checkContext();\n\n    if (this.font) {\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    }\n\n    if (this.render_options.color) {\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position;\n    let end_position;\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = first_note.getGlyph().getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      drawArrowLine(ctx, start_position, end_position, this.render_options);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = (end_position.x - start_position.x);\n      const center_x = (delta_x / 2) + start_position.x;\n      x = center_x - (text_width / 2);\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x  -  text_width;\n    }\n\n    // Determine the y value to start the text\n    let y;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.getStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.getStave().getYForBottomText(Flow.TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements different types of pedal markings. These notation\n// elements indicate to the performer when to depress and release the a pedal.\n//\n// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n// custom text for the release/depress pedal markings.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\nfunction L(...args) { if (PedalMarking.DEBUG) Vex.L('Vex.Flow.PedalMarking', args); }\n\n// Draws a pedal glyph with the provided `name` on a rendering `context`\n// at the coordinates `x` and `y. Takes into account the glyph data\n// coordinate shifts.\nfunction drawPedalGlyph(name, context, x, y, point) {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point);\n  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n\nexport class PedalMarking extends Element {\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'pedal_depress': {\n        code: 'v36',\n        x_shift: -10,\n        y_shift: 0,\n      },\n      'pedal_release': {\n        code: 'v5d',\n        x_shift: -2,\n        y_shift: 3,\n      },\n    };\n  }\n\n  static get Styles() {\n    return {\n      TEXT: 1,\n      BRACKET: 2,\n      MIXED: 3,\n    };\n  }\n\n  static get StylesString() {\n    return {\n      text: PedalMarking.Styles.TEXT,\n      bracket: PedalMarking.Styles.BRACKET,\n      mixed: PedalMarking.Styles.MIXED,\n    };\n  }\n\n  // Create a sustain pedal marking. Returns the defaults PedalMarking.\n  // Which uses the traditional \"Ped\" and \"*\"\" markings.\n  static createSustain(notes) {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n\n  // Create a sostenuto pedal marking\n  static createSostenuto(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  // Create an una corda pedal marking\n  static createUnaCorda(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  // ## Prototype Methods\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'PedalMarking');\n\n    this.notes = notes;\n    this.style = PedalMarking.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.font = {\n      family: 'Times New Roman',\n      size: 12,\n      weight: 'italic bold',\n    };\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      glyph_point_size: 40,\n      color: 'black',\n    };\n  }\n\n  // Set custom text for the `depress`/`release` pedal markings. No text is\n  // set if the parameter is falsy.\n  setCustomText(depress, release) {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  // Set the pedal marking style\n  setStyle(style) {\n    if (style < 1 && style > 3)  {\n      throw new Vex.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n    }\n\n    this.style = style;\n    return this;\n  }\n\n  // Set the staff line to render the markings on\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the bracket based pedal markings\n  drawBracketed() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    let prev_x;\n    let prev_y;\n    const pedal = this;\n\n    // Iterate through each note\n    this.notes.forEach((note, index, notes) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.getStave().getYForBottomText(pedal.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new Vex.RERR(\n          'InvalidConfiguration', 'The notes provided must be in order of ascending x positions'\n        );\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift = 0;\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift =  prev_is_same ? 5 : 0;\n\n        if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (pedal.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(pedal.custom_depress_text).width;\n            ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n            x_shift = (text_width / 2) + pedal.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n            x_shift = 20 + pedal.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - pedal.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - pedal.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  // Draw the text based pedal markings. This defaults to the traditional\n  // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n  drawText() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    const pedal = this;\n\n    // The glyph point size\n    const point = pedal.render_options.glyph_point_size;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach(note => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.getStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(pedal.line + 3);\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (pedal.custom_depress_text) {\n          text_width = ctx.measureText(pedal.custom_depress_text).width;\n          ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (pedal.custom_release_text) {\n          text_width = ctx.measureText(pedal.custom_release_text).width;\n          ctx.fillText(pedal.custom_release_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  // Render the pedal marking in position on the rendering context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    L('Rendering Pedal Marking');\n\n    if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.style === PedalMarking.Styles.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Renderer } from './renderer';\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\nfunction L(...args) { if (TextBracket.DEBUG) Vex.L('Vex.Flow.TextBracket', args); }\n\nexport class TextBracket extends Element {\n  // FIXME: Modifier.Position is singular while this is plural, make consistent\n  static get Positions() {\n    return {\n      TOP: 1,\n      BOTTOM: -1,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      top: TextBracket.Positions.TOP,\n      bottom: TextBracket.Positions.BOTTOM,\n    };\n  }\n\n  constructor({\n    start,\n    stop,\n    text = '',\n    superscript = '',\n    position = TextBracket.Positions.TOP,\n  }) {\n    super();\n    this.setAttribute('type', 'TextBracket');\n\n    this.start = start;\n    this.stop = stop;\n\n    this.text = text;\n    this.superscript = superscript;\n\n    this.position = typeof position === 'string'\n      ? TextBracket.PositionString[position]\n      : position;\n\n    this.line = 1;\n\n    this.font = {\n      family: 'Serif',\n      size: 15,\n      weight: 'italic',\n    };\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  // Apply the text backet styling to the provided `context`\n  applyStyle(context) {\n    // Apply style for the octave bracket\n    context.setFont(this.font.family, this.font.size, this.font.weight);\n    context.setStrokeStyle(this.render_options.color);\n    context.setFillStyle(this.render_options.color);\n    context.setLineWidth(this.render_options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed, dash) {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the font for the text\n  setFont(font) {\n    // We use Object.assign to support partial updates to the font object\n    this.font = Object.assign({}, this.font, font);\n    return this;\n  }\n  // Set the rendering `context` for the octave bracket\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the octave bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracket.Positions.TOP:\n        y =  this.start.getStave().getYForTopText(this.line);\n        break;\n      case TextBracket.Positions.BOTTOM:\n        y =  this.start.getStave().getYForBottomText(this.line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = { x: this.start.getAbsoluteX(), y };\n    const stop = { x: this.stop.getAbsoluteX(), y };\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_width = ctx.measureText(this.text).width;\n    const main_height = ctx.measureText('M').width;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - (main_height / 2.5);\n\n    // Draw the superscript\n    ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const superscript_width = ctx.measureText(this.superscript).width;\n    const super_height = ctx.measureText('M').width;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyph().getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracket.Positions.TOP) {\n      start_x += main_width + superscript_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracket.Positions.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += superscript_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(\n        ctx,\n        start_x,\n        line_y,\n        end_x,\n        line_y,\n        this.render_options.dash\n      );\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + (1 * this.position),\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n// be added to a voice and rendered in the middle of a stave. Since it has no\n// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n//\n// See `tests/barnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Barline } from './stavebarline';\n\n// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\nfunction L(...args) { if (BarNote.DEBUG) Vex.L('Vex.Flow.BarNote', args); }\n\nexport class BarNote extends Note {\n  constructor(type = Barline.type.SINGLE) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'BarNote');\n\n    this.metrics = {\n      widths: {},\n    };\n\n    const TYPE = Barline.type;\n    this.metrics.widths = {\n      [TYPE.SINGLE]: 8,\n      [TYPE.DOUBLE]: 12,\n      [TYPE.END]: 15,\n      [TYPE.REPEAT_BEGIN]: 14,\n      [TYPE.REPEAT_END]: 14,\n      [TYPE.REPEAT_BOTH]: 18,\n      [TYPE.NONE]: 0,\n    };\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.setType(type);\n  }\n\n  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    /* overridden to ignore */\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Render note to stave.\n  draw() {\n    this.checkContext();\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.stave);\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n\nimport { Vex } from './vex';\nimport { StemmableNote } from './stemmablenote';\n\nexport class GhostNote extends StemmableNote {\n  /** @constructor */\n  constructor(parameter) {\n    // Sanity check\n    if (!parameter) {\n      throw new Vex.RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    let note_struct;\n\n    // Preserve backwards-compatibility\n    if (typeof (parameter) === 'string') {\n      note_struct = { duration: parameter };\n    } else if (typeof (parameter) === 'object') {\n      note_struct = parameter;\n    } else {\n      throw new Vex.RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    super(note_struct);\n    this.setAttribute('type', 'GhostNote');\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  isRest() { return true; }\n\n  setStave(stave) {\n    super.setStave(stave);\n  }\n\n  addToModifierContext() { /* intentionally overridden */ return this; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    // Draw the modifiers\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(this.context);\n      modifier.drawWithStyle();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n//\n// This class implements tremolo notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\n\nexport class Tremolo extends Modifier {\n  static get CATEGORY() { return 'tremolo'; }\n  static get YOFFSETSTEMUP() { return -9; }\n  static get YOFFSETSTEMDOWN() { return -21; }\n  static get XOFFSETSTEMUP() { return 6; }\n  static get XOFFSETSTEMDOWN() { return -2; }\n  constructor(num) {\n    super();\n    this.setAttribute('type', 'Tremolo');\n\n    this.num = num;\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'v74';\n  }\n\n  getCategory() { return Tremolo.CATEGORY; }\n\n  draw() {\n    this.checkContext();\n\n    if (!(this.note && this.index != null)) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n    }\n\n    this.setRendered();\n    const stemDirection = this.note.getStemDirection();\n    this.y_spacing = 4 * stemDirection;\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    let y = this.note.stem.getExtents().topY;\n    const scale = this.note.getCategory() === 'gracenotes' ? GraceNote.SCALE : 1;\n    if (stemDirection < 0) {\n      y += Tremolo.YOFFSETSTEMDOWN * scale;\n    } else {\n      y += Tremolo.YOFFSETSTEMUP * scale;\n    }\n\n    this.font = {\n      family: 'Arial',\n      size: 16 * scale,\n      weight: '',\n    };\n\n    this.render_options = {\n      font_scale: 35 * scale,\n      stroke_px: 3,\n      stroke_spacing: 10 * scale,\n    };\n\n    x += stemDirection < 0 ? Tremolo.XOFFSETSTEMDOWN : Tremolo.XOFFSETSTEMUP;\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code);\n      y += this.y_spacing;\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(...args) { if (Crescendo.DEBUG) Vex.L('Vex.Flow.Crescendo', args); }\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height =  params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x,  y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x,  y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x,  y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  // Initialize the crescendo's properties\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n\n    Vex.Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0,\n    });\n  }\n\n  // Set the line to center the element on\n  setLine(line) { this.line = line; return this; }\n\n  // Set the full height at the open end\n  setHeight(height) { this.height = height; return this; }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc) {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat() { this.preFormatted = true; return this; }\n\n  // Render the Crescendo object onto the canvas\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x  = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n    L(\n      'Drawing ',\n      this.decrescendo ? 'decrescendo ' : 'crescendo ',\n      this.height,\n      'x',\n      begin_x - end_x\n    );\n\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\n\nimport { Vex } from './vex';\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\nfunction L(...args) { if (Parser.DEBUG) Vex.L('Vex.Flow.Parser', args); }\n\nexport const X = Vex.MakeException('ParserError');\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers.\nfunction flattenMatches(results) {\n  if (results.matchedString !== undefined) return results.matchedString;\n  if (results.results) return flattenMatches(results.results);\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches);\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n  // the EasyScore grammar in easyscore.js.\n  constructor(grammar) {\n    this.grammar = grammar;\n  }\n\n  // Parse `line` using current grammar. Returns {success: true} if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line) {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = -1;\n    const results = this.expect(this.grammar.begin());\n    results.errorPos = this.errorPos;\n    return results;\n  }\n\n  matchFail(returnPos) {\n    if (this.errorPos === -1) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess() {\n    this.errorPos = -1;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token, noSpace = false) {\n    const regexp = noSpace\n      ? new RegExp('^((' + token + '))')\n      : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      };\n    } else {\n      return {\n        success: false,\n        pos: this.pos,\n      };\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  expectOne(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = (maybe === true) || (rule.maybe === true);\n\n    // Execute all sub rules in sequence.\n    for (let i = 0; i < rule.expect.length; i++) {\n      const next = rule.expect[i];\n      const localPos = this.pos;\n      const result = this.expect(next);\n\n      // If `rule.or` is set, then return success if any one\n      // of the subrules match, else all subrules must match.\n      if (result.success) {\n        results.push(result);\n        oneMatch = true;\n        if (rule.or) break;\n      } else {\n        allMatches = false;\n        if (!rule.or) {\n          this.pos = localPos;\n          break;\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || (maybe === true);\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches: gotOne ? 1 : 0 };\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success) {\n        numMatches++;\n        results.push(result.results);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = (numMatches > 0) || (maybe === true);\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches };\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule) {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided the `rules` function. This\n  // ofloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(rules) {\n    L('Evaluating rules:', rules);\n    let result;\n    if (!rules) {\n      throw new X('Invalid Rule: ' + rules, rules);\n    }\n\n    // Get rule from Grammar class.\n    const rule = rules.bind(this.grammar)();\n\n    if (rule.token) {\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, (rule.noSpace === true));\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos;\n      }\n    } else if (rule.expect) {\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      throw new X('Bad grammar! No `token` or `expect` property', rule);\n    }\n\n    // If there's a trigger attached to this rule, then pull it.\n    result.matches = [];\n    if (result.results) result.results.forEach(r => result.matches.push(flattenMatches(r)));\n    if (rule.run && result.success) rule.run(result);\n    return result;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a parser for a simple language to generate\n// VexFlow objects.\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Parser } from './parser';\nimport { Articulation } from './articulation';\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\nfunction L(...args) { if (EasyScore.DEBUG) Vex.L('Vex.Flow.EasyScore', args); }\n\nexport const X = Vex.MakeException('EasyScoreError');\n\nclass Grammar {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  begin() { return this.LINE; }\n\n  LINE() {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    };\n  }\n  PIECE() {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    };\n  }\n  PIECES() {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    };\n  }\n  PARAMS() {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    };\n  }\n  CHORDORNOTE() {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    };\n  }\n  CHORD() {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      run: (state) => this.builder.addChord(state.matches[1]),\n    };\n  }\n  NOTES() {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    };\n  }\n  NOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    };\n  }\n  SINGLENOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state) =>\n        this.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]),\n    };\n  }\n  ACCIDENTAL() {\n    return {\n      expect: [this.ACCIDENTALS],\n      maybe: true,\n    };\n  }\n  DOTS() {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      run: (state) => this.builder.setNoteDots(state.matches[0]),\n    };\n  }\n  TYPE() {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      run: (state) => this.builder.setNoteType(state.matches[2]),\n    };\n  }\n  DURATION() {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      run: (state) => this.builder.setNoteDuration(state.matches[1]),\n    };\n  }\n  OPTS() {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    };\n  }\n  KEYVALS() {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    };\n  }\n  KEYVAL() {\n    const unquote = (str) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n    };\n  }\n  VAL()  {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    };\n  }\n\n  KEY()         { return { token: '[a-zA-Z][a-zA-Z0-9]*' }; }\n  DVAL()        { return { token: '[\"][^\"]*[\"]' }; }\n  SVAL()        { return { token: \"['][^']*[']\" }; }\n  NOTENAME()    { return { token: '[a-gA-G]' }; }\n  OCTAVE()      { return { token: '[0-9]+' }; }\n  ACCIDENTALS() { return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' }; }\n  DURATIONS()   { return { token: '[0-9whq]+' }; }\n  TYPES()       { return { token: '[rRsSxX]' }; }\n  LPAREN()      { return { token: '[(]' }; }\n  RPAREN()      { return { token: '[)]' }; }\n  COMMA()       { return { token: '[,]' }; }\n  DOT()         { return { token: '[.]' }; }\n  SLASH()       { return { token: '[/]' }; }\n  MAYBESLASH()  { return { token: '[/]?' }; }\n  EQUALS()      { return { token: '[=]' }; }\n  LBRACKET()    { return { token: '\\\\[' }; }\n  RBRACKET()    { return { token: '\\\\]' }; }\n  EOL()         { return { token: '$' }; }\n}\n\nclass Builder {\n  constructor(factory) {\n    this.factory = factory;\n    this.commitHooks = [];\n    this.reset();\n  }\n\n  reset(options = {}) {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n    };\n    this.elements = {\n      notes: [],\n      accidentals: [],\n    };\n    this.rollingDuration = '8';\n    this.resetPiece();\n    Object.assign(this.options, options);\n  }\n\n  getFactory() { return this.factory; }\n\n  getElements() { return this.elements; }\n\n  addCommitHook(commitHook) {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece() {\n    L('resetPiece');\n    this.piece = {\n      chord: [],\n      duration: this.rollingDuration,\n      dots: 0,\n      type: undefined,\n      options: {},\n    };\n  }\n\n  setNoteDots(dots) {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration) {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type) {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key, value) {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key, accid, octave) {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({ key, accid, octave });\n  }\n\n  addSingleNote(key, accid, octave) {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  addChord(notes) {\n    L('startChord');\n    if (typeof(notes[0]) !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach(n => {\n        if (n) this.addNote(...n);\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece() {\n    L('commitPiece');\n    const { factory } = this;\n\n    if (!factory) return;\n\n    const options = Object.assign({}, this.options, this.piece.options);\n    const { stem, clef } = options;\n    const autoStem = stem.toLowerCase() === 'auto';\n    const stemDirection = !autoStem && stem.toLowerCase() === 'up'\n      ? StaveNote.STEM_UP\n      : StaveNote.STEM_DOWN;\n\n    // Build StaveNotes.\n    const { chord, duration, dots, type } = this.piece;\n    const keys = chord.map(note => note.key + '/' + note.octave);\n    const note = factory.StaveNote({\n      keys,\n      duration,\n      dots,\n      type,\n      clef,\n      auto_stem: autoStem,\n    });\n    if (!autoStem) note.setStemDirection(stemDirection);\n\n    // Attach accidentals.\n    const accids = chord.map(note => note.accid || null);\n    accids.forEach((accid, i) => {\n      if (accid) note.addAccidental(i, factory.Accidental({ type: accid }));\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) note.addDotToAll();\n\n    this.commitHooks.forEach(fn => fn(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.concat(accids);\n    this.resetPiece();\n  }\n}\n\nfunction setId({ id }, note) {\n  if (id === undefined) return;\n\n  note.setAttribute('id', id);\n}\n\n\nfunction setClass(options, note) {\n  if (!options.class) return;\n\n  const commaSeparatedRegex = /\\s*,\\s*/;\n\n  options.class\n    .split(commaSeparatedRegex)\n    .forEach(className => note.addClass(className));\n}\n\nexport class EasyScore {\n  constructor(options = {}) {\n    this.setOptions(options);\n    this.defaults = {\n      clef: 'treble',\n      time: '4/4',\n      stem: 'auto',\n    };\n  }\n\n  set(defaults) {\n    Object.assign(this.defaults, defaults);\n    return this;\n  }\n\n  setOptions(options) {\n    this.options = Object.assign({\n      factory: null,\n      builder: null,\n      commitHooks: [\n        setId,\n        setClass,\n        Articulation.easyScoreHook,\n      ],\n      throwOnError: false,\n    }, options);\n\n    this.factory = this.options.factory;\n    this.builder = this.options.builder || new Builder(this.factory);\n    this.grammar = new Grammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    this.options.commitHooks.forEach(commitHook => this.addCommitHook(commitHook));\n    return this;\n  }\n\n  setContext(context) {\n    if (this.factory) this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line, options = {}) {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      throw new X('Error parsing line: ' + line, result);\n    }\n    return result;\n  }\n\n  beam(notes, options = {}) {\n    this.factory.Beam({ notes, options });\n    return notes;\n  }\n\n  tuplet(notes, options = {}) {\n    this.factory.Tuplet({ notes, options });\n    return notes;\n  }\n\n  notes(line, options = {}) {\n    options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  voice(notes, voiceOptions) {\n    voiceOptions = Object.assign({ time: this.defaults.time }, voiceOptions);\n    return this.factory.Voice(voiceOptions).addTickables(notes);\n  }\n\n  addCommitHook(commitHook) {\n    return this.builder.addCommitHook(commitHook);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\n\nimport { Vex } from './vex';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { StringNumber } from './stringnumber';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Renderer } from './renderer';\nimport { Stave } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveConnector } from './staveconnector';\nimport { System } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve } from './curve';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { EasyScore } from './easyscore';\nimport { TimeSigNote } from './timesignote';\nimport { KeySigNote } from './keysignote';\nimport { ClefNote } from './clefnote';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { VibratoBracket } from './vibratobracket';\nimport { GhostNote } from './ghostnote';\nimport { BarNote } from './barnote';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextNote } from './textnote';\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\nfunction L(...args) { if (Factory.DEBUG) Vex.L('Vex.Flow.Factory', args); }\n\nexport const X = Vex.MakeException('FactoryError');\n\nfunction setDefaults(params = {}, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  constructor(options) {\n    L('New factory: ', options);\n    const defaults = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        context: null,\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: '',\n      },\n    };\n\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId, width = 500, height = 200) {\n    return new Factory({ renderer: { elementId, width, height } });\n  }\n\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions() { return this.options; }\n  setOptions(options) {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n    if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer() {\n    const { elementId, backend, width, height, background } = this.options.renderer;\n    if (elementId === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getStave() { return this.stave; }\n  getVoices() { return this.voices; }\n\n  // Returns pixels from current stave spacing.\n  space(spacing) { return this.options.stave.space * spacing; }\n\n  Stave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space,\n      },\n    });\n\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space * 1.3,\n      },\n    });\n\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct) {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct) {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params) {\n    params = setDefaults(params, {\n      type: 'single',\n      options: {},\n    });\n\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params) {\n    params = setDefaults(params, {\n      type: 'treble',\n      options: {\n        size: 'default',\n      },\n    });\n\n    const clefNote = new ClefNote(params.type, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  KeySigNote(params) {\n    const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n    if (this.stave) keySigNote.setStave(this.stave);\n    keySigNote.setContext(this.context);\n    this.renderQ.push(keySigNote);\n    return keySigNote;\n  }\n\n  TabNote(noteStruct) {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params) {\n    params = setDefaults(params, {\n      type: null,\n      options: {},\n    });\n\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    });\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  Articulation(params) {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {},\n    });\n\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {},\n    });\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    });\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext() {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext() {\n    return new ModifierContext();\n  }\n\n  MultiMeasureRest(params) {\n    const multimeasurerest = new MultiMeasureRest(params.number_of_measures, params);\n    multimeasurerest.setContext(this.context);\n    this.renderQ.push(multimeasurerest);\n    return multimeasurerest;\n  }\n\n  Voice(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n    const voice = new Voice(params.time);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params) {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {},\n    });\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter() {\n    return new Formatter();\n  }\n\n  Tuplet(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n        secondaryBeamBreaks: [],\n      },\n    });\n\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {},\n    });\n\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {\n        direction: undefined,\n      },\n    });\n\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    }, params.text);\n\n    if (params.options.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      options: {},\n    });\n\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options.text) line.setText(params.options.text);\n    if (params.options.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {\n        harsh: false,\n      },\n    });\n\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      text: '',\n      options: {\n        superscript: '',\n        position: 1,\n      },\n    });\n\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {}) {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        style: 'mixed',\n      },\n    });\n\n    const pedal = new PedalMarking(params.notes);\n    pedal.setStyle(PedalMarking.StylesString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  draw() {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a musical system, which is a collection of staves,\n// each which can have one or more voices. All voices across all staves in\n// the system are formatted together.\n\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\n\nfunction setDefaults(params, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class System extends Element {\n  constructor(params = {}) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  setOptions(options = {}) {\n    this.options = setDefaults(options, {\n      x: 10,\n      y: 10,\n      width: 500,\n      connector: null,\n      spaceBetweenStaves: 12, // stave spaces\n      factory: null,\n      debugFormatter: false,\n      formatIterations: 0,   // number of formatter tuning steps\n      options: {},\n    });\n\n    this.factory = this.options.factory || new Factory({ renderer: { el: null } });\n  }\n\n  setContext(context) {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  addConnector(type = 'double') {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    });\n    return this.connector;\n  }\n\n  addStave(params) {\n    params = setDefaults(params, {\n      stave: null,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      options: { left_bar: false },\n    });\n\n    if (!params.stave) {\n      params.stave = this.factory.Stave({\n        x: this.options.x,\n        y: this.options.y,\n        width: this.options.width,\n        options: params.options,\n      });\n    }\n\n    params.voices.forEach(voice =>\n      voice\n        .setContext(this.context)\n        .setStave(params.stave)\n        .getTickables()\n        .forEach(tickable => tickable.setStave(params.stave))\n    );\n\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  format() {\n    const formatter = new Formatter();\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices = [];\n    const debugNoteMetricsYs = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach(part => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      formatter.joinVoices(part.voices);\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach(part => part.stave.setNoteStartX(startX));\n    const justifyWidth = this.options.width - (startX - this.options.x) - Note.STAVEPADDING;\n    formatter.format(allVoices, justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune();\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  draw() {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach(d => {\n      d.voice.getTickables().forEach(note => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Renderer } from './renderer';\nimport { Formatter } from './formatter';\nimport { Music } from './music';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveNote } from './stavenote';\nimport { StaveModifier } from './stavemodifier';\nimport { StaveTempo } from './stavetempo';\nimport { Voice } from './voice';\nimport { Accidental } from './accidental';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabStave } from './tabstave';\nimport { TabNote } from './tabnote';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { TickContext } from './tickcontext';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Barline } from './stavebarline';\nimport { NoteHead } from './notehead';\nimport { StaveConnector } from './staveconnector';\nimport { ClefNote } from './clefnote';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Stem } from './stem';\nimport { TabTie } from './tabtie';\nimport { Clef } from './clef';\nimport { Dot } from './dot';\nimport { Modifier } from './modifier';\nimport { TabSlide } from './tabslide';\nimport { Tuplet } from './tuplet';\nimport { GraceNote } from './gracenote';\nimport { GraceTabNote } from './gracetabnote';\nimport { Tuning } from './tuning';\nimport { KeyManager } from './keymanager';\nimport { StaveHairpin } from './stavehairpin';\nimport { BoundingBox } from './boundingbox';\nimport { Stroke } from './strokes';\nimport { TextNote } from './textnote';\nimport { Curve } from './curve';\nimport { TextDynamics } from './textdynamics';\nimport { StaveLine } from './staveline';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { FretHandFinger } from './frethandfinger';\nimport { Repetition } from './staverepetition';\nimport { BarNote } from './barnote';\nimport { GhostNote } from './ghostnote';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Tremolo } from './tremolo';\nimport { StringNumber } from './stringnumber';\nimport { Crescendo } from './crescendo';\nimport { Volta } from './stavevolta';\nimport { Font } from './fonts/vexflow_font';\nimport { System } from './system';\nimport { Factory } from './factory';\nimport { Parser } from './parser';\nimport { EasyScore } from './easyscore';\nimport { Registry } from './registry';\n\nVex.Flow = Flow;\nVex.Flow.Element = Element;\nVex.Flow.Fraction = Fraction;\nVex.Flow.Renderer = Renderer;\nVex.Flow.Formatter = Formatter;\nVex.Flow.Music = Music;\nVex.Flow.Glyph = Glyph;\nVex.Flow.Stave = Stave;\nVex.Flow.StaveNote = StaveNote;\nVex.Flow.StaveModifier = StaveModifier;\nVex.Flow.StaveTempo = StaveTempo;\nVex.Flow.Voice = Voice;\nVex.Flow.Accidental = Accidental;\nVex.Flow.Beam = Beam;\nVex.Flow.StaveTie = StaveTie;\nVex.Flow.TabStave = TabStave;\nVex.Flow.TabNote = TabNote;\nVex.Flow.Bend = Bend;\nVex.Flow.Vibrato = Vibrato;\nVex.Flow.VibratoBracket = VibratoBracket;\nVex.Flow.Note = Note;\nVex.Flow.ModifierContext = ModifierContext;\nVex.Flow.MultiMeasureRest = MultiMeasureRest;\nVex.Flow.TickContext = TickContext;\nVex.Flow.Articulation = Articulation;\nVex.Flow.Annotation = Annotation;\nVex.Flow.Barline = Barline;\nVex.Flow.NoteHead = NoteHead;\nVex.Flow.StaveConnector = StaveConnector;\nVex.Flow.ClefNote = ClefNote;\nVex.Flow.KeySignature = KeySignature;\nVex.Flow.KeySigNote = KeySigNote;\nVex.Flow.TimeSignature = TimeSignature;\nVex.Flow.TimeSigNote = TimeSigNote;\nVex.Flow.Stem = Stem;\nVex.Flow.TabTie = TabTie;\nVex.Flow.Clef = Clef;\nVex.Flow.Dot = Dot;\nVex.Flow.Modifier = Modifier;\nVex.Flow.TabSlide = TabSlide;\nVex.Flow.Tuplet = Tuplet;\nVex.Flow.GraceNote = GraceNote;\nVex.Flow.GraceTabNote = GraceTabNote;\nVex.Flow.Tuning = Tuning;\nVex.Flow.KeyManager = KeyManager;\nVex.Flow.StaveHairpin = StaveHairpin;\nVex.Flow.BoundingBox = BoundingBox;\nVex.Flow.Stroke = Stroke;\nVex.Flow.TextNote = TextNote;\nVex.Flow.Curve = Curve;\nVex.Flow.TextDynamics = TextDynamics;\nVex.Flow.StaveLine = StaveLine;\nVex.Flow.Ornament = Ornament;\nVex.Flow.PedalMarking = PedalMarking;\nVex.Flow.TextBracket = TextBracket;\nVex.Flow.FretHandFinger = FretHandFinger;\nVex.Flow.Repetition = Repetition;\nVex.Flow.BarNote = BarNote;\nVex.Flow.GhostNote = GhostNote;\nVex.Flow.NoteSubGroup = NoteSubGroup;\nVex.Flow.GraceNoteGroup = GraceNoteGroup;\nVex.Flow.Tremolo = Tremolo;\nVex.Flow.StringNumber = StringNumber;\nVex.Flow.Crescendo = Crescendo;\nVex.Flow.Volta = Volta;\nVex.Flow.Font = Font;\nVex.Flow.System = System;\nVex.Flow.Factory = Factory;\nVex.Flow.Parser = Parser;\nVex.Flow.EasyScore = EasyScore;\nVex.Flow.Registry = Registry;\n\nexport default Vex;\n"],"sourceRoot":""}