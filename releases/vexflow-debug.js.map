{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 363b091fecf8d6bbdef0","webpack:///./src/vex.js","webpack:///./src/tables.js","webpack:///./src/glyph.js","webpack:///./src/element.js","webpack:///./src/modifier.js","webpack:///./src/stavenote.js","webpack:///./src/note.js","webpack:///./src/stavemodifier.js","webpack:///./src/stem.js","webpack:///./src/fraction.js","webpack:///./src/formatter.js","webpack:///./src/voice.js","webpack:///./src/tickcontext.js","webpack:///./src/boundingbox.js","webpack:///./src/renderer.js","webpack:///./src/beam.js","webpack:///./src/stavetie.js","webpack:///./src/articulation.js","webpack:///./src/tuplet.js","webpack:///./src/staveconnector.js","webpack:///./src/stemmablenote.js","webpack:///./src/dot.js","webpack:///./src/modifiercontext.js","webpack:///./src/frethandfinger.js","webpack:///./src/accidental.js","webpack:///./src/music.js","webpack:///./src/notesubgroup.js","webpack:///./src/gracenotegroup.js","webpack:///./src/tabtie.js","webpack:///./src/stringnumber.js","webpack:///./src/annotation.js","webpack:///./src/bend.js","webpack:///./src/vibrato.js","webpack:///./src/stave.js","webpack:///./src/stavebarline.js","webpack:///./src/textnote.js","webpack:///./src/clef.js","webpack:///./src/timesignature.js","webpack:///./src/tabnote.js","webpack:///./src/registry.js","webpack:///./src/fonts/vexflow_font.js","webpack:///./src/notehead.js","webpack:///./src/tickable.js","webpack:///./src/strokes.js","webpack:///./src/ornament.js","webpack:///./src/staverepetition.js","webpack:///./src/keysignature.js","webpack:///./src/stavevolta.js","webpack:///./src/tabstave.js","webpack:///./src/vibratobracket.js","webpack:///./src/clefnote.js","webpack:///./src/timesignote.js","webpack:///./src/gracenote.js","webpack:///./src/curve.js","webpack:///./src/textdynamics.js","webpack:///./src/staveline.js","webpack:///./src/pedalmarking.js","webpack:///./src/textbracket.js","webpack:///./src/barnote.js","webpack:///./src/ghostnote.js","webpack:///./src/system.js","webpack:///./src/factory.js","webpack:///./src/easyscore.js","webpack:///./src/parser.js","webpack:///./src/index.js","webpack:///./src/boundingboxcomputation.js","webpack:///./src/canvascontext.js","webpack:///./src/raphaelcontext.js","webpack:///./src/svgcontext.js","webpack:///./src/stavesection.js","webpack:///./src/stavetempo.js","webpack:///./src/stavetext.js","webpack:///./src/tabslide.js","webpack:///./src/gracetabnote.js","webpack:///./src/tuning.js","webpack:///./src/keymanager.js","webpack:///./src/stavehairpin.js","webpack:///./src/tremolo.js","webpack:///./src/crescendo.js"],"names":["Vex","L","block","args","line","Array","prototype","slice","call","join","window","console","log","MakeException","name","exception","message","data","Error","RuntimeError","code","RERR","Merge","destination","source","property","Min","Math","min","Max","max","forEach","a","fn","i","length","RoundN","x","n","parseInt","MidLine","b","mid_line","SortAndUnique","arr","cmp","eq","newArr","last","sort","push","Contains","obj","getCanvasContext","canvas_sel","canvas","document","getElementById","getContext","drawDot","ctx","y","color","save","setFillStyle","beginPath","arc","PI","closePath","fill","restore","BM","s","f","start_time","Date","getTime","elapsed","StackTrace","err","stack","W","Prefix","prefix","text","Flow","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RESOLUTION","DEFAULT_NOTATION_FONT_SCALE","DEFAULT_TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","TEXT_HEIGHT_OFFSET_HACK","IsKerned","clefProperties","clef","props","values","line_shift","keyProperties","key","params","undefined","options","octave_shift","pieces","split","k","toUpperCase","value","note_values","octave","base_index","index","stroke","int_value","int_val","shift_right","glyph_name","note_glyph","accidental","displaced","rest","stem_up_y_offset","stem_down_y_offset","integerToNote","integer","noteValue","table","tabToGlyph","fret","scale","glyph","width","shift_y","toString","glyphMetrics","Glyph","getMetrics","height","textWidth","getWidth","articulationCodes","articulations","artic","between_lines","accidentalCodes","accidentals","acc","parenRightPaddingAdjustment","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","ornamentCodes","ornaments","keySignature","keySpec","keySpecs","spec","notes","accidentalList","acc_list","num","type","unicode","String","fromCharCode","patterns","parseNoteDurationString","durationString","regexp","result","exec","duration","dots","parseNoteData","noteData","durationStringData","ticks","durationToTicks","keys","currentTicks","sanitizeDuration","alias","durationAliases","durations","durationToFraction","Fraction","parse","durationToNumber","durationToGlyph","duration_codes","glyphTypeProperties","customGlyphTypeProperties","code_head","common","stem","stem_offset","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","beam_count","code_flag_upstem","code_flag_downstem","smufl","to_code_points","bracketTop","bracketBottom","barlineTick","segno","coda","gClef","cClef","fClef","unpitchedPercussionClef1","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","noteheadDoubleWhole","noteheadWhole","noteheadHalf","noteheadBlack","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleX","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalFlat","accidentalNatural","accidentalSharp","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalBuyukMucennebFlat","accidentalBakiyeFlat","accidentalKomaSharp","accidentalKucukMucennebSharp","accidentalKoron","accidentalSori","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articStaccatissimoAbove","articMarcatoAbove","fermataAbove","fermataBelow","breathMarkComma","breathMarkUpbow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restHalf","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentMordentInverted","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","wiggleArpeggiatoUp","arrowheadBlackUp","arrowheadBlackDown","TIME4_4","num_beats","beat_value","resolution","processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","command","nextX","nextY","q","font","cache","glyphs","x_min","x_max","ha","o","cached_outline","x_pos","y_pos","point","val","nocache","Font","metrics","loadMetrics","renderOutline","moveTo","m","bind","l","lineTo","quadraticCurveTo","bezierCurveTo","bboxComp","BoundingBoxComputation","addPoint","addQuadraticCurve","addBezierCurve","BoundingBox","x1","y1","setAttribute","x_shift","y_shift","originShift","setOptions","reset","stave","bbox","getOutlineBoundingBox","getW","getH","abs","getX","xShift","getY","yShift","setOriginX","setOriginY","setRendered","applyStyle","restoreStyle","checkContext","context","getYForGlyphs","Element","ID","attrs","id","newID","el","classes","boundingBox","rendered","Registry","getDefaultRegistry","register","style","getStyle","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","className","registry","onUpdate","getAttribute","oldValue","Modifier","LEFT","RIGHT","ABOVE","BELOW","above","Position","below","left","right","note","text_line","modifier_context","spacingFromNextModifier","CATEGORY","c","PositionString","subNotes","tickContext","getTickContext","extraPx","getExtraPx","subNoteXOffset","extraLeft","getSpacingFromNextModifier","subNote","subTickContext","setStave","setXOffset","StaveNote","DEBUG","getStemAdjustment","Stem","WIDTH","getStemDirection","isInnerNoteIndex","UP","keyProps","shiftRestVertical","dir","delta","isrest","maxLine","minLine","setKeyLine","getKeyLine","centerRest","noteU","noteL","state","getStave","formatByY","notesList","getKeyProps","minL","stemDirection","stemMax","getStemLength","stemMin","getStemMinumumLength","maxL","isRest","voice_shift","getVoiceShiftWidth","is_displaced","isDisplaced","voices","noteM","voiceXShift","stemDelta","lineSpacing","setStemLength","setXShift","restHeight","space","hasStave","topNote","bottomNote","DOWN","topKeys","bottomKeys","HALF_NOTEHEAD_HEIGHT","topNotBottomY","getYForLine","bottomNoteTopY","areNotesColliding","right_shift","postFormat","noteStruct","beam","noteType","JSON","stringify","use_default_head_x","note_heads","modifiers","render_options","glyph_font_scale","stroke_px","DEFAULT_LEDGER_LINE_OFFSET","calculateKeyProps","buildStem","auto_stem","autoStem","setStemDirection","stem_direction","buildFlag","noteHeadStyles","map","noteHead","buildNoteHeads","setStyle","head","calcExtraPx","getGlyph","setStem","hide","getKeys","lastLine","lineDiff","start","end","step","noteProps","notehead","NoteHead","note_type","custom_glyph_code","MIDDLE_LINE","decider","Infinity","preFormatted","w","modLeftPx","extraLeftPx","getAbsoluteX","minY","maxY","halfLineSpacing","getSpacingBetweenLines","ys","frac","equals","getStemExtents","baseY","topY","yy","isTopNote","resultLine","thisLine","getCenterGlyphX","textLine","extents","getYForTopText","annotation_spacing","setYs","getNoteHeadBounds","y_top","y_bottom","setYBounds","tieStartX","getGlyphWidth","extraRightPx","modifierContext","getExtraRightPx","tieEndX","restLine","top","bot","hasFlag","getStem","ledgerLineStyle","flagStyle","mContext","setModifierContext","addModifier","setPreFormatted","modifier","setNote","setIndex","articulation","annotation","dot","Dot","setDotShiftY","addDot","getModifiers","setExtraLeftPx","setExtraRightPx","preFormat","setWidth","yTop","yBottom","nonDisplacedX","displacedX","highestLine","getNumLines","lowestLine","highestDisplacedLine","lowestDisplacedLine","highestNonDisplacedLine","lowestNonDisplacedLine","getLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","xBegin","getNoteHeadBeginX","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getLedgerLineStyle","getYForNote","openGroup","getIndex","noteheadStyle","setContext","draw","closeGroup","shouldRenderFlag","noteStemHeight","getHeight","flagX","getStemX","flagY","pointerBBox","getFlagStyle","render","stemStruct","shouldRenderStem","hasStem","setX","stemX","setNoteHeadXBounds","isChord","drawLedgerLines","drawStem","drawNoteHeads","drawFlag","drawModifiers","StemmableNote","Note","yPos","xStart","xPre1","xAbs","xPost1","noteWidth","xPost2","xEnd","modRightPx","xFreedomRight","getFormatterMetrics","freedom","xWidth","setFont","fillText","round","getXShift","x2","formatterMetrics","iterations","spaceDeviation","deviation","note_struct","initData","duration_override","setDuration","setIntrinsicTicks","positions","playNote","ignore_ticks","left_modPx","right_modPx","voice","align_center","setCenterAlignment","stave_padding","STAVEPADDING","tc","mc","left_shift","getNoteStartX","isCenterAligned","getCenterXShift","extra","Tickable","StaveModifier","BEGIN","END","padding","renderToStave","setYShift","x_begin","x_end","stem_extension","isStemlet","stemletHeight","renderHeightAdjustment","direction","ext","y_offset","HEIGHT","isStemUp","stemHeight","innerMostNoteheadY","outerMostNoteheadY","stemTipY","isVisible","stem_x","stem_y","stemletYOffset","t","GCD","LCM","arg0","shift","LCMM","numerator","denominator","set","u","d","gcd","param1","param2","otherNumerator","otherDenominator","lcm","compare","__compareA","copy","simplify","__compareB","subtract","greaterThanEquals","greaterThan","floor","__tmp","quotient","fraction","toSimplifiedString","str","Formatter","lookAhead","nextRestLine","shouldIgnoreTicks","getLineForRest","createContexts","ContextType","addToContext","totalTicks","getTotalTicks","resolutionMultiplier","reduce","getMode","Voice","Mode","STRICT","isComplete","getResolutionMultiplier","tickToContextMap","tickList","contexts","ticksUsed","getTickables","integerTicks","newContext","tickable","add","getTicks","array","list","paddingBetween","addToModifierContext","ModifierContext","tick","TickContext","addTickable","formatter","xPos","y2","contextGaps","fillRect","gaps","gap","total","lossHistory","loss","auto_beam","align_rests","setMode","SOFT","addTickables","beams","Beam","applyAndGetBeams","joinVoices","formatToStave","getBoundingBox","tabstave","tabnotes","autobeam","opts","notevoice","tabvoice","StaveConnector","alignAllNotes","alignTuplets","tuplet","minTotalWidth","hasMinTotalWidth","tickContexts","modiferContexts","AlignRestsToNotes","createTickContexts","contextList","contextMap","tContexts","getTicksUsed","clone","justifyWidth","renderingContext","centerX","remainingX","leftoverPxPerTick","spaceAccum","prevTick","tickSpace","getCenterAlignedTickables","center_x_shift","evaluate","prevContext","prevMetrics","insideRightEdge","insideLeftEdge","durationStats","updateStats","stats","mean","count","leftNoteEdge","rightNote","rightMetrics","rightNoteEdge","used","totalDeviation","pow","totalCost","sqrt","sum","means","move","current","prev","next","nextContext","cost","minShift","postFormatContexts","createModifierContexts","alignRests","getNoteEndX","format","FULL","time","match","tickables","smallestTickCount","largestTickWidth","mode","voiceGroup","bb","mergeWith","g","strict","lessThan","setVoice","tickable_bb","tContext","indexOf","currentTick","maxTicks","minTicks","xBase","xOffset","notePx","filter","extraRight","setTickContext","postFormatted","that","h","new_x","new_y","new_w","new_h","rect","lastContext","Renderer","elementId","backend","background","renderer","resize","setBackgroundFillStyle","buildContext","Backends","CANVAS","RAPHAEL","SVG","USE_CANVAS_PROXY","CanvasContext","methodNames","vexFlowCanvasContext","methodName","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","cos","ny","sin","VML","NONE","element","paper","bolsterCanvasContext","RaphaelContext","SVGContext","devicePixelRatio","calculateStemDirection","lineSum","keyProp","getStemSlope","firstNote","lastNote","firstStemTipY","firstStemX","lastStemTipY","lastStemX","time_sig","defaults","groups","beatTotal","beatValue","tripleMeter","group","generateBeams","config","tickGroups","multiply","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","vf_notes","memo","nextTickGroup","createGroups","nextGroup","unprocessedNote","ticksPerGroup","unbeamable","pop","getBeamGroups","beamable","getIntrinsicTicks","sanitizeGroups","sanitizedGroups","tempGroup","isFirstOrLast","prevNote","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","currentDirection","isUnbeamableDuration","shouldBreak","formatStems","findFirstNote","applyStemDirection","getTuplets","uniqueTuplets","beamedNoteGroups","allTuplets","show_stemlets","secondary_breaks","secondary_break_ticks","flat_beams","flat_beam_offset","Tuplet","LOCATION_BOTTOM","LOCATION_TOP","setTupletLocation","bracketed","setBracketed","getCategory","stem_weight","setBeam","getBeamCount","break_on_indices","beam_width","max_slope","min_slope","slope_iterations","slope_cost","stemlet_extension","partial_beam_length","min_flat_beam_offset","beamCounts","maxBeamCount","beamCount","indices","first_x_px","first_y_px","slope","initialSlope","increment","minCost","Number","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","getSlopeY","diff","idealSlope","distanceFromIdeal","extremeY","extremeBeamCount","currentExtreme","getYs","offset","beamWidth","extremeTest","newOffset","beamedStemTipY","preBeamExtension","getExtension","beamExtension","setExtension","totalBeamWidth","setVisibility","setStemlet","beam_lines","beam_started","current_beam","previous_should_break","tick_tally","should_break","note_gets_beam","next_note","beam_next","last_beam","valid_beam_durations","beamY","beamThickness","beamLines","getBeamLines","j","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","calculateFlatSlope","calculateSlope","applyStemExtensions","drawStems","drawBeamLines","StaveTie","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","family","size","setNotes","first_note","last_note","first_indices","last_indices","first_ys","last_ys","last_x_px","cp_x","last_y_px","isNaN","top_cp_y","bottom_cp_y","center_x","measureText","getTieRightX","getTieStartX","getTieLeftX","getTieEndX","renderTie","renderText","Articulation","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","snapLineToStaff","canSitBetweenLines","offsetDirection","snappedLine","canSnapToStaffSpace","onStaffLine","HALF_STAFF_SPACE","isStaveNote","noteCategory","getTopY","stemBaseY","getBottomY","getYForBottomText","getInitialOffset","isOnStemTip","isAbove","getPosition","isBelow","margin","getIncrement","setTextLine","top_text_line","maxWidth","articWidth","builder","articNameToCode","staccato","tenuto","articString","trim","getFactory","font_scale","staffSpace","isTab","getModifierStartXY","shouldSitOutsideStaff","initialOffset","setOrigin","INITIAL_OFFSET","noteLine","distanceFromNote","articLine","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","some","ratioed","location","resolveGlyphs","attach","setTuplet","resetTuplet","msg","warn","getNotesOccupied","beats","setNotesOccupied","detach","num_glyphs","denom_glyphs","maxTupletCount","countTuplets","minTupletCount","tupletStack","tupletCount","nested_tuplet_y_offset","getNestedTupletCount","NESTING_OFFSET","top_y","bottom_y","getYPosition","addGlyphWidth","notation_center_x","notation_start_x","line_width","x_offset","colon_x","colon_radius","drawBoldDoubleLine","topX","botY","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","thickLineOffset","SINGLE_RIGHT","SINGLE_LEFT","SINGLE","DOUBLE","BRACE","BRACKET","THIN_DOUBLE","singleRight","singleLeft","single","double","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","none","top_stave","bottom_stave","thickness","weight","texts","typeString","content","shift_x","isRightSidedConnector","attachment_height","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","renderGlyph","text_width","getBottomLineY","stemExtensionOverride","flagCode","getStemExtension","setDirection","getExtents","stem_struct","dot_spacing","dot_list","getNote","dot_shift","x_width","last_line","prev_dotted_space","half_shiftY","radius","lineSpace","spacing_between_lines_px","spacing","PREFORMAT","FretHandFinger","Accidental","Stroke","GraceNoteGroup","NoteSubGroup","StringNumber","Ornament","Annotation","Bend","Vibrato","POSTFORMAT","formatted","extra_left_px","extra_right_px","nums","num_spacing","nums_list","prev_note","shiftLeft","shiftRight","pos","props_tmp","getExtraLeftPx","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","num_shift","numWidth","number","finger","dot_x","dot_y","noteheadAccidentalPadding","leftShift","accidentalSpacing","accList","propsTemp","accLine","lineList","accShift","previousLine","flatLine","dblSharpLine","numAcc","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","lines","groupLength","endCase","groupMember","column","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","line1","line2","clearance","clearanceRequired","collision","tickPositions","tickNoteMap","tickPosition","notesAtPosition","music","Music","scaleMap","createScaleMap","modifiedPitches","processNote","keyString","keyIndex","getNoteParts","accidentalString","pitch","root","sameAccidental","previouslyModified","addAccidental","getGraceNotes","parenLeftPadding","parenRightPadding","cautionary","parenLeft","parenRight","fontScale","parenWidth","accX","accY","NUM_TONES","interval","isValidNoteValue","noteString","toLowerCase","regex","noteValues","intervalString","intervals","canonical_notes","intervalValue","isValidIntervalValue","diatonic_intervals","parts","rootValue","getNoteValue","multiplier","reverse_interval","relativeNoteName","tones","nextNote","getRelativeNoteValue","note1","note2","difference","keySigParts","getKeyParts","scaleName","scaleTypes","keySigString","getScaleTones","noteLocation","root_indices","roots","rootName","noteName","getRelativeNoteName","major","dorian","mixolydian","minor","scales","root_index","setStrict","getMinTotalWidth","alignSubNotesWithNote","gracenote_groups","group_spacing_stave","group_spacing_tab","group_list","gracenote_group","is_stavenote","group_shift","formatWidth","setSpacingFromNextModifier","grace_notes","show_slur","slur","slur_y_shift","graceNote","TieClass","TabTie","shift_left","num_shiftL","num_shiftR","x_widthL","x_widthR","num_width","string_number","dashed","leg","LineEndType","line_space","stem_ext","bottom","STEM_DOWN","lineCap","drawDashedLine","len","pattern","annotations","CENTER","CENTER_STEM","Justify","center","centerStem","TOP","BOTTOM","VerticalJustify","justification","vert_justification","just","VerticalJustifyString","JustifyString","text_height","has_stem","stem_base","yt","yb","bends","last_width","bend","release","phrase","line_style","bend_width","release_width","updateWidth","measure_text","total_width","additional_width","draw_width","bend_height","annotation_y","renderBend","cp_y","renderRelease","renderArrowHead","setRawFont","render_x","last_bend","last_drawn_width","vibratos","vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vx","vy","renderVibrato","num_waves","Stave","start_x","end_x","measure","vertical_bar_width","glyph_spacing_px","num_lines","fill_style","left_bar","right_bar","space_above_staff_ln","space_below_staff_ln","top_text_position","bounds","resetLines","BARTYPE","Barline","addEndModifier","line_config","visible","bottom_text_position","mod","begBarline","getType","REPEAT_BEGIN","Repetition","number_t","Volta","section","StaveSection","tempo","StaveTempo","StaveText","score_bottom","headroom","setPosition","setType","clefSpec","clefs","Clef","addClef","setClef","cancelKeySpec","keySignatures","KeySignature","addKeySignature","setKeySig","setKeySignature","timeSpec","customPadding","timeSignatures","TimeSignature","addTimeSignature","setTimeSig","setTimeSignature","category","items","order","temp","endBarline","begModifiers","endModifiers","sortByCategory","barlines","keysignatures","timesignatures","splice","getPadding","getModifierXShift","isDouble","drawVerticalFixed","top_line","bottom_line","drawVerticalBarFixed","line_number","lines_configuration","REPEAT_END","REPEAT_BOTH","repeatBegin","repeatEnd","repeatBoth","TYPE","widths","paddings","setPadding","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","getTopLineTopY","getBottomLineBottomY","begin","dot_radius","TextNote","text_struct","superscript","subscript","glyph_type","struct","GLYPHS","glyph_struct","smooth","Justification","sizes","attachments","types","anno_dict","attachment","glyphScale","glyphOffset","numLines","getOptions","setPoint","placeGlyphOnLine","assertIsValidFraction","numbers","topLine","bottomLine","timeSig","topDigits","botDigits","makeTimeSignatureGlyph","topGlyphs","botGlyphs","topWidth","topGlyph","botWidth","botGlyph","xMin","topStartX","botStartX","parseTimeSpec","getUnusedStringGroups","strings_used","stem_through","string","is_used","getPartialStemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","containsLastString","strings","containsFirstString","line_ys","isTopBound","isBottomBound","TabNote","tab_struct","draw_stem","ghost","draw_dots","draw_stem_through_stave","stem_extension_override","getStemY","note_glyph_width","stemUpLine","stemDownLine","stemStartLine","shouldDrawFlag","flag_x","flag_y","flag_code","tab_x","clearRect","render_stem","drawPositions","drawStemThrough","X","setIndexValue","elem","clear","class","INDEXES","updateIndex","onRegister","attrName","Object","getElementsByAttribute","includes","concat","defaultRegistry","drawSlashNoteHead","staveSpace","breve_lines","head_options","STEM_UP","glyph_code","custom_glyph","slashed","displacementStemAdjustment","half_spacing","min_y","setY","head_x","intrinsicTicks","tickMultiplier","noteCount","notesOccupied","getNoteCount","applyTickMultiplier","strokes","stroke_spacing","strokeList","getPositions","strokeShift","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","ROLL_UP","RASQUEDO_DOWN","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","all_voices","note_end","getModifierContext","arrow","arrow_shift_x","arrow_y","text_y","Type","ornament","delayed","accidentalUpper","accidentalLower","accidentalLowerPadding","accidentalUpperPadding","accid","stemDir","stemExtents","isPlacedOnNoteheadSide","totalSpacing","glyphYBetweenLines","glyphX","glyphY","delayXShift","getNextContext","CODA_LEFT","CODA_RIGHT","SEGNO_LEFT","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","symbol_type","drawCodaFixed","drawSymbolText","drawSignoFixed","draw_coda","text_x","symbol_x","alterKeySpec","glyphFontScale","xPositions","paddingForced","nextAcc","accGlyphData","extraWidth","xPosition","glyphWidth","cancel_accList","different_types","naturals","cancelled","customLines","convertToCancelAccList","firstAccidentalType","convertToAlterAccList","convertAccLines","convertToGlyph","MID","BEGIN_END","volta","vert_height","TabStave","tab_options","VibratoBracket","bracket_data","stop","stop_x","ClefNote","clef_obj","abs_x","TimeSigNote","timeSignature","getTimeSig","GraceNote","SCALE","LEDGER_LINE_OFFSET","slash","ret","Curve","NEAR_HEAD","NEAR_TOP","nearHead","nearTop","from","to","position_end","invert","cps","first_x","first_y","last_x","last_y","cp_spacing","metric","end_metric","renderCurve","TextDynamics","sequence","glyph_font_size","glyph_data","letter","letter_x","current_letter","drawArrowHead","x0","y0","drawArrowLine","point1","point2","both_arrows","draw_start_arrow","draw_end_arrow","distance","ratio","arrowhead_length","end_y","start_y","line_angle","arrowhead_angle","angle1","angle2","top_x","bottom_x","StaveLine","padding_left","padding_right","line_dash","rounded_end","text_position_vertical","TextVerticalPosition","text_justification","TextJustification","setLineDash","setLineCap","applyLineStyle","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","first_displaced","last_displaced","delta_x","vertical_position","applyFontStyle","PedalMarking","drawPedalGlyph","pedal","Styles","MIXED","setCustomText","TEXT","mixed","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","glyph_point_size","depress","is_pedal_depressed","prev_x","prev_y","next_is_same","prev_is_same","drawBracketed","drawText","TextBracket","Positions","dash","show_bracket","underline_superscript","main_width","main_height","super_y","superscript_width","super_height","line_y","BarNote","barline","GhostNote","parameter","setDefaults","default_options","System","connector","spaceBetweenStaves","factory","debugFormatter","formatIterations","Factory","spaceAbove","spaceBelow","debugNoteMetrics","startX","allVoices","debugNoteMetricsYs","part","setNoteStartX","tune","lastY","plotDebugging","plotMetrics","face","renderQ","systems","staves","initRenderer","ghostNote","textNoteStruct","textNote","barNote","clefNote","timeSigNote","vJustify","hJustify","fontFamily","fontSize","fontWeight","setJustification","setVerticalJustification","fingering","stringNumber","secondaryBeamBreaks","breakSecondaryAt","curve","tie","setText","vibratoBracket","setLine","setHarsh","textBracket","system","EasyScore","StylesString","isRendered","Grammar","LINE","expect","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","run","commitPiece","COMMA","zeroOrMore","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","or","LPAREN","NOTES","RPAREN","addChord","matches","NOTE","oneOrMore","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","ACCIDENTALS","maybe","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","unquote","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","token","Builder","commitHooks","elements","rollingDuration","resetPiece","commitHook","piece","chord","addNote","accids","addDotToAll","setId","setClass","commaSeparatedRegex","addClass","easyScoreHook","throwOnError","grammar","parser","Parser","addCommitHook","success","getElements","voiceOptions","flattenMatches","results","matchedString","errorPos","returnPos","noSpace","RegExp","workingLine","incrementPos","rule","allMatches","oneMatch","localPos","gotOne","matchSuccess","matchFail","numMatches","more","expectOne","expectOneOrMore","rules","matchToken","expectZeroOrMore","r","TabSlide","GraceTabNote","Tuning","KeyManager","StaveHairpin","Tremolo","Crescendo","NaN","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","p3x","p3y","p0","p1","p2","p3","addX","addY","b2ac","t1","t2","background_fillStyle","blur","cap_type","lineDash","parseFloat","startAngle","endAngle","antiClockwise","glow","Raphael","path","pen","font_family","font_size","font_weight","attributes","background_attributes","shadow_attributes","state_stack","transform","setSize","viewBox","attr","normalizeAngle","tmp","arcHelper","largeArcFlag","sweepFlag","out","sa","num_paths","toFixed","opacity","strokeWidth","txt","getBBox","remove","attrNamesToIgnoreMap","fontAttrNamesToIgnore","svgNS","svg","create","appendChild","parent","iePolyfill","svgElementType","createElementNS","cls","navigator","ie","test","userAgent","bold","italic","replace","fontAttributes","fontArray","applyAttributes","visibleWidth","visibleHeight","setViewBox","yMin","viewBoxString","attrNamesToIgnore","nodeName","propertyName","setAttributeNS","lastChild","removeChild","rectangle","textContent","ieMeasureTextFix","widthCorrection","box","bpm","stem_height","SLIDE_UP","SLIDE_DOWN","first_fret","last_fret","slide_direction","slide_y","tuningString","setTuning","names","tuningValues","numStrings","noteToInteger","stringNum","fretNum","stringValue","getValueForString","getValueForFret","setKey","keyParts","is_supported_type","scaleMapByValue","originalScaleMapByValue","scaleNote","modparts","valueNote","originalValueNote","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","left_shift_px","right_shift_px","setRenderOptions","CRESC","DECRESC","hairpin","dis","staff_height","l_shift","r_shift","renderHairpin","y_spacing","begin_x","half_height","reverse","decrescendo","extend_left","extend_right","decresc","tick_context","next_context"],"mappings":"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","file":"build/vexflow-debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 64);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 363b091fecf8d6bbdef0","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n\nconst Vex = () => {};\n\n// Default log function sends all arguments to console.\nVex.L = (block, args) => {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log(block + ': ' + line);\n};\n\nVex.MakeException = (name) => {\n  const exception = class extends Error {\n    constructor(message, data) {\n      super(message);\n      this.name = name;\n      this.message = message;\n      this.data = data;\n    }\n  };\n\n  return exception;\n};\n\n// Default runtime exception.\nclass RuntimeError {\n  constructor(code, message) {\n    this.code = code;\n    this.message = message;\n  }\n\n  toString() {\n    return '[RuntimeError] ' + this.code + ':' + this.message;\n  }\n}\n\n// Shortcut method for `RuntimeError`.\nVex.RuntimeError = RuntimeError;\nVex.RERR = Vex.RuntimeError;\n\n// Merge `destination` hash with `source` hash, overwriting like keys\n// in `source` if necessary.\nVex.Merge = (destination, source) => {\n  for (const property in source) { // eslint-disable-line guard-for-in\n    destination[property] = source[property];\n  }\n  return destination;\n};\n\n// DEPRECATED. Use `Math.*`.\nVex.Min = Math.min;\nVex.Max = Math.max;\nVex.forEach = (a, fn) => {\n  for (let i = 0; i < a.length; i++) {\n    fn(a[i], i);\n  }\n};\n\n// Round number to nearest fractional value (`.5`, `.25`, etc.)\nVex.RoundN = (x, n) =>\n  (x % n) >= (n / 2)\n    ? parseInt(x / n, 10) * n + n\n    : parseInt(x / n, 10) * n;\n\n// Locate the mid point between stave lines. Returns a fractional line if a space.\nVex.MidLine = (a, b) => {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n};\n\n// Take `arr` and return a new list consisting of the sorted, unique,\n// contents of arr. Does not modify `arr`.\nVex.SortAndUnique = (arr, cmp, eq) => {\n  if (arr.length > 1) {\n    const newArr = [];\n    let last;\n    arr.sort(cmp);\n\n    for (let i = 0; i < arr.length; ++i) {\n      if (i === 0 || !eq(arr[i], last)) {\n        newArr.push(arr[i]);\n      }\n      last = arr[i];\n    }\n\n    return newArr;\n  } else {\n    return arr;\n  }\n};\n\n// Check if array `a` contains `obj`.\nVex.Contains = (a, obj) => {\n  let i = a.length;\n  while (i--) {\n    if (a[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Get the 2D Canvas context from DOM element `canvas_sel`.\nVex.getCanvasContext = canvas_sel => {\n  if (!canvas_sel) {\n    throw new Vex.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n  }\n\n  const canvas = document.getElementById(canvas_sel);\n  if (!(canvas && canvas.getContext)) {\n    throw new Vex.RERR(\n      'UnsupportedBrowserError', 'This browser does not support HTML5 Canvas'\n    );\n  }\n\n  return canvas.getContext('2d');\n};\n\n// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n//\n// `ctx`: Canvas context.\n// `x`, `y`: Dot coordinates.\nVex.drawDot = (ctx, x, y, color = '#55') => {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\nVex.BM = (s, f) => {\n  const start_time = new Date().getTime();\n  f();\n  const elapsed = new Date().getTime() - start_time;\n  Vex.L(s + elapsed + 'ms');\n};\n\n// Get stack trace.\nVex.StackTrace = () => {\n  const err = new Error();\n  return err.stack;\n};\n\n// Dump warning to console.\nVex.W = (...args) => {\n  const line = args.join(' ');\n  window.console.log('Warning: ', line, Vex.StackTrace());\n};\n\n// Used by various classes (e.g., SVGContext) to provide a\n// unique prefix to element names (or other keys in shared namespaces).\nVex.Prefix = text => Vex.Prefix.prefix + text;\nVex.Prefix.prefix = 'vf-';\n\nexport { Vex };\n\n\n\n// WEBPACK FOOTER //\n// ./src/vex.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/* eslint-disable key-spacing */\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\n\nconst Flow = {\n  STEM_WIDTH: 1.5,\n  STEM_HEIGHT: 35,\n  STAVE_LINE_THICKNESS: 1,\n  RESOLUTION: 16384,\n  DEFAULT_NOTATION_FONT_SCALE: 39,\n  DEFAULT_TABLATURE_FONT_SCALE: 39,\n  SLASH_NOTEHEAD_WIDTH: 15,\n\n  // HACK:\n  // Since text origins are positioned at the baseline, we must\n  // compensate for the ascender of the text. Of course, 1 staff space is\n  // a very poor approximation.\n  //\n  // This will be deprecated in the future. This is a temporary solution until\n  // we have more robust text metrics.\n  TEXT_HEIGHT_OFFSET_HACK: 1,\n\n  /* Kerning (DEPRECATED) */\n  IsKerned: true,\n};\n\n\nFlow.clefProperties = clef => {\n  if (!clef) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  const props = Flow.clefProperties.values[clef];\n  if (!props) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  return props;\n};\n\nFlow.clefProperties.values = {\n  'treble': { line_shift: 0 },\n  'bass': { line_shift: 6 },\n  'tenor': { line_shift: 4 },\n  'alto': { line_shift: 3 },\n  'soprano': { line_shift: 1 },\n  'percussion': { line_shift: 0 },\n  'mezzo-soprano': { line_shift: 2 },\n  'baritone-c': { line_shift: 5 },\n  'baritone-f': { line_shift: 5 },\n  'subbass': { line_shift: 7 },\n  'french': { line_shift: -1 },\n};\n\n/*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option,\n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\nFlow.keyProperties = (key, clef, params) => {\n  if (clef === undefined) {\n    clef = 'treble';\n  }\n\n  const options = { octave_shift: 0 };\n\n  if (typeof params === 'object') {\n    Vex.Merge(options, params);\n  }\n\n  const pieces = key.split('/');\n\n  if (pieces.length < 2) {\n    throw new Vex.RERR('BadArguments', `Key must have note + octave and an optional glyph: ${key}`);\n  }\n\n  const k = pieces[0].toUpperCase();\n  const value = Flow.keyProperties.note_values[k];\n  if (!value) throw new Vex.RERR('BadArguments', 'Invalid key name: ' + k);\n  if (value.octave) pieces[1] = value.octave;\n\n  let octave = parseInt(pieces[1], 10);\n\n  // Octave_shift is the shift to compensate for clef 8va/8vb.\n  octave += -1 * options.octave_shift;\n\n  const base_index = (octave * 7) - (4 * 7);\n  let line = (base_index + value.index) / 2;\n  line += Flow.clefProperties(clef).line_shift;\n\n  let stroke = 0;\n\n  if (line <= 0 && (((line * 2) % 2) === 0)) stroke = 1;  // stroke up\n  if (line >= 6 && (((line * 2) % 2) === 0)) stroke = -1; // stroke down\n\n  // Integer value for note arithmetic.\n  const int_value = typeof (value.int_val) !== 'undefined'\n    ? (octave * 12) + value.int_val\n    : null;\n\n  /* Check if the user specified a glyph. */\n  let code = value.code;\n  let shift_right = value.shift_right;\n  if (pieces.length > 2 && pieces[2]) {\n    const glyph_name = pieces[2].toUpperCase();\n    const note_glyph = Flow.keyProperties.note_glyph[glyph_name];\n    if (note_glyph) {\n      code = note_glyph.code;\n      shift_right = note_glyph.shift_right;\n    }\n  }\n\n  return {\n    key: k,\n    octave,\n    line,\n    int_value,\n    accidental: value.accidental,\n    code,\n    stroke,\n    shift_right,\n    displaced: false,\n  };\n};\n\nFlow.keyProperties.note_values = {\n  'C': { index: 0, int_val: 0, accidental: null },\n  'CN': { index: 0, int_val: 0, accidental: 'n' },\n  'C#': { index: 0, int_val: 1, accidental: '#' },\n  'C##': { index: 0, int_val: 2, accidental: '##' },\n  'CB': { index: 0, int_val: -1, accidental: 'b' },\n  'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n  'D': { index: 1, int_val: 2, accidental: null },\n  'DN': { index: 1, int_val: 2, accidental: 'n' },\n  'D#': { index: 1, int_val: 3, accidental: '#' },\n  'D##': { index: 1, int_val: 4, accidental: '##' },\n  'DB': { index: 1, int_val: 1, accidental: 'b' },\n  'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n  'E': { index: 2, int_val: 4, accidental: null },\n  'EN': { index: 2, int_val: 4, accidental: 'n' },\n  'E#': { index: 2, int_val: 5, accidental: '#' },\n  'E##': { index: 2, int_val: 6, accidental: '##' },\n  'EB': { index: 2, int_val: 3, accidental: 'b' },\n  'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n  'F': { index: 3, int_val: 5, accidental: null },\n  'FN': { index: 3, int_val: 5, accidental: 'n' },\n  'F#': { index: 3, int_val: 6, accidental: '#' },\n  'F##': { index: 3, int_val: 7, accidental: '##' },\n  'FB': { index: 3, int_val: 4, accidental: 'b' },\n  'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n  'G': { index: 4, int_val: 7, accidental: null },\n  'GN': { index: 4, int_val: 7, accidental: 'n' },\n  'G#': { index: 4, int_val: 8, accidental: '#' },\n  'G##': { index: 4, int_val: 9, accidental: '##' },\n  'GB': { index: 4, int_val: 6, accidental: 'b' },\n  'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n  'A': { index: 5, int_val: 9, accidental: null },\n  'AN': { index: 5, int_val: 9, accidental: 'n' },\n  'A#': { index: 5, int_val: 10, accidental: '#' },\n  'A##': { index: 5, int_val: 11, accidental: '##' },\n  'AB': { index: 5, int_val: 8, accidental: 'b' },\n  'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n  'B': { index: 6, int_val: 11, accidental: null },\n  'BN': { index: 6, int_val: 11, accidental: 'n' },\n  'B#': { index: 6, int_val: 12, accidental: '#' },\n  'B##': { index: 6, int_val: 13, accidental: '##' },\n  'BB': { index: 6, int_val: 10, accidental: 'b' },\n  'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n  'R': { index: 6, int_val: 9, rest: true }, // Rest\n  'X': {\n    index: 6,\n    accidental: '',\n    octave: 4,\n    code: 'v3e',\n    shift_right: 5.5,\n  },\n};\n\nFlow.keyProperties.note_glyph = {\n  /* Diamond */\n  'D0': { code: 'v27', shift_right: -0.5 },\n  'D1': { code: 'v2d', shift_right: -0.5 },\n  'D2': { code: 'v22', shift_right: -0.5 },\n  'D3': { code: 'v70', shift_right: -0.5 },\n\n  /* Triangle */\n  'T0': { code: 'v49', shift_right: -2, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T1': { code: 'v93', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T2': { code: 'v40', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T3': { code: 'v7d', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n\n  /* Cross */\n  'X0': { code: 'v92', shift_right: -2, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X1': { code: 'v95', shift_right: -0.5, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X2': { code: 'v3e', shift_right: 0.5, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X3': { code: 'v3b', shift_right: -2, stem_up_y_offset: 2, stem_down_y_offset: 2 },\n\n  /* Square */\n  'S1': { code: 'vd3', shift_right: 0 },\n  'S2': { code: 'vd2', shift_right: 0 },\n  /* Rectangle */\n  'R1': { code: 'vd5', shift_right: 0 },\n  'R2': { code: 'vd4', shift_right: 0 },\n};\n\nFlow.integerToNote = integer => {\n  if (typeof (integer) === 'undefined') {\n    throw new Vex.RERR('BadArguments', 'Undefined integer for integerToNote');\n  }\n\n  if (integer < -2) {\n    throw new Vex.RERR('BadArguments', `integerToNote requires integer > -2: ${integer}`);\n  }\n\n  const noteValue = Flow.integerToNote.table[integer];\n  if (!noteValue) {\n    throw new Vex.RERR('BadArguments', `Unknown note value for integer: ${integer}`);\n  }\n\n  return noteValue;\n};\n\nFlow.integerToNote.table = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B',\n};\n\n\nFlow.tabToGlyph = (fret, scale = 1.0) => {\n  let glyph = null;\n  let width = 0;\n  let shift_y = 0;\n\n  if (fret.toString().toUpperCase() === 'X') {\n    const glyphMetrics = new Glyph('v7f', Flow.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n    glyph = 'v7f';\n    width = glyphMetrics.width;\n    shift_y = -glyphMetrics.height / 2;\n  } else {\n    width = Flow.textWidth(fret.toString());\n  }\n\n  return {\n    text: fret,\n    code: glyph,\n    getWidth: () => width * scale,\n    shift_y,\n  };\n};\n\nFlow.textWidth = text => 7 * text.toString().length;\n\nFlow.articulationCodes = artic => Flow.articulationCodes.articulations[artic];\n\nFlow.articulationCodes.articulations = {\n  'a.': { code: 'v23', between_lines: true }, // Staccato\n  'av': { code: 'v28', between_lines: true }, // Staccatissimo\n  'a>': { code: 'v42', between_lines: true }, // Accent\n  'a-': { code: 'v25', between_lines: true }, // Tenuto\n  'a^': { code: 'va', between_lines: false }, // Marcato\n  'a+': { code: 'v8b', between_lines: false }, // Left hand pizzicato\n  'ao': { code: 'v94', between_lines: false }, // Snap pizzicato\n  'ah': { code: 'vb9', between_lines: false }, // Natural harmonic or open note\n  'a@a': { code: 'v43', between_lines: false }, // Fermata above staff\n  'a@u': { code: 'v5b', between_lines: false }, // Fermata below staff\n  'a|': { code: 'v75', between_lines: false }, // Bow up - up stroke\n  'am': { code: 'v97', between_lines: false }, // Bow down - down stroke\n  'a,': { code: 'vb3', between_lines: false }, // Choked\n};\n\nFlow.accidentalCodes = acc => Flow.accidentalCodes.accidentals[acc];\n\nFlow.accidentalCodes.accidentals = {\n  '#': { code: 'v18', parenRightPaddingAdjustment: -1 },\n  '##': { code: 'v7f', parenRightPaddingAdjustment: -1 },\n  'b': { code: 'v44', parenRightPaddingAdjustment: -2 },\n  'bb': { code: 'v26', parenRightPaddingAdjustment: -2 },\n  'n': { code: 'v4e', parenRightPaddingAdjustment: -1 },\n  '{': { code: 'v9c', parenRightPaddingAdjustment: -1 },\n  '}': { code: 'v84', parenRightPaddingAdjustment: -1 },\n  'db': { code: 'v9e', parenRightPaddingAdjustment: -1 },\n  'd': { code: 'vab', parenRightPaddingAdjustment: 0 },\n  'bbs': { code: 'v90', parenRightPaddingAdjustment: -1 },\n  '++': { code: 'v51', parenRightPaddingAdjustment: -1 },\n  '+': { code: 'v78', parenRightPaddingAdjustment: -1 },\n  '+-': { code: 'v8d', parenRightPaddingAdjustment: -1 },\n  '++-': { code: 'v7a', parenRightPaddingAdjustment: -1 },\n  'bs': { code: 'vb7', parenRightPaddingAdjustment: -1 },\n  'bss': { code: 'v39', parenRightPaddingAdjustment: -1 },\n  'o': { code: 'vd0', parenRightPaddingAdjustment: -1 },\n  'k': { code: 'vd1', parenRightPaddingAdjustment: -1 },\n};\n\nFlow.accidentalColumnsTable = {\n  1: {\n    a: [1],\n    b: [1],\n  },\n  2: {\n    a: [1, 2],\n  },\n  3: {\n    a: [1, 3, 2],\n    b: [1, 2, 1],\n    second_on_bottom: [1, 2, 3],\n  },\n  4: {\n    a: [1, 3, 4, 2],\n    b: [1, 2, 3, 1],\n    spaced_out_tetrachord: [1, 2, 1, 2],\n  },\n  5: {\n    a: [1, 3, 5, 4, 2],\n    b: [1, 2, 4, 3, 1],\n    spaced_out_pentachord: [1, 2, 3, 2, 1],\n    very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n  },\n  6: {\n    a: [1, 3, 5, 6, 4, 2],\n    b: [1, 2, 4, 5, 3, 1],\n    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n  },\n};\n\nFlow.ornamentCodes = acc => Flow.ornamentCodes.ornaments[acc];\n\nFlow.ornamentCodes.ornaments = {\n  'mordent': { code: 'v1e' },\n  'mordent_inverted': { code: 'v45' },\n  'turn': { code: 'v72' },\n  'turn_inverted': { code: 'v33' },\n  'tr': { code: 'v1f' },\n  'upprall': { code: 'v60' },\n  'downprall': { code: 'vb4' },\n  'prallup': { code: 'v6d' },\n  'pralldown': { code: 'v2c' },\n  'upmordent': { code: 'v29' },\n  'downmordent': { code: 'v68' },\n  'lineprall': { code: 'v20' },\n  'prallprall': { code: 'v86' },\n};\n\nFlow.keySignature = spec => {\n  const keySpec = Flow.keySignature.keySpecs[spec];\n\n  if (!keySpec) {\n    throw new Vex.RERR('BadKeySignature', `Bad key signature spec: '${spec}'`);\n  }\n\n  if (!keySpec.acc) {\n    return [];\n  }\n\n  const notes = Flow.keySignature.accidentalList(keySpec.acc);\n\n  const acc_list = [];\n  for (let i = 0; i < keySpec.num; ++i) {\n    const line = notes[i];\n    acc_list.push({ type: keySpec.acc, line });\n  }\n\n  return acc_list;\n};\n\nFlow.keySignature.keySpecs = {\n  'C': { acc: null, num: 0 },\n  'Am': { acc: null, num: 0 },\n  'F': { acc: 'b', num: 1 },\n  'Dm': { acc: 'b', num: 1 },\n  'Bb': { acc: 'b', num: 2 },\n  'Gm': { acc: 'b', num: 2 },\n  'Eb': { acc: 'b', num: 3 },\n  'Cm': { acc: 'b', num: 3 },\n  'Ab': { acc: 'b', num: 4 },\n  'Fm': { acc: 'b', num: 4 },\n  'Db': { acc: 'b', num: 5 },\n  'Bbm': { acc: 'b', num: 5 },\n  'Gb': { acc: 'b', num: 6 },\n  'Ebm': { acc: 'b', num: 6 },\n  'Cb': { acc: 'b', num: 7 },\n  'Abm': { acc: 'b', num: 7 },\n  'G': { acc: '#', num: 1 },\n  'Em': { acc: '#', num: 1 },\n  'D': { acc: '#', num: 2 },\n  'Bm': { acc: '#', num: 2 },\n  'A': { acc: '#', num: 3 },\n  'F#m': { acc: '#', num: 3 },\n  'E': { acc: '#', num: 4 },\n  'C#m': { acc: '#', num: 4 },\n  'B': { acc: '#', num: 5 },\n  'G#m': { acc: '#', num: 5 },\n  'F#': { acc: '#', num: 6 },\n  'D#m': { acc: '#', num: 6 },\n  'C#': { acc: '#', num: 7 },\n  'A#m': { acc: '#', num: 7 },\n};\n\nFlow.unicode = {\n  // Unicode accidentals\n  'sharp': String.fromCharCode(parseInt('266F', 16)),\n  'flat': String.fromCharCode(parseInt('266D', 16)),\n  'natural': String.fromCharCode(parseInt('266E', 16)),\n  // Major Chord\n  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n  // half-diminished\n  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n  // Diminished\n  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n  'circle': String.fromCharCode(parseInt('25CB', 16)),\n};\n\nFlow.keySignature.accidentalList = (acc) => {\n  const patterns = {\n    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n  };\n\n  return patterns[acc];\n};\n\nFlow.parseNoteDurationString = durationString => {\n  if (typeof (durationString) !== 'string') {\n    return null;\n  }\n\n  const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\n  const result = regexp.exec(durationString);\n  if (!result) {\n    return null;\n  }\n\n  const duration = result[1];\n  const dots = result[2].length;\n  let type = result[3];\n\n  if (type.length === 0) {\n    type = 'n';\n  }\n\n  return {\n    duration,\n    dots,\n    type,\n  };\n};\n\nFlow.parseNoteData = noteData => {\n  const duration = noteData.duration;\n\n  // Preserve backwards-compatibility\n  const durationStringData = Flow.parseNoteDurationString(duration);\n  if (!durationStringData) {\n    return null;\n  }\n\n  let ticks = Flow.durationToTicks(durationStringData.duration);\n  if (ticks == null) {\n    return null;\n  }\n\n  let type = noteData.type;\n\n  if (type) {\n    if (!(type === 'n' || type === 'r' || type === 'h' || type === 'm' || type === 's')) {\n      return null;\n    }\n  } else {\n    type = durationStringData.type;\n\n    // If we have keys, try and check if we've got a custom glyph\n    if (noteData.keys !== undefined) {\n      const result = noteData.keys[0].split('/');\n\n      // We have a custom glyph specified after the note eg. /X2\n      if (result && result.length === 3) {\n        type = result[2]; // Set the type to the custom note head\n      }\n    }\n    if (!type) {\n      type = 'n';\n    }\n  }\n\n  const dots = noteData.dots ? noteData.dots : durationStringData.dots;\n\n  if (typeof (dots) !== 'number') {\n    return null;\n  }\n\n  let currentTicks = ticks;\n\n  for (let i = 0; i < dots; i++) {\n    if (currentTicks <= 1) return null;\n\n    currentTicks = currentTicks / 2;\n    ticks += currentTicks;\n  }\n\n  return {\n    duration: durationStringData.duration,\n    type,\n    dots,\n    ticks,\n  };\n};\n\n// Used to convert duration aliases to the number based duration.\n// If the input isn't an alias, simply return the input.\n//\n// example: 'q' -> '4', '8' -> '8'\nFlow.sanitizeDuration = duration => {\n  const alias = Flow.durationAliases[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  if (Flow.durationToTicks.durations[duration] === undefined) {\n    throw new Vex.RERR('BadArguments', `The provided duration is not valid: ${duration}`);\n  }\n\n  return duration;\n};\n\n// Convert the `duration` to an fraction\nFlow.durationToFraction = duration => new Fraction().parse(Flow.sanitizeDuration(duration));\n\n// Convert the `duration` to an number\nFlow.durationToNumber = duration => Flow.durationToFraction(duration).value();\n\n// Convert the `duration` to total ticks\nFlow.durationToTicks = duration => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const ticks = Flow.durationToTicks.durations[duration];\n  if (ticks === undefined) {\n    return null;\n  }\n\n  return ticks;\n};\n\nFlow.durationToTicks.durations = {\n  '1/2': Flow.RESOLUTION * 2,\n  '1': Flow.RESOLUTION / 1,\n  '2': Flow.RESOLUTION / 2,\n  '4': Flow.RESOLUTION / 4,\n  '8': Flow.RESOLUTION / 8,\n  '16': Flow.RESOLUTION / 16,\n  '32': Flow.RESOLUTION / 32,\n  '64': Flow.RESOLUTION / 64,\n  '128': Flow.RESOLUTION / 128,\n  '256': Flow.RESOLUTION / 256,\n};\n\nFlow.durationAliases = {\n  'w': '1',\n  'h': '2',\n  'q': '4',\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  //\n  // TODO(0xfe): This needs to be cleaned up.\n  'b': '256',\n};\n\nFlow.durationToGlyph = (duration, type) => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const code = Flow.durationToGlyph.duration_codes[duration];\n  if (code === undefined) {\n    return null;\n  }\n\n  if (!type) {\n    type = 'n';\n  }\n\n  let glyphTypeProperties = code.type[type];\n  if (glyphTypeProperties === undefined) {\n    // Try and get it from the custom list of note heads\n    const customGlyphTypeProperties = Flow.keyProperties.note_glyph[type.toUpperCase()];\n\n    // If not, then return with nothing\n    if (customGlyphTypeProperties === undefined) {\n      return null;\n    }\n\n    // Otherwise set it as the code_head value\n    glyphTypeProperties = {\n      code_head: customGlyphTypeProperties.code,\n      stem_up_y_offset: customGlyphTypeProperties.stem_up_y_offset,\n      stem_down_y_offset: customGlyphTypeProperties.stem_down_y_offset,\n    };\n  }\n\n  return Vex.Merge(Vex.Merge({}, code.common), glyphTypeProperties);\n};\n\nFlow.durationToGlyph.duration_codes = {\n  '1/2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v53', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Breve note\n        code_head: 'v53',\n      },\n      'h': { // Breve note harmonic\n        code_head: 'v59',\n      },\n      'm': { // Breve note muted -\n        code_head: 'vf',\n        stem_offset: 0,\n      },\n      'r': { // Breve rest\n        code_head: 'v31',\n        rest: true,\n        position: 'B/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Breve note slash -\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '1': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Whole note\n        code_head: 'v1d',\n      },\n      'h': { // Whole note harmonic\n        code_head: 'v46',\n      },\n      'm': { // Whole note muted\n        code_head: 'v92',\n        stem_offset: -3,\n      },\n      'r': { // Whole rest\n        code_head: 'v5c',\n        rest: true,\n        position: 'D/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Whole note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v81', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Half note\n        code_head: 'v81',\n      },\n      'h': { // Half note harmonic\n        code_head: 'v2d',\n      },\n      'm': { // Half note muted\n        code_head: 'v95',\n        stem_offset: -3,\n      },\n      'r': { // Half rest\n        code_head: 'vc',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n      },\n      's': { // Half note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '4': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Quarter note\n        code_head: 'vb',\n      },\n      'h': { // Quarter harmonic\n        code_head: 'v22',\n      },\n      'm': { // Quarter muted\n        code_head: 'v3e',\n        stem_offset: -3,\n      },\n      'r': { // Quarter rest\n        code_head: 'v7c',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5,\n      },\n      's': { // Quarter slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '8': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      beam_count: 1,\n      code_flag_upstem: 'v54',\n      code_flag_downstem: 'v9a',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Eighth note\n        code_head: 'vb',\n      },\n      'h': { // Eighth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Eighth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Eighth rest\n        code_head: 'va5',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0,\n      },\n      's': { // Eight slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '16': {\n    common: {\n      beam_count: 2,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v3f',\n      code_flag_downstem: 'v8f',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixteenth note\n        code_head: 'vb',\n      },\n      'h': { // Sixteenth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixteenth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixteenth rest\n        code_head: 'v3c',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0,\n      },\n      's': { // Sixteenth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '32': {\n    common: {\n      beam_count: 3,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v47',\n      code_flag_downstem: 'v2a',\n      stem_up_extension: 9,\n      stem_down_extension: 9,\n      tabnote_stem_up_extension: 8,\n      tabnote_stem_down_extension: 5,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Thirty-second note\n        code_head: 'vb',\n      },\n      'h': { // Thirty-second harmonic\n        code_head: 'v22',\n      },\n      'm': { // Thirty-second muted\n        code_head: 'v3e',\n      },\n      'r': { // Thirty-second rest\n        code_head: 'v55',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0,\n      },\n      's': { // Thirty-second slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '64': {\n    common: {\n      beam_count: 4,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'va9',\n      code_flag_downstem: 'v58',\n      stem_up_extension: 13,\n      stem_down_extension: 13,\n      tabnote_stem_up_extension: 12,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixty-fourth note\n        code_head: 'vb',\n      },\n      'h': { // Sixty-fourth harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixty-fourth muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixty-fourth rest\n        code_head: 'v38',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0,\n      },\n      's': { // Sixty-fourth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '128': {\n    common: {\n      beam_count: 5,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v9b',\n      code_flag_downstem: 'v30',\n      stem_up_extension: 22,\n      stem_down_extension: 22,\n      tabnote_stem_up_extension: 21,\n      tabnote_stem_down_extension: 18,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': {  // Hundred-twenty-eight note\n        code_head: 'vb',\n      },\n      'h': { // Hundred-twenty-eight harmonic\n        code_head: 'v22',\n      },\n      'm': { // Hundred-twenty-eight muted\n        code_head: 'v3e',\n      },\n      'r': {  // Hundred-twenty-eight rest\n        code_head: 'vaa',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: 1.5,\n        line_above: 3.0,\n        line_below: 3.0,\n      },\n      's': { // Hundred-twenty-eight rest\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n};\n\n// For future collaboration with the SMuFL Standard Music Font Layout\n\nFlow.smufl = {};\n\n// add references between smufl glyph names and code points.\nFlow.smufl.to_code_points = {\n  // staff brackets and dividers (e000-e00f)\n  bracketTop: 'v1b',\n  bracketBottom: 'v10',\n\n  // barlines (e030-e03f)\n  barlineTick: 'v6f',\n\n  // repeats (e040-e04f)\n  segno: 'v8c',\n  coda: 'v4d',\n\n  // clefs (e050-e07f)\n  gClef: 'v83',\n  cClef: 'vad',\n  fClef: 'v79',\n  unpitchedPercussionClef1: 'v59', // same as breveNoteheadHarmonic\n  '6stringTabClef': 'v2f',\n\n  // time signatures (e080-e09f)\n  timeSig0: 'v0',\n  timeSig1: 'v1',\n  timeSig2: 'v2',\n  timeSig3: 'v3',\n  timeSig4: 'v4',\n  timeSig5: 'v5',\n  timeSig6: 'v6',\n  timeSig7: 'v7',\n  timeSig8: 'v8',\n  timeSig9: 'v9',\n  timeSigCommon: 'v41',\n  timeSigCutCommon: 'vb6',\n\n  // notehead (e0a0-e0ff)\n  noteheadDoubleWhole: 'v53',\n  noteheadWhole: 'v1d',\n  noteheadHalf: 'v81',\n  noteheadBlack: 'vb',\n  noteheadXWhole: 'v92',\n  noteheadXHalf: 'v95',\n  noteheadXBlack: 'v3e',\n  noteheadCircleX: 'v3b',\n  noteheadTriangleUpWhole: 'v49',\n  noteheadTriangleUpHalf: 'v93',\n  noteheadTriangleUpBlack: 'v40',\n  noteheadDiamondWhole: 'v46',\n  noteheadDiamondHalf: 'v2d',\n  noteheadDiamondBlack: 'v22',\n\n  // individual notes (e1d0-e1ef)\n  augmentationDot: 'v23',\n\n  // temolos (e220-e23f)\n  tremolo1: 'v74',\n\n  // flags (e240-e25f)\n  flag8thUp: 'v54',\n  flag8thDown: 'v9a',\n  flag16thUp: 'v3f',\n  flag16thDown: 'v8f',\n  flag32ndUp: 'v47',\n  flag32ndDown: 'v2a',\n  flag64thUp: 'va9',\n  flag64thDown: 'v58',\n  flag128thUp: 'v9b',\n  flag128thDown: 'v30',\n\n  // standard accidentals (e260-e26f)\n  accidentalFlat: 'v44',\n  accidentalNatural: 'v4e',\n  accidentalSharp: 'v18',\n  accidentalDoubleSharp: 'v7f',\n  accidentalDoubleFlat: 'v26',\n  accidentalParensLeft: 'v9c',\n  accidentalParensRight: 'v84',\n\n  // stein-zimmermann accidentals (24-edo) (e280-e28f)\n  accidentalQuarterToneFlatStein: 'vab',\n  accidentalThreeQuarterTonesFlatZimmermann: 'v9e',\n  accidentalQuarterToneSharpStein: 'v78',\n  accidentalThreeQuarterTonesSharpStein: 'v51',\n\n  // arel-ezgi-uzdilek accidentals (e440-e44f)\n  accidentalBuyukMucennebFlat: 'v39',\n  accidentalBakiyeFlat: 'vb7',\n  accidentalKomaSharp: 'v51', // same as accidentalQuarterToneSharpStein\n  accidentalKucukMucennebSharp: 'v8d',\n\n  // persian accidentals (e460-e46f)\n  accidentalKoron: 'vd1',\n  accidentalSori: 'vd0',\n\n  // articulation (e4a0-e4bf)\n  articAccentAbove: 'v42',\n  articAccentBelow: 'v42', // same as above\n  articTenutoAbove: 'v25',\n  articTenutoBelow: 'v25', // same as above\n  articStaccatoAbove: 'v23', // = dot\n  articStaccatoBelow: 'v23', // = dot\n  articStaccatissimoAbove: 'v28',\n  articMarcatoAbove: 'va',\n\n  // holds and pauses (e4c0-e4df)\n  fermataAbove: 'v43',\n  fermataBelow: 'v5b',\n  breathMarkComma: 'v6c',\n  breathMarkUpbow: 'v8a', // looks better than current upbow\n  caesura: 'v34',\n  caesuraCurved: 'v4b',\n\n  // rests (e4e0-e4ff)\n  restMaxima: 'v59', // not designed for this, but should do the trick\n  // need restLonga -- used in multimeasure rests, like above\n  restDoubleWhole: 'v31',\n  restWhole: 'v5c',\n  restHalf: 'vc',\n  restQuarter: 'v7c',\n  rest8th: 'va5',\n  rest16th: 'v3c',\n  rest32nd: 'v55',\n  rest64th: 'v38',\n  rest128th: 'vaa',\n\n  // dynamics (e520-e54f)\n  dynamicPiano: 'vbf',\n  dynamicMezzo: 'v62',\n  dynamicForte: 'vba',\n  dynamicRinforzando: 'vba',\n  dynamicSforzando: 'v4a',\n  dynamicZ: 'v80',\n\n  // common ornaments (e560-e56f)\n  ornamentTrill: 'v1f',\n  ornamentTurn: 'v72',\n  ornamentTurnSlash: 'v33',\n  ornamentMordent: 'v45',\n  ornamentMordentInverted: 'v1e',\n  ornamentTremblement: 'v86',\n\n  // precomposed trills and mordents (e5b0-e5cf)\n  ornamentPrecompAppoggTrill: 'v20',\n  ornamentPrecompSlideTrillDAnglebert: 'v60',\n  ornamentPrecompSlideTrillBach: 'v29',\n  ornamentPrecompTrillSuffixDandrieu: 'v6d',\n  ornamentPrecompDoubleCadenceUpperPrefix: 'vb4',\n  ornamentPrecompDoubleCadenceUpperPrefixTurn: 'v68',\n  ornamentPrecompTrillLowerSuffix: 'v2c',\n\n  // string techniques (e610-e62f)\n  stringsDownBow: 'v94',\n  stringsUpBow: 'v75',\n  stringsHarmonic: 'vb9',\n\n  // plucked techniques (e630-e63f)\n  pluckedSnapPizzicatoAbove: 'v94',\n  pluckedLeftHandPizzicato: 'v8b', // plus sign\n\n  // keyboard techniques (e650-e67f)\n  keyboardPedalPed: 'v36',\n  keyboardPedalUp: 'v5d',\n\n  // percussion playing technique pictograms (e7f0-e80f)\n  pictChokeCymbal: 'vb3',\n\n  // multi-segment lines (eaa0-eb0f)\n  wiggleArpeggiatoUp: 'va3', // rotated 90deg from reference implementation\n\n  // arrows and arrowheads (eb60-eb8f)\n  arrowheadBlackUp: 'vc3',\n  arrowheadBlackDown: 'v52',\n\n  // not found:\n  // noteheadDiamondWhole: 'v27', stylistic alternate to v46?\n  // noteheadDiamondBlack: 'v70', stylistic alternate to v22?\n  // noteheadTriangleUpBlack: 'v7d', stylistic alternate to v40?\n  // accidentalSlashedDoubleFlat: 'v90',\n  // accidentalOneAndAHalfSharpTurned: 'v7a',\n  // unused marcato alternative?  'v5a',\n  // arpeggioBrushDown: 'v11',\n};\n\n// Some defaults\nFlow.TIME4_4 = {\n  num_beats: 4,\n  beat_value: 4,\n  resolution: Flow.RESOLUTION,\n};\nexport { Flow };\n\n\n\n// WEBPACK FOOTER //\n// ./src/tables.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './fonts/vexflow_font';\n\nfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n  let command;\n  let x;\n  let y;\n  let i = 0;\n\n  function nextX() { return originX + outline[i++] * scaleX; }\n  function nextY() { return originY + outline[i++] * scaleY; }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        outlineFns[command](nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        outlineFns.q(nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        outlineFns.b(nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  /* Static methods used to implement loading / unloading of glyphs */\n  static loadMetrics(font, code, cache) {\n    const glyph = font.glyphs[code];\n    if (!glyph) {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline;\n\n    if (glyph.o) {\n      if (cache) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min,\n        x_max,\n        ha,\n        outline,\n      };\n    } else {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   *\n   * @param {!Object} ctx The canvas context.\n   * @param {number} x_pos X coordinate.\n   * @param {number} y_pos Y coordinate.\n   * @param {number} point The point size to use.\n   * @param {string} val The glyph code in Vex.Flow.Font.\n   * @param {boolean} nocache If set, disables caching of font outline.\n   */\n  static renderGlyph(ctx, x_pos, y_pos, point, val, nocache) {\n    const scale = point * 72.0 / (Font.resolution * 100.0);\n    const metrics = Glyph.loadMetrics(Font, val, !nocache);\n    Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n  }\n\n  static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n    });\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n    });\n\n    return new BoundingBox(\n      bboxComp.x1,\n      bboxComp.y1,\n      bboxComp.width(),\n      bboxComp.height()\n    );\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code, point, options) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      cache: true,\n      font: Font,\n    };\n\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  setOptions(options) {\n    Vex.Merge(this.options, options);\n    this.reset();\n  }\n\n  setPoint(point) { this.point = point; return this; }\n  setStave(stave) { this.stave = stave; return this; }\n  setXShift(x_shift) { this.x_shift = x_shift; return this; }\n  setYShift(y_shift) { this.y_shift = y_shift; return this; }\n\n  reset() {\n    this.scale = this.point * 72 / (this.options.font.resolution * 100);\n    this.metrics = Glyph.loadMetrics(\n      this.options.font,\n      this.code,\n      this.options.cache\n    );\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale,\n      0,\n      0\n    );\n  }\n\n  getMetrics() {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale,\n      x_max: this.metrics.x_max * this.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n    };\n  }\n\n  setOriginX(x) {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y) {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x, y) {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx, x, y) {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    this.applyStyle(ctx);\n    Glyph.renderOutline(ctx, outline, scale, x + this.originShift.x, y + this.originShift.y);\n    this.restoreStyle(ctx);\n  }\n\n  renderToStave(x) {\n    this.checkContext();\n\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new Vex.RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    this.applyStyle();\n    Glyph.renderOutline(this.context, outline, scale,\n      x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n    this.restoreStyle();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/glyph.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a generic base class for VexFlow, with implementations\n// of general functions and properties that can be inherited by all VexFlow elements.\n\nimport { Vex } from './vex';\nimport { Registry } from './registry';\n\nexport class Element {\n  static newID() { return 'auto' + (Element.ID++); }\n\n  constructor({ type } = {}) {\n    this.attrs = {\n      id: Element.newID(),\n      el: null,\n      type: type || 'Base',\n      classes: {},\n    };\n\n    this.boundingBox = null;\n    this.context = null;\n    this.rendered = false;\n\n    // If a default registry exist, then register with it right away.\n    if (Registry.getDefaultRegistry()) {\n      Registry.getDefaultRegistry().register(this);\n    }\n  }\n\n  // set the draw style of a stemmable note:\n  setStyle(style) { this.style = style; return this; }\n  getStyle() { return this.style; }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n\n    context.save();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    if (style.lineWidth) context.setLineWidth(style.lineWidth);\n    return this;\n  }\n\n  restoreStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n    context.restore();\n    return this;\n  }\n\n  // An element can have multiple class labels.\n  hasClass(className) { return (this.attrs.classes[className] === true); }\n  addClass(className) {\n    this.attrs.classes[className] = true;\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: className,\n        oldValue: null,\n      });\n    }\n    return this;\n  }\n\n  removeClass(className) {\n    delete this.attrs.classes[className];\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: null,\n        oldValue: className,\n      });\n    }\n    return this;\n  }\n\n  // This is called by the registry after the element is registered.\n  onRegister(registry) { this.registry = registry; return this; }\n  isRendered() { return this.rendered; }\n  setRendered(rendered = true) { this.rendered = rendered; return this; }\n\n  getAttributes() { return this.attrs; }\n  getAttribute(name) { return this.attrs[name]; }\n  setAttribute(name, value) {\n    const id = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    if (this.registry) {\n      // Register with old id to support id changes.\n      this.registry.onUpdate({ id, name, value, oldValue });\n    }\n    return this;\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getBoundingBox() { return this.boundingBox; }\n\n  // Validators\n  checkContext() {\n    if (!this.context) {\n      throw new Vex.RERR('NoContext', 'No rendering context attached to instance');\n    }\n    return this.context;\n  }\n}\n\nElement.ID = 1000;\n\n\n\n// WEBPACK FOOTER //\n// ./src/element.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `Modifier` is an abstract interface for notational elements that modify\n// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n//\n// For a `Modifier` instance to be positioned correctly, it must be part of\n// a `ModifierContext`. All modifiers in the same context are rendered relative to\n// one another.\n//\n// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) Vex.L('Vex.Flow.Modifier', args); }\n\nexport class Modifier extends Element {\n  static get CATEGORY() { return 'none'; }\n\n  // Modifiers can be positioned almost anywhere, relative to a note.\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      above: Modifier.Position.ABOVE,\n      below: Modifier.Position.BELOW,\n      left: Modifier.Position.LEFT,\n      right: Modifier.Position.RIGHT,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Modifier');\n\n    this.width = 0;\n\n    // Modifiers are attached to a note and an index. An index is a\n    // specific head in a chord.\n    this.note = null;\n    this.index = null;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.modifier_context = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  // Every modifier has a category. The `ModifierContext` uses this to determine\n  // the type and order of the modifiers.\n  getCategory() { return Modifier.CATEGORY; }\n\n  // Get and set modifier widths.\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n\n  // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n\n  // Get and set note index, which is a specific note in a chord.\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  // Every modifier must be part of a `ModifierContext`.\n  getModifierContext() { return this.modifier_context; }\n  setModifierContext(c) { this.modifier_context = c; return this; }\n\n  // Get and set articulation position.\n  getPosition() { return this.position; }\n  setPosition(position) {\n    this.position = typeof(position) === 'string'\n      ? Modifier.PositionString[position]\n      : position;\n    return this;\n  }\n\n  // Set the `text_line` for the modifier.\n  setTextLine(line) { this.text_line = line; return this; }\n\n  // Shift modifier down `y` pixels. Negative values shift up.\n  setYShift(y) { this.y_shift = y; return this; }\n\n  setSpacingFromNextModifier(x) {\n    this.spacingFromNextModifier = x;\n  }\n\n  getSpacingFromNextModifier() { return this.spacingFromNextModifier; }\n\n  // Shift modifier `x` pixels in the direction of the modifier. Negative values\n  // shift reverse.\n  setXShift(x) {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n  }\n  getXShift() { return this.x_shift; }\n\n  // Render the modifier onto the canvas.\n  draw() {\n    this.checkContext();\n    throw new Vex.RERR('MethodNotImplemented', 'draw() not implemented for this modifier.');\n  }\n\n  // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n  alignSubNotesWithNote(subNotes, note) {\n    // Shift over the tick contexts of each note\n    const tickContext = note.getTickContext();\n    const extraPx = tickContext.getExtraPx();\n    const subNoteXOffset = tickContext.getX() - extraPx.left - extraPx.extraLeft\n      + this.getSpacingFromNextModifier();\n\n    subNotes.forEach((subNote) => {\n      const subTickContext = subNote.getTickContext();\n      subNote.setStave(note.stave);\n      subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modifier.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { BoundingBox } from './boundingbox';\nimport { Stem } from './stem';\nimport { NoteHead } from './notehead';\nimport { StemmableNote } from './stemmablenote';\nimport { Modifier } from './modifier';\nimport { Dot } from './dot';\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\nfunction L(...args) { if (StaveNote.DEBUG) Vex.L('Vex.Flow.StaveNote', args); }\n\nconst getStemAdjustment = (note) => Stem.WIDTH / (2 * -note.getStemDirection());\n\nconst isInnerNoteIndex = (note, index) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n  const delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + (delta));\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n  const delta = rest.line - Vex.MidLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static get CATEGORY() { return 'stavenotes'; }\n  static get STEM_UP() { return Stem.UP; }\n  static get STEM_DOWN() { return Stem.DOWN; }\n  static get DEFAULT_LEDGER_LINE_OFFSET() { return 3; }\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  static format(notes, state) {\n    if (!notes || notes.length < 2) return false;\n\n    // FIXME: VexFlow will soon require that a stave be set before formatting.\n    // Which, according to the below condition, means that following branch will\n    // always be taken and the rest of this function is dead code.\n    //\n    // Problematically, `Formatter#formatByY` was not designed to work for more\n    // than 2 voices (although, doesn't throw on this condition, just tries\n    // to power through).\n    //\n    // Based on the above:\n    //   * 2 voices can be formatted *with or without* a stave being set but\n    //     the output will be different\n    //   * 3 voices can only be formatted *without* a stave\n    if (notes[0].getStave()) {\n      return StaveNote.formatByY(notes, state);\n    }\n\n    const notesList = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      const props = notes[i].getKeyProps();\n      const line = props[0].line;\n      let minL = props[props.length - 1].line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinumumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyph.line_above;\n        minL = line - notes[i].glyph.line_below;\n      } else {\n        maxL = stemDirection === 1\n          ? props[props.length - 1].line + stemMax\n          : props[props.length - 1].line;\n\n        minL = stemDirection === 1\n          ? props[0].line\n          : props[0].line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    const voices = notesList.length;\n\n    let noteU = notesList[0];\n    const noteM = voices > 2 ? notesList[1] : null;\n    let noteL = voices > 2 ? notesList[2] : notesList[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n    let stemDelta;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stemDirection === noteL.stemDirection &&\n        noteU.minLine <= noteL.maxLine) {\n        if (!noteU.isrest) {\n          stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n          stemDelta = Math.max(stemDelta, noteU.stemMin);\n          noteU.minLine = noteU.line - stemDelta;\n          noteU.note.setStemLength(stemDelta * 10);\n        }\n      }\n      if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          xShift = voiceXShift;\n          if (noteU.stemDirection === noteL.stemDirection) {\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(xShift + 3);\n          } else {\n            // shift lower voice right\n            noteL.note.setXShift(xShift);\n          }\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n      if (!noteM.isrest) {\n        stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n        stemDelta = Math.max(stemDelta, noteM.stemMin);\n        noteM.minLine = noteM.line - stemDelta;\n        noteM.note.setStemLength(stemDelta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n          // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 3;    // shift middle rest right\n          noteM.note.setXShift(xShift);\n        }\n        // format complete\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n\n    // If middle voice intersects upper or lower voice\n    if ((!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n      (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)) {\n      xShift = voiceXShift + 3;      // shift middle note right\n      noteM.note.setXShift(xShift);\n    }\n\n    return true;\n  }\n\n  static formatByY(notes, state) {\n    // NOTE: this function does not support more than two voices per stave\n    // use with care.\n    let hasStave = true;\n\n    for (let i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != null;\n    }\n\n    if (!hasStave) {\n      throw new Vex.RERR(\n        'Stave Missing',\n        'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!'\n      );\n    }\n\n    let xShift = 0;\n\n    for (let i = 0; i < notes.length - 1; i++) {\n      let topNote = notes[i];\n      let bottomNote = notes[i + 1];\n\n      if (topNote.getStemDirection() === Stem.DOWN) {\n        topNote = notes[i + 1];\n        bottomNote = notes[i];\n      }\n\n      const topKeys = topNote.getKeyProps();\n      const bottomKeys = bottomNote.getKeyProps();\n\n      const HALF_NOTEHEAD_HEIGHT = 0.5;\n\n      // `keyProps` and `stave.getYForLine` have different notions of a `line`\n      // so we have to convert the keyProps value by subtracting 5.\n      // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n      //\n      // We also extend the y for each note by a half notehead because the\n      // notehead's origin is centered\n      const topNotBottomY = topNote\n        .getStave()\n        .getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\n      const bottomNoteTopY = bottomNote\n        .getStave()\n        .getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\n      const areNotesColliding = bottomNoteTopY - topNotBottomY < 0;\n\n      if (areNotesColliding) {\n        xShift = topNote.getVoiceShiftWidth() + 2;\n        bottomNote.setXShift(xShift);\n      }\n    }\n\n    state.right_shift += xShift;\n  }\n\n  static postFormat(notes) {\n    if (!notes) return false;\n\n    notes.forEach(note => note.postFormat());\n\n    return true;\n  }\n\n  constructor(noteStruct) {\n    super(noteStruct);\n    this.setAttribute('type', 'StaveNote');\n\n    this.keys = noteStruct.keys;\n    this.clef = noteStruct.clef;\n    this.octave_shift = noteStruct.octave_shift;\n    this.beam = null;\n\n    // Pull note rendering properties\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // per-pitch properties\n    this.keyProps = [];\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this.note_heads = [];\n    this.modifiers = [];\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: noteStruct.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET,\n    });\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction);\n    }\n    this.reset();\n    this.buildFlag();\n  }\n\n  reset() {\n    super.reset();\n\n    // Save prior noteHead styles & reapply them after making new noteheads.\n    const noteHeadStyles = this.note_heads.map(noteHead => noteHead.getStyle());\n    this.buildNoteHeads();\n    this.note_heads.forEach((noteHead, index) => noteHead.setStyle(noteHeadStyles[index]));\n\n    if (this.stave) {\n      this.note_heads.forEach(head => head.setStave(this.stave));\n    }\n    this.calcExtraPx();\n  }\n\n  getCategory() { return StaveNote.CATEGORY; }\n\n  // Builds a `Stem` for the note\n  buildStem() {\n    const glyph = this.getGlyph();\n\n    this.setStem(new Stem({\n      stem_up_y_offset: glyph.stem_up_y_offset,\n      stem_down_y_offset: glyph.stem_down_y_offset,\n      hide: !!this.isRest(),\n    }));\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads() {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = null;\n    let lineDiff = null;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start;\n    let end;\n    let step;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else if (stemDirection === Stem.DOWN) {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        line: noteProps.line,\n      });\n\n      this.note_heads[i] = notehead;\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem() {\n    // Figure out optimal stem direction based on given notes\n    this.minLine = this.keyProps[0].line;\n    this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n    const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n    this.setStemDirection(stemDirection);\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps() {\n    let lastLine = null;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if (this.glyph.rest) this.glyph.position = key;\n\n      const options = { octave_shift: this.octave_shift || 0 };\n      const props = Flow.keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new Vex.RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n\n    // Sort the notes from lowest line to highest line\n    lastLine = -Infinity;\n    this.keyProps.forEach(key => {\n      if (key.line < lastLine) {\n        Vex.W(\n          'Unsorted keys in note will be sorted. ' +\n          'See https://github.com/0xfe/vexflow/issues/104 for details.'\n        );\n      }\n      lastLine = key.line;\n    });\n    this.keyProps.sort((a, b) => a.line - b.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const { width: w, modLeftPx, extraLeftPx } = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - extraLeftPx;\n\n    let minY = 0;\n    let maxY = 0;\n    const halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = Flow.durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - (this.glyph.line_above * lineSpacing);\n        maxY = y + (this.glyph.line_below * lineSpacing);\n      }\n    } else if (this.glyph.stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.stem_direction;\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = null;\n      maxY = null;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the top or bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note\n  getLineNumber(isTopNote) {\n    if (!this.keyProps.length) {\n      throw new Vex.RERR(\n        'NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\"\n      );\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  // Determine if current note is a rest\n  isRest() { return this.glyph.rest; }\n\n  // Determine if the current note is a chord\n  isChord() { return !this.isRest() && this.keys.length > 1; }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem() { return this.glyph.stem; }\n\n  hasFlag() {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX() {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + getStemAdjustment(this);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.stave.getYForTopText(textLine),\n      extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n    );\n  }\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.stave.getYForTopText(textLine),\n      extents.baseY + (this.render_options.annotation_spacing * (textLine))\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave) {\n    super.setStave(stave);\n\n    const ys = this.note_heads.map(notehead => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Get the pitches in the note\n  getKeys() { return this.keys; }\n\n  // Get the properties for all the keys in the note\n  getKeyProps() {\n    return this.keyProps;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced() {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced) {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.extraRightPx;\n    if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.extraLeftPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest() {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = Vex.MidLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // extra_left_px\n      // FIXME: What are these magic numbers?\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // extra_right_px\n      // FIXME: What is this magical +2?\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (this.stem_direction === Stem.UP && this.hasFlag() && isInnerNoteIndex(this, index)) {\n        x += this.flag.getMetrics().width;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style) {\n    super.setStyle(style);\n    this.note_heads.forEach(notehead => notehead.setStyle(style));\n    this.stem.setStyle(style);\n  }\n\n  setStemStyle(style) {\n    const stem = this.getStem();\n    stem.setStyle(style);\n  }\n  getStemStyle() { return this.stem.getStyle(); }\n\n  setLedgerLineStyle(style) { this.ledgerLineStyle = style; }\n  getLedgerLineStyle() { return this.ledgerLineStyle; }\n\n  setFlagStyle(style) { this.flagStyle = style; }\n  getFlagStyle() { return this.flagStyle; }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index, style) {\n    this.note_heads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index, line) {\n    this.keyProps[index].line = line;\n    this.reset();\n    return this;\n  }\n\n  getKeyLine(index) {\n    return this.keyProps[index].line;\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext) {\n    this.setModifierContext(mContext);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Generic function to add modifiers to a note\n  //\n  // Parameters:\n  // * `index`: The index of the key that we're modifying\n  // * `modifier`: The modifier to add\n  addModifier(index, modifier) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Helper function to add an accidental to a key\n  addAccidental(index, accidental) {\n    return this.addModifier(index, accidental);\n  }\n\n  // Helper function to add an articulation to a key\n  addArticulation(index, articulation) {\n    return this.addModifier(index, articulation);\n  }\n\n  // Helper function to add an annotation to a key\n  addAnnotation(index, annotation) {\n    return this.addModifier(index, annotation);\n  }\n\n  // Helper function to add a dot on a specific key\n  addDot(index) {\n    const dot = new Dot();\n    dot.setDotShiftY(this.glyph.dot_shiftY);\n    this.dots++;\n    return this.addModifier(index, dot);\n  }\n\n  // Convenience method to add dot to all keys in note\n  addDotToAll() {\n    for (let i = 0; i < this.keys.length; ++i) {\n      this.addDot(i);\n    }\n    return this;\n  }\n\n  // Get all accidentals in the `ModifierContext`\n  getAccidentals() {\n    return this.modifierContext.getModifiers('accidentals');\n  }\n\n  // Get all dots in the `ModifierContext`\n  getDots() {\n    return this.modifierContext.getModifiers('dots');\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth() {\n    // TODO: may need to accomodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcExtraPx() {\n    this.setExtraLeftPx(\n      this.displaced && this.stem_direction === Stem.DOWN\n        ? this.getGlyphWidth()\n        : 0\n    );\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setExtraRightPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP\n        ? this.getGlyphWidth()\n        : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n\n    let width = this.getGlyphWidth() + this.extraLeftPx + this.extraRightPx;\n\n    // For upward flagged notes, the width of the flag needs to be added\n    if (this.glyph.flag && this.beam === null && this.stem_direction === Stem.UP) {\n      width += this.getGlyphWidth();\n    }\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n  }\n\n  /**\n   * @typedef {Object} noteHeadBounds\n   * @property {number} y_top the highest notehead bound\n   * @property {number} y_bottom the lowest notehead bound\n   * @property {number|Null} displaced_x the starting x for displaced noteheads\n   * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n   * @property {number} highest_line the highest notehead line in traditional music line\n   *  numbering (bottom line = 1, top line = 5)\n   * @property {number} lowest_line the lowest notehead line\n   * @property {number|false} highest_displaced_line the highest staff line number\n   *   for a displaced notehead\n   * @property {number|false} lowest_displaced_line\n   * @property {number} highest_non_displaced_line\n   * @property {number} lowest_non_displaced_line\n   */\n\n  /**\n   * Get the staff line and y value for the highest & lowest noteheads\n   * @returns {noteHeadBounds}\n   */\n  getNoteHeadBounds() {\n    // Top and bottom Y values for stem.\n    let yTop = null;\n    let yBottom = null;\n    let nonDisplacedX = null;\n    let displacedX = null;\n\n    let highestLine = this.stave.getNumLines();\n    let lowestLine = 1;\n    let highestDisplacedLine = false;\n    let lowestDisplacedLine = false;\n    let highestNonDisplacedLine = highestLine;\n    let lowestNonDisplacedLine = lowestLine;\n\n    this.note_heads.forEach(notehead => {\n      const line = notehead.getLine();\n      const y = notehead.getY();\n\n      if (yTop === null || y < yTop) {\n        yTop = y;\n      }\n\n      if (yBottom === null || y > yBottom) {\n        yBottom = y;\n      }\n\n      if (displacedX === null && notehead.isDisplaced()) {\n        displacedX = notehead.getAbsoluteX();\n      }\n\n      if (nonDisplacedX === null && !notehead.isDisplaced()) {\n        nonDisplacedX = notehead.getAbsoluteX();\n      }\n\n      highestLine = line > highestLine ? line : highestLine;\n      lowestLine = line < lowestLine ? line : lowestLine;\n\n      if (notehead.isDisplaced()) {\n        highestDisplacedLine = (highestDisplacedLine === false) ?\n          line : Math.max(line, highestDisplacedLine);\n        lowestDisplacedLine = (lowestDisplacedLine === false) ?\n          line : Math.min(line, lowestDisplacedLine);\n      } else {\n        highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n        lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n      }\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      displaced_x: displacedX,\n      non_displaced_x: nonDisplacedX,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n      highest_displaced_line: highestDisplacedLine,\n      lowest_displaced_line: lowestDisplacedLine,\n      highest_non_displaced_line: highestNonDisplacedLine,\n      lowest_non_displaced_line: lowestNonDisplacedLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX() {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX() {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines() {\n    const {\n      stave, glyph,\n      render_options: { stroke_px },\n      context: ctx,\n    } = this;\n\n    const width = glyph.getWidth() + (stroke_px * 2);\n    const doubleWidth = 2 * (glyph.getWidth() + stroke_px) - (Stem.WIDTH / 2);\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const {\n      highest_line,\n      lowest_line,\n      highest_displaced_line,\n      highest_non_displaced_line,\n      lowest_displaced_line,\n      lowest_non_displaced_line,\n      displaced_x,\n      non_displaced_x,\n    } = this.getNoteHeadBounds();\n\n    const min_x = Math.min(displaced_x, non_displaced_x);\n\n    const drawLedgerLine = (y, normal, displaced) => {\n      let x;\n      if (displaced && normal) x = min_x - stroke_px;\n      else if (normal) x = non_displaced_x - stroke_px;\n      else x = displaced_x - stroke_px;\n      const ledgerWidth = (normal && displaced) ? doubleWidth : width;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + ledgerWidth, y);\n      ctx.stroke();\n    };\n\n    const style = Object.assign({}, stave.getStyle() || {}, this.getLedgerLineStyle() || {});\n    this.applyStyle(ctx, style);\n\n    // Draw ledger lines below the staff:\n    for (let line = 6; line <= highest_line; ++line) {\n      const normal = (non_displaced_x !== null) && (line <= highest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line <= highest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    // Draw ledger lines above the staff:\n    for (let line = 0; line >= lowest_line; --line) {\n      const normal = (non_displaced_x !== null) && (line >= lowest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line >= lowest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    this.restoreStyle(ctx, style);\n  }\n\n  // Draw all key modifiers\n  drawModifiers() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const ctx = this.context;\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const notehead = this.note_heads[modifier.getIndex()];\n      const noteheadStyle = notehead.getStyle();\n      if (noteheadStyle) {\n        ctx.save();\n        notehead.applyStyle(ctx);\n      }\n      modifier.setContext(ctx);\n      modifier.draw();\n      if (noteheadStyle) {\n        notehead.restoreStyle(ctx);\n      }\n    }\n    ctx.closeGroup();\n  }\n\n  // Draw the flag for the note\n  drawFlag() {\n    const { stem, beam, context: ctx } = this;\n\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const shouldRenderFlag = beam === null;\n    const glyph = this.getGlyph();\n\n    if (glyph.flag && shouldRenderFlag) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      const noteStemHeight = stem.getHeight();\n      const flagX = this.getStemX();\n      // FIXME: What's with the magic +/- 2\n      const flagY = this.getStemDirection() === Stem.DOWN\n        // Down stems have flags on the left\n        ? y_top - noteStemHeight + 2\n        // Up stems have flags on the eft.\n        : y_bottom - noteStemHeight - 2;\n\n      // Draw the Flag\n      ctx.openGroup('flag', null, { pointerBBox: true });\n      this.applyStyle(ctx, this.getFlagStyle() || false);\n      this.flag.render(ctx, flagX, flagY);\n      this.restoreStyle(ctx, this.getFlagStyle() || false);\n      ctx.closeGroup();\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads() {\n    this.note_heads.forEach(notehead => {\n      this.context.openGroup('notehead', null, { pointerBBox: true });\n      notehead.setContext(this.context).draw();\n      this.context.closeGroup();\n    });\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stemStruct) {\n    // GCR TODO: I can't find any context in which this is called with the stemStruct\n    // argument in the codebase or tests. Nor can I find a case where super.drawStem\n    // is called at all. Perhaps these should be removed?\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (stemStruct) {\n      this.setStem(new Stem(stemStruct));\n    }\n\n    this.context.openGroup('stem', null, { pointerBBox: true });\n    this.stem.setContext(this.context).draw();\n    this.context.closeGroup();\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this.note_heads.forEach(notehead => notehead.setX(xBegin));\n\n    // Format stem x positions\n    const stemX = this.getStemX();\n    this.stem.setNoteHeadXBounds(stemX, stemX);\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Draw each part of the note\n    this.drawLedgerLines();\n\n    // Apply the overall style -- may be contradicted by local settings:\n    this.applyStyle();\n    this.setAttribute('el', this.context.openGroup('stavenote', this.getAttribute('id')));\n    this.context.openGroup('note', null, { pointerBBox: true });\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    this.context.closeGroup();\n    this.drawModifiers();\n    this.context.closeGroup();\n    this.restoreStyle();\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavenote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements an abstract interface for notes and chords that\n// are rendered on a stave. Notes have some common properties: All of them\n// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n//\n// Some notes have stems, heads, dots, etc. Most notational elements that\n// surround a note are called *modifiers*, and every note has an associated\n// array of them. All notes also have a rendering context and belong to a stave.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Tickable } from './tickable';\n\nexport class Note extends Tickable {\n  static get CATEGORY() { return 'note'; }\n  static get STAVEPADDING() { return 12; }\n\n  // Debug helper. Displays various note metrics for the given\n  // note.\n  static plotMetrics(ctx, note, yPos) {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n    const xPre1 = note.getAbsoluteX() - metrics.extraLeftPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.noteWidth;\n    const xPost2 = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx;\n    const xEnd = note.getAbsoluteX()\n      + metrics.noteWidth\n      + metrics.extraRightPx\n      + metrics.modRightPx;\n    const xFreedomRight = xEnd + note.getFormatterMetrics().freedom.right;\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = (yPos + 7);\n    function stroke(x1, x2, color, yy = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    Vex.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation),\n        xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n  // positioning and layout.\n  // To create a new note you need to provide a `note_struct`, which consists\n  // of the following fields:\n  //\n  // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n  // `dots`: The number of dots, which affects the duration.\n  // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n  //\n  // The range of values for these parameters are available in `src/tables.js`.\n  constructor(note_struct) {\n    super();\n    this.setAttribute('type', 'Note');\n\n    if (!note_struct) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Note must have valid initialization data to identify duration and type.'\n      );\n    }\n\n    // Parse `note_struct` and get note properties.\n    const initData = Flow.parseNoteData(note_struct);\n    if (!initData) {\n      throw new Vex.RuntimeError(\n        'BadArguments', `Invalid note initialization object: ${JSON.stringify(note_struct)}`\n      );\n    }\n\n    // Set note properties from parameters.\n    this.duration = initData.duration;\n    this.dots = initData.dots;\n    this.noteType = initData.type;\n\n    if (note_struct.duration_override) {\n      // Custom duration\n      this.setDuration(note_struct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(initData.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (this.positions && (typeof (this.positions) !== 'object' || !this.positions.length)) {\n      throw new Vex.RuntimeError('BadArguments', 'Note keys must be array type.');\n    }\n\n    // Note to play for audio players.\n    this.playNote = null;\n\n    // Positioning contexts used by the Formatter.\n    this.tickContext = null;    // The current tick context.\n    this.modifierContext = null;\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0;             // Width in pixels calculated after preFormat\n    this.extraLeftPx = 0;       // Extra room on left for offset note head\n    this.extraRightPx = 0;      // Extra room on right for offset note head\n    this.x_shift = 0;           // X shift from tick context X\n    this.left_modPx = 0;        // Max width of left modifiers\n    this.right_modPx = 0;       // Max width of right modifiers\n    this.voice = null;          // The voice that this note is in\n    this.preFormatted = false;  // Is this note preFormatted?\n    this.ys = [];               // list of y coordinates for each note\n    // we need to hold on to these for ties and beams.\n\n    if (note_struct.align_center) {\n      this.setCenterAlignment(note_struct.align_center);\n    }\n\n    // The render surface.\n    this.stave = null;\n    this.render_options = {\n      annotation_spacing: 5,\n      stave_padding: Note.STAVEPADDING,\n    };\n  }\n\n  // Get and set the play note, which is arbitrary data that can be used by an\n  // audio player.\n  getPlayNote() { return this.playNote; }\n  setPlayNote(note) { this.playNote = note; return this; }\n\n  // Don't play notes by default, call them rests. This is also used by things like\n  // beams and dots for positioning.\n  isRest() { return false; }\n\n  // TODO(0xfe): Why is this method here?\n  addStroke(index, stroke) {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get and set the target stave.\n  getStave() { return this.stave; }\n  setStave(stave) {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // `Note` is not really a modifier, but is used in\n  // a `ModifierContext`.\n  getCategory() { return Note.CATEGORY; }\n\n  // Set the rendering context for the note.\n  setContext(context) { this.context = context; return this; }\n\n  // Get and set spacing to the left and right of the notes.\n  getExtraLeftPx() { return this.extraLeftPx; }\n  getExtraRightPx() { return this.extraRightPx; }\n  setExtraLeftPx(x) { this.extraLeftPx = x; return this; }\n  setExtraRightPx(x) { this.extraRightPx = x; return this; }\n\n  // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n\n  // Get the stave line number for the note.\n  getLineNumber() { return 0; }\n\n  // Get the stave line number for rest.\n  getLineForRest() { return 0; }\n\n  // Get the glyph associated with this note.\n  getGlyph() { return this.glyph; }\n\n  getGlyphWidth() {\n    return this.glyph.getWidth(this.render_options.glyph_font_scale);\n  }\n\n  // Set and get Y positions for this note. Each Y value is associated with\n  // an individual pitch/key within the note/chord.\n  setYs(ys) { this.ys = ys; return this; }\n  getYs() {\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  // Get the Y position of the space above the stave onto which text can\n  // be rendered.\n  getYForTopText(text_line) {\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', 'No stave attached to this note.');\n    }\n\n    return this.stave.getYForTopText(text_line);\n  }\n\n  // Get a `BoundingBox` for this note.\n  getBoundingBox() { return null; }\n\n  // Returns the voice that this note belongs in.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  // Attach this note to `voice`.\n  setVoice(voice) {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get and set the `TickContext` for this note.\n  getTickContext() { return this.tickContext; }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Accessors for the note type.\n  getDuration() { return this.duration; }\n  isDotted() { return (this.dots > 0); }\n  hasStem() { return false; }\n  getDots() { return this.dots; }\n  getNoteType() { return this.noteType; }\n  setBeam() { return this; } // ignore parameters\n\n  // Attach this note to a modifier context.\n  setModifierContext(mc) { this.modifierContext = mc; return this; }\n\n  // Attach a modifier to this note.\n  addModifier(modifier, index = 0) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get the coordinates for where modifiers begin.\n  getModifierStartXY() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  // Get bounds and metrics for this note.\n  //\n  // Returns a struct with fields:\n  // `width`: The total width of the note (including modifiers.)\n  // `noteWidth`: The width of the note head only.\n  // `left_shift`: The horizontal displacement of the note.\n  // `modLeftPx`: Start `X` for left modifiers.\n  // `modRightPx`: Start `X` for right modifiers.\n  // `extraLeftPx`: Extra space on left of note.\n  // `extraRightPx`: Extra space on right of note.\n  getMetrics() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    let modLeftPx = 0;\n    let modRightPx = 0;\n    if (this.modifierContext != null) {\n      modLeftPx = this.modifierContext.state.left_shift;\n      modRightPx = this.modifierContext.state.right_shift;\n    }\n\n    const width = this.getWidth();\n    return {\n      width,\n      noteWidth: width - modLeftPx - modRightPx - this.extraLeftPx - this.extraRightPx,\n      left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n\n      // Modifiers, accidentals etc.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      extraLeftPx: this.extraLeftPx,\n      extraRightPx: this.extraRightPx,\n    };\n  }\n\n  // Get and set width of note. Used by the formatter for positioning.\n  setWidth(width) { this.width = width; }\n  getWidth() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  // Displace note by `x` pixels. Used by the formatter.\n  setXShift(x) { this.x_shift = x; return this; }\n  getXShift() { return this.x_shift; }\n\n  // Get `X` position of this tick context.\n  getX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    return this.tickContext.getX() + this.x_shift;\n  }\n\n  // Get the absolute `X` position of this note's tick context. This\n  // excludes x_shift, so you'll need to factor it in if you're\n  // looking for the post-formatted x-position.\n  getAbsoluteX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    // Position note to left edge of tick context.\n    let x = this.tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n    }\n\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n\n    return x;\n  }\n  setPreFormatted(value) {\n    this.preFormatted = value;\n\n    // Maintain the width of left and right modifiers in pixels.\n    if (this.preFormatted) {\n      const extra = this.tickContext.getExtraPx();\n      this.left_modPx = Math.max(this.left_modPx, extra.left);\n      this.right_modPx = Math.max(this.right_modPx, extra.right);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/note.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport { Element } from './element';\n\nexport class StaveModifier extends Element {\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n      BEGIN: 5,\n      END: 6,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'StaveModifier');\n\n    this.padding = 10;\n    this.position = StaveModifier.Position.ABOVE;\n  }\n\n  getPosition() { return this.position; }\n  setPosition(position) { this.position = position; return this; }\n  getStave() { return this.stave; }\n  setStave(stave) { this.stave = stave; return this; }\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getCategory() { return ''; }\n  makeSpacer(padding) {\n    // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n    // instead of this hack.\n\n    return {\n      getContext() { return true; },\n      setStave() {},\n      renderToStave() {},\n      getMetrics() {\n        return { width: padding };\n      },\n    };\n  }\n  placeGlyphOnLine(glyph, stave, line) {\n    glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n  }\n  getPadding(index) {\n    return (index !== undefined && index < 2 ? 0 : this.padding);\n  }\n  setPadding(padding) { this.padding = padding; return this; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavemodifier.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\nfunction L(...args) { if (Stem.DEBUG) Vex.L('Vex.Flow.Stem', args); }\n\nexport class Stem extends Element {\n  static get CATEGORY() { return 'stem'; }\n\n  // Stem directions\n  static get UP() {\n    return 1;\n  }\n  static get DOWN() {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH() {\n    return Flow.STEM_WIDTH;\n  }\n  static get HEIGHT() {\n    return Flow.STEM_HEIGHT;\n  }\n\n  constructor(options = {}) {\n    super();\n    this.setAttribute('type', 'Stem');\n\n    // Default notehead x bounds\n    this.x_begin = options.x_begin || 0;\n    this.x_end = options.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options.y_top || 0;\n    this.y_bottom = options.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options.hide || false;\n\n    this.isStemlet = options.isStemlet || false;\n    this.stemletHeight = options.stemletHeight || 0;\n\n    // Changing where the stem meets the head\n    this.stem_up_y_offset = options.stem_up_y_offset || 0;\n    this.stem_down_y_offset = options.stem_down_y_offset || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin, x_end) {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction) { this.stem_direction = direction; }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext) { this.stem_extension = ext; }\n  getExtension() { return this.stem_extension; }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top, y_bottom) {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // The category of the object\n  getCategory() { return Stem.CATEGORY; }\n\n  // Gets the entire height for the stem\n  getHeight() {\n    const y_offset = (this.stem_direction === Stem.UP) ? this.stem_up_y_offset : this.stem_down_y_offset; // eslint-disable-line max-len\n    return ((this.y_bottom - this.y_top) * this.stem_direction) +\n           ((Stem.HEIGHT - y_offset + this.stem_extension) * this.stem_direction);\n  }\n  getBoundingBox() {\n    throw new Vex.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents() {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + (stemHeight * -this.stem_direction);\n\n    return { topY: stemTipY, baseY: outerMostNoteheadY };\n  }\n\n  setVisibility(isVisible) {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet, stemletHeight) {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  draw() {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top + this.stem_down_y_offset;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom - this.stem_up_y_offset;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet\n      ? stemHeight - this.stemletHeight * this.stem_direction\n      : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle(ctx);\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - (this.renderHeightAdjustment * stem_direction));\n    ctx.stroke();\n    this.restoreStyle(ctx);\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stem.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Fraction class that represents a rational number\n//\n// @author zz85\n// @author incompleteopus (modifications)\n\n/* eslint-disable no-underscore-dangle */\n\nimport { Vex } from './vex';\nexport class Fraction {\n  /**\n   * GCD: Find greatest common divisor using Euclidean algorithm\n   */\n  static GCD(a, b) {\n    if (typeof a !== 'number' || typeof b !== 'number') {\n      throw new Vex.RERR('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /**\n   * LCM: Lowest common multiple\n   */\n  static LCM(a, b) {\n    return ((a * b) / Fraction.GCD(a, b));\n  }\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers\n   */\n  static LCMM(args) {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length === 1) {\n      return args[0];\n    } else if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    } else {\n      const arg0 = args[0];\n      args.shift();\n      return Fraction.LCM(arg0, Fraction.LCMM(args));\n    }\n  }\n\n  constructor(numerator, denominator) {\n    this.set(numerator, denominator);\n  }\n  set(numerator, denominator) {\n    this.numerator = numerator === undefined ? 1 : numerator;\n    this.denominator = denominator === undefined ? 1 : denominator;\n    return this;\n  }\n  value() {\n    return this.numerator / this.denominator;\n  }\n  simplify() {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n  add(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  subtract(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  multiply(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n  divide(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  // Simplifies both sides and checks if they are equal.\n  equals(compare) {\n    const a = Fraction.__compareA.copy(compare).simplify();\n    const b = Fraction.__compareB.copy(this).simplify();\n\n    return (a.numerator === b.numerator) && (a.denominator === b.denominator);\n  }\n\n  // Greater than operator.\n  greaterThan(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator > 0);\n  }\n\n  // Greater than or equals operator.\n  greaterThanEquals(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator >= 0);\n  }\n\n  // Less than operator.\n  lessThan(compare) {\n    return !(this.greaterThanEquals(compare));\n  }\n\n  // Less than or equals operator.\n  lessThanEquals(compare) {\n    return !(this.greaterThan(compare));\n  }\n\n  // Creates a new copy with this current values.\n  clone() {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  // Copies value of another Fraction into itself.\n  copy(copy) {\n    return this.set(copy.numerator, copy.denominator);\n  }\n\n  // Returns the integer component eg. (4/2) == 2\n  quotient() {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  // Returns the fraction component when reduced to a mixed number\n  fraction() {\n    return this.numerator % this.denominator;\n  }\n\n  // Returns the absolute value\n  abs() {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  // Returns a raw string representation\n  toString() {\n    return this.numerator + '/' + this.denominator;\n  }\n\n  // Returns a simplified string respresentation\n  toSimplifiedString() {\n    return Fraction.__tmp.copy(this).simplify().toString();\n  }\n\n  // Returns string representation in mixed form\n  toMixedString() {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__tmp.copy(this);\n\n    if (q < 0) {\n      f.abs().fraction();\n    } else {\n      f.fraction();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ' ' + f.toSimplifiedString();\n      }\n    } else {\n      if (f.numerator === 0) {\n        s = '0';\n      } else {\n        s = f.toSimplifiedString();\n      }\n    }\n\n    return s;\n  }\n\n  // Parses a fraction string\n  parse(str) {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = (i[1]) ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n\n// Temporary cached objects\nFraction.__compareA = new Fraction();\nFraction.__compareB = new Fraction();\nFraction.__tmp = new Fraction();\n\n\n\n// WEBPACK FOOTER //\n// ./src/fraction.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the formatting and layout algorithms that are used\n// to position notes in a voice. The algorithm can align multiple voices both\n// within a stave, and across multiple staves.\n//\n// To do this, the formatter breaks up voices into a grid of rational-valued\n// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n// to each tick based on the widths of the notes and modifiers in that tick. This\n// establishes the smallest amount of space required for each tick.\n//\n// Finally, the formatter distributes the left over space proportionally to\n// all the ticks, setting the `x` values of the notes in each tick.\n//\n// See `tests/formatter_tests.js` for usage examples. The helper functions included\n// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\nimport { Vex } from './vex';\nimport { Beam } from './beam';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\nimport { Voice } from './voice';\nimport { StaveConnector } from './staveconnector';\nimport { StaveNote } from './stavenote';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nfunction L(...args) { if (Formatter.DEBUG) Vex.L('Vex.Flow.Formatter', args); }\n\n// Helper function to locate the next non-rest note(s).\nfunction lookAhead(notes, restLine, i, compare) {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = restLine;\n\n  // Get the rest line for next valid non-rest note group.\n  for (i += 1; i < notes.length; i += 1) {\n    const note = notes[i];\n    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = note.getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && restLine !== nextRestLine) {\n    const top = Math.max(restLine, nextRestLine);\n    const bot = Math.min(restLine, nextRestLine);\n    nextRestLine = Vex.MidLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n// Take an array of `voices` and place aligned tickables in the same context. Returns\n// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n// multiplier.\n//\n// Params:\n// * `voices`: Array of `Voice` instances.\n// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n// * `addToContext`: Function to add tickable to context.\nfunction createContexts(voices, ContextType, addToContext) {\n  if (!voices || !voices.length) {\n    throw new Vex.RERR('BadArgument', 'No voices to format');\n  }\n\n  // Find out highest common multiple of resolution multipliers.\n  // The purpose of this is to find out a common denominator\n  // for all fractional tick values in all tickables of all voices,\n  // so that the values can be expanded and the numerator used\n  // as an integer tick value.\n  const totalTicks = voices[0].getTotalTicks();\n  const resolutionMultiplier = voices.reduce((resolutionMultiplier, voice) => {\n    if (!voice.getTotalTicks().equals(totalTicks)) {\n      throw new Vex.RERR(\n        'TickMismatch', 'Voices should have same total note duration in ticks.'\n      );\n    }\n\n    if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n      throw new Vex.RERR(\n        'IncompleteVoice', 'Voice does not have enough notes.'\n      );\n    }\n\n    return Math.max(\n      resolutionMultiplier,\n      Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier())\n    );\n  }, 1);\n\n  // Initialize tick maps.\n  const tickToContextMap = {};\n  const tickList = [];\n  const contexts = [];\n\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach(voice => {\n    // Use resolution multiplier as denominator to expand ticks\n    // to suitable integer values, so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach(tickable => {\n      const integerTicks = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext = new ContextType();\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks]);\n\n      // Maintain a sorted list of tick contexts.\n      tickList.push(integerTicks);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: Vex.SortAndUnique(tickList, (a, b) => a - b, (a, b) => a === b),\n    resolutionMultiplier,\n  };\n}\n\nexport class Formatter {\n  // Helper function to layout \"notes\" one after the other without\n  // regard for proportions. Useful for tests and debugging.\n  static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n    notes.reduce((x, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const extra = tick.getExtraPx();\n      tick.setX(x + extra.left);\n\n      return x + tick.getWidth() + extra.right + paddingBetween;\n    }, x);\n  }\n\n  // Helper function to plot formatter debug info.\n  static plotDebugging(ctx, formatter, xPos, y1, y2) {\n    const x = xPos + Note.STAVEPADDING;\n    const contextGaps = formatter.contextGaps;\n    function stroke(x1, x2, color) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n\n    contextGaps.gaps.forEach(gap => {\n      stroke(x + gap.x1, x + gap.x2, '#aaa');\n      // Vex.drawDot(ctx, xPos + gap.x1, yPos, 'blue');\n      ctx.fillText(Math.round(gap.x2 - gap.x1), x + gap.x1, y2 + 12);\n    });\n\n    ctx.fillText(Math.round(contextGaps.total) + 'px', x - 20, y2 + 12);\n    ctx.setFillStyle('red');\n\n    ctx.fillText('Loss: ' +\n      formatter.lossHistory.map(loss => Math.round(loss)), x - 20, y2 + 22);\n    ctx.restore();\n  }\n\n  // Helper function to format and draw a single voice. Returns a bounding\n  // box for the notation.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n  // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n  // * `params` - One of below:\n  //    * Setting `autobeam` only `(context, stave, notes, true)` or\n  //      `(ctx, stave, notes, {autobeam: true})`\n  //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n  //    * Setting both a struct is needed `(context, stave, notes, {\n  //      autobeam: true, align_rests: true})`\n  //\n  // `autobeam` automatically generates beams for the notes.\n  // `align_rests` aligns rests with nearby notes.\n  static FormatAndDraw(ctx, stave, notes, params) {\n    const options = {\n      auto_beam: false,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(options, params);\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice], { align_rests: options.align_rests })\n      .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  // Helper function to format and draw aligned tab and stave notes in two\n  // separate staves.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n  // * `stave` - A `Stave` instance on which to render `Note`s.\n  // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n  // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n  // * `autobeam` - Automatically generate beams.\n  // * `params` - A configuration object:\n  //    * `autobeam` automatically generates beams for the notes.\n  //    * `align_rests` aligns rests with nearby notes.\n  static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n    const opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(opts, params);\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(tabnotes);\n\n    // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice], { align_rests: opts.align_rests })\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  // Auto position rests based on previous/next note positions.\n  //\n  // Params:\n  // * `notes`: An array of notes.\n  // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n  // * `alignTuplets`: If set to false, ignores tuplets.\n  static AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n    notes.forEach((note, index) => {\n      if (note instanceof StaveNote && note.isRest()) {\n        if (note.tuplet && !alignTuplets) return;\n\n        // If activated rests not on default can be rendered as specified.\n        const position = note.getGlyph().position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') return;\n\n        if (alignAllNotes || note.beam != null) {\n          // Align rests with previous/next notes.\n          const props = note.getKeyProps()[0];\n          if (index === 0) {\n            props.line = lookAhead(notes, props.line, index, false);\n            note.setKeyLine(0, props.line);\n          } else if (index > 0 && index < notes.length) {\n            // If previous note is a rest, use its line number.\n            let restLine;\n            if (notes[index - 1].isRest()) {\n              restLine = notes[index - 1].getKeyProps()[0].line;\n              props.line = restLine;\n            } else {\n              restLine = notes[index - 1].getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, restLine, index, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    });\n\n    return this;\n  }\n\n  constructor() {\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Total number of ticks in the voice.\n    this.totalTicks = new Fraction(0, 1);\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = null;\n    this.modiferContexts = null;\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n  }\n\n  // Find all the rests in each of the `voices` and align them\n  // to neighboring notes. If `alignAllNotes` is `false`, then only\n  // align non-beamed notes.\n  alignRests(voices, alignAllNotes) {\n    if (!voices || !voices.length) {\n      throw new Vex.RERR('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach(voice =>\n      Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  // Calculate the minimum width required to align and format `voices`.\n  preCalculateMinTotalWidth(voices) {\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts if not already created.\n    if (!this.tickContexts) {\n      if (!voices) {\n        throw new Vex.RERR(\n          'BadArgument', \"'voices' required to run preCalculateMinTotalWidth\"\n        );\n      }\n\n      this.createTickContexts(voices);\n    }\n\n    const { list: contextList, map: contextMap } = this.tickContexts;\n\n    // Go through each tick context and calculate total width.\n    this.minTotalWidth = contextList\n      .map(tick => {\n        const context = contextMap[tick];\n        context.preFormat();\n        return context.getWidth();\n      })\n      .reduce((a, b) => a + b, 0);\n\n    this.hasMinTotalWidth = true;\n\n    return this.minTotalWidth;\n  }\n\n  // Get minimum width required to render all voices. Either `format` or\n  // `preCalculateMinTotalWidth` must be called before this method.\n  getMinTotalWidth() {\n    if (!this.hasMinTotalWidth) {\n      throw new Vex.RERR(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  // Create `ModifierContext`s for each tick in `voices`.\n  createModifierContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      ModifierContext,\n      (tickable, context) => tickable.addToModifierContext(context)\n    );\n\n    this.modiferContexts = contexts;\n    return contexts;\n  }\n\n  // Create `TickContext`s for each tick in `voices`. Also calculate the\n  // total number of ticks in voices.\n  createTickContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      TickContext,\n      (tickable, context) => context.addTickable(tickable)\n    );\n\n    contexts.array.forEach(context => {\n      context.tContexts = contexts.array;\n    });\n\n    this.totalTicks = voices[0].getTicksUsed().clone();\n    this.tickContexts = contexts;\n    return contexts;\n  }\n\n  // This is the core formatter logic. Format voices and justify them\n  // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n  // that can't retreive widths without a canvas. This method sets the `x` positions\n  // of all the tickables/notes in the formatter.\n  preFormat(justifyWidth = 0, renderingContext, voices, stave) {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    const { list: contextList, map: contextMap, resolutionMultiplier } = contexts;\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voices && stave) {\n      voices.forEach(voice => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    const centerX = justifyWidth / 2;\n    this.minTotalWidth = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      if (renderingContext) context.setContext(renderingContext);\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.extraLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.extraLeftPx;\n    });\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return;\n\n    // Pass 2: Take leftover width, and distribute it to proportionately to\n    // all notes.\n    const remainingX = justifyWidth - this.minTotalWidth;\n    const leftoverPxPerTick = remainingX / (this.totalTicks.value() * resolutionMultiplier);\n    let spaceAccum = 0;\n\n    contextList.forEach((tick, index) => {\n      const prevTick = contextList[index - 1] || 0;\n      const context = contextMap[tick];\n      const tickSpace = (tick - prevTick) * leftoverPxPerTick;\n\n      spaceAccum += tickSpace;\n      context.setX(context.getX() + spaceAccum);\n\n      // Move center aligned tickables to middle\n      context\n        .getCenterAlignedTickables()\n        .forEach(tickable => { // eslint-disable-line\n          tickable.center_x_shift = centerX - context.getX();\n        });\n    });\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return;\n\n    this.justifyWidth = justifyWidth;\n    this.lossHistory = [];\n    this.evaluate();\n  }\n\n  // Calculate the total cost of this formatting decision.\n  evaluate() {\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = { total: 0, gaps: [] };\n    this.tickContexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = this.tickContexts.list[index - 1];\n      const prevContext = this.tickContexts.map[prevTick];\n      const context = this.tickContexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n\n      const insideRightEdge = prevContext.getX() + prevMetrics.width;\n      const insideLeftEdge = context.getX();\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    const durationStats = this.durationStats = {};\n\n    function updateStats(duration, space) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = { mean: space, count: 1 };\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note, i, notes) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.noteWidth +\n          metrics.modRightPx + metrics.extraRightPx;\n        let space = 0;\n\n        if (i < (notes.length - 1)) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() -\n            rightMetrics.modLeftPx - rightMetrics.extraLeftPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.space.mean = durationStats[duration].mean;\n\n        totalDeviation += Math.pow(durationStats[duration].mean, 2);\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this;\n  }\n\n  // Run a single iteration of rejustification. At a high level, this method calculates\n  // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n  // attempt to reduce the cost. You can call this method multiple times until it finds\n  // and oscillates around a global minimum.\n  tune() {\n    const sum = (means) => means.reduce((a, b) => a + b);\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current, prev, next, shift) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.tickContexts.list.forEach((tick, index, list) => {\n      const context = this.tickContexts.map[tick];\n      const prevContext = (index > 0) ? this.tickContexts.map[list[index - 1]] : null;\n      const nextContext = (index < list.length - 1) ? this.tickContexts.map[list[index + 1]] : null;\n\n      move(context, prevContext, nextContext, shift);\n\n      const cost = -sum(\n        context.getTickables().map(t => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      const minShift = Math.min(5, Math.abs(shift));\n      shift = shift > 0 ? minShift : -minShift;\n    });\n\n    return this.evaluate();\n  }\n\n  // This is the top-level call for all formatting logic completed\n  // after `x` *and* `y` values have been computed for the notes\n  // in the voices.\n  postFormat() {\n    const postFormatContexts = (contexts) =>\n      contexts.list.forEach(tick => contexts.map[tick].postFormat());\n\n    postFormatContexts(this.modiferContexts);\n    postFormatContexts(this.tickContexts);\n\n    return this;\n  }\n\n  // Take all `voices` and create `ModifierContext`s out of them. This tells\n  // the formatters that the voices belong on a single stave.\n  joinVoices(voices) {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  // Align rests in voices, justify the contexts, and position the notes\n  // so voices are aligned and ready to render onto the stave. This method\n  // mutates the `x` positions of all tickables in `voices`.\n  //\n  // Voices are full justified to fit in `justifyWidth` pixels.\n  //\n  // Set `options.context` to the rendering context. Set `options.align_rests`\n  // to true to enable rest alignment.\n  format(voices, justifyWidth, options) {\n    const opts = {\n      align_rests: false,\n      context: null,\n      stave: null,\n    };\n\n    Vex.Merge(opts, options);\n    this.voices = voices;\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred\n  // from the `stave`.\n  formatToStave(voices, stave, options) {\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n    L('Formatting voices to width: ', justifyWidth);\n    const opts = { context: stave.getContext() };\n    Vex.Merge(opts, options);\n    return this.format(voices, justifyWidth, opts);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/formatter.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the main Voice class. It's mainly a container\n// object to group `Tickables` for formatting.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Voice extends Element {\n  // Modes allow the addition of ticks in three different ways:\n  //\n  // STRICT: This is the default. Ticks must fill the voice.\n  // SOFT:   Ticks can be added without restrictions.\n  // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n  //         tick length.\n  static get Mode() {\n    return {\n      STRICT: 1,\n      SOFT: 2,\n      FULL: 3,\n    };\n  }\n\n  constructor(time) {\n    super();\n    this.setAttribute('type', 'Voice');\n\n    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n    if (typeof(time) === 'string') {\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        time = {\n          num_beats: match[1],\n          beat_value: match[2],\n          resolution: Flow.RESOLUTION,\n        };\n      }\n    }\n\n    // Default time sig is 4/4\n    this.time = Vex.Merge({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }, time);\n\n    // Recalculate total ticks.\n    this.totalTicks = new Fraction(\n      this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n    this.resolutionMultiplier = 1;\n\n    // Set defaults\n    this.tickables = [];\n    this.ticksUsed = new Fraction(0, 1);\n    this.smallestTickCount = this.totalTicks.clone();\n    this.largestTickWidth = 0;\n    this.stave = null;\n    // Do we care about strictly timed notes\n    this.mode = Voice.Mode.STRICT;\n\n    // This must belong to a VoiceGroup\n    this.voiceGroup = null;\n  }\n\n  // Get the total ticks in the voice\n  getTotalTicks() { return this.totalTicks; }\n\n  // Get the total ticks used in the voice by all the tickables\n  getTicksUsed() { return this.ticksUsed; }\n\n  // Get the largest width of all the tickables\n  getLargestTickWidth() { return this.largestTickWidth; }\n\n  // Get the tick count for the shortest tickable\n  getSmallestTickCount() { return this.smallestTickCount; }\n\n  // Get the tickables in the voice\n  getTickables() { return this.tickables; }\n\n  // Get/set the voice mode, use a value from `Voice.Mode`\n  getMode() { return this.mode; }\n  setMode(mode) { this.mode = mode; return this; }\n\n  // Get the resolution multiplier for the voice\n  getResolutionMultiplier() { return this.resolutionMultiplier; }\n\n  // Get the actual tick resolution for the voice\n  getActualResolution() { return this.resolutionMultiplier * this.time.resolution; }\n\n  // Set the voice's stave\n  setStave(stave) {\n    this.stave = stave;\n    this.boundingBox = null; // Reset bounding box so we can reformat\n    return this;\n  }\n\n  // Get the bounding box for the voice\n  getBoundingBox() {\n    let stave;\n    let boundingBox;\n    let bb;\n    let i;\n\n    if (!this.boundingBox) {\n      if (!this.stave) throw new Vex.RERR('NoStave', \"Can't get bounding box without stave.\");\n      stave = this.stave;\n      boundingBox = null;\n\n      for (i = 0; i < this.tickables.length; ++i) {\n        this.tickables[i].setStave(stave);\n\n        bb = this.tickables[i].getBoundingBox();\n        if (!bb) continue;\n\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  // Every tickable must be associated with a voiceGroup. This allows formatters\n  // and preformatters to associate them with the right modifierContexts.\n  getVoiceGroup() {\n    if (!this.voiceGroup) {\n      throw new Vex.RERR('NoVoiceGroup', 'No voice group for voice.');\n    }\n\n    return this.voiceGroup;\n  }\n\n  // Set the voice group\n  setVoiceGroup(g) { this.voiceGroup = g; return this; }\n\n  // Set the voice mode to strict or soft\n  setStrict(strict) {\n    this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n    return this;\n  }\n\n  // Determine if the voice is complete according to the voice mode\n  isComplete() {\n    if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  // Add a tickable to the voice\n  addTickable(tickable) {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n\n      if (\n        (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.ticksUsed.subtract(ticks);\n        throw new Vex.RERR('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  // Add an array of tickables to the voice.\n  addTickables(tickables) {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n\n    return this;\n  }\n\n  // Preformats the voice by applying the voice's stave to each note.\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    this.tickables.forEach((tickable) => {\n      if (!tickable.getStave()) {\n        tickable.setStave(this.stave);\n      }\n    });\n\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the voice onto the canvas `context` and an optional `stave`.\n  // If `stave` is omitted, it is expected that the notes have staves\n  // already set.\n  draw(context = this.context, stave = this.stave) {\n    this.setRendered();\n    let boundingBox = null;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n\n      // Set the stave if provided\n      if (stave) tickable.setStave(stave);\n\n      if (!tickable.getStave()) {\n        throw new Vex.RuntimeError(\n          'MissingStave', 'The voice cannot draw tickables without staves.'\n        );\n      }\n\n      if (i === 0) boundingBox = tickable.getBoundingBox();\n\n      if (i > 0 && boundingBox) {\n        const tickable_bb = tickable.getBoundingBox();\n        if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n      }\n\n      tickable.setContext(context);\n      tickable.draw();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/voice.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport { Vex } from './vex';\nimport { Tickable } from './tickable';\nimport { Fraction } from './fraction';\n\nexport class TickContext extends Tickable {\n  static getNextContext(tContext) {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    return contexts[index + 1];\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'TickContext');\n    this.currentTick = new Fraction(0, 1);\n    this.maxTicks = new Fraction(0, 1);\n    this.minTicks = null;\n    this.padding = 3;     // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.xBase = 0;        // base x position without xOffset\n    this.xOffset = 0;      // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n    this.tickables = [];   // Notes, tabs, chords, lyrics.\n    this.notePx = 0;       // width of widest note in this context\n    this.extraLeftPx = 0;  // Extra left pixels for modifers & displace notes\n    this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n    this.tContexts = [];   // Parent array of tick contexts\n  }\n\n  getX() { return this.x; }\n  setX(x) { this.x = x; this.xBase = x; this.xOffset = 0; return this; }\n  getXBase() { return this.xBase; } // use of xBase and xOffset is optional, avoids offset creep\n  setXBase(xBase) { this.xBase = xBase; this.x = xBase + this.xOffset; }\n  getXOffset() { return this.xOffset; }\n  setXOffset(xOffset) { this.xOffset = xOffset; this.x = this.xBase + xOffset; }\n  getWidth() { return this.width + (this.padding * 2); }\n  setPadding(padding) { this.padding = padding; return this; }\n  getMaxTicks() { return this.maxTicks; }\n  getMinTicks() { return this.minTicks; }\n  getTickables() { return this.tickables; }\n\n  getCenterAlignedTickables() {\n    return this.tickables.filter(tickable => tickable.isCenterAligned());\n  }\n\n  // Get widths context, note and left/right modifiers for formatting\n  getMetrics() {\n    const { width, notePx, extraLeftPx, extraRightPx } = this;\n    return { width, notePx, extraLeftPx, extraRightPx };\n  }\n\n  getCurrentTick() { return this.currentTick; }\n  setCurrentTick(tick) {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  // ### DEPRECATED ###\n  // Get left & right pixels used for modifiers. THIS METHOD IS DEPRECATED. Use\n  // the getMetrics() method instead!\n  getExtraPx() {\n    let left_shift = 0;\n    let right_shift = 0;\n    let extraLeftPx = 0;\n    let extraRightPx = 0;\n    for (let i = 0; i < this.tickables.length; i++) {\n      extraLeftPx = Math.max(this.tickables[i].extraLeftPx || 0, extraLeftPx);\n      extraRightPx = Math.max(this.tickables[i].extraRightPx || 0, extraRightPx);\n      const mContext = this.tickables[i].modifierContext;\n      if (mContext && mContext != null) {\n        left_shift = Math.max(left_shift, mContext.state.left_shift);\n        right_shift = Math.max(right_shift, mContext.state.right_shift);\n      }\n    }\n    return {\n      left: left_shift,\n      right: right_shift,\n      extraLeft: extraLeftPx,\n      extraRight: extraRightPx,\n    };\n  }\n\n  addTickable(tickable) {\n    if (!tickable) {\n      throw new Vex.RERR('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      this.ignore_ticks = false;\n\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max extra pixels from all tickables in the context\n      this.extraLeftPx = Math.max(this.extraLeftPx, metrics.extraLeftPx + metrics.modLeftPx);\n      this.extraRightPx = Math.max(this.extraRightPx, metrics.extraRightPx + metrics.modRightPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.extraLeftPx + this.extraRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tickcontext.js","// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n// Bounding boxes for interactive notation\n\nexport class BoundingBox {\n  static copy(that) {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n  getX() { return this.x; }\n  getY() { return this.y; }\n  getW() { return this.w; }\n  getH() { return this.h; }\n  setX(x) { this.x = x; return this; }\n  setY(y) { this.y = y; return this; }\n  setW(w) { this.w = w; return this; }\n  setH(h) { this.h = h; return this; }\n  move(x, y) { this.x += x; this.y += y; }\n  clone() { return BoundingBox.copy(this); }\n\n  // Merge my box with given box. Creates a bigger bounding box unless\n  // the given box is contained in this one.\n  mergeWith(boundingBox, ctx) {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n    const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    if (ctx) this.draw(ctx);\n    return this;\n  }\n\n  draw(ctx, x, y) {\n    if (!x) x = 0;\n    if (!y) y = 0;\n    ctx.rect(this.x + x, this.y + y, this.w, this.h);\n    ctx.stroke();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/boundingbox.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Support for different rendering contexts: Canvas, Raphael\n\n/* global document: false */\n\nimport { CanvasContext } from './canvascontext';\nimport { RaphaelContext } from './raphaelcontext';\nimport { SVGContext } from './svgcontext';\nimport { Vex } from './vex';\n\nlet lastContext = null;\n\nexport class Renderer {\n  static get Backends() {\n    return {\n      CANVAS: 1,\n      RAPHAEL: 2,\n      SVG: 3,\n      VML: 4,\n    };\n  }\n\n  // End of line types\n  static get LineEndType() {\n    return {\n      NONE: 1, // No leg\n      UP: 2,   // Upward leg\n      DOWN: 3, // Downward leg\n    };\n  }\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  static get USE_CANVAS_PROXY() {\n    return false;\n  }\n\n  static get lastContext() {\n    return lastContext;\n  }\n  static set lastContext(ctx) {\n    lastContext = ctx;\n  }\n\n  static buildContext(elementId, backend, width, height, background) {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) { renderer.resize(width, height); }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getRaphaelContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n  }\n\n  static getSVGContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  static bolsterCanvasContext(ctx) {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    const methodNames = [\n      'clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle',\n      'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth',\n      'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach(methodName => {\n      ctx[methodName] = ctx[methodName] || CanvasContext.prototype[methodName];\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(elementId, backend) {\n    this.elementId = elementId;\n    if (!this.elementId) {\n      throw new Vex.RERR('BadArgument', 'Invalid id for renderer.');\n    }\n\n    this.element = document.getElementById(elementId);\n    if (!this.element) this.element = elementId;\n\n    // Verify backend and create context\n    this.ctx = null;\n    this.paper = null;\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      // Create context.\n      if (!this.element.getContext) {\n        throw new Vex.RERR('BadElement', `Can't get canvas context from element: ${elementId}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n      this.ctx = new RaphaelContext(this.element);\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new Vex.RERR('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width, height) {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new Vex.RERR(\n          'BadElement', `Can't get canvas context from element: ${this.elementId}`\n        );\n      }\n\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      this.element.width = width * devicePixelRatio;\n      this.element.height = height * devicePixelRatio;\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      this.ctx.scale(devicePixelRatio, devicePixelRatio);\n    } else {\n      this.ctx.resize(width, height);\n    }\n\n    return this;\n  }\n\n  getContext() { return this.ctx; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `Beams` that span over a set of `StemmableNotes`.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tuplet } from './tuplet';\nimport { Stem } from './stem';\n\nfunction calculateStemDirection(notes) {\n  let lineSum = 0;\n  notes.forEach(note => {\n    if (note.keyProps) {\n      note.keyProps.forEach(keyProp => {\n        lineSum += (keyProp.line - 3);\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nconst getStemSlope = (firstNote, lastNote) => {\n  const firstStemTipY = firstNote.getStemExtents().topY;\n  const firstStemX = firstNote.getStemX();\n  const lastStemTipY = lastNote.getStemExtents().topY;\n  const lastStemX = lastNote.getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n};\n\nexport class Beam extends Element {\n  // Gets the default beam groups for a provided time signature.\n  // Attempts to guess if the time signature is not found in table.\n  // Currently this is fairly naive.\n  static getDefaultBeamGroups(time_sig) {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map(group => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  // A helper function to automatically build basic beams for a voice. For more\n  // complex auto-beaming use `Beam.generateBeams()`.\n  //\n  // Parameters:\n  // * `voice` - The voice to generate the beams for\n  // * `stem_direction` - A stem direction to apply to the entire voice\n  // * `groups` - An array of `Fraction` representing beat groupings for the beam\n  static applyAndGetBeams(voice, stem_direction, groups) {\n    return Beam.generateBeams(voice.getTickables(), {\n      groups,\n      stem_direction,\n    });\n  }\n\n  // A helper function to autimatically build beams for a voice with\n  // configuration options.\n  //\n  // Example configuration object:\n  //\n  // ```\n  // config = {\n  //   groups: [new Vex.Flow.Fraction(2, 8)],\n  //   stem_direction: -1,\n  //   beam_rests: true,\n  //   beam_middle_only: true,\n  //   show_stemlets: false\n  // };\n  // ```\n  //\n  // Parameters:\n  // * `notes` - An array of notes to create the beams for\n  // * `config` - The configuration object\n  //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n  //    * `stem_direction` - Set to apply the same direction to all notes\n  //    * `beam_rests` - Set to `true` to include rests in the beams\n  //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n  //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n  //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n  //\n  static generateBeams(notes, config) {\n    if (!config) config = {};\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map(group => {\n      if (!group.multiply) {\n        throw new Vex.RuntimeError('InvalidBeamGroups',\n          'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(Flow.RESOLUTION, 1);\n    });\n\n    const unprocessedNotes = notes;\n    let currentTickGroup = 0;\n    let noteGroups = [];\n    let currentGroup = [];\n\n    function getTotalTicks(vf_notes) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup = [];\n\n      unprocessedNotes.forEach(unprocessedNote => {\n        nextGroup = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = Flow.durationToNumber(unprocessedNote.duration) < 8;\n        if (unbeamable && unprocessedNote.tuplet) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            nextGroup.push(currentGroup.pop());\n          }\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n\n    function getBeamGroups() {\n      return noteGroups.filter(group => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach(note => {\n            if (note.getIntrinsicTicks() >= Flow.durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups = [];\n      noteGroups.forEach(group => {\n        let tempGroup = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest = (config.beam_rests &&\n            config.beam_middle_only && note.isRest() && isFirstOrLast);\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote &&\n            !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = prevNote.getStemDirection();\n            const currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest ||\n            breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach(group => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group, direction) {\n      group.forEach(note => {\n        note.setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach(group => {\n        let tuplet = null;\n        group.forEach(note => {\n          if (note.tuplet && (tuplet !== note.tuplet)) {\n            tuplet = note.tuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams = [];\n    beamedNoteGroups.forEach(group => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = Flow.durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach(tuplet => {\n      // Set the tuplet location based on the stem direction\n      const direction = tuplet.notes[0].stem_direction === Stem.DOWN ?\n        Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i];\n        if (note.beam === null) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes, auto_stem) {\n    super();\n    this.setAttribute('type', 'Beam');\n\n    if (!notes || notes === []) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= Flow.durationToTicks('4')) {\n      throw new Vex.RuntimeError('BadArguments',\n        'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = Stem.UP;\n\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (note.hasStem()) {\n        this.stem_direction = note.getStemDirection();\n        break;\n      }\n    }\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n    if (auto_stem && notes[0].getCategory() === 'stavenotes') {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + note.stem_direction, 0);\n\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        note.setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    };\n  }\n\n  // Get the notes in this beam\n  getNotes() { return this.notes; }\n\n  // Get the max number of beams in the set of notes\n  getBeamCount() {\n    const beamCounts = this.notes.map(note => note.getGlyph().beam_count);\n\n    const maxBeamCount = beamCounts.reduce((max, beamCount) => beamCount > max ? beamCount : max);\n\n    return maxBeamCount;\n  }\n\n  // Set which note `indices` to break the secondary beam at\n  breakSecondaryAt(indices) {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  // Return the y coordinate for linear function\n  getSlopeY(x, first_x_px, first_y_px, slope) {\n    return first_y_px + ((x - first_x_px) * slope);\n  }\n\n  // Calculate the best possible slope for the provided notes\n  calculateSlope() {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: { max_slope, min_slope, slope_iterations, slope_cost },\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        const adjustedStemTipY = this.getSlopeY(\n          note.getStemX(),\n          firstNote.getStemX(),\n          firstNote.getStemExtents().topY,\n          slope\n        ) + yShiftTemp;\n\n        const stemTipY = note.getStemExtents().topY;\n        // beam needs to be shifted up to accommodate note\n        if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n          const diff = Math.abs(stemTipY - adjustedStemTipY);\n          yShiftTemp += diff * -stemDirection;\n          totalStemExtension += diff * i;\n        } else { // beam overshoots note, account for the difference\n          totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  // Calculate a slope and y-shift for flat beams\n  calculateFlatSlope() {\n    const {\n      notes, stem_direction,\n      render_options: { beam_width, min_flat_beam_offset, flat_beam_offset },\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0;  // Store the highest or lowest note here\n    let extremeBeamCount = 0;  // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = note.getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      } else if (\n        stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)\n      ) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + (extremeBeamCount * beamWidth);\n    const newOffset = extremeY + (extremeTest * -stem_direction);\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  // Create new stems for the notes in the beam, so that each stem\n  // extends into the beams.\n  applyStemExtensions() {\n    const {\n      notes, slope, y_shift, stem_direction, beam_count,\n      render_options: {\n        show_stemlets,\n        flat_beam_offset,\n        flat_beams,\n        stemlet_extension,\n        beam_width,\n      },\n    } = this;\n\n    const firstNote = notes[0];\n    let firstStemTipY = firstNote.getStemExtents().topY;\n\n    // If rendering flat beams, and an offset exists, set the y-coordinat`e to\n    //  the offset so the stems all end at the beam offset.\n    if (flat_beams && flat_beam_offset) {\n      firstStemTipY = flat_beam_offset;\n    }\n    const firstStemX = firstNote.getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stemX = note.getStemX();\n      const { topY: stemTipY } = note.getStemExtents();\n      const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n      const preBeamExtension = note.getStem().getExtension();\n      const beamExtension = stem_direction === Stem.UP\n        ? stemTipY - beamedStemTipY\n        : beamedStemTipY - stemTipY;\n\n      note.stem.setExtension(preBeamExtension + beamExtension);\n      note.stem.renderHeightAdjustment = -Stem.WIDTH / 2;\n\n      if (note.isRest() && show_stemlets) {\n        const beamWidth = beam_width;\n        const totalBeamWidth = ((beam_count - 1) * beamWidth * 1.5) + beamWidth;\n        note.stem\n          .setVisibility(true)\n          .setStemlet(true, totalBeamWidth + stemlet_extension);\n      }\n    }\n  }\n\n  // Get the x coordinates for the beam lines of specific `duration`\n  getBeamLines(duration) {\n    const beam_lines = [];\n    let beam_started = false;\n    let current_beam = null;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.ticks.value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >=\n          this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n\n      const stem_x = note.getStemX() - (Stem.WIDTH / 2);\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const next_note = this.notes[i + 1];\n      const beam_next = next_note && next_note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !beam_next && current_beam.end === null) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = { start: stem_x, end: null };\n          beam_started = true;\n          if (!beam_next) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === null) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  // Render the stems for each notes\n  drawStems() {\n    this.notes.forEach(note => {\n      if (note.getStem()) {\n        note.getStem().setContext(this.context).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  drawBeamLines() {\n    this.checkContext();\n\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n\n    const firstStemX = firstNote.getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n        this.context.beginPath();\n        this.context.moveTo(startBeamX, startBeamY);\n        this.context.lineTo(startBeamX, startBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY);\n        this.context.closePath();\n        this.context.fill();\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  // Pre-format the beam\n  preFormat() { return this; }\n\n  // Post-format the beam. This can only be called after\n  // the notes in the beam have both `x` and `y` values. ie: they've\n  // been formatted and have staves\n  postFormat() {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  // Render the beam to the canvas context\n  draw() {\n    this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n\n    this.drawStems();\n    this.applyStyle();\n    this.drawBeamLines();\n    this.restoreStyle();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/beam.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class StaveTie extends Element {\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.context = null;\n    this.text = text;\n    this.direction = null;\n\n    this.render_options = {\n      cp1: 8,      // Curve control point 1\n      cp2: 12,      // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: { family: 'Arial', size: 10, style: '' },\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font) { this.font = font; return this; }\n  setDirection(direction) { this.direction = direction; return this; }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Tie needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.first_note || !this.last_note);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2; cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const cp_x = ((params.last_x_px + last_x_shift) +\n          (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n      const bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px, last_x_px) {\n    if (!this.text) return;\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= this.context.measureText(this.text).width / 2;\n\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.style);\n    this.context.fillText(\n      this.text,\n      center_x + this.render_options.text_shift_x,\n      (this.first_note || this.last_note).getStave().getYForTopText() - 1\n    );\n    this.context.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetie.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n//\n// ## Description\n//\n// This file implements articulations and accents as modifiers that can be\n// attached to notes. The complete list of articulations is available in\n// `tables.js` under `Vex.Flow.articulationCodes`.\n//\n// See `tests/articulation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\n// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\nfunction L(...args) { if (Articulation.DEBUG) Vex.L('Vex.Flow.Articulation', args); }\n\nconst { ABOVE, BELOW } = Modifier.Position;\n\nconst roundToNearestHalf = (mathFn, value) => mathFn(value / 0.5) * 0.5;\n\n// This includes both staff and ledger lines\nconst isWithinLines = (line, position) => position === ABOVE ? line <= 5 : line >= 1;\n\nconst getRoundingFunction = (line, position) => {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n};\n\nconst snapLineToStaff = (canSitBetweenLines, line, position, offsetDirection) => {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + (HALF_STAFF_SPACE * -offsetDirection);\n  } else {\n    return snappedLine;\n  }\n};\n\nconst isStaveNote = (note) => {\n  const noteCategory = note.getCategory();\n  return noteCategory === 'stavenotes' || noteCategory === 'gracenotes';\n};\n\nconst getTopY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stave.getYForTopText(textLine);\n      }\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\nconst getBottomY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stave.getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\n// Gets the initial offset of the articulation from the y value of the starting position.\n// This is required because the top/bottom text positions already have spacing applied to\n// provide a \"visually pleasent\" default position. However the y values provided from\n// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n// normalizes this asymmetry.\nconst getInitialOffset = (note, position) => {\n  const isOnStemTip = (\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN)\n  );\n\n  if (isStaveNote(note)) {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n};\n\nexport class Articulation extends Modifier {\n  static get CATEGORY() { return 'articulations'; }\n  static get INITIAL_OFFSET() { return -0.5; }\n\n  // FIXME:\n  // Most of the complex formatting logic (ie: snapping to space) is\n  // actually done in .render(). But that logic belongs in this method.\n  //\n  // Unfortunately, this isn't possible because, by this point, stem lengths\n  // have not yet been finalized. Finalized stem lengths are required to determine the\n  // initial position of any stem-side articulation.\n  //\n  // This indicates that all objects should have their stave set before being\n  // formatted. It can't be an optional if you want accurate vertical positioning.\n  // Consistently positioned articulations that play nice with other modifiers\n  // won't be possible until we stop relying on render-time formatting.\n  //\n  // Ideally, when this function has completed, the vertical articulation positions\n  // should be ready to render without further adjustment. But the current state\n  // is far from this ideal.\n  static format(articulations, state) {\n    if (!articulations || articulations.length === 0) return false;\n\n    const isAbove = artic => artic.getPosition() === ABOVE;\n    const isBelow = artic => artic.getPosition() === BELOW;\n    const margin = 0.5;\n    const getIncrement = (articulation, line, position) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        (articulation.glyph.getMetrics().height / 10) + margin\n      );\n\n    articulations\n      .filter(isAbove)\n      .forEach(articulation => {\n        articulation.setTextLine(state.top_text_line);\n        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n      });\n\n    articulations\n      .filter(isBelow)\n      .forEach(articulation => {\n        articulation.setTextLine(state.text_line);\n        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n      });\n\n    const width = articulations\n      .map(articulation => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  static easyScoreHook({ articulations }, note, builder) {\n    if (!articulations) return;\n\n    const articNameToCode = {\n      staccato: 'a.',\n      tenuto: 'a-',\n    };\n\n    articulations\n      .split(',')\n      .map(articString => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic = { type: articNameToCode[name] };\n        if (position) artic.position = Modifier.PositionString[position];\n        return builder.getFactory().Articulation(artic);\n      })\n      .map(artic => note.addModifier(0, artic));\n  }\n\n  // Create a new articulation of type `type`, which is an entry in\n  // `Vex.Flow.articulationCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Articulation');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = BELOW;\n    this.render_options = {\n      font_scale: 38,\n    };\n\n    this.articulation = Flow.articulationCodes(this.type);\n    if (!this.articulation) {\n      throw new Vex.RERR('ArgumentError', `Articulation not found: ${this.type}`);\n    }\n\n    this.glyph = new Glyph(this.articulation.code, this.render_options.font_scale);\n\n    this.setWidth(this.glyph.getMetrics().width);\n  }\n\n  getCategory() { return Articulation.CATEGORY; }\n\n  // Render articulation in position next to note.\n  draw() {\n    const {\n      note, index, position, glyph,\n      articulation: { between_lines: canSitBetweenLines },\n      text_line: textLine,\n      context: ctx,\n    } = this;\n\n    this.checkContext();\n\n    if (!note || index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const stave = note.getStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = note.getCategory() === 'tabnotes';\n\n    // Articulations are centered over/under the note head.\n    const { x } = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    let y = {\n      [ABOVE]: () => {\n        glyph.setOrigin(0.5, 1);\n        const y = getTopY(note, textLine) - ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n      [BELOW]: () => {\n        glyph.setOrigin(0.5, 0);\n        const y = getBottomY(note, textLine) + ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n    }[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + noteLine;\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/articulation.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\nexport class Tuplet extends Element {\n  static get LOCATION_TOP() {\n    return 1;\n  }\n  static get LOCATION_BOTTOM() {\n    return -1;\n  }\n  static get NESTING_OFFSET() {\n    return 15;\n  }\n\n  constructor(notes, options) {\n    super();\n    this.setAttribute('type', 'Tuplet');\n    if (!notes || !notes.length) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    this.options = Vex.Merge({}, options);\n    this.notes = notes;\n    this.num_notes = 'num_notes' in this.options ?\n      this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied ||\n      this.options.beats_occupied ||\n      2;\n    if ('bracketed' in this.options) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed =\n        notes.some(note => note.beam === null);\n    }\n\n    this.ratioed = 'ratioed' in this.options ?\n      this.options.ratioed :\n      (Math.abs(this.notes_occupied - this.num_notes) > 1);\n    this.point = 28;\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n    this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed) {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed) {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet to be displayed either on the top or bottom of the stave\n   */\n  setTupletLocation(location) {\n    if (!location) {\n      location = Tuplet.LOCATION_TOP;\n    } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      throw new Vex.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes() {\n    return this.notes;\n  }\n\n  getNoteCount() {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning() {\n    const msg = [\n      'beats_occupied has been deprecated as an ',\n      'option for tuplets. Please use notes_occupied ',\n      'instead. Calls to getBeatsOccupied and ',\n      'setBeatsOccupied should now be routed to ',\n      'getNotesOccupied and setNotesOccupied instead',\n    ].join('');\n\n    if (console && console.warn) { // eslint-disable-line no-console\n      console.warn(msg); // eslint-disable-line no-console\n    } else if (console) {\n      console.log(msg); // eslint-disable-line no-console\n    }\n  }\n\n  getBeatsOccupied() {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats) {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied() {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes) {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs() {\n    this.num_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.num_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount() {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note, location) {\n      return note.tupletStack.filter(tuplet => tuplet.location === location).length;\n    }\n\n    this.notes.forEach(note => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition() {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset =\n      this.getNestedTupletCount() *\n      Tuplet.NESTING_OFFSET *\n      -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.getStave().getYForLine(0) - 15;\n      // y_pos = first_note.getStemExtents().topY - 10;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const top_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().topY - 10\n          : this.notes[i].getStemExtents().baseY - 20;\n\n        if (top_y < y_pos) {\n          y_pos = top_y;\n        }\n      }\n    } else {\n      y_pos = first_note.getStave().getYForLine(4) + 20;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().baseY + 20\n          : this.notes[i].getStemExtents().topY + 10;\n        if (bottom_y > y_pos) {\n          y_pos = bottom_y;\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0];\n    const last_note = this.notes[this.notes.length - 1];\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width, glyph) => width + glyph.getMetrics().width;\n\n    // calculate total width of tuplet notation\n    let width = this.num_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + (this.width / 2);\n    const notation_start_x = notation_center_x - (width / 2);\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        this.context.fillRect(\n          this.x_pos + this.width / 2 + width / 2 + 5,\n          this.y_pos,\n          line_width,\n          1\n        );\n        this.context.fillRect(\n          this.x_pos,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n        this.context.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    let x_offset = 0;\n    this.num_glyphs.forEach(glyph => {\n      glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n      x_offset += glyph.getMetrics().width;\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach(glyph => {\n        glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n        x_offset += glyph.getMetrics().width;\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tuplet.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Glyph } from './glyph';\n\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n  if (\n    type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n    type !== StaveConnector.type.BOLD_DOUBLE_RIGHT\n  ) {\n    throw new Vex.RERR(\n      'InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.'\n    );\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\nexport class StaveConnector extends Element {\n  // SINGLE_LEFT and SINGLE are the same value for compatibility\n  // with older versions of vexflow which didn't have right sided\n  // stave connectors\n  static get type() {\n    return {\n      SINGLE_RIGHT: 0,\n      SINGLE_LEFT: 1,\n      SINGLE: 1,\n      DOUBLE: 2,\n      BRACE: 3,\n      BRACKET: 4,\n      BOLD_DOUBLE_LEFT: 5,\n      BOLD_DOUBLE_RIGHT: 6,\n      THIN_DOUBLE: 7,\n      NONE: 8,\n    };\n  }\n\n  static get typeString() {\n    return {\n      singleRight: StaveConnector.type.SINGLE_RIGHT,\n      singleLeft: StaveConnector.type.SINGLE_LEFT,\n      single: StaveConnector.type.SINGLE,\n      double: StaveConnector.type.DOUBLE,\n      brace: StaveConnector.type.BRACE,\n      bracket: StaveConnector.type.BRACKET,\n      boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n      boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n      thinDouble: StaveConnector.type.THIN_DOUBLE,\n      none: StaveConnector.type.NONE,\n    };\n  }\n\n  constructor(top_stave, bottom_stave) {\n    super();\n    this.setAttribute('type', 'StaveConnector');\n\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  setType(type) {\n    type = typeof(type) === 'string'\n      ? StaveConnector.typeString[type]\n      : type;\n\n    if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  setText(text, options) {\n    this.texts.push({\n      content: text,\n      options: Vex.Merge({ shift_x: 0, shift_y: 0 }, options),\n    });\n    return this;\n  }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setXShift(x_shift) {\n    if (typeof x_shift !== 'number') {\n      throw Vex.RERR('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) +\n      this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector = (\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE\n    );\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.width;\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - (0.90 * width);\n        const cpy1 = y1 + (0.2 * attachment_height);\n        const cpx2 = x1 + (1.10 * width);\n        const cpy2 = y2 - (0.135 * attachment_height);\n        const cpx3 = cpx2;\n        const cpy3 = y2 + (0.135 * attachment_height);\n        const cpx4 = cpx1;\n        const cpy4 = y3 - (0.2 * attachment_height);\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + (0.40 * width);\n        const cpy6 = y2 + (0.135 * attachment_height);\n        const cpx7 = cpx6;\n        const cpy7 = y2 - (0.135 * attachment_height);\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      } case StaveConnector.type.BRACKET:\n        topY -= 4;\n        botY += 4;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY - 3, 40, 'v1b', true);\n        Glyph.renderGlyph(ctx, topX - 5, botY + 3, 40, 'v10', true);\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidType', `The provided StaveConnector.type (${this.type}) is invalid`\n        );\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 +\n        text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staveconnector.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Stem } from './stem';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\n\nexport class StemmableNote extends Note {\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'StemmableNote');\n\n    this.stem = null;\n    this.stemExtensionOverride = null;\n    this.beam = null;\n  }\n\n  // Get and set the note's `Stem`\n  getStem() { return this.stem; }\n  setStem(stem) { this.stem = stem; return this; }\n\n  // Builds and sets a new stem\n  buildStem() {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag() {\n    const { glyph, beam } = this;\n    const shouldRenderFlag = beam === null;\n\n    if (glyph && glyph.flag && shouldRenderFlag) {\n      const flagCode = this.getStemDirection() === Stem.DOWN\n        ? glyph.code_flag_downstem\n        : glyph.code_flag_upstem;\n\n      this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale);\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength() {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount() {\n    const glyph = this.getGlyph();\n\n    if (glyph) {\n      return glyph.beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinumumLength() {\n    const frac = Flow.durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == null) length = 35;\n        break;\n      case '16':\n        length = this.beam == null ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == null ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == null ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == null ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection() { return this.stem_direction; }\n  setStemDirection(direction) {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new Vex.RERR('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n    }\n\n    this.reset();\n    if (this.flag) {\n      this.buildFlag();\n    }\n\n    this.beam = null;\n    if (this.preFormatted) {\n      this.preFormat();\n    }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX() {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n    const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n    return stem_x;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX() {\n    return this.getAbsoluteX() + this.x_shift + (this.getGlyphWidth() / 2);\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stemExtensionOverride != null) {\n      return this.stemExtensionOverride;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.stem_up_extension\n        : glyph.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height) {\n    this.stemExtensionOverride = (height - Stem.HEIGHT);\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Sets the current note's beam\n  setBeam(beam) { this.beam = beam; return this; }\n\n  // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.min(\n        this.stave.getYForTopText(textLine),\n        extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n      );\n    } else {\n      return this.stave.getYForTopText(textLine);\n    }\n  }\n\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.max(\n        this.stave.getYForTopText(textLine),\n        extents.baseY + (this.render_options.annotation_spacing * (textLine))\n      );\n    } else {\n      return this.stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag() {\n    return Flow.durationToGlyph(this.duration).flag && !this.beam;\n  }\n\n  // Post format the note\n  postFormat() {\n    if (this.beam) this.beam.postFormat();\n\n    this.postFormatted = true;\n\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stem_struct) {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stem_struct));\n    this.stem.setContext(this.context).draw();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stemmablenote.js","// VexFlow - Music Engraving for HTML5\r\n// Copyright Mohit Muthanna 2010\r\n//\r\n// This class implements dot modifiers for notes.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\n\r\nexport class Dot extends Modifier {\r\n  static get CATEGORY() { return 'dots'; }\r\n\r\n  // Arrange dots inside a ModifierContext.\r\n  static format(dots, state) {\r\n    const right_shift = state.right_shift;\r\n    const dot_spacing = 1;\r\n\r\n    if (!dots || dots.length === 0) return false;\r\n\r\n    const dot_list = [];\r\n    for (let i = 0; i < dots.length; ++i) {\r\n      const dot = dots[i];\r\n      const note = dot.getNote();\r\n\r\n      let props;\r\n      let shift;\r\n      // Only StaveNote has .getKeyProps()\r\n      if (typeof note.getKeyProps === 'function') {\r\n        props = note.getKeyProps()[dot.getIndex()];\r\n        shift = (props.displaced ? note.getExtraRightPx() : 0);\r\n      } else { // Else it's a TabNote\r\n        props = { line: 0.5 }; // Shim key props for dot placement\r\n        shift = 0;\r\n      }\r\n\r\n      dot_list.push({ line: props.line, shift, note, dot });\r\n    }\r\n\r\n    // Sort dots by line number.\r\n    dot_list.sort((a, b) => b.line - a.line);\r\n\r\n    let dot_shift = right_shift;\r\n    let x_width = 0;\r\n    let last_line = null;\r\n    let last_note = null;\r\n    let prev_dotted_space = null;\r\n    let half_shiftY = 0;\r\n\r\n    for (let i = 0; i < dot_list.length; ++i) {\r\n      const { dot, note, shift, line } = dot_list[i];\r\n\r\n      // Reset the position of the dot every line.\r\n      if (line !== last_line || note !== last_note) {\r\n        dot_shift = shift;\r\n      }\r\n\r\n      if (!note.isRest() && line !== last_line) {\r\n        if (Math.abs(line % 1) === 0.5) {\r\n          // note is on a space, so no dot shift\r\n          half_shiftY = 0;\r\n        } else {\r\n          // note is on a line, so shift dot to space above the line\r\n          half_shiftY = 0.5;\r\n          if (last_note != null &&\r\n              !last_note.isRest() && last_line - line === 0.5) {\r\n            // previous note on a space, so shift dot to space below the line\r\n            half_shiftY = -0.5;\r\n          } else if (line + half_shiftY === prev_dotted_space) {\r\n            // previous space is dotted, so shift dot to space below the line\r\n            half_shiftY = -0.5;\r\n          }\r\n        }\r\n      }\r\n\r\n      // convert half_shiftY to a multiplier for dots.draw()\r\n      if (note.isRest()) {\r\n        dot.dot_shiftY += -half_shiftY;\r\n      } else {\r\n        dot.dot_shiftY = -half_shiftY;\r\n      }\r\n      prev_dotted_space = line + half_shiftY;\r\n\r\n      dot.setXShift(dot_shift);\r\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\r\n      x_width = (dot_shift > x_width) ? dot_shift : x_width;\r\n      last_line = line;\r\n      last_note = note;\r\n    }\r\n\r\n    // Update state.\r\n    state.right_shift += x_width;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.setAttribute('type', 'Dot');\r\n\r\n    this.note = null;\r\n    this.index = null;\r\n    this.position = Modifier.Position.RIGHT;\r\n\r\n    this.radius = 2;\r\n    this.setWidth(5);\r\n    this.dot_shiftY = 0;\r\n  }\r\n\r\n  getCategory() { return Dot.CATEGORY; }\r\n\r\n  setNote(note) {\r\n    this.note = note;\r\n\r\n    if (this.note.getCategory() === 'gracenotes') {\r\n      this.radius *= 0.50;\r\n      this.setWidth(3);\r\n    }\r\n  }\r\n\r\n  setDotShiftY(y) { this.dot_shiftY = y; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n    this.setRendered();\r\n\r\n    if (!this.note || this.index === null) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\r\n    }\r\n\r\n    const lineSpace = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n\r\n    // Set the starting y coordinate to the base of the stem for TabNotes\r\n    if (this.note.getCategory() === 'tabnotes') {\r\n      start.y = this.note.getStemExtents().baseY;\r\n    }\r\n\r\n    const x = (start.x + this.x_shift) + this.width - this.radius;\r\n    const y = start.y + this.y_shift + (this.dot_shiftY * lineSpace);\r\n    const ctx = this.context;\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.fill();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dot.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of modifiers to notes (e.g. bends,\n// fingering positions etc.)\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Accidental } from './accidental';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Stroke } from './strokes';\nimport { StringNumber } from './stringnumber';\nimport { Articulation } from './articulation';\nimport { Ornament } from './ornament';\nimport { Annotation } from './annotation';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\nfunction L(...args) { if (ModifierContext.DEBUG) Vex.L('Vex.Flow.ModifierContext', args); }\n\nexport class ModifierContext {\n  constructor() {\n    // Current modifiers\n    this.modifiers = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0,\n      top_text_line: 0,\n    };\n\n    // Add new modifiers to this array. The ordering is significant -- lower\n    // modifiers are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      StaveNote,\n      Dot,\n      FretHandFinger,\n      Accidental,\n      Stroke,\n      GraceNoteGroup,\n      NoteSubGroup,\n      StringNumber,\n      Articulation,\n      Ornament,\n      Annotation,\n      Bend,\n      Vibrato,\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [StaveNote];\n  }\n\n  addModifier(modifier) {\n    const type = modifier.getCategory();\n    if (!this.modifiers[type]) this.modifiers[type] = [];\n    this.modifiers[type].push(modifier);\n    modifier.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(type) { return this.modifiers[type]; }\n  getWidth() { return this.width; }\n  getExtraLeftPx() { return this.state.left_shift; }\n  getExtraRightPx() { return this.state.right_shift; }\n  getState() { return this.state; }\n\n  getMetrics() {\n    if (!this.formatted) {\n      throw new Vex.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n      extra_left_px: this.state.left_shift,\n      extra_right_px: this.state.right_shift,\n    };\n  }\n\n  preFormat() {\n    if (this.preFormatted) return;\n    this.PREFORMAT.forEach((modifier) => {\n      L('Preformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.format(this.getModifiers(modifier.CATEGORY), this.state, this);\n    });\n\n    // Update width of this modifier context\n    this.width = this.state.left_shift + this.state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return;\n    this.POSTFORMAT.forEach((modifier) => {\n      L('Postformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.postFormat(this.getModifiers(modifier.CATEGORY), this);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modifiercontext.js","// VexFlow - Music Engraving for HTML5\r\n// Copyright Mohit Muthanna 2010\r\n// Author Larry Kuhns 2013\r\n// Class to draws string numbers into the notation.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport class FretHandFinger extends Modifier {\r\n  static get CATEGORY() { return 'frethandfinger'; }\r\n\r\n  // Arrange fingerings inside a ModifierContext.\r\n  static format(nums, state) {\r\n    const { left_shift, right_shift } = state;\r\n    const num_spacing = 1;\r\n\r\n    if (!nums || nums.length === 0) return false;\r\n\r\n    const nums_list = [];\r\n    let prev_note = null;\r\n    let shiftLeft = 0;\r\n    let shiftRight = 0;\r\n\r\n    for (let i = 0; i < nums.length; ++i) {\r\n      const num = nums[i];\r\n      const note = num.getNote();\r\n      const pos = num.getPosition();\r\n      const props = note.getKeyProps()[num.getIndex()];\r\n      if (note !== prev_note) {\r\n        for (let n = 0; n < note.keys.length; ++n) {\r\n          const props_tmp = note.getKeyProps()[n];\r\n          if (left_shift === 0) {\r\n            shiftLeft = props_tmp.displaced ? note.getExtraLeftPx() : shiftLeft;\r\n          }\r\n          if (right_shift === 0) {\r\n            shiftRight = props_tmp.displaced ? note.getExtraRightPx() : shiftRight;\r\n          }\r\n        }\r\n        prev_note = note;\r\n      }\r\n\r\n      nums_list.push({\r\n        note,\r\n        num,\r\n        pos,\r\n        line: props.line,\r\n        shiftL: shiftLeft,\r\n        shiftR: shiftRight,\r\n      });\r\n    }\r\n\r\n    // Sort fingernumbers by line number.\r\n    nums_list.sort((a, b) => b.line - a.line);\r\n\r\n    let numShiftL = 0;\r\n    let numShiftR = 0;\r\n    let xWidthL = 0;\r\n    let xWidthR = 0;\r\n    let lastLine = null;\r\n    let lastNote = null;\r\n\r\n    for (let i = 0; i < nums_list.length; ++i) {\r\n      let num_shift = 0;\r\n      const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\r\n\r\n      // Reset the position of the string number every line.\r\n      if (line !== lastLine || note !== lastNote) {\r\n        numShiftL = left_shift + shiftL;\r\n        numShiftR = right_shift + shiftR;\r\n      }\r\n\r\n      const numWidth = num.getWidth() + num_spacing;\r\n      if (pos === Modifier.Position.LEFT) {\r\n        num.setXShift(left_shift + numShiftL);\r\n        num_shift = left_shift + numWidth; // spacing\r\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\r\n      } else if (pos === Modifier.Position.RIGHT) {\r\n        num.setXShift(numShiftR);\r\n        num_shift = shiftRight + numWidth; // spacing\r\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\r\n      }\r\n      lastLine = line;\r\n      lastNote = note;\r\n    }\r\n\r\n    state.left_shift += xWidthL;\r\n    state.right_shift += xWidthR;\r\n\r\n    return true;\r\n  }\r\n\r\n  constructor(number) {\r\n    super();\r\n    this.setAttribute('type', 'FretHandFinger');\r\n\r\n    this.note = null;\r\n    this.index = null;\r\n    this.finger = number;\r\n    this.width = 7;\r\n    this.position = Modifier.Position.LEFT;  // Default position above stem or note head\r\n    this.x_shift = 0;\r\n    this.y_shift = 0;\r\n    this.x_offset = 0;       // Horizontal offset from default\r\n    this.y_offset = 0;       // Vertical offset from default\r\n    this.font = {\r\n      family: 'sans-serif',\r\n      size: 9,\r\n      weight: 'bold',\r\n    };\r\n  }\r\n  getCategory() { return FretHandFinger.CATEGORY; }\r\n  setFretHandFinger(number) { this.finger = number; return this; }\r\n  setOffsetX(x) { this.x_offset = x; return this; }\r\n  setOffsetY(y) { this.y_offset = y; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n\r\n    if (!this.note || this.index == null) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\r\n    }\r\n\r\n    this.setRendered();\r\n    const ctx = this.context;\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let dot_x = start.x + this.x_shift + this.x_offset;\r\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\r\n\r\n    switch (this.position) {\r\n      case Modifier.Position.ABOVE:\r\n        dot_x -= 4;\r\n        dot_y -= 12;\r\n        break;\r\n      case Modifier.Position.BELOW:\r\n        dot_x -= 2;\r\n        dot_y += 10;\r\n        break;\r\n      case Modifier.Position.LEFT:\r\n        dot_x -= this.width;\r\n        break;\r\n      case Modifier.Position.RIGHT:\r\n        dot_x += 1;\r\n        break;\r\n      default:\r\n        throw new Vex.RERR('InvalidPostion', `The position ${this.position} does not exist`);\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\r\n    ctx.fillText('' + this.finger, dot_x, dot_y);\r\n    ctx.restore();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/frethandfinger.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n//\n// ## Description\n//\n// This file implements accidentals as modifiers that can be attached to\n// notes. Support is included for both western and microtonal accidentals.\n//\n// See `tests/accidental_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Flow } from './tables';\nimport { Music } from './music';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\nfunction L(...args) { if (Accidental.DEBUG) Vex.L('Vex.Flow.Accidental', args); }\n\nconst getGlyphWidth = glyph => glyph.getMetrics().width;\n\n// An `Accidental` inherits from `Modifier`, and is formatted within a\n// `ModifierContext`.\nexport class Accidental extends Modifier {\n  static get CATEGORY() { return 'accidentals'; }\n\n  // Arrange accidentals inside a ModifierContext.\n  static format(accidentals, state) {\n    const noteheadAccidentalPadding = 1;\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = 3;\n\n    // If there are no accidentals, we needn't format their positions\n    if (!accidentals || accidentals.length === 0) return;\n\n    const accList = [];\n    let prevNote = null;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    let propsTemp;\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc = accidentals[i];\n      const note = acc.getNote();\n      const stave = note.getStave();\n      const props = note.getKeyProps()[acc.getIndex()];\n      if (note !== prevNote) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          propsTemp = note.getKeyProps()[n];\n          shiftL = propsTemp.displaced ? note.getExtraLeftPx() : shiftL;\n        }\n        prevNote = note;\n      }\n      if (stave !== null) {\n        const lineSpace = stave.options.spacing_between_lines_px;\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round(y / lineSpace * 2) / 2;\n        accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n      } else {\n        accList.push({ line: props.line, shift: shiftL, acc });\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = null;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === null || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n        });\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Vex.Flow.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n          // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index) => lineList[groupStart + index];\n      const getGroupLines = (indexes) => indexes.map(getGroupLine);\n      const lineDifference = (indexA, indexB) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map(item => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs) =>\n        indexPairs\n          .map(getGroupLines)\n          .every(lines => !this.checkCollision(...lines));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains more than seven members, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n\n        // Otherwise, if the group contains fewer than seven members, use the layouts from\n        // the accidentalsColumnsTable housed in tables.js.\n      } else {\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = Flow.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths = [];\n    const columnXOffsets = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach(line => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach(line => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = (columnXOffsets[line.column - 1] + lineWidth);\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift;\n  }\n\n  // Helper function to determine whether two lines of accidentals collide vertically\n  static checkCollision(line1, line2) {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) { // then line 2 is on top\n      clearanceRequired = (line2.flatLine || line2.dblSharpLine) ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else { // line 1 is on top\n      clearanceRequired = (line1.flatLine || line1.dblSharpLine) ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  // Use this method to automatically apply accidentals to a set of `voices`.\n  // The accidentals will be remembered between all the voices provided.\n  // Optionally, you can also provide an initial `keySignature`.\n  static applyAccidentals(voices, keySignature) {\n    const tickPositions = [];\n    const tickNoteMap = {};\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach(voice => {\n      const tickPosition = new Fraction(0, 1);\n      const notes = voice.getTickables();\n      notes.forEach(note => {\n        if (note.shouldIgnoreTicks()) return;\n\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch\n    const scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach(tick => {\n      const notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches = [];\n\n      const processNote = (note) => {\n        if (note.isRest() || note.shouldIgnoreTicks()) return;\n\n        // Go through each key and determine if an accidental should be\n        // applied\n        note.keys.forEach((keyString, keyIndex) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          const sameAccidental = scaleMap[key.root] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n          // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            note.addAccidental(keyIndex, accidental);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(pitch);\n          }\n        });\n\n        // process grace notes\n        note.getModifiers().forEach(modifier => {\n          if (modifier.getCategory() === 'gracenotegroups') {\n            modifier.getGraceNotes().forEach(processNote);\n          }\n        });\n      };\n\n      notes.forEach(processNote);\n    });\n  }\n\n  // Create accidental. `type` can be a value from the\n  // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n  // example: `#`, `##`, `b`, `n`, etc.\n  constructor(type = null) {\n    super();\n    this.setAttribute('type', 'Accidental');\n\n    L('New accidental: ', type);\n\n    this.note = null;\n    // The `index` points to a specific note in a chord.\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: 38,\n\n      // Length of stroke across heads above or below the stave.\n      stroke_px: 3,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = Flow.accidentalCodes(this.type);\n    if (!this.accidental) {\n      throw new Vex.RERR('ArgumentError', `Unknown accidental type: ${type}`);\n    }\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n    this.parenLeft = null;\n    this.parenRight = null;\n\n    this.reset();\n  }\n\n  reset() {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(Flow.accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(Flow.accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  getCategory() { return Accidental.CATEGORY; }\n\n  getWidth() {\n    const parenWidth = this.cautionary\n      ? (\n        getGlyphWidth(this.parenLeft) +\n        getGlyphWidth(this.parenRight) +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding\n      )\n      : 0;\n\n    return getGlyphWidth(this.glyph) + parenWidth;\n  }\n\n  // Attach this accidental to `note`, which must be a `StaveNote`.\n  setNote(note) {\n    if (!note) {\n      throw new Vex.RERR('ArgumentError', `Bad note value: ${note}`);\n    }\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (this.note.getCategory() === 'gracenotes') {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n  }\n\n  // If called, draws parenthesis around accidental.\n  setAsCautionary() {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  // Render accidental onto canvas.\n  draw() {\n    const {\n      context,\n      type, position, note, index, cautionary,\n      x_shift, y_shift,\n      glyph, parenLeft, parenRight,\n      render_options: { parenLeftPadding, parenRightPadding },\n    } = this;\n\n    this.checkContext();\n\n    if (!(note && (index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n    }\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = note.getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(context, accX, accY);\n    } else {\n      // Render the accidental in parentheses.\n      parenRight.render(context, accX, accY);\n      accX -= getGlyphWidth(parenRight);\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(context, accX, accY);\n      accX -= getGlyphWidth(glyph);\n      accX -= parenLeftPadding;\n      parenLeft.render(context, accX, accY);\n    }\n\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/accidental.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements some standard music theory routines.\n\nimport { Vex } from './vex';\n\nexport class Music {\n  static get NUM_TONES() {\n    return 12;\n  }\n\n  static get roots() {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  static get root_values() {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  static get root_indices() {\n    return {\n      'c': 0,\n      'd': 1,\n      'e': 2,\n      'f': 3,\n      'g': 4,\n      'a': 5,\n      'b': 6,\n    };\n  }\n\n  static get canonical_notes() {\n    return [\n      'c', 'c#', 'd', 'd#',\n      'e', 'f', 'f#', 'g',\n      'g#', 'a', 'a#', 'b',\n    ];\n  }\n\n  static get diatonic_intervals() {\n    return [\n      'unison', 'm2', 'M2', 'm3', 'M3',\n      'p4', 'dim5', 'p5', 'm6', 'M6',\n      'b7', 'M7', 'octave',\n    ];\n  }\n\n  static get diatonic_accidentals() {\n    return {\n      'unison': { note: 0, accidental: 0 },\n      'm2': { note: 1, accidental: -1 },\n      'M2': { note: 1, accidental: 0 },\n      'm3': { note: 2, accidental: -1 },\n      'M3': { note: 2, accidental: 0 },\n      'p4': { note: 3, accidental: 0 },\n      'dim5': { note: 4, accidental: -1 },\n      'p5': { note: 4, accidental: 0 },\n      'm6': { note: 5, accidental: -1 },\n      'M6': { note: 5, accidental: 0 },\n      'b7': { note: 6, accidental: -1 },\n      'M7': { note: 6, accidental: 0 },\n      'octave': { note: 7, accidental: 0 },\n    };\n  }\n\n  static get intervals() {\n    return {\n      'u': 0, 'unison': 0,\n      'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n      '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n      'm3': 3, 'b3': 3, 'min3': 3,\n      'M3': 4, '3': 4, 'maj3': 4,\n      '4': 5, 'p4': 5,\n      '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n      '5': 7, 'p5': 7,\n      '#5': 8, 'b6': 8, 'aug5': 8,\n      '6': 9, 'M6': 9, 'maj6': 9,\n      'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n      'M7': 11, 'maj7': 11,\n      '8': 12, 'octave': 12,\n    };\n  }\n\n  static get scales() {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n    };\n  }\n\n  static get scaleTypes() {\n    return {\n      'M': Music.scales.major,\n      'm': Music.scales.minor,\n    };\n  }\n\n  static get accidentals() {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  static get noteValues() {\n    return {\n      'c': { root_index: 0, int_val: 0 },\n      'cn': { root_index: 0, int_val: 0 },\n      'c#': { root_index: 0, int_val: 1 },\n      'c##': { root_index: 0, int_val: 2 },\n      'cb': { root_index: 0, int_val: 11 },\n      'cbb': { root_index: 0, int_val: 10 },\n      'd': { root_index: 1, int_val: 2 },\n      'dn': { root_index: 1, int_val: 2 },\n      'd#': { root_index: 1, int_val: 3 },\n      'd##': { root_index: 1, int_val: 4 },\n      'db': { root_index: 1, int_val: 1 },\n      'dbb': { root_index: 1, int_val: 0 },\n      'e': { root_index: 2, int_val: 4 },\n      'en': { root_index: 2, int_val: 4 },\n      'e#': { root_index: 2, int_val: 5 },\n      'e##': { root_index: 2, int_val: 6 },\n      'eb': { root_index: 2, int_val: 3 },\n      'ebb': { root_index: 2, int_val: 2 },\n      'f': { root_index: 3, int_val: 5 },\n      'fn': { root_index: 3, int_val: 5 },\n      'f#': { root_index: 3, int_val: 6 },\n      'f##': { root_index: 3, int_val: 7 },\n      'fb': { root_index: 3, int_val: 4 },\n      'fbb': { root_index: 3, int_val: 3 },\n      'g': { root_index: 4, int_val: 7 },\n      'gn': { root_index: 4, int_val: 7 },\n      'g#': { root_index: 4, int_val: 8 },\n      'g##': { root_index: 4, int_val: 9 },\n      'gb': { root_index: 4, int_val: 6 },\n      'gbb': { root_index: 4, int_val: 5 },\n      'a': { root_index: 5, int_val: 9 },\n      'an': { root_index: 5, int_val: 9 },\n      'a#': { root_index: 5, int_val: 10 },\n      'a##': { root_index: 5, int_val: 11 },\n      'ab': { root_index: 5, int_val: 8 },\n      'abb': { root_index: 5, int_val: 7 },\n      'b': { root_index: 6, int_val: 11 },\n      'bn': { root_index: 6, int_val: 11 },\n      'b#': { root_index: 6, int_val: 0 },\n      'b##': { root_index: 6, int_val: 1 },\n      'bb': { root_index: 6, int_val: 10 },\n      'bbb': { root_index: 6, int_val: 9 },\n    };\n  }\n\n  isValidNoteValue(note) {\n    if (note == null || note < 0 || note >= Music.NUM_TONES) {\n      return false;\n    }\n    return true;\n  }\n\n  isValidIntervalValue(interval) {\n    return this.isValidNoteValue(interval);\n  }\n\n  getNoteParts(noteString) {\n    if (!noteString || noteString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  getKeyParts(keyString) {\n    if (!keyString || keyString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  getNoteValue(noteString) {\n    const value = Music.noteValues[noteString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid note name: ${noteString}`);\n    }\n\n    return value.int_val;\n  }\n\n  getIntervalValue(intervalString) {\n    const value = Music.intervals[intervalString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid interval name: ${intervalString}`);\n    }\n\n    return value;\n  }\n\n  getCanonicalNoteName(noteValue) {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n\n    return Music.canonical_notes[noteValue];\n  }\n\n  getCanonicalIntervalName(intervalValue) {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /* Given a note, interval, and interval direction, product the\n   * relative note.\n   */\n  getRelativeNoteValue(noteValue, intervalValue, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + (direction * intervalValue)) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  getRelativeNoteName(root, noteValue) {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = (((noteValue + 1) + (rootValue + 1)) %\n        Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /* Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key, intervals) {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i += 1) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /* Returns the interval of a note, given a diatonic scale.\n   *\n   * E.g., Given the scale C, and the note E, returns M3\n   */\n  getIntervalBetween(note1, note2, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new Vex.RERR('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1\n      ? note2 - note1\n      : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  // Create a scale map that represents the pitch state for a\n  // `keySignature`. For example, passing a `G` to `keySignature` would\n  // return a scale map with every note naturalized except for `F` which\n  // has an `F#` state.\n  createScaleMap(keySignature) {\n    const keySigParts = this.getKeyParts(keySignature);\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new Vex.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {};\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/music.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\n\nexport class NoteSubGroup extends Modifier {\n  static get CATEGORY() { return 'notesubgroup'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups, state) {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  constructor(subNotes) {\n    super();\n    this.setAttribute('type', 'NoteSubGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach(subNote => { subNote.ignore_ticks = false; });\n    this.width = 0;\n    this.preFormatted = false;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n\n    return this;\n  }\n\n  getCategory() { return NoteSubGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw notes without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n\n    // Draw notes\n    this.subNotes.forEach(subNote => subNote.setContext(this.context).draw());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/notesubgroup.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabTie } from './tabtie';\nimport { StaveNote } from './stavenote';\n\n// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\nfunction L(...args) { if (GraceNoteGroup.DEBUG) Vex.L('Vex.Flow.GraceNoteGroup', args); }\n\nexport class GraceNoteGroup extends Modifier {\n  static get CATEGORY() { return 'gracenotegroups'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(gracenote_groups, state) {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = (note.getCategory() === StaveNote.CATEGORY);\n      const spacing = (is_stavenote ? group_spacing_stave : group_spacing_tab);\n\n      if (is_stavenote && note !== prev_note) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          const props_tmp = note.getKeyProps()[n];\n          shiftL = (props_tmp.displaced ? note.getExtraLeftPx() : shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({ shift: shiftL, gracenote_group, spacing });\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n  // `ModifierContext`.\n  constructor(grace_notes, show_slur) {\n    super();\n    this.setAttribute('type', 'GraceNoteGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.preFormatted = false;\n\n    this.show_slur = show_slur;\n    this.slur = null;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.beams = [];\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  getCategory() { return GraceNoteGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes(grace_notes) {\n    grace_notes = grace_notes || this.grace_notes;\n    if (grace_notes.length > 1) {\n      const beam = new Beam(grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beams.push(beam);\n    }\n\n    return this;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n  getGraceNotes() {\n    return this.grace_notes;\n  }\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    L('Drawing grace note group for:', note);\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw grace note without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n\n    // Draw notes\n    this.grace_notes.forEach(graceNote => {\n      graceNote.setContext(this.context).draw();\n    });\n\n    // Draw beam\n    this.beams.forEach(beam => {\n      beam.setContext(this.context).draw();\n    });\n\n    if (this.show_slur) {\n      // Create and draw slur\n      const is_stavenote = (this.getNote().getCategory() === StaveNote.CATEGORY);\n      const TieClass = (is_stavenote ? StaveTie : TabTie);\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(this.context).draw();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracenotegroup.js","// / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { StaveTie } from './stavetie';\n\nexport class TabTie extends StaveTie {\n  static createHammeron(notes) {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes) {\n    return new TabTie(notes, 'P');\n  }\n\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, text);\n    this.setAttribute('type', 'TabTie');\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.setNotes(notes);\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: -1, // Tab tie's are always face up.\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabtie.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\r\n// Author: Larry Kuhns\r\n//\r\n// ## Description\r\n// This file implements the `StringNumber` class which renders string\r\n// number annotations beside notes.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\nimport { Renderer } from './renderer';\r\nimport { StaveNote } from './stavenote';\r\n\r\nexport class StringNumber extends Modifier {\r\n  static get CATEGORY() { return 'stringnumber'; }\r\n\r\n  // ## Static Methods\r\n  // Arrange string numbers inside a `ModifierContext`\r\n  static format(nums, state) {\r\n    const left_shift = state.left_shift;\r\n    const right_shift = state.right_shift;\r\n    const num_spacing = 1;\r\n\r\n    if (!nums || nums.length === 0) return this;\r\n\r\n    const nums_list = [];\r\n    let prev_note = null;\r\n    let shift_left = 0;\r\n    let shift_right = 0;\r\n\r\n    let i;\r\n    let num;\r\n    let note;\r\n    let pos;\r\n    let props_tmp;\r\n    for (i = 0; i < nums.length; ++i) {\r\n      num = nums[i];\r\n      note = num.getNote();\r\n\r\n      for (i = 0; i < nums.length; ++i) {\r\n        num = nums[i];\r\n        note = num.getNote();\r\n        pos = num.getPosition();\r\n        const props = note.getKeyProps()[num.getIndex()];\r\n\r\n        if (note !== prev_note) {\r\n          for (let n = 0; n < note.keys.length; ++n) {\r\n            props_tmp = note.getKeyProps()[n];\r\n            if (left_shift === 0) {\r\n              shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\r\n            }\r\n            if (right_shift === 0) {\r\n              shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\r\n            }\r\n          }\r\n          prev_note = note;\r\n        }\r\n\r\n        nums_list.push({\r\n          pos,\r\n          note,\r\n          num,\r\n          line: props.line,\r\n          shiftL: shift_left,\r\n          shiftR: shift_right,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Sort string numbers by line number.\r\n    nums_list.sort((a, b) => b.line - a.line);\r\n\r\n    // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\r\n    let num_shiftL = 0; // eslint-disable-line\r\n    let num_shiftR = 0;\r\n    let x_widthL = 0;\r\n    let x_widthR = 0;\r\n    let last_line = null;\r\n    let last_note = null;\r\n    for (i = 0; i < nums_list.length; ++i) {\r\n      let num_shift = 0;\r\n      note = nums_list[i].note;\r\n      pos = nums_list[i].pos;\r\n      num = nums_list[i].num;\r\n      const line = nums_list[i].line;\r\n      const shiftL = nums_list[i].shiftL;\r\n      const shiftR = nums_list[i].shiftR;\r\n\r\n      // Reset the position of the string number every line.\r\n      if (line !== last_line || note !== last_note) {\r\n        num_shiftL = left_shift + shiftL;\r\n        num_shiftR = right_shift + shiftR;\r\n      }\r\n\r\n      const num_width = num.getWidth() + num_spacing;\r\n      if (pos === Modifier.Position.LEFT) {\r\n        num.setXShift(left_shift);\r\n        num_shift = shift_left + num_width; // spacing\r\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\r\n      } else if (pos === Modifier.Position.RIGHT) {\r\n        num.setXShift(num_shiftR);\r\n        num_shift += num_width; // spacing\r\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\r\n      }\r\n      last_line = line;\r\n      last_note = note;\r\n    }\r\n\r\n    state.left_shift += x_widthL;\r\n    state.right_shift += x_widthR;\r\n    return true;\r\n  }\r\n\r\n  constructor(number) {\r\n    super();\r\n    this.setAttribute('type', 'StringNumber');\r\n\r\n    this.note = null;\r\n    this.last_note = null;\r\n    this.index = null;\r\n    this.string_number = number;\r\n    this.setWidth(20); // ???\r\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\r\n    this.x_shift = 0;\r\n    this.y_shift = 0;\r\n    this.x_offset = 0; // Horizontal offset from default\r\n    this.y_offset = 0; // Vertical offset from default\r\n    this.dashed = true; // true - draw dashed extension  false - no extension\r\n    this.leg = Renderer.LineEndType.NONE;   // draw upward/downward leg at the of extension line\r\n    this.radius = 8;\r\n    this.font = {\r\n      family: 'sans-serif',\r\n      size: 10,\r\n      weight: 'bold',\r\n    };\r\n  }\r\n  getCategory() { return StringNumber.CATEGORY; }\r\n  getNote() { return this.note; }\r\n  setNote(note) { this.note = note; return this; }\r\n  getIndex() { return this.index; }\r\n  setIndex(index) { this.index = index; return this; }\r\n\r\n  setLineEndType(leg) {\r\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\r\n      this.leg = leg;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  setStringNumber(number) { this.string_number = number; return this; }\r\n  setOffsetX(x) { this.x_offset = x; return this; }\r\n  setOffsetY(y) { this.y_offset = y; return this; }\r\n  setLastNote(note) { this.last_note = note; return this; }\r\n  setDashed(dashed) { this.dashed = dashed; return this; }\r\n\r\n  draw() {\r\n    const ctx = this.checkContext();\r\n    if (!(this.note && (this.index != null))) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\r\n    }\r\n    this.setRendered();\r\n\r\n    const line_space = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let dot_x = (start.x + this.x_shift + this.x_offset);\r\n    let dot_y = start.y + this.y_shift + this.y_offset;\r\n\r\n    switch (this.position) {\r\n      case Modifier.Position.ABOVE:\r\n      case Modifier.Position.BELOW: {\r\n        const stem_ext = this.note.getStemExtents();\r\n        let top = stem_ext.topY;\r\n        let bottom = stem_ext.baseY + 2;\r\n\r\n        if (this.note.stem_direction === StaveNote.STEM_DOWN) {\r\n          top = stem_ext.baseY;\r\n          bottom = stem_ext.topY - 2;\r\n        }\r\n\r\n        if (this.position === Modifier.Position.ABOVE) {\r\n          dot_y = this.note.hasStem()\r\n            ? top - (line_space * 1.75)\r\n            : start.y - (line_space * 1.75);\r\n        } else {\r\n          dot_y = this.note.hasStem()\r\n            ? bottom + (line_space * 1.5)\r\n            : start.y + (line_space * 1.75);\r\n        }\r\n\r\n        dot_y += this.y_shift + this.y_offset;\r\n\r\n        break;\r\n      } case Modifier.Position.LEFT:\r\n        dot_x -= (this.radius / 2) + 5;\r\n        break;\r\n      case Modifier.Position.RIGHT:\r\n        dot_x += (this.radius / 2) + 6;\r\n        break;\r\n      default:\r\n        throw new Vex.RERR(\r\n          'InvalidPosition', `The position ${this.position} is invalid`\r\n        );\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.lineWidth = 1.5;\r\n    ctx.stroke();\r\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\r\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\r\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\r\n\r\n    if (this.last_note != null) {\r\n      const end = this.last_note.getStemX() - this.note.getX() + 5;\r\n      ctx.strokeStyle = '#000000';\r\n      ctx.lineCap = 'round';\r\n      ctx.lineWidth = 0.6;\r\n      if (this.dashed) {\r\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\r\n      } else {\r\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\r\n      }\r\n\r\n      let len;\r\n      let pattern;\r\n      switch (this.leg) {\r\n        case Renderer.LineEndType.UP:\r\n          len = -10;\r\n          pattern = this.dashed ? [3, 3] : [3, 0];\r\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\r\n          break;\r\n        case Renderer.LineEndType.DOWN:\r\n          len = 10;\r\n          pattern = this.dashed ? [3, 3] : [3, 0];\r\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/stringnumber.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements text annotations as modifiers that can be attached to\n// notes.\n//\n// See `tests/annotation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n\n// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\nfunction L(...args) { if (Annotation.DEBUG) Vex.L('Vex.Flow.Annotation', args); }\n\nexport class Annotation extends Modifier {\n  static get CATEGORY() { return 'annotations'; }\n\n  // Text annotations can be positioned and justified relative to the note.\n  static get Justify() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get JustifyString() {\n    return {\n      left: Annotation.Justify.LEFT,\n      right: Annotation.Justify.RIGHT,\n      center: Annotation.Justify.CENTER,\n      centerStem: Annotation.Justify.CENTER_STEM,\n    };\n  }\n\n  static get VerticalJustify() {\n    return {\n      TOP: 1,\n      CENTER: 2,\n      BOTTOM: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get VerticalJustifyString() {\n    return {\n      above: Annotation.VerticalJustify.TOP,\n      top: Annotation.VerticalJustify.TOP,\n      below: Annotation.VerticalJustify.BOTTOM,\n      bottom: Annotation.VerticalJustify.BOTTOM,\n      center: Annotation.VerticalJustify.CENTER,\n      centerStem: Annotation.VerticalJustify.CENTER_STEM,\n    };\n  }\n\n  // Arrange annotations within a `ModifierContext`\n  static format(annotations, state) {\n    if (!annotations || annotations.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < annotations.length; ++i) {\n      const annotation = annotations[i];\n      width = Math.max(annotation.getWidth(), width);\n      if (annotation.getPosition() === Modifier.Position.ABOVE) {\n        annotation.setTextLine(state.top_text_line);\n        state.top_text_line++;\n      } else {\n        annotation.setTextLine(state.text_line);\n        state.text_line++;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // Annotations inherit from `Modifier` and is positioned correctly when\n  // in a `ModifierContext`.\n  // Create a new `Annotation` with the string `text`.\n  constructor(text) {\n    super();\n    this.setAttribute('type', 'Annotation');\n\n    this.note = null;\n    this.index = null;\n    this.text = text;\n    this.justification = Annotation.Justify.CENTER;\n    this.vert_justification = Annotation.VerticalJustify.TOP;\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    // The default width is calculated from the text.\n    this.setWidth(Flow.textWidth(text));\n  }\n\n  getCategory() { return Annotation.CATEGORY; }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family, size, weight) {\n    this.font = { family, size, weight };\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `Annotation.VerticalJustify`.\n  setVerticalJustification(just) {\n    this.vert_justification = typeof (just) === 'string'\n      ? Annotation.VerticalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `Annotation.Justify`.\n  getJustification() { return this.justification; }\n  setJustification(just) {\n    this.justification = typeof (just) === 'string'\n      ? Annotation.JustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Render text beside the note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n      this.index);\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = this.context.measureText(this.text).width;\n\n    // Estimate text height to be the same as the width of an 'm'.\n    //\n    // This is a hack to work around the inability to measure text height\n    // in HTML5 Canvas (and SVG).\n    const text_height = this.context.measureText('m').width;\n    let x;\n    let y;\n\n    if (this.justification === Annotation.Justify.LEFT) {\n      x = start.x;\n    } else if (this.justification === Annotation.Justify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.justification === Annotation.Justify.CENTER) {\n      x = start.x - text_width / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() - text_width / 2;\n    }\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n      const yt = this.note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    } else /* CENTER_STEM */ {\n      const extents = this.note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 +\n        text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    this.context.fillText(this.text, x, y);\n    this.context.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/annotation.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements tablature bends.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n/**\n   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   @param release If true, render a release. (DEPRECATED)\n   @param phrase If set, ignore \"text\" and \"release\", and use the more\n                 sophisticated phrase specified.\n\n   Example of a phrase:\n\n     [{\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"half\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"1 1/2\"\n       width: 8;\n     }]\n */\nexport class Bend extends Modifier {\n  static get CATEGORY() { return 'bends'; }\n\n  static get UP() {\n    return 0;\n  }\n  static get DOWN() {\n    return 1;\n  }\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  static format(bends, state) {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Bends are always on top.\n    const text_line = state.top_text_line;\n\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor(text, release, phrase) {\n    super();\n    this.setAttribute('type', 'Bend');\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release || false;\n    this.font = '10pt Arial';\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{ type: Bend.UP, text: this.text }];\n      if (this.release) this.phrase.push({ type: Bend.DOWN, text: '' });\n    }\n\n    this.updateWidth();\n  }\n\n  getCategory() { return Bend.CATEGORY; }\n\n  setXShift(value) {\n    this.x_shift = value;\n    this.updateWidth();\n  }\n  setFont(font) { this.font = font; return this; }\n  getText() { return this.text; }\n  updateWidth() {\n    const that = this;\n\n    function measure_text(text) {\n      let text_width;\n      if (that.context) {\n        text_width = that.context.measureText(text).width;\n      } else {\n        text_width = Flow.textWidth(text);\n      }\n\n      return text_width;\n    }\n\n    let total_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if ('width' in bend) {\n        total_width += bend.width;\n      } else {\n        const additional_width = (bend.type === Bend.UP) ?\n          this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Vex.Max(additional_width, measure_text(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        total_width += bend.width;\n      }\n    }\n\n    this.setWidth(total_width + this.x_shift);\n    return this;\n  }\n  draw() {\n    this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n    }\n\n    this.setRendered();\n\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT,\n      this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const ctx = this.context;\n    const bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n    const annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n    const that = this;\n\n    function renderBend(x, y, width, height) {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderRelease(x, y, width, height) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(\n        x + width, height,\n        x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderArrowHead(x, y, direction) {\n      const width = 4;\n      const dir = direction || 1;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x - width, y + width * dir);\n      ctx.lineTo(x + width, y + width * dir);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    function renderText(x, text) {\n      ctx.save();\n      ctx.setRawFont(that.font);\n      const render_x = x - (ctx.measureText(text).width / 2);\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    }\n\n    let last_bend = null;\n    let last_drawn_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width +\n        (last_bend ? last_bend.draw_width : 0) -\n        (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend === null) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bend.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements vibratos.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Bend } from './bend';\n\nexport class Vibrato extends Modifier {\n  static get CATEGORY() { return 'vibratos'; }\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  static format(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getModifiers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n  getCategory() { return Vibrato.CATEGORY; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n  setVibratoWidth(width) {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = this.note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  // Static rendering method that can be called from\n  // other classes (e.g. VibratoBracket)\n  static renderVibrato(ctx, x, y, opts) {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - (wave_height / 2));\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + (wave_height / 2));\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y + (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y - (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vibrato.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Barline } from './stavebarline';\nimport { StaveModifier } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { Volta } from './stavevolta';\n\nexport class Stave extends Element {\n  constructor(x, y, width, options) {\n    super();\n    this.setAttribute('type', 'Stave');\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = [];  // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.font = {\n      family: 'sans-serif',\n      size: 8,\n      weight: '',\n    };\n    this.options = {\n      vertical_bar_width: 10,       // Width around vertical bar end-marker\n      glyph_spacing_px: 10,\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true,               // draw vertical bar on left\n      right_bar: true,               // draw vertical bar on right\n      spacing_between_lines_px: 10, // in pixels\n      space_above_staff_ln: 4,      // in staff lines\n      space_below_staff_ln: 4,      // in staff lines\n      top_text_position: 1,          // in staff lines\n    };\n    this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n    Vex.Merge(this.options, options);\n\n    this.resetLines();\n\n    const BARTYPE = Barline.type;\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n  }\n\n  space(spacing) { return this.options.spacing_between_lines_px * spacing; }\n\n  resetLines() {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({ visible: true });\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) *\n      this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  getOptions() { return this.options; }\n\n  setNoteStartX(x) {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    return this;\n  }\n  getNoteStartX() {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX() {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n  getTieStartX() { return this.start_x; }\n  getTieEndX() { return this.x + this.width; }\n  getX() { return this.x; }\n  getNumLines() { return this.options.num_lines; }\n  setNumLines(lines) {\n    this.options.num_lines = parseInt(lines, 10);\n    this.resetLines();\n    return this;\n  }\n  setY(y) { this.y = y; return this; }\n\n  getTopLineTopY() {\n    return this.getYForLine(0) - (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n  getBottomLineBottomY() {\n    return this.getYForLine(this.getNumLines() - 1) + (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n\n  setX(x) {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      if (mod.x !== undefined) {\n        mod.x += shift;\n      }\n    }\n    return this;\n  }\n\n  setWidth(width) {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getStyle() {\n    return Object.assign({\n      fillStyle: this.options.fill_style,\n      strokeStyle: this.options.fill_style, // yes, this is correct for legacy compatibility\n      lineWidth: Flow.STAVE_LINE_THICKNESS,\n    }, this.style || {});\n  }\n\n  setMeasure(measure) { this.measure = measure; return this; }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index = 0) {\n    if (typeof index !== 'number') {\n      throw new Vex.RERR('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0];\n    if (begBarline.getType() === Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  // Coda & Segno Symbol functions\n  setRepetitionTypeLeft(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  setRepetitionTypeRight(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type, number_t, y) {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section, y) {\n    this.modifiers.push(new StaveSection(section, this.x, y));\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo, y) {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(text, position, options) {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getSpacingBetweenLines() {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY() {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const score_bottom = this.getYForLine(options.num_lines) +\n      (options.space_below_staff_ln * spacing);\n\n    return score_bottom;\n  }\n\n  getBottomLineY() {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns the y for the *center* of a staff line\n  getYForLine(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    const y = this.y + (line * spacing) + (headroom * spacing);\n\n    return y;\n  }\n\n  getLineForY(y) {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return ((y - this.y) / spacing) - headroom;\n  }\n\n  getYForTopText(line) {\n    const l = line || 0;\n    return this.getYForLine(-l - this.options.top_text_position);\n  }\n\n  getYForBottomText(line) {\n    const l = line || 0;\n    return this.getYForLine(this.options.bottom_text_position + l);\n  }\n\n  getYForNote(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    const y = this.y + (headroom * spacing) + (5 * spacing) - (line * spacing);\n\n    return y;\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(3);\n  }\n\n  addModifier(modifier, position) {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier) {\n    this.addModifier(modifier, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type) {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const { SINGLE, REPEAT_BEGIN, NONE } = Barline.type;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      this.modifiers[0].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type) {\n    // Repeat end not valid at end of stave\n    if (type !== Barline.type.REPEAT_BEGIN) {\n      this.modifiers[1].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setClef(clefSpec, size, annotation, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    this.clef = clefSpec;\n    const clefs = this.getModifiers(position, Clef.CATEGORY);\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      clefs[0].setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  setEndClef(clefSpec, size, annotation) {\n    this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  setKeySignature(keySpec, cancelKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, position);\n    } else {\n      keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec, cancelKeySpec) {\n    this.setKeySignature(keySpec, cancelKeySpec, StaveModifier.Position.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec, customPadding, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      timeSignatures[0].setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec, customPadding) {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  addKeySignature(keySpec, cancelKeySpec, position) {\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec), position);\n    return this;\n  }\n\n  addClef(clef, size, annotation, position) {\n    if (position === undefined || position === StaveModifier.Position.BEGIN) {\n      this.clef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef, size, annotation) {\n    this.addClef(clef, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  addTimeSignature(timeSpec, customPadding, position) {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec, customPadding) {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph() {\n    this.addClef('treble');\n    return this;\n  }\n\n  getModifiers(position, category) {\n    if (position === undefined) return this.modifiers;\n\n    return this.modifiers.filter(modifier =>\n      position === modifier.getPosition() &&\n      (category === undefined || category === modifier.getCategory())\n    );\n  }\n\n  sortByCategory(items, order) {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format() {\n    const begBarline = this.modifiers[0];\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n    this.sortByCategory(begModifiers, {\n      barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3,\n    });\n\n    this.sortByCategory(endModifiers, {\n      timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3,\n    });\n\n    if (begModifiers.length > 1 &&\n      begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(Barline.type.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(Barline.type.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      x -= modifier.getPadding(i);\n      if (i !== 0) {\n        x -= modifier.getWidth();\n      }\n\n      modifier.setX(x);\n\n      if (i === 0) {\n        x -= modifier.getWidth();\n      }\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      this.applyStyle();\n      if (this.options.line_config[line].visible) {\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + width, y);\n        this.context.stroke();\n      }\n      this.restoreStyle();\n    }\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      // Only draw modifier if it has a draw function\n      if (typeof this.modifiers[i].draw === 'function') {\n        this.modifiers[i].draw(this, this.getModifierXShift(i));\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      const text_width = this.context.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n      this.context.restore();\n    }\n\n    return this;\n  }\n\n  // Draw Simple barlines for backward compatability\n  // Do not delete - draws the beginning bar of the stave\n  drawVertical(x, isDouble) {\n    this.drawVerticalFixed(this.x + x, isDouble);\n  }\n\n  drawVerticalFixed(x, isDouble) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    if (isDouble) {\n      this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n    }\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  drawVerticalBar(x) {\n    this.drawVerticalBarFixed(this.x + x, false);\n  }\n\n  drawVerticalBarFixed(x) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines() {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number, line_config) {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration object is missing the 'visible' property.\"\n      );\n    }\n\n    if (typeof (line_config.visible) !== 'boolean') {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration) {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    // eslint-disable-next-line\n    for (const line_config in lines_configuration) {\n      // Allow 'null' to be used if the caller just wants the default for a particular node.\n      if (!lines_configuration[line_config]) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stave.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\n\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\n\nexport class Barline extends StaveModifier {\n  static get CATEGORY() { return 'barlines'; }\n  static get type() {\n    return {\n      SINGLE: 1,\n      DOUBLE: 2,\n      END: 3,\n      REPEAT_BEGIN: 4,\n      REPEAT_END: 5,\n      REPEAT_BOTH: 6,\n      NONE: 7,\n    };\n  }\n\n  static get typeString() {\n    return {\n      single: Barline.type.SINGLE,\n      double: Barline.type.DOUBLE,\n      end: Barline.type.END,\n      repeatBegin: Barline.type.REPEAT_BEGIN,\n      repeatEnd: Barline.type.REPEAT_END,\n      repeatBoth: Barline.type.REPEAT_BOTH,\n      none: Barline.type.NONE,\n    };\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Barline');\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n\n    const TYPE = Barline.type;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type);\n  }\n  getCategory() { return Barline.CATEGORY; }\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave) {\n    stave.checkContext();\n    this.setRendered();\n\n    switch (this.type) {\n      case Barline.type.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case Barline.type.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case Barline.type.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case Barline.type.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case Barline.type.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case Barline.type.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n  }\n\n  drawVerticalBar(stave, x, double_bar) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      stave.context.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    stave.context.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave, x) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    stave.context.fillRect(x - 5, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave, x, begin) {\n    stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = (x + x_shift) + (dot_radius / 2);\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = (y_offset / 2) - (stave.getSpacingBetweenLines() / 2);\n    let dot_y = topY + y_offset + (dot_radius / 2);\n\n    // draw the top repeat dot\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavebarline.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `TextNote` is a notation element that is positioned in time. Generally\n// meant for objects that sit above/below the staff and inline with each other.\n// Examples of this would be such as dynamics, lyrics, chord changes, etc.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\nexport class TextNote extends Note {\n  static get Justification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'segno': {\n        code: 'v8c',\n        point: 40,\n        x_shift: 0,\n        y_shift: -10,\n        // width: 10 // optional\n      },\n      'tr': {\n        code: 'v1f',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_upper': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_lower': {\n        code: 'v45',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'f': {\n        code: 'vba',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'p': {\n        code: 'vbf',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'm': {\n        code: 'v62',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      's': {\n        code: 'v4a',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'z': {\n        code: 'v80',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'coda': {\n        code: 'v4d',\n        point: 40,\n        x_shift: 0,\n        y_shift: -8,\n        // width: 10 // optional\n      },\n      'pedal_open': {\n        code: 'v36',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'pedal_close': {\n        code: 'v5d',\n        point: 40,\n        x_shift: 0,\n        y_shift: 3,\n      },\n      'caesura_straight': {\n        code: 'v34',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'caesura_curved': {\n        code: 'v4b',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'breath': {\n        code: 'v6c',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'tick': {\n        code: 'v6f',\n        point: 50,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn': {\n        code: 'v72',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn_inverted': {\n        code: 'v33',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n\n      // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n      'mordent': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n    };\n  }\n\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextNote');\n\n    // Note properties\n    this.text = text_struct.text;\n    this.superscript = text_struct.superscript;\n    this.subscript = text_struct.subscript;\n    this.glyph_type = text_struct.glyph;\n    this.glyph = null;\n    this.font = {\n      family: 'Arial',\n      size: 12,\n      weight: '',\n    };\n\n    // Set font\n    if (text_struct.font) this.font = text_struct.font;\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `canvasmeasureText()`\n    if (this.glyph_type) {\n      const struct = TextNote.GLYPHS[this.glyph_type];\n      if (!struct) throw new Vex.RERR('Invalid glyph type: ' + this.glyph_type);\n\n      this.glyph = new Glyph(struct.code, struct.point, { cache: false });\n\n      if (struct.width) {\n        this.setWidth(struct.width);\n      } else {\n        this.setWidth(this.glyph.getMetrics().width);\n      }\n\n      this.glyph_struct = struct;\n    } else {\n      this.setWidth(Flow.textWidth(this.text));\n    }\n    this.line = text_struct.line || 0;\n    this.smooth = text_struct.smooth || false;\n    this.ignore_ticks = text_struct.ignore_ticks || false;\n    this.justification = TextNote.Justification.LEFT;\n  }\n\n  // Set the horizontal justification of the TextNote\n  setJustification(just) {\n    this.justification = just;\n    return this;\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    this.checkContext();\n\n    if (this.preFormatted) return;\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        this.setWidth(this.context.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      this.extraLeftPx = this.width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      this.extraLeftPx = this.width;\n    }\n\n    this.setPreFormatted(true);\n  }\n\n  // Renders the TextNote\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    let x = this.getAbsoluteX();\n    if (this.justification === TextNote.Justification.CENTER) {\n      x -= this.getWidth() / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      x -= this.getWidth();\n    }\n\n    let y;\n    if (this.glyph) {\n      y = this.stave.getYForLine(this.line + -3);\n      this.glyph.render(\n        this.context,\n        x + this.glyph_struct.x_shift,\n        y + this.glyph_struct.y_shift\n      );\n    } else {\n      y = this.stave.getYForLine(this.line + -3);\n      this.applyStyle(ctx);\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.text, x, y);\n\n      // Width of the letter M gives us the approximate height of the text\n      const height = ctx.measureText('M').width;\n      // Get accurate width of text\n      const width = ctx.measureText(this.text).width;\n\n      // Write superscript\n      if (this.superscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.superscript, x + width + 2, y - (height / 2.2));\n      }\n\n      // Write subscript\n      if (this.subscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.subscript, x + width + 2, y + (height / 2.2) - 1);\n      }\n\n      this.restoreStyle(ctx);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n//\n// ## Description\n//\n// This file implements various types of clefs that can be rendered on a stave.\n//\n// See `tests/clef_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\nfunction L(...args) { if (Clef.DEBUG) Vex.L('Vex.Flow.Clef', args); }\n\nexport class Clef extends StaveModifier {\n  static get CATEGORY() { return 'clefs'; }\n\n  // Every clef name is associated with a glyph code from the font file\n  // and a default stave line number.\n  static get types() {\n    return {\n      'treble': {\n        code: 'v83',\n        line: 3,\n      },\n      'bass': {\n        code: 'v79',\n        line: 1,\n      },\n      'alto': {\n        code: 'vad',\n        line: 2,\n      },\n      'tenor': {\n        code: 'vad',\n        line: 1,\n      },\n      'percussion': {\n        code: 'v59',\n        line: 2,\n      },\n      'soprano': {\n        code: 'vad',\n        line: 4,\n      },\n      'mezzo-soprano': {\n        code: 'vad',\n        line: 3,\n      },\n      'baritone-c': {\n        code: 'vad',\n        line: 0,\n      },\n      'baritone-f': {\n        code: 'v79',\n        line: 2,\n      },\n      'subbass': {\n        code: 'v79',\n        line: 0,\n      },\n      'french': {\n        code: 'v83',\n        line: 4,\n      },\n      'tab': {\n        code: 'v2f',\n      },\n    };\n  }\n\n  // Sizes affect the point-size of the clef.\n  static get sizes() {\n    return {\n      'default': 40,\n      'small': 32,\n    };\n  }\n\n  // Annotations attach to clefs -- such as \"8\" for octave up or down.\n  static get annotations() {\n    return {\n      '8va': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: -1.2,\n                x_shift: 11,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: -0.4,\n                x_shift: 8,\n              },\n            },\n          },\n        },\n      },\n      '8vb': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: 6.3,\n                x_shift: 10,\n              },\n              'bass': {\n                line: 4,\n                x_shift: 1,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: 5.8,\n                x_shift: 6,\n              },\n              'bass': {\n                line: 3.5,\n                x_shift: 0.5,\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n\n  // Create a new clef. The parameter `clef` must be a key from\n  // `Clef.types`.\n  constructor(type, size, annotation) {\n    super();\n    this.setAttribute('type', 'Clef');\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(this.glyph.getMetrics().width);\n    L('Creating clef:', type);\n  }\n\n  getCategory() { return Clef.CATEGORY; }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n    this.clef.point = Clef.sizes[this.size];\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const anno_dict = Clef.annotations[annotation];\n      this.annotation = {\n        code: anno_dict.code,\n        point: anno_dict.sizes[this.size].point,\n        line: anno_dict.sizes[this.size].attachments[this.type].line,\n        x_shift: anno_dict.sizes[this.size].attachments[this.type].x_shift,\n      };\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  getWidth() {\n    if (this.type === 'tab' && !this.stave) {\n      throw new Vex.RERR('ClefError', \"Can't get width without stave.\");\n    }\n\n    return this.width;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n\n    if (this.type !== 'tab') return this;\n\n    let glyphScale;\n    let glyphOffset;\n    const numLines = this.stave.getOptions().num_lines;\n    switch (numLines) {\n      case 8:\n        glyphScale = 55;\n        glyphOffset = 14;\n        break;\n      case 7:\n        glyphScale = 47;\n        glyphOffset = 8;\n        break;\n      case 6:\n        glyphScale = 40;\n        glyphOffset = 1;\n        break;\n      case 5:\n        glyphScale = 30;\n        glyphOffset = -6;\n        break;\n      case 4:\n        glyphScale = 23;\n        glyphOffset = -12;\n        break;\n      default:\n        throw new Vex.RERR('ClefError', `Invalid number of lines: ${numLines}`);\n    }\n\n    this.glyph.setPoint(glyphScale);\n    this.glyph.setYShift(glyphOffset);\n\n    return this;\n  }\n\n  draw() {\n    if (!this.x) throw new Vex.RERR('ClefError', \"Can't draw clef without x.\");\n    if (!this.stave) throw new Vex.RERR('ClefError', \"Can't draw clef without stave.\");\n    this.setRendered();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setContext(this.stave.context);\n    if (this.clef.line !== undefined) {\n      this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n    }\n\n    this.glyph.renderToStave(this.x);\n\n    if (this.annotation !== undefined) {\n      this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n      this.attachment.setStave(this.stave);\n      this.attachment.setContext(this.stave.context);\n      this.attachment.renderToStave(this.x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clef.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { Vex } from './vex';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\n\nconst assertIsValidFraction = (timeSpec) => {\n  const numbers = timeSpec.split('/').filter(number => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new Vex.RERR(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach(number => {\n    if (isNaN(Number(number))) {\n      throw new Vex.RERR(\n        'BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`\n      );\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  static get CATEGORY() { return 'timesignatures'; }\n\n  static get glyphs() {\n    return {\n      'C': {\n        code: 'v41',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'vb6',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec = null, customPadding = 15) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n\n    if (timeSpec === null) return;\n\n    const padding = customPadding;\n\n    this.point = 40;\n    this.topLine = 2;\n    this.bottomLine = 4;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n    this.setPadding(padding);\n  }\n\n  getCategory() { return TimeSignature.CATEGORY; }\n\n  parseTimeSpec(timeSpec) {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code, point } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      };\n    }\n\n    assertIsValidFraction(timeSpec);\n\n    const [topDigits, botDigits] = timeSpec\n      .split('/')\n      .map(number => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    };\n  }\n\n  makeTimeSignatureGlyph(topDigits, botDigits) {\n    const glyph = new Glyph('v0', this.point);\n    glyph.topGlyphs = [];\n    glyph.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('v' + num, this.point);\n\n      glyph.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('v' + num, this.point);\n\n      glyph.botGlyphs.push(botGlyph);\n      botWidth += botGlyph.getMetrics().width;\n    }\n\n    const width = topWidth > botWidth ? topWidth : botWidth;\n    const xMin = glyph.getMetrics().x_min;\n\n    glyph.getMetrics = () => ({\n      x_min: xMin,\n      x_max: xMin + width,\n      width,\n    });\n\n    const topStartX = (width - topWidth) / 2.0;\n    const botStartX = (width - botWidth) / 2.0;\n\n    const that = this;\n    glyph.renderToStave = function renderToStave(x) {\n      let start_x = x + topStartX;\n      for (let i = 0; i < this.topGlyphs.length; ++i) {\n        const glyph = this.topGlyphs[i];\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.topLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n\n      start_x = x + botStartX;\n      for (let i = 0; i < this.botGlyphs.length; ++i) {\n        const glyph = this.botGlyphs[i];\n        that.placeGlyphOnLine(glyph, this.stave, glyph.line);\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.bottomLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n    };\n\n    return glyph;\n  }\n\n  getTimeSig() {\n    return this.timeSig;\n  }\n\n  setTimeSig(timeSpec) {\n    this.timeSig = this.parseTimeSpec(timeSpec);\n    return this;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setContext(this.stave.context);\n    this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n    this.timeSig.glyph.renderToStave(this.x);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/timesignature.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Dot } from './dot';\nimport { Glyph } from './glyph';\n\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines = [];\n\n  unused_strings.forEach(strings => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString =  strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) ||\n       (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  static get CATEGORY() { return 'tabnotes'; }\n\n  // Initialize the TabNote with a `tab_struct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(tab_struct, draw_stem) {\n    super(tab_struct);\n    this.setAttribute('type', 'TabNote');\n\n    this.ghost = false; // Renders parenthesis around notes\n    // Note properties\n    //\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = tab_struct.positions;\n\n    // Render Options\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: Flow.DEFAULT_TABLATURE_FONT_SCALE,\n      // Flag to draw a stem\n      draw_stem,\n      // Flag to draw dot modifiers\n      draw_dots: draw_stem,\n      // Flag to extend the main stem through the stave and fret positions\n      draw_stem_through_stave: false,\n      // vertical shift from stave line\n      y_shift: 0,\n      // normal glyph scale\n      scale: 1.0,\n      // default tablature font\n      font: '10pt Arial',\n    });\n\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(tab_struct)}`\n      );\n    }\n\n    this.buildStem();\n\n    if (tab_struct.stem_direction) {\n      this.setStemDirection(tab_struct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n\n  reset() {\n    if (this.stave) this.setStave(this.stave);\n  }\n\n  // The ModifierContext category\n  getCategory() { return TabNote.CATEGORY; }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost) {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem() { return this.render_options.draw_stem; }\n\n  // Get the default stem extension for the note\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.tabnote_stem_up_extension\n        : glyph.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Add a dot to the note\n  addDot() {\n    const dot = new Dot();\n    this.dots += 1;\n    return this.addModifier(dot, 0);\n  }\n\n  // Calculate and store the width of the note\n  updateWidth() {\n    this.glyphs = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyph = Flow.tabToGlyph(fret, this.render_options.scale);\n      this.glyphs.push(glyph);\n      this.width = Math.max(glyph.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    this.glyph.getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave) {\n    super.setStave(stave);\n    this.context = stave.context;\n\n    // Calculate the fret number width based on font used\n    let i;\n    if (this.context) {\n      const ctx = this.context;\n      this.width = 0;\n      for (i = 0; i < this.glyphs.length; ++i) {\n        const glyph = this.glyphs[i];\n        const text = '' + glyph.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setRawFont(this.render_options.font);\n          glyph.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyph.getWidth = () => glyph.width;\n        }\n        this.width = Math.max(glyph.getWidth(), this.width);\n      }\n      this.glyph.getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({ str: line }) => stave.getYForLine(line - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions() { return this.positions; }\n\n  // Add self to the provided modifier context `mc`\n  addToModifierContext(mc) {\n    this.setModifierContext(mc);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get the `x` coordinate to the right of the note\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += (-this.width / 2) + this.width + 2;\n\n    return tieStartX;\n  }\n\n  // Get the `x` coordinate to the left of the note\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= (this.width / 2) + 2;\n\n    return tieEndX;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2;  // extra_left_px\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // extra_right_px\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = this.glyph.getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Get the default line for rest\n  getLineForRest() { return this.positions[0].str; }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.setPreFormatted(true);\n  }\n\n  // Get the x position for the stem\n  getStemX() { return this.getCenterGlyphX(); }\n\n  // Get the y position for the stem\n  getStemY() {\n    const num_lines = this.stave.getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.stave.getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag() {\n    const {\n      beam, glyph, context, stem, stem_direction,\n      render_options: { draw_stem, glyph_font_scale },\n    } = this;\n\n    const shouldDrawFlag = beam == null && draw_stem;\n\n    // Now it's the flag's turn.\n    if (glyph.flag && shouldDrawFlag) {\n      const flag_x = this.getStemX() + 1;\n      const flag_y = this.getStemY() - stem.getHeight();\n\n      const flag_code = stem_direction === Stem.DOWN\n        ? glyph.code_flag_downstem // Down stems have flags on the left.\n        : glyph.code_flag_upstem;\n\n      // Draw the Flag\n      Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code);\n    }\n  }\n\n  // Render the modifiers onto the context\n  drawModifiers() {\n    // Draw the modifiers\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled\n      if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n      modifier.setContext(this.context);\n      modifier.draw();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough() {\n    const stem_x = this.getStemX();\n    const stem_y = this.getStemY();\n    const ctx = this.context;\n\n    const stem_through = this.render_options.draw_stem_through_stave;\n    const draw_stem = this.render_options.draw_stem;\n    if (draw_stem && stem_through) {\n      const total_lines = this.stave.getNumLines();\n      const strings_used = this.positions.map(position => position.str);\n\n      const unused_strings = getUnusedStringGroups(total_lines, strings_used);\n      const stem_lines = getPartialStemLines(\n        stem_y,\n        unused_strings,\n        this.getStave(),\n        this.getStemDirection()\n      );\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stem_lines.forEach(bounds => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stem_x, bounds[0]);\n        ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions() {\n    const ctx = this.context;\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyph = this.glyphs[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = this.glyph.getWidth();\n      const tab_x = x + (note_glyph_width / 2) - (glyph.getWidth() / 2);\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n\n      if (glyph.code) {\n        Glyph.renderGlyph(ctx, tab_x, y,\n          this.render_options.glyph_font_scale * this.render_options.scale,\n          glyph.code);\n      } else {\n        ctx.save();\n        ctx.setRawFont(this.render_options.font);\n        const text = glyph.text.toString();\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == null && this.render_options.draw_stem;\n\n    this.drawPositions();\n    this.drawStemThrough();\n\n    const stem_x = this.getStemX();\n\n    this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\n    if (render_stem) {\n      this.context.openGroup('stem', null, { pointerBBox: true });\n      this.stem.setContext(this.context).draw();\n      this.context.closeGroup();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to regiser with a registry:\n//\n// 1) Explicitly call `element.register(registry)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\n\nimport { Vex } from './vex';\n\nexport const X = Vex.MakeException('RegistryError');\n\nfunction setIndexValue(index, name, value, id, elem) {\n  if (!index[name][value]) index[name][value] = {};\n  index[name][value][id] = elem;\n}\n\nexport class Registry {\n  static get INDEXES() { return ['type']; }\n\n  constructor() {\n    this.clear();\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry) {\n    Registry.defaultRegistry = registry;\n  }\n\n  static getDefaultRegistry() {\n    return Registry.defaultRegistry;\n  }\n\n  static disableDefaultRegistry() {\n    Registry.defaultRegistry = null;\n  }\n\n  clear() {\n    // Indexes are represented as maps of maps (of maps). This allows\n    // for both multi-labeling (e.g., an element can have multiple classes)\n    // and efficient lookup.\n    this.index = {\n      id: {},\n      type: {},\n      class: {},\n    };\n    return this;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({ id, name, value, oldValue }) {\n    const elem = this.getElementById(id);\n    if (oldValue !== null && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value !== null) {\n      setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  // Register element `elem` with this registry. This adds the element to its index and watches\n  // it for attribute changes.\n  register(elem, id) {\n    id = id || elem.getAttribute('id');\n\n    if (!id) {\n      throw new X('Can\\'t add element without `id` attribute to registry', elem);\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    setIndexValue(this.index, 'id', id, id, elem);\n    Registry.INDEXES.forEach(name => {\n      this.updateIndex({ id, name, value: elem.getAttribute(name), oldValue: null });\n    });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id) {\n    return this.index.id[id] ? this.index.id[id][id] : null;\n  }\n\n  getElementsByAttribute(attrName, value) {\n    const index = this.index[attrName];\n    if (index && index[value]) {\n      return Object.keys(index[value]).map(i => index[value][i]);\n    } else {\n      return [];\n    }\n  }\n\n  getElementsByType(type) { return this.getElementsByAttribute('type', type); }\n  getElementsByClass(className) { return this.getElementsByAttribute('class', className); }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate({ id, name, value, oldValue }) {\n    function includes(array, value) {\n      return array.filter(x => x === value).length > 0;\n    }\n\n    if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n    this.updateIndex({ id, name, value, oldValue });\n    return this;\n  }\n}\n\nRegistry.defaultRegistry = null;\n\n\n\n// WEBPACK FOOTER //\n// ./src/registry.js","export const Font = {\n\"glyphs\":{\n\"v0\":{\"x_min\":0,\"x_max\":514.5,\"ha\":525,\"o\":\"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 \"},\n\"v1\":{\"x_min\":-1.359375,\"x_max\":344.359375,\"ha\":351,\"o\":\"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 \"},\n\"v2\":{\"x_min\":-1.359375,\"x_max\":458.6875,\"ha\":468,\"o\":\"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 \"},\n\"v3\":{\"x_min\":-1.359375,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v4\":{\"x_min\":0,\"x_max\":468.21875,\"ha\":478,\"o\":\"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 \"},\n\"v5\":{\"x_min\":0,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v6\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"v7\":{\"x_min\":0,\"x_max\":442.359375,\"ha\":451,\"o\":\"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 \"},\n\"v8\":{\"x_min\":0,\"x_max\":488.640625,\"ha\":499,\"o\":\"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 \"},\n\"v9\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"va\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 \"},\n\"vb\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 \"},\n\"vc\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 \"},\n\"vf\":{\"x_min\":0,\"x_max\":370.21875,\"ha\":378,\"o\":\"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 \"},\n\"v10\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 \"},\n\"v11\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\n\"v18\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\n\"v1b\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 \"},\n\"v1d\":{\"x_min\":0,\"x_max\":619.3125,\"ha\":632,\"o\":\"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 \"},\n\"v1e\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 \"},\n\"v1f\":{\"x_min\":-340.28125,\"x_max\":338.921875,\"ha\":346,\"o\":\"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 \"},\n\"v20\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 \"},\n\"v22\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 \"},\n\"v23\":{\"x_min\":0,\"x_max\":133.390625,\"ha\":136,\"o\":\"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 \"},\n\"v25\":{\"x_min\":0,\"x_max\":318.5,\"ha\":325,\"o\":\"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 \"},\n\"v26\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v27\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 \"},\n\"v28\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 \"},\n\"v29\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 \"},\n\"v2a\":{\"x_min\":-21.78125,\"x_max\":366.140625,\"ha\":374,\"o\":\"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 \"},\n\"v2c\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 \"},\n\"v2d\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 \"},\n\"v2f\":{\"x_min\":-1.359375,\"x_max\":680.5625,\"ha\":694,\"o\":\"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 \"},\n\"v30\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 \"},\n\"v31\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 \"},\n\"v33\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 \"},\n\"v34\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\n\"v36\":{\"x_min\":-1.359375,\"x_max\":1064.390625,\"ha\":1086,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 \"},\n\"v38\":{\"x_min\":-1.359375,\"x_max\":651.96875,\"ha\":665,\"o\":\"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 \"},\n\"v39\":{\"x_min\":-171.5,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v3b\":{\"x_min\":0,\"x_max\":484.5625,\"ha\":494,\"o\":\"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 \"},\n\"v3c\":{\"x_min\":0,\"x_max\":450.53125,\"ha\":460,\"o\":\"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 \"},\n\"v3e\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 \"},\n\"v3f\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 \"},\n\"v40\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v41\":{\"x_min\":-1.359375,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 \"},\n\"v42\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 \"},\n\"v43\":{\"x_min\":-442.359375,\"x_max\":441,\"ha\":450,\"o\":\"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 \"},\n\"v44\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v45\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 \"},\n\"v46\":{\"x_min\":0,\"x_max\":627.46875,\"ha\":640,\"o\":\"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 \"},\n\"v47\":{\"x_min\":-24.5,\"x_max\":315.78125,\"ha\":322,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 \"},\n\"v49\":{\"x_min\":0,\"x_max\":630.203125,\"ha\":643,\"o\":\"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 \"},\n\"v4a\":{\"x_min\":70.78125,\"x_max\":378.390625,\"ha\":315,\"o\":\"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 \"},\n\"v4b\":{\"x_min\":0,\"x_max\":503.609375,\"ha\":514,\"o\":\"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 \"},\n\"v4d\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 \"},\n\"v4e\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\n\"v51\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\n\"v52\":{\"x_min\":-10.890625,\"x_max\":298.078125,\"ha\":294,\"o\":\"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 \"},\n\"v53\":{\"x_min\":0,\"x_max\":902.421875,\"ha\":921,\"o\":\"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 \"},\n\"v54\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 \"},\n\"v55\":{\"x_min\":0,\"x_max\":551.25,\"ha\":563,\"o\":\"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 \"},\n\"v58\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 \"},\n\"v59\":{\"x_min\":0,\"x_max\":464.140625,\"ha\":474,\"o\":\"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 \"},\n\"v5a\":{\"x_min\":-171.5,\"x_max\":170.140625,\"ha\":174,\"o\":\"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 \"},\n\"v5b\":{\"x_min\":-441,\"x_max\":439.640625,\"ha\":449,\"o\":\"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\n\"v5c\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 \"},\n\"v5d\":{\"x_min\":-1.359375,\"x_max\":592.078125,\"ha\":604,\"o\":\"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 \"},\n\"v60\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 \"},\n\"v62\":{\"x_min\":46.28125,\"x_max\":669.671875,\"ha\":563,\"o\":\"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 \"},\n\"v68\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"v6c\":{\"x_min\":-1.359375,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 \"},\n\"v6d\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 \"},\n\"v6f\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 \"},\n\"v70\":{\"x_min\":0,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 \"},\n\"v72\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 \"},\n\"v74\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 \"},\n\"v75\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 \"},\n\"v78\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\n\"v79\":{\"x_min\":-1.359375,\"x_max\":899.703125,\"ha\":918,\"o\":\"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 \"},\n\"v7a\":{\"x_min\":-1.359375,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 \"},\n\"v7c\":{\"x_min\":0,\"x_max\":300.8125,\"ha\":307,\"o\":\"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 \"},\n\"v7d\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v7f\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\n\"v80\":{\"x_min\":29.9375,\"x_max\":420.578125,\"ha\":371,\"o\":\"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 \"},\n\"v81\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 \"},\n\"v83\":{\"x_min\":-1.359375,\"x_max\":847.96875,\"ha\":865,\"o\":\"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 \"},\n\"v84\":{\"x_min\":25.859375,\"x_max\":164.6875,\"ha\":168,\"o\":\"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 \"},\n\"v86\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 \"},\n\"v8a\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 \"},\n\"v8b\":{\"x_min\":0,\"x_max\":319.859375,\"ha\":326,\"o\":\"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 \"},\n\"v8c\":{\"x_min\":-330.75,\"x_max\":329.390625,\"ha\":336,\"o\":\"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 \"},\n\"v8d\":{\"x_min\":-1.359375,\"x_max\":255.890625,\"ha\":261,\"o\":\"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 \"},\n\"v8f\":{\"x_min\":-21.78125,\"x_max\":362.0625,\"ha\":369,\"o\":\"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 \"},\n\"v90\":{\"x_min\":-171.5,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v92\":{\"x_min\":0,\"x_max\":598.890625,\"ha\":611,\"o\":\"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 \"},\n\"v93\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\n\"v94\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 \"},\n\"v95\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 \"},\n\"v97\":{\"x_min\":-228.671875,\"x_max\":227.3125,\"ha\":232,\"o\":\"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 \"},\n\"v9a\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 \"},\n\"v9b\":{\"x_min\":-24.5,\"x_max\":313.0625,\"ha\":319,\"o\":\"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 \"},\n\"v9c\":{\"x_min\":-166.0625,\"x_max\":-25.859375,\"ha\":0,\"o\":\"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 \"},\n\"v9e\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\n\"va3\":{\"x_min\":58.53125,\"x_max\":228.671875,\"ha\":294,\"o\":\"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 \"},\n\"va5\":{\"x_min\":0,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 \"},\n\"va9\":{\"x_min\":-24.5,\"x_max\":314.421875,\"ha\":321,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 \"},\n\"vaa\":{\"x_min\":-1.359375,\"x_max\":752.703125,\"ha\":768,\"o\":\"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 \"},\n\"vab\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\n\"vad\":{\"x_min\":0,\"x_max\":873.828125,\"ha\":892,\"o\":\"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 \"},\n\"vb1\":{\"x_min\":78.9375,\"x_max\":485.921875,\"ha\":417,\"o\":\"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 \"},\n\"vb3\":{\"x_min\":0,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 \"},\n\"vb4\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"vb6\":{\"x_min\":0,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 \"},\n\"vb7\":{\"x_min\":-176.9375,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"vb9\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\n\"vba\":{\"x_min\":-118.421875,\"x_max\":597.53125,\"ha\":381,\"o\":\"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 \"},\n\"vbf\":{\"x_min\":-53.078125,\"x_max\":513.140625,\"ha\":485,\"o\":\"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 \"},\n\"vc3\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 \"},\n\"vd0\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 \"},\n\"vd1\":{\"x_min\":-20,\"x_max\":320,\"ha\":257,\"o\":\"m -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 \"},\n\"vd2\":{\"x_min\":0,\"x_max\":430.75,\"ha\":386,\"o\":\"m 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 \"},\n\"vd3\":{\"x_min\":0,\"x_max\":430.75,\"ha\":386,\"o\":\"m 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 \"},\n\"vd4\":{\"x_min\":0,\"x_max\":430.75,\"ha\":360,\"o\":\"m 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 \"},\n\"vd5\":{\"x_min\":0,\"x_max\":430.75,\"ha\":360,\"o\":\"m 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100\"},\n},\n\"cssFontWeight\":\"normal\",\"ascender\":1903,\"underlinePosition\":-125,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-2065.375,\"xMin\":-695.53125,\"yMax\":1901.578125,\"xMax\":1159.671875},\n\"resolution\":1000,\"descender\":-2066,\"familyName\":\"VexFlow-18\",\"lineHeight\":4093,\"underlineThickness\":50\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fonts/vexflow_font.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n// directly, but used internally in `StaveNote`.\n//\n// See `tests/notehead_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\nfunction L(...args) { if (NoteHead.DEBUG) Vex.L('Vex.Flow.NoteHead', args); }\n\n// Draw slashnote head manually. No glyph exists for this.\n//\n// Parameters:\n// * `ctx`: the Canvas context\n// * `duration`: the duration of the note. ex: \"4\"\n// * `x`: the x coordinate to draw at\n// * `y`: the y coordinate to draw at\n// * `stem_direction`: the direction of the stem\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n  const width = Flow.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Flow.STEM_WIDTH);\n\n  let fill = false;\n\n  if (Flow.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (Flow.STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (Flow.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\nexport class NoteHead extends Note {\n  static get CATEGORY() { return 'notehead'; }\n\n  constructor(head_options) {\n    super(head_options);\n    this.setAttribute('type', 'NoteHead');\n\n    this.index = head_options.index;\n    this.x = head_options.x || 0;\n    this.y = head_options.y || 0;\n    this.note_type = head_options.note_type;\n    this.duration = head_options.duration;\n    this.displaced = head_options.displaced || false;\n    this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n    this.line = head_options.line;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyph = Flow.durationToGlyph(this.duration, this.note_type);\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `No glyph found for duration '${this.duration}' and type '${this.note_type}'`);\n    }\n\n    this.glyph_code = this.glyph.code_head;\n    this.x_shift = head_options.x_shift;\n    if (head_options.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = head_options.custom_glyph_code;\n    }\n\n    this.style = head_options.style;\n    this.slashed = head_options.slashed;\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads\n      glyph_font_scale: head_options.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: 3,\n    });\n\n    this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n  }\n\n  getCategory() { return NoteHead.CATEGORY; }\n\n  // Get the width of the notehead\n  getWidth() { return this.width; }\n\n  // Determine if the notehead is displaced\n  isDisplaced() { return this.displaced === true; }\n\n  // Get the glyph data\n  getGlyph() { return this.glyph; }\n\n  // Set the X coordinate\n  setX(x) { this.x = x; return this; }\n\n  // get/set the Y coordinate\n  getY() { return this.y; }\n  setY(y) { this.y = y;  return this; }\n\n  // Get/set the stave line the notehead is placed on\n  getLine() { return this.line; }\n  setLine(line) { this.line = line; return this; }\n\n  // Get the canvas `x` coordinate position of the notehead.\n  getAbsoluteX() {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = (Stem.WIDTH / 2);\n\n    return x + (this.displaced\n      ? (this.width - displacementStemAdjustment) * this.stem_direction\n      : 0\n    );\n  }\n\n  // Get the `BoundingBox` for the `NoteHead`\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const spacing = this.stave.getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  // Set notehead to a provided `stave`\n  setStave(stave) {\n    const line = this.getLine();\n\n    this.stave = stave;\n    this.setY(stave.getYForNote(line));\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.extraLeftPx + this.extraRightPx;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Draw the notehead\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const head_x = this.getAbsoluteX();\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n\n    if (this.style) {\n      this.applyStyle(ctx);\n    }\n\n    if (this.note_type === 's') {\n      const staveSpace = this.stave.getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n    }\n\n    if (this.style) {\n      this.restoreStyle(ctx);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/notehead.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// The tickable interface. Tickables are things that sit on a score and\n// have a duration, i.e., they occupy space in the musical rendering dimension.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Tickable extends Element {\n  constructor() {\n    super();\n    this.setAttribute('type', 'Tickable');\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1);\n    this.intrinsicTicks = 0;\n    this.tickMultiplier = new Fraction(1, 1);\n\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n    this.voice = null;\n    this.tickContext = null;\n    this.modifierContext = null;\n    this.modifiers = [];\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.tuplet = null;\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  reset() { return this; }\n  getTicks() { return this.ticks; }\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n  getWidth() { return this.width; }\n\n  getFormatterMetrics() { return this.formatterMetrics; }\n\n  setXShift(x) { this.x_shift = x; }\n  getCenterXShift() {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n  isCenterAligned() { return this.align_center; }\n  setCenterAlignment(align_center) {\n    this.align_center = align_center;\n    return this;\n  }\n\n  // Every tickable must be associated with a voice. This allows formatters\n  // and preFormatter to associate them with the right modifierContexts.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Tickable has no voice.');\n    return this.voice;\n  }\n  setVoice(voice) { this.voice = voice; }\n  getTuplet() { return this.tuplet; }\n\n  /*\n   * resetTuplet\n   * @param tuplet -- the specific tuplet to reset\n   *   if this is not provided, all tuplets are reset.\n   * @returns this\n   *\n   * Removes any prior tuplets from the tick calculation and\n   * resets the intrinsic tick value to\n   */\n  resetTuplet(tuplet) {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop();\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  setTuplet(tuplet) {\n    // Attach to new tuplet\n\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addToModifierContext(mc) {\n    this.modifierContext = mc;\n    // Add modifiers to modifier context (if any)\n    this.preFormatted = false;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addModifier(mod) {\n    this.modifiers.push(mod);\n    this.preFormatted = false;\n    return this;\n  }\n  getModifiers() {\n    return this.modifiers;\n  }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n  }\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n  getIntrinsicTicks() {\n    return this.intrinsicTicks;\n  }\n  setIntrinsicTicks(intrinsicTicks) {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  getTickMultiplier() {\n    return this.tickMultiplier;\n  }\n  applyTickMultiplier(numerator, denominator) {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  setDuration(duration) {\n    const ticks = duration.numerator * (Flow.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tickable.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\r\n// Author: Larry Kuhns\r\n//\r\n// ## Description\r\n// This file implements the `Stroke` class which renders chord strokes\r\n// that can be arpeggiated, brushed, rasquedo, etc.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\nimport { StaveNote } from './stavenote';\r\nimport { Glyph } from './glyph';\r\n\r\nexport class Stroke extends Modifier {\r\n  static get CATEGORY() { return 'strokes'; }\r\n  static get Type() {\r\n    return {\r\n      BRUSH_DOWN: 1,\r\n      BRUSH_UP: 2,\r\n      ROLL_DOWN: 3, // Arpeggiated chord\r\n      ROLL_UP: 4,   // Arpeggiated chord\r\n      RASQUEDO_DOWN: 5,\r\n      RASQUEDO_UP: 6,\r\n      ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\r\n    };\r\n  }\r\n\r\n  // Arrange strokes inside `ModifierContext`\r\n  static format(strokes, state) {\r\n    const left_shift = state.left_shift;\r\n    const stroke_spacing = 0;\r\n\r\n    if (!strokes || strokes.length === 0) return this;\r\n\r\n    const strokeList = strokes.map((stroke) => {\r\n      const note = stroke.getNote();\r\n      if (note instanceof StaveNote) {\r\n        const { line, displaced } = note.getKeyProps()[stroke.getIndex()];\r\n        const shift = displaced ? note.getExtraLeftPx() : 0;\r\n        return { line, shift, stroke };\r\n      } else {\r\n        const { str: string } = note.getPositions()[stroke.getIndex()];\r\n        return { line: string, shift: 0, stroke };\r\n      }\r\n    });\r\n\r\n    const strokeShift = left_shift;\r\n\r\n    // There can only be one stroke .. if more than one, they overlay each other\r\n    const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\r\n      stroke.setXShift(strokeShift + shift);\r\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\r\n    }, 0);\r\n\r\n    state.left_shift += xShift;\r\n    return true;\r\n  }\r\n\r\n  constructor(type, options) {\r\n    super();\r\n    this.setAttribute('type', 'Stroke');\r\n\r\n    this.note = null;\r\n    this.options = Vex.Merge({}, options);\r\n\r\n    // multi voice - span stroke across all voices if true\r\n    this.all_voices = 'all_voices' in this.options ? this.options.all_voices : true;\r\n\r\n    // multi voice - end note of stroke, set in draw()\r\n    this.note_end = null;\r\n    this.index = null;\r\n    this.type = type;\r\n    this.position = Modifier.Position.LEFT;\r\n\r\n    this.render_options = {\r\n      font_scale: 38,\r\n      stroke_px: 3,\r\n      stroke_spacing: 10,\r\n    };\r\n\r\n    this.font = {\r\n      family: 'serif',\r\n      size: 10,\r\n      weight: 'bold italic',\r\n    };\r\n\r\n    this.setXShift(0);\r\n    this.setWidth(10);\r\n  }\r\n\r\n  getCategory() { return Stroke.CATEGORY; }\r\n  getPosition() { return this.position; }\r\n  addEndNote(note) { this.note_end = note; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n    this.setRendered();\r\n\r\n    if (!(this.note && (this.index != null))) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\r\n    }\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let ys = this.note.getYs();\r\n    let topY = start.y;\r\n    let botY = start.y;\r\n    const x = start.x - 5;\r\n    const line_space = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const notes = this.getModifierContext().getModifiers(this.note.getCategory());\r\n    for (let i = 0; i < notes.length; i++) {\r\n      ys = notes[i].getYs();\r\n      for (let n = 0; n < ys.length; n++) {\r\n        if (this.note === notes[i] || this.all_voices) {\r\n          topY = Vex.Min(topY, ys[n]);\r\n          botY = Vex.Max(botY, ys[n]);\r\n        }\r\n      }\r\n    }\r\n\r\n    let arrow;\r\n    let arrow_shift_x;\r\n    let arrow_y;\r\n    let text_shift_x;\r\n    let text_y;\r\n    switch (this.type) {\r\n      case Stroke.Type.BRUSH_DOWN:\r\n        arrow = 'vc3';\r\n        arrow_shift_x = -3;\r\n        arrow_y = topY - (line_space / 2) + 10;\r\n        botY += (line_space / 2);\r\n        break;\r\n      case Stroke.Type.BRUSH_UP:\r\n        arrow = 'v11';\r\n        arrow_shift_x = 0.5;\r\n        arrow_y = botY + (line_space / 2);\r\n        topY -= (line_space / 2);\r\n        break;\r\n      case Stroke.Type.ROLL_DOWN:\r\n      case Stroke.Type.RASQUEDO_DOWN:\r\n        arrow = 'vc3';\r\n        arrow_shift_x = -3;\r\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\r\n        if (this.note instanceof StaveNote) {\r\n          topY += 1.5 * line_space;\r\n          if ((botY - topY) % 2 !== 0) {\r\n            botY += 0.5 * line_space;\r\n          } else {\r\n            botY += line_space;\r\n          }\r\n          arrow_y = topY - line_space;\r\n          text_y = botY + line_space + 2;\r\n        } else {\r\n          topY += 1.5 * line_space;\r\n          botY += line_space;\r\n          arrow_y = topY - 0.75 * line_space;\r\n          text_y = botY + 0.25 * line_space;\r\n        }\r\n        break;\r\n      case Stroke.Type.ROLL_UP:\r\n      case Stroke.Type.RASQUEDO_UP:\r\n        arrow = 'v52';\r\n        arrow_shift_x = -4;\r\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\r\n        if (this.note instanceof StaveNote) {\r\n          arrow_y = line_space / 2;\r\n          topY += 0.5 * line_space;\r\n          if ((botY - topY) % 2 === 0) {\r\n            botY += line_space / 2;\r\n          }\r\n          arrow_y = botY + 0.5 * line_space;\r\n          text_y = topY - 1.25 * line_space;\r\n        } else {\r\n          topY += 0.25 * line_space;\r\n          botY += 0.5 * line_space;\r\n          arrow_y = botY + 0.25 * line_space;\r\n          text_y = topY - line_space;\r\n        }\r\n        break;\r\n      case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\r\n        topY += 0.5 * line_space;\r\n        botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\r\n        break;\r\n      default:\r\n        throw new Vex.RERR('InvalidType', `The stroke type ${this.type} does not exist`);\r\n    }\r\n\r\n    // Draw the stroke\r\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\r\n      this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\r\n    } else {\r\n      if (this.note instanceof StaveNote) {\r\n        for (let i = topY; i <= botY; i += line_space) {\r\n          Glyph.renderGlyph(\r\n            this.context,\r\n            x + this.x_shift - 4,\r\n            i,\r\n            this.render_options.font_scale,\r\n            'va3'\r\n          );\r\n        }\r\n      } else {\r\n        let i;\r\n        for (i = topY; i <= botY; i += 10) {\r\n          Glyph.renderGlyph(\r\n            this.context,\r\n            x + this.x_shift - 4,\r\n            i,\r\n            this.render_options.font_scale,\r\n            'va3'\r\n          );\r\n        }\r\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\r\n          text_y = i + 0.25 * line_space;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\r\n      return; // skip drawing arrow heads or text\r\n    }\r\n\r\n    // Draw the arrow head\r\n    Glyph.renderGlyph(\r\n      this.context,\r\n      x + this.x_shift + arrow_shift_x,\r\n      arrow_y,\r\n      this.render_options.font_scale,\r\n      arrow\r\n    );\r\n\r\n    // Draw the rasquedo \"R\"\r\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\r\n      this.context.save();\r\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\r\n      this.context.fillText('R', x + text_shift_x, text_y);\r\n      this.context.restore();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/strokes.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements ornaments as modifiers that can be\n// attached to notes. The complete list of ornaments is available in\n// `tables.js` under `Vex.Flow.ornamentCodes`.\n//\n// See `tests/ornament_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { TickContext } from './tickcontext';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\nfunction L(...args) { if (Ornament.DEBUG) Vex.L('Vex.Flow.Ornament', args); }\n\nexport class Ornament extends Modifier {\n  static get CATEGORY() { return 'ornaments'; }\n\n  // ## Static Methods\n  // Arrange ornaments inside `ModifierContext`\n  static format(ornaments, state) {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      width = Math.max(ornament.getWidth(), width);\n\n      if (ornament.getPosition() === Modifier.Position.ABOVE) {\n        ornament.setTextLine(state.top_text_line);\n        state.top_text_line += increment;\n      } else {\n        ornament.setTextLine(state.text_line);\n        state.text_line += increment;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // Create a new ornament of type `type`, which is an entry in\n  // `Vex.Flow.ornamentCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Ornament');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.ABOVE;\n    this.delayed = false;\n\n    this.accidentalUpper = null;\n    this.accidentalLower = null;\n\n    this.render_options = {\n      font_scale: 38,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3,\n    };\n\n    this.ornament = Flow.ornamentCodes(this.type);\n    if (!this.ornament) {\n      throw new Vex.RERR('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale);\n    this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n  }\n\n  getCategory() { return Ornament.CATEGORY; }\n\n  // Set whether the ornament is to be delayed\n  setDelayed(delayed) { this.delayed = delayed; return this; }\n\n  // Set the upper accidental for the ornament\n  setUpperAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Set the lower accidental for the ornament\n  setLowerAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Render ornament in position next to note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const ctx = this.context;\n    const stemDir = this.note.getStemDirection();\n    const stave = this.note.getStave();\n\n    // Get stem extents\n    const stemExtents = this.note.getStem().getExtents();\n    let y = stemDir === StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered\n    // outside the stave.\n    if (this.note.getCategory() === 'tabnotes') {\n      if (this.note.hasStem()) {\n        if (stemDir === StaveNote.STEM_DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else { // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === StaveNote.STEM_DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && this.note.beam) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n    let glyphY = Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      let delayXShift = 0;\n      if (this.delayXShift !== undefined) {\n        delayXShift = this.delayXShift;\n      } else {\n        delayXShift += this.glyph.getMetrics().width / 2;\n        const nextContext = TickContext.getNextContext(this.note.getTickContext());\n        if (nextContext) {\n          delayXShift += (nextContext.getX() - glyphX) * 0.5;\n        } else {\n          delayXShift += (stave.x + stave.width - glyphX) * 0.5;\n        }\n        this.delayXShift = delayXShift;\n      }\n      glyphX += delayXShift;\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    this.glyph.render(ctx, glyphX, glyphY);\n    glyphY -= this.glyph.getMetrics().height;\n\n    if (this.accidentalUpper) {\n      glyphY -= this.render_options.accidentalUpperPadding;\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ornament.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class Repetition extends StaveModifier {\n  static get CATEGORY() { return 'repetitions'; }\n  static get type() {\n    return {\n      NONE: 1,         // no coda or segno\n      CODA_LEFT: 2,    // coda at beginning of stave\n      CODA_RIGHT: 3,   // coda at end of stave\n      SEGNO_LEFT: 4,   // segno at beginning of stave\n      SEGNO_RIGHT: 5,  // segno at end of stave\n      DC: 6,           // D.C. at end of stave\n      DC_AL_CODA: 7,   // D.C. al coda at end of stave\n      DC_AL_FINE: 8,   // D.C. al Fine end of stave\n      DS: 9,           // D.S. at end of stave\n      DS_AL_CODA: 10,  // D.S. al coda at end of stave\n      DS_AL_FINE: 11,  // D.S. al Fine at end of stave\n      FINE: 12,        // Fine at end of stave\n    };\n  }\n\n  constructor(type, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Repetition');\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n    this.font = {\n      family: 'times',\n      size: 12,\n      weight: 'bold italic',\n    };\n  }\n\n  getCategory() { return Repetition.CATEGORY; }\n  setShiftX(x) { this.x_shift = x; return this; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'v4d', true);\n    return this;\n  }\n\n  drawSignoFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'v8c', true);\n    return this;\n  }\n\n  drawSymbolText(stave, x, text, draw_coda) {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Default to right symbol\n    let text_x = 0 + this.x_shift;\n    let symbol_x = x + this.x_shift;\n    if (this.symbol_type === Repetition.type.CODA_LEFT) {\n      // Offset Coda text to right of stave beginning\n      text_x = this.x + stave.options.vertical_bar_width;\n      symbol_x = text_x + ctx.measureText(text).width + 12;\n    } else {\n      // Offset Signo text to left stave end\n      symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n      text_x = symbol_x - + ctx.measureText(text).width - 12;\n    }\n\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'v4d', true);\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staverepetition.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class KeySignature extends StaveModifier {\n  static get CATEGORY() { return 'keysignatures'; }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static get accidentalSpacing() {\n    return {\n      '#': {\n        above: 6,\n        below: 4,\n      },\n      'b': {\n        above: 4,\n        below: 7,\n      },\n      'n': {\n        above: 4,\n        below: 1,\n      },\n      '##': {\n        above: 6,\n        below: 4,\n      },\n      'bb': {\n        above: 4,\n        below: 7,\n      },\n      'db': {\n        above: 4,\n        below: 7,\n      },\n      'd': {\n        above: 4,\n        below: 7,\n      },\n      'bbs': {\n        above: 4,\n        below: 7,\n      },\n      '++': {\n        above: 6,\n        below: 4,\n      },\n      '+': {\n        above: 6,\n        below: 4,\n      },\n      '+-': {\n        above: 6,\n        below: 4,\n      },\n      '++-': {\n        above: 6,\n        below: 4,\n      },\n      'bs': {\n        above: 4,\n        below: 10,\n      },\n      'bss': {\n        above: 4,\n        below: 10,\n      },\n    };\n  }\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super();\n    this.setAttribute('type', 'KeySignature');\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  getCategory() { return KeySignature.CATEGORY; }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc, nextAcc) {\n    const accGlyphData = Flow.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.stave, acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec) {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec) {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = Flow.keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types = this.accList.length > 0\n      && cancel_accList.length > 0\n      && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types\n      ? cancel_accList.length\n      : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return;\n\n    // Get the line position for each natural\n    const cancelled = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({ type: 'n', line: acc.line });\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n  }\n\n  // Deprecated\n  addToStave(stave) {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef, type) {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index) {\n    if (!this.formatted) this.format();\n\n    return (\n      this.glyphs.length === 0 || (!this.paddingForced && index < 2) ?\n        0 : this.padding\n    );\n  }\n\n  getWidth() {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec) {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec) {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format() {\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = Flow.keySignature(this.keySpec);\n    if (this.cancelKeySpec) {\n      this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    const firstAccidentalType = this.accList.length > 0 ? this.accList[0].type : null;\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      this.convertAccLines(this.stave.clef, firstAccidentalType);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(this.stave);\n      glyph.setContext(this.stave.context);\n      glyph.renderToStave(x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/keysignature.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class Volta extends StaveModifier {\n  static get CATEGORY() { return 'voltas'; }\n  static get type() {\n    return {\n      NONE: 1,\n      BEGIN: 2,\n      MID: 3,\n      END: 4,\n      BEGIN_END: 5,\n    };\n  }\n\n  constructor(type, number, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return Volta.CATEGORY; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.width;\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n    // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavevolta.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Stave } from './stave';\n\nexport class TabStave extends Stave {\n  constructor(x, y, width, options) {\n    const tab_options = {\n      spacing_between_lines_px: 13,\n      num_lines: 6,\n      top_text_position: 1,\n    };\n\n    Vex.Merge(tab_options, options);\n    super(x, y, width, tab_options);\n    this.setAttribute('type', 'TabStave');\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph() {\n    this.addClef('tab');\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabstave.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\nfunction L(...args) { if (VibratoBracket.DEBUG) Vex.L('Vex.Flow.VibratoBracket', args); }\n\nexport class VibratoBracket extends Element {\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n  }\n\n  // Set line position of the vibrato bracket\n  setLine(line) { this.line = line; return this; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n\n  // Draw the vibrato bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    const y = (this.start)\n      ? this.start.getStave().getYForTopText(this.line)\n      : this.stop.getStave().getYForTopText(this.line);\n\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x = (this.start)\n      ? this.start.getAbsoluteX()\n      : this.stop.getStave().getTieStartX();\n\n    // If stop note is not set then vibrato will be drawn\n    // until the end of the stave\n    const stop_x = (this.stop)\n      ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5\n      : this.start.getStave().getTieEndX() - 10;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vibratobracket.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\n\n/** @constructor */\nexport class ClefNote extends Note {\n  static get CATEGORY() { return 'clefnote'; }\n\n  constructor(type, size, annotation) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'ClefNote');\n\n    this.setType(type, size, annotation);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getClef() {\n    return this.clef;\n  }\n\n  setContext(context) {\n    this.context = context;\n    this.glyph.setContext(this.context);\n    return this;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  getCategory() { return ClefNote.CATEGORY; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(this.context);\n    }\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setYShift(\n      this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n    this.glyph.renderToStave(abs_x);\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.clef_obj.annotation !== undefined) {\n      const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n      if (!attachment.getContext()) {\n        attachment.setContext(this.context);\n      }\n      attachment.setStave(this.stave);\n      attachment.setYShift(\n        this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n      attachment.setXShift(this.clef_obj.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clefnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\n\nexport class TimeSigNote extends Note {\n  constructor(timeSpec, customPadding) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(\n      this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/timesignote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Flow } from './tables';\n\nexport class GraceNote extends StaveNote {\n  static get CATEGORY() { return 'gracenotes'; }\n  static get LEDGER_LINE_OFFSET() { return 2; }\n  static get SCALE() { return 0.66; }\n\n  constructor(note_struct) {\n    super(Object.assign(note_struct, {\n      glyph_font_scale: Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n      stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n    }));\n    this.setAttribute('type', 'GraceNote');\n\n    this.slash = note_struct.slash;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension() {\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    const glyph = this.getGlyph();\n    if (glyph) {\n      let ret = super.getStemExtension();\n      if (glyph.stem) {\n        const scale = this.render_options.glyph_font_scale / Flow.DEFAULT_NOTATION_FONT_SCALE;\n        ret = ((Stem.HEIGHT + ret) * scale) - Stem.HEIGHT;\n      }\n      return ret;\n    }\n\n    return 0;\n  }\n\n  getCategory() { return GraceNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n    const ctx = this.context;\n    const stem_direction = this.getStemDirection();\n\n    if (this.slash) {\n      ctx.beginPath();\n\n      let x = this.getAbsoluteX();\n      let y = this.getYs()[0] - (this.stem.getHeight() / 2.8);\n      if (stem_direction === 1) {\n        x += 1;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + 13, y - 9);\n      } else if (stem_direction === -1) {\n        x -= 4;\n        y += 1;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + 13, y + 9);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracenote.js","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class Curve extends Element {\n  static get Position() {\n    return {\n      NEAR_HEAD: 1,\n      NEAR_TOP: 2,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      nearHead: Curve.Position.NEAR_HEAD,\n      nearTop: Curve.Position.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from, to, options) {\n    super();\n    this.setAttribute('type', 'Curve');\n\n    this.render_options = {\n      spacing: 2,\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: Curve.Position.NEAR_HEAD,\n      position_end: Curve.Position.NEAR_HEAD,\n      invert: false,\n      cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }],\n    };\n\n    Vex.Merge(this.render_options, options);\n    this.setNotes(from, to);\n  }\n\n  setNotes(from, to) {\n    if (!from && !to) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Curve needs to have either first_note or last_note set.'\n      );\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.from || !this.to);\n  }\n\n  renderCurve(params) {\n    const ctx = this.context;\n    const cps = this.render_options.cps;\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cps[0].x,\n      first_y + (cps[0].y * params.direction),\n      last_x - cp_spacing + cps[1].x,\n      last_y + (cps[1].y * params.direction),\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cps[1].x,\n      last_y + ((cps[1].y + thickness) * params.direction),\n      first_x + cp_spacing + cps[0].x,\n      first_y + ((cps[0].y + thickness) * params.direction),\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position) {\n      return typeof(position) === 'string'\n        ? Curve.PositionString[position]\n        : position;\n    }\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === Curve.Position.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === Curve.Position.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === Curve.Position.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      first_x = last_note.getStave().getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      last_x = first_note.getStave().getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/curve.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `TextDynamics` which renders traditional\n// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n//\n// You can render any dynamics string that contains a combination of\n// the following letters:  P, M, F, Z, R, S\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\nfunction L(...args) { if (TextDynamics.DEBUG) Vex.L('Vex.Flow.TextDynamics', args); }\n\nexport class TextDynamics extends Note {\n  // The glyph data for each dynamics letter\n  static get GLYPHS() {\n    return {\n      'f': {\n        code: 'vba',\n        width: 12,\n      },\n      'p': {\n        code: 'vbf',\n        width: 14,\n      },\n      'm': {\n        code: 'v62',\n        width: 17,\n      },\n      's': {\n        code: 'v4a',\n        width: 10,\n      },\n      'z': {\n        code: 'v80',\n        width: 12,\n      },\n      'r': {\n        code: 'vb1',\n        width: 12,\n      },\n    };\n  }\n\n  // A `TextDynamics` object inherits from `Note` so that it can be formatted\n  // within a `Voice`.\n  // Create the dynamics marking. `text_struct` is an object\n  // that contains a `duration` property and a `sequence` of\n  // letters that represents the letters to render\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextDynamics');\n\n    this.sequence = text_struct.text.toLowerCase();\n    this.line = text_struct.line || 0;\n    this.glyphs = [];\n\n    Vex.Merge(this.render_options, {\n      glyph_font_size: 40,\n    });\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Preformat the dynamics text\n  preFormat() {\n    let total_width = 0;\n    // Iterate through each letter\n    this.sequence.split('').forEach(letter => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new Vex.RERR('Invalid dynamics character: ' + letter);\n\n      const size =  this.render_options.glyph_font_size;\n      const glyph = new Glyph(glyph_data.code, size);\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Draw the dynamics text on the rendering context\n  draw() {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.stave.getYForLine(this.line + (-3));\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.context, letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textdynamics.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\n// Helper function to draw a line with arrow heads\nfunction drawArrowLine(ctx, point1, point2, config) {\n  const both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n  const x1 = point1.x;\n  const y1 = point1.y;\n  const x2 = point2.x;\n  const y2 = point2.y;\n\n  // For ends with arrow we actually want to stop before we get to the arrow\n  // so that wide lines won't put a flat end on the arrow.\n  const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ratio = (distance - config.arrowhead_length / 3) / distance;\n  let end_x;\n  let end_y;\n  let start_x;\n  let start_y;\n  if (config.draw_end_arrow || both_arrows) {\n    end_x = Math.round(x1 + (x2 - x1) * ratio);\n    end_y = Math.round(y1 + (y2 - y1) * ratio);\n  } else {\n    end_x = x2;\n    end_y = y2;\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    start_x = x1 + (x2 - x1) * (1 - ratio);\n    start_y = y1 + (y2 - y1) * (1 - ratio);\n  } else {\n    start_x = x1;\n    start_y = y1;\n  }\n\n  if (config.color) {\n    ctx.setStrokeStyle(config.color);\n    ctx.setFillStyle(config.color);\n  }\n\n  // Draw the shaft of the arrow\n  ctx.beginPath();\n  ctx.moveTo(start_x, start_y);\n  ctx.lineTo(end_x, end_y);\n  ctx.stroke();\n  ctx.closePath();\n\n  // calculate the angle of the line\n  const line_angle = Math.atan2(y2 - y1, x2 - x1);\n  // h is the line length of a side of the arrow head\n  const h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n  let angle1;\n  let angle2;\n  let top_x;\n  let top_y;\n  let bottom_x;\n  let bottom_y;\n\n  if (config.draw_end_arrow || both_arrows) {\n    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n    top_x = x2 + Math.cos(angle1) * h;\n    top_y = y2 + Math.sin(angle1) * h;\n\n    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n    bottom_x = x2 + Math.cos(angle2) * h;\n    bottom_y = y2 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    angle1 = line_angle + config.arrowhead_angle;\n    top_x = x1 + Math.cos(angle1) * h;\n    top_y = y1 + Math.sin(angle1) * h;\n\n    angle2 = line_angle - config.arrowhead_angle;\n    bottom_x = x1 + Math.cos(angle2) * h;\n    bottom_y = y1 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n  }\n}\n\nexport class StaveLine extends Element {\n  // Text Positioning\n  static get TextVerticalPosition() {\n    return {\n      TOP: 1,\n      BOTTOM: 2,\n    };\n  }\n\n  static get TextJustification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'StaveLine');\n\n    this.notes = notes;\n\n    this.text = '';\n\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. Unsupported with Raphael (SVG)\n      line_dash: null,\n      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: null,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n\n    this.setNotes(notes);\n  }\n\n  // Set the font for the `StaveLine` text\n  setFont(font) { this.font = font; return this; }\n  // The the annotation for the `StaveLine`\n  setText(text) { this.text = text; return this; }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Notes needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Connected notes must have similar index sizes'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle() {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle() {\n    const ctx = this.checkContext();\n\n    if (this.font) {\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    }\n\n    if (this.render_options.color) {\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position;\n    let end_position;\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = first_note.getGlyph().getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      drawArrowLine(ctx, start_position, end_position, this.render_options);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = (end_position.x - start_position.x);\n      const center_x = (delta_x / 2) + start_position.x;\n      x = center_x - (text_width / 2);\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x  -  text_width;\n    }\n\n    // Determine the y value to start the text\n    let y;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.getStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.getStave().getYForBottomText(Flow.TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staveline.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements different types of pedal markings. These notation\n// elements indicate to the performer when to depress and release the a pedal.\n//\n// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n// custom text for the release/depress pedal markings.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\nfunction L(...args) { if (PedalMarking.DEBUG) Vex.L('Vex.Flow.PedalMarking', args); }\n\n// Draws a pedal glyph with the provided `name` on a rendering `context`\n// at the coordinates `x` and `y. Takes into account the glyph data\n// coordinate shifts.\nfunction drawPedalGlyph(name, context, x, y, point) {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point);\n  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n\nexport class PedalMarking extends Element {\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'pedal_depress': {\n        code: 'v36',\n        x_shift: -10,\n        y_shift: 0,\n      },\n      'pedal_release': {\n        code: 'v5d',\n        x_shift: -2,\n        y_shift: 3,\n      },\n    };\n  }\n\n  static get Styles() {\n    return {\n      TEXT: 1,\n      BRACKET: 2,\n      MIXED: 3,\n    };\n  }\n\n  static get StylesString() {\n    return {\n      text: PedalMarking.Styles.TEXT,\n      bracket: PedalMarking.Styles.BRACKET,\n      mixed: PedalMarking.Styles.MIXED,\n    };\n  }\n\n  // Create a sustain pedal marking. Returns the defaults PedalMarking.\n  // Which uses the traditional \"Ped\" and \"*\"\" markings.\n  static createSustain(notes) {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n\n  // Create a sostenuto pedal marking\n  static createSostenuto(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  // Create an una corda pedal marking\n  static createUnaCorda(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  // ## Prototype Methods\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'PedalMarking');\n\n    this.notes = notes;\n    this.style = PedalMarking.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.font = {\n      family: 'Times New Roman',\n      size: 12,\n      weight: 'italic bold',\n    };\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      glyph_point_size: 40,\n      color: 'black',\n    };\n  }\n\n  // Set custom text for the `depress`/`release` pedal markings. No text is\n  // set if the parameter is falsy.\n  setCustomText(depress, release) {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  // Set the pedal marking style\n  setStyle(style) {\n    if (style < 1 && style > 3)  {\n      throw new Vex.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n    }\n\n    this.style = style;\n    return this;\n  }\n\n  // Set the staff line to render the markings on\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the bracket based pedal markings\n  drawBracketed() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    let prev_x;\n    let prev_y;\n    const pedal = this;\n\n    // Iterate through each note\n    this.notes.forEach((note, index, notes) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.getStave().getYForBottomText(pedal.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new Vex.RERR(\n          'InvalidConfiguration', 'The notes provided must be in order of ascending x positions'\n        );\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift = 0;\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift =  prev_is_same ? 5 : 0;\n\n        if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (pedal.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(pedal.custom_depress_text).width;\n            ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n            x_shift = (text_width / 2) + pedal.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n            x_shift = 20 + pedal.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - pedal.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - pedal.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  // Draw the text based pedal markings. This defaults to the traditional\n  // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n  drawText() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    const pedal = this;\n\n    // The glyph point size\n    const point = pedal.render_options.glyph_point_size;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach(note => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.getStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(pedal.line + 3);\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (pedal.custom_depress_text) {\n          text_width = ctx.measureText(pedal.custom_depress_text).width;\n          ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (pedal.custom_release_text) {\n          text_width = ctx.measureText(pedal.custom_release_text).width;\n          ctx.fillText(pedal.custom_release_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  // Render the pedal marking in position on the rendering context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    L('Rendering Pedal Marking');\n\n    if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.style === PedalMarking.Styles.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pedalmarking.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Renderer } from './renderer';\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\nfunction L(...args) { if (TextBracket.DEBUG) Vex.L('Vex.Flow.TextBracket', args); }\n\nexport class TextBracket extends Element {\n  // FIXME: Modifier.Position is singular while this is plural, make consistent\n  static get Positions() {\n    return {\n      TOP: 1,\n      BOTTOM: -1,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      top: TextBracket.Positions.TOP,\n      bottom: TextBracket.Positions.BOTTOM,\n    };\n  }\n\n  constructor({\n    start,\n    stop,\n    text = '',\n    superscript = '',\n    position = TextBracket.Positions.TOP,\n  }) {\n    super();\n    this.setAttribute('type', 'TextBracket');\n\n    this.start = start;\n    this.stop = stop;\n\n    this.text = text;\n    this.superscript = superscript;\n\n    this.position = typeof position === 'string'\n      ? TextBracket.PositionString[position]\n      : position;\n\n    this.line = 1;\n\n    this.font = {\n      family: 'Serif',\n      size: 15,\n      weight: 'italic',\n    };\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  // Apply the text backet styling to the provided `context`\n  applyStyle(context) {\n    // Apply style for the octave bracket\n    context.setFont(this.font.family, this.font.size, this.font.weight);\n    context.setStrokeStyle(this.render_options.color);\n    context.setFillStyle(this.render_options.color);\n    context.setLineWidth(this.render_options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed, dash) {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the font for the text\n  setFont(font) {\n    // We use Object.assign to support partial updates to the font object\n    this.font = Object.assign({}, this.font, font);\n    return this;\n  }\n  // Set the rendering `context` for the octave bracket\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the octave bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracket.Positions.TOP:\n        y =  this.start.getStave().getYForTopText(this.line);\n        break;\n      case TextBracket.Positions.BOTTOM:\n        y =  this.start.getStave().getYForBottomText(this.line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = { x: this.start.getAbsoluteX(), y };\n    const stop = { x: this.stop.getAbsoluteX(), y };\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_width = ctx.measureText(this.text).width;\n    const main_height = ctx.measureText('M').width;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - (main_height / 2.5);\n\n    // Draw the superscript\n    ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const superscript_width = ctx.measureText(this.superscript).width;\n    const super_height = ctx.measureText('M').width;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyph().getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracket.Positions.TOP) {\n      start_x += main_width + superscript_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracket.Positions.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += superscript_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(\n        ctx,\n        start_x,\n        line_y,\n        end_x,\n        line_y,\n        this.render_options.dash\n      );\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + (1 * this.position),\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textbracket.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n// be added to a voice and rendered in the middle of a stave. Since it has no\n// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n//\n// See `tests/barnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Barline } from './stavebarline';\n\n// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\nfunction L(...args) { if (BarNote.DEBUG) Vex.L('Vex.Flow.BarNote', args); }\n\nexport class BarNote extends Note {\n  constructor(type = Barline.type.SINGLE) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'BarNote');\n\n    this.metrics = {\n      widths: {},\n    };\n\n    const TYPE = Barline.type;\n    this.metrics.widths = {\n      [TYPE.SINGLE]: 8,\n      [TYPE.DOUBLE]: 12,\n      [TYPE.END]: 15,\n      [TYPE.REPEAT_BEGIN]: 14,\n      [TYPE.REPEAT_END]: 14,\n      [TYPE.REPEAT_BOTH]: 18,\n      [TYPE.NONE]: 0,\n    };\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.setType(type);\n  }\n\n  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    /* overridden to ignore */\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Render note to stave.\n  draw() {\n    this.checkContext();\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.stave);\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/barnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n\nimport { Vex } from './vex';\nimport { StemmableNote } from './stemmablenote';\n\nexport class GhostNote extends StemmableNote {\n  /** @constructor */\n  constructor(parameter) {\n    // Sanity check\n    if (!parameter) {\n      throw new Vex.RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    let note_struct;\n\n    // Preserve backwards-compatibility\n    if (typeof (parameter) === 'string') {\n      note_struct = { duration: parameter };\n    } else if (typeof (parameter) === 'object') {\n      note_struct = parameter;\n    } else {\n      throw new Vex.RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    super(note_struct);\n    this.setAttribute('type', 'GhostNote');\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  isRest() { return true; }\n\n  setStave(stave) {\n    super.setStave(stave);\n  }\n\n  addToModifierContext() { /* intentionally overridden */ return this; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    // Draw the modifiers\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(this.context);\n      modifier.draw();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ghostnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a musical system, which is a collection of staves,\n// each which can have one or more voices. All voices across all staves in\n// the system are formatted together.\n\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\n\nfunction setDefaults(params, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class System extends Element {\n  constructor(params = {}) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  setOptions(options = {}) {\n    this.options = setDefaults(options, {\n      x: 10,\n      y: 10,\n      width: 500,\n      connector: null,\n      spaceBetweenStaves: 12, // stave spaces\n      factory: null,\n      debugFormatter: false,\n      formatIterations: 0,   // number of formatter tuning steps\n      options: {},\n    });\n\n    this.factory = this.options.factory || new Factory({ renderer: { el: null } });\n  }\n\n  setContext(context) {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  addConnector(type = 'double') {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    });\n    return this.connector;\n  }\n\n  addStave(params) {\n    params = setDefaults(params, {\n      stave: null,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      options: { left_bar: false },\n    });\n\n    if (!params.stave) {\n      params.stave = this.factory.Stave({\n        x: this.options.x,\n        y: this.options.y,\n        width: this.options.width,\n        options: params.options,\n      });\n    }\n\n    params.voices.forEach(voice =>\n      voice\n        .setContext(this.context)\n        .setStave(params.stave)\n        .getTickables()\n        .forEach(tickable => tickable.setStave(params.stave))\n    );\n\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  format() {\n    const formatter = new Formatter();\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices = [];\n    const debugNoteMetricsYs = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach(part => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      formatter.joinVoices(part.voices);\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach(part => part.stave.setNoteStartX(startX));\n    const justifyWidth = this.options.width - (startX - this.options.x) - Note.STAVEPADDING;\n    formatter.format(allVoices, justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune();\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  draw() {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach(d => {\n      d.voice.getTickables().forEach(note => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/system.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\n\nimport { Vex } from './vex';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { StringNumber } from './stringnumber';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { Renderer } from './renderer';\nimport { Stave } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveConnector } from './staveconnector';\nimport { System } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve } from './curve';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { EasyScore } from './easyscore';\nimport { TimeSigNote } from './timesignote';\nimport { ClefNote } from './clefnote';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { VibratoBracket } from './vibratobracket';\nimport { GhostNote } from './ghostnote';\nimport { BarNote } from './barnote';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextNote } from './textnote';\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\nfunction L(...args) { if (Factory.DEBUG) Vex.L('Vex.Flow.Factory', args); }\n\nexport const X = Vex.MakeException('FactoryError');\n\nfunction setDefaults(params = {}, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  constructor(options) {\n    L('New factory: ', options);\n    const defaults = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        context: null,\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: '',\n      },\n    };\n\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId, width = 500, height = 200) {\n    return new Factory({ renderer: { elementId, width, height } });\n  }\n\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions() { return this.options; }\n  setOptions(options) {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n    if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer() {\n    const { elementId, backend, width, height, background } = this.options.renderer;\n    if (elementId === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getStave() { return this.stave; }\n  getVoices() { return this.voices; }\n\n  // Returns pixels from current stave spacing.\n  space(spacing) { return this.options.stave.space * spacing; }\n\n  Stave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space,\n      },\n    });\n\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space * 1.3,\n      },\n    });\n\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct) {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct) {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params) {\n    params = setDefaults(params, {\n      type: 'single',\n      options: {},\n    });\n\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params) {\n    params = setDefaults(params, {\n      type: 'treble',\n      options: {\n        size: 'default',\n      },\n    });\n\n    const clefNote = new ClefNote(params.type, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  TabNote(noteStruct) {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params) {\n    params = setDefaults(params, {\n      type: null,\n      options: {},\n    });\n\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    });\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  Articulation(params) {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {},\n    });\n\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {},\n    });\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    });\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext() {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext() {\n    return new ModifierContext();\n  }\n\n  Voice(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n    const voice = new Voice(params.time);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params) {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {},\n    });\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter() {\n    return new Formatter();\n  }\n\n  Tuplet(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n        secondaryBeamBreaks: [],\n      },\n    });\n\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {},\n    });\n\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {\n        direction: undefined,\n      },\n    });\n\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    }, params.text);\n\n    if (params.options.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      options: {},\n    });\n\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options.text) line.setText(params.options.text);\n    if (params.options.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {\n        harsh: false,\n      },\n    });\n\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      text: '',\n      options: {\n        superscript: '',\n        position: 1,\n      },\n    });\n\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {}) {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        style: 'mixed',\n      },\n    });\n\n    const pedal = new PedalMarking(params.notes);\n    pedal.setStyle(PedalMarking.StylesString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  draw() {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a parser for a simple language to generate\n// VexFlow objects.\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Parser } from './parser';\nimport { Articulation } from './articulation';\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\nfunction L(...args) { if (EasyScore.DEBUG) Vex.L('Vex.Flow.EasyScore', args); }\n\nexport const X = Vex.MakeException('EasyScoreError');\n\nclass Grammar {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  begin() { return this.LINE; }\n\n  LINE() {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    };\n  }\n  PIECE() {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    };\n  }\n  PIECES() {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    };\n  }\n  PARAMS() {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    };\n  }\n  CHORDORNOTE() {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    };\n  }\n  CHORD() {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      run: (state) => this.builder.addChord(state.matches[1]),\n    };\n  }\n  NOTES() {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    };\n  }\n  NOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    };\n  }\n  SINGLENOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state) =>\n        this.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]),\n    };\n  }\n  ACCIDENTAL() {\n    return {\n      expect: [this.ACCIDENTALS],\n      maybe: true,\n    };\n  }\n  DOTS() {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      run: (state) => this.builder.setNoteDots(state.matches[0]),\n    };\n  }\n  TYPE() {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      run: (state) => this.builder.setNoteType(state.matches[2]),\n    };\n  }\n  DURATION() {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      run: (state) => this.builder.setNoteDuration(state.matches[1]),\n    };\n  }\n  OPTS() {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    };\n  }\n  KEYVALS() {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    };\n  }\n  KEYVAL() {\n    const unquote = (str) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n    };\n  }\n  VAL()  {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    };\n  }\n\n  KEY()         { return { token: '[a-zA-Z][a-zA-Z0-9]*' }; }\n  DVAL()        { return { token: '[\"][^\"]*[\"]' }; }\n  SVAL()        { return { token: \"['][^']*[']\" }; }\n  NOTENAME()    { return { token: '[a-gA-G]' }; }\n  OCTAVE()      { return { token: '[0-9]+' }; }\n  ACCIDENTALS() { return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' }; }\n  DURATIONS()   { return { token: '[0-9whq]+' }; }\n  TYPES()       { return { token: '[rRsSxX]' }; }\n  LPAREN()      { return { token: '[(]' }; }\n  RPAREN()      { return { token: '[)]' }; }\n  COMMA()       { return { token: '[,]' }; }\n  DOT()         { return { token: '[.]' }; }\n  SLASH()       { return { token: '[/]' }; }\n  MAYBESLASH()  { return { token: '[/]?' }; }\n  EQUALS()      { return { token: '[=]' }; }\n  LBRACKET()    { return { token: '\\\\[' }; }\n  RBRACKET()    { return { token: '\\\\]' }; }\n  EOL()         { return { token: '$' }; }\n}\n\nclass Builder {\n  constructor(factory) {\n    this.factory = factory;\n    this.commitHooks = [];\n    this.reset();\n  }\n\n  reset(options = {}) {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n    };\n    this.elements = {\n      notes: [],\n      accidentals: [],\n    };\n    this.rollingDuration = '8';\n    this.resetPiece();\n    Object.assign(this.options, options);\n  }\n\n  getFactory() { return this.factory; }\n\n  getElements() { return this.elements; }\n\n  addCommitHook(commitHook) {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece() {\n    L('resetPiece');\n    this.piece = {\n      chord: [],\n      duration: this.rollingDuration,\n      dots: 0,\n      type: undefined,\n      options: {},\n    };\n  }\n\n  setNoteDots(dots) {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration) {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type) {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key, value) {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key, accid, octave) {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({ key, accid, octave });\n  }\n\n  addSingleNote(key, accid, octave) {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  addChord(notes) {\n    L('startChord');\n    if (typeof(notes[0]) !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach(n => {\n        if (n) this.addNote(...n);\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece() {\n    L('commitPiece');\n    const { factory } = this;\n\n    if (!factory) return;\n\n    const options = Object.assign({}, this.options, this.piece.options);\n    const { stem, clef } = options;\n    const autoStem = stem.toLowerCase() === 'auto';\n    const stemDirection = !autoStem && stem.toLowerCase() === 'up'\n      ? StaveNote.STEM_UP\n      : StaveNote.STEM_DOWN;\n\n    // Build StaveNotes.\n    const { chord, duration, dots, type } = this.piece;\n    const keys = chord.map(note => note.key + '/' + note.octave);\n    const note = factory.StaveNote({\n      keys,\n      duration,\n      dots,\n      type,\n      clef,\n      auto_stem: autoStem,\n    });\n    if (!autoStem) note.setStemDirection(stemDirection);\n\n    // Attach accidentals.\n    const accids = chord.map(note => note.accid || null);\n    accids.forEach((accid, i) => {\n      if (accid) note.addAccidental(i, factory.Accidental({ type: accid }));\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) note.addDotToAll();\n\n    this.commitHooks.forEach(fn => fn(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.concat(accids);\n    this.resetPiece();\n  }\n}\n\nfunction setId({ id }, note) {\n  if (id === undefined) return;\n\n  note.setAttribute('id', id);\n}\n\n\nfunction setClass(options, note) {\n  if (!options.class) return;\n\n  const commaSeparatedRegex = /\\s*,\\s*/;\n\n  options.class\n    .split(commaSeparatedRegex)\n    .forEach(className => note.addClass(className));\n}\n\nexport class EasyScore {\n  constructor(options = {}) {\n    this.setOptions(options);\n    this.defaults = {\n      clef: 'treble',\n      time: '4/4',\n      stem: 'auto',\n    };\n  }\n\n  set(defaults) {\n    Object.assign(this.defaults, defaults);\n    return this;\n  }\n\n  setOptions(options) {\n    this.options = Object.assign({\n      factory: null,\n      builder: null,\n      commitHooks: [\n        setId,\n        setClass,\n        Articulation.easyScoreHook,\n      ],\n      throwOnError: false,\n    }, options);\n\n    this.factory = this.options.factory;\n    this.builder = this.options.builder || new Builder(this.factory);\n    this.grammar = new Grammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    this.options.commitHooks.forEach(commitHook => this.addCommitHook(commitHook));\n    return this;\n  }\n\n  setContext(context) {\n    if (this.factory) this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line, options = {}) {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      throw new X('Error parsing line: ' + line, result);\n    }\n    return result;\n  }\n\n  beam(notes, options = {}) {\n    this.factory.Beam({ notes, options });\n    return notes;\n  }\n\n  tuplet(notes, options = {}) {\n    this.factory.Tuplet({ notes, options });\n    return notes;\n  }\n\n  notes(line, options = {}) {\n    options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  voice(notes, voiceOptions) {\n    voiceOptions = Object.assign({ time: this.defaults.time }, voiceOptions);\n    return this.factory.Voice(voiceOptions).addTickables(notes);\n  }\n\n  addCommitHook(commitHook) {\n    return this.builder.addCommitHook(commitHook);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/easyscore.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\n\nimport { Vex } from './vex';\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\nfunction L(...args) { if (Parser.DEBUG) Vex.L('Vex.Flow.Parser', args); }\n\nexport const X = Vex.MakeException('ParserError');\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers.\nfunction flattenMatches(results) {\n  if (results.matchedString !== undefined) return results.matchedString;\n  if (results.results) return flattenMatches(results.results);\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches);\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n  // the EasyScore grammar in easyscore.js.\n  constructor(grammar) {\n    this.grammar = grammar;\n  }\n\n  // Parse `line` using current grammar. Returns {success: true} if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line) {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = -1;\n    const results = this.expect(this.grammar.begin());\n    results.errorPos = this.errorPos;\n    return results;\n  }\n\n  matchFail(returnPos) {\n    if (this.errorPos === -1) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess() {\n    this.errorPos = -1;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token, noSpace = false) {\n    const regexp = noSpace\n      ? new RegExp('^((' + token + '))')\n      : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      };\n    } else {\n      return {\n        success: false,\n        pos: this.pos,\n      };\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  expectOne(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = (maybe === true) || (rule.maybe === true);\n\n    // Execute all sub rules in sequence.\n    for (let i = 0; i < rule.expect.length; i++) {\n      const next = rule.expect[i];\n      const localPos = this.pos;\n      const result = this.expect(next);\n\n      // If `rule.or` is set, then return success if any one\n      // of the subrules match, else all subrules must match.\n      if (result.success) {\n        results.push(result);\n        oneMatch = true;\n        if (rule.or) break;\n      } else {\n        allMatches = false;\n        if (!rule.or) {\n          this.pos = localPos;\n          break;\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || (maybe === true);\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches: gotOne ? 1 : 0 };\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success) {\n        numMatches++;\n        results.push(result.results);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = (numMatches > 0) || (maybe === true);\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches };\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule) {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided the `rules` function. This\n  // ofloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(rules) {\n    L('Evaluating rules:', rules);\n    let result;\n    if (!rules) {\n      throw new X('Invalid Rule: ' + rules, rules);\n    }\n\n    // Get rule from Grammar class.\n    const rule = rules.bind(this.grammar)();\n\n    if (rule.token) {\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, (rule.noSpace === true));\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos;\n      }\n    } else if (rule.expect) {\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      throw new X('Bad grammar! No `token` or `expect` property', rule);\n    }\n\n    // If there's a trigger attached to this rule, then pull it.\n    result.matches = [];\n    if (result.results) result.results.forEach(r => result.matches.push(flattenMatches(r)));\n    if (rule.run && result.success) rule.run(result);\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/parser.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Renderer } from './renderer';\nimport { Formatter } from './formatter';\nimport { Music } from './music';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveNote } from './stavenote';\nimport { StaveModifier } from './stavemodifier';\nimport { Voice } from './voice';\nimport { Accidental } from './accidental';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabStave } from './tabstave';\nimport { TabNote } from './tabnote';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Barline } from './stavebarline';\nimport { NoteHead } from './notehead';\nimport { StaveConnector } from './staveconnector';\nimport { ClefNote } from './clefnote';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Stem } from './stem';\nimport { TabTie } from './tabtie';\nimport { Clef } from './clef';\nimport { Modifier } from './modifier';\nimport { TabSlide } from './tabslide';\nimport { Tuplet } from './tuplet';\nimport { GraceNote } from './gracenote';\nimport { GraceTabNote } from './gracetabnote';\nimport { Tuning } from './tuning';\nimport { KeyManager } from './keymanager';\nimport { StaveHairpin } from './stavehairpin';\nimport { BoundingBox } from './boundingbox';\nimport { Stroke } from './strokes';\nimport { TextNote } from './textnote';\nimport { Curve } from './curve';\nimport { TextDynamics } from './textdynamics';\nimport { StaveLine } from './staveline';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { FretHandFinger } from './frethandfinger';\nimport { Repetition } from './staverepetition';\nimport { BarNote } from './barnote';\nimport { GhostNote } from './ghostnote';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Tremolo } from './tremolo';\nimport { StringNumber } from './stringnumber';\nimport { Crescendo } from './crescendo';\nimport { Volta } from './stavevolta';\nimport { Font } from './fonts/vexflow_font';\nimport { System } from './system';\nimport { Factory } from './factory';\nimport { Parser } from './parser';\nimport { EasyScore } from './easyscore';\nimport { Registry } from './registry';\n\nVex.Flow = Flow;\nVex.Flow.Element = Element;\nVex.Flow.Fraction = Fraction;\nVex.Flow.Renderer = Renderer;\nVex.Flow.Formatter = Formatter;\nVex.Flow.Music = Music;\nVex.Flow.Glyph = Glyph;\nVex.Flow.Stave = Stave;\nVex.Flow.StaveNote = StaveNote;\nVex.Flow.StaveModifier = StaveModifier;\nVex.Flow.Voice = Voice;\nVex.Flow.Accidental = Accidental;\nVex.Flow.Beam = Beam;\nVex.Flow.StaveTie = StaveTie;\nVex.Flow.TabStave = TabStave;\nVex.Flow.TabNote = TabNote;\nVex.Flow.Bend = Bend;\nVex.Flow.Vibrato = Vibrato;\nVex.Flow.VibratoBracket = VibratoBracket;\nVex.Flow.Note = Note;\nVex.Flow.ModifierContext = ModifierContext;\nVex.Flow.TickContext = TickContext;\nVex.Flow.Articulation = Articulation;\nVex.Flow.Annotation = Annotation;\nVex.Flow.Barline = Barline;\nVex.Flow.NoteHead = NoteHead;\nVex.Flow.StaveConnector = StaveConnector;\nVex.Flow.ClefNote = ClefNote;\nVex.Flow.KeySignature = KeySignature;\nVex.Flow.TimeSignature = TimeSignature;\nVex.Flow.TimeSigNote = TimeSigNote;\nVex.Flow.Stem = Stem;\nVex.Flow.TabTie = TabTie;\nVex.Flow.Clef = Clef;\nVex.Flow.Modifier = Modifier;\nVex.Flow.TabSlide = TabSlide;\nVex.Flow.Tuplet = Tuplet;\nVex.Flow.GraceNote = GraceNote;\nVex.Flow.GraceTabNote = GraceTabNote;\nVex.Flow.Tuning = Tuning;\nVex.Flow.KeyManager = KeyManager;\nVex.Flow.StaveHairpin = StaveHairpin;\nVex.Flow.BoundingBox = BoundingBox;\nVex.Flow.Stroke = Stroke;\nVex.Flow.TextNote = TextNote;\nVex.Flow.Curve = Curve;\nVex.Flow.TextDynamics = TextDynamics;\nVex.Flow.StaveLine = StaveLine;\nVex.Flow.Ornament = Ornament;\nVex.Flow.PedalMarking = PedalMarking;\nVex.Flow.TextBracket = TextBracket;\nVex.Flow.FretHandFinger = FretHandFinger;\nVex.Flow.Repetition = Repetition;\nVex.Flow.BarNote = BarNote;\nVex.Flow.GhostNote = GhostNote;\nVex.Flow.NoteSubGroup = NoteSubGroup;\nVex.Flow.GraceNoteGroup = GraceNoteGroup;\nVex.Flow.Tremolo = Tremolo;\nVex.Flow.StringNumber = StringNumber;\nVex.Flow.Crescendo = Crescendo;\nVex.Flow.Volta = Volta;\nVex.Flow.Font = Font;\nVex.Flow.System = System;\nVex.Flow.Factory = Factory;\nVex.Flow.Parser = Parser;\nVex.Flow.EasyScore = EasyScore;\nVex.Flow.Registry = Registry;\n\nexport default Vex;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\n\nexport class BoundingBoxComputation {\n  constructor(x1, y1, x2, y2) { // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width() {\n    return this.x2 - this.x1;\n  }\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n  addPoint(x, y) {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x) {\n    this.addPoint(x, null);\n  }\n\n  addY(y) {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/boundingboxcomputation.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nexport class CanvasContext {\n  static get WIDTH() {\n    return 600;\n  }\n  static get HEIGHT() {\n    return 400;\n  }\n\n  constructor(context) {\n    // Use a name that is unlikely to clash with a canvas context\n    // property\n    this.vexFlowCanvasContext = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  clear() {\n    this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.vexFlowCanvasContext.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.vexFlowCanvasContext.fillStyle = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_fillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.vexFlowCanvasContext.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.vexFlowCanvasContext.shadowColor = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.vexFlowCanvasContext.shadowBlur = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.vexFlowCanvasContext.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(cap_type) {\n    this.vexFlowCanvasContext.lineCap = cap_type;\n    return this;\n  }\n\n  // setLineDash: is the one native method in a canvas context\n  // that begins with set, therefore we don't bolster the method\n  // if it already exists (see renderer.bolsterCanvasContext).\n  // If it doesn't exist, we bolster it and assume it's looking for\n  // a ctx.lineDash method, as previous versions of VexFlow\n  // expected.\n  setLineDash(dash) {\n    this.vexFlowCanvasContext.lineDash = dash;\n    return this;\n  }\n\n  scale(x, y) {\n    return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n  }\n\n  resize(width, height) {\n    return this.vexFlowCanvasContext.resize(parseInt(width, 10), parseInt(height, 10));\n  }\n\n  rect(x, y, width, height) {\n    return this.vexFlowCanvasContext.rect(x, y, width, height);\n  }\n\n  fillRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n  }\n\n  clearRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n  }\n\n  beginPath() {\n    return this.vexFlowCanvasContext.beginPath();\n  }\n\n  moveTo(x, y) {\n    return this.vexFlowCanvasContext.moveTo(x, y);\n  }\n\n  lineTo(x, y) {\n    return this.vexFlowCanvasContext.lineTo(x, y);\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    return this.vexFlowCanvasContext.glow();\n  }\n\n  fill() {\n    return this.vexFlowCanvasContext.fill();\n  }\n\n  stroke() {\n    return this.vexFlowCanvasContext.stroke();\n  }\n\n  closePath() {\n    return this.vexFlowCanvasContext.closePath();\n  }\n\n  measureText(text) {\n    return this.vexFlowCanvasContext.measureText(text);\n  }\n\n  fillText(text, x, y) {\n    return this.vexFlowCanvasContext.fillText(text, x, y);\n  }\n\n  save() {\n    return this.vexFlowCanvasContext.save();\n  }\n\n  restore() {\n    return this.vexFlowCanvasContext.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/canvascontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A rendering context for the Raphael backend.\n//\n// ## Warning: Deprecated for SVGContext\n// Except in instances where SVG support for IE < 9.0 is\n// needed, SVGContext is recommended.\n\nexport class RaphaelContext {\n  constructor(element) {\n    this.element = element;\n    this.paper = Raphael(element); // eslint-disable-line\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      font_family: 'Arial',\n      font_size: 8,\n      font_weight: 800,\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'font': '10pt Arial',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'font': '10pt Arial',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.state.font_family = family;\n    this.state.font_size = size;\n    this.state.font_weight = weight;\n    this.attributes.font = (this.state.font_weight || '') + ' ' +\n      (this.state.font_size * this.state.scale.x) + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.attributes.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // Empty because there is no equivalent in SVG\n  setLineDash() { return this; }\n  setLineCap() { return this; }\n\n  scale(x, y) {\n    this.state.scale = { x, y };\n    // The scale() method is deprecated as of Raphael.JS 2.0, and\n    // can no longer be used as an option in an Element.attr() call.\n    // It is preserved here for users running earlier versions of\n    // Raphael.JS, though it has no effect on the SVG output in\n    // Raphael 2 and higher.\n    this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.attributes.scale = x + ',' + y + ',0,0';\n    this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.background_attributes.font = this.state.font_size *\n      this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  clear() { this.paper.clear(); }\n\n  resize(width, height) {\n    this.element.style.width = width;\n    this.paper.setSize(width, height);\n    return this;\n  }\n\n  // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n  // is resized.\n  //\n  // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n  setViewBox(viewBox) {\n    this.paper.canvas.setAttribute('viewBox', viewBox);\n  }\n\n  rect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', this.lineWidth);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.background_attributes);\n    return this;\n  }\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ',' +\n      y1 + ',' +\n      x2 + ',' +\n      y2 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ',' +\n      y1 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ',' + y1 + ',A' +\n      radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' +\n      x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    const out = this.paper.set();\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      for (let i = 1; i <= num_paths; i++) {\n        out.push(this.paper.path(this.path).attr({\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n          // See note in this.scale(): In Raphael the scale() method\n          // is deprecated and removed as of Raphael 2.0 and replaced\n          // by the transform() method.  It is preserved here for\n          // users with earlier versions of Raphael, but has no effect\n          // on the output SVG in Raphael 2.0+.\n          transform: this.attributes.transform,\n          scale: this.attributes.scale,\n        }));\n      }\n    }\n    return out;\n  }\n\n  fill() {\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('stroke-width', 0);\n    this.glow(elem);\n    return this;\n  }\n\n  stroke() {\n    // The first line of code below is, unfortunately, a bit of a hack:\n    // Raphael's transform() scaling does not scale the stroke-width, so\n    // in order to scale a stroke, we have to manually scale the\n    // stroke-width.\n    //\n    // This works well so long as the X & Y states for this.scale() are\n    // relatively similar.  However, if they are very different, we\n    // would expect horizontal and vertical lines to have different\n    // stroke-widths.\n    //\n    // In the future, if we want to support very divergent values for\n    // horizontal and vertical scaling, we may want to consider\n    // implementing SVG scaling with properties of the SVG viewBox &\n    // viewPort and removing it entirely from the Element.attr() calls.\n    // This would more closely parallel the approach taken in\n    // canvascontext.js as well.\n\n    const strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', strokeWidth);\n    this.glow(elem);\n    return this;\n  }\n\n  closePath() {\n    this.path += 'Z';\n    return this;\n  }\n\n  measureText(text) {\n    const txt = this.paper.text(0, 0, text)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke', 'none');\n    const bounds = txt.getBBox();\n    txt.remove();\n\n    return {\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n\n  fillText(text, x, y) {\n    this.paper\n      .text(\n        x + (this.measureText(text).width / 2),\n        y - (this.state.font_size / (2.25 * this.state.scale.y)),\n        text\n      )\n      .attr(this.attributes);\n\n    return this;\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        font_family: this.state.font_family,\n      },\n      attributes: {\n        font: this.attributes.font,\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state.font_family = state.state.font_family;\n    this.attributes.font = state.attributes.font;\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/raphaelcontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Gregory Ristow (2015)\n\nimport { Vex } from './vex';\n\nconst attrNamesToIgnoreMap = {\n  path: {\n    x: true,\n    y: true,\n    width: true,\n    height: true,\n  },\n  rect: {\n  },\n  text: {\n    width: true,\n    height: true,\n  },\n};\n\n{\n  const fontAttrNamesToIgnore = {\n    'font-family': true,\n    'font-weight': true,\n    'font-style': true,\n    'font-size': true,\n  };\n\n  Vex.Merge(attrNamesToIgnoreMap.rect, fontAttrNamesToIgnore);\n  Vex.Merge(attrNamesToIgnoreMap.path, fontAttrNamesToIgnore);\n}\n\nexport class SVGContext {\n  constructor(element) {\n    // element is the parent DOM object\n    this.element = element;\n    // Create the SVG in the SVG namespace:\n    this.svgNS = 'http://www.w3.org/2000/svg';\n    const svg = this.create('svg');\n    // Add it to the canvas:\n    this.element.appendChild(svg);\n\n    // Point to it:\n    this.svg = svg;\n    this.groups = [this.svg]; // Create the group stack\n    this.parent = this.svg;\n\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      'font-family': 'Arial',\n      'font-size': '8pt',\n      'font-weight': 'normal',\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n\n    // Test for Internet Explorer\n    this.iePolyfill();\n  }\n\n  create(svgElementType) {\n    return document.createElementNS(this.svgNS, svgElementType);\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls, id, attrs) {\n    const group = this.create('g');\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', Vex.Prefix(cls));\n    if (id) group.setAttribute('id', Vex.Prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    return group;\n  }\n\n  closeGroup() {\n    this.groups.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem) {\n    this.parent.appendChild(elem);\n  }\n\n  // Tests if the browser is Internet Explorer; if it is,\n  // we do some tricks to improve text layout.  See the\n  // note at ieMeasureTextFix() for details.\n  iePolyfill() {\n    if (typeof (navigator) !== 'undefined') {\n      this.ie = (\n        /MSIE 9/i.test(navigator.userAgent) ||\n        /MSIE 10/i.test(navigator.userAgent) ||\n        /rv:11\\.0/i.test(navigator.userAgent) ||\n        /Trident/i.test(navigator.userAgent)\n      );\n    }\n  }\n\n  // ### Styling & State Methods:\n\n  setFont(family, size, weight) {\n    // Unlike canvas, in SVG italic is handled by font-style,\n    // not weight. So: we search the weight argument and\n    // apply bold and italic to weight and style respectively.\n    let bold = false;\n    let italic = false;\n    let style = 'normal';\n    // Weight might also be a number (200, 400, etc...) so we\n    // test its type to be sure we have access to String methods.\n    if (typeof weight === 'string') {\n      // look for \"italic\" in the weight:\n      if (weight.indexOf('italic') !== -1) {\n        weight = weight.replace(/italic/g, '');\n        italic = true;\n      }\n      // look for \"bold\" in weight\n      if (weight.indexOf('bold') !== -1) {\n        weight = weight.replace(/bold/g, '');\n        bold = true;\n      }\n      // remove any remaining spaces\n      weight = weight.replace(/ /g, '');\n    }\n    weight = bold ? 'bold' : weight;\n    weight = (typeof weight === 'undefined' || weight === '') ? 'normal' : weight;\n\n    style = italic ? 'italic' : style;\n\n    const fontAttributes = {\n      'font-family': family,\n      'font-size': size + 'pt',\n      'font-weight': weight,\n      'font-style': style,\n    };\n\n    // Store the font size so that if the browser is Internet\n    // Explorer we can fix its calculations of text width.\n    this.fontSize = Number(size);\n\n    Vex.Merge(this.attributes, fontAttributes);\n    Vex.Merge(this.state, fontAttributes);\n\n    return this;\n  }\n\n  setRawFont(font) {\n    font = font.trim();\n    // Assumes size first, splits on space -- which is presently\n    // how all existing modules are calling this.\n    const fontArray = font.split(' ');\n\n    this.attributes['font-family'] = fontArray[1];\n    this.state['font-family'] = fontArray[1];\n\n    this.attributes['font-size'] = fontArray[0];\n    this.state['font-size'] = fontArray[0];\n\n    // Saves fontSize for IE polyfill\n    this.fontSize = Number(fontArray[0].match(/\\d+/));\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n  setLineDash(lineDash) {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      lineDash = lineDash.join(', ');\n      this.attributes['stroke-dasharray'] = lineDash;\n      return this;\n    } else {\n      throw new Vex.RERR('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  setLineCap(lineCap) {\n    this.attributes['stroke-linecap'] = lineCap;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- seperate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.element.style.width = width;\n    const attributes = {\n      width,\n      height,\n    };\n    this.applyAttributes(this.svg, attributes);\n    return this;\n  }\n\n  scale(x, y) {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas or Raphael contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scale = { x, y };\n    const visibleWidth = this.width / x;\n    const visibleHeight = this.height / y;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  setViewBox(...args) {\n    // Override for \"x y w h\" style:\n    if (args.length === 1) {\n      const [viewBox] = args;\n      this.svg.setAttribute('viewBox', viewBox);\n    } else {\n      const [xMin, yMin, width, height] = args;\n      const viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n\n  applyAttributes(element, attributes) {\n    const attrNamesToIgnore = attrNamesToIgnoreMap[element.nodeName];\n    Object\n      .keys(attributes)\n      .forEach(propertyName => {\n        if (attrNamesToIgnore && attrNamesToIgnore[propertyName]) {\n          return;\n        }\n        element.setAttributeNS(null, propertyName, attributes[propertyName]);\n      });\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear() {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed:\n    this.scale(this.state.scale.x, this.state.scale.y);\n  }\n\n  // ## Rectangles:\n\n  rect(x, y, width, height, attributes) {\n    // Avoid invalid negative height attribs by\n    // flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    // Create the rect & style it:\n    const rectangle = this.create('rect');\n    if (typeof attributes === 'undefined') {\n      attributes = {\n        fill: 'none',\n        'stroke-width': this.lineWidth,\n        stroke: 'black',\n      };\n    }\n\n    Vex.Merge(attributes, {\n      x,\n      y,\n      width,\n      height,\n    });\n\n    this.applyAttributes(rectangle, attributes);\n\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    this.rect(x, y, width, height, this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    // TODO(GCR): Improve implementation of this...\n    // Currently it draws a box of the background color, rather\n    // than creating alpha through lower z-levels.\n    //\n    // See the implementation of this in SVGKit:\n    // http://sourceforge.net/projects/svgkit/\n    // as a starting point.\n    //\n    // Adding a large number of transform paths (as we would\n    // have to do) could be a real performance hit.  Since\n    // tabNote seems to be the only module that makes use of this\n    // it may be worth creating a seperate tabStave that would\n    // draw lines around locations of tablature fingering.\n    //\n\n    this.rect(x, y, width, height, this.background_attributes);\n    return this;\n  }\n\n  // ## Paths:\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ' ' +\n      y1 + ',' +\n      x2 + ' ' +\n      y2 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ' ' +\n      y1 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ' ' + y1 + ' A' +\n      radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' +\n      x2 + ' ' + y2 + 'M' + this.pen.x + ' ' + this.pen.y;\n  }\n\n  closePath() {\n    this.path += 'Z';\n\n    return this;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    // Calculate the width & paths of the glow:\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      // Stroke at varying widths to create effect of gaussian blur:\n      for (let i = 1; i <= num_paths; i++) {\n        const attributes = {\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +((sa.width * 0.4) / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n        };\n\n        const path = this.create('path');\n        attributes.d = this.path;\n        this.applyAttributes(path, attributes);\n        this.add(path);\n      }\n    }\n    return this;\n  }\n\n  fill(attributes) {\n    // If our current path is set to glow, make it glow\n    this.glow();\n\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = {};\n      Vex.Merge(attributes, this.attributes);\n      attributes.stroke = 'none';\n    }\n\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke() {\n    // If our current path is set to glow, make it glow.\n    this.glow();\n\n    const path = this.create('path');\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.fill = 'none';\n    attributes['stroke-width'] = this.lineWidth;\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text) {\n    const txt = this.create('text');\n    if (typeof (txt.getBBox) !== 'function') {\n      return { x: 0, y: 0, width: 0, height: 0 };\n    }\n\n    txt.textContent = text;\n    this.applyAttributes(txt, this.attributes);\n\n    // Temporarily add it to the document for measurement.\n    this.svg.appendChild(txt);\n\n    let bbox = txt.getBBox();\n    if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n      bbox = this.ieMeasureTextFix(bbox, text);\n    }\n\n    this.svg.removeChild(txt);\n    return bbox;\n  }\n\n  ieMeasureTextFix(bbox) {\n    // Internet Explorer over-pads text in italics,\n    // resulting in giant width estimates for measureText.\n    // To fix this, we use this formula, tested against\n    // ie 11:\n    // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n    // And then subtract the overestimate from calculated width.\n\n    const fontSize = Number(this.fontSize);\n    const m = 1.196;\n    const b = 1.9598;\n    const widthCorrection = (m * fontSize) + b;\n    const width = bbox.width - widthCorrection;\n    const height = bbox.height - 1.5;\n\n    // Get non-protected copy:\n    const box = {\n      x: bbox.x,\n      y: bbox.y,\n      width,\n      height,\n    };\n\n    return box;\n  }\n\n  fillText(text, x, y) {\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.stroke = 'none';\n    attributes.x = x;\n    attributes.y = y;\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n      },\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n      lineWidth: this.lineWidth,\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state['font-family'] = state.state['font-family'];\n    this.state['font-weight'] = state.state['font-weight'];\n    this.state['font-style'] = state.state['font-style'];\n    this.state['font-size'] = state.state['font-size'];\n\n    this.attributes['font-family'] = state.attributes['font-family'];\n    this.attributes['font-weight'] = state.attributes['font-weight'];\n    this.attributes['font-style'] = state.attributes['font-style'];\n    this.attributes['font-size'] = state.attributes['font-size'];\n\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n\n    this.lineWidth = state.lineWidth;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/svgcontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class StaveSection extends StaveModifier {\n  static get CATEGORY() { return 'stavesection'; }\n\n  constructor(section, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveSection');\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'sans-serif',\n      size: 12,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return StaveSection.CATEGORY; }\n  setStaveSection(section) { this.section = section; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.section).width;\n    let width = text_width + 6;  // add left & right padding\n    if (width < 18) width = 18;\n    const height = 20;\n    //  Seems to be a good default y\n    const y = stave.getYForTopText(3) + this.shift_y;\n    let x = this.x + shift_x;\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n    x += (width - text_width) / 2;\n    ctx.fillText('' + this.section, x, y + 16);\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavesection.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY() { return 'stavetempo'; }\n\n  constructor(tempo, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = Modifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    };\n    this.render_options = {\n      glyph_font_scale: 30,  // font size for note\n    };\n  }\n  getCategory() { return StaveTempo.CATEGORY; }\n  setTempo(tempo) { this.tempo = tempo; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.durationToGlyph(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem);\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetempo.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { TextNote } from './textnote';\n\nexport class StaveText extends StaveModifier {\n  static get CATEGORY() { return 'stavetext'; }\n\n  constructor(text, position, options) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    Vex.Merge(this.options, options);\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n  }\n\n  getCategory() { return StaveText.CATEGORY; }\n  setStaveText(text) { this.text = text; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setText(text) {\n    this.text = text;\n  }\n\n  draw(stave) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { TabTie } from './tabtie';\n\nexport class TabSlide extends TabTie {\n  static get SLIDE_UP() {\n    return 1;\n  }\n  static get SLIDE_DOWN() {\n    return -1;\n  }\n\n  static createSlideUp(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  constructor(notes, direction) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, 'sl.');\n    this.setAttribute('type', 'TabSlide');\n\n    if (!direction) {\n      const first_fret = notes.first_note.getPositions()[0].fret;\n      const last_fret = notes.last_note.getPositions()[0].fret;\n\n      direction = ((parseInt(first_fret, 10) > parseInt(last_fret, 10)) ?\n        TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP);\n    }\n\n    this.slide_direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n    this.setNotes(notes);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = this.slide_direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new Vex.RERR('BadSlide', 'Invalid slide direction');\n    }\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const slide_y = first_ys[this.first_indices[i]] +\n        this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + (3 * direction));\n      ctx.lineTo(last_x_px, slide_y - (3 * direction));\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabslide.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { TabNote } from './tabnote';\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY() { return 'gracetabnotes'; }\n\n  constructor(note_struct) {\n    super(note_struct, false);\n    this.setAttribute('type', 'GraceTabNote');\n\n    Vex.Merge(this.render_options, {\n      // vertical shift from stave line\n      y_shift: 0.3,\n      // grace glyph scale\n      scale: 0.6,\n      // grace tablature font\n      font: '7.5pt Arial',\n    });\n\n    this.updateWidth();\n  }\n\n  getCategory() { return GraceTabNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracetabnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of tunings for tablature.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\n\nexport class Tuning {\n  static get names() {\n    return {\n      'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n      'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n      'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n      'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      'standardBanjo': 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  noteToInteger(noteString) {\n    return Flow.keyProperties(noteString).int_value;\n  }\n\n  setTuning(noteString) {\n    if (Tuning.names[noteString]) {\n      noteString = Tuning.names[noteString];\n    }\n\n    this.tuningString = noteString;\n    this.tuningValues = [];\n    this.numStrings = 0;\n\n    const keys = noteString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n    }\n\n    this.numStrings = keys.length;\n    for (let i = 0; i < this.numStrings; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  getValueForString(stringNum) {\n    const s = parseInt(stringNum, 10);\n    if (s < 1 || s > this.numStrings) {\n      throw new Vex.RERR(\n        'BadArguments', `String number must be between 1 and ${this.numStrings}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  getValueForFret(fretNum, stringNum) {\n    const stringValue = this.getValueForString(stringNum);\n    const f = parseInt(fretNum, 10);\n\n    if (f < 0) {\n      throw new Vex.RERR('BadArguments', 'Fret number must be 0 or higher: ' +\n          fretNum);\n    }\n\n    return stringValue + f;\n  }\n\n  getNoteForFret(fretNum, stringNum) {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return Flow.integerToNote(value) + '/' + octave;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tuning.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\n\nimport { Vex } from './vex';\nimport { Music } from './music';\n\nexport class KeyManager {\n  constructor(key) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key) {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey() { return this.key; }\n\n  reset() {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new Vex.RERR('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key) {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    };\n  }\n\n  selectNote(note) {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        'note': scaleNote,\n        'accidental': parts.accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        'note': valueNote,\n        'accidental': this.music.getNoteParts(valueNote).accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[\n      this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        'note': originalValueNote,\n        'accidental': this.music.getNoteParts(originalValueNote).accidental,\n        'change': true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] =  modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        'note': modparts.root,\n        'accidental': null,\n        'change': true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      'accidental': parts.accidental,\n      'change': true,\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/keymanager.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Modifier } from './modifier';\n\nexport class StaveHairpin extends Element {\n  static get type() {\n    return {\n      CRESC: 1,\n      DECRESC: 2,\n    };\n  }\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'A valid Formatter must be provide to draw offsets by ticks.'\n      );\n    }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px };\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note,\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes, type) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n    };\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position) {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options) {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'Hairpin needs to have either first_note or last_note set.'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params) {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.getStave().y + firstNote.getStave().height,\n      last_y: lastNote.getStave().y + lastNote.getStave().height,\n      staff_height: firstNote.getStave().height,\n    });\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavehairpin.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n//\n// This class implements tremolo notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\nexport class Tremolo extends Modifier {\n  static get CATEGORY() { return 'tremolo'; }\n  constructor(num) {\n    super();\n    this.setAttribute('type', 'Tremolo');\n\n    this.num = num;\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'v74';\n    this.shift_right = -2;\n    this.y_spacing = 4;\n\n    this.render_options = {\n      font_scale: 35,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'Arial',\n      size: 16,\n      weight: '',\n    };\n  }\n\n  getCategory() { return Tremolo.CATEGORY; }\n\n  draw() {\n    this.checkContext();\n\n    if (!(this.note && this.index != null)) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    let y = start.y;\n\n    x += this.shift_right;\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code);\n      y += this.y_spacing;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tremolo.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(...args) { if (Crescendo.DEBUG) Vex.L('Vex.Flow.Crescendo', args); }\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height =  params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x,  y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x,  y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x,  y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  // Initialize the crescendo's properties\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n\n    Vex.Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0,\n    });\n  }\n\n  // Set the line to center the element on\n  setLine(line) { this.line = line; return this; }\n\n  // Set the full height at the open end\n  setHeight(height) { this.height = height; return this; }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc) {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat() { this.preFormatted = true; return this; }\n\n  // Render the Crescendo object onto the canvas\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x  = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n    L(\n      'Drawing ',\n      this.decrescendo ? 'decrescendo ' : 'crescendo ',\n      this.height,\n      'x',\n      begin_x - end_x\n    );\n\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/crescendo.js"],"sourceRoot":""}