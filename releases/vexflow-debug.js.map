{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0f70f85ae34a1abf347e","webpack:///./src/index.js","webpack:///./src/vex.js","webpack:///./src/tables.js","webpack:///./src/fraction.js","webpack:///./src/glyph.js","webpack:///./src/element.js","webpack:///./src/registry.js","webpack:///./src/boundingboxcomputation.js","webpack:///./src/boundingbox.js","webpack:///./src/fonts/vexflow_font.js","webpack:///./src/renderer.js","webpack:///./src/canvascontext.js","webpack:///./src/raphaelcontext.js","webpack:///./src/svgcontext.js","webpack:///./src/formatter.js","webpack:///./src/beam.js","webpack:///./src/tuplet.js","webpack:///./src/stem.js","webpack:///./src/voice.js","webpack:///./src/staveconnector.js","webpack:///./src/stavenote.js","webpack:///./src/notehead.js","webpack:///./src/note.js","webpack:///./src/tickable.js","webpack:///./src/stemmablenote.js","webpack:///./src/modifier.js","webpack:///./src/dot.js","webpack:///./src/modifiercontext.js","webpack:///./src/frethandfinger.js","webpack:///./src/accidental.js","webpack:///./src/music.js","webpack:///./src/notesubgroup.js","webpack:///./src/gracenotegroup.js","webpack:///./src/stavetie.js","webpack:///./src/tabtie.js","webpack:///./src/strokes.js","webpack:///./src/stringnumber.js","webpack:///./src/articulation.js","webpack:///./src/ornament.js","webpack:///./src/tickcontext.js","webpack:///./src/annotation.js","webpack:///./src/bend.js","webpack:///./src/vibrato.js","webpack:///./src/stave.js","webpack:///./src/stavebarline.js","webpack:///./src/stavemodifier.js","webpack:///./src/staverepetition.js","webpack:///./src/stavesection.js","webpack:///./src/stavetempo.js","webpack:///./src/stavetext.js","webpack:///./src/textnote.js","webpack:///./src/clef.js","webpack:///./src/keysignature.js","webpack:///./src/timesignature.js","webpack:///./src/stavevolta.js","webpack:///./src/tabstave.js","webpack:///./src/tabnote.js","webpack:///./src/vibratobracket.js","webpack:///./src/clefnote.js","webpack:///./src/timesignote.js","webpack:///./src/tabslide.js","webpack:///./src/gracenote.js","webpack:///./src/gracetabnote.js","webpack:///./src/tuning.js","webpack:///./src/keymanager.js","webpack:///./src/stavehairpin.js","webpack:///./src/curve.js","webpack:///./src/textdynamics.js","webpack:///./src/staveline.js","webpack:///./src/pedalmarking.js","webpack:///./src/textbracket.js","webpack:///./src/barnote.js","webpack:///./src/ghostnote.js","webpack:///./src/tremolo.js","webpack:///./src/crescendo.js","webpack:///./src/system.js","webpack:///./src/factory.js","webpack:///./src/easyscore.js","webpack:///./src/parser.js"],"names":["Flow","Element","Fraction","Renderer","Formatter","Music","Glyph","Stave","StaveNote","StaveModifier","Voice","Accidental","Beam","StaveTie","TabStave","TabNote","Bend","Vibrato","VibratoBracket","Note","ModifierContext","TickContext","Articulation","Annotation","Barline","NoteHead","StaveConnector","ClefNote","KeySignature","TimeSignature","TimeSigNote","Stem","TabTie","Clef","Modifier","TabSlide","Tuplet","GraceNote","GraceTabNote","Tuning","KeyManager","StaveHairpin","BoundingBox","Stroke","TextNote","Curve","TextDynamics","StaveLine","Ornament","PedalMarking","TextBracket","FretHandFinger","Repetition","BarNote","GhostNote","NoteSubGroup","GraceNoteGroup","Tremolo","StringNumber","Crescendo","Volta","Font","System","Factory","Parser","EasyScore","Registry","StaveTempo","Vex","L","block","args","line","Array","prototype","slice","call","join","window","console","log","MakeException","name","exception","message","data","Error","RuntimeError","code","RERR","Merge","destination","source","property","Min","Math","min","Max","max","forEach","a","fn","i","length","RoundN","x","n","parseInt","MidLine","b","mid_line","SortAndUnique","arr","cmp","eq","newArr","last","sort","push","Contains","obj","getCanvasContext","canvas_sel","canvas","document","getElementById","getContext","drawDot","ctx","y","color","save","setFillStyle","beginPath","arc","PI","closePath","fill","restore","BM","s","f","start_time","Date","getTime","elapsed","StackTrace","err","stack","W","Prefix","prefix","text","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RESOLUTION","DEFAULT_NOTATION_FONT_SCALE","DEFAULT_TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","TEXT_HEIGHT_OFFSET_HACK","IsKerned","clefProperties","clef","props","values","line_shift","keyProperties","key","params","undefined","options","octave_shift","pieces","split","k","toUpperCase","value","note_values","octave","base_index","index","stroke","int_value","int_val","shift_right","glyph_name","note_glyph","accidental","displaced","rest","integerToNote","integer","noteValue","table","tabToGlyph","fret","scale","glyph","width","shift_y","toString","glyphMetrics","getMetrics","height","textWidth","getWidth","articulationCodes","articulations","artic","between_lines","accidentalCodes","accidentals","acc","parenRightPaddingAdjustment","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","ornamentCodes","ornaments","keySignature","keySpec","keySpecs","spec","notes","accidentalList","acc_list","num","type","unicode","String","fromCharCode","patterns","parseNoteDurationString","durationString","regexp","result","exec","duration","dots","parseNoteData","noteData","durationStringData","ticks","durationToTicks","currentTicks","sanitizeDuration","alias","durationAliases","durations","durationToFraction","parse","durationToNumber","durationToGlyph","duration_codes","glyphTypeProperties","common","code_head","stem","stem_offset","flag","stem_up_extension","stem_down_extension","gracenote_stem_up_extension","gracenote_stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","beam_count","code_flag_upstem","code_flag_downstem","TIME4_4","num_beats","beat_value","resolution","t","GCD","LCM","arg0","shift","LCMM","numerator","denominator","set","u","d","gcd","param1","param2","otherNumerator","otherDenominator","lcm","compare","__compareA","copy","simplify","__compareB","subtract","greaterThanEquals","greaterThan","floor","abs","__tmp","q","quotient","fraction","toSimplifiedString","str","processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","command","nextX","nextY","font","cache","glyphs","x_min","x_max","ha","o","cached_outline","x_pos","y_pos","point","val","nocache","metrics","loadMetrics","renderOutline","moveTo","m","bind","l","lineTo","quadraticCurveTo","bezierCurveTo","bboxComp","addPoint","addQuadraticCurve","addBezierCurve","x1","y1","setAttribute","x_shift","y_shift","originShift","setOptions","reset","stave","bbox","getOutlineBoundingBox","getW","getH","getX","xShift","getY","yShift","setOriginX","setOriginY","setRendered","checkContext","context","getYForGlyphs","ID","attrs","id","newID","el","classes","boundingBox","rendered","getDefaultRegistry","register","className","registry","onUpdate","getAttribute","oldValue","X","setIndexValue","elem","clear","class","INDEXES","updateIndex","onRegister","attrName","Object","keys","map","getElementsByAttribute","includes","array","filter","concat","defaultRegistry","BoundingBoxComputation","x2","y2","Number","NaN","isNaN","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","p3x","p3y","p0","p1","p2","p3","pow","c","addX","addY","b2ac","t1","sqrt","t2","that","w","h","new_x","new_y","new_w","new_h","draw","rect","lastContext","elementId","backend","background","renderer","resize","setBackgroundFillStyle","buildContext","Backends","CANVAS","RAPHAEL","SVG","USE_CANVAS_PROXY","methodNames","vexFlowCanvasContext","methodName","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","cos","ny","sin","VML","NONE","UP","DOWN","element","paper","bolsterCanvasContext","devicePixelRatio","style","CanvasContext","WIDTH","HEIGHT","clearRect","family","size","weight","fillStyle","background_fillStyle","strokeStyle","shadowColor","blur","shadowBlur","lineWidth","cap_type","lineCap","dash","lineDash","parseFloat","fillRect","radius","startAngle","endAngle","antiClockwise","glow","measureText","fillText","RaphaelContext","Raphael","path","pen","state","font_family","font_size","font_weight","attributes","background_attributes","shadow_attributes","state_stack","transform","setSize","viewBox","attr","normalizeAngle","tmp","delta","arcHelper","largeArcFlag","sweepFlag","out","sa","num_paths","toFixed","opacity","strokeWidth","txt","bounds","getBBox","remove","pop","SVGContext","svgNS","svg","create","appendChild","groups","parent","iePolyfill","svgElementType","createElementNS","cls","group","pointerBBox","navigator","ie","test","userAgent","bold","italic","indexOf","replace","fontAttributes","fontSize","trim","fontArray","match","applyAttributes","visibleWidth","visibleHeight","setViewBox","xMin","yMin","viewBoxString","setAttributeNS","propertyName","lastChild","removeChild","rectangle","add","textContent","ieMeasureTextFix","widthCorrection","box","DEBUG","lookAhead","restLine","nextRestLine","note","isRest","shouldIgnoreTicks","getLineForRest","top","bot","createContexts","voices","ContextType","addToContext","totalTicks","getTotalTicks","resolutionMultiplier","reduce","voice","equals","getMode","Mode","STRICT","isComplete","getResolutionMultiplier","tickToContextMap","tickList","contexts","ticksUsed","getTickables","integerTicks","newContext","tickable","getTicks","list","paddingBetween","addToModifierContext","tick","addTickable","preFormat","extra","getExtraPx","setX","left","right","formatter","xPos","STAVEPADDING","contextGaps","setStrokeStyle","setLineWidth","setFont","gaps","gap","round","total","lossHistory","loss","auto_beam","align_rests","setMode","SOFT","addTickables","beams","applyAndGetBeams","joinVoices","formatToStave","setStave","beam","setContext","getBoundingBox","tabstave","tabnotes","autobeam","opts","notevoice","tabvoice","alignAllNotes","alignTuplets","tuplet","getGlyph","getKeyProps","setKeyLine","minTotalWidth","hasMinTotalWidth","tickContexts","modiferContexts","AlignRestsToNotes","createTickContexts","contextList","contextMap","tContexts","getTicksUsed","clone","justifyWidth","renderingContext","centerX","extraLeftPx","remainingX","leftoverPxPerTick","spaceAccum","prevTick","tickSpace","getCenterAlignedTickables","center_x_shift","evaluate","prevContext","prevMetrics","insideRightEdge","insideLeftEdge","getFormatterMetrics","freedom","durationStats","updateStats","space","stats","mean","count","formatterMetrics","leftNoteEdge","noteWidth","modRightPx","extraRightPx","rightNote","rightMetrics","rightNoteEdge","modLeftPx","used","totalDeviation","iterations","deviation","totalCost","sum","means","move","current","prev","next","nextContext","cost","minShift","postFormatContexts","postFormat","createModifierContexts","alignRests","getNoteEndX","getNoteStartX","format","calculateStemDirection","lineSum","keyProps","keyProp","getStemSlope","firstNote","lastNote","firstStemTipY","getStemExtents","topY","firstStemX","getStemX","lastStemTipY","lastStemX","time_sig","defaults","beatTotal","beatValue","tripleMeter","stem_direction","generateBeams","config","tickGroups","multiply","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","vf_notes","memo","nextTickGroup","createGroups","nextGroup","unprocessedNote","ticksPerGroup","unbeamable","getBeamGroups","beamable","getIntrinsicTicks","sanitizeGroups","sanitizedGroups","tempGroup","isFirstOrLast","prevNote","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","getStemDirection","currentDirection","isUnbeamableDuration","shouldBreak","formatStems","stemDirection","findFirstNote","applyStemDirection","direction","setStemDirection","getTuplets","uniqueTuplets","beamedNoteGroups","allTuplets","show_stemlets","render_options","secondary_breaks","secondary_break_ticks","flat_beams","flat_beam_offset","LOCATION_BOTTOM","LOCATION_TOP","setTupletLocation","bracketed","setBracketed","auto_stem","hasStem","getCategory","stem_weight","setBeam","postFormatted","getBeamCount","break_on_indices","beam_width","max_slope","min_slope","slope_iterations","slope_cost","stemlet_extension","partial_beam_length","min_flat_beam_offset","beamCounts","maxBeamCount","beamCount","indices","first_x_px","first_y_px","slope","initialSlope","increment","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","getSlopeY","stemTipY","diff","idealSlope","distanceFromIdeal","extremeY","extremeBeamCount","currentExtreme","getYs","offset","beamWidth","extremeTest","newOffset","stemX","beamedStemTipY","preBeamExtension","getStem","getExtension","beamExtension","setExtension","renderHeightAdjustment","totalBeamWidth","setVisibility","setStemlet","beam_lines","beam_started","current_beam","previous_should_break","tick_tally","should_break","note_gets_beam","stem_x","next_note","beam_next","end","start","last_beam","valid_beam_durations","beamY","beamThickness","beamLines","getBeamLines","j","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","calculateFlatSlope","calculateSlope","applyStemExtensions","drawStems","drawBeamLines","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","some","ratioed","location","resolveGlyphs","attach","setTuplet","resetTuplet","msg","warn","getNotesOccupied","beats","setNotesOccupied","detach","num_glyphs","denom_glyphs","first_note","maxTupletCount","countTuplets","minTupletCount","tupletStack","tupletCount","nested_tuplet_y_offset","getNestedTupletCount","NESTING_OFFSET","y_offset","getStave","getYForLine","top_y","baseY","bottom_y","last_note","getTieLeftX","getTieRightX","getYPosition","addGlyphWidth","notation_center_x","notation_start_x","line_width","x_offset","render","colon_x","colon_radius","x_begin","x_end","y_top","y_bottom","stem_extension","hide","isStemlet","stemletHeight","ext","CATEGORY","isStemUp","ys","stemHeight","innerMostNoteheadY","outerMostNoteheadY","isVisible","getStyle","setShadowColor","setShadowBlur","stem_y","getHeight","stemletYOffset","applyStyle","FULL","time","tickables","smallestTickCount","largestTickWidth","mode","voiceGroup","bb","mergeWith","g","strict","lessThan","setVoice","preFormatted","tickable_bb","drawBoldDoubleLine","topX","botY","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","thickLineOffset","SINGLE_RIGHT","SINGLE_LEFT","SINGLE","DOUBLE","BRACE","BRACKET","THIN_DOUBLE","singleRight","singleLeft","single","double","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","none","top_stave","bottom_stave","thickness","texts","typeString","content","shift_x","getNumLines","isRightSidedConnector","attachment_height","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","renderGlyph","text_width","getBottomLineY","getStemAdjustment","isInnerNoteIndex","shiftRestVertical","dir","isrest","maxLine","minLine","getKeyLine","centerRest","noteU","noteL","formatByY","notesList","minL","stemMax","getStemLength","stemMin","getStemMinumumLength","maxL","voice_shift","getVoiceShiftWidth","is_displaced","isDisplaced","noteM","voiceXShift","stemDelta","lineSpacing","setStemLength","setXShift","restHeight","hasStave","topNote","bottomNote","topKeys","bottomKeys","HALF_NOTEHEAD_HEIGHT","topNotBottomY","bottomNoteTopY","areNotesColliding","right_shift","noteStruct","noteType","JSON","stringify","use_default_head_x","note_heads","modifiers","glyph_font_scale","stroke_px","DEFAULT_LEDGER_LINE_OFFSET","calculateKeyProps","buildStem","autoStem","buildFlag","buildNoteHeads","head","calcExtraPx","yExtend","setStem","getKeys","lastLine","lineDiff","step","noteProps","notehead","note_type","custom_glyph_code","MIDDLE_LINE","decider","Infinity","getAbsoluteX","minY","maxY","halfLineSpacing","getSpacingBetweenLines","frac","yy","isTopNote","resultLine","thisLine","getCenterGlyphX","textLine","extents","getYForTopText","annotation_spacing","setYs","getNoteHeadBounds","setYBounds","tieStartX","getGlyphWidth","modifierContext","getExtraRightPx","tieEndX","Position","ABOVE","BELOW","LEFT","RIGHT","hasFlag","setStyle","mContext","setModifierContext","addModifier","setPreFormatted","modifier","setNote","setIndex","articulation","annotation","dot","setDotShiftY","addDot","getModifiers","setExtraLeftPx","setExtraRightPx","setWidth","yTop","yBottom","highestLine","lowestLine","getLine","highest_line","lowest_line","xBegin","getNoteHeadBeginX","headX","drawLedgerLine","getYForNote","openGroup","getIndex","noteheadStyle","closeGroup","shouldRenderFlag","noteStemHeight","flagX","flagY","stemStruct","shouldRenderStem","setNoteHeadXBounds","isChord","drawLedgerLines","drawStem","drawNoteHeads","drawFlag","drawModifiers","drawSlashNoteHead","staveSpace","breve_lines","head_options","STEM_UP","glyph_code","custom_glyph","slashed","displacementStemAdjustment","spacing","half_spacing","min_y","setY","head_x","line_y","yPos","xStart","xPre1","xAbs","xPost1","xPost2","xEnd","xFreedomRight","xWidth","getXShift","spaceDeviation","note_struct","initData","duration_override","setDuration","setIntrinsicTicks","positions","playNote","tickContext","ignore_ticks","left_modPx","right_modPx","align_center","setCenterAlignment","stave_padding","text_line","tc","mc","left_shift","isCenterAligned","getCenterXShift","Tickable","intrinsicTicks","tickMultiplier","noteCount","notesOccupied","splice","getNoteCount","applyTickMultiplier","mod","StemmableNote","stemExtensionOverride","flagCode","getStemExtension","setDirection","getExtents","getYForBottomText","stem_struct","above","below","modifier_context","spacingFromNextModifier","PositionString","Dot","dot_spacing","dot_list","getNote","dot_shift","x_width","last_line","prev_dotted_space","half_shiftY","lineSpace","spacing_between_lines_px","getModifierStartXY","top_text_line","PREFORMAT","POSTFORMAT","formatted","extra_left_px","extra_right_px","nums","num_spacing","nums_list","prev_note","shiftLeft","shiftRight","pos","getPosition","props_tmp","getExtraLeftPx","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","num_shift","numWidth","number","finger","dot_x","dot_y","noteheadAccidentalPadding","leftShift","accidentalSpacing","accList","propsTemp","accLine","lineList","accShift","previousLine","flatLine","dblSharpLine","numAcc","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","lines","groupLength","endCase","groupMember","column","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","line1","line2","clearance","clearanceRequired","collision","tickPositions","tickNoteMap","tickPosition","notesAtPosition","music","scaleMap","createScaleMap","modifiedPitches","processNote","keyString","keyIndex","getNoteParts","accidentalString","pitch","root","sameAccidental","previouslyModified","addAccidental","getGraceNotes","font_scale","parenLeftPadding","parenRightPadding","cautionary","parenLeft","parenRight","fontScale","parenWidth","accX","accY","NUM_TONES","interval","isValidNoteValue","noteString","toLowerCase","regex","noteValues","intervalString","intervals","canonical_notes","intervalValue","isValidIntervalValue","diatonic_intervals","parts","rootValue","getNoteValue","multiplier","reverse_interval","relativeNoteName","tones","nextNote","getRelativeNoteValue","note1","note2","difference","keySigParts","getKeyParts","scaleName","scaleTypes","keySigString","getScaleTones","noteLocation","root_indices","roots","rootName","noteName","getRelativeNoteName","major","dorian","mixolydian","minor","scales","root_index","subNotes","subNote","setStrict","getMinTotalWidth","alignSubNotesWithNote","getTickContext","extraPx","extraLeft","getSpacingFromNextModifier","tick_context","gracenote_groups","group_spacing_stave","group_spacing_tab","group_list","gracenote_group","is_stavenote","group_shift","formatWidth","setSpacingFromNextModifier","grace_notes","show_slur","slur","slur_y_shift","alignGraceNotesWithNote","graceNote","TieClass","first_indices","last_indices","cp2","cp1","text_shift_x","first_x_shift","last_x_shift","tie_spacing","setNotes","first_ys","last_ys","last_x_px","cp_x","last_y_px","top_cp_y","bottom_cp_y","center_x","getTieStartX","getTieEndX","renderTie","renderText","strokes","stroke_spacing","strokeList","string","getPositions","strokeShift","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","ROLL_UP","RASQUEDO_DOWN","RASQUEDO_UP","all_voices","note_end","line_space","getModifierContext","arrow","arrow_shift_x","arrow_y","text_y","Type","shift_left","num_shiftL","num_shiftR","x_widthL","x_widthR","num_width","string_number","dashed","leg","LineEndType","stem_ext","bottom","STEM_DOWN","drawDashedLine","len","pattern","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","snapLineToStaff","canSitBetweenLines","offsetDirection","snappedLine","canSnapToStaffSpace","onStaffLine","HALF_STAFF_SPACE","getTopY","stemBaseY","getBottomY","getInitialOffset","isOnStemTip","isAbove","isBelow","margin","getIncrement","setTextLine","maxWidth","articWidth","builder","articNameToCode","staccato","tenuto","articString","getFactory","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","setOrigin","INITIAL_OFFSET","noteLine","distanceFromNote","articLine","ornament","delayed","accidentalUpper","accidentalLower","accidentalLowerPadding","accidentalUpperPadding","accid","stemDir","stemExtents","isPlacedOnNoteheadSide","totalSpacing","glyphYBetweenLines","glyphX","glyphY","getNextContext","tContext","currentTick","maxTicks","minTicks","padding","notePx","extraRight","setTickContext","annotations","CENTER","CENTER_STEM","Justify","center","centerStem","TOP","BOTTOM","VerticalJustify","justification","vert_justification","just","VerticalJustifyString","JustifyString","text_height","has_stem","stem_base","yt","yb","bends","last_width","bend","release","phrase","line_style","bend_width","release_width","updateWidth","measure_text","total_width","additional_width","draw_width","bend_height","annotation_y","renderBend","cp_y","renderRelease","renderArrowHead","setRawFont","render_x","last_bend","last_drawn_width","vibratos","vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vx","vy","renderVibrato","num_waves","start_x","end_x","measure","vertical_bar_width","glyph_spacing_px","num_lines","fill_style","left_bar","right_bar","space_above_staff_ln","space_below_staff_ln","top_text_position","resetLines","BARTYPE","addEndModifier","line_config","visible","bottom_text_position","BEGIN","begBarline","getType","REPEAT_BEGIN","number_t","section","tempo","score_bottom","headroom","setPosition","END","setType","clefSpec","clefs","addClef","setClef","cancelKeySpec","alterKeySpec","keySignatures","addKeySignature","setKeySig","setKeySignature","timeSpec","customPadding","timeSignatures","addTimeSignature","setTimeSig","setTimeSignature","category","items","order","temp","endBarline","begModifiers","endModifiers","sortByCategory","barlines","keysignatures","timesignatures","getPadding","getModifierXShift","isDouble","drawVerticalFixed","top_line","bottom_line","drawVerticalBarFixed","line_number","lines_configuration","REPEAT_END","REPEAT_BOTH","repeatBegin","repeatEnd","repeatBoth","TYPE","widths","paddings","setPadding","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","getTopLineTopY","getBottomLineBottomY","begin","dot_radius","renderToStave","setYShift","CODA_LEFT","CODA_RIGHT","SEGNO_LEFT","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","symbol_type","drawCodaFixed","drawSymbolText","drawSignoFixed","draw_coda","text_x","symbol_x","StaveSection","bpm","stem_height","StaveText","Justification","text_struct","superscript","subscript","glyph_type","struct","GLYPHS","glyph_struct","smooth","sizes","attachments","types","anno_dict","attachment","glyphScale","glyphOffset","numLines","getOptions","setPoint","placeGlyphOnLine","glyphFontScale","xPositions","paddingForced","nextAcc","accGlyphData","extraWidth","xPosition","glyphWidth","cancel_accList","different_types","naturals","cancelled","customLines","convertToCancelAccList","firstAccidentalType","convertToAlterAccList","convertAccLines","convertToGlyph","assertIsValidFraction","numbers","topLine","bottomLine","timeSig","topDigits","botDigits","makeTimeSignatureGlyph","topGlyphs","botGlyphs","topWidth","topGlyph","botWidth","botGlyph","topStartX","botStartX","parseTimeSpec","MID","BEGIN_END","volta","vert_height","tab_options","getUnusedStringGroups","strings_used","stem_through","is_used","getPartialStemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","containsLastString","strings","containsFirstString","line_ys","isTopBound","isBottomBound","tab_struct","draw_stem","ghost","draw_dots","draw_stem_through_stave","stem_extension_override","getStemY","note_glyph_width","stemUpLine","stemDownLine","stemStartLine","shouldDrawFlag","flag_x","flag_y","flag_code","tab_x","render_stem","drawPositions","drawStemThrough","bracket_data","stop","stop_x","clef_obj","abs_x","timeSignature","getTimeSig","SLIDE_UP","SLIDE_DOWN","first_fret","last_fret","slide_direction","slide_y","SCALE","LEDGER_LINE_OFFSET","slash","tuningString","setTuning","names","tuningValues","numStrings","noteToInteger","stringNum","fretNum","stringValue","getValueForString","getValueForFret","setKey","keyParts","is_supported_type","scaleMapByValue","originalScaleMapByValue","scaleNote","modparts","valueNote","originalValueNote","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","left_shift_px","right_shift_px","setRenderOptions","CRESC","DECRESC","hairpin","dis","first_y","staff_height","l_shift","r_shift","last_x","first_x","renderHairpin","last_y","NEAR_HEAD","NEAR_TOP","nearHead","nearTop","from","to","position_end","invert","cps","cp_spacing","metric","end_metric","renderCurve","sequence","glyph_font_size","glyph_data","letter","letter_x","current_letter","drawArrowHead","x0","y0","drawArrowLine","point1","point2","both_arrows","draw_start_arrow","draw_end_arrow","distance","ratio","arrowhead_length","end_y","start_y","line_angle","arrowhead_angle","angle1","angle2","top_x","bottom_x","padding_left","padding_right","line_dash","rounded_end","text_position_vertical","TextVerticalPosition","text_justification","TextJustification","setLineDash","setLineCap","applyLineStyle","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","first_displaced","last_displaced","delta_x","vertical_position","applyFontStyle","drawPedalGlyph","pedal","Styles","MIXED","setCustomText","TEXT","mixed","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","glyph_point_size","depress","is_pedal_depressed","prev_x","prev_y","next_is_same","prev_is_same","drawBracketed","drawText","Positions","show_bracket","underline_superscript","main_width","main_height","super_y","superscript_width","super_height","barline","parameter","y_spacing","begin_x","half_height","reverse","decrescendo","extend_left","extend_right","decresc","next_context","setDefaults","default_options","connector","spaceBetweenStaves","factory","debugFormatter","formatIterations","spaceAbove","spaceBelow","debugNoteMetrics","startX","allVoices","debugNoteMetricsYs","part","setNoteStartX","tune","lastY","plotDebugging","plotMetrics","face","renderQ","systems","staves","initRenderer","ghostNote","textNoteStruct","textNote","barNote","clefNote","timeSigNote","vJustify","hJustify","fontFamily","fontWeight","setJustification","setVerticalJustification","fingering","stringNumber","secondaryBeamBreaks","breakSecondaryAt","curve","tie","setText","vibratoBracket","setLine","setHarsh","textBracket","system","StylesString","isRendered","Grammar","LINE","expect","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","run","commitPiece","COMMA","zeroOrMore","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","or","LPAREN","NOTES","RPAREN","addChord","matches","NOTE","oneOrMore","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","ACCIDENTALS","maybe","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","unquote","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","token","Builder","commitHooks","elements","rollingDuration","resetPiece","commitHook","piece","chord","addNote","accids","addDotToAll","setId","setClass","commaSeparatedRegex","addClass","easyScoreHook","throwOnError","grammar","parser","addCommitHook","success","getElements","voiceOptions","flattenMatches","results","matchedString","errorPos","returnPos","noSpace","RegExp","workingLine","incrementPos","rule","allMatches","oneMatch","localPos","gotOne","matchSuccess","matchFail","numMatches","more","expectOne","expectOneOrMore","rules","matchToken","expectZeroOrMore","r"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACpCA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,UAAIA,IAAJ,gB,CAxEA;;AAyEA,UAAIA,IAAJ,CAASC,OAAT;AACA,UAAID,IAAJ,CAASE,QAAT;AACA,UAAIF,IAAJ,CAASG,QAAT;AACA,UAAIH,IAAJ,CAASI,SAAT;AACA,UAAIJ,IAAJ,CAASK,KAAT;AACA,UAAIL,IAAJ,CAASM,KAAT;AACA,UAAIN,IAAJ,CAASO,KAAT;AACA,UAAIP,IAAJ,CAASQ,SAAT;AACA,UAAIR,IAAJ,CAASS,aAAT;AACA,UAAIT,IAAJ,CAASU,KAAT;AACA,UAAIV,IAAJ,CAASW,UAAT;AACA,UAAIX,IAAJ,CAASY,IAAT;AACA,UAAIZ,IAAJ,CAASa,QAAT;AACA,UAAIb,IAAJ,CAASc,QAAT;AACA,UAAId,IAAJ,CAASe,OAAT;AACA,UAAIf,IAAJ,CAASgB,IAAT;AACA,UAAIhB,IAAJ,CAASiB,OAAT;AACA,UAAIjB,IAAJ,CAASkB,cAAT;AACA,UAAIlB,IAAJ,CAASmB,IAAT;AACA,UA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","file":"/media/kratib/data/src/music/vexflow/build/vexflow-debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0f70f85ae34a1abf347e","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Renderer } from './renderer';\nimport { Formatter } from './formatter';\nimport { Music } from './music';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveNote } from './stavenote';\nimport { StaveModifier } from './stavemodifier';\nimport { Voice } from './voice';\nimport { Accidental } from './accidental';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabStave } from './tabstave';\nimport { TabNote } from './tabnote';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Barline } from './stavebarline';\nimport { NoteHead } from './notehead';\nimport { StaveConnector } from './staveconnector';\nimport { ClefNote } from './clefnote';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Stem } from './stem';\nimport { TabTie } from './tabtie';\nimport { Clef } from './clef';\nimport { Modifier } from './modifier';\nimport { TabSlide } from './tabslide';\nimport { Tuplet } from './tuplet';\nimport { GraceNote } from './gracenote';\nimport { GraceTabNote } from './gracetabnote';\nimport { Tuning } from './tuning';\nimport { KeyManager } from './keymanager';\nimport { StaveHairpin } from './stavehairpin';\nimport { BoundingBox } from './boundingbox';\nimport { Stroke } from './strokes';\nimport { TextNote } from './textnote';\nimport { Curve } from './curve';\nimport { TextDynamics } from './textdynamics';\nimport { StaveLine } from './staveline';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { FretHandFinger } from './frethandfinger';\nimport { Repetition } from './staverepetition';\nimport { BarNote } from './barnote';\nimport { GhostNote } from './ghostnote';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Tremolo } from './tremolo';\nimport { StringNumber } from './stringnumber';\nimport { Crescendo } from './crescendo';\nimport { Volta } from './stavevolta';\nimport { Font } from './fonts/vexflow_font';\nimport { System } from './system';\nimport { Factory } from './factory';\nimport { Parser } from './parser';\nimport { EasyScore } from './easyscore';\nimport { Registry } from './registry';\nimport { StaveTempo } from './stavetempo';\n\nVex.Flow = Flow;\nVex.Flow.Element = Element;\nVex.Flow.Fraction = Fraction;\nVex.Flow.Renderer = Renderer;\nVex.Flow.Formatter = Formatter;\nVex.Flow.Music = Music;\nVex.Flow.Glyph = Glyph;\nVex.Flow.Stave = Stave;\nVex.Flow.StaveNote = StaveNote;\nVex.Flow.StaveModifier = StaveModifier;\nVex.Flow.Voice = Voice;\nVex.Flow.Accidental = Accidental;\nVex.Flow.Beam = Beam;\nVex.Flow.StaveTie = StaveTie;\nVex.Flow.TabStave = TabStave;\nVex.Flow.TabNote = TabNote;\nVex.Flow.Bend = Bend;\nVex.Flow.Vibrato = Vibrato;\nVex.Flow.VibratoBracket = VibratoBracket;\nVex.Flow.Note = Note;\nVex.Flow.ModifierContext = ModifierContext;\nVex.Flow.TickContext = TickContext;\nVex.Flow.Articulation = Articulation;\nVex.Flow.Annotation = Annotation;\nVex.Flow.Barline = Barline;\nVex.Flow.NoteHead = NoteHead;\nVex.Flow.StaveConnector = StaveConnector;\nVex.Flow.ClefNote = ClefNote;\nVex.Flow.KeySignature = KeySignature;\nVex.Flow.TimeSignature = TimeSignature;\nVex.Flow.TimeSigNote = TimeSigNote;\nVex.Flow.Stem = Stem;\nVex.Flow.TabTie = TabTie;\nVex.Flow.Clef = Clef;\nVex.Flow.Modifier = Modifier;\nVex.Flow.TabSlide = TabSlide;\nVex.Flow.Tuplet = Tuplet;\nVex.Flow.GraceNote = GraceNote;\nVex.Flow.GraceTabNote = GraceTabNote;\nVex.Flow.Tuning = Tuning;\nVex.Flow.KeyManager = KeyManager;\nVex.Flow.StaveHairpin = StaveHairpin;\nVex.Flow.BoundingBox = BoundingBox;\nVex.Flow.Stroke = Stroke;\nVex.Flow.TextNote = TextNote;\nVex.Flow.Curve = Curve;\nVex.Flow.TextDynamics = TextDynamics;\nVex.Flow.StaveLine = StaveLine;\nVex.Flow.Ornament = Ornament;\nVex.Flow.PedalMarking = PedalMarking;\nVex.Flow.TextBracket = TextBracket;\nVex.Flow.FretHandFinger = FretHandFinger;\nVex.Flow.Repetition = Repetition;\nVex.Flow.BarNote = BarNote;\nVex.Flow.GhostNote = GhostNote;\nVex.Flow.NoteSubGroup = NoteSubGroup;\nVex.Flow.GraceNoteGroup = GraceNoteGroup;\nVex.Flow.Tremolo = Tremolo;\nVex.Flow.StringNumber = StringNumber;\nVex.Flow.Crescendo = Crescendo;\nVex.Flow.Volta = Volta;\nVex.Flow.Font = Font;\nVex.Flow.System = System;\nVex.Flow.Factory = Factory;\nVex.Flow.Parser = Parser;\nVex.Flow.EasyScore = EasyScore;\nVex.Flow.Registry = Registry;\nVex.Flow.StaveTempo = StaveTempo;\n\nexport default Vex;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n\nconst Vex = () => {};\n\n// Default log function sends all arguments to console.\nVex.L = (block, args) => {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log(block + ': ' + line);\n};\n\nVex.MakeException = (name) => {\n  const exception = class extends Error {\n    constructor(message, data) {\n      super(message);\n      this.name = name;\n      this.message = message;\n      this.data = data;\n    }\n  };\n\n  return exception;\n};\n\n// Default runtime exception.\nclass RuntimeError {\n  constructor(code, message) {\n    this.code = code;\n    this.message = message;\n  }\n\n  toString() {\n    return '[RuntimeError] ' + this.code + ':' + this.message;\n  }\n}\n\n// Shortcut method for `RuntimeError`.\nVex.RuntimeError = RuntimeError;\nVex.RERR = Vex.RuntimeError;\n\n// Merge `destination` hash with `source` hash, overwriting like keys\n// in `source` if necessary.\nVex.Merge = (destination, source) => {\n  for (const property in source) { // eslint-disable-line guard-for-in\n    destination[property] = source[property];\n  }\n  return destination;\n};\n\n// DEPRECATED. Use `Math.*`.\nVex.Min = Math.min;\nVex.Max = Math.max;\nVex.forEach = (a, fn) => {\n  for (let i = 0; i < a.length; i++) {\n    fn(a[i], i);\n  }\n};\n\n// Round number to nearest fractional value (`.5`, `.25`, etc.)\nVex.RoundN = (x, n) =>\n  (x % n) >= (n / 2)\n    ? parseInt(x / n, 10) * n + n\n    : parseInt(x / n, 10) * n;\n\n// Locate the mid point between stave lines. Returns a fractional line if a space.\nVex.MidLine = (a, b) => {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n};\n\n// Take `arr` and return a new list consisting of the sorted, unique,\n// contents of arr. Does not modify `arr`.\nVex.SortAndUnique = (arr, cmp, eq) => {\n  if (arr.length > 1) {\n    const newArr = [];\n    let last;\n    arr.sort(cmp);\n\n    for (let i = 0; i < arr.length; ++i) {\n      if (i === 0 || !eq(arr[i], last)) {\n        newArr.push(arr[i]);\n      }\n      last = arr[i];\n    }\n\n    return newArr;\n  } else {\n    return arr;\n  }\n};\n\n// Check if array `a` contains `obj`.\nVex.Contains = (a, obj) => {\n  let i = a.length;\n  while (i--) {\n    if (a[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Get the 2D Canvas context from DOM element `canvas_sel`.\nVex.getCanvasContext = canvas_sel => {\n  if (!canvas_sel) {\n    throw new Vex.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n  }\n\n  const canvas = document.getElementById(canvas_sel);\n  if (!(canvas && canvas.getContext)) {\n    throw new Vex.RERR(\n      'UnsupportedBrowserError', 'This browser does not support HTML5 Canvas'\n    );\n  }\n\n  return canvas.getContext('2d');\n};\n\n// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n//\n// `ctx`: Canvas context.\n// `x`, `y`: Dot coordinates.\nVex.drawDot = (ctx, x, y, color = '#55') => {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\nVex.BM = (s, f) => {\n  const start_time = new Date().getTime();\n  f();\n  const elapsed = new Date().getTime() - start_time;\n  Vex.L(s + elapsed + 'ms');\n};\n\n// Get stack trace.\nVex.StackTrace = () => {\n  const err = new Error();\n  return err.stack;\n};\n\n// Dump warning to console.\nVex.W = (...args) => {\n  const line = args.join(' ');\n  window.console.log('Warning: ', line, Vex.StackTrace());\n};\n\n// Used by various classes (e.g., SVGContext) to provide a\n// unique prefix to element names (or other keys in shared namespaces).\nVex.Prefix = text => Vex.Prefix.prefix + text;\nVex.Prefix.prefix = 'vf-';\n\nexport { Vex };\n\n\n\n// WEBPACK FOOTER //\n// ./src/vex.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/* eslint-disable key-spacing */\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\n\nconst Flow = {\n  STEM_WIDTH: 1.5,\n  STEM_HEIGHT: 35,\n  STAVE_LINE_THICKNESS: 1,\n  RESOLUTION: 16384,\n  DEFAULT_NOTATION_FONT_SCALE: 39,\n  DEFAULT_TABLATURE_FONT_SCALE: 39,\n  SLASH_NOTEHEAD_WIDTH: 15,\n\n  // HACK:\n  // Since text origins are positioned at the baseline, we must\n  // compensate for the ascender of the text. Of course, 1 staff space is\n  // a very poor approximation.\n  //\n  // This will be deprecated in the future. This is a temporary solution until\n  // we have more robust text metrics.\n  TEXT_HEIGHT_OFFSET_HACK: 1,\n\n  /* Kerning (DEPRECATED) */\n  IsKerned: true,\n};\n\n\nFlow.clefProperties = clef => {\n  if (!clef) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  const props = Flow.clefProperties.values[clef];\n  if (!props) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  return props;\n};\n\nFlow.clefProperties.values = {\n  'treble': { line_shift: 0 },\n  'bass': { line_shift: 6 },\n  'tenor': { line_shift: 4 },\n  'alto': { line_shift: 3 },\n  'soprano': { line_shift: 1 },\n  'percussion': { line_shift: 0 },\n  'mezzo-soprano': { line_shift: 2 },\n  'baritone-c': { line_shift: 5 },\n  'baritone-f': { line_shift: 5 },\n  'subbass': { line_shift: 7 },\n  'french': { line_shift: -1 },\n};\n\n/*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option,\n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\nFlow.keyProperties = (key, clef, params) => {\n  if (clef === undefined) {\n    clef = 'treble';\n  }\n\n  const options = { octave_shift: 0 };\n\n  if (typeof params === 'object') {\n    Vex.Merge(options, params);\n  }\n\n  const pieces = key.split('/');\n\n  if (pieces.length < 2) {\n    throw new Vex.RERR('BadArguments', `Key must have note + octave and an optional glyph: ${key}`);\n  }\n\n  const k = pieces[0].toUpperCase();\n  const value = Flow.keyProperties.note_values[k];\n  if (!value) throw new Vex.RERR('BadArguments', 'Invalid key name: ' + k);\n  if (value.octave) pieces[1] = value.octave;\n\n  let octave = parseInt(pieces[1], 10);\n\n  // Octave_shift is the shift to compensate for clef 8va/8vb.\n  octave += -1 * options.octave_shift;\n\n  const base_index = (octave * 7) - (4 * 7);\n  let line = (base_index + value.index) / 2;\n  line += Flow.clefProperties(clef).line_shift;\n\n  let stroke = 0;\n\n  if (line <= 0 && (((line * 2) % 2) === 0)) stroke = 1;  // stroke up\n  if (line >= 6 && (((line * 2) % 2) === 0)) stroke = -1; // stroke down\n\n  // Integer value for note arithmetic.\n  const int_value = typeof(value.int_val) !== 'undefined'\n    ? (octave * 12) + value.int_val\n    : null;\n\n  /* Check if the user specified a glyph. */\n  let code = value.code;\n  let shift_right = value.shift_right;\n  if (pieces.length > 2 && pieces[2]) {\n    const glyph_name = pieces[2].toUpperCase();\n    const note_glyph = Flow.keyProperties.note_glyph[glyph_name];\n    if (note_glyph) {\n      code = note_glyph.code;\n      shift_right = note_glyph.shift_right;\n    }\n  }\n\n  return {\n    key: k,\n    octave,\n    line,\n    int_value,\n    accidental: value.accidental,\n    code,\n    stroke,\n    shift_right,\n    displaced: false,\n  };\n};\n\nFlow.keyProperties.note_values = {\n  'C': { index: 0, int_val: 0, accidental: null },\n  'CN': { index: 0, int_val: 0, accidental: 'n' },\n  'C#': { index: 0, int_val: 1, accidental: '#' },\n  'C##': { index: 0, int_val: 2, accidental: '##' },\n  'CB': { index: 0, int_val: -1, accidental: 'b' },\n  'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n  'D': { index: 1, int_val: 2, accidental: null },\n  'DN': { index: 1, int_val: 2, accidental: 'n' },\n  'D#': { index: 1, int_val: 3, accidental: '#' },\n  'D##': { index: 1, int_val: 4, accidental: '##' },\n  'DB': { index: 1, int_val: 1, accidental: 'b' },\n  'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n  'E': { index: 2, int_val: 4, accidental: null },\n  'EN': { index: 2, int_val: 4, accidental: 'n' },\n  'E#': { index: 2, int_val: 5, accidental: '#' },\n  'E##': { index: 2, int_val: 6, accidental: '##' },\n  'EB': { index: 2, int_val: 3, accidental: 'b' },\n  'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n  'F': { index: 3, int_val: 5, accidental: null },\n  'FN': { index: 3, int_val: 5, accidental: 'n' },\n  'F#': { index: 3, int_val: 6, accidental: '#' },\n  'F##': { index: 3, int_val: 7, accidental: '##' },\n  'FB': { index: 3, int_val: 4, accidental: 'b' },\n  'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n  'G': { index: 4, int_val: 7, accidental: null },\n  'GN': { index: 4, int_val: 7, accidental: 'n' },\n  'G#': { index: 4, int_val: 8, accidental: '#' },\n  'G##': { index: 4, int_val: 9, accidental: '##' },\n  'GB': { index: 4, int_val: 6, accidental: 'b' },\n  'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n  'A': { index: 5, int_val: 9, accidental: null },\n  'AN': { index: 5, int_val: 9, accidental: 'n' },\n  'A#': { index: 5, int_val: 10, accidental: '#' },\n  'A##': { index: 5, int_val: 11, accidental: '##' },\n  'AB': { index: 5, int_val: 8, accidental: 'b' },\n  'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n  'B': { index: 6, int_val: 11, accidental: null },\n  'BN': { index: 6, int_val: 11, accidental: 'n' },\n  'B#': { index: 6, int_val: 12, accidental: '#' },\n  'B##': { index: 6, int_val: 13, accidental: '##' },\n  'BB': { index: 6, int_val: 10, accidental: 'b' },\n  'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n  'R': { index: 6, int_val: 9, rest: true }, // Rest\n  'X': {\n    index: 6,\n    accidental: '',\n    octave: 4,\n    code: 'v3e',\n    shift_right: 5.5,\n  },\n};\n\nFlow.keyProperties.note_glyph = {\n  /* Diamond */\n  'D0': { code: 'v27', shift_right: -0.5 },\n  'D1': { code: 'v2d', shift_right: -0.5 },\n  'D2': { code: 'v22', shift_right: -0.5 },\n  'D3': { code: 'v70', shift_right: -0.5 },\n\n  /* Triangle */\n  'T0': { code: 'v49', shift_right: -2 },\n  'T1': { code: 'v93', shift_right: 0.5 },\n  'T2': { code: 'v40', shift_right: 0.5 },\n  'T3': { code: 'v7d', shift_right: 0.5 },\n\n  /* Cross */\n  'X0': { code: 'v92', shift_right: -2 },\n  'X1': { code: 'v95', shift_right: -0.5 },\n  'X2': { code: 'v7f', shift_right: 0.5 },\n  'X3': { code: 'v3b', shift_right: -2 },\n};\n\nFlow.integerToNote = integer => {\n  if (typeof(integer) === 'undefined') {\n    throw new Vex.RERR('BadArguments', 'Undefined integer for integerToNote');\n  }\n\n  if (integer < -2) {\n    throw new Vex.RERR('BadArguments', `integerToNote requires integer > -2: ${integer}`);\n  }\n\n  const noteValue = Flow.integerToNote.table[integer];\n  if (!noteValue) {\n    throw new Vex.RERR('BadArguments', `Unknown note value for integer: ${integer}`);\n  }\n\n  return noteValue;\n};\n\nFlow.integerToNote.table = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B',\n};\n\n\nFlow.tabToGlyph = (fret, scale = 1.0) => {\n  let glyph = null;\n  let width = 0;\n  let shift_y = 0;\n\n  if (fret.toString().toUpperCase() === 'X') {\n    const glyphMetrics = new Glyph('v7f', Flow.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n    glyph = 'v7f';\n    width = glyphMetrics.width;\n    shift_y = -glyphMetrics.height / 2;\n  } else {\n    width = Flow.textWidth(fret.toString());\n  }\n\n  return {\n    text: fret,\n    code: glyph,\n    getWidth: () => width * scale,\n    shift_y,\n  };\n};\n\nFlow.textWidth = text => 7 * text.toString().length;\n\nFlow.articulationCodes = artic => Flow.articulationCodes.articulations[artic];\n\nFlow.articulationCodes.articulations = {\n  'a.': { code: 'v23', between_lines: true }, // Staccato\n  'av': { code: 'v28', between_lines: true }, // Staccatissimo\n  'a>': { code: 'v42', between_lines: true }, // Accent\n  'a-': { code: 'v25', between_lines: true }, // Tenuto\n  'a^': { code: 'va',  between_lines: false }, // Marcato\n  'a+': { code: 'v8b', between_lines: false }, // Left hand pizzicato\n  'ao': { code: 'v94', between_lines: false }, // Snap pizzicato\n  'ah': { code: 'vb9', between_lines: false }, // Natural harmonic or open note\n  'a@a': { code: 'v43', between_lines: false }, // Fermata above staff\n  'a@u': { code: 'v5b', between_lines: false }, // Fermata below staff\n  'a|': { code: 'v75', between_lines: false }, // Bow up - up stroke\n  'am': { code: 'v97', between_lines: false }, // Bow down - down stroke\n  'a,': { code: 'vb3', between_lines: false }, // Choked\n};\n\nFlow.accidentalCodes = acc => Flow.accidentalCodes.accidentals[acc];\n\nFlow.accidentalCodes.accidentals = {\n  '#':   { code: 'v18', parenRightPaddingAdjustment: -1 },\n  '##':  { code: 'v7f', parenRightPaddingAdjustment: -1 },\n  'b':   { code: 'v44', parenRightPaddingAdjustment: -2 },\n  'bb':  { code: 'v26', parenRightPaddingAdjustment: -2 },\n  'n':   { code: 'v4e', parenRightPaddingAdjustment: -1 },\n  '{':   { code: 'v9c', parenRightPaddingAdjustment: -1 },\n  '}':   { code: 'v84', parenRightPaddingAdjustment: -1 },\n  'db':  { code: 'v9e', parenRightPaddingAdjustment: -1 },\n  'd':   { code: 'vab', parenRightPaddingAdjustment:  0 },\n  'bbs': { code: 'v90', parenRightPaddingAdjustment: -1 },\n  '++':  { code: 'v51', parenRightPaddingAdjustment: -1 },\n  '+':   { code: 'v78', parenRightPaddingAdjustment: -1 },\n  '+-':  { code: 'v8d', parenRightPaddingAdjustment: -1 },\n  '++-': { code: 'v7a', parenRightPaddingAdjustment: -1 },\n  'bs':  { code: 'vb7', parenRightPaddingAdjustment: -1 },\n  'bss': { code: 'v39', parenRightPaddingAdjustment: -1 },\n  'o':   { code: 'vd0', parenRightPaddingAdjustment: -1 },\n  'k':   { code: 'vd1', parenRightPaddingAdjustment: -1 },\n};\n\nFlow.accidentalColumnsTable = {\n  1: {\n    a: [1],\n    b: [1],\n  },\n  2: {\n    a: [1, 2],\n  },\n  3: {\n    a: [1, 3, 2],\n    b: [1, 2, 1],\n    second_on_bottom: [1, 2, 3],\n  },\n  4: {\n    a: [1, 3, 4, 2],\n    b: [1, 2, 3, 1],\n    spaced_out_tetrachord: [1, 2, 1, 2],\n  },\n  5: {\n    a: [1, 3, 5, 4, 2],\n    b: [1, 2, 4, 3, 1],\n    spaced_out_pentachord: [1, 2, 3, 2, 1],\n    very_spaced_out_pentachord: [1, 2, 1, 2, 1] },\n  6: {\n    a: [1, 3, 5, 6, 4, 2],\n    b: [1, 2, 4, 5, 3, 1],\n    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n  },\n};\n\nFlow.ornamentCodes = acc => Flow.ornamentCodes.ornaments[acc];\n\nFlow.ornamentCodes.ornaments = {\n  'mordent': { code: 'v1e' },\n  'mordent_inverted': { code: 'v45' },\n  'turn': { code: 'v72' },\n  'turn_inverted': { code: 'v33' },\n  'tr': { code: 'v1f' },\n  'upprall': { code: 'v60' },\n  'downprall': { code: 'vb4' },\n  'prallup': { code: 'v6d' },\n  'pralldown': { code: 'v2c' },\n  'upmordent': { code: 'v29' },\n  'downmordent': { code: 'v68' },\n  'lineprall': { code: 'v20' },\n  'prallprall': { code: 'v86' },\n};\n\nFlow.keySignature = spec => {\n  const keySpec = Flow.keySignature.keySpecs[spec];\n\n  if (!keySpec) {\n    throw new Vex.RERR('BadKeySignature', `Bad key signature spec: '${spec}'`);\n  }\n\n  if (!keySpec.acc) {\n    return [];\n  }\n\n  const notes = Flow.keySignature.accidentalList(keySpec.acc);\n\n  const acc_list = [];\n  for (let i = 0; i < keySpec.num; ++i) {\n    const line = notes[i];\n    acc_list.push({ type: keySpec.acc, line });\n  }\n\n  return acc_list;\n};\n\nFlow.keySignature.keySpecs = {\n  'C': { acc: null, num: 0 },\n  'Am': { acc: null, num: 0 },\n  'F': { acc: 'b', num: 1 },\n  'Dm': { acc: 'b', num: 1 },\n  'Bb': { acc: 'b', num: 2 },\n  'Gm': { acc: 'b', num: 2 },\n  'Eb': { acc: 'b', num: 3 },\n  'Cm': { acc: 'b', num: 3 },\n  'Ab': { acc: 'b', num: 4 },\n  'Fm': { acc: 'b', num: 4 },\n  'Db': { acc: 'b', num: 5 },\n  'Bbm': { acc: 'b', num: 5 },\n  'Gb': { acc: 'b', num: 6 },\n  'Ebm': { acc: 'b', num: 6 },\n  'Cb': { acc: 'b', num: 7 },\n  'Abm': { acc: 'b', num: 7 },\n  'G': { acc: '#', num: 1 },\n  'Em': { acc: '#', num: 1 },\n  'D': { acc: '#', num: 2 },\n  'Bm': { acc: '#', num: 2 },\n  'A': { acc: '#', num: 3 },\n  'F#m': { acc: '#', num: 3 },\n  'E': { acc: '#', num: 4 },\n  'C#m': { acc: '#', num: 4 },\n  'B': { acc: '#', num: 5 },\n  'G#m': { acc: '#', num: 5 },\n  'F#': { acc: '#', num: 6 },\n  'D#m': { acc: '#', num: 6 },\n  'C#': { acc: '#', num: 7 },\n  'A#m': { acc: '#', num: 7 },\n};\n\nFlow.unicode = {\n  // Unicode accidentals\n  'sharp': String.fromCharCode(parseInt('266F', 16)),\n  'flat': String.fromCharCode(parseInt('266D', 16)),\n  'natural': String.fromCharCode(parseInt('266E', 16)),\n  // Major Chord\n  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n  // half-diminished\n  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n   // Diminished\n  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n  'circle': String.fromCharCode(parseInt('25CB', 16)),\n};\n\nFlow.keySignature.accidentalList = (acc) => {\n  const patterns = {\n    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n  };\n\n  return patterns[acc];\n};\n\nFlow.parseNoteDurationString = durationString => {\n  if (typeof(durationString) !== 'string') {\n    return null;\n  }\n\n  const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\n  const result = regexp.exec(durationString);\n  if (!result) {\n    return null;\n  }\n\n  const duration = result[1];\n  const dots = result[2].length;\n  let type = result[3];\n\n  if (type.length === 0) {\n    type = 'n';\n  }\n\n  return {\n    duration,\n    dots,\n    type,\n  };\n};\n\nFlow.parseNoteData = noteData => {\n  const duration = noteData.duration;\n\n  // Preserve backwards-compatibility\n  const durationStringData = Flow.parseNoteDurationString(duration);\n  if (!durationStringData) {\n    return null;\n  }\n\n  let ticks = Flow.durationToTicks(durationStringData.duration);\n  if (ticks == null) {\n    return null;\n  }\n\n  let type = noteData.type;\n\n  if (type) {\n    if (!(type === 'n' || type === 'r' || type === 'h' || type === 'm' || type === 's')) {\n      return null;\n    }\n  } else {\n    type = durationStringData.type;\n    if (!type) {\n      type = 'n';\n    }\n  }\n\n  const dots = noteData.dots ? noteData.dots : durationStringData.dots;\n\n  if (typeof(dots) !== 'number') {\n    return null;\n  }\n\n  let currentTicks = ticks;\n\n  for (let i = 0; i < dots; i++) {\n    if (currentTicks <= 1) return null;\n\n    currentTicks = currentTicks / 2;\n    ticks += currentTicks;\n  }\n\n  return {\n    duration: durationStringData.duration,\n    type,\n    dots,\n    ticks,\n  };\n};\n\n// Used to convert duration aliases to the number based duration.\n// If the input isn't an alias, simply return the input.\n//\n// example: 'q' -> '4', '8' -> '8'\nFlow.sanitizeDuration = duration => {\n  const alias = Flow.durationAliases[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  if (Flow.durationToTicks.durations[duration] === undefined) {\n    throw new Vex.RERR('BadArguments', `The provided duration is not valid: ${duration}`);\n  }\n\n  return duration;\n};\n\n// Convert the `duration` to an fraction\nFlow.durationToFraction = duration => new Fraction().parse(Flow.sanitizeDuration(duration));\n\n// Convert the `duration` to an number\nFlow.durationToNumber = duration => Flow.durationToFraction(duration).value();\n\n// Convert the `duration` to total ticks\nFlow.durationToTicks = duration => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const ticks = Flow.durationToTicks.durations[duration];\n  if (ticks === undefined) {\n    return null;\n  }\n\n  return ticks;\n};\n\nFlow.durationToTicks.durations = {\n  '1/2': Flow.RESOLUTION * 2,\n  '1': Flow.RESOLUTION / 1,\n  '2': Flow.RESOLUTION / 2,\n  '4': Flow.RESOLUTION / 4,\n  '8': Flow.RESOLUTION / 8,\n  '16': Flow.RESOLUTION / 16,\n  '32': Flow.RESOLUTION / 32,\n  '64': Flow.RESOLUTION / 64,\n  '128': Flow.RESOLUTION / 128,\n  '256': Flow.RESOLUTION / 256,\n};\n\nFlow.durationAliases = {\n  'w': '1',\n  'h': '2',\n  'q': '4',\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  //\n  // TODO(0xfe): This needs to be cleaned up.\n  'b': '256',\n};\n\nFlow.durationToGlyph = (duration, type) => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const code = Flow.durationToGlyph.duration_codes[duration];\n  if (code === undefined) {\n    return null;\n  }\n\n  if (!type) {\n    type = 'n';\n  }\n\n  const glyphTypeProperties = code.type[type];\n  if (glyphTypeProperties === undefined) {\n    return null;\n  }\n\n  return Vex.Merge(Vex.Merge({}, code.common), glyphTypeProperties);\n};\n\nFlow.durationToGlyph.duration_codes = {\n  '1/2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v53', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Breve note\n        code_head: 'v53',\n      },\n      'h': { // Breve note harmonic\n        code_head: 'v59',\n      },\n      'm': { // Breve note muted -\n        code_head: 'vf',\n        stem_offset: 0,\n      },\n      'r': { // Breve rest\n        code_head: 'v31',\n        rest: true,\n        position: 'B/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Breve note slash -\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '1': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Whole note\n        code_head: 'v1d',\n      },\n      'h': { // Whole note harmonic\n        code_head: 'v46',\n      },\n      'm': { // Whole note muted\n        code_head: 'v92',\n        stem_offset: -3,\n      },\n      'r': { // Whole rest\n        code_head: 'v5c',\n        rest: true,\n        position: 'D/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Whole note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v81', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Half note\n        code_head: 'v81',\n      },\n      'h': { // Half note harmonic\n        code_head: 'v2d',\n      },\n      'm': { // Half note muted\n        code_head: 'v95',\n        stem_offset: -3,\n      },\n      'r': { // Half rest\n        code_head: 'vc',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n      },\n      's': { // Half note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '4': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Quarter note\n        code_head: 'vb',\n      },\n      'h': { // Quarter harmonic\n        code_head: 'v22',\n      },\n      'm': { // Quarter muted\n        code_head: 'v3e',\n        stem_offset: -3,\n      },\n      'r': { // Quarter rest\n        code_head: 'v7c',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5,\n      },\n      's': { // Quarter slash\n         // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '8': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      beam_count: 1,\n      code_flag_upstem: 'v54',\n      code_flag_downstem: 'v9a',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Eighth note\n        code_head: 'vb',\n      },\n      'h': { // Eighth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Eighth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Eighth rest\n        code_head: 'va5',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0,\n      },\n      's': { // Eight slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '16': {\n    common: {\n      beam_count: 2,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v3f',\n      code_flag_downstem: 'v8f',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixteenth note\n        code_head: 'vb',\n      },\n      'h': { // Sixteenth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixteenth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixteenth rest\n        code_head: 'v3c',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0,\n      },\n      's': { // Sixteenth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '32': {\n    common: {\n      beam_count: 3,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v47',\n      code_flag_downstem: 'v2a',\n      stem_up_extension: 9,\n      stem_down_extension: 9,\n      gracenote_stem_up_extension: -12,\n      gracenote_stem_down_extension: -12,\n      tabnote_stem_up_extension: 8,\n      tabnote_stem_down_extension: 5,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Thirty-second note\n        code_head: 'vb',\n      },\n      'h': { // Thirty-second harmonic\n        code_head: 'v22',\n      },\n      'm': { // Thirty-second muted\n        code_head: 'v3e',\n      },\n      'r': { // Thirty-second rest\n        code_head: 'v55',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0,\n      },\n      's': { // Thirty-second slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '64': {\n    common: {\n      beam_count: 4,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'va9',\n      code_flag_downstem: 'v58',\n      stem_up_extension: 13,\n      stem_down_extension: 13,\n      gracenote_stem_up_extension: -10,\n      gracenote_stem_down_extension: -10,\n      tabnote_stem_up_extension: 12,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixty-fourth note\n        code_head: 'vb',\n      },\n      'h': { // Sixty-fourth harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixty-fourth muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixty-fourth rest\n        code_head: 'v38',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0,\n      },\n      's': { // Sixty-fourth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '128': {\n    common: {\n      beam_count: 5,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v9b',\n      code_flag_downstem: 'v30',\n      stem_up_extension: 22,\n      stem_down_extension: 22,\n      gracenote_stem_up_extension: -8,\n      gracenote_stem_down_extension: -8,\n      tabnote_stem_up_extension: 21,\n      tabnote_stem_down_extension: 18,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': {  // Hundred-twenty-eight note\n        code_head: 'vb',\n      },\n      'h': { // Hundred-twenty-eight harmonic\n        code_head: 'v22',\n      },\n      'm': { // Hundred-twenty-eight muted\n        code_head: 'v3e',\n      },\n      'r': {  // Hundred-twenty-eight rest\n        code_head: 'vaa',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: 1.5,\n        line_above: 3.0,\n        line_below: 3.0,\n      },\n      's': { // Hundred-twenty-eight rest\n              // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n};\n\n// Some defaults\nFlow.TIME4_4 = {\n  num_beats: 4,\n  beat_value: 4,\n  resolution: Flow.RESOLUTION,\n};\nexport { Flow };\n\n\n\n// WEBPACK FOOTER //\n// ./src/tables.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Fraction class that represents a rational number\n//\n// @author zz85\n// @author incompleteopus (modifications)\n\n/* eslint-disable no-underscore-dangle */\n\nimport { Vex } from './vex';\nexport class Fraction {\n\n  /**\n   * GCD: Find greatest common divisor using Euclidean algorithm\n   */\n  static GCD(a, b) {\n    if (typeof a !== 'number' || typeof b !== 'number') {\n      throw new Vex.RERR('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /**\n   * LCM: Lowest common multiple\n   */\n  static LCM(a, b) {\n    return ((a * b) / Fraction.GCD(a, b));\n  }\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers\n   */\n  static LCMM(args) {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length === 1) {\n      return args[0];\n    } else if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    } else {\n      const arg0 = args[0];\n      args.shift();\n      return Fraction.LCM(arg0, Fraction.LCMM(args));\n    }\n  }\n\n  constructor(numerator, denominator) {\n    this.set(numerator, denominator);\n  }\n  set(numerator, denominator) {\n    this.numerator = numerator === undefined ? 1 : numerator;\n    this.denominator = denominator === undefined ? 1 : denominator;\n    return this;\n  }\n  value() {\n    return this.numerator / this.denominator;\n  }\n  simplify() {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n  add(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  subtract(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  multiply(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n  divide(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  // Simplifies both sides and checks if they are equal.\n  equals(compare) {\n    const a = Fraction.__compareA.copy(compare).simplify();\n    const b = Fraction.__compareB.copy(this).simplify();\n\n    return (a.numerator === b.numerator) && (a.denominator === b.denominator);\n  }\n\n  // Greater than operator.\n  greaterThan(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator > 0);\n  }\n\n  // Greater than or equals operator.\n  greaterThanEquals(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator >= 0);\n  }\n\n  // Less than operator.\n  lessThan(compare) {\n    return !(this.greaterThanEquals(compare));\n  }\n\n  // Less than or equals operator.\n  lessThanEquals(compare) {\n    return !(this.greaterThan(compare));\n  }\n\n  // Creates a new copy with this current values.\n  clone() {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  // Copies value of another Fraction into itself.\n  copy(copy) {\n    return this.set(copy.numerator, copy.denominator);\n  }\n\n  // Returns the integer component eg. (4/2) == 2\n  quotient() {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  // Returns the fraction component when reduced to a mixed number\n  fraction() {\n    return this.numerator % this.denominator;\n  }\n\n  // Returns the absolute value\n  abs() {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  // Returns a raw string representation\n  toString() {\n    return this.numerator + '/' + this.denominator;\n  }\n\n  // Returns a simplified string respresentation\n  toSimplifiedString() {\n    return Fraction.__tmp.copy(this).simplify().toString();\n  }\n\n  // Returns string representation in mixed form\n  toMixedString() {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__tmp.copy(this);\n\n    if (q < 0) {\n      f.abs().fraction();\n    } else {\n      f.fraction();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ' ' + f.toSimplifiedString();\n      }\n    } else {\n      if (f.numerator === 0) {\n        s = '0';\n      } else {\n        s = f.toSimplifiedString();\n      }\n    }\n\n    return s;\n  }\n\n  // Parses a fraction string\n  parse(str) {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = (i[1]) ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n\n// Temporary cached objects\nFraction.__compareA = new Fraction();\nFraction.__compareB = new Fraction();\nFraction.__tmp = new Fraction();\n\n\n\n// WEBPACK FOOTER //\n// ./src/fraction.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './fonts/vexflow_font';\n\nfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n  let command;\n  let x;\n  let y;\n  let i = 0;\n\n  function nextX() { return originX + outline[i++] * scaleX; }\n  function nextY() { return originY + outline[i++] * scaleY; }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        outlineFns[command](nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        outlineFns.q(nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        outlineFns.b(nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  /* Static methods used to implement loading / unloading of glyphs */\n  static loadMetrics(font, code, cache) {\n    const glyph = font.glyphs[code];\n    if (!glyph) {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline;\n\n    if (glyph.o) {\n      if (cache) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min,\n        x_max,\n        ha,\n        outline,\n      };\n    } else {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   *\n   * @param {!Object} ctx The canvas context.\n   * @param {number} x_pos X coordinate.\n   * @param {number} y_pos Y coordinate.\n   * @param {number} point The point size to use.\n   * @param {string} val The glyph code in Vex.Flow.Font.\n   * @param {boolean} nocache If set, disables caching of font outline.\n   */\n  static renderGlyph(ctx, x_pos, y_pos, point, val, nocache) {\n    const scale = point * 72.0 / (Font.resolution * 100.0);\n    const metrics = Glyph.loadMetrics(Font, val, !nocache);\n    Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n  }\n\n  static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n    });\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n    });\n\n    return new BoundingBox(\n      bboxComp.x1,\n      bboxComp.y1,\n      bboxComp.width(),\n      bboxComp.height()\n    );\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code, point, options) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      cache: true,\n      font: Font,\n    };\n\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  setOptions(options) {\n    Vex.Merge(this.options, options);\n    this.reset();\n  }\n\n  setPoint(point) { this.point = point; return this; }\n  setStave(stave) { this.stave = stave; return this; }\n  setXShift(x_shift) { this.x_shift = x_shift; return this; }\n  setYShift(y_shift) { this.y_shift = y_shift; return this; }\n\n  reset() {\n    this.scale = this.point * 72 / (this.options.font.resolution * 100);\n    this.metrics = Glyph.loadMetrics(\n      this.options.font,\n      this.code,\n      this.options.cache\n    );\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale,\n      0,\n      0\n    );\n  }\n\n  getMetrics() {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale,\n      x_max: this.metrics.x_max * this.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n    };\n  }\n\n  setOriginX(x) {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y) {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x, y) {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx, x, y) {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    Glyph.renderOutline(ctx, outline, scale, x + this.originShift.x, y + this.originShift.y);\n  }\n\n  renderToStave(x) {\n    this.checkContext();\n\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new Vex.RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    Glyph.renderOutline(this.context, outline, scale,\n        x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/glyph.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a generic base class for VexFlow, with implementations\n// of general functions and properties that can be inherited by all VexFlow elements.\n\nimport { Vex } from './vex';\nimport { Registry } from './registry';\n\nexport class Element {\n  static newID() { return 'auto' + (Element.ID++); }\n\n  constructor({ type } = {}) {\n    this.attrs = {\n      id: Element.newID(),\n      el: null,\n      type: type || 'Base',\n      classes: {},\n    };\n\n    this.boundingBox = null;\n    this.context = null;\n    this.rendered = false;\n\n    // If a default registry exist, then register with it right away.\n    if (Registry.getDefaultRegistry()) {\n      Registry.getDefaultRegistry().register(this);\n    }\n  }\n\n  // An element can have multiple class labels.\n  hasClass(className) { return (this.attrs.classes[className] === true); }\n  addClass(className) {\n    this.attrs.classes[className] = true;\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: className,\n        oldValue: null,\n      });\n    }\n    return this;\n  }\n\n  removeClass(className) {\n    delete this.attrs.classes[className];\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: null,\n        oldValue: className,\n      });\n    }\n    return this;\n  }\n\n  // This is called by the registry after the element is registered.\n  onRegister(registry) { this.registry = registry; return this; }\n  isRendered() { return this.rendered; }\n  setRendered(rendered = true) { this.rendered = rendered; return this; }\n\n  getAttributes() { return this.attrs; }\n  getAttribute(name) { return this.attrs[name]; }\n  setAttribute(name, value) {\n    const id = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    if (this.registry) {\n      // Register with old id to support id changes.\n      this.registry.onUpdate({ id, name, value, oldValue });\n    }\n    return this;\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getBoundingBox() { return this.boundingBox; }\n\n  // Validators\n  checkContext() {\n    if (!this.context) {\n      throw new Vex.RERR('NoContext', 'No rendering context attached to instance');\n    }\n    return this.context;\n  }\n}\n\nElement.ID = 1000;\n\n\n\n// WEBPACK FOOTER //\n// ./src/element.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to regiser with a registry:\n//\n// 1) Explicitly call `element.register(registry)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\n\nimport { Vex } from './vex';\n\nexport const X = Vex.MakeException('RegistryError');\n\nfunction setIndexValue(index, name, value, id, elem) {\n  if (!index[name][value]) index[name][value] = {};\n  index[name][value][id] = elem;\n}\n\nexport class Registry {\n  static get INDEXES() { return ['type']; }\n\n  constructor() {\n    this.clear();\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry) {\n    Registry.defaultRegistry = registry;\n  }\n\n  static getDefaultRegistry() {\n    return Registry.defaultRegistry;\n  }\n\n  static disableDefaultRegistry() {\n    Registry.defaultRegistry = null;\n  }\n\n  clear() {\n    // Indexes are represented as maps of maps (of maps). This allows\n    // for both multi-labeling (e.g., an element can have multiple classes)\n    // and efficient lookup.\n    this.index = {\n      id: {},\n      type: {},\n      class: {},\n    };\n    return this;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({ id, name, value, oldValue }) {\n    const elem = this.getElementById(id);\n    if (oldValue !== null && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value !== null) {\n      setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  // Register element `elem` with this registry. This adds the element to its index and watches\n  // it for attribute changes.\n  register(elem, id) {\n    id = id || elem.getAttribute('id');\n\n    if (!id) {\n      throw new X('Can\\'t add element without `id` attribute to registry', elem);\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    setIndexValue(this.index, 'id', id, id, elem);\n    Registry.INDEXES.forEach(name => {\n      this.updateIndex({ id, name, value: elem.getAttribute(name), oldValue: null });\n    });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id) {\n    return this.index.id[id] ? this.index.id[id][id] : null;\n  }\n\n  getElementsByAttribute(attrName, value) {\n    const index = this.index[attrName];\n    if (index && index[value]) {\n      return Object.keys(index[value]).map(i => index[value][i]);\n    } else {\n      return [];\n    }\n  }\n\n  getElementsByType(type) { return this.getElementsByAttribute('type', type); }\n  getElementsByClass(className) { return this.getElementsByAttribute('class', className); }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate({ id, name, value, oldValue }) {\n    function includes(array, value) {\n      return array.filter(x => x === value).length > 0;\n    }\n\n    if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n    this.updateIndex({ id, name, value, oldValue });\n    return this;\n  }\n}\n\nRegistry.defaultRegistry = null;\n\n\n\n// WEBPACK FOOTER //\n// ./src/registry.js","// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\n\nexport class BoundingBoxComputation {\n  constructor(x1, y1, x2, y2) { // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width() {\n    return this.x2 - this.x1;\n  }\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n  addPoint(x, y) {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x) {\n    this.addPoint(x, null);\n  }\n\n  addY(y) {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/boundingboxcomputation.js","// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n// Bounding boxes for interactive notation\n\nexport class BoundingBox {\n  static copy(that) {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n  getX() { return this.x; }\n  getY() { return this.y; }\n  getW() { return this.w; }\n  getH() { return this.h; }\n  setX(x) { this.x = x; return this; }\n  setY(y) { this.y = y; return this; }\n  setW(w) { this.w = w; return this; }\n  setH(h) { this.h = h; return this; }\n  move(x, y) { this.x += x; this.y += y; }\n  clone() { return BoundingBox.copy(this); }\n\n  // Merge my box with given box. Creates a bigger bounding box unless\n  // the given box is contained in this one.\n  mergeWith(boundingBox, ctx) {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n    const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    if (ctx) this.draw(ctx);\n    return this;\n  }\n\n  draw(ctx, x, y) {\n    if (!x) x = 0;\n    if (!y) y = 0;\n    ctx.rect(this.x + x, this.y + y, this.w, this.h);\n    ctx.stroke();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/boundingbox.js","export const Font = {\n\"glyphs\":{\n\"v0\":{\"x_min\":0,\"x_max\":514.5,\"ha\":525,\"o\":\"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 \"},\n\"v1\":{\"x_min\":-1.359375,\"x_max\":344.359375,\"ha\":351,\"o\":\"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 \"},\n\"v2\":{\"x_min\":-1.359375,\"x_max\":458.6875,\"ha\":468,\"o\":\"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 \"},\n\"v3\":{\"x_min\":-1.359375,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v4\":{\"x_min\":0,\"x_max\":468.21875,\"ha\":478,\"o\":\"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 \"},\n\"v5\":{\"x_min\":0,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v6\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"v7\":{\"x_min\":0,\"x_max\":442.359375,\"ha\":451,\"o\":\"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 \"},\n\"v8\":{\"x_min\":0,\"x_max\":488.640625,\"ha\":499,\"o\":\"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 \"},\n\"v9\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"va\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 \"},\n\"vb\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 \"},\n\"vc\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 \"},\n\"vf\":{\"x_min\":0,\"x_max\":370.21875,\"ha\":378,\"o\":\"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 \"},\n\"v10\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 \"},\n\"v11\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\n\"v18\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\n\"v1b\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 \"},\n\"v1d\":{\"x_min\":0,\"x_max\":619.3125,\"ha\":632,\"o\":\"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 \"},\n\"v1e\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 \"},\n\"v1f\":{\"x_min\":-340.28125,\"x_max\":338.921875,\"ha\":346,\"o\":\"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 \"},\n\"v20\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 \"},\n\"v22\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 \"},\n\"v23\":{\"x_min\":0,\"x_max\":133.390625,\"ha\":136,\"o\":\"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 \"},\n\"v25\":{\"x_min\":0,\"x_max\":318.5,\"ha\":325,\"o\":\"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 \"},\n\"v26\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v27\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 \"},\n\"v28\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 \"},\n\"v29\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 \"},\n\"v2a\":{\"x_min\":-21.78125,\"x_max\":366.140625,\"ha\":374,\"o\":\"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 \"},\n\"v2c\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 \"},\n\"v2d\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 \"},\n\"v2f\":{\"x_min\":-1.359375,\"x_max\":680.5625,\"ha\":694,\"o\":\"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 \"},\n\"v30\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 \"},\n\"v31\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 \"},\n\"v33\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 \"},\n\"v34\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\n\"v36\":{\"x_min\":-1.359375,\"x_max\":1064.390625,\"ha\":1086,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 \"},\n\"v38\":{\"x_min\":-1.359375,\"x_max\":651.96875,\"ha\":665,\"o\":\"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 \"},\n\"v39\":{\"x_min\":-171.5,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v3b\":{\"x_min\":0,\"x_max\":484.5625,\"ha\":494,\"o\":\"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 \"},\n\"v3c\":{\"x_min\":0,\"x_max\":450.53125,\"ha\":460,\"o\":\"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 \"},\n\"v3e\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 \"},\n\"v3f\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 \"},\n\"v40\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v41\":{\"x_min\":-1.359375,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 \"},\n\"v42\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 \"},\n\"v43\":{\"x_min\":-442.359375,\"x_max\":441,\"ha\":450,\"o\":\"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 \"},\n\"v44\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v45\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 \"},\n\"v46\":{\"x_min\":0,\"x_max\":627.46875,\"ha\":640,\"o\":\"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 \"},\n\"v47\":{\"x_min\":-24.5,\"x_max\":315.78125,\"ha\":322,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 \"},\n\"v49\":{\"x_min\":0,\"x_max\":630.203125,\"ha\":643,\"o\":\"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 \"},\n\"v4a\":{\"x_min\":70.78125,\"x_max\":378.390625,\"ha\":315,\"o\":\"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 \"},\n\"v4b\":{\"x_min\":0,\"x_max\":503.609375,\"ha\":514,\"o\":\"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 \"},\n\"v4d\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 \"},\n\"v4e\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\n\"v51\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\n\"v52\":{\"x_min\":-10.890625,\"x_max\":298.078125,\"ha\":294,\"o\":\"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 \"},\n\"v53\":{\"x_min\":0,\"x_max\":902.421875,\"ha\":921,\"o\":\"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 \"},\n\"v54\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 \"},\n\"v55\":{\"x_min\":0,\"x_max\":551.25,\"ha\":563,\"o\":\"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 \"},\n\"v58\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 \"},\n\"v59\":{\"x_min\":0,\"x_max\":464.140625,\"ha\":474,\"o\":\"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 \"},\n\"v5a\":{\"x_min\":-171.5,\"x_max\":170.140625,\"ha\":174,\"o\":\"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 \"},\n\"v5b\":{\"x_min\":-441,\"x_max\":439.640625,\"ha\":449,\"o\":\"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\n\"v5c\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 \"},\n\"v5d\":{\"x_min\":-1.359375,\"x_max\":592.078125,\"ha\":604,\"o\":\"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 \"},\n\"v60\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 \"},\n\"v62\":{\"x_min\":46.28125,\"x_max\":669.671875,\"ha\":563,\"o\":\"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 \"},\n\"v68\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"v6c\":{\"x_min\":-1.359375,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 \"},\n\"v6d\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 \"},\n\"v6f\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 \"},\n\"v70\":{\"x_min\":0,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 \"},\n\"v72\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 \"},\n\"v74\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 \"},\n\"v75\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 \"},\n\"v78\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\n\"v79\":{\"x_min\":-1.359375,\"x_max\":899.703125,\"ha\":918,\"o\":\"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 \"},\n\"v7a\":{\"x_min\":-1.359375,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 \"},\n\"v7c\":{\"x_min\":0,\"x_max\":300.8125,\"ha\":307,\"o\":\"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 \"},\n\"v7d\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v7f\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\n\"v80\":{\"x_min\":29.9375,\"x_max\":420.578125,\"ha\":371,\"o\":\"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 \"},\n\"v81\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 \"},\n\"v83\":{\"x_min\":-1.359375,\"x_max\":847.96875,\"ha\":865,\"o\":\"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 \"},\n\"v84\":{\"x_min\":25.859375,\"x_max\":164.6875,\"ha\":168,\"o\":\"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 \"},\n\"v86\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 \"},\n\"v8a\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 \"},\n\"v8b\":{\"x_min\":0,\"x_max\":319.859375,\"ha\":326,\"o\":\"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 \"},\n\"v8c\":{\"x_min\":-330.75,\"x_max\":329.390625,\"ha\":336,\"o\":\"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 \"},\n\"v8d\":{\"x_min\":-1.359375,\"x_max\":255.890625,\"ha\":261,\"o\":\"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 \"},\n\"v8f\":{\"x_min\":-21.78125,\"x_max\":362.0625,\"ha\":369,\"o\":\"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 \"},\n\"v90\":{\"x_min\":-171.5,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v92\":{\"x_min\":0,\"x_max\":598.890625,\"ha\":611,\"o\":\"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 \"},\n\"v93\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\n\"v94\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 \"},\n\"v95\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 \"},\n\"v97\":{\"x_min\":-228.671875,\"x_max\":227.3125,\"ha\":232,\"o\":\"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 \"},\n\"v9a\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 \"},\n\"v9b\":{\"x_min\":-24.5,\"x_max\":313.0625,\"ha\":319,\"o\":\"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 \"},\n\"v9c\":{\"x_min\":-166.0625,\"x_max\":-25.859375,\"ha\":0,\"o\":\"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 \"},\n\"v9e\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\n\"va3\":{\"x_min\":58.53125,\"x_max\":228.671875,\"ha\":294,\"o\":\"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 \"},\n\"va5\":{\"x_min\":0,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 \"},\n\"va9\":{\"x_min\":-24.5,\"x_max\":314.421875,\"ha\":321,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 \"},\n\"vaa\":{\"x_min\":-1.359375,\"x_max\":752.703125,\"ha\":768,\"o\":\"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 \"},\n\"vab\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\n\"vad\":{\"x_min\":0,\"x_max\":873.828125,\"ha\":892,\"o\":\"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 \"},\n\"vb1\":{\"x_min\":78.9375,\"x_max\":485.921875,\"ha\":417,\"o\":\"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 \"},\n\"vb3\":{\"x_min\":0,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 \"},\n\"vb4\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"vb6\":{\"x_min\":0,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 \"},\n\"vb7\":{\"x_min\":-176.9375,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"vb9\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\n\"vba\":{\"x_min\":-118.421875,\"x_max\":597.53125,\"ha\":381,\"o\":\"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 \"},\n\"vbf\":{\"x_min\":-53.078125,\"x_max\":513.140625,\"ha\":485,\"o\":\"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 \"},\n\"vc3\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 \"},\n\"vd0\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 \"},\n\"vd1\":{\"x_min\":-20,\"x_max\":320,\"ha\":257,\"o\":\"m -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 \"}\n},\n\"cssFontWeight\":\"normal\",\"ascender\":1903,\"underlinePosition\":-125,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-2065.375,\"xMin\":-695.53125,\"yMax\":1901.578125,\"xMax\":1159.671875},\n\"resolution\":1000,\"descender\":-2066,\"familyName\":\"VexFlow-18\",\"lineHeight\":4093,\"underlineThickness\":50\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fonts/vexflow_font.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Support for different rendering contexts: Canvas, Raphael\n\n/* global document: false */\n\nimport { CanvasContext } from './canvascontext';\nimport { RaphaelContext } from './raphaelcontext';\nimport { SVGContext } from './svgcontext';\nimport { Vex } from './vex';\n\nlet lastContext = null;\n\nexport class Renderer {\n  static get Backends() {\n    return {\n      CANVAS: 1,\n      RAPHAEL: 2,\n      SVG: 3,\n      VML: 4,\n    };\n  }\n\n  // End of line types\n  static get LineEndType() {\n    return {\n      NONE: 1, // No leg\n      UP: 2,   // Upward leg\n      DOWN: 3, // Downward leg\n    };\n  }\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  static get USE_CANVAS_PROXY() {\n    return false;\n  }\n\n  static get lastContext() {\n    return lastContext;\n  }\n  static set lastContext(ctx) {\n    lastContext = ctx;\n  }\n\n  static buildContext(elementId, backend, width, height, background) {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) { renderer.resize(width, height); }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getRaphaelContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n  }\n\n  static getSVGContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  static bolsterCanvasContext(ctx) {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    const methodNames = [\n      'clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle',\n      'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth',\n      'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach(methodName => {\n      ctx[methodName] = ctx[methodName] || CanvasContext.prototype[methodName];\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(elementId, backend) {\n    this.elementId = elementId;\n    if (!this.elementId) {\n      throw new Vex.RERR('BadArgument', 'Invalid id for renderer.');\n    }\n\n    this.element = document.getElementById(elementId);\n    if (!this.element) this.element = elementId;\n\n    // Verify backend and create context\n    this.ctx = null;\n    this.paper = null;\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      // Create context.\n      if (!this.element.getContext) {\n        throw new Vex.RERR('BadElement', `Can't get canvas context from element: ${elementId}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n      this.ctx = new RaphaelContext(this.element);\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new Vex.RERR('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width, height) {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new Vex.RERR(\n          'BadElement', `Can't get canvas context from element: ${this.elementId}`\n        );\n      }\n\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      this.element.width = width * devicePixelRatio;\n      this.element.height = height * devicePixelRatio;\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      this.ctx.scale(devicePixelRatio, devicePixelRatio);\n    } else {\n      this.ctx.resize(width, height);\n    }\n\n    return this;\n  }\n\n  getContext() { return this.ctx; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nexport class CanvasContext {\n  static get WIDTH() {\n    return 600;\n  }\n  static get HEIGHT() {\n    return 400;\n  }\n\n  constructor(context) {\n    // Use a name that is unlikely to clash with a canvas context\n    // property\n    this.vexFlowCanvasContext = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  clear() {\n    this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.vexFlowCanvasContext.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.vexFlowCanvasContext.fillStyle = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_fillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.vexFlowCanvasContext.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.vexFlowCanvasContext.shadowColor = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.vexFlowCanvasContext.shadowBlur = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.vexFlowCanvasContext.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(cap_type) {\n    this.vexFlowCanvasContext.lineCap = cap_type;\n    return this;\n  }\n\n  // setLineDash: is the one native method in a canvas context\n  // that begins with set, therefore we don't bolster the method\n  // if it already exists (see renderer.bolsterCanvasContext).\n  // If it doesn't exist, we bolster it and assume it's looking for\n  // a ctx.lineDash method, as previous versions of VexFlow\n  // expected.\n  setLineDash(dash) {\n    this.vexFlowCanvasContext.lineDash = dash;\n    return this;\n  }\n\n  scale(x, y) {\n    return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n  }\n\n  resize(width, height) {\n    return this.vexFlowCanvasContext.resize(parseInt(width, 10), parseInt(height, 10));\n  }\n\n  rect(x, y, width, height) {\n    return this.vexFlowCanvasContext.rect(x, y, width, height);\n  }\n\n  fillRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n  }\n\n  clearRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n  }\n\n  beginPath() {\n    return this.vexFlowCanvasContext.beginPath();\n  }\n\n  moveTo(x, y) {\n    return this.vexFlowCanvasContext.moveTo(x, y);\n  }\n\n  lineTo(x, y) {\n    return this.vexFlowCanvasContext.lineTo(x, y);\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    return this.vexFlowCanvasContext.glow();\n  }\n\n  fill() {\n    return this.vexFlowCanvasContext.fill();\n  }\n\n  stroke() {\n    return this.vexFlowCanvasContext.stroke();\n  }\n\n  closePath() {\n    return this.vexFlowCanvasContext.closePath();\n  }\n\n  measureText(text) {\n    return this.vexFlowCanvasContext.measureText(text);\n  }\n\n  fillText(text, x, y) {\n    return this.vexFlowCanvasContext.fillText(text, x, y);\n  }\n\n  save() {\n    return this.vexFlowCanvasContext.save();\n  }\n\n  restore() {\n    return this.vexFlowCanvasContext.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/canvascontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A rendering context for the Raphael backend.\n//\n// ## Warning: Deprecated for SVGContext\n// Except in instances where SVG support for IE < 9.0 is\n// needed, SVGContext is recommended.\n\nexport class RaphaelContext {\n  constructor(element) {\n    this.element = element;\n    this.paper = Raphael(element); // eslint-disable-line\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      font_family: 'Arial',\n      font_size: 8,\n      font_weight: 800,\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'font': '10pt Arial',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'font': '10pt Arial',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.state.font_family = family;\n    this.state.font_size = size;\n    this.state.font_weight = weight;\n    this.attributes.font = (this.state.font_weight || '') + ' ' +\n      (this.state.font_size * this.state.scale.x) + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.attributes.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // Empty because there is no equivalent in SVG\n  setLineDash() { return this; }\n  setLineCap() { return this; }\n\n  scale(x, y) {\n    this.state.scale = { x, y };\n    // The scale() method is deprecated as of Raphael.JS 2.0, and\n    // can no longer be used as an option in an Element.attr() call.\n    // It is preserved here for users running earlier versions of\n    // Raphael.JS, though it has no effect on the SVG output in\n    // Raphael 2 and higher.\n    this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.attributes.scale = x + ',' + y + ',0,0';\n    this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.background_attributes.font = this.state.font_size *\n      this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  clear() { this.paper.clear(); }\n\n  resize(width, height) {\n    this.element.style.width = width;\n    this.paper.setSize(width, height);\n    return this;\n  }\n\n  // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n  // is resized.\n  //\n  // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n  setViewBox(viewBox) {\n    this.paper.canvas.setAttribute('viewBox', viewBox);\n  }\n\n  rect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).\n      attr(this.attributes).\n      attr('fill', 'none').\n      attr('stroke-width', this.lineWidth);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).\n      attr(this.background_attributes);\n    return this;\n  }\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ',' +\n      y1 + ',' +\n      x2 + ',' +\n      y2 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ',' +\n      y1 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ',' + y1 + ',A' +\n      radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' +\n      x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    const out = this.paper.set();\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      for (let i = 1; i <= num_paths; i++) {\n        out.push(this.paper.path(this.path).attr({\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n          // See note in this.scale(): In Raphael the scale() method\n          // is deprecated and removed as of Raphael 2.0 and replaced\n          // by the transform() method.  It is preserved here for\n          // users with earlier versions of Raphael, but has no effect\n          // on the output SVG in Raphael 2.0+.\n          transform: this.attributes.transform,\n          scale: this.attributes.scale,\n        }));\n      }\n    }\n    return out;\n  }\n\n  fill() {\n    const elem = this.paper.path(this.path).\n      attr(this.attributes).\n      attr('stroke-width', 0);\n    this.glow(elem);\n    return this;\n  }\n\n  stroke() {\n    // The first line of code below is, unfortunately, a bit of a hack:\n    // Raphael's transform() scaling does not scale the stroke-width, so\n    // in order to scale a stroke, we have to manually scale the\n    // stroke-width.\n    //\n    // This works well so long as the X & Y states for this.scale() are\n    // relatively similar.  However, if they are very different, we\n    // would expect horizontal and vertical lines to have different\n    // stroke-widths.\n    //\n    // In the future, if we want to support very divergent values for\n    // horizontal and vertical scaling, we may want to consider\n    // implementing SVG scaling with properties of the SVG viewBox &\n    // viewPort and removing it entirely from the Element.attr() calls.\n    // This would more closely parallel the approach taken in\n    // canvascontext.js as well.\n\n    const strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n    const elem = this.paper.path(this.path).\n      attr(this.attributes).\n      attr('fill', 'none').\n      attr('stroke-width', strokeWidth);\n    this.glow(elem);\n    return this;\n  }\n\n  closePath() {\n    this.path += 'Z';\n    return this;\n  }\n\n  measureText(text) {\n    const txt = this.paper.text(0, 0, text).\n      attr(this.attributes).\n      attr('fill', 'none').\n      attr('stroke', 'none');\n    const bounds = txt.getBBox();\n    txt.remove();\n\n    return {\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n\n  fillText(text, x, y) {\n    this.paper\n      .text(\n        x + (this.measureText(text).width / 2),\n        y - (this.state.font_size / (2.25 * this.state.scale.y)),\n        text\n      )\n      .attr(this.attributes);\n\n    return this;\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        font_family: this.state.font_family,\n      },\n      attributes: {\n        font: this.attributes.font,\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state.font_family = state.state.font_family;\n    this.attributes.font = state.attributes.font;\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/raphaelcontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Gregory Ristow (2015)\n\nimport { Vex } from './vex';\n\nexport class SVGContext {\n  constructor(element) {\n    // element is the parent DOM object\n    this.element = element;\n    // Create the SVG in the SVG namespace:\n    this.svgNS = 'http://www.w3.org/2000/svg';\n    const svg = this.create('svg');\n    // Add it to the canvas:\n    this.element.appendChild(svg);\n\n    // Point to it:\n    this.svg = svg;\n    this.groups = [this.svg]; // Create the group stack\n    this.parent = this.svg;\n\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      'font-family': 'Arial',\n      'font-size': '8pt',\n      'font-weight': 'normal',\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n\n    // Test for Internet Explorer\n    this.iePolyfill();\n  }\n\n  create(svgElementType) {\n    return document.createElementNS(this.svgNS, svgElementType);\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls, id, attrs) {\n    const group = this.create('g');\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', Vex.Prefix(cls));\n    if (id) group.setAttribute('id', Vex.Prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    return group;\n  }\n\n  closeGroup() {\n    this.groups.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem) {\n    this.parent.appendChild(elem);\n  }\n\n  // Tests if the browser is Internet Explorer; if it is,\n  // we do some tricks to improve text layout.  See the\n  // note at ieMeasureTextFix() for details.\n  iePolyfill() {\n    if (typeof(navigator) !== 'undefined') {\n      this.ie = (\n        /MSIE 9/i.test(navigator.userAgent) ||\n        /MSIE 10/i.test(navigator.userAgent) ||\n        /rv:11\\.0/i.test(navigator.userAgent) ||\n        /Trident/i.test(navigator.userAgent)\n      );\n    }\n  }\n\n  // ### Styling & State Methods:\n\n  setFont(family, size, weight) {\n    // Unlike canvas, in SVG italic is handled by font-style,\n    // not weight. So: we search the weight argument and\n    // apply bold and italic to weight and style respectively.\n    let bold = false;\n    let italic = false;\n    let style = 'normal';\n    // Weight might also be a number (200, 400, etc...) so we\n    // test its type to be sure we have access to String methods.\n    if (typeof weight === 'string') {\n        // look for \"italic\" in the weight:\n      if (weight.indexOf('italic') !== -1) {\n        weight = weight.replace(/italic/g, '');\n        italic = true;\n      }\n        // look for \"bold\" in weight\n      if (weight.indexOf('bold') !== -1) {\n        weight = weight.replace(/bold/g, '');\n        bold = true;\n      }\n        // remove any remaining spaces\n      weight = weight.replace(/ /g, '');\n    }\n    weight = bold ? 'bold' : weight;\n    weight = (typeof weight === 'undefined' || weight === '') ? 'normal' : weight;\n\n    style = italic ? 'italic' : style;\n\n    const fontAttributes = {\n      'font-family': family,\n      'font-size': size + 'pt',\n      'font-weight': weight,\n      'font-style': style,\n    };\n\n    // Store the font size so that if the browser is Internet\n    // Explorer we can fix its calculations of text width.\n    this.fontSize = Number(size);\n\n    Vex.Merge(this.attributes, fontAttributes);\n    Vex.Merge(this.state, fontAttributes);\n\n    return this;\n  }\n\n  setRawFont(font) {\n    font = font.trim();\n    // Assumes size first, splits on space -- which is presently\n    // how all existing modules are calling this.\n    const fontArray = font.split(' ');\n\n    this.attributes['font-family'] = fontArray[1];\n    this.state['font-family'] = fontArray[1];\n\n    this.attributes['font-size'] = fontArray[0];\n    this.state['font-size'] = fontArray[0];\n\n    // Saves fontSize for IE polyfill\n    this.fontSize = Number(fontArray[0].match(/\\d+/));\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n  setLineDash(lineDash) {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      lineDash = lineDash.join(', ');\n      this.attributes['stroke-dasharray'] = lineDash;\n      return this;\n    } else {\n      throw new Vex.RERR('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  setLineCap(lineCap) {\n    this.attributes['stroke-linecap'] = lineCap;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- seperate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.element.style.width = width;\n    const attributes = {\n      width,\n      height,\n    };\n    this.applyAttributes(this.svg, attributes);\n    return this;\n  }\n\n  scale(x, y) {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas or Raphael contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scale = { x, y };\n    const visibleWidth = this.width / x;\n    const visibleHeight = this.height / y;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  setViewBox(...args) {\n    // Override for \"x y w h\" style:\n    if (args.length === 1) {\n      const [viewBox] = args;\n      this.svg.setAttribute('viewBox', viewBox);\n    } else {\n      const [xMin, yMin, width, height] = args;\n      const viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n\n  applyAttributes(element, attributes) {\n    Object\n      .keys(attributes)\n      .forEach(propertyName =>\n        element.setAttributeNS(null, propertyName, attributes[propertyName]));\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear() {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed:\n    this.scale(this.state.scale.x, this.state.scale.y);\n  }\n\n  // ## Rectangles:\n\n  rect(x, y, width, height, attributes) {\n    // Avoid invalid negative height attribs by\n    // flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    // Create the rect & style it:\n    const rectangle = this.create('rect');\n    if (typeof attributes === 'undefined') {\n      attributes = {\n        fill: 'none',\n        'stroke-width': this.lineWidth,\n        stroke: 'black',\n      };\n    }\n\n    Vex.Merge(attributes, {\n      x,\n      y,\n      width,\n      height,\n    });\n\n    this.applyAttributes(rectangle, attributes);\n\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    this.rect(x, y, width, height, this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    // TODO(GCR): Improve implementation of this...\n    // Currently it draws a box of the background color, rather\n    // than creating alpha through lower z-levels.\n    //\n    // See the implementation of this in SVGKit:\n    // http://sourceforge.net/projects/svgkit/\n    // as a starting point.\n    //\n    // Adding a large number of transform paths (as we would\n    // have to do) could be a real performance hit.  Since\n    // tabNote seems to be the only module that makes use of this\n    // it may be worth creating a seperate tabStave that would\n    // draw lines around locations of tablature fingering.\n    //\n\n    this.rect(x, y, width, height, this.background_attributes);\n    return this;\n  }\n\n  // ## Paths:\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ' ' +\n      y1 + ',' +\n      x2 + ' ' +\n      y2 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ' ' +\n      y1 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ' ' + y1 + ' A' +\n      radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' +\n      x2 + ' ' + y2 + 'M' + this.pen.x + ' ' + this.pen.y;\n  }\n\n  closePath() {\n    this.path += 'Z';\n\n    return this;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    // Calculate the width & paths of the glow:\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      // Stroke at varying widths to create effect of gaussian blur:\n      for (let i = 1; i <= num_paths; i++) {\n        const attributes = {\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +((sa.width * 0.4) / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n        };\n\n        const path = this.create('path');\n        attributes.d = this.path;\n        this.applyAttributes(path, attributes);\n        this.add(path);\n      }\n    }\n    return this;\n  }\n\n  fill(attributes) {\n    // If our current path is set to glow, make it glow\n    this.glow();\n\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = {};\n      Vex.Merge(attributes, this.attributes);\n      attributes.stroke = 'none';\n    }\n\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke() {\n    // If our current path is set to glow, make it glow.\n    this.glow();\n\n    const path = this.create('path');\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.fill = 'none';\n    attributes['stroke-width'] = this.lineWidth;\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text) {\n    const txt = this.create('text');\n    if (typeof(txt.getBBox) !== 'function') {\n      return { x: 0, y: 0, width: 0, height: 0 };\n    }\n\n    txt.textContent = text;\n    this.applyAttributes(txt, this.attributes);\n\n    // Temporarily add it to the document for measurement.\n    this.svg.appendChild(txt);\n\n    let bbox = txt.getBBox();\n    if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n      bbox = this.ieMeasureTextFix(bbox, text);\n    }\n\n    this.svg.removeChild(txt);\n    return bbox;\n  }\n\n  ieMeasureTextFix(bbox) {\n    // Internet Explorer over-pads text in italics,\n    // resulting in giant width estimates for measureText.\n    // To fix this, we use this formula, tested against\n    // ie 11:\n    // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n    // And then subtract the overestimate from calculated width.\n\n    const fontSize = Number(this.fontSize);\n    const m = 1.196;\n    const b = 1.9598;\n    const widthCorrection = (m * fontSize) + b;\n    const width = bbox.width - widthCorrection;\n    const height = bbox.height - 1.5;\n\n    // Get non-protected copy:\n    const box = {\n      x: bbox.x,\n      y: bbox.y,\n      width,\n      height,\n    };\n\n    return box;\n  }\n\n  fillText(text, x, y) {\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.stroke = 'none';\n    attributes.x = x;\n    attributes.y = y;\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n      },\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state['font-family'] = state.state['font-family'];\n    this.state['font-weight'] = state.state['font-weight'];\n    this.state['font-style'] = state.state['font-style'];\n    this.state['font-size'] = state.state['font-size'];\n\n    this.attributes['font-family'] = state.attributes['font-family'];\n    this.attributes['font-weight'] = state.attributes['font-weight'];\n    this.attributes['font-style'] = state.attributes['font-style'];\n    this.attributes['font-size'] = state.attributes['font-size'];\n\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/svgcontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the formatting and layout algorithms that are used\n// to position notes in a voice. The algorithm can align multiple voices both\n// within a stave, and across multiple staves.\n//\n// To do this, the formatter breaks up voices into a grid of rational-valued\n// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n// to each tick based on the widths of the notes and modifiers in that tick. This\n// establishes the smallest amount of space required for each tick.\n//\n// Finally, the formatter distributes the left over space proportionally to\n// all the ticks, setting the `x` values of the notes in each tick.\n//\n// See `tests/formatter_tests.js` for usage examples. The helper functions included\n// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\nimport { Vex } from './vex';\nimport { Beam } from './beam';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\nimport { Voice } from './voice';\nimport { StaveConnector } from './staveconnector';\nimport { StaveNote } from './stavenote';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nfunction L(...args) { if (Formatter.DEBUG) Vex.L('Vex.Flow.Formatter', args); }\n\n// Helper function to locate the next non-rest note(s).\nfunction lookAhead(notes, restLine, i, compare) {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = restLine;\n\n  // Get the rest line for next valid non-rest note group.\n  for (i += 1; i < notes.length; i += 1) {\n    const note = notes[i];\n    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = note.getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && restLine !== nextRestLine) {\n    const top = Math.max(restLine, nextRestLine);\n    const bot = Math.min(restLine, nextRestLine);\n    nextRestLine = Vex.MidLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n// Take an array of `voices` and place aligned tickables in the same context. Returns\n// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n// multiplier.\n//\n// Params:\n// * `voices`: Array of `Voice` instances.\n// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n// * `addToContext`: Function to add tickable to context.\nfunction createContexts(voices, ContextType, addToContext) {\n  if (!voices || !voices.length) {\n    throw new Vex.RERR('BadArgument', 'No voices to format');\n  }\n\n  // Find out highest common multiple of resolution multipliers.\n  // The purpose of this is to find out a common denominator\n  // for all fractional tick values in all tickables of all voices,\n  // so that the values can be expanded and the numerator used\n  // as an integer tick value.\n  const totalTicks = voices[0].getTotalTicks();\n  const resolutionMultiplier = voices.reduce((resolutionMultiplier, voice) => {\n    if (!voice.getTotalTicks().equals(totalTicks)) {\n      throw new Vex.RERR(\n        'TickMismatch', 'Voices should have same total note duration in ticks.'\n       );\n    }\n\n    if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n      throw new Vex.RERR(\n        'IncompleteVoice', 'Voice does not have enough notes.'\n      );\n    }\n\n    return Math.max(\n      resolutionMultiplier,\n      Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier())\n    );\n  }, 1);\n\n  // Initialize tick maps.\n  const tickToContextMap = {};\n  const tickList = [];\n  const contexts = [];\n\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach(voice => {\n    // Use resolution multiplier as denominator to expand ticks\n    // to suitable integer values, so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach(tickable => {\n      const integerTicks = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext = new ContextType();\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks]);\n\n      // Maintain a sorted list of tick contexts.\n      tickList.push(integerTicks);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: Vex.SortAndUnique(tickList, (a, b) => a - b, (a, b) => a === b),\n    resolutionMultiplier,\n  };\n}\n\nexport class Formatter {\n  // Helper function to layout \"notes\" one after the other without\n  // regard for proportions. Useful for tests and debugging.\n  static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n    notes.reduce((x, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const extra = tick.getExtraPx();\n      tick.setX(x + extra.left);\n\n      return x + tick.getWidth() + extra.right + paddingBetween;\n    }, x);\n  }\n\n  // Helper function to plot formatter debug info.\n  static plotDebugging(ctx, formatter, xPos, y1, y2) {\n    const x = xPos + Note.STAVEPADDING;\n    const contextGaps = formatter.contextGaps;\n    function stroke(x1, x2, color) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n\n    contextGaps.gaps.forEach(gap => {\n      stroke(x + gap.x1, x + gap.x2, '#aaa');\n      // Vex.drawDot(ctx, xPos + gap.x1, yPos, 'blue');\n      ctx.fillText(Math.round(gap.x2 - gap.x1), x + gap.x1, y2 + 12);\n    });\n\n    ctx.fillText(Math.round(contextGaps.total) + 'px', x - 20, y2 + 12);\n    ctx.setFillStyle('red');\n\n    ctx.fillText('Loss: ' +\n      formatter.lossHistory.map(loss => Math.round(loss)), x - 20, y2 + 22);\n    ctx.restore();\n  }\n\n  // Helper function to format and draw a single voice. Returns a bounding\n  // box for the notation.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n  // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n  // * `params` - One of below:\n  //    * Setting `autobeam` only `(context, stave, notes, true)` or\n  //      `(ctx, stave, notes, {autobeam: true})`\n  //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n  //    * Setting both a struct is needed `(context, stave, notes, {\n  //      autobeam: true, align_rests: true})`\n  //\n  // `autobeam` automatically generates beams for the notes.\n  // `align_rests` aligns rests with nearby notes.\n  static FormatAndDraw(ctx, stave, notes, params) {\n    const options = {\n      auto_beam: false,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(options, params);\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice], { align_rests: options.align_rests })\n      .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  // Helper function to format and draw aligned tab and stave notes in two\n  // separate staves.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n  // * `stave` - A `Stave` instance on which to render `Note`s.\n  // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n  // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n  // * `autobeam` - Automatically generate beams.\n  // * `params` - A configuration object:\n  //    * `autobeam` automatically generates beams for the notes.\n  //    * `align_rests` aligns rests with nearby notes.\n  static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n    const opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(opts, params);\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(tabnotes);\n\n      // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice], { align_rests: opts.align_rests })\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  // Auto position rests based on previous/next note positions.\n  //\n  // Params:\n  // * `notes`: An array of notes.\n  // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n  // * `alignTuplets`: If set to false, ignores tuplets.\n  static AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n    notes.forEach((note, index) => {\n      if (note instanceof StaveNote && note.isRest()) {\n        if (note.tuplet && !alignTuplets) return;\n\n        // If activated rests not on default can be rendered as specified.\n        const position = note.getGlyph().position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') return;\n\n        if (alignAllNotes || note.beam != null) {\n          // Align rests with previous/next notes.\n          const props = note.getKeyProps()[0];\n          if (index === 0) {\n            props.line = lookAhead(notes, props.line, index, false);\n            note.setKeyLine(0, props.line);\n          } else if (index > 0 && index < notes.length) {\n            // If previous note is a rest, use its line number.\n            let restLine;\n            if (notes[index - 1].isRest()) {\n              restLine = notes[index - 1].getKeyProps()[0].line;\n              props.line = restLine;\n            } else {\n              restLine = notes[index - 1].getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, restLine, index, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    });\n\n    return this;\n  }\n\n  constructor() {\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Total number of ticks in the voice.\n    this.totalTicks = new Fraction(0, 1);\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = null;\n    this.modiferContexts = null;\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n  }\n\n  // Find all the rests in each of the `voices` and align them\n  // to neighboring notes. If `alignAllNotes` is `false`, then only\n  // align non-beamed notes.\n  alignRests(voices, alignAllNotes) {\n    if (!voices || !voices.length) {\n      throw new Vex.RERR('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach(voice =>\n      Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  // Calculate the minimum width required to align and format `voices`.\n  preCalculateMinTotalWidth(voices) {\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts if not already created.\n    if (!this.tickContexts) {\n      if (!voices) {\n        throw new Vex.RERR(\n          'BadArgument', \"'voices' required to run preCalculateMinTotalWidth\"\n        );\n      }\n\n      this.createTickContexts(voices);\n    }\n\n    const { list: contextList, map: contextMap } = this.tickContexts;\n\n    // Go through each tick context and calculate total width.\n    this.minTotalWidth = contextList\n      .map(tick => {\n        const context = contextMap[tick];\n        context.preFormat();\n        return context.getWidth();\n      })\n      .reduce((a, b) => a + b, 0);\n\n    this.hasMinTotalWidth = true;\n\n    return this.minTotalWidth;\n  }\n\n  // Get minimum width required to render all voices. Either `format` or\n  // `preCalculateMinTotalWidth` must be called before this method.\n  getMinTotalWidth() {\n    if (!this.hasMinTotalWidth) {\n      throw new Vex.RERR(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  // Create `ModifierContext`s for each tick in `voices`.\n  createModifierContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      ModifierContext,\n      (tickable, context) => tickable.addToModifierContext(context)\n    );\n\n    this.modiferContexts = contexts;\n    return contexts;\n  }\n\n  // Create `TickContext`s for each tick in `voices`. Also calculate the\n  // total number of ticks in voices.\n  createTickContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      TickContext,\n      (tickable, context) => context.addTickable(tickable)\n    );\n\n    contexts.array.forEach(context => {\n      context.tContexts = contexts.array;\n    });\n\n    this.totalTicks = voices[0].getTicksUsed().clone();\n    this.tickContexts = contexts;\n    return contexts;\n  }\n\n  // This is the core formatter logic. Format voices and justify them\n  // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n  // that can't retreive widths without a canvas. This method sets the `x` positions\n  // of all the tickables/notes in the formatter.\n  preFormat(justifyWidth = 0, renderingContext, voices, stave) {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    const { list: contextList, map: contextMap, resolutionMultiplier } = contexts;\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voices && stave) {\n      voices.forEach(voice => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    const centerX = justifyWidth / 2;\n    this.minTotalWidth = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      if (renderingContext) context.setContext(renderingContext);\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.extraLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.extraLeftPx;\n    });\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return;\n\n    // Pass 2: Take leftover width, and distribute it to proportionately to\n    // all notes.\n    const remainingX = justifyWidth - this.minTotalWidth;\n    const leftoverPxPerTick = remainingX / (this.totalTicks.value() * resolutionMultiplier);\n    let spaceAccum = 0;\n\n    contextList.forEach((tick, index) => {\n      const prevTick = contextList[index - 1] || 0;\n      const context = contextMap[tick];\n      const tickSpace = (tick - prevTick) * leftoverPxPerTick;\n\n      spaceAccum += tickSpace;\n      context.setX(context.getX() + spaceAccum);\n\n      // Move center aligned tickables to middle\n      context\n        .getCenterAlignedTickables()\n        .forEach(tickable => { // eslint-disable-line\n          tickable.center_x_shift = centerX - context.getX();\n        });\n    });\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return;\n\n    this.justifyWidth = justifyWidth;\n    this.lossHistory = [];\n    this.evaluate();\n  }\n\n  // Calculate the total cost of this formatting decision.\n  evaluate() {\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = { total: 0, gaps: [] };\n    this.tickContexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = this.tickContexts.list[index - 1];\n      const prevContext = this.tickContexts.map[prevTick];\n      const context = this.tickContexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n\n      const insideRightEdge = prevContext.getX() + prevMetrics.width;\n      const insideLeftEdge = context.getX();\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    const durationStats = this.durationStats = {};\n\n    function updateStats(duration, space) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = { mean: space, count: 1 };\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note, i, notes) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.noteWidth +\n            metrics.modRightPx + metrics.extraRightPx;\n        let space = 0;\n\n        if (i < (notes.length - 1)) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() -\n            rightMetrics.modLeftPx - rightMetrics.extraLeftPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.space.mean = durationStats[duration].mean;\n\n        totalDeviation += Math.pow(durationStats[duration].mean, 2);\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this;\n  }\n\n  // Run a single iteration of rejustification. At a high level, this method calculates\n  // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n  // attempt to reduce the cost. You can call this method multiple times until it finds\n  // and oscillates around a global minimum.\n  tune() {\n    const sum = (means) => means.reduce((a, b) => a + b);\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current, prev, next, shift) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.tickContexts.list.forEach((tick, index, list) => {\n      const context = this.tickContexts.map[tick];\n      const prevContext = (index > 0) ? this.tickContexts.map[list[index - 1]] : null;\n      const nextContext = (index < list.length - 1) ? this.tickContexts.map[list[index + 1]] : null;\n\n      move(context, prevContext, nextContext, shift);\n\n      const cost = -sum(\n        context.getTickables().map(t => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      const minShift = Math.min(5, Math.abs(shift));\n      shift = shift > 0 ? minShift : -minShift;\n    });\n\n    return this.evaluate();\n  }\n\n  // This is the top-level call for all formatting logic completed\n  // after `x` *and* `y` values have been computed for the notes\n  // in the voices.\n  postFormat() {\n    const postFormatContexts = (contexts) =>\n      contexts.list.forEach(tick => contexts.map[tick].postFormat());\n\n    postFormatContexts(this.modiferContexts);\n    postFormatContexts(this.tickContexts);\n\n    return this;\n  }\n\n  // Take all `voices` and create `ModifierContext`s out of them. This tells\n  // the formatters that the voices belong on a single stave.\n  joinVoices(voices) {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  // Align rests in voices, justify the contexts, and position the notes\n  // so voices are aligned and ready to render onto the stave. This method\n  // mutates the `x` positions of all tickables in `voices`.\n  //\n  // Voices are full justified to fit in `justifyWidth` pixels.\n  //\n  // Set `options.context` to the rendering context. Set `options.align_rests`\n  // to true to enable rest alignment.\n  format(voices, justifyWidth, options) {\n    const opts = {\n      align_rests: false,\n      context: null,\n      stave: null,\n    };\n\n    Vex.Merge(opts, options);\n    this.voices = voices;\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred\n  // from the `stave`.\n  formatToStave(voices, stave, options) {\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n    L('Formatting voices to width: ', justifyWidth);\n    const opts = { context: stave.getContext() };\n    Vex.Merge(opts, options);\n    return this.format(voices, justifyWidth, opts);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/formatter.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `Beams` that span over a set of `StemmableNotes`.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tuplet } from './tuplet';\nimport { Stem } from './stem';\n\nfunction calculateStemDirection(notes) {\n  let lineSum = 0;\n  notes.forEach(note => {\n    if (note.keyProps) {\n      note.keyProps.forEach(keyProp => {\n        lineSum += (keyProp.line - 3);\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nconst getStemSlope = (firstNote, lastNote) => {\n  const firstStemTipY = firstNote.getStemExtents().topY;\n  const firstStemX = firstNote.getStemX();\n  const lastStemTipY = lastNote.getStemExtents().topY;\n  const lastStemX = lastNote.getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n};\n\nexport class Beam extends Element {\n  // Gets the default beam groups for a provided time signature.\n  // Attempts to guess if the time signature is not found in table.\n  // Currently this is fairly naive.\n  static getDefaultBeamGroups(time_sig) {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map(group => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  // A helper function to automatically build basic beams for a voice. For more\n  // complex auto-beaming use `Beam.generateBeams()`.\n  //\n  // Parameters:\n  // * `voice` - The voice to generate the beams for\n  // * `stem_direction` - A stem direction to apply to the entire voice\n  // * `groups` - An array of `Fraction` representing beat groupings for the beam\n  static applyAndGetBeams(voice, stem_direction, groups) {\n    return Beam.generateBeams(voice.getTickables(), {\n      groups,\n      stem_direction,\n    });\n  }\n\n  // A helper function to autimatically build beams for a voice with\n  // configuration options.\n  //\n  // Example configuration object:\n  //\n  // ```\n  // config = {\n  //   groups: [new Vex.Flow.Fraction(2, 8)],\n  //   stem_direction: -1,\n  //   beam_rests: true,\n  //   beam_middle_only: true,\n  //   show_stemlets: false\n  // };\n  // ```\n  //\n  // Parameters:\n  // * `notes` - An array of notes to create the beams for\n  // * `config` - The configuration object\n  //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n  //    * `stem_direction` - Set to apply the same direction to all notes\n  //    * `beam_rests` - Set to `true` to include rests in the beams\n  //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n  //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n  //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n  //\n  static generateBeams(notes, config) {\n    if (!config) config = {};\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map(group => {\n      if (!group.multiply) {\n        throw new Vex.RuntimeError('InvalidBeamGroups',\n          'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(Flow.RESOLUTION, 1);\n    });\n\n    const unprocessedNotes = notes;\n    let currentTickGroup = 0;\n    let noteGroups       = [];\n    let currentGroup     = [];\n\n    function getTotalTicks(vf_notes) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup = [];\n\n      unprocessedNotes.forEach(unprocessedNote => {\n        nextGroup    = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = Flow.durationToNumber(unprocessedNote.duration) < 8;\n        if (unbeamable && unprocessedNote.tuplet) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            nextGroup.push(currentGroup.pop());\n          }\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n\n    function getBeamGroups() {\n      return noteGroups.filter(group => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach(note => {\n            if (note.getIntrinsicTicks() >= Flow.durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups = [];\n      noteGroups.forEach(group => {\n        let tempGroup = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest = (config.beam_rests &&\n            config.beam_middle_only && note.isRest() && isFirstOrLast);\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote &&\n              !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = prevNote.getStemDirection();\n            const currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest ||\n                            breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach(group => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group, direction) {\n      group.forEach(note => {\n        note.setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach(group => {\n        let tuplet = null;\n        group.forEach(note => {\n          if (note.tuplet && (tuplet !== note.tuplet)) {\n            tuplet = note.tuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams = [];\n    beamedNoteGroups.forEach(group => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = Flow.durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach(tuplet => {\n      // Set the tuplet location based on the stem direction\n      const direction = tuplet.notes[0].stem_direction === Stem.DOWN ?\n        Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i];\n        if (note.beam === null) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes, auto_stem) {\n    super();\n    this.setAttribute('type', 'Beam');\n\n    if (!notes || notes === []) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= Flow.durationToTicks('4')) {\n      throw new Vex.RuntimeError('BadArguments',\n          'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = Stem.UP;\n\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (note.hasStem()) {\n        this.stem_direction = note.getStemDirection();\n        break;\n      }\n    }\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n    if (auto_stem && notes[0].getCategory() === 'stavenotes')  {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + note.stem_direction, 0);\n\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        note.setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    };\n  }\n\n  // Get the notes in this beam\n  getNotes() { return this.notes; }\n\n  // Get the max number of beams in the set of notes\n  getBeamCount() {\n    const beamCounts =  this.notes.map(note => note.getGlyph().beam_count);\n\n    const maxBeamCount =  beamCounts.reduce((max, beamCount) => beamCount > max ? beamCount : max);\n\n    return maxBeamCount;\n  }\n\n  // Set which note `indices` to break the secondary beam at\n  breakSecondaryAt(indices) {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  // Return the y coordinate for linear function\n  getSlopeY(x, first_x_px, first_y_px, slope) {\n    return first_y_px + ((x - first_x_px) * slope);\n  }\n\n  // Calculate the best possible slope for the provided notes\n  calculateSlope() {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: { max_slope, min_slope, slope_iterations, slope_cost },\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        const adjustedStemTipY = this.getSlopeY(\n          note.getStemX(),\n          firstNote.getStemX(),\n          firstNote.getStemExtents().topY,\n          slope\n        ) + yShiftTemp;\n\n        const stemTipY = note.getStemExtents().topY;\n        // beam needs to be shifted up to accommodate note\n        if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n          const diff = Math.abs(stemTipY - adjustedStemTipY);\n          yShiftTemp += diff * -stemDirection;\n          totalStemExtension += diff * i;\n        } else { // beam overshoots note, account for the difference\n          totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  // Calculate a slope and y-shift for flat beams\n  calculateFlatSlope() {\n    const {\n      notes, stem_direction,\n      render_options: { beam_width, min_flat_beam_offset, flat_beam_offset },\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0;  // Store the highest or lowest note here\n    let extremeBeamCount = 0;  // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = note.getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      } else if (\n        stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)\n      ) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + (extremeBeamCount * beamWidth);\n    const newOffset = extremeY + (extremeTest * -stem_direction);\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  // Create new stems for the notes in the beam, so that each stem\n  // extends into the beams.\n  applyStemExtensions() {\n    const {\n      notes, slope, y_shift, stem_direction, beam_count,\n      render_options: {\n        show_stemlets,\n        flat_beam_offset,\n        flat_beams,\n        stemlet_extension,\n        beam_width,\n      },\n    } = this;\n\n    const firstNote = notes[0];\n    let firstStemTipY = firstNote.getStemExtents().topY;\n\n    // If rendering flat beams, and an offset exists, set the y-coordinat`e to\n    //  the offset so the stems all end at the beam offset.\n    if (flat_beams && flat_beam_offset) {\n      firstStemTipY = flat_beam_offset;\n    }\n    const firstStemX = firstNote.getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stemX = note.getStemX();\n      const { topY: stemTipY } = note.getStemExtents();\n      const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n      const preBeamExtension = note.getStem().getExtension();\n      const beamExtension = stem_direction === Stem.UP\n        ? stemTipY - beamedStemTipY\n        : beamedStemTipY - stemTipY;\n\n      note.stem.setExtension(preBeamExtension + beamExtension);\n      note.stem.renderHeightAdjustment = -Stem.WIDTH / 2;\n\n      if (note.isRest() && show_stemlets) {\n        const beamWidth = beam_width;\n        const totalBeamWidth = ((beam_count - 1) * beamWidth * 1.5) + beamWidth;\n        note.stem\n          .setVisibility(true)\n          .setStemlet(true, totalBeamWidth + stemlet_extension);\n      }\n    }\n  }\n\n  // Get the x coordinates for the beam lines of specific `duration`\n  getBeamLines(duration) {\n    const beam_lines = [];\n    let beam_started = false;\n    let current_beam = null;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.ticks.value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >=\n            this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n\n      const stem_x = note.getStemX() - (Stem.WIDTH / 2);\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const next_note = this.notes[i + 1];\n      const beam_next = next_note && next_note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !beam_next && current_beam.end === null) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = { start: stem_x, end: null };\n          beam_started = true;\n          if (!beam_next) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === null) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  // Render the stems for each notes\n  drawStems() {\n    this.notes.forEach(note => {\n      if (note.getStem()) {\n        note.getStem().setContext(this.context).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  drawBeamLines() {\n    this.checkContext();\n\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n\n    const firstStemX = firstNote.getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n        this.context.beginPath();\n        this.context.moveTo(startBeamX, startBeamY);\n        this.context.lineTo(startBeamX, startBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY);\n        this.context.closePath();\n        this.context.fill();\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  // Pre-format the beam\n  preFormat() { return this; }\n\n  // Post-format the beam. This can only be called after\n  // the notes in the beam have both `x` and `y` values. ie: they've\n  // been formatted and have staves\n  postFormat() {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  // Render the beam to the canvas context\n  draw() {\n    this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n    this.drawStems();\n    this.drawBeamLines();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/beam.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\nexport class Tuplet extends Element {\n  static get LOCATION_TOP() {\n    return 1;\n  }\n  static get LOCATION_BOTTOM() {\n    return -1;\n  }\n  static get NESTING_OFFSET() {\n    return 15;\n  }\n\n  constructor(notes, options) {\n    super();\n    this.setAttribute('type', 'Tuplet');\n    if (!notes || !notes.length) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for tuplet.');\n    }\n\n    this.options = Vex.Merge({}, options);\n    this.notes = notes;\n    this.num_notes = 'num_notes' in this.options ?\n      this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied ||\n      this.options.beats_occupied ||\n      2;\n    if ('bracketed' in this.options) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed =\n        notes.some(note => note.beam === null);\n    }\n\n    this.ratioed = 'ratioed' in this.options ?\n      this.options.ratioed :\n      (Math.abs(this.notes_occupied - this.num_notes) > 1);\n    this.point = 28;\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n    this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed) {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed) {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet to be displayed either on the top or bottom of the stave\n   */\n  setTupletLocation(location) {\n    if (!location) {\n      location = Tuplet.LOCATION_TOP;\n    } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      throw new Vex.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes() {\n    return this.notes;\n  }\n\n  getNoteCount() {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning() {\n    const msg = [\n      'beats_occupied has been deprecated as an ',\n      'option for tuplets. Please use notes_occupied ',\n      'instead. Calls to getBeatsOccupied and ',\n      'setBeatsOccupied should now be routed to ',\n      'getNotesOccupied and setNotesOccupied instead',\n    ].join('');\n\n    if (console && console.warn) { // eslint-disable-line no-console\n      console.warn(msg); // eslint-disable-line no-console\n    } else if (console) {\n      console.log(msg); // eslint-disable-line no-console\n    }\n  }\n\n  getBeatsOccupied() {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats) {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied() {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes) {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs() {\n    this.num_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.num_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount() {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note, location) {\n      return note.tupletStack.filter(tuplet => tuplet.location === location).length;\n    }\n\n    this.notes.forEach(note => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition() {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset =\n      this.getNestedTupletCount() *\n      Tuplet.NESTING_OFFSET *\n      -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.getStave().getYForLine(0) - 15;\n      // y_pos = first_note.getStemExtents().topY - 10;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const top_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().topY - 10\n          : this.notes[i].getStemExtents().baseY - 20;\n\n        if (top_y < y_pos) {\n          y_pos = top_y;\n        }\n      }\n    } else {\n      y_pos = first_note.getStave().getYForLine(4) + 20;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().baseY + 20\n          : this.notes[i].getStemExtents().topY + 10;\n        if (bottom_y > y_pos) {\n          y_pos = bottom_y;\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0];\n    const last_note = this.notes[this.notes.length - 1];\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width, glyph) => width + glyph.getMetrics().width;\n\n    // calculate total width of tuplet notation\n    let width = this.num_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + (this.width / 2);\n    const notation_start_x = notation_center_x - (width / 2);\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        this.context.fillRect(\n          this.x_pos + this.width / 2 + width / 2 + 5,\n          this.y_pos,\n          line_width,\n          1\n        );\n        this.context.fillRect(\n          this.x_pos,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n        this.context.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    let x_offset = 0;\n    this.num_glyphs.forEach(glyph => {\n      glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n      x_offset += glyph.getMetrics().width;\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach(glyph => {\n        glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n        x_offset += glyph.getMetrics().width;\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tuplet.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\nfunction L(...args) { if (Stem.DEBUG) Vex.L('Vex.Flow.Stem', args); }\n\nexport class Stem extends Element {\n  static get CATEGORY() { return 'stem'; }\n\n  // Stem directions\n  static get UP() {\n    return 1;\n  }\n  static get DOWN() {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH() {\n    return Flow.STEM_WIDTH;\n  }\n  static get HEIGHT() {\n    return Flow.STEM_HEIGHT;\n  }\n\n  constructor(options = {}) {\n    super();\n    this.setAttribute('type', 'Stem');\n\n    // Default notehead x bounds\n    this.x_begin = options.x_begin || 0;\n    this.x_end = options.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options.y_top || 0;\n    this.y_bottom = options.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options.hide || false;\n\n    this.isStemlet = options.isStemlet || false;\n    this.stemletHeight = options.stemletHeight || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin, x_end) {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction) { this.stem_direction = direction; }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext) { this.stem_extension = ext; }\n  getExtension() { return this.stem_extension; }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top, y_bottom) {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // The category of the object\n  getCategory() { return Stem.CATEGORY; }\n\n  // Gets the entire height for the stem\n  getHeight() {\n    return ((this.y_bottom - this.y_top) * this.stem_direction) +\n           ((Stem.HEIGHT + this.stem_extension) * this.stem_direction);\n  }\n  getBoundingBox() {\n    throw new Vex.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents() {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + (stemHeight * -this.stem_direction);\n\n    return { topY: stemTipY, baseY: outerMostNoteheadY };\n  }\n\n  // set the draw style of a stem:\n  setStyle(style) { this.style = style; return this; }\n  getStyle() { return this.style; }\n\n  setVisibility(isVisible) {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet, stemletHeight) {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context) {\n    const style = this.getStyle();\n    if (style) {\n      if (style.shadowColor) context.setShadowColor(style.shadowColor);\n      if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n      if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    }\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  draw() {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet\n      ? stemHeight - this.stemletHeight * this.stem_direction\n      : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle(ctx);\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - (this.renderHeightAdjustment * stem_direction));\n    ctx.stroke();\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stem.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the main Voice class. It's mainly a container\n// object to group `Tickables` for formatting.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Voice extends Element {\n  // Modes allow the addition of ticks in three different ways:\n  //\n  // STRICT: This is the default. Ticks must fill the voice.\n  // SOFT:   Ticks can be added without restrictions.\n  // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n  //         tick length.\n  static get Mode() {\n    return {\n      STRICT: 1,\n      SOFT: 2,\n      FULL: 3,\n    };\n  }\n\n  constructor(time) {\n    super();\n    this.setAttribute('type', 'Voice');\n\n    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n    if (typeof(time) === 'string') {\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        time = {\n          num_beats: match[1],\n          beat_value: match[2],\n          resolution: Flow.RESOLUTION,\n        };\n      }\n    }\n\n    // Default time sig is 4/4\n    this.time = Vex.Merge({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }, time);\n\n    // Recalculate total ticks.\n    this.totalTicks = new Fraction(\n      this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n    this.resolutionMultiplier = 1;\n\n    // Set defaults\n    this.tickables = [];\n    this.ticksUsed = new Fraction(0, 1);\n    this.smallestTickCount = this.totalTicks.clone();\n    this.largestTickWidth = 0;\n    this.stave = null;\n    // Do we care about strictly timed notes\n    this.mode = Voice.Mode.STRICT;\n\n    // This must belong to a VoiceGroup\n    this.voiceGroup = null;\n  }\n\n  // Get the total ticks in the voice\n  getTotalTicks() { return this.totalTicks; }\n\n  // Get the total ticks used in the voice by all the tickables\n  getTicksUsed() { return this.ticksUsed; }\n\n  // Get the largest width of all the tickables\n  getLargestTickWidth() { return this.largestTickWidth; }\n\n  // Get the tick count for the shortest tickable\n  getSmallestTickCount() { return this.smallestTickCount; }\n\n  // Get the tickables in the voice\n  getTickables() { return this.tickables; }\n\n  // Get/set the voice mode, use a value from `Voice.Mode`\n  getMode() { return this.mode; }\n  setMode(mode) { this.mode = mode; return this; }\n\n  // Get the resolution multiplier for the voice\n  getResolutionMultiplier() { return this.resolutionMultiplier; }\n\n  // Get the actual tick resolution for the voice\n  getActualResolution() { return this.resolutionMultiplier * this.time.resolution; }\n\n  // Set the voice's stave\n  setStave(stave) {\n    this.stave = stave;\n    this.boundingBox = null; // Reset bounding box so we can reformat\n    return this;\n  }\n\n  // Get the bounding box for the voice\n  getBoundingBox() {\n    let stave;\n    let boundingBox;\n    let bb;\n    let i;\n\n    if (!this.boundingBox) {\n      if (!this.stave) throw new Vex.RERR('NoStave', \"Can't get bounding box without stave.\");\n      stave = this.stave;\n      boundingBox = null;\n\n      for (i = 0; i < this.tickables.length; ++i) {\n        this.tickables[i].setStave(stave);\n\n        bb = this.tickables[i].getBoundingBox();\n        if (!bb) continue;\n\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  // Every tickable must be associated with a voiceGroup. This allows formatters\n  // and preformatters to associate them with the right modifierContexts.\n  getVoiceGroup() {\n    if (!this.voiceGroup) {\n      throw new Vex.RERR('NoVoiceGroup', 'No voice group for voice.');\n    }\n\n    return this.voiceGroup;\n  }\n\n  // Set the voice group\n  setVoiceGroup(g) { this.voiceGroup = g; return this; }\n\n  // Set the voice mode to strict or soft\n  setStrict(strict) {\n    this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n    return this;\n  }\n\n  // Determine if the voice is complete according to the voice mode\n  isComplete() {\n    if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  // Add a tickable to the voice\n  addTickable(tickable) {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n\n      if (\n        (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.totalTicks.subtract(ticks);\n        throw new Vex.RERR('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  // Add an array of tickables to the voice.\n  addTickables(tickables) {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n\n    return this;\n  }\n\n  // Preformats the voice by applying the voice's stave to each note.\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    this.tickables.forEach((tickable) => {\n      if (!tickable.getStave()) {\n        tickable.setStave(this.stave);\n      }\n    });\n\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the voice onto the canvas `context` and an optional `stave`.\n  // If `stave` is omitted, it is expected that the notes have staves\n  // already set.\n  draw(context = this.context, stave = this.stave) {\n    this.setRendered();\n    let boundingBox = null;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n\n      // Set the stave if provided\n      if (stave) tickable.setStave(stave);\n\n      if (!tickable.getStave()) {\n        throw new Vex.RuntimeError(\n          'MissingStave', 'The voice cannot draw tickables without staves.'\n        );\n      }\n\n      if (i === 0) boundingBox = tickable.getBoundingBox();\n\n      if (i > 0 && boundingBox) {\n        const tickable_bb = tickable.getBoundingBox();\n        if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n      }\n\n      tickable.setContext(context);\n      tickable.draw();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/voice.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Glyph } from './glyph';\n\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n  if (\n    type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n    type !== StaveConnector.type.BOLD_DOUBLE_RIGHT\n  ) {\n    throw new Vex.RERR(\n      'InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.'\n    );\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\nexport class StaveConnector extends Element {\n  // SINGLE_LEFT and SINGLE are the same value for compatibility\n  // with older versions of vexflow which didn't have right sided\n  // stave connectors\n  static get type() {\n    return {\n      SINGLE_RIGHT: 0,\n      SINGLE_LEFT: 1,\n      SINGLE: 1,\n      DOUBLE: 2,\n      BRACE: 3,\n      BRACKET: 4,\n      BOLD_DOUBLE_LEFT: 5,\n      BOLD_DOUBLE_RIGHT: 6,\n      THIN_DOUBLE: 7,\n      NONE: 8,\n    };\n  }\n\n  static get typeString() {\n    return {\n      singleRight: StaveConnector.type.SINGLE_RIGHT,\n      singleLeft: StaveConnector.type.SINGLE_LEFT,\n      single: StaveConnector.type.SINGLE,\n      double: StaveConnector.type.DOUBLE,\n      brace: StaveConnector.type.BRACE,\n      bracket: StaveConnector.type.BRACKET,\n      boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n      boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n      thinDouble: StaveConnector.type.THIN_DOUBLE,\n      none: StaveConnector.type.NONE,\n    };\n  }\n\n  constructor(top_stave, bottom_stave) {\n    super();\n    this.setAttribute('type', 'StaveConnector');\n\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  setType(type) {\n    type = typeof(type) === 'string'\n      ? StaveConnector.typeString[type]\n      : type;\n\n    if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  setText(text, options) {\n    this.texts.push({\n      content: text,\n      options: Vex.Merge({ shift_x: 0, shift_y: 0 }, options),\n    });\n    return this;\n  }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setXShift(x_shift) {\n    if (typeof x_shift !== 'number') {\n      throw Vex.RERR('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) +\n      this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector = (\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE\n    );\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.width;\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - (0.90 * width);\n        const cpy1 = y1 + (0.2 * attachment_height);\n        const cpx2 = x1 + (1.10 * width);\n        const cpy2 = y2 - (0.135 * attachment_height);\n        const cpx3 = cpx2;\n        const cpy3 = y2 + (0.135 * attachment_height);\n        const cpx4 = cpx1;\n        const cpy4 = y3 - (0.2 * attachment_height);\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + (0.40 * width);\n        const cpy6 = y2 + (0.135 * attachment_height);\n        const cpx7 = cpx6;\n        const cpy7 = y2 - (0.135 * attachment_height);\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      } case StaveConnector.type.BRACKET:\n        topY -= 4;\n        botY += 4;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY - 3, 40, 'v1b', true);\n        Glyph.renderGlyph(ctx, topX - 5, botY + 3, 40, 'v10', true);\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidType', `The provided StaveConnector.type (${this.type}) is invalid`\n        );\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 +\n        text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staveconnector.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { BoundingBox } from './boundingbox';\nimport { Stem } from './stem';\nimport { NoteHead } from './notehead';\nimport { StemmableNote } from './stemmablenote';\nimport { Modifier } from './modifier';\nimport { Dot } from './dot';\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\nfunction L(...args) { if (StaveNote.DEBUG) Vex.L('Vex.Flow.StaveNote', args); }\n\nconst getStemAdjustment = (note) => Stem.WIDTH / (2 * -note.getStemDirection());\n\nconst isInnerNoteIndex = (note, index) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n  const delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + (delta));\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n  const delta = rest.line - Vex.MidLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static get CATEGORY() { return 'stavenotes'; }\n  static get STEM_UP() { return Stem.UP; }\n  static get STEM_DOWN() { return Stem.DOWN; }\n  static get DEFAULT_LEDGER_LINE_OFFSET() { return 3; }\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  static format(notes, state) {\n    if (!notes || notes.length < 2) return false;\n\n    // FIXME: VexFlow will soon require that a stave be set before formatting.\n    // Which, according to the below condition, means that following branch will\n    // always be taken and the rest of this function is dead code.\n    //\n    // Problematically, `Formatter#formatByY` was not designed to work for more\n    // than 2 voices (although, doesn't throw on this condition, just tries\n    // to power through).\n    //\n    // Based on the above:\n    //   * 2 voices can be formatted *with or without* a stave being set but\n    //     the output will be different\n    //   * 3 voices can only be formatted *without* a stave\n    if (notes[0].getStave()) {\n      return StaveNote.formatByY(notes, state);\n    }\n\n    const notesList = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      const props = notes[i].getKeyProps();\n      const line = props[0].line;\n      let minL = props[props.length - 1].line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinumumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyph.line_above;\n        minL = line - notes[i].glyph.line_below;\n      } else {\n        maxL = stemDirection === 1\n          ? props[props.length - 1].line + stemMax\n          : props[props.length - 1].line;\n\n        minL = stemDirection === 1\n          ? props[0].line\n          : props[0].line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    const voices = notesList.length;\n\n    let noteU = notesList[0];\n    const noteM = voices > 2 ? notesList[1] : null;\n    let noteL = voices > 2 ? notesList[2] : notesList[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n    let stemDelta;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stemDirection === noteL.stemDirection &&\n          noteU.minLine <= noteL.maxLine) {\n        if (!noteU.isrest) {\n          stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n          stemDelta = Math.max(stemDelta, noteU.stemMin);\n          noteU.minLine = noteU.line - stemDelta;\n          noteU.note.setStemLength(stemDelta * 10);\n        }\n      }\n      if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          xShift = voiceXShift;\n          if (noteU.stemDirection === noteL.stemDirection) {\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(xShift + 3);\n          } else {\n            // shift lower voice right\n            noteL.note.setXShift(xShift);\n          }\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n      if (!noteM.isrest) {\n        stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n        stemDelta = Math.max(stemDelta, noteM.stemMin);\n        noteM.minLine = noteM.line - stemDelta;\n        noteM.note.setStemLength(stemDelta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n           // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 3;    // shift middle rest right\n          noteM.note.setXShift(xShift);\n        }\n         // format complete\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n\n    // If middle voice intersects upper or lower voice\n    if ((!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n        (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)) {\n      xShift = voiceXShift + 3;      // shift middle note right\n      noteM.note.setXShift(xShift);\n    }\n\n    return true;\n  }\n\n  static formatByY(notes, state) {\n    // NOTE: this function does not support more than two voices per stave\n    // use with care.\n    let hasStave = true;\n\n    for (let i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != null;\n    }\n\n    if (!hasStave) {\n      throw new Vex.RERR(\n        'Stave Missing',\n        'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!'\n      );\n    }\n\n    let xShift = 0;\n\n    for (let i = 0; i < notes.length - 1; i++) {\n      let topNote = notes[i];\n      let bottomNote = notes[i + 1];\n\n      if (topNote.getStemDirection() === Stem.DOWN) {\n        topNote = notes[i + 1];\n        bottomNote = notes[i];\n      }\n\n      const topKeys = topNote.getKeyProps();\n      const bottomKeys = bottomNote.getKeyProps();\n\n      const HALF_NOTEHEAD_HEIGHT = 0.5;\n\n      // `keyProps` and `stave.getYForLine` have different notions of a `line`\n      // so we have to convert the keyProps value by subtracting 5.\n      // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n      //\n      // We also extend the y for each note by a half notehead because the\n      // notehead's origin is centered\n      const topNotBottomY = topNote\n        .getStave()\n        .getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\n      const bottomNoteTopY = bottomNote\n        .getStave()\n        .getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\n      const areNotesColliding = bottomNoteTopY - topNotBottomY < 0;\n\n      if (areNotesColliding) {\n        xShift = topNote.getVoiceShiftWidth() + 2;\n        bottomNote.setXShift(xShift);\n      }\n    }\n\n    state.right_shift += xShift;\n  }\n\n  static postFormat(notes) {\n    if (!notes) return false;\n\n    notes.forEach(note => note.postFormat());\n\n    return true;\n  }\n\n  constructor(noteStruct) {\n    super(noteStruct);\n    this.setAttribute('type', 'StaveNote');\n\n    this.keys = noteStruct.keys;\n    this.clef = noteStruct.clef;\n    this.octave_shift = noteStruct.octave_shift;\n    this.beam = null;\n\n    // Pull note rendering properties\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // per-pitch properties\n    this.keyProps = [];\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this.note_heads = [];\n    this.modifiers = [];\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: noteStruct.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET,\n    });\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction);\n    }\n    this.reset();\n    this.buildFlag();\n  }\n\n  reset() {\n    super.reset();\n    this.buildNoteHeads();\n    if (this.stave) {\n      this.note_heads.forEach(head => head.setStave(this.stave));\n    }\n    this.calcExtraPx();\n  }\n\n  getCategory() { return StaveNote.CATEGORY; }\n\n  // Builds a `Stem` for the note\n  buildStem() {\n    const glyph = this.getGlyph();\n    const yExtend = glyph.code_head === 'v95' || glyph.code_head === 'v3e' ? -4 : 0;\n\n    this.setStem(new Stem({\n      yExtend,\n      hide: !!this.isRest(),\n    }));\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads() {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = null;\n    let lineDiff = null;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start;\n    let end;\n    let step;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else if (stemDirection === Stem.DOWN) {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        line: noteProps.line,\n      });\n\n      this.note_heads[i] = notehead;\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem() {\n    // Figure out optimal stem direction based on given notes\n    this.minLine = this.keyProps[0].line;\n    this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n    const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n    this.setStemDirection(stemDirection);\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps() {\n    let lastLine = null;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if (this.glyph.rest) this.glyph.position = key;\n\n      const options = { octave_shift: this.octave_shift || 0 };\n      const props = Flow.keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new Vex.RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n\n    // Sort the notes from lowest line to highest line\n    lastLine = -Infinity;\n    this.keyProps.forEach(key => {\n      if (key.line < lastLine) {\n        Vex.W(\n          'Unsorted keys in note will be sorted. ' +\n          'See https://github.com/0xfe/vexflow/issues/104 for details.'\n        );\n      }\n      lastLine = key.line;\n    });\n    this.keyProps.sort((a, b) => a.line - b.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const { width: w, modLeftPx, extraLeftPx } = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - extraLeftPx;\n\n    let minY = 0;\n    let maxY = 0;\n    const halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = Flow.durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - (this.glyph.line_above * lineSpacing);\n        maxY = y + (this.glyph.line_below * lineSpacing);\n      }\n    } else if (this.glyph.stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.stem_direction;\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = null;\n      maxY = null;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the top or bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note\n  getLineNumber(isTopNote) {\n    if (!this.keyProps.length) {\n      throw new Vex.RERR(\n        'NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\"\n      );\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  // Determine if current note is a rest\n  isRest() { return this.glyph.rest; }\n\n  // Determine if the current note is a chord\n  isChord() { return !this.isRest() && this.keys.length > 1; }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem() { return this.glyph.stem; }\n\n  hasFlag() {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX() {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + getStemAdjustment(this);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.stave.getYForTopText(textLine),\n      extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n    );\n  }\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.stave.getYForTopText(textLine),\n      extents.baseY + (this.render_options.annotation_spacing * (textLine))\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave) {\n    super.setStave(stave);\n\n    const ys = this.note_heads.map(notehead => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Get the pitches in the note\n  getKeys() { return this.keys; }\n\n  // Get the properties for all the keys in the note\n  getKeyProps() {\n    return this.keyProps;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced() {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced) {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.extraRightPx;\n    if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.extraLeftPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest() {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine  = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = Vex.MidLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // extra_left_px\n      // FIXME: What are these magic numbers?\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // extra_right_px\n       // FIXME: What is this magical +2?\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (this.stem_direction === Stem.UP && this.hasFlag() && isInnerNoteIndex(this, index)) {\n        x += this.flag.getMetrics().width;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style) {\n    this.note_heads.forEach(notehead => notehead.setStyle(style));\n    this.stem.setStyle(style);\n  }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index, style) {\n    this.note_heads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index, line) {\n    this.keyProps[index].line = line;\n    this.reset();\n    return this;\n  }\n\n  getKeyLine(index) {\n    return this.keyProps[index].line;\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext) {\n    this.setModifierContext(mContext);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Generic function to add modifiers to a note\n  //\n  // Parameters:\n  // * `index`: The index of the key that we're modifying\n  // * `modifier`: The modifier to add\n  addModifier(index, modifier) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Helper function to add an accidental to a key\n  addAccidental(index, accidental) {\n    return this.addModifier(index, accidental);\n  }\n\n  // Helper function to add an articulation to a key\n  addArticulation(index, articulation) {\n    return this.addModifier(index, articulation);\n  }\n\n  // Helper function to add an annotation to a key\n  addAnnotation(index, annotation) {\n    return this.addModifier(index, annotation);\n  }\n\n  // Helper function to add a dot on a specific key\n  addDot(index) {\n    const dot = new Dot();\n    dot.setDotShiftY(this.glyph.dot_shiftY);\n    this.dots++;\n    return this.addModifier(index, dot);\n  }\n\n  // Convenience method to add dot to all keys in note\n  addDotToAll() {\n    for (let i = 0; i < this.keys.length; ++i) {\n      this.addDot(i);\n    }\n    return this;\n  }\n\n  // Get all accidentals in the `ModifierContext`\n  getAccidentals() {\n    return this.modifierContext.getModifiers('accidentals');\n  }\n\n  // Get all dots in the `ModifierContext`\n  getDots() {\n    return this.modifierContext.getModifiers('dots');\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth() {\n    // TODO: may need to accomodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcExtraPx() {\n    this.setExtraLeftPx(\n      this.displaced && this.stem_direction === Stem.DOWN\n        ? this.getGlyphWidth()\n        : 0\n    );\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setExtraRightPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP\n        ? this.getGlyphWidth()\n        : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n\n    let width = this.getGlyphWidth() + this.extraLeftPx + this.extraRightPx;\n\n    // For upward flagged notes, the width of the flag needs to be added\n    if (this.glyph.flag && this.beam === null && this.stem_direction === Stem.UP) {\n      width += this.getGlyphWidth();\n    }\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n  }\n\n  // Gets the staff line and y value for the highest and lowest noteheads\n  getNoteHeadBounds() {\n    // Top and bottom Y values for stem.\n    let yTop = null;\n    let yBottom = null;\n\n    let highestLine = this.stave.getNumLines();\n    let lowestLine = 1;\n\n    this.note_heads.forEach(notehead => {\n      const line = notehead.getLine();\n      const y = notehead.getY();\n\n      if (yTop === null || y < yTop)  {\n        yTop = y;\n      }\n\n      if (yBottom === null || y > yBottom) {\n        yBottom = y;\n      }\n\n      highestLine = line > highestLine ? line : highestLine;\n      lowestLine = line < lowestLine ? line : lowestLine;\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX() {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX() {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines() {\n    const {\n      note_heads, stave, use_default_head_x, x_shift, glyph,\n      render_options: { stroke_px },\n      context: ctx,\n    } = this;\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const { highest_line, lowest_line } = this.getNoteHeadBounds();\n    let headX = note_heads[0].getAbsoluteX();\n\n    const drawLedgerLine = (y) => {\n      if (use_default_head_x === true)  {\n        headX = this.getAbsoluteX() + x_shift;\n      }\n      const x = headX - stroke_px;\n      const length = ((headX + glyph.getWidth()) - headX) + (stroke_px * 2);\n\n      ctx.fillRect(x, y, length, 1);\n    };\n\n    for (let line = 6; line <= highest_line; ++line) {\n      drawLedgerLine(stave.getYForNote(line));\n    }\n\n    for (let line = 0; line >= lowest_line; --line) {\n      drawLedgerLine(stave.getYForNote(line));\n    }\n  }\n\n  // Draw all key modifiers\n  drawModifiers() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const ctx = this.context;\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const notehead = this.note_heads[modifier.getIndex()];\n      const noteheadStyle = notehead.getStyle();\n      if (noteheadStyle) {\n        ctx.save();\n        notehead.applyStyle(ctx);\n      }\n      modifier.setContext(ctx);\n      modifier.draw();\n      if (noteheadStyle) {\n        ctx.restore();\n      }\n    }\n    ctx.closeGroup();\n  }\n\n  // Draw the flag for the note\n  drawFlag() {\n    const { stem, beam, context: ctx } = this;\n\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const shouldRenderFlag = beam === null;\n    const glyph = this.getGlyph();\n\n    if (glyph.flag && shouldRenderFlag) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      const noteStemHeight = stem.getHeight();\n      const flagX = this.getStemX();\n      // FIXME: What's with the magic +/- 2\n      const flagY = this.getStemDirection() === Stem.DOWN\n          // Down stems have flags on the left\n          ? y_top - noteStemHeight + 2\n          // Up stems have flags on the eft.\n          : y_bottom - noteStemHeight - 2;\n\n      // Draw the Flag\n      ctx.openGroup('flag', null, { pointerBBox: true });\n      this.flag.render(ctx, flagX, flagY);\n      ctx.closeGroup();\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads() {\n    this.note_heads.forEach(notehead => {\n      this.context.openGroup('notehead', null, { pointerBBox: true });\n      notehead.setContext(this.context).draw();\n      this.context.closeGroup();\n    });\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stemStruct) {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (stemStruct) {\n      this.setStem(new Stem(stemStruct));\n    }\n\n    this.context.openGroup('stem', null, { pointerBBox: true });\n    this.stem.setContext(this.context).draw();\n    this.context.closeGroup();\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this.note_heads.forEach(notehead => notehead.setX(xBegin));\n\n    // Format stem x positions\n    const stemX = this.getStemX();\n    this.stem.setNoteHeadXBounds(stemX, stemX);\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Draw each part of the note\n    this.drawLedgerLines();\n\n    this.setAttribute('el', this.context.openGroup('stavenote', this.getAttribute('id')));\n    this.context.openGroup('note', null, { pointerBBox: true });\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    this.context.closeGroup();\n    this.drawModifiers();\n    this.context.closeGroup();\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavenote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n// directly, but used internally in `StaveNote`.\n//\n// See `tests/notehead_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\nfunction L(...args) { if (NoteHead.DEBUG) Vex.L('Vex.Flow.NoteHead', args); }\n\n// Draw slashnote head manually. No glyph exists for this.\n//\n// Parameters:\n// * `ctx`: the Canvas context\n// * `duration`: the duration of the note. ex: \"4\"\n// * `x`: the x coordinate to draw at\n// * `y`: the y coordinate to draw at\n// * `stem_direction`: the direction of the stem\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n  const width = Flow.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Flow.STEM_WIDTH);\n\n  let fill = false;\n\n  if (Flow.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (Flow.STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (Flow.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\nexport class NoteHead extends Note {\n  static get CATEGORY() { return 'notehead'; }\n\n  constructor(head_options) {\n    super(head_options);\n    this.setAttribute('type', 'NoteHead');\n\n    this.index = head_options.index;\n    this.x = head_options.x || 0;\n    this.y = head_options.y || 0;\n    this.note_type = head_options.note_type;\n    this.duration = head_options.duration;\n    this.displaced = head_options.displaced || false;\n    this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n    this.line = head_options.line;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyph = Flow.durationToGlyph(this.duration, this.note_type);\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `No glyph found for duration '${this.duration}' and type '${this.note_type}'`);\n    }\n\n    this.glyph_code = this.glyph.code_head;\n    this.x_shift = head_options.x_shift;\n    if (head_options.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = head_options.custom_glyph_code;\n    }\n\n    this.style = head_options.style;\n    this.slashed = head_options.slashed;\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads\n      glyph_font_scale: head_options.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: 3,\n    });\n\n    this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n  }\n\n  getCategory() { return NoteHead.CATEGORY; }\n\n  // Get the width of the notehead\n  getWidth() { return this.width; }\n\n  // Determine if the notehead is displaced\n  isDisplaced() { return this.displaced === true; }\n\n  // Get/set the notehead's style\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  getStyle() { return this.style; }\n  setStyle(style) { this.style = style; return this; }\n\n  // Get the glyph data\n  getGlyph() { return this.glyph; }\n\n  // Set the X coordinate\n  setX(x) { this.x = x; return this; }\n\n  // get/set the Y coordinate\n  getY() { return this.y; }\n  setY(y) { this.y = y;  return this; }\n\n  // Get/set the stave line the notehead is placed on\n  getLine() { return this.line; }\n  setLine(line) { this.line = line; return this; }\n\n  // Get the canvas `x` coordinate position of the notehead.\n  getAbsoluteX() {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = (Stem.WIDTH / 2);\n\n    return x + (this.displaced\n      ? (this.width - displacementStemAdjustment) * this.stem_direction\n      : 0\n    );\n  }\n\n  // Get the `BoundingBox` for the `NoteHead`\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const spacing = this.stave.getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context) {\n    const style = this.getStyle();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    return this;\n  }\n\n  // Set notehead to a provided `stave`\n  setStave(stave) {\n    const line = this.getLine();\n\n    this.stave = stave;\n    this.setY(stave.getYForNote(line));\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.extraLeftPx + this.extraRightPx;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Draw the notehead\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const head_x = this.getAbsoluteX();\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n    const line = this.line;\n\n    // If note above/below the staff, draw the small staff\n    if (line <= 0 || line >= 6) {\n      let line_y = y;\n      const floor = Math.floor(line);\n      if (line < 0 && floor - line === -0.5) {\n        line_y -= 5;\n      } else if (line > 6 &&  floor - line === -0.5) {\n        line_y += 5;\n      }\n\n      if (this.note_type !== 'r') {\n        ctx.fillRect(\n          head_x - this.render_options.stroke_px,\n          line_y,\n          this.getWidth() + (this.render_options.stroke_px * 2),\n          1\n        );\n      }\n    }\n\n    if (this.note_type === 's') {\n      const staveSpace = this.stave.getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      if (this.style) {\n        ctx.save();\n        this.applyStyle(ctx);\n        Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n        ctx.restore();\n      } else {\n        Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/notehead.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements an abstract interface for notes and chords that\n// are rendered on a stave. Notes have some common properties: All of them\n// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n//\n// Some notes have stems, heads, dots, etc. Most notational elements that\n// surround a note are called *modifiers*, and every note has an associated\n// array of them. All notes also have a rendering context and belong to a stave.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Tickable } from './tickable';\n\nexport class Note extends Tickable {\n  static get CATEGORY() { return 'note'; }\n  static get STAVEPADDING() { return 12; }\n\n  // Debug helper. Displays various note metrics for the given\n  // note.\n  static plotMetrics(ctx, note, yPos) {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n    const xPre1 = note.getAbsoluteX() - metrics.extraLeftPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.noteWidth;\n    const xPost2 = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx;\n    const xEnd = note.getAbsoluteX()\n      + metrics.noteWidth\n      + metrics.extraRightPx\n      + metrics.modRightPx;\n    const xFreedomRight = xEnd + note.getFormatterMetrics().freedom.right;\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = (yPos + 7);\n    function stroke(x1, x2, color, yy = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    Vex.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation),\n        xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n  // positioning and layout.\n  // To create a new note you need to provide a `note_struct`, which consists\n  // of the following fields:\n  //\n  // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n  // `dots`: The number of dots, which affects the duration.\n  // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n  //\n  // The range of values for these parameters are available in `src/tables.js`.\n  constructor(note_struct) {\n    super();\n    this.setAttribute('type', 'Note');\n\n    if (!note_struct) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Note must have valid initialization data to identify duration and type.'\n      );\n    }\n\n    // Parse `note_struct` and get note properties.\n    const initData = Flow.parseNoteData(note_struct);\n    if (!initData) {\n      throw new Vex.RuntimeError(\n        'BadArguments', `Invalid note initialization object: ${JSON.stringify(note_struct)}`\n      );\n    }\n\n    // Set note properties from parameters.\n    this.duration = initData.duration;\n    this.dots = initData.dots;\n    this.noteType = initData.type;\n\n    if (note_struct.duration_override) {\n      // Custom duration\n      this.setDuration(note_struct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(initData.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (this.positions && (typeof(this.positions) !== 'object' || !this.positions.length)) {\n      throw new Vex.RuntimeError('BadArguments', 'Note keys must be array type.');\n    }\n\n    // Note to play for audio players.\n    this.playNote = null;\n\n    // Positioning contexts used by the Formatter.\n    this.tickContext = null;    // The current tick context.\n    this.modifierContext = null;\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0;             // Width in pixels calculated after preFormat\n    this.extraLeftPx = 0;       // Extra room on left for offset note head\n    this.extraRightPx = 0;      // Extra room on right for offset note head\n    this.x_shift = 0;           // X shift from tick context X\n    this.left_modPx = 0;        // Max width of left modifiers\n    this.right_modPx = 0;       // Max width of right modifiers\n    this.voice = null;          // The voice that this note is in\n    this.preFormatted = false;  // Is this note preFormatted?\n    this.ys = [];               // list of y coordinates for each note\n                                // we need to hold on to these for ties and beams.\n\n    if (note_struct.align_center) {\n      this.setCenterAlignment(note_struct.align_center);\n    }\n\n    // The render surface.\n    this.stave = null;\n    this.render_options = {\n      annotation_spacing: 5,\n      stave_padding: Note.STAVEPADDING,\n    };\n  }\n\n  // Get and set the play note, which is arbitrary data that can be used by an\n  // audio player.\n  getPlayNote() { return this.playNote; }\n  setPlayNote(note) { this.playNote = note; return this; }\n\n  // Don't play notes by default, call them rests. This is also used by things like\n  // beams and dots for positioning.\n  isRest() { return false; }\n\n  // TODO(0xfe): Why is this method here?\n  addStroke(index, stroke) {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get and set the target stave.\n  getStave() { return this.stave; }\n  setStave(stave) {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // `Note` is not really a modifier, but is used in\n  // a `ModifierContext`.\n  getCategory() { return Note.CATEGORY; }\n\n  // Set the rendering context for the note.\n  setContext(context) { this.context = context; return this; }\n\n  // Get and set spacing to the left and right of the notes.\n  getExtraLeftPx() { return this.extraLeftPx; }\n  getExtraRightPx() { return this.extraRightPx; }\n  setExtraLeftPx(x) { this.extraLeftPx = x; return this; }\n  setExtraRightPx(x) { this.extraRightPx = x; return this; }\n\n  // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n\n  // Get the stave line number for the note.\n  getLineNumber() { return 0; }\n\n  // Get the stave line number for rest.\n  getLineForRest() { return 0; }\n\n  // Get the glyph associated with this note.\n  getGlyph() { return this.glyph; }\n\n  getGlyphWidth() {\n    return this.glyph.getWidth(this.render_options.glyph_font_scale);\n  }\n\n  // Set and get Y positions for this note. Each Y value is associated with\n  // an individual pitch/key within the note/chord.\n  setYs(ys) { this.ys = ys; return this; }\n  getYs() {\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  // Get the Y position of the space above the stave onto which text can\n  // be rendered.\n  getYForTopText(text_line) {\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', 'No stave attached to this note.');\n    }\n\n    return this.stave.getYForTopText(text_line);\n  }\n\n  // Get a `BoundingBox` for this note.\n  getBoundingBox() { return null; }\n\n  // Returns the voice that this note belongs in.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  // Attach this note to `voice`.\n  setVoice(voice) {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get and set the `TickContext` for this note.\n  getTickContext() { return this.tickContext; }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Accessors for the note type.\n  getDuration() { return this.duration; }\n  isDotted() { return (this.dots > 0); }\n  hasStem() { return false; }\n  getDots() { return this.dots; }\n  getNoteType() { return this.noteType; }\n  setBeam() { return this; } // ignore parameters\n\n  // Attach this note to a modifier context.\n  setModifierContext(mc) { this.modifierContext = mc; return this; }\n\n  // Attach a modifier to this note.\n  addModifier(modifier, index = 0) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get the coordinates for where modifiers begin.\n  getModifierStartXY() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  // Get bounds and metrics for this note.\n  //\n  // Returns a struct with fields:\n  // `width`: The total width of the note (including modifiers.)\n  // `noteWidth`: The width of the note head only.\n  // `left_shift`: The horizontal displacement of the note.\n  // `modLeftPx`: Start `X` for left modifiers.\n  // `modRightPx`: Start `X` for right modifiers.\n  // `extraLeftPx`: Extra space on left of note.\n  // `extraRightPx`: Extra space on right of note.\n  getMetrics() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    let modLeftPx = 0;\n    let modRightPx = 0;\n    if (this.modifierContext != null) {\n      modLeftPx = this.modifierContext.state.left_shift;\n      modRightPx = this.modifierContext.state.right_shift;\n    }\n\n    const width = this.getWidth();\n    return {\n      width,\n      noteWidth: width - modLeftPx - modRightPx - this.extraLeftPx - this.extraRightPx,\n      left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n\n      // Modifiers, accidentals etc.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      extraLeftPx: this.extraLeftPx,\n      extraRightPx: this.extraRightPx,\n    };\n  }\n\n  // Get and set width of note. Used by the formatter for positioning.\n  setWidth(width) { this.width = width; }\n  getWidth() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  // Displace note by `x` pixels. Used by the formatter.\n  setXShift(x) { this.x_shift = x; return this; }\n  getXShift() { return this.x_shift; }\n\n  // Get `X` position of this tick context.\n  getX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    return this.tickContext.getX() + this.x_shift;\n  }\n\n  // Get the absolute `X` position of this note's tick context. This\n  // excludes x_shift, so you'll need to factor it in if you're\n  // looking for the post-formatted x-position.\n  getAbsoluteX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    // Position note to left edge of tick context.\n    let x = this.tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n    }\n\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n\n    return x;\n  }\n  setPreFormatted(value) {\n    this.preFormatted = value;\n\n    // Maintain the width of left and right modifiers in pixels.\n    if (this.preFormatted) {\n      const extra = this.tickContext.getExtraPx();\n      this.left_modPx = Math.max(this.left_modPx, extra.left);\n      this.right_modPx = Math.max(this.right_modPx, extra.right);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/note.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// The tickable interface. Tickables are things that sit on a score and\n// have a duration, i.e., they occupy space in the musical rendering dimension.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Tickable extends Element {\n  constructor() {\n    super();\n    this.setAttribute('type', 'Tickable');\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1);\n    this.intrinsicTicks = 0;\n    this.tickMultiplier = new Fraction(1, 1);\n\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n    this.voice = null;\n    this.tickContext = null;\n    this.modifierContext = null;\n    this.modifiers = [];\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.tuplet = null;\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  reset() { return this; }\n  getTicks() { return this.ticks; }\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n  getWidth() { return this.width; }\n\n  getFormatterMetrics() { return this.formatterMetrics; }\n\n  setXShift(x) { this.x_shift = x; }\n  getCenterXShift() {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n  isCenterAligned() { return this.align_center; }\n  setCenterAlignment(align_center) {\n    this.align_center = align_center;\n    return this;\n  }\n\n  // Every tickable must be associated with a voice. This allows formatters\n  // and preFormatter to associate them with the right modifierContexts.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Tickable has no voice.');\n    return this.voice;\n  }\n  setVoice(voice) { this.voice = voice; }\n  getTuplet() { return this.tuplet; }\n\n  /*\n   * resetTuplet\n   * @param tuplet -- the specific tuplet to reset\n   *   if this is not provided, all tuplets are reset.\n   * @returns this\n   *\n   * Removes any prior tuplets from the tick calculation and\n   * resets the intrinsic tick value to\n   */\n  resetTuplet(tuplet) {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop();\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  setTuplet(tuplet) {\n    // Attach to new tuplet\n\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addToModifierContext(mc) {\n    this.modifierContext = mc;\n    // Add modifiers to modifier context (if any)\n    this.preFormatted = false;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addModifier(mod) {\n    this.modifiers.push(mod);\n    this.preFormatted = false;\n    return this;\n  }\n  getModifiers() {\n    return this.modifiers;\n  }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n  }\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n  getIntrinsicTicks() {\n    return this.intrinsicTicks;\n  }\n  setIntrinsicTicks(intrinsicTicks) {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  getTickMultiplier() {\n    return this.tickMultiplier;\n  }\n  applyTickMultiplier(numerator, denominator) {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  setDuration(duration) {\n    const ticks = duration.numerator * (Flow.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tickable.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Stem } from './stem';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\n\nexport class StemmableNote extends Note {\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'StemmableNote');\n\n    this.stem = null;\n    this.stemExtensionOverride = null;\n    this.beam = null;\n  }\n\n  // Get and set the note's `Stem`\n  getStem() { return this.stem; }\n  setStem(stem) { this.stem = stem; return this; }\n\n  // Builds and sets a new stem\n  buildStem() {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag() {\n    const { glyph, beam } = this;\n    const shouldRenderFlag = beam === null;\n\n    if (glyph && glyph.flag && shouldRenderFlag) {\n      const flagCode = this.getStemDirection() === Stem.DOWN\n        ? glyph.code_flag_downstem\n        : glyph.code_flag_upstem;\n\n      this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale);\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength() {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount() {\n    const glyph = this.getGlyph();\n\n    if (glyph) {\n      return glyph.beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinumumLength() {\n    const frac = Flow.durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == null) length = 35;\n        break;\n      case '16':\n        length = this.beam == null ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == null ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == null ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == null ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection() { return this.stem_direction; }\n  setStemDirection(direction) {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new Vex.RERR('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n    }\n\n    this.reset();\n    if (this.flag) {\n      this.buildFlag();\n    }\n\n    this.beam = null;\n    if (this.preFormatted) {\n      this.preFormat();\n    }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX() {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n    const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n    return stem_x;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX() {\n    return this.getAbsoluteX() + this.x_shift + (this.getGlyphWidth() / 2);\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stemExtensionOverride != null) {\n      return this.stemExtensionOverride;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.stem_up_extension\n        : glyph.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height) {\n    this.stemExtensionOverride = (height - Stem.HEIGHT);\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Sets the current note's beam\n  setBeam(beam) { this.beam = beam; return this; }\n\n  // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.min(\n        this.stave.getYForTopText(textLine),\n        extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n      );\n    } else {\n      return this.stave.getYForTopText(textLine);\n    }\n  }\n\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.max(\n        this.stave.getYForTopText(textLine),\n        extents.baseY + (this.render_options.annotation_spacing * (textLine))\n      );\n    } else {\n      return this.stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag() {\n    return Flow.durationToGlyph(this.duration).flag && !this.beam;\n  }\n\n  // Post format the note\n  postFormat() {\n    if (this.beam) this.beam.postFormat();\n\n    this.postFormatted = true;\n\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stem_struct) {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stem_struct));\n    this.stem.setContext(this.context).draw();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stemmablenote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `Modifier` is an abstract interface for notational elements that modify\n// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n//\n// For a `Modifier` instance to be positioned correctly, it must be part of\n// a `ModifierContext`. All modifiers in the same context are rendered relative to\n// one another.\n//\n// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) Vex.L('Vex.Flow.Modifier', args); }\n\nexport class Modifier extends Element {\n  static get CATEGORY() { return 'none'; }\n\n  // Modifiers can be positioned almost anywhere, relative to a note.\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      above: Modifier.Position.ABOVE,\n      below: Modifier.Position.BELOW,\n      left: Modifier.Position.LEFT,\n      right: Modifier.Position.RIGHT,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Modifier');\n\n    this.width = 0;\n\n    // Modifiers are attached to a note and an index. An index is a\n    // specific head in a chord.\n    this.note = null;\n    this.index = null;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.modifier_context = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  // Every modifier has a category. The `ModifierContext` uses this to determine\n  // the type and order of the modifiers.\n  getCategory() { return Modifier.CATEGORY; }\n\n  // Get and set modifier widths.\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n\n  // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n\n  // Get and set note index, which is a specific note in a chord.\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  // Every modifier must be part of a `ModifierContext`.\n  getModifierContext() { return this.modifier_context; }\n  setModifierContext(c) { this.modifier_context = c; return this; }\n\n  // Get and set articulation position.\n  getPosition() { return this.position; }\n  setPosition(position) {\n    this.position = typeof(position) === 'string'\n      ? Modifier.PositionString[position]\n      : position;\n    return this;\n  }\n\n  // Set the `text_line` for the modifier.\n  setTextLine(line) { this.text_line = line; return this; }\n\n  // Shift modifier down `y` pixels. Negative values shift up.\n  setYShift(y) { this.y_shift = y; return this; }\n\n  setSpacingFromNextModifier(x) {\n    this.spacingFromNextModifier = x;\n  }\n\n  getSpacingFromNextModifier() { return this.spacingFromNextModifier; }\n\n  // Shift modifier `x` pixels in the direction of the modifier. Negative values\n  // shift reverse.\n  setXShift(x) {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n  }\n  getXShift() { return this.x_shift; }\n\n  // Render the modifier onto the canvas.\n  draw() {\n    this.checkContext();\n    throw new Vex.RERR('MethodNotImplemented', 'draw() not implemented for this modifier.');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modifier.js","// VexFlow - Music Engraving for HTML5\r\n// Copyright Mohit Muthanna 2010\r\n//\r\n// This class implements dot modifiers for notes.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\n\r\nexport class Dot extends Modifier {\r\n  static get CATEGORY() { return 'dots'; }\r\n\r\n  // Arrange dots inside a ModifierContext.\r\n  static format(dots, state) {\r\n    const right_shift = state.right_shift;\r\n    const dot_spacing = 1;\r\n\r\n    if (!dots || dots.length === 0) return false;\r\n\r\n    const dot_list = [];\r\n    for (let i = 0; i < dots.length; ++i) {\r\n      const dot = dots[i];\r\n      const note = dot.getNote();\r\n\r\n      let props;\r\n      let shift;\r\n      // Only StaveNote has .getKeyProps()\r\n      if (typeof note.getKeyProps === 'function') {\r\n        props = note.getKeyProps()[dot.getIndex()];\r\n        shift = (props.displaced ? note.getExtraRightPx() : 0);\r\n      } else { // Else it's a TabNote\r\n        props = { line: 0.5 }; // Shim key props for dot placement\r\n        shift = 0;\r\n      }\r\n\r\n      dot_list.push({ line: props.line, shift, note, dot });\r\n    }\r\n\r\n    // Sort dots by line number.\r\n    dot_list.sort((a, b) => b.line - a.line);\r\n\r\n    let dot_shift = right_shift;\r\n    let x_width = 0;\r\n    let last_line = null;\r\n    let last_note = null;\r\n    let prev_dotted_space = null;\r\n    let half_shiftY = 0;\r\n\r\n    for (let i = 0; i < dot_list.length; ++i) {\r\n      const { dot, note, shift, line } = dot_list[i];\r\n\r\n      // Reset the position of the dot every line.\r\n      if (line !== last_line || note !== last_note) {\r\n        dot_shift = shift;\r\n      }\r\n\r\n      if (!note.isRest() && line !== last_line) {\r\n        if (Math.abs(line % 1) === 0.5) {\r\n          // note is on a space, so no dot shift\r\n          half_shiftY = 0;\r\n        } else if (!note.isRest()) {\r\n          // note is on a line, so shift dot to space above the line\r\n          half_shiftY = 0.5;\r\n          if (last_note != null &&\r\n              !last_note.isRest() && last_line - line === 0.5) {\r\n            // previous note on a space, so shift dot to space below the line\r\n            half_shiftY = -0.5;\r\n          } else if (line + half_shiftY === prev_dotted_space) {\r\n            // previous space is dotted, so shift dot to space below the line\r\n            half_shiftY = -0.5;\r\n          }\r\n        }\r\n      }\r\n\r\n      // convert half_shiftY to a multiplier for dots.draw()\r\n      dot.dot_shiftY = -half_shiftY;\r\n      prev_dotted_space = line + half_shiftY;\r\n\r\n      dot.setXShift(dot_shift);\r\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\r\n      x_width = (dot_shift > x_width) ? dot_shift : x_width;\r\n      last_line = line;\r\n      last_note = note;\r\n    }\r\n\r\n    // Update state.\r\n    state.right_shift += x_width;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.setAttribute('type', 'Dot');\r\n\r\n    this.note = null;\r\n    this.index = null;\r\n    this.position = Modifier.Position.RIGHT;\r\n\r\n    this.radius = 2;\r\n    this.setWidth(5);\r\n    this.dot_shiftY = 0;\r\n  }\r\n\r\n  getCategory() { return Dot.CATEGORY; }\r\n\r\n  setNote(note) {\r\n    this.note = note;\r\n\r\n    if (this.note.getCategory() === 'gracenotes') {\r\n      this.radius *= 0.50;\r\n      this.setWidth(3);\r\n    }\r\n  }\r\n\r\n  setDotShiftY(y) { this.dot_shiftY = y; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n    this.setRendered();\r\n\r\n    if (!this.note || this.index === null) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\r\n    }\r\n\r\n    const lineSpace = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n\r\n    // Set the starting y coordinate to the base of the stem for TabNotes\r\n    if (this.note.getCategory() === 'tabnotes') {\r\n      start.y = this.note.getStemExtents().baseY;\r\n    }\r\n\r\n    const x = (start.x + this.x_shift) + this.width - this.radius;\r\n    const y = start.y + this.y_shift + (this.dot_shiftY * lineSpace);\r\n    const ctx = this.context;\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.fill();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dot.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of modifiers to notes (e.g. bends,\n// fingering positions etc.)\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Accidental } from './accidental';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Stroke } from './strokes';\nimport { StringNumber } from './stringnumber';\nimport { Articulation } from './articulation';\nimport { Ornament } from './ornament';\nimport { Annotation } from './annotation';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\nfunction L(...args) { if (ModifierContext.DEBUG) Vex.L('Vex.Flow.ModifierContext', args); }\n\nexport class ModifierContext {\n  constructor() {\n    // Current modifiers\n    this.modifiers = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0,\n      top_text_line: 0,\n    };\n\n    // Add new modifiers to this array. The ordering is significant -- lower\n    // modifiers are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      StaveNote,\n      Dot,\n      FretHandFinger,\n      Accidental,\n      GraceNoteGroup,\n      NoteSubGroup,\n      Stroke,\n      StringNumber,\n      Articulation,\n      Ornament,\n      Annotation,\n      Bend,\n      Vibrato,\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [StaveNote];\n  }\n\n  addModifier(modifier) {\n    const type = modifier.getCategory();\n    if (!this.modifiers[type]) this.modifiers[type] = [];\n    this.modifiers[type].push(modifier);\n    modifier.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(type) { return this.modifiers[type]; }\n  getWidth() { return this.width; }\n  getExtraLeftPx() { return this.state.left_shift; }\n  getExtraRightPx() { return this.state.right_shift; }\n  getState() { return this.state; }\n\n  getMetrics() {\n    if (!this.formatted) {\n      throw new Vex.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n      extra_left_px: this.state.left_shift,\n      extra_right_px: this.state.right_shift,\n    };\n  }\n\n  preFormat() {\n    if (this.preFormatted) return;\n    this.PREFORMAT.forEach((modifier) => {\n      L('Preformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.format(this.getModifiers(modifier.CATEGORY), this.state, this);\n    });\n\n    // Update width of this modifier context\n    this.width = this.state.left_shift + this.state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return;\n    this.POSTFORMAT.forEach((modifier) => {\n      L('Postformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.postFormat(this.getModifiers(modifier.CATEGORY), this);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modifiercontext.js","// VexFlow - Music Engraving for HTML5\r\n// Copyright Mohit Muthanna 2010\r\n// Author Larry Kuhns 2013\r\n// Class to draws string numbers into the notation.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport class FretHandFinger extends Modifier {\r\n  static get CATEGORY() { return 'frethandfinger'; }\r\n\r\n  // Arrange fingerings inside a ModifierContext.\r\n  static format(nums, state) {\r\n    const { left_shift, right_shift } = state;\r\n    const num_spacing = 1;\r\n\r\n    if (!nums || nums.length === 0) return false;\r\n\r\n    const nums_list = [];\r\n    let prev_note = null;\r\n    let shiftLeft = 0;\r\n    let shiftRight = 0;\r\n\r\n    for (let i = 0; i < nums.length; ++i) {\r\n      const num = nums[i];\r\n      const note = num.getNote();\r\n      const pos = num.getPosition();\r\n      const props = note.getKeyProps()[num.getIndex()];\r\n      if (note !== prev_note) {\r\n        for (let n = 0; n < note.keys.length; ++n) {\r\n          const props_tmp = note.getKeyProps()[n];\r\n          if (left_shift === 0) {\r\n            shiftLeft = props_tmp.displaced ? note.getExtraLeftPx() : shiftLeft;\r\n          }\r\n          if (right_shift === 0) {\r\n            shiftRight = props_tmp.displaced ? note.getExtraRightPx() : shiftRight;\r\n          }\r\n        }\r\n        prev_note = note;\r\n      }\r\n\r\n      nums_list.push({\r\n        note,\r\n        num,\r\n        pos,\r\n        line: props.line,\r\n        shiftL: shiftLeft,\r\n        shiftR: shiftRight,\r\n      });\r\n    }\r\n\r\n    // Sort fingernumbers by line number.\r\n    nums_list.sort((a, b) => b.line - a.line);\r\n\r\n    let numShiftL = 0;\r\n    let numShiftR = 0;\r\n    let xWidthL = 0;\r\n    let xWidthR = 0;\r\n    let lastLine = null;\r\n    let lastNote = null;\r\n\r\n    for (let i = 0; i < nums_list.length; ++i) {\r\n      let num_shift = 0;\r\n      const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\r\n\r\n      // Reset the position of the string number every line.\r\n      if (line !== lastLine || note !== lastNote) {\r\n        numShiftL = left_shift + shiftL;\r\n        numShiftR = right_shift + shiftR;\r\n      }\r\n\r\n      const numWidth = num.getWidth() + num_spacing;\r\n      if (pos === Modifier.Position.LEFT) {\r\n        num.setXShift(left_shift + numShiftL);\r\n        num_shift = left_shift + numWidth; // spacing\r\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\r\n      } else if (pos === Modifier.Position.RIGHT) {\r\n        num.setXShift(numShiftR);\r\n        num_shift = shiftRight + numWidth; // spacing\r\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\r\n      }\r\n      lastLine = line;\r\n      lastNote = note;\r\n    }\r\n\r\n    state.left_shift += xWidthL;\r\n    state.right_shift += xWidthR;\r\n\r\n    return true;\r\n  }\r\n\r\n  constructor(number) {\r\n    super();\r\n    this.setAttribute('type', 'FretHandFinger');\r\n\r\n    this.note = null;\r\n    this.index = null;\r\n    this.finger = number;\r\n    this.width = 7;\r\n    this.position = Modifier.Position.LEFT;  // Default position above stem or note head\r\n    this.x_shift = 0;\r\n    this.y_shift = 0;\r\n    this.x_offset = 0;       // Horizontal offset from default\r\n    this.y_offset = 0;       // Vertical offset from default\r\n    this.font = {\r\n      family: 'sans-serif',\r\n      size: 9,\r\n      weight: 'bold',\r\n    };\r\n  }\r\n  getCategory() { return FretHandFinger.CATEGORY; }\r\n  setFretHandFinger(number) { this.finger = number; return this; }\r\n  setOffsetX(x) { this.x_offset = x; return this; }\r\n  setOffsetY(y) { this.y_offset = y; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n\r\n    if (!this.note || this.index == null) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\r\n    }\r\n\r\n    this.setRendered();\r\n    const ctx = this.context;\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let dot_x = start.x + this.x_shift + this.x_offset;\r\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\r\n\r\n    switch (this.position) {\r\n      case Modifier.Position.ABOVE:\r\n        dot_x -= 4;\r\n        dot_y -= 12;\r\n        break;\r\n      case Modifier.Position.BELOW:\r\n        dot_x -= 2;\r\n        dot_y += 10;\r\n        break;\r\n      case Modifier.Position.LEFT:\r\n        dot_x -= this.width;\r\n        break;\r\n      case Modifier.Position.RIGHT:\r\n        dot_x += 1;\r\n        break;\r\n      default:\r\n        throw new Vex.RERR('InvalidPostion', `The position ${this.position} does not exist`);\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\r\n    ctx.fillText('' + this.finger, dot_x, dot_y);\r\n    ctx.restore();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/frethandfinger.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n//\n// ## Description\n//\n// This file implements accidentals as modifiers that can be attached to\n// notes. Support is included for both western and microtonal accidentals.\n//\n// See `tests/accidental_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Flow } from './tables';\nimport { Music } from './music';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\nfunction L(...args) { if (Accidental.DEBUG) Vex.L('Vex.Flow.Accidental', args); }\n\nconst getGlyphWidth = glyph => glyph.getMetrics().width;\n\n// An `Accidental` inherits from `Modifier`, and is formatted within a\n// `ModifierContext`.\nexport class Accidental extends Modifier {\n  static get CATEGORY() { return 'accidentals'; }\n\n  // Arrange accidentals inside a ModifierContext.\n  static format(accidentals, state) {\n    const noteheadAccidentalPadding = 1;\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = 3;\n\n    // If there are no accidentals, we needn't format their positions\n    if (!accidentals || accidentals.length === 0) return;\n\n    const accList = [];\n    let prevNote = null;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    let propsTemp;\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc = accidentals[i];\n      const note = acc.getNote();\n      const stave = note.getStave();\n      const props = note.getKeyProps()[acc.getIndex()];\n      if (note !== prevNote) {\n         // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          propsTemp = note.getKeyProps()[n];\n          shiftL = propsTemp.displaced ? note.getExtraLeftPx() : shiftL;\n        }\n        prevNote = note;\n      }\n      if (stave !== null) {\n        const lineSpace = stave.options.spacing_between_lines_px;\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round(y / lineSpace * 2) / 2;\n        accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n      } else {\n        accList.push({ line: props.line, shift: shiftL, acc });\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = null;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === null || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n        });\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Vex.Flow.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n        // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index) => lineList[groupStart + index];\n      const getGroupLines = (indexes) => indexes.map(getGroupLine);\n      const lineDifference = (indexA, indexB) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map(item => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs) =>\n        indexPairs\n          .map(getGroupLines)\n          .every(lines => !this.checkCollision(...lines));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains more than seven members, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n\n      // Otherwise, if the group contains fewer than seven members, use the layouts from\n      // the accidentalsColumnsTable housed in tables.js.\n      } else {\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = Flow.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths = [];\n    const columnXOffsets = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach(line => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach(line => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = (columnXOffsets[line.column - 1] + lineWidth);\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift;\n  }\n\n  // Helper function to determine whether two lines of accidentals collide vertically\n  static checkCollision(line1, line2) {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) { // then line 2 is on top\n      clearanceRequired = (line2.flatLine || line2.dblSharpLine) ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else { // line 1 is on top\n      clearanceRequired = (line1.flatLine || line1.dblSharpLine) ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  // Use this method to automatically apply accidentals to a set of `voices`.\n  // The accidentals will be remembered between all the voices provided.\n  // Optionally, you can also provide an initial `keySignature`.\n  static applyAccidentals(voices, keySignature) {\n    const tickPositions = [];\n    const tickNoteMap = {};\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach(voice => {\n      const tickPosition = new Fraction(0, 1);\n      const notes = voice.getTickables();\n      notes.forEach(note => {\n        if (note.shouldIgnoreTicks()) return;\n\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch\n    const scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach(tick => {\n      const notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches = [];\n\n      const processNote = (note) => {\n        if (note.isRest() || note.shouldIgnoreTicks()) return;\n\n        // Go through each key and determine if an accidental should be\n        // applied\n        note.keys.forEach((keyString, keyIndex) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          const sameAccidental = scaleMap[key.root] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n            // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            note.addAccidental(keyIndex, accidental);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(pitch);\n          }\n        });\n\n        // process grace notes\n        note.getModifiers().forEach(modifier => {\n          if (modifier.getCategory() === 'gracenotegroups') {\n            modifier.getGraceNotes().forEach(processNote);\n          }\n        });\n      };\n\n      notes.forEach(processNote);\n    });\n  }\n\n  // Create accidental. `type` can be a value from the\n  // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n  // example: `#`, `##`, `b`, `n`, etc.\n  constructor(type = null) {\n    super();\n    this.setAttribute('type', 'Accidental');\n\n    L('New accidental: ', type);\n\n    this.note = null;\n    // The `index` points to a specific note in a chord.\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: 38,\n\n      // Length of stroke across heads above or below the stave.\n      stroke_px: 3,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = Flow.accidentalCodes(this.type);\n    if (!this.accidental) {\n      throw new Vex.RERR('ArgumentError', `Unknown accidental type: ${type}`);\n    }\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n    this.parenLeft = null;\n    this.parenRight = null;\n\n    this.reset();\n  }\n\n  reset() {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(Flow.accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(Flow.accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  getCategory() { return Accidental.CATEGORY; }\n\n  getWidth() {\n    const parenWidth = this.cautionary\n      ? (\n        getGlyphWidth(this.parenLeft) +\n        getGlyphWidth(this.parenRight) +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding\n      )\n      : 0;\n\n    return getGlyphWidth(this.glyph) + parenWidth;\n  }\n\n  // Attach this accidental to `note`, which must be a `StaveNote`.\n  setNote(note) {\n    if (!note) {\n      throw new Vex.RERR('ArgumentError', `Bad note value: ${note}`);\n    }\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (this.note.getCategory() === 'gracenotes') {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n  }\n\n  // If called, draws parenthesis around accidental.\n  setAsCautionary() {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  // Render accidental onto canvas.\n  draw() {\n    const {\n      context,\n      type, position, note, index, cautionary,\n      x_shift, y_shift,\n      glyph, parenLeft, parenRight,\n      render_options: { parenLeftPadding, parenRightPadding },\n    } = this;\n\n    this.checkContext();\n\n    if (!(note && (index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n    }\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = note.getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(context, accX, accY);\n    } else {\n      // Render the accidental in parentheses.\n      parenRight.render(context, accX, accY);\n      accX -= getGlyphWidth(parenRight);\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(context, accX, accY);\n      accX -= getGlyphWidth(glyph);\n      accX -= parenLeftPadding;\n      parenLeft.render(context, accX, accY);\n    }\n\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/accidental.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements some standard music theory routines.\n\nimport { Vex } from './vex';\n\nexport class Music {\n  static get NUM_TONES() {\n    return 12;\n  }\n\n  static get roots() {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  static get root_values() {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  static get root_indices() {\n    return {\n      'c': 0,\n      'd': 1,\n      'e': 2,\n      'f': 3,\n      'g': 4,\n      'a': 5,\n      'b': 6,\n    };\n  }\n\n  static get canonical_notes() {\n    return [\n      'c', 'c#', 'd', 'd#',\n      'e', 'f', 'f#', 'g',\n      'g#', 'a', 'a#', 'b',\n    ];\n  }\n\n  static get diatonic_intervals() {\n    return [\n      'unison', 'm2', 'M2', 'm3', 'M3',\n      'p4', 'dim5', 'p5', 'm6', 'M6',\n      'b7', 'M7', 'octave',\n    ];\n  }\n\n  static get diatonic_accidentals() {\n    return {\n      'unison': { note: 0, accidental: 0 },\n      'm2': { note: 1, accidental: -1 },\n      'M2': { note: 1, accidental: 0 },\n      'm3': { note: 2, accidental: -1 },\n      'M3': { note: 2, accidental: 0 },\n      'p4': { note: 3, accidental: 0 },\n      'dim5': { note: 4, accidental: -1 },\n      'p5': { note: 4, accidental: 0 },\n      'm6': { note: 5, accidental: -1 },\n      'M6': { note: 5, accidental: 0 },\n      'b7': { note: 6, accidental: -1 },\n      'M7': { note: 6, accidental: 0 },\n      'octave': { note: 7, accidental: 0 },\n    };\n  }\n\n  static get intervals() {\n    return {\n      'u': 0, 'unison': 0,\n      'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n      '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n      'm3': 3, 'b3': 3, 'min3': 3,\n      'M3': 4, '3': 4, 'maj3': 4,\n      '4': 5, 'p4': 5,\n      '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n      '5': 7, 'p5': 7,\n      '#5': 8, 'b6': 8, 'aug5': 8,\n      '6': 9, 'M6': 9, 'maj6': 9,\n      'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n      'M7': 11, 'maj7': 11,\n      '8': 12, 'octave': 12,\n    };\n  }\n\n  static get scales() {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n    };\n  }\n\n  static get scaleTypes() {\n    return {\n      'M': Music.scales.major,\n      'm': Music.scales.minor,\n    };\n  }\n\n  static get accidentals() {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  static get noteValues() {\n    return {\n      'c': { root_index: 0, int_val: 0 },\n      'cn': { root_index: 0, int_val: 0 },\n      'c#': { root_index: 0, int_val: 1 },\n      'c##': { root_index: 0, int_val: 2 },\n      'cb': { root_index: 0, int_val: 11 },\n      'cbb': { root_index: 0, int_val: 10 },\n      'd': { root_index: 1, int_val: 2 },\n      'dn': { root_index: 1, int_val: 2 },\n      'd#': { root_index: 1, int_val: 3 },\n      'd##': { root_index: 1, int_val: 4 },\n      'db': { root_index: 1, int_val: 1 },\n      'dbb': { root_index: 1, int_val: 0 },\n      'e': { root_index: 2, int_val: 4 },\n      'en': { root_index: 2, int_val: 4 },\n      'e#': { root_index: 2, int_val: 5 },\n      'e##': { root_index: 2, int_val: 6 },\n      'eb': { root_index: 2, int_val: 3 },\n      'ebb': { root_index: 2, int_val: 2 },\n      'f': { root_index: 3, int_val: 5 },\n      'fn': { root_index: 3, int_val: 5 },\n      'f#': { root_index: 3, int_val: 6 },\n      'f##': { root_index: 3, int_val: 7 },\n      'fb': { root_index: 3, int_val: 4 },\n      'fbb': { root_index: 3, int_val: 3 },\n      'g': { root_index: 4, int_val: 7 },\n      'gn': { root_index: 4, int_val: 7 },\n      'g#': { root_index: 4, int_val: 8 },\n      'g##': { root_index: 4, int_val: 9 },\n      'gb': { root_index: 4, int_val: 6 },\n      'gbb': { root_index: 4, int_val: 5 },\n      'a': { root_index: 5, int_val: 9 },\n      'an': { root_index: 5, int_val: 9 },\n      'a#': { root_index: 5, int_val: 10 },\n      'a##': { root_index: 5, int_val: 11 },\n      'ab': { root_index: 5, int_val: 8 },\n      'abb': { root_index: 5, int_val: 7 },\n      'b': { root_index: 6, int_val: 11 },\n      'bn': { root_index: 6, int_val: 11 },\n      'b#': { root_index: 6, int_val: 0 },\n      'b##': { root_index: 6, int_val: 1 },\n      'bb': { root_index: 6, int_val: 10 },\n      'bbb': { root_index: 6, int_val: 9 },\n    };\n  }\n\n  isValidNoteValue(note) {\n    if (note == null || note < 0 || note >= Music.NUM_TONES) {\n      return false;\n    }\n    return true;\n  }\n\n  isValidIntervalValue(interval) {\n    return this.isValidNoteValue(interval);\n  }\n\n  getNoteParts(noteString) {\n    if (!noteString || noteString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  getKeyParts(keyString) {\n    if (!keyString || keyString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  getNoteValue(noteString) {\n    const value = Music.noteValues[noteString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid note name: ${noteString}`);\n    }\n\n    return value.int_val;\n  }\n\n  getIntervalValue(intervalString) {\n    const value = Music.intervals[intervalString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', 'Invalid interval name: ${intervalString}');\n    }\n\n    return value;\n  }\n\n  getCanonicalNoteName(noteValue) {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n\n    return Music.canonical_notes[noteValue];\n  }\n\n  getCanonicalIntervalName(intervalValue) {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /* Given a note, interval, and interval direction, product the\n   * relative note.\n   */\n  getRelativeNoteValue(noteValue, intervalValue, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + (direction * intervalValue)) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  getRelativeNoteName(root, noteValue) {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = (((noteValue + 1) + (rootValue + 1)) %\n        Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /* Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key, intervals) {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i += 1) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /* Returns the interval of a note, given a diatonic scale.\n   *\n   * E.g., Given the scale C, and the note E, returns M3\n   */\n  getIntervalBetween(note1, note2, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new Vex.RERR('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1\n      ? note2 - note1\n      : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  // Create a scale map that represents the pitch state for a\n  // `keySignature`. For example, passing a `G` to `keySignature` would\n  // return a scale map with every note naturalized except for `F` which\n  // has an `F#` state.\n  createScaleMap(keySignature) {\n    const keySigParts = this.getKeyParts(keySignature);\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new Vex.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {};\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/music.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\n\nexport class NoteSubGroup extends Modifier {\n  static get CATEGORY() { return 'notesubgroup'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups, state) {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  constructor(subNotes) {\n    super();\n    this.setAttribute('type', 'NoteSubGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach(subNote => { subNote.ignore_ticks = false; });\n    this.width = 0;\n    this.preFormatted = false;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n\n    return this;\n  }\n\n  getCategory() { return NoteSubGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw notes without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    const alignSubNotesWithNote = (subNotes, note) => {\n      // Shift over the tick contexts of each note\n      const tickContext = note.getTickContext();\n      const extraPx = tickContext.getExtraPx();\n      const x = tickContext.getX() - extraPx.left - extraPx.extraLeft +\n        this.getSpacingFromNextModifier();\n\n      subNotes.forEach(subNote => {\n        const tick_context = subNote.getTickContext();\n        const x_offset = tick_context.getX();\n        subNote.setStave(note.stave);\n        tick_context.setX(x + x_offset);\n      });\n    };\n\n    alignSubNotesWithNote(this.subNotes, note, this.width);\n\n    // Draw notes\n    this.subNotes.forEach(subNote => subNote.setContext(this.context).draw());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/notesubgroup.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabTie } from './tabtie';\nimport { StaveNote } from './stavenote';\n\n// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\nfunction L(...args) { if (GraceNoteGroup.DEBUG) Vex.L('Vex.Flow.GraceNoteGroup', args); }\n\nexport class GraceNoteGroup extends Modifier {\n  static get CATEGORY() { return 'gracenotegroups'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(gracenote_groups, state) {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = (note.getCategory() === StaveNote.CATEGORY);\n      const spacing = (is_stavenote ?  group_spacing_stave : group_spacing_tab);\n\n      if (is_stavenote && note !== prev_note) {\n         // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          const props_tmp = note.getKeyProps()[n];\n          shiftL = (props_tmp.displaced ? note.getExtraLeftPx() : shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({ shift: shiftL, gracenote_group, spacing });\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n  // `ModifierContext`.\n  constructor(grace_notes, show_slur) {\n    super();\n    this.setAttribute('type', 'GraceNoteGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.preFormatted = false;\n\n    this.show_slur = show_slur;\n    this.slur = null;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  getCategory() { return GraceNoteGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes() {\n    if (this.grace_notes.length > 1) {\n      const beam = new Beam(this.grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beam = beam;\n    }\n\n    return this;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n  getGraceNotes() {\n    return this.grace_notes;\n  }\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    L('Drawing grace note group for:', note);\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw grace note without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    const that = this;\n    function alignGraceNotesWithNote(grace_notes, note) {\n      // Shift over the tick contexts of each note\n      // So that th aligned with the note\n      const tickContext = note.getTickContext();\n      const extraPx = tickContext.getExtraPx();\n      const x = tickContext.getX()\n        - extraPx.left\n        - extraPx.extraLeft\n        + that.getSpacingFromNextModifier();\n\n      grace_notes.forEach(graceNote => {\n        const tick_context = graceNote.getTickContext();\n        const x_offset = tick_context.getX();\n        graceNote.setStave(note.stave);\n        tick_context.setX(x + x_offset);\n      });\n    }\n\n    alignGraceNotesWithNote(this.grace_notes, note, this.width);\n\n    // Draw notes\n    this.grace_notes.forEach(graceNote => {\n      graceNote.setContext(this.context).draw();\n    });\n\n    // Draw beam\n    if (this.beam) {\n      this.beam.setContext(this.context).draw();\n    }\n\n    if (this.show_slur) {\n      // Create and draw slur\n      const is_stavenote = (this.getNote().getCategory() === StaveNote.CATEGORY);\n      const TieClass = (is_stavenote ? StaveTie : TabTie);\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(this.context).draw();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracenotegroup.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class StaveTie extends Element {\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.context = null;\n    this.text = text;\n    this.direction = null;\n\n    this.render_options = {\n      cp1: 8,      // Curve control point 1\n      cp2: 12,      // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: { family: 'Arial', size: 10, style: '' },\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font) { this.font = font; return this; }\n  setDirection(direction) { this.direction = direction; return this; }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Tie needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.first_note || !this.last_note);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2; cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const cp_x = ((params.last_x_px + last_x_shift) +\n          (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n      const bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px, last_x_px) {\n    if (!this.text) return;\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= this.context.measureText(this.text).width / 2;\n\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.style);\n    this.context.fillText(\n      this.text,\n      center_x + this.render_options.text_shift_x,\n      (this.first_note || this.last_note).getStave().getYForTopText() - 1\n    );\n    this.context.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetie.js","// / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { StaveTie } from './stavetie';\n\nexport class TabTie extends StaveTie {\n  static createHammeron(notes) {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes) {\n    return new TabTie(notes, 'P');\n  }\n\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, text);\n    this.setAttribute('type', 'TabTie');\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.setNotes(notes);\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: -1, // Tab tie's are always face up.\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabtie.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\r\n// Author: Larry Kuhns\r\n//\r\n// ## Description\r\n// This file implements the `Stroke` class which renders chord strokes\r\n// that can be arpeggiated, brushed, rasquedo, etc.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\nimport { StaveNote } from './stavenote';\r\nimport { Glyph } from './glyph';\r\n\r\nexport class Stroke extends Modifier {\r\n  static get CATEGORY() { return 'strokes'; }\r\n  static get Type() {\r\n    return {\r\n      BRUSH_DOWN: 1,\r\n      BRUSH_UP: 2,\r\n      ROLL_DOWN: 3,        // Arpegiated chord\r\n      ROLL_UP: 4,          // Arpegiated chord\r\n      RASQUEDO_DOWN: 5,\r\n      RASQUEDO_UP: 6,\r\n    };\r\n  }\r\n\r\n  // Arrange strokes inside `ModifierContext`\r\n  static format(strokes, state) {\r\n    const left_shift = state.left_shift;\r\n    const stroke_spacing = 0;\r\n\r\n    if (!strokes || strokes.length === 0) return this;\r\n\r\n    const strokeList = strokes.map((stroke) => {\r\n      const note = stroke.getNote();\r\n      if (note instanceof StaveNote) {\r\n        const { line, displaced } = note.getKeyProps()[stroke.getIndex()];\r\n        const shift = displaced ? note.getExtraLeftPx() : 0;\r\n        return { line, shift, stroke };\r\n      } else {\r\n        const { str: string } = note.getPositions()[stroke.getIndex()];\r\n        return { line: string, shift: 0, stroke };\r\n      }\r\n    });\r\n\r\n    const strokeShift = left_shift;\r\n\r\n    // There can only be one stroke .. if more than one, they overlay each other\r\n    const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\r\n      stroke.setXShift(strokeShift + shift);\r\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\r\n    }, 0);\r\n\r\n    state.left_shift += xShift;\r\n    return true;\r\n  }\r\n\r\n  constructor(type, options) {\r\n    super();\r\n    this.setAttribute('type', 'Stroke');\r\n\r\n    this.note = null;\r\n    this.options = Vex.Merge({}, options);\r\n\r\n    // multi voice - span stroke across all voices if true\r\n    this.all_voices = 'all_voices' in this.options ? this.options.all_voices : true;\r\n\r\n    // multi voice - end note of stroke, set in draw()\r\n    this.note_end = null;\r\n    this.index = null;\r\n    this.type = type;\r\n    this.position = Modifier.Position.LEFT;\r\n\r\n    this.render_options = {\r\n      font_scale: 38,\r\n      stroke_px: 3,\r\n      stroke_spacing: 10,\r\n    };\r\n\r\n    this.font = {\r\n      family: 'serif',\r\n      size: 10,\r\n      weight: 'bold italic',\r\n    };\r\n\r\n    this.setXShift(0);\r\n    this.setWidth(10);\r\n  }\r\n\r\n  getCategory() { return Stroke.CATEGORY; }\r\n  getPosition() { return this.position; }\r\n  addEndNote(note) { this.note_end = note; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n    this.setRendered();\r\n\r\n    if (!(this.note && (this.index != null))) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\r\n    }\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let ys = this.note.getYs();\r\n    let topY = start.y;\r\n    let botY = start.y;\r\n    const x = start.x - 5;\r\n    const line_space = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const notes = this.getModifierContext().getModifiers(this.note.getCategory());\r\n    for (let i = 0; i < notes.length; i++) {\r\n      ys = notes[i].getYs();\r\n      for (let n = 0; n < ys.length; n++) {\r\n        if (this.note === notes[i] || this.all_voices) {\r\n          topY = Vex.Min(topY, ys[n]);\r\n          botY = Vex.Max(botY, ys[n]);\r\n        }\r\n      }\r\n    }\r\n\r\n    let arrow;\r\n    let arrow_shift_x;\r\n    let arrow_y;\r\n    let text_shift_x;\r\n    let text_y;\r\n    switch (this.type) {\r\n      case Stroke.Type.BRUSH_DOWN:\r\n        arrow = 'vc3';\r\n        arrow_shift_x = -3;\r\n        arrow_y = topY - (line_space / 2) + 10;\r\n        botY += (line_space / 2);\r\n        break;\r\n      case Stroke.Type.BRUSH_UP:\r\n        arrow = 'v11';\r\n        arrow_shift_x = 0.5;\r\n        arrow_y = botY + (line_space / 2);\r\n        topY -= (line_space / 2);\r\n        break;\r\n      case Stroke.Type.ROLL_DOWN:\r\n      case Stroke.Type.RASQUEDO_DOWN:\r\n        arrow = 'vc3';\r\n        arrow_shift_x = -3;\r\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\r\n        if (this.note instanceof StaveNote) {\r\n          topY += 1.5 * line_space;\r\n          if ((botY - topY) % 2 !== 0) {\r\n            botY += 0.5 * line_space;\r\n          } else {\r\n            botY += line_space;\r\n          }\r\n          arrow_y = topY - line_space;\r\n          text_y = botY + line_space + 2;\r\n        } else {\r\n          topY += 1.5 * line_space;\r\n          botY += line_space;\r\n          arrow_y = topY - 0.75 * line_space;\r\n          text_y = botY + 0.25 * line_space;\r\n        }\r\n        break;\r\n      case Stroke.Type.ROLL_UP:\r\n      case Stroke.Type.RASQUEDO_UP:\r\n        arrow = 'v52';\r\n        arrow_shift_x = -4;\r\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\r\n        if (this.note instanceof StaveNote) {\r\n          arrow_y = line_space / 2;\r\n          topY += 0.5 * line_space;\r\n          if ((botY - topY) % 2 === 0) {\r\n            botY += line_space / 2;\r\n          }\r\n          arrow_y = botY + 0.5 * line_space;\r\n          text_y = topY - 1.25 * line_space;\r\n        } else {\r\n          topY += 0.25 * line_space;\r\n          botY += 0.5 * line_space;\r\n          arrow_y = botY + 0.25 * line_space;\r\n          text_y = topY - line_space;\r\n        }\r\n        break;\r\n      default:\r\n        throw new Vex.RERR('InvalidType', `The stroke type ${this.type} does not exist`);\r\n    }\r\n\r\n    // Draw the stroke\r\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\r\n      this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\r\n    } else {\r\n      if (this.note instanceof StaveNote) {\r\n        for (let i = topY; i <= botY; i += line_space) {\r\n          Glyph.renderGlyph(\r\n            this.context,\r\n            x + this.x_shift - 4,\r\n            i,\r\n            this.render_options.font_scale,\r\n            'va3'\r\n          );\r\n        }\r\n      } else {\r\n        let i;\r\n        for (i = topY; i <= botY; i += 10) {\r\n          Glyph.renderGlyph(\r\n            this.context,\r\n            x + this.x_shift - 4,\r\n            i,\r\n            this.render_options.font_scale,\r\n            'va3'\r\n          );\r\n        }\r\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\r\n          text_y = i + 0.25 * line_space;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Draw the arrow head\r\n    Glyph.renderGlyph(\r\n      this.context,\r\n      x + this.x_shift + arrow_shift_x,\r\n      arrow_y,\r\n      this.render_options.font_scale,\r\n      arrow\r\n    );\r\n\r\n    // Draw the rasquedo \"R\"\r\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\r\n      this.context.save();\r\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\r\n      this.context.fillText('R', x + text_shift_x, text_y);\r\n      this.context.restore();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/strokes.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\r\n// Author: Larry Kuhns\r\n//\r\n// ## Description\r\n// This file implements the `StringNumber` class which renders string\r\n// number annotations beside notes.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\nimport { Renderer } from './renderer';\r\nimport { StaveNote } from './stavenote';\r\n\r\nexport class StringNumber extends Modifier {\r\n  static get CATEGORY() { return 'stringnumber'; }\r\n\r\n  // ## Static Methods\r\n  // Arrange string numbers inside a `ModifierContext`\r\n  static format(nums, state) {\r\n    const left_shift = state.left_shift;\r\n    const right_shift = state.right_shift;\r\n    const num_spacing = 1;\r\n\r\n    if (!nums || nums.length === 0) return this;\r\n\r\n    const nums_list = [];\r\n    let prev_note = null;\r\n    let shift_left = 0;\r\n    let shift_right = 0;\r\n\r\n    let i;\r\n    let num;\r\n    let note;\r\n    let pos;\r\n    let props_tmp;\r\n    for (i = 0; i < nums.length; ++i) {\r\n      num = nums[i];\r\n      note = num.getNote();\r\n\r\n      for (i = 0; i < nums.length; ++i) {\r\n        num = nums[i];\r\n        note = num.getNote();\r\n        pos = num.getPosition();\r\n        const props = note.getKeyProps()[num.getIndex()];\r\n\r\n        if (note !== prev_note) {\r\n          for (let n = 0; n < note.keys.length; ++n) {\r\n            props_tmp = note.getKeyProps()[n];\r\n            if (left_shift === 0) {\r\n              shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\r\n            }\r\n            if (right_shift === 0) {\r\n              shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\r\n            }\r\n          }\r\n          prev_note = note;\r\n        }\r\n\r\n        nums_list.push({\r\n          pos,\r\n          note,\r\n          num,\r\n          line: props.line,\r\n          shiftL: shift_left,\r\n          shiftR: shift_right,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Sort string numbers by line number.\r\n    nums_list.sort((a, b) => b.line - a.line);\r\n\r\n    // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\r\n    let num_shiftL = 0; // eslint-disable-line\r\n    let num_shiftR = 0;\r\n    let x_widthL = 0;\r\n    let x_widthR = 0;\r\n    let last_line = null;\r\n    let last_note = null;\r\n    for (i = 0; i < nums_list.length; ++i) {\r\n      let num_shift = 0;\r\n      note = nums_list[i].note;\r\n      pos = nums_list[i].pos;\r\n      num = nums_list[i].num;\r\n      const line = nums_list[i].line;\r\n      const shiftL = nums_list[i].shiftL;\r\n      const shiftR = nums_list[i].shiftR;\r\n\r\n      // Reset the position of the string number every line.\r\n      if (line !== last_line || note !== last_note) {\r\n        num_shiftL = left_shift + shiftL;\r\n        num_shiftR = right_shift + shiftR;\r\n      }\r\n\r\n      const num_width = num.getWidth() + num_spacing;\r\n      if (pos === Modifier.Position.LEFT) {\r\n        num.setXShift(left_shift);\r\n        num_shift = shift_left + num_width; // spacing\r\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\r\n      } else if (pos === Modifier.Position.RIGHT) {\r\n        num.setXShift(num_shiftR);\r\n        num_shift += num_width; // spacing\r\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\r\n      }\r\n      last_line = line;\r\n      last_note = note;\r\n    }\r\n\r\n    state.left_shift += x_widthL;\r\n    state.right_shift += x_widthR;\r\n    return true;\r\n  }\r\n\r\n  constructor(number) {\r\n    super();\r\n    this.setAttribute('type', 'StringNumber');\r\n\r\n    this.note = null;\r\n    this.last_note = null;\r\n    this.index = null;\r\n    this.string_number = number;\r\n    this.setWidth(20); // ???\r\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\r\n    this.x_shift = 0;\r\n    this.y_shift = 0;\r\n    this.x_offset = 0; // Horizontal offset from default\r\n    this.y_offset = 0; // Vertical offset from default\r\n    this.dashed = true; // true - draw dashed extension  false - no extension\r\n    this.leg = Renderer.LineEndType.NONE;   // draw upward/downward leg at the of extension line\r\n    this.radius = 8;\r\n    this.font = {\r\n      family: 'sans-serif',\r\n      size: 10,\r\n      weight: 'bold',\r\n    };\r\n  }\r\n  getCategory() { return StringNumber.CATEGORY; }\r\n  getNote() { return this.note; }\r\n  setNote(note) { this.note = note; return this; }\r\n  getIndex() { return this.index; }\r\n  setIndex(index) { this.index = index; return this; }\r\n\r\n  setLineEndType(leg) {\r\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\r\n      this.leg = leg;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  setStringNumber(number) { this.string_number = number; return this; }\r\n  setOffsetX(x) { this.x_offset = x; return this; }\r\n  setOffsetY(y) { this.y_offset = y; return this; }\r\n  setLastNote(note) { this.last_note = note; return this; }\r\n  setDashed(dashed) { this.dashed = dashed; return this; }\r\n\r\n  draw() {\r\n    const ctx = this.checkContext();\r\n    if (!(this.note && (this.index != null))) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\r\n    }\r\n    this.setRendered();\r\n\r\n    const line_space = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let dot_x = (start.x + this.x_shift + this.x_offset);\r\n    let dot_y = start.y + this.y_shift + this.y_offset;\r\n\r\n    switch (this.position) {\r\n      case Modifier.Position.ABOVE:\r\n      case Modifier.Position.BELOW: {\r\n        const stem_ext = this.note.getStemExtents();\r\n        let top = stem_ext.topY;\r\n        let bottom = stem_ext.baseY + 2;\r\n\r\n        if (this.note.stem_direction === StaveNote.STEM_DOWN) {\r\n          top = stem_ext.baseY;\r\n          bottom = stem_ext.topY - 2;\r\n        }\r\n\r\n        if (this.position === Modifier.Position.ABOVE) {\r\n          dot_y = this.note.hasStem()\r\n            ? top - (line_space * 1.75)\r\n            : start.y - (line_space * 1.75);\r\n        } else {\r\n          dot_y = this.note.hasStem()\r\n            ? bottom + (line_space * 1.5)\r\n            : start.y + (line_space * 1.75);\r\n        }\r\n\r\n        dot_y += this.y_shift + this.y_offset;\r\n\r\n        break;\r\n      } case Modifier.Position.LEFT:\r\n        dot_x -= (this.radius / 2) + 5;\r\n        break;\r\n      case Modifier.Position.RIGHT:\r\n        dot_x += (this.radius / 2) + 6;\r\n        break;\r\n      default:\r\n        throw new Vex.RERR(\r\n          'InvalidPosition', `The position ${this.position} is invalid`\r\n        );\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.lineWidth = 1.5;\r\n    ctx.stroke();\r\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\r\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\r\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\r\n\r\n    if (this.last_note != null) {\r\n      const end = this.last_note.getStemX() - this.note.getX() + 5;\r\n      ctx.strokeStyle = '#000000';\r\n      ctx.lineCap = 'round';\r\n      ctx.lineWidth = 0.6;\r\n      if (this.dashed) {\r\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\r\n      } else {\r\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\r\n      }\r\n\r\n      let len;\r\n      let pattern;\r\n      switch (this.leg) {\r\n        case Renderer.LineEndType.UP:\r\n          len = -10;\r\n          pattern = this.dashed ? [3, 3] : [3, 0];\r\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\r\n          break;\r\n        case Renderer.LineEndType.DOWN:\r\n          len = 10;\r\n          pattern = this.dashed ? [3, 3] : [3, 0];\r\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/stringnumber.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n//\n// ## Description\n//\n// This file implements articulations and accents as modifiers that can be\n// attached to notes. The complete list of articulations is available in\n// `tables.js` under `Vex.Flow.articulationCodes`.\n//\n// See `tests/articulation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\n// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\nfunction L(...args) { if (Articulation.DEBUG) Vex.L('Vex.Flow.Articulation', args); }\n\nconst { ABOVE, BELOW } = Modifier.Position;\n\nconst roundToNearestHalf = (mathFn, value) => mathFn(value / 0.5) * 0.5;\n\n// This includes both staff and ledger lines\nconst isWithinLines = (line, position) => position === ABOVE ? line <= 5 : line >= 1;\n\nconst getRoundingFunction = (line, position) => {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n};\n\nconst snapLineToStaff = (canSitBetweenLines, line, position, offsetDirection) => {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + (HALF_STAFF_SPACE * -offsetDirection);\n  } else {\n    return snappedLine;\n  }\n};\n\nconst getTopY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stave.getYForTopText(textLine);\n      }\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\nconst getBottomY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stave.getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\n// Gets the initial offset of the articulation from the y value of the starting position.\n// This is required because the top/bottom text positions already have spacing applied to\n// provide a \"visually pleasent\" default position. However the y values provided from\n// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n// normalizes this asymmetry.\nconst getInitialOffset = (note, position) => {\n  const isOnStemTip = (\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN)\n  );\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n};\n\nexport class Articulation extends Modifier {\n  static get CATEGORY() { return 'articulations'; }\n  static get INITIAL_OFFSET() { return -0.5; }\n\n  // FIXME:\n  // Most of the complex formatting logic (ie: snapping to space) is\n  // actually done in .render(). But that logic belongs in this method.\n  //\n  // Unfortunately, this isn't possible because, by this point, stem lengths\n  // have not yet been finalized. Finalized stem lengths are required to determine the\n  // initial position of any stem-side articulation.\n  //\n  // This indicates that all objects should have their stave set before being\n  // formatted. It can't be an optional if you want accurate vertical positioning.\n  // Consistently positioned articulations that play nice with other modifiers\n  // won't be possible until we stop relying on render-time formatting.\n  //\n  // Ideally, when this function has completed, the vertical articulation positions\n  // should be ready to render without further adjustment. But the current state\n  // is far from this ideal.\n  static format(articulations, state) {\n    if (!articulations || articulations.length === 0) return false;\n\n    const isAbove = artic => artic.getPosition() === ABOVE;\n    const isBelow = artic => artic.getPosition() === BELOW;\n    const margin = 0.5;\n    const getIncrement = (articulation, line, position) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        (articulation.glyph.getMetrics().height / 10) + margin\n      );\n\n    articulations\n      .filter(isAbove)\n      .forEach(articulation => {\n        articulation.setTextLine(state.top_text_line);\n        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n      });\n\n    articulations\n      .filter(isBelow)\n      .forEach(articulation => {\n        articulation.setTextLine(state.text_line);\n        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n      });\n\n    const width = articulations\n      .map(articulation => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  static easyScoreHook({ articulations }, note, builder) {\n    if (!articulations) return;\n\n    const articNameToCode = {\n      staccato: 'a.',\n      tenuto: 'a-',\n    };\n\n    articulations\n      .split(',')\n      .map(articString => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic = { type: articNameToCode[name] };\n        if (position) artic.position = Modifier.PositionString[position];\n        return builder.getFactory().Articulation(artic);\n      })\n      .map(artic => note.addModifier(0, artic));\n  }\n\n  // Create a new articulation of type `type`, which is an entry in\n  // `Vex.Flow.articulationCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Articulation');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = BELOW;\n    this.render_options = {\n      font_scale: 38,\n    };\n\n    this.articulation = Flow.articulationCodes(this.type);\n    if (!this.articulation) {\n      throw new Vex.RERR('ArgumentError', `Articulation not found: ${this.type}`);\n    }\n\n    this.glyph = new Glyph(this.articulation.code, this.render_options.font_scale);\n\n    this.setWidth(this.glyph.getMetrics().width);\n  }\n\n  getCategory() { return Articulation.CATEGORY; }\n\n  // Render articulation in position next to note.\n  draw() {\n    const {\n      note, index, position, glyph,\n      articulation: { between_lines: canSitBetweenLines },\n      text_line: textLine,\n      context: ctx,\n    } = this;\n\n    this.checkContext();\n\n    if (!note || index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const stave = note.getStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = note.getCategory() === 'tabnotes';\n\n    // Articulations are centered over/under the note head.\n    const { x } = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    let y = {\n      [ABOVE]: () => {\n        glyph.setOrigin(0.5, 1);\n        const y = getTopY(note, textLine) - ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n      [BELOW]: () => {\n        glyph.setOrigin(0.5, 0);\n        const y = getBottomY(note, textLine) + ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n    }[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + noteLine;\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/articulation.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements ornaments as modifiers that can be\n// attached to notes. The complete list of ornaments is available in\n// `tables.js` under `Vex.Flow.ornamentCodes`.\n//\n// See `tests/ornament_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { TickContext } from './tickcontext';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\nfunction L(...args) { if (Ornament.DEBUG) Vex.L('Vex.Flow.Ornament', args); }\n\nexport class Ornament extends Modifier {\n  static get CATEGORY() { return 'ornaments'; }\n\n  // ## Static Methods\n  // Arrange ornaments inside `ModifierContext`\n  static format(ornaments, state) {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      width = Math.max(ornament.getWidth(), width);\n\n      if (ornament.getPosition() === Modifier.Position.ABOVE) {\n        ornament.setTextLine(state.top_text_line);\n        state.top_text_line += increment;\n      } else {\n        ornament.setTextLine(state.text_line);\n        state.text_line += increment;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // Create a new ornament of type `type`, which is an entry in\n  // `Vex.Flow.ornamentCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Ornament');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.ABOVE;\n    this.delayed = false;\n\n    this.accidentalUpper = null;\n    this.accidentalLower = null;\n\n    this.render_options = {\n      font_scale: 38,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3,\n    };\n\n    this.ornament = Flow.ornamentCodes(this.type);\n    if (!this.ornament) {\n      throw new Vex.RERR('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale);\n    this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n  }\n\n  getCategory() { return Ornament.CATEGORY; }\n\n  // Set whether the ornament is to be delayed\n  setDelayed(delayed) { this.delayed = delayed; return this; }\n\n  // Set the upper accidental for the ornament\n  setUpperAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Set the lower accidental for the ornament\n  setLowerAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Render ornament in position next to note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const ctx = this.context;\n    const stemDir = this.note.getStemDirection();\n    const stave = this.note.getStave();\n\n    // Get stem extents\n    const stemExtents = this.note.getStem().getExtents();\n    let y = stemDir === StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered\n    // outside the stave.\n    if (this.note.getCategory() === 'tabnotes') {\n      if (this.note.hasStem()) {\n        if (stemDir === StaveNote.STEM_DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else { // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === StaveNote.STEM_DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && this.note.beam) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n    let glyphY = Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      glyphX += this.glyph.getMetrics().width;\n      const nextContext = TickContext.getNextContext(this.note.getTickContext());\n      if (nextContext) {\n        glyphX += (nextContext.getX() - glyphX) * 0.5;\n      } else {\n        glyphX += (stave.x + stave.width - glyphX) * 0.5;\n      }\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    this.glyph.render(ctx, glyphX, glyphY);\n    glyphY -= this.glyph.getMetrics().height;\n\n    if (this.accidentalUpper) {\n      glyphY -= this.render_options.accidentalUpperPadding;\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ornament.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport { Vex } from './vex';\nimport { Tickable } from './tickable';\nimport { Fraction } from './fraction';\n\nexport class TickContext extends Tickable {\n  static getNextContext(tContext) {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    return contexts[index + 1];\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'TickContext');\n    this.currentTick = new Fraction(0, 1);\n    this.maxTicks = new Fraction(0, 1);\n    this.minTicks = null;\n    this.padding = 3;     // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.tickables = [];   // Notes, tabs, chords, lyrics.\n    this.notePx = 0;       // width of widest note in this context\n    this.extraLeftPx = 0;  // Extra left pixels for modifers & displace notes\n    this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n    this.tContexts = [];   // Parent array of tick contexts\n  }\n\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getWidth() { return this.width + (this.padding * 2); }\n  setPadding(padding) { this.padding = padding; return this; }\n  getMaxTicks() { return this.maxTicks; }\n  getMinTicks() { return this.minTicks; }\n  getTickables() { return this.tickables; }\n\n  getCenterAlignedTickables() {\n    return this.tickables.filter(tickable => tickable.isCenterAligned());\n  }\n\n  // Get widths context, note and left/right modifiers for formatting\n  getMetrics() {\n    const { width, notePx, extraLeftPx, extraRightPx } = this;\n    return { width, notePx, extraLeftPx, extraRightPx };\n  }\n\n  getCurrentTick() { return this.currentTick; }\n  setCurrentTick(tick) {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  // ### DEPRECATED ###\n  // Get left & right pixels used for modifiers. THIS METHOD IS DEPRECATED. Use\n  // the getMetrics() method instead!\n  getExtraPx() {\n    let left_shift = 0;\n    let right_shift = 0;\n    let extraLeftPx = 0;\n    let extraRightPx = 0;\n    for (let i = 0; i < this.tickables.length; i++) {\n      extraLeftPx = Math.max(this.tickables[i].extraLeftPx || 0, extraLeftPx);\n      extraRightPx = Math.max(this.tickables[i].extraRightPx || 0, extraRightPx);\n      const mContext = this.tickables[i].modifierContext;\n      if (mContext && mContext != null) {\n        left_shift = Math.max(left_shift, mContext.state.left_shift);\n        right_shift = Math.max(right_shift, mContext.state.right_shift);\n      }\n    }\n    return {\n      left: left_shift,\n      right: right_shift,\n      extraLeft: extraLeftPx,\n      extraRight: extraRightPx,\n    };\n  }\n\n  addTickable(tickable) {\n    if (!tickable) {\n      throw new Vex.RERR('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      this.ignore_ticks = false;\n\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max extra pixels from all tickables in the context\n      this.extraLeftPx = Math.max(this.extraLeftPx, metrics.extraLeftPx + metrics.modLeftPx);\n      this.extraRightPx = Math.max(this.extraRightPx, metrics.extraRightPx + metrics.modRightPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.extraLeftPx + this.extraRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tickcontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements text annotations as modifiers that can be attached to\n// notes.\n//\n// See `tests/annotation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n\n// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\nfunction L(...args) { if (Annotation.DEBUG) Vex.L('Vex.Flow.Annotation', args); }\n\nexport class Annotation extends Modifier {\n  static get CATEGORY() { return 'annotations'; }\n\n  // Text annotations can be positioned and justified relative to the note.\n  static get Justify() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get JustifyString() {\n    return {\n      left: Annotation.Justify.LEFT,\n      right: Annotation.Justify.RIGHT,\n      center: Annotation.Justify.CENTER,\n      centerStem: Annotation.Justify.CENTER_STEM,\n    };\n  }\n\n  static get VerticalJustify() {\n    return {\n      TOP: 1,\n      CENTER: 2,\n      BOTTOM: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get VerticalJustifyString() {\n    return {\n      above: Annotation.VerticalJustify.TOP,\n      top: Annotation.VerticalJustify.TOP,\n      below: Annotation.VerticalJustify.BOTTOM,\n      bottom: Annotation.VerticalJustify.BOTTOM,\n      center: Annotation.VerticalJustify.CENTER,\n      centerStem: Annotation.VerticalJustify.CENTER_STEM,\n    };\n  }\n\n  // Arrange annotations within a `ModifierContext`\n  static format(annotations, state) {\n    if (!annotations || annotations.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < annotations.length; ++i) {\n      const annotation = annotations[i];\n      width = Math.max(annotation.getWidth(), width);\n      if (annotation.getPosition() === Modifier.Position.ABOVE) {\n        annotation.setTextLine(state.top_text_line);\n        state.top_text_line++;\n      } else {\n        annotation.setTextLine(state.text_line);\n        state.text_line++;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // Annotations inherit from `Modifier` and is positioned correctly when\n  // in a `ModifierContext`.\n  // Create a new `Annotation` with the string `text`.\n  constructor(text) {\n    super();\n    this.setAttribute('type', 'Annotation');\n\n    this.note = null;\n    this.index = null;\n    this.text = text;\n    this.justification = Annotation.Justify.CENTER;\n    this.vert_justification = Annotation.VerticalJustify.TOP;\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    // The default width is calculated from the text.\n    this.setWidth(Flow.textWidth(text));\n  }\n\n  getCategory() { return Annotation.CATEGORY; }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family, size, weight) {\n    this.font = { family, size, weight };\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `Annotation.VerticalJustify`.\n  setVerticalJustification(just) {\n    this.vert_justification = typeof(just) === 'string'\n      ? Annotation.VerticalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `Annotation.Justify`.\n  getJustification() { return this.justification; }\n  setJustification(just) {\n    this.justification = typeof(just) === 'string'\n      ? Annotation.JustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Render text beside the note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n        this.index);\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = this.context.measureText(this.text).width;\n\n    // Estimate text height to be the same as the width of an 'm'.\n    //\n    // This is a hack to work around the inability to measure text height\n    // in HTML5 Canvas (and SVG).\n    const text_height = this.context.measureText('m').width;\n    let x;\n    let y;\n\n    if (this.justification === Annotation.Justify.LEFT) {\n      x = start.x;\n    } else if (this.justification === Annotation.Justify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.justification === Annotation.Justify.CENTER) {\n      x = start.x - text_width / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() - text_width / 2;\n    }\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n      const yt = this.note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    } else /* CENTER_STEM */{\n      const extents = this.note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 +\n        text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    this.context.fillText(this.text, x, y);\n    this.context.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/annotation.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements tablature bends.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n/**\n   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   @param release If true, render a release. (DEPRECATED)\n   @param phrase If set, ignore \"text\" and \"release\", and use the more\n                 sophisticated phrase specified.\n\n   Example of a phrase:\n\n     [{\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"half\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"1 1/2\"\n       width: 8;\n     }]\n */\nexport class Bend extends Modifier {\n  static get CATEGORY() { return 'bends'; }\n\n  static get UP() {\n    return 0;\n  }\n  static get DOWN() {\n    return 1;\n  }\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  static format(bends, state) {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Bends are always on top.\n    const text_line = state.top_text_line;\n\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor(text, release, phrase) {\n    super();\n    this.setAttribute('type', 'Bend');\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release || false;\n    this.font = '10pt Arial';\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{ type: Bend.UP, text: this.text }];\n      if (this.release) this.phrase.push({ type: Bend.DOWN, text: '' });\n    }\n\n    this.updateWidth();\n  }\n\n  getCategory() { return Bend.CATEGORY; }\n\n  setXShift(value) {\n    this.x_shift = value;\n    this.updateWidth();\n  }\n  setFont(font) { this.font = font; return this; }\n  getText() { return this.text; }\n  updateWidth() {\n    const that = this;\n\n    function measure_text(text) {\n      let text_width;\n      if (that.context) {\n        text_width = that.context.measureText(text).width;\n      } else {\n        text_width = Flow.textWidth(text);\n      }\n\n      return text_width;\n    }\n\n    let total_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if ('width' in bend) {\n        total_width += bend.width;\n      } else {\n        const additional_width = (bend.type === Bend.UP) ?\n          this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Vex.Max(additional_width, measure_text(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        total_width += bend.width;\n      }\n    }\n\n    this.setWidth(total_width + this.x_shift);\n    return this;\n  }\n  draw() {\n    this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n    }\n\n    this.setRendered();\n\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT,\n        this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const ctx = this.context;\n    const bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n    const annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n    const that = this;\n\n    function renderBend(x, y, width, height) {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderRelease(x, y, width, height) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(\n          x + width, height,\n          x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderArrowHead(x, y, direction) {\n      const width = 4;\n      const dir = direction || 1;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x - width, y + width * dir);\n      ctx.lineTo(x + width, y + width * dir);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    function renderText(x, text) {\n      ctx.save();\n      ctx.setRawFont(that.font);\n      const render_x = x - (ctx.measureText(text).width / 2);\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    }\n\n    let last_bend = null;\n    let last_drawn_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width +\n        (last_bend ? last_bend.draw_width : 0) -\n        (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend === null) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bend.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements vibratos.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Bend } from './bend';\n\nexport class Vibrato extends Modifier {\n  static get CATEGORY() { return 'vibratos'; }\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  static format(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getModifiers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n  getCategory() { return Vibrato.CATEGORY; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n  setVibratoWidth(width) {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = this.note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  // Static rendering method that can be called from\n  // other classes (e.g. VibratoBracket)\n  static renderVibrato(ctx, x, y, opts) {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - (wave_height / 2));\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + (wave_height / 2));\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y + (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y - (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vibrato.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Barline } from './stavebarline';\nimport { StaveModifier } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { Volta } from './stavevolta';\n\nexport class Stave extends Element {\n  constructor(x, y, width, options) {\n    super();\n    this.setAttribute('type', 'Stave');\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = [];  // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.font = {\n      family: 'sans-serif',\n      size: 8,\n      weight: '',\n    };\n    this.options = {\n      vertical_bar_width: 10,       // Width around vertical bar end-marker\n      glyph_spacing_px: 10,\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true,               // draw vertical bar on left\n      right_bar: true,               // draw vertical bar on right\n      spacing_between_lines_px: 10, // in pixels\n      space_above_staff_ln: 4,      // in staff lines\n      space_below_staff_ln: 4,      // in staff lines\n      top_text_position: 1,          // in staff lines\n    };\n    this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n    Vex.Merge(this.options, options);\n\n    this.resetLines();\n\n    const BARTYPE = Barline.type;\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n  }\n\n  space(spacing) { return this.options.spacing_between_lines_px * spacing; }\n\n  resetLines() {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({ visible: true });\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) *\n       this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  getOptions() { return this.options; }\n\n  setNoteStartX(x) {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    return this;\n  }\n  getNoteStartX() {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX() {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n  getTieStartX() { return this.start_x; }\n  getTieEndX() { return this.x + this.width; }\n  getX() { return this.x; }\n  getNumLines() { return this.options.num_lines; }\n  setNumLines(lines) {\n    this.options.num_lines = parseInt(lines, 10);\n    this.resetLines();\n    return this;\n  }\n  setY(y) { this.y = y; return this; }\n\n  getTopLineTopY() {\n    return this.getYForLine(0) - (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n  getBottomLineBottomY() {\n    return this.getYForLine(this.getNumLines() - 1) + (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n\n  setX(x) {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      if (mod.x !== undefined) {\n        mod.x += shift;\n      }\n    }\n    return this;\n  }\n\n  setWidth(width) {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  setMeasure(measure) { this.measure = measure; return this; }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index = 0) {\n    if (typeof index !== 'number') {\n      throw new Vex.RERR('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0];\n    if (begBarline.getType() === Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  // Coda & Segno Symbol functions\n  setRepetitionTypeLeft(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  setRepetitionTypeRight(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type, number_t, y) {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section, y) {\n    this.modifiers.push(new StaveSection(section, this.x, y));\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo, y) {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(text, position, options) {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getSpacingBetweenLines() {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY() {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const score_bottom = this.getYForLine(options.num_lines) +\n       (options.space_below_staff_ln * spacing);\n\n    return score_bottom;\n  }\n\n  getBottomLineY() {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns the y for the *center* of a staff line\n  getYForLine(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    const y = this.y + (line * spacing) + (headroom * spacing);\n\n    return y;\n  }\n\n  getLineForY(y) {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return ((y - this.y) / spacing) - headroom;\n  }\n\n  getYForTopText(line) {\n    const l = line || 0;\n    return this.getYForLine(-l - this.options.top_text_position);\n  }\n\n  getYForBottomText(line) {\n    const l = line || 0;\n    return this.getYForLine(this.options.bottom_text_position + l);\n  }\n\n  getYForNote(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    const y = this.y + (headroom * spacing) + (5 * spacing) - (line * spacing);\n\n    return y;\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(3);\n  }\n\n  addModifier(modifier, position) {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier) {\n    this.addModifier(modifier, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type) {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const { SINGLE, REPEAT_BEGIN, NONE } = Barline.type;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      this.modifiers[0].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type) {\n    // Repeat end not valid at end of stave\n    if (type !== Barline.type.REPEAT_BEGIN) {\n      this.modifiers[1].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setClef(clefSpec, size, annotation, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    this.clef = clefSpec;\n    const clefs = this.getModifiers(position, Clef.CATEGORY);\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      clefs[0].setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  setEndClef(clefSpec, size, annotation) {\n    this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  setKeySignature(keySpec, cancelKeySpec, alterKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, alterKeySpec, position);\n    } else {\n      keySignatures[0].setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec, cancelKeySpec, alterKeySpec) {\n    this.setKeySignature(keySpec, cancelKeySpec, alterKeySpec, StaveModifier.Position.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec, customPadding, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      timeSignatures[0].setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec, customPadding) {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  addKeySignature(keySpec, cancelKeySpec, alterKeySpec, position) {\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec, alterKeySpec), position);\n    return this;\n  }\n\n  addClef(clef, size, annotation, position) {\n    if (position === undefined || position === StaveModifier.Position.BEGIN) {\n      this.clef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef, size, annotation) {\n    this.addClef(clef, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  addTimeSignature(timeSpec, customPadding, position) {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec, customPadding) {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph() {\n    this.addClef('treble');\n    return this;\n  }\n\n  getModifiers(position, category) {\n    if (position === undefined) return this.modifiers;\n\n    return this.modifiers.filter(modifier =>\n      position === modifier.getPosition() &&\n      (category === undefined || category === modifier.getCategory())\n    );\n  }\n\n  sortByCategory(items, order) {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format() {\n    const begBarline = this.modifiers[0];\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n    this.sortByCategory(begModifiers, {\n      barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3,\n    });\n\n    this.sortByCategory(endModifiers, {\n      timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3,\n    });\n\n    if (begModifiers.length > 1 &&\n        begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(Barline.type.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(Barline.type.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      x -= modifier.getPadding(i);\n      if (i !== 0) {\n        x -= modifier.getWidth();\n      }\n\n      modifier.setX(x);\n\n      if (i === 0) {\n        x -= modifier.getWidth();\n      }\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      this.context.save();\n      this.context.setFillStyle(this.options.fill_style);\n      this.context.setStrokeStyle(this.options.fill_style);\n      this.context.setLineWidth(Flow.STAVE_LINE_THICKNESS);\n      if (this.options.line_config[line].visible) {\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + width, y);\n        this.context.stroke();\n      }\n      this.context.restore();\n    }\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      // Only draw modifier if it has a draw function\n      if (typeof this.modifiers[i].draw === 'function') {\n        this.modifiers[i].draw(this, this.getModifierXShift(i));\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      const text_width = this.context.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n      this.context.restore();\n    }\n\n    return this;\n  }\n\n  // Draw Simple barlines for backward compatability\n  // Do not delete - draws the beginning bar of the stave\n  drawVertical(x, isDouble) {\n    this.drawVerticalFixed(this.x + x, isDouble);\n  }\n\n  drawVerticalFixed(x, isDouble) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    if (isDouble) {\n      this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n    }\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  drawVerticalBar(x) {\n    this.drawVerticalBarFixed(this.x + x, false);\n  }\n\n  drawVerticalBarFixed(x) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines() {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number, line_config) {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration object is missing the 'visible' property.\"\n      );\n    }\n\n    if (typeof(line_config.visible) !== 'boolean') {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration) {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    for (const line_config in lines_configuration) {\n      // Allow 'null' to be used if the caller just wants the default for a particular node.\n      if (!lines_configuration[line_config]) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stave.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\n\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\n\nexport class Barline extends StaveModifier {\n  static get CATEGORY() { return 'barlines'; }\n  static get type() {\n    return {\n      SINGLE: 1,\n      DOUBLE: 2,\n      END: 3,\n      REPEAT_BEGIN: 4,\n      REPEAT_END: 5,\n      REPEAT_BOTH: 6,\n      NONE: 7,\n    };\n  }\n\n  static get typeString() {\n    return {\n      single: Barline.type.SINGLE,\n      double: Barline.type.DOUBLE,\n      end: Barline.type.END,\n      repeatBegin: Barline.type.REPEAT_BEGIN,\n      repeatEnd: Barline.type.REPEAT_END,\n      repeatBoth: Barline.type.REPEAT_BOTH,\n      none: Barline.type.NONE,\n    };\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Barline');\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n\n    const TYPE = Barline.type;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type);\n  }\n  getCategory() { return Barline.CATEGORY; }\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave) {\n    stave.checkContext();\n    this.setRendered();\n\n    switch (this.type) {\n      case Barline.type.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case Barline.type.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case Barline.type.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case Barline.type.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case Barline.type.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case Barline.type.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n  }\n\n  drawVerticalBar(stave, x, double_bar) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      stave.context.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    stave.context.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave, x) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    stave.context.fillRect(x - 5, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave, x, begin) {\n    stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = (x + x_shift) + (dot_radius / 2);\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = (y_offset / 2) - (stave.getSpacingBetweenLines() / 2);\n    let dot_y = topY + y_offset + (dot_radius / 2);\n\n    // draw the top repeat dot\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavebarline.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport { Element } from './element';\n\nexport class StaveModifier extends Element {\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n      BEGIN: 5,\n      END: 6,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'StaveModifier');\n\n    this.padding = 10;\n    this.position = StaveModifier.Position.ABOVE;\n  }\n\n  getPosition() { return this.position; }\n  setPosition(position) { this.position = position; return this; }\n  getStave() { return this.stave; }\n  setStave(stave) { this.stave = stave; return this; }\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getCategory() { return ''; }\n  makeSpacer(padding) {\n    // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n    // instead of this hack.\n\n    return {\n      getContext() { return true; },\n      setStave() {},\n      renderToStave() {},\n      getMetrics() {\n        return { width: padding };\n      },\n    };\n  }\n  placeGlyphOnLine(glyph, stave, line) {\n    glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n  }\n  getPadding(index) {\n    return (index !== undefined && index < 2 ? 0 : this.padding);\n  }\n  setPadding(padding) { this.padding = padding; return this; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavemodifier.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class Repetition extends StaveModifier {\n  static get CATEGORY() { return 'repetitions'; }\n  static get type() {\n    return {\n      NONE: 1,         // no coda or segno\n      CODA_LEFT: 2,    // coda at beginning of stave\n      CODA_RIGHT: 3,   // coda at end of stave\n      SEGNO_LEFT: 4,   // segno at beginning of stave\n      SEGNO_RIGHT: 5,  // segno at end of stave\n      DC: 6,           // D.C. at end of stave\n      DC_AL_CODA: 7,   // D.C. al coda at end of stave\n      DC_AL_FINE: 8,   // D.C. al Fine end of stave\n      DS: 9,           // D.S. at end of stave\n      DS_AL_CODA: 10,  // D.S. al coda at end of stave\n      DS_AL_FINE: 11,  // D.S. al Fine at end of stave\n      FINE: 12,        // Fine at end of stave\n    };\n  }\n\n  constructor(type, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Repetition');\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n    this.font = {\n      family: 'times',\n      size: 12,\n      weight: 'bold italic',\n    };\n  }\n\n  getCategory() { return Repetition.CATEGORY; }\n  setShiftX(x) { this.x_shift = x; return this; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'v4d', true);\n    return this;\n  }\n\n  drawSignoFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'v8c', true);\n    return this;\n  }\n\n  drawSymbolText(stave, x, text, draw_coda) {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      // Default to right symbol\n    let text_x = 0 + this.x_shift;\n    let symbol_x = x + this.x_shift;\n    if (this.symbol_type === Repetition.type.CODA_LEFT) {\n        // Offset Coda text to right of stave beginning\n      text_x = this.x + stave.options.vertical_bar_width;\n      symbol_x = text_x + ctx.measureText(text).width + 12;\n    } else {\n        // Offset Signo text to left stave end\n      symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n      text_x = symbol_x - + ctx.measureText(text).width - 12;\n    }\n\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'v4d', true);\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staverepetition.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class StaveSection extends StaveModifier {\n  static get CATEGORY() { return 'stavesection'; }\n\n  constructor(section, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveSection');\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'sans-serif',\n      size: 12,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return StaveSection.CATEGORY; }\n  setStaveSection(section) { this.section = section; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.section).width;\n    let width = text_width + 6;  // add left & right padding\n    if (width < 18) width = 18;\n    const height = 20;\n      //  Seems to be a good default y\n    const y = stave.getYForTopText(3) + this.shift_y;\n    let x = this.x + shift_x;\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n    x += (width - text_width) / 2;\n    ctx.fillText('' + this.section, x, y + 16);\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavesection.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY() { return 'stavetempo'; }\n\n  constructor(tempo, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = Modifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    };\n    this.render_options = {\n      glyph_font_scale: 30,  // font size for note\n    };\n  }\n  getCategory() { return StaveTempo.CATEGORY; }\n  setTempo(tempo) { this.tempo = tempo; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.durationToGlyph(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem);\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetempo.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { TextNote } from './textnote';\n\nexport class StaveText extends StaveModifier {\n  static get CATEGORY() { return 'stavetext'; }\n\n  constructor(text, position, options) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    Vex.Merge(this.options, options);\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n  }\n\n  getCategory() { return StaveText.CATEGORY; }\n  setStaveText(text) { this.text = text; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setText(text) {\n    this.text = text;\n  }\n\n  draw(stave) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `TextNote` is a notation element that is positioned in time. Generally\n// meant for objects that sit above/below the staff and inline with each other.\n// Examples of this would be such as dynamics, lyrics, chord changes, etc.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\nexport class TextNote extends Note {\n  static get Justification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'segno': {\n        code: 'v8c',\n        point: 40,\n        x_shift: 0,\n        y_shift: -10,\n        // width: 10 // optional\n      },\n      'tr': {\n        code: 'v1f',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_upper': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_lower': {\n        code: 'v45',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'f': {\n        code: 'vba',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'p': {\n        code: 'vbf',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'm': {\n        code: 'v62',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      's': {\n        code: 'v4a',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'z': {\n        code: 'v80',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'coda': {\n        code: 'v4d',\n        point: 40,\n        x_shift: 0,\n        y_shift: -8,\n        // width: 10 // optional\n      },\n      'pedal_open': {\n        code: 'v36',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'pedal_close': {\n        code: 'v5d',\n        point: 40,\n        x_shift: 0,\n        y_shift: 3,\n      },\n      'caesura_straight': {\n        code: 'v34',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'caesura_curved': {\n        code: 'v4b',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'breath': {\n        code: 'v6c',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'tick': {\n        code: 'v6f',\n        point: 50,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn': {\n        code: 'v72',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn_inverted': {\n        code: 'v33',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n\n      // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n      'mordent': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n    };\n  }\n\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextNote');\n\n    // Note properties\n    this.text = text_struct.text;\n    this.superscript = text_struct.superscript;\n    this.subscript = text_struct.subscript;\n    this.glyph_type = text_struct.glyph;\n    this.glyph = null;\n    this.font = {\n      family: 'Arial',\n      size: 12,\n      weight: '',\n    };\n\n    // Set font\n    if (text_struct.font) this.font = text_struct.font;\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `canvasmeasureText()`\n    if (this.glyph_type) {\n      const struct = TextNote.GLYPHS[this.glyph_type];\n      if (!struct) throw new Vex.RERR('Invalid glyph type: ' + this.glyph_type);\n\n      this.glyph = new Glyph(struct.code, struct.point, { cache: false });\n\n      if (struct.width) {\n        this.setWidth(struct.width);\n      } else {\n        this.setWidth(this.glyph.getMetrics().width);\n      }\n\n      this.glyph_struct = struct;\n    } else {\n      this.setWidth(Flow.textWidth(this.text));\n    }\n    this.line = text_struct.line || 0;\n    this.smooth = text_struct.smooth || false;\n    this.ignore_ticks = text_struct.ignore_ticks || false;\n    this.justification = TextNote.Justification.LEFT;\n  }\n\n  // Set the horizontal justification of the TextNote\n  setJustification(just) {\n    this.justification = just;\n    return this;\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    this.checkContext();\n\n    if (this.preFormatted) return;\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        this.setWidth(this.context.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      this.extraLeftPx = this.width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      this.extraLeftPx = this.width;\n    }\n\n    this.setPreFormatted(true);\n  }\n\n  // Renders the TextNote\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    let x = this.getAbsoluteX();\n    if (this.justification === TextNote.Justification.CENTER) {\n      x -= this.getWidth() / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      x -= this.getWidth();\n    }\n\n    let y;\n    if (this.glyph) {\n      y = this.stave.getYForLine(this.line + -3);\n      this.glyph.render(\n        this.context,\n        x + this.glyph_struct.x_shift,\n        y + this.glyph_struct.y_shift\n      );\n    } else {\n      y = this.stave.getYForLine(this.line + -3);\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.text, x, y);\n\n      // Width of the letter M gives us the approximate height of the text\n      const height = ctx.measureText('M').width;\n      // Get accurate width of text\n      const width = ctx.measureText(this.text).width;\n\n      // Write superscript\n      if (this.superscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.superscript, x + width + 2, y - (height / 2.2));\n      }\n\n      // Write subscript\n      if (this.subscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.subscript, x + width + 2, y + (height / 2.2) - 1);\n      }\n\n      ctx.restore();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n//\n// ## Description\n//\n// This file implements various types of clefs that can be rendered on a stave.\n//\n// See `tests/clef_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\nfunction L(...args) { if (Clef.DEBUG) Vex.L('Vex.Flow.Clef', args); }\n\nexport class Clef extends StaveModifier {\n  static get CATEGORY() { return 'clefs'; }\n\n  // Every clef name is associated with a glyph code from the font file\n  // and a default stave line number.\n  static get types() {\n    return {\n      'treble': {\n        code: 'v83',\n        line: 3,\n      },\n      'bass': {\n        code: 'v79',\n        line: 1,\n      },\n      'alto': {\n        code: 'vad',\n        line: 2,\n      },\n      'tenor': {\n        code: 'vad',\n        line: 1,\n      },\n      'percussion': {\n        code: 'v59',\n        line: 2,\n      },\n      'soprano': {\n        code: 'vad',\n        line: 4,\n      },\n      'mezzo-soprano': {\n        code: 'vad',\n        line: 3,\n      },\n      'baritone-c': {\n        code: 'vad',\n        line: 0,\n      },\n      'baritone-f': {\n        code: 'v79',\n        line: 2,\n      },\n      'subbass': {\n        code: 'v79',\n        line: 0,\n      },\n      'french': {\n        code: 'v83',\n        line: 4,\n      },\n      'tab': {\n        code: 'v2f',\n      },\n    };\n  }\n\n  // Sizes affect the point-size of the clef.\n  static get sizes() {\n    return {\n      'default': 40,\n      'small': 32,\n    };\n  }\n\n  // Annotations attach to clefs -- such as \"8\" for octave up or down.\n  static get annotations() {\n    return {\n      '8va': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: -1.2,\n                x_shift: 11,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: -0.4,\n                x_shift: 8,\n              },\n            },\n          },\n        },\n      },\n      '8vb': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: 6.3,\n                x_shift: 10,\n              },\n              'bass': {\n                line: 4,\n                x_shift: 1,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: 5.8,\n                x_shift: 6,\n              },\n              'bass': {\n                line: 3.5,\n                x_shift: 0.5,\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n\n  // Create a new clef. The parameter `clef` must be a key from\n  // `Clef.types`.\n  constructor(type, size, annotation) {\n    super();\n    this.setAttribute('type', 'Clef');\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(this.glyph.getMetrics().width);\n    L('Creating clef:', type);\n  }\n\n  getCategory() { return Clef.CATEGORY; }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n    this.clef.point = Clef.sizes[this.size];\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const anno_dict = Clef.annotations[annotation];\n      this.annotation = {\n        code: anno_dict.code,\n        point: anno_dict.sizes[this.size].point,\n        line: anno_dict.sizes[this.size].attachments[this.type].line,\n        x_shift: anno_dict.sizes[this.size].attachments[this.type].x_shift,\n      };\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  getWidth() {\n    if (this.type === 'tab' && !this.stave) {\n      throw new Vex.RERR('ClefError', \"Can't get width without stave.\");\n    }\n\n    return this.width;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n\n    if (this.type !== 'tab') return this;\n\n    let glyphScale;\n    let glyphOffset;\n    const numLines = this.stave.getOptions().num_lines;\n    switch (numLines) {\n      case 8:\n        glyphScale = 55;\n        glyphOffset = 14;\n        break;\n      case 7:\n        glyphScale = 47;\n        glyphOffset = 8;\n        break;\n      case 6:\n        glyphScale = 40;\n        glyphOffset = 1;\n        break;\n      case 5:\n        glyphScale = 30;\n        glyphOffset = -6;\n        break;\n      case 4:\n        glyphScale = 23;\n        glyphOffset = -12;\n        break;\n      default:\n        throw new Vex.RERR('ClefError', `Invalid number of lines: ${numLines}`);\n    }\n\n    this.glyph.setPoint(glyphScale);\n    this.glyph.setYShift(glyphOffset);\n\n    return this;\n  }\n\n  draw() {\n    if (!this.x) throw new Vex.RERR('ClefError', \"Can't draw clef without x.\");\n    if (!this.stave) throw new Vex.RERR('ClefError', \"Can't draw clef without stave.\");\n    this.setRendered();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setContext(this.stave.context);\n    if (this.clef.line !== undefined) {\n      this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n    }\n\n    this.glyph.renderToStave(this.x);\n\n    if (this.annotation !== undefined) {\n      this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n      this.attachment.setStave(this.stave);\n      this.attachment.setContext(this.stave.context);\n      this.attachment.renderToStave(this.x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clef.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class KeySignature extends StaveModifier {\n  static get CATEGORY() { return 'keysignatures'; }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static get accidentalSpacing() {\n    return {\n      '#': {\n        above: 6,\n        below: 4,\n      },\n      'b': {\n        above: 4,\n        below: 7,\n      },\n      'n': {\n        above: 4,\n        below: 1,\n      },\n      '##': {\n        above: 6,\n        below: 4,\n      },\n      'bb': {\n        above: 4,\n        below: 7,\n      },\n      'db': {\n        above: 4,\n        below: 7,\n      },\n      'd': {\n        above: 4,\n        below: 7,\n      },\n      'bbs': {\n        above: 4,\n        below: 7,\n      },\n      '++': {\n        above: 6,\n        below: 4,\n      },\n      '+': {\n        above: 6,\n        below: 4,\n      },\n      '+-': {\n        above: 6,\n        below: 4,\n      },\n      '++-': {\n        above: 6,\n        below: 4,\n      },\n      'bs': {\n        above: 4,\n        below: 10,\n      },\n      'bss': {\n        above: 4,\n        below: 10,\n      },\n    };\n  }\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super();\n    this.setAttribute('type', 'KeySignature');\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  getCategory() { return KeySignature.CATEGORY; }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc, nextAcc) {\n    const accGlyphData = Flow.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.stave, acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec) {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec) {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = Flow.keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types = this.accList.length > 0\n      && cancel_accList.length > 0\n      && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types\n      ? cancel_accList.length\n      : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return;\n\n    // Get the line position for each natural\n    const cancelled = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({ type: 'n', line: acc.line });\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n  }\n\n  // Deprecated\n  addToStave(stave) {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef, type) {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index) {\n    if (!this.formatted) this.format();\n\n    return (\n      this.glyphs.length === 0 || (!this.paddingForced && index < 2) ?\n        0 : this.padding\n    );\n  }\n\n  getWidth() {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec) {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec) {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format() {\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = Flow.keySignature(this.keySpec);\n    if (this.cancelKeySpec) {\n      this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    const firstAccidentalType = this.accList.length > 0 ? this.accList[0].type : null;\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      this.convertAccLines(this.stave.clef, firstAccidentalType);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(this.stave);\n      glyph.setContext(this.stave.context);\n      glyph.renderToStave(x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/keysignature.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { Vex } from './vex';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\n\nconst assertIsValidFraction = (timeSpec) => {\n  const numbers = timeSpec.split('/').filter(number => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new Vex.RERR(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach(number => {\n    if (isNaN(Number(number))) {\n      throw new Vex.RERR(\n        'BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`\n      );\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  static get CATEGORY() { return 'timesignatures'; }\n\n  static get glyphs() {\n    return {\n      'C': {\n        code: 'v41',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'vb6',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec = null, customPadding = 15) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n\n    if (timeSpec === null) return;\n\n    const padding = customPadding;\n\n    this.point = 40;\n    this.topLine = 2;\n    this.bottomLine = 4;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n    this.setPadding(padding);\n  }\n\n  getCategory() { return TimeSignature.CATEGORY; }\n\n  parseTimeSpec(timeSpec) {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code, point } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      };\n    }\n\n    assertIsValidFraction(timeSpec);\n\n    const [topDigits, botDigits] = timeSpec\n      .split('/')\n      .map(number => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    };\n  }\n\n  makeTimeSignatureGlyph(topDigits, botDigits) {\n    const glyph = new Glyph('v0', this.point);\n    glyph.topGlyphs = [];\n    glyph.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('v' + num, this.point);\n\n      glyph.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('v' + num, this.point);\n\n      glyph.botGlyphs.push(botGlyph);\n      botWidth += botGlyph.getMetrics().width;\n    }\n\n    const width = topWidth > botWidth ? topWidth : botWidth;\n    const xMin = glyph.getMetrics().x_min;\n\n    glyph.getMetrics = () => ({\n      x_min: xMin,\n      x_max: xMin + width,\n      width,\n    });\n\n    const topStartX = (width - topWidth) / 2.0;\n    const botStartX = (width - botWidth) / 2.0;\n\n    const that = this;\n    glyph.renderToStave = function renderToStave(x) {\n      let start_x = x + topStartX;\n      for (let i = 0; i < this.topGlyphs.length; ++i) {\n        const glyph = this.topGlyphs[i];\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.topLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n\n      start_x = x + botStartX;\n      for (let i = 0; i < this.botGlyphs.length; ++i) {\n        const glyph = this.botGlyphs[i];\n        that.placeGlyphOnLine(glyph, this.stave, glyph.line);\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.bottomLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n    };\n\n    return glyph;\n  }\n\n  getTimeSig() {\n    return this.timeSig;\n  }\n\n  setTimeSig(timeSpec) {\n    this.timeSig = this.parseTimeSpec(timeSpec);\n    return this;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setContext(this.stave.context);\n    this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n    this.timeSig.glyph.renderToStave(this.x);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/timesignature.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class Volta extends StaveModifier {\n  static get CATEGORY() { return 'voltas'; }\n  static get type() {\n    return {\n      NONE: 1,\n      BEGIN: 2,\n      MID: 3,\n      END: 4,\n      BEGIN_END: 5,\n    };\n  }\n\n  constructor(type, number, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return Volta.CATEGORY; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.width;\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n      // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavevolta.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Stave } from './stave';\n\nexport class TabStave extends Stave {\n  constructor(x, y, width, options) {\n    const tab_options = {\n      spacing_between_lines_px: 13,\n      num_lines: 6,\n      top_text_position: 1,\n    };\n\n    Vex.Merge(tab_options, options);\n    super(x, y, width, tab_options);\n    this.setAttribute('type', 'TabStave');\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph() {\n    this.addClef('tab');\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabstave.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Dot } from './dot';\nimport { Glyph } from './glyph';\n\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines = [];\n\n  unused_strings.forEach(strings => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString =  strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) ||\n       (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  static get CATEGORY() { return 'tabnotes'; }\n\n  // Initialize the TabNote with a `tab_struct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(tab_struct, draw_stem) {\n    super(tab_struct);\n    this.setAttribute('type', 'TabNote');\n\n    this.ghost = false; // Renders parenthesis around notes\n    // Note properties\n    //\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = tab_struct.positions;\n\n    // Render Options\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: Flow.DEFAULT_TABLATURE_FONT_SCALE,\n      // Flag to draw a stem\n      draw_stem,\n      // Flag to draw dot modifiers\n      draw_dots: draw_stem,\n      // Flag to extend the main stem through the stave and fret positions\n      draw_stem_through_stave: false,\n      // vertical shift from stave line\n      y_shift: 0,\n      // normal glyph scale\n      scale: 1.0,\n      // default tablature font\n      font: '10pt Arial',\n    });\n\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(tab_struct)}`\n      );\n    }\n\n    this.buildStem();\n\n    if (tab_struct.stem_direction) {\n      this.setStemDirection(tab_struct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n\n  reset() {\n    if (this.stave) this.setStave(this.stave);\n  }\n\n  // The ModifierContext category\n  getCategory() { return TabNote.CATEGORY; }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost) {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem() { return this.render_options.draw_stem; }\n\n  // Get the default stem extension for the note\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.tabnote_stem_up_extension\n        : glyph.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Add a dot to the note\n  addDot() {\n    const dot = new Dot();\n    this.dots += 1;\n    return this.addModifier(dot, 0);\n  }\n\n  // Calculate and store the width of the note\n  updateWidth() {\n    this.glyphs = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyph = Flow.tabToGlyph(fret, this.render_options.scale);\n      this.glyphs.push(glyph);\n      this.width = Math.max(glyph.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    this.glyph.getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave) {\n    super.setStave(stave);\n    this.context = stave.context;\n\n    // Calculate the fret number width based on font used\n    let i;\n    if (this.context) {\n      const ctx = this.context;\n      this.width = 0;\n      for (i = 0; i < this.glyphs.length; ++i) {\n        const glyph = this.glyphs[i];\n        const text = '' + glyph.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setRawFont(this.render_options.font);\n          glyph.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyph.getWidth = () => glyph.width;\n        }\n        this.width = Math.max(glyph.getWidth(), this.width);\n      }\n      this.glyph.getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({ str: line }) => stave.getYForLine(line - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions() { return this.positions; }\n\n  // Add self to the provided modifier context `mc`\n  addToModifierContext(mc) {\n    this.setModifierContext(mc);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get the `x` coordinate to the right of the note\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += (-this.width / 2) + this.width + 2;\n\n    return tieStartX;\n  }\n\n  // Get the `x` coordinate to the left of the note\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= (this.width / 2) + 2;\n\n    return tieEndX;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2;  // extra_left_px\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // extra_right_px\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = this.glyph.getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Get the default line for rest\n  getLineForRest() { return this.positions[0].str; }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.setPreFormatted(true);\n  }\n\n  // Get the x position for the stem\n  getStemX() { return this.getCenterGlyphX(); }\n\n  // Get the y position for the stem\n  getStemY() {\n    const num_lines = this.stave.getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.stave.getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag() {\n    const {\n      beam, glyph, context, stem, stem_direction,\n      render_options: { draw_stem, glyph_font_scale },\n    } = this;\n\n    const shouldDrawFlag = beam == null && draw_stem;\n\n    // Now it's the flag's turn.\n    if (glyph.flag && shouldDrawFlag) {\n      const flag_x = this.getStemX() + 1;\n      const flag_y = this.getStemY() - stem.getHeight();\n\n      const flag_code = stem_direction === Stem.DOWN\n        ? glyph.code_flag_downstem // Down stems have flags on the left.\n        : glyph.code_flag_upstem;\n\n      // Draw the Flag\n      Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code);\n    }\n  }\n\n  // Render the modifiers onto the context\n  drawModifiers() {\n    // Draw the modifiers\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled\n      if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n      modifier.setContext(this.context);\n      modifier.draw();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough() {\n    const stem_x = this.getStemX();\n    const stem_y = this.getStemY();\n    const ctx = this.context;\n\n    const stem_through = this.render_options.draw_stem_through_stave;\n    const draw_stem = this.render_options.draw_stem;\n    if (draw_stem && stem_through) {\n      const total_lines = this.stave.getNumLines();\n      const strings_used = this.positions.map(position => position.str);\n\n      const unused_strings = getUnusedStringGroups(total_lines, strings_used);\n      const stem_lines = getPartialStemLines(\n        stem_y,\n        unused_strings,\n        this.getStave(),\n        this.getStemDirection()\n      );\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stem_lines.forEach(bounds => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stem_x, bounds[0]);\n        ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions() {\n    const ctx = this.context;\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyph = this.glyphs[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = this.glyph.getWidth();\n      const tab_x = x + (note_glyph_width / 2) - (glyph.getWidth() / 2);\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n\n      if (glyph.code) {\n        Glyph.renderGlyph(ctx, tab_x, y,\n          this.render_options.glyph_font_scale * this.render_options.scale,\n          glyph.code);\n      } else {\n        ctx.save();\n        ctx.setRawFont(this.render_options.font);\n        const text = glyph.text.toString();\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == null && this.render_options.draw_stem;\n\n    this.drawPositions();\n    this.drawStemThrough();\n\n    const stem_x = this.getStemX();\n\n    this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\n    if (render_stem) {\n      this.context.openGroup('stem', null, { pointerBBox: true });\n      this.stem.setContext(this.context).draw();\n      this.context.closeGroup();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\nfunction L(...args) { if (VibratoBracket.DEBUG) Vex.L('Vex.Flow.VibratoBracket', args); }\n\nexport class VibratoBracket extends Element {\n\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n  }\n\n  // Set line position of the vibrato bracket\n  setLine(line) { this.line = line; return this; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n\n  // Draw the vibrato bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    const y = (this.start)\n      ? this.start.getStave().getYForTopText(this.line)\n      : this.stop.getStave().getYForTopText(this.line);\n\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x = (this.start)\n      ? this.start.getAbsoluteX()\n      : this.stop.getStave().getTieStartX();\n\n      // If stop note is not set then vibrato will be drawn\n      // until the end of the stave\n    const stop_x = (this.stop)\n      ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5\n      : this.start.getStave().getTieEndX() - 10;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vibratobracket.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { BoundingBox } from './boundingbox';\nimport { Note } from './note';\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\n\n/** @constructor */\nexport class ClefNote extends Note {\n  static get CATEGORY() { return 'clefnote'; }\n\n  constructor(type, size, annotation) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'ClefNote');\n\n    this.setType(type, size, annotation);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getClef() {\n    return this.clef;\n  }\n\n  setContext(context) {\n    this.context = context;\n    this.glyph.setContext(this.context);\n    return this;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  getCategory() { return ClefNote.CATEGORY; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(this.context);\n    }\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setYShift(\n      this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n    this.glyph.renderToStave(abs_x);\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.clef_obj.annotation !== undefined) {\n      const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n      if (!attachment.getContext()) {\n        attachment.setContext(this.context);\n      }\n      attachment.setStave(this.stave);\n      attachment.setYShift(\n        this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n      attachment.setXShift(this.clef_obj.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clefnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { BoundingBox } from './boundingbox';\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\n\nexport class TimeSigNote extends Note {\n  constructor(timeSpec, customPadding) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(\n      this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/timesignote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { TabTie } from './tabtie';\n\nexport class TabSlide extends TabTie {\n  static get SLIDE_UP() {\n    return 1;\n  }\n  static get SLIDE_DOWN() {\n    return -1;\n  }\n\n  static createSlideUp(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  constructor(notes, direction) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, 'sl.');\n    this.setAttribute('type', 'TabSlide');\n\n    if (!direction) {\n      const first_fret = notes.first_note.getPositions()[0].fret;\n      const last_fret = notes.last_note.getPositions()[0].fret;\n\n      direction = ((parseInt(first_fret, 10) > parseInt(last_fret, 10)) ?\n        TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP);\n    }\n\n    this.slide_direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n    this.setNotes(notes);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = this.slide_direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new Vex.RERR('BadSlide', 'Invalid slide direction');\n    }\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const slide_y = first_ys[this.first_indices[i]] +\n        this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + (3 * direction));\n      ctx.lineTo(last_x_px, slide_y - (3 * direction));\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabslide.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { StaveNote } from './stavenote';\nimport { Flow } from './tables';\n\nexport class GraceNote extends StaveNote {\n  static get CATEGORY() { return 'gracenotes'; }\n  static get LEDGER_LINE_OFFSET() { return 2; }\n  static get SCALE() { return 0.66; }\n\n  constructor(note_struct) {\n    super(Object.assign(note_struct, {\n      glyph_font_scale: Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n      stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n    }));\n    this.setAttribute('type', 'GraceNote');\n\n    this.slash = note_struct.slash;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.gracenote_stem_up_extension\n        : glyph.gracenote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  getCategory() { return GraceNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n    const ctx = this.context;\n    const stem_direction = this.getStemDirection();\n\n    if (this.slash) {\n      ctx.beginPath();\n\n      let x = this.getAbsoluteX();\n      let y = this.getYs()[0] - (this.stem.getHeight() / 2.8);\n      if (stem_direction === 1) {\n        x += 1;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + 13, y - 9);\n      } else if (stem_direction === -1) {\n        x -= 4;\n        y += 1;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + 13, y + 9);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracenote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { TabNote } from './tabnote';\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY() { return 'gracetabnotes'; }\n\n  constructor(note_struct) {\n    super(note_struct, false);\n    this.setAttribute('type', 'GraceTabNote');\n\n    Vex.Merge(this.render_options, {\n      // vertical shift from stave line\n      y_shift: 0.3,\n      // grace glyph scale\n      scale: 0.6,\n      // grace tablature font\n      font: '7.5pt Arial',\n    });\n\n    this.updateWidth();\n  }\n\n  getCategory() { return GraceTabNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracetabnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of tunings for tablature.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\n\nexport class Tuning {\n  static get names() {\n    return {\n      'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n      'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n      'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n      'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      'standardBanjo': 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  noteToInteger(noteString) {\n    return Flow.keyProperties(noteString).int_value;\n  }\n\n  setTuning(noteString) {\n    if (Tuning.names[noteString]) {\n      noteString = Tuning.names[noteString];\n    }\n\n    this.tuningString = noteString;\n    this.tuningValues = [];\n    this.numStrings = 0;\n\n    const keys = noteString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n    }\n\n    this.numStrings = keys.length;\n    for (let i = 0; i < this.numStrings; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  getValueForString(stringNum) {\n    const s = parseInt(stringNum, 10);\n    if (s < 1 || s > this.numStrings) {\n      throw new Vex.RERR(\n        'BadArguments', `String number must be between 1 and ${this.numStrings}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  getValueForFret(fretNum, stringNum) {\n    const stringValue = this.getValueForString(stringNum);\n    const f = parseInt(fretNum, 10);\n\n    if (f < 0) {\n      throw new Vex.RERR('BadArguments', 'Fret number must be 0 or higher: ' +\n          fretNum);\n    }\n\n    return stringValue + f;\n  }\n\n  getNoteForFret(fretNum, stringNum) {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return Flow.integerToNote(value) + '/' + octave;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tuning.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\n\nimport { Vex } from './vex';\nimport { Music } from './music';\n\nexport class KeyManager {\n  constructor(key) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key) {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey() { return this.key; }\n\n  reset() {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new Vex.RERR('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key) {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    };\n  }\n\n  selectNote(note) {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        'note': scaleNote,\n        'accidental': parts.accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        'note': valueNote,\n        'accidental': this.music.getNoteParts(valueNote).accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[\n      this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        'note': originalValueNote,\n        'accidental': this.music.getNoteParts(originalValueNote).accidental,\n        'change': true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] =  modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        'note': modparts.root,\n        'accidental': null,\n        'change': true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      'accidental': parts.accidental,\n      'change': true,\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/keymanager.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Modifier } from './modifier';\n\nexport class StaveHairpin extends Element {\n  static get type() {\n    return {\n      CRESC: 1,\n      DECRESC: 2,\n    };\n  }\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'A valid Formatter must be provide to draw offsets by ticks.'\n      );\n    }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px };\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note,\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes, type) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n    };\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position) {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options) {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'Hairpin needs to have either first_note or last_note set.'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params) {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.getStave().y + firstNote.getStave().height,\n      last_y: lastNote.getStave().y + lastNote.getStave().height,\n      staff_height: firstNote.getStave().height,\n    });\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavehairpin.js","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class Curve extends Element {\n  static get Position() {\n    return {\n      NEAR_HEAD: 1,\n      NEAR_TOP: 2,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      nearHead: Curve.Position.NEAR_HEAD,\n      nearTop: Curve.Position.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from, to, options) {\n    super();\n    this.setAttribute('type', 'Curve');\n\n    this.render_options = {\n      spacing: 2,\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: Curve.Position.NEAR_HEAD,\n      position_end: Curve.Position.NEAR_HEAD,\n      invert: false,\n      cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }],\n    };\n\n    Vex.Merge(this.render_options, options);\n    this.setNotes(from, to);\n  }\n\n  setNotes(from, to) {\n    if (!from && !to) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Curve needs to have either first_note or last_note set.'\n      );\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.from || !this.to);\n  }\n\n  renderCurve(params) {\n    const ctx = this.context;\n    const cps = this.render_options.cps;\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cps[0].x,\n      first_y + (cps[0].y * params.direction),\n      last_x - cp_spacing + cps[1].x,\n      last_y + (cps[1].y * params.direction),\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cps[1].x,\n      last_y + ((cps[1].y + thickness) * params.direction),\n      first_x + cp_spacing + cps[0].x,\n      first_y + ((cps[0].y + thickness) * params.direction),\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position) {\n      return typeof(position) === 'string'\n        ? Curve.PositionString[position]\n        : position;\n    }\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === Curve.Position.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === Curve.Position.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === Curve.Position.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      first_x = last_note.getStave().getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      last_x = first_note.getStave().getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/curve.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `TextDynamics` which renders traditional\n// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n//\n// You can render any dynamics string that contains a combination of\n// the following letters:  P, M, F, Z, R, S\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\nfunction L(...args) { if (TextDynamics.DEBUG) Vex.L('Vex.Flow.TextDynamics', args); }\n\nexport class TextDynamics extends Note {\n  // The glyph data for each dynamics letter\n  static get GLYPHS() {\n    return {\n      'f': {\n        code: 'vba',\n        width: 12,\n      },\n      'p': {\n        code: 'vbf',\n        width: 14,\n      },\n      'm': {\n        code: 'v62',\n        width: 17,\n      },\n      's': {\n        code: 'v4a',\n        width: 10,\n      },\n      'z': {\n        code: 'v80',\n        width: 12,\n      },\n      'r': {\n        code: 'vb1',\n        width: 12,\n      },\n    };\n  }\n\n  // A `TextDynamics` object inherits from `Note` so that it can be formatted\n  // within a `Voice`.\n  // Create the dynamics marking. `text_struct` is an object\n  // that contains a `duration` property and a `sequence` of\n  // letters that represents the letters to render\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextDynamics');\n\n    this.sequence = text_struct.text.toLowerCase();\n    this.line = text_struct.line || 0;\n    this.glyphs = [];\n\n    Vex.Merge(this.render_options, {\n      glyph_font_size: 40,\n    });\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Preformat the dynamics text\n  preFormat() {\n    let total_width = 0;\n    // Iterate through each letter\n    this.sequence.split('').forEach(letter => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new Vex.RERR('Invalid dynamics character: ' + letter);\n\n      const size =  this.render_options.glyph_font_size;\n      const glyph = new Glyph(glyph_data.code, size);\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Draw the dynamics text on the rendering context\n  draw() {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.stave.getYForLine(this.line + (-3));\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.context, letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textdynamics.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\n// Helper function to draw a line with arrow heads\nfunction drawArrowLine(ctx, point1, point2, config) {\n  const both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n  const x1 = point1.x;\n  const y1 = point1.y;\n  const x2 = point2.x;\n  const y2 = point2.y;\n\n  // For ends with arrow we actually want to stop before we get to the arrow\n  // so that wide lines won't put a flat end on the arrow.\n  const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ratio = (distance - config.arrowhead_length / 3) / distance;\n  let end_x;\n  let end_y;\n  let start_x;\n  let start_y;\n  if (config.draw_end_arrow || both_arrows) {\n    end_x = Math.round(x1 + (x2 - x1) * ratio);\n    end_y = Math.round(y1 + (y2 - y1) * ratio);\n  } else {\n    end_x = x2;\n    end_y = y2;\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    start_x = x1 + (x2 - x1) * (1 - ratio);\n    start_y = y1 + (y2 - y1) * (1 - ratio);\n  } else {\n    start_x = x1;\n    start_y = y1;\n  }\n\n  if (config.color) {\n    ctx.setStrokeStyle(config.color);\n    ctx.setFillStyle(config.color);\n  }\n\n  // Draw the shaft of the arrow\n  ctx.beginPath();\n  ctx.moveTo(start_x, start_y);\n  ctx.lineTo(end_x, end_y);\n  ctx.stroke();\n  ctx.closePath();\n\n  // calculate the angle of the line\n  const line_angle = Math.atan2(y2 - y1, x2 - x1);\n  // h is the line length of a side of the arrow head\n  const h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n  let angle1;\n  let angle2;\n  let top_x;\n  let top_y;\n  let bottom_x;\n  let bottom_y;\n\n  if (config.draw_end_arrow || both_arrows) {\n    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n    top_x = x2 + Math.cos(angle1) * h;\n    top_y = y2 + Math.sin(angle1) * h;\n\n    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n    bottom_x = x2 + Math.cos(angle2) * h;\n    bottom_y = y2 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    angle1 = line_angle + config.arrowhead_angle;\n    top_x = x1 + Math.cos(angle1) * h;\n    top_y = y1 + Math.sin(angle1) * h;\n\n    angle2 = line_angle - config.arrowhead_angle;\n    bottom_x = x1 + Math.cos(angle2) * h;\n    bottom_y = y1 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n  }\n}\n\nexport class StaveLine extends Element {\n  // Text Positioning\n  static get TextVerticalPosition() {\n    return {\n      TOP: 1,\n      BOTTOM: 2,\n    };\n  }\n\n  static get TextJustification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'StaveLine');\n\n    this.notes = notes;\n\n    this.text = '';\n\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. Unsupported with Raphael (SVG)\n      line_dash: null,\n      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: null,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n\n    this.setNotes(notes);\n  }\n\n  // Set the font for the `StaveLine` text\n  setFont(font) { this.font = font; return this; }\n  // The the annotation for the `StaveLine`\n  setText(text) { this.text = text; return this; }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Notes needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Connected notes must have similar index sizes'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle() {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle() {\n    const ctx = this.checkContext();\n\n    if (this.font) {\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    }\n\n    if (this.render_options.color) {\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position;\n    let end_position;\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = first_note.getGlyph().getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      drawArrowLine(ctx, start_position, end_position, this.render_options);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = (end_position.x - start_position.x);\n      const center_x = (delta_x / 2) + start_position.x;\n      x = center_x - (text_width / 2);\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x  -  text_width;\n    }\n\n    // Determine the y value to start the text\n    let y;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.getStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.getStave().getYForBottomText(Flow.TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staveline.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements different types of pedal markings. These notation\n// elements indicate to the performer when to depress and release the a pedal.\n//\n// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n// custom text for the release/depress pedal markings.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\nfunction L(...args) { if (PedalMarking.DEBUG) Vex.L('Vex.Flow.PedalMarking', args); }\n\n// Draws a pedal glyph with the provided `name` on a rendering `context`\n// at the coordinates `x` and `y. Takes into account the glyph data\n// coordinate shifts.\nfunction drawPedalGlyph(name, context, x, y, point) {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point);\n  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n\nexport class PedalMarking extends Element {\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'pedal_depress': {\n        code: 'v36',\n        x_shift: -10,\n        y_shift: 0,\n      },\n      'pedal_release': {\n        code: 'v5d',\n        x_shift: -2,\n        y_shift: 3,\n      },\n    };\n  }\n\n  static get Styles() {\n    return {\n      TEXT: 1,\n      BRACKET: 2,\n      MIXED: 3,\n    };\n  }\n\n  static get StylesString() {\n    return {\n      text: PedalMarking.Styles.TEXT,\n      bracket: PedalMarking.Styles.BRACKET,\n      mixed: PedalMarking.Styles.MIXED,\n    };\n  }\n\n  // Create a sustain pedal marking. Returns the defaults PedalMarking.\n  // Which uses the traditional \"Ped\" and \"*\"\" markings.\n  static createSustain(notes) {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n\n  // Create a sostenuto pedal marking\n  static createSostenuto(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  // Create an una corda pedal marking\n  static createUnaCorda(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  // ## Prototype Methods\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'PedalMarking');\n\n    this.notes = notes;\n    this.style = PedalMarking.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.font = {\n      family: 'Times New Roman',\n      size: 12,\n      weight: 'italic bold',\n    };\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      glyph_point_size: 40,\n      color: 'black',\n    };\n  }\n\n  // Set custom text for the `depress`/`release` pedal markings. No text is\n  // set if the parameter is falsy.\n  setCustomText(depress, release) {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  // Set the pedal marking style\n  setStyle(style) {\n    if (style < 1 && style > 3)  {\n      throw new Vex.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n    }\n\n    this.style = style;\n    return this;\n  }\n\n  // Set the staff line to render the markings on\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the bracket based pedal markings\n  drawBracketed() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    let prev_x;\n    let prev_y;\n    const pedal = this;\n\n    // Iterate through each note\n    this.notes.forEach((note, index, notes) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.getStave().getYForBottomText(pedal.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new Vex.RERR(\n          'InvalidConfiguration', 'The notes provided must be in order of ascending x positions'\n        );\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift = 0;\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift =  prev_is_same ? 5 : 0;\n\n        if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (pedal.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(pedal.custom_depress_text).width;\n            ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n            x_shift = (text_width / 2) + pedal.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n            x_shift = 20 + pedal.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - pedal.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - pedal.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  // Draw the text based pedal markings. This defaults to the traditional\n  // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n  drawText() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    const pedal = this;\n\n    // The glyph point size\n    const point = pedal.render_options.glyph_point_size;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach(note => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.getStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(pedal.line + 3);\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (pedal.custom_depress_text) {\n          text_width = ctx.measureText(pedal.custom_depress_text).width;\n          ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (pedal.custom_release_text) {\n          text_width = ctx.measureText(pedal.custom_release_text).width;\n          ctx.fillText(pedal.custom_release_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  // Render the pedal marking in position on the rendering context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    L('Rendering Pedal Marking');\n\n    if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.style === PedalMarking.Styles.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pedalmarking.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Renderer } from './renderer';\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\nfunction L(...args) { if (TextBracket.DEBUG) Vex.L('Vex.Flow.TextBracket', args); }\n\nexport class TextBracket extends Element {\n  // FIXME: Modifier.Position is singular while this is plural, make consistent\n  static get Positions() {\n    return {\n      TOP: 1,\n      BOTTOM: -1,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      top: TextBracket.Positions.TOP,\n      bottom: TextBracket.Positions.BOTTOM,\n    };\n  }\n\n  constructor({\n    start,\n    stop,\n    text = '',\n    superscript = '',\n    position = TextBracket.Positions.TOP,\n  }) {\n    super();\n    this.setAttribute('type', 'TextBracket');\n\n    this.start = start;\n    this.stop = stop;\n\n    this.text = text;\n    this.superscript = superscript;\n\n    this.position = typeof position === 'string'\n      ? TextBracket.PositionString[position]\n      : position;\n\n    this.line = 1;\n\n    this.font = {\n      family: 'Serif',\n      size: 15,\n      weight: 'italic',\n    };\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  // Apply the text backet styling to the provided `context`\n  applyStyle(context) {\n    // Apply style for the octave bracket\n    context.setFont(this.font.family, this.font.size, this.font.weight);\n    context.setStrokeStyle(this.render_options.color);\n    context.setFillStyle(this.render_options.color);\n    context.setLineWidth(this.render_options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed, dash) {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the font for the text\n  setFont(font) {\n    // We use Object.assign to support partial updates to the font object\n    this.font = Object.assign({}, this.font, font);\n    return this;\n  }\n  // Set the rendering `context` for the octave bracket\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the octave bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracket.Positions.TOP:\n        y =  this.start.getStave().getYForTopText(this.line);\n        break;\n      case TextBracket.Positions.BOTTOM:\n        y =  this.start.getStave().getYForBottomText(this.line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = { x: this.start.getAbsoluteX(), y };\n    const stop = { x: this.stop.getAbsoluteX(), y };\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_width = ctx.measureText(this.text).width;\n    const main_height = ctx.measureText('M').width;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - (main_height / 2.5);\n\n    // Draw the superscript\n    ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const superscript_width = ctx.measureText(this.superscript).width;\n    const super_height = ctx.measureText('M').width;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyph().getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracket.Positions.TOP) {\n      start_x += main_width + superscript_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracket.Positions.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += superscript_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(\n        ctx,\n        start_x,\n        line_y,\n        end_x,\n        line_y,\n        this.render_options.dash\n      );\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + (1 * this.position),\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textbracket.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n// be added to a voice and rendered in the middle of a stave. Since it has no\n// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n//\n// See `tests/barnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Barline } from './stavebarline';\nimport { BoundingBox } from './boundingbox';\n\n// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\nfunction L(...args) { if (BarNote.DEBUG) Vex.L('Vex.Flow.BarNote', args); }\n\nexport class BarNote extends Note {\n  constructor(type = Barline.type.SINGLE) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'BarNote');\n\n    this.metrics = {\n      widths: {},\n    };\n\n    const TYPE = Barline.type;\n    this.metrics.widths = {\n      [TYPE.SINGLE]: 8,\n      [TYPE.DOUBLE]: 12,\n      [TYPE.END]: 15,\n      [TYPE.REPEAT_BEGIN]: 14,\n      [TYPE.REPEAT_END]: 14,\n      [TYPE.REPEAT_BOTH]: 18,\n      [TYPE.NONE]: 0,\n    };\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.setType(type);\n  }\n\n  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    /* overridden to ignore */\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Render note to stave.\n  draw() {\n    this.checkContext();\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.stave);\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/barnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n\nimport { Vex } from './vex';\nimport { StemmableNote } from './stemmablenote';\n\nexport class GhostNote extends StemmableNote {\n  /** @constructor */\n  constructor(parameter) {\n    // Sanity check\n    if (!parameter) {\n      throw new Vex.RuntimeError('BadArguments',\n          'Ghost note must have valid initialization data to identify ' +\n          'duration.');\n    }\n\n    let note_struct;\n\n    // Preserve backwards-compatibility\n    if (typeof(parameter) === 'string') {\n      note_struct = { duration: parameter };\n    } else if (typeof(parameter) === 'object') {\n      note_struct = parameter;\n    } else {\n      throw new Vex.RuntimeError('BadArguments',\n          'Ghost note must have valid initialization data to identify ' +\n          'duration.');\n    }\n\n    super(note_struct);\n    this.setAttribute('type', 'GhostNote');\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  isRest() { return true; }\n\n  setStave(stave) {\n    super.setStave(stave);\n  }\n\n  addToModifierContext() { /* intentionally overridden */ return this; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    // Draw the modifiers\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(this.context);\n      modifier.draw();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ghostnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n//\n// This class implements tremolo notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\nexport class Tremolo extends Modifier {\n  static get CATEGORY() { return 'tremolo'; }\n  constructor(num) {\n    super();\n    this.setAttribute('type', 'Tremolo');\n\n    this.num = num;\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'v74';\n    this.shift_right = -2;\n    this.y_spacing = 4;\n\n    this.render_options = {\n      font_scale: 35,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'Arial',\n      size: 16,\n      weight: '',\n    };\n  }\n\n  getCategory() { return Tremolo.CATEGORY; }\n\n  draw() {\n    this.checkContext();\n\n    if (!(this.note && this.index != null)) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    let y = start.y;\n\n    x += this.shift_right;\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code);\n      y += this.y_spacing;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tremolo.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(...args) { if (Crescendo.DEBUG) Vex.L('Vex.Flow.Crescendo', args); }\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height =  params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x,  y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x,  y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x,  y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  // Initialize the crescendo's properties\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n\n    Vex.Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0,\n    });\n  }\n\n  // Set the line to center the element on\n  setLine(line) { this.line = line; return this; }\n\n  // Set the full height at the open end\n  setHeight(height) { this.height = height; return this; }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc) {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat() { this.preFormatted = true; return this; }\n\n  // Render the Crescendo object onto the canvas\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x  = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n    L(\n      'Drawing ',\n      this.decrescendo ? 'decrescendo ' : 'crescendo ',\n      this.height,\n      'x',\n      begin_x - end_x\n    );\n\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/crescendo.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a musical system, which is a collection of staves,\n// each which can have one or more voices. All voices across all staves in\n// the system are formatted together.\n\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\n\nfunction setDefaults(params, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class System extends Element {\n  constructor(params = {}) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  setOptions(options = {}) {\n    this.options = setDefaults(options, {\n      x: 10,\n      y: 10,\n      width: 500,\n      connector: null,\n      spaceBetweenStaves: 12, // stave spaces\n      factory: null,\n      debugFormatter: false,\n      formatIterations: 0,   // number of formatter tuning steps\n      options: {},\n    });\n\n    this.factory = this.options.factory || new Factory({ renderer: { el: null } });\n  }\n\n  setContext(context) {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  addConnector(type = 'double') {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    });\n    return this.connector;\n  }\n\n  addStave(params) {\n    params = setDefaults(params, {\n      stave: null,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      options: {},\n    });\n\n    if (!params.stave) {\n      const options = { left_bar: false };\n      params.stave = this.factory.Stave({\n        x: this.options.x,\n        y: this.options.y,\n        width: this.options.width,\n        options,\n      });\n    }\n\n    params.voices.forEach(voice =>\n      voice\n        .setContext(this.context)\n        .setStave(params.stave)\n        .getTickables()\n        .forEach(tickable => tickable.setStave(params.stave))\n    );\n\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  format() {\n    const formatter = new Formatter();\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices = [];\n    const debugNoteMetricsYs = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach(part => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      formatter.joinVoices(part.voices);\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach(part => part.stave.setNoteStartX(startX));\n    const justifyWidth = this.options.width - (startX - this.options.x) - Note.STAVEPADDING;\n    formatter.format(allVoices, justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune();\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  draw() {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach(d => {\n      d.voice.getTickables().forEach(note => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/system.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\n\nimport { Vex } from './vex';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { StringNumber } from './stringnumber';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { Renderer } from './renderer';\nimport { Stave } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveConnector } from './staveconnector';\nimport { System } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve } from './curve';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { EasyScore } from './easyscore';\nimport { TimeSigNote } from './timesignote';\nimport { ClefNote } from './clefnote';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { VibratoBracket } from './vibratobracket';\nimport { GhostNote } from './ghostnote';\nimport { BarNote } from './barnote';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextNote } from './textnote';\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\nfunction L(...args) { if (Factory.DEBUG) Vex.L('Vex.Flow.Factory', args); }\n\nexport const X = Vex.MakeException('FactoryError');\n\nfunction setDefaults(params = {}, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  constructor(options) {\n    L('New factory: ', options);\n    const defaults = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        context: null,\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: '',\n      },\n    };\n\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId, width = 500, height = 200) {\n    return new Factory({ renderer: { elementId, width, height } });\n  }\n\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions() { return this.options; }\n  setOptions(options) {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n    if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer() {\n    const { elementId, backend, width, height, background } = this.options.renderer;\n    if (elementId === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getStave() { return this.stave; }\n  getVoices() { return this.voices; }\n\n  // Returns pixels from current stave spacing.\n  space(spacing) { return this.options.stave.space * spacing; }\n\n  Stave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space,\n      },\n    });\n\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space * 1.3,\n      },\n    });\n\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct) {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct) {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params) {\n    params = setDefaults(params, {\n      type: 'single',\n      options: {},\n    });\n\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params) {\n    params = setDefaults(params, {\n      type: 'treble',\n      options: {\n        size: 'default',\n      },\n    });\n\n    const clefNote = new ClefNote(params.type, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  TabNote(noteStruct) {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params) {\n    params = setDefaults(params, {\n      type: null,\n      options: {},\n    });\n\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    });\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  Articulation(params) {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {},\n    });\n\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {},\n    });\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    });\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext() {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext() {\n    return new ModifierContext();\n  }\n\n  Voice(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n    const voice = new Voice(params.time);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params) {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {},\n    });\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter() {\n    return new Formatter();\n  }\n\n  Tuplet(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n        secondaryBeamBreaks: [],\n      },\n    });\n\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {},\n    });\n\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {\n        direction: undefined,\n      },\n    });\n\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    }, params.text);\n\n    if (params.options.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      options: {},\n    });\n\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options.text) line.setText(params.options.text);\n    if (params.options.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {\n        harsh: false,\n      },\n    });\n\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      text: '',\n      options: {\n        superscript: '',\n        position: 1,\n      },\n    });\n\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {}) {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        style: 'mixed',\n      },\n    });\n\n    const pedal = new PedalMarking(params.notes);\n    pedal.setStyle(PedalMarking.StylesString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  draw() {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a parser for a simple language to generate\n// VexFlow objects.\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Parser } from './parser';\nimport { Articulation } from './articulation';\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\nfunction L(...args) { if (EasyScore.DEBUG) Vex.L('Vex.Flow.EasyScore', args); }\n\nexport const X = Vex.MakeException('EasyScoreError');\n\nclass Grammar {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  begin() { return this.LINE; }\n\n  LINE() {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    };\n  }\n  PIECE() {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    };\n  }\n  PIECES() {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    };\n  }\n  PARAMS() {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    };\n  }\n  CHORDORNOTE() {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    };\n  }\n  CHORD() {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      run: (state) => this.builder.addChord(state.matches[1]),\n    };\n  }\n  NOTES() {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    };\n  }\n  NOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    };\n  }\n  SINGLENOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state) =>\n        this.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]),\n    };\n  }\n  ACCIDENTAL() {\n    return {\n      expect: [this.ACCIDENTALS],\n      maybe: true,\n    };\n  }\n  DOTS() {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      run: (state) => this.builder.setNoteDots(state.matches[0]),\n    };\n  }\n  TYPE() {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      run: (state) => this.builder.setNoteType(state.matches[2]),\n    };\n  }\n  DURATION() {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      run: (state) => this.builder.setNoteDuration(state.matches[1]),\n    };\n  }\n  OPTS() {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    };\n  }\n  KEYVALS() {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    };\n  }\n  KEYVAL() {\n    const unquote = (str) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n    };\n  }\n  VAL()  {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    };\n  }\n\n  KEY()         { return { token: '[a-zA-Z][a-zA-Z0-9]*' }; }\n  DVAL()        { return { token: '[\"][^\"]*[\"]' }; }\n  SVAL()        { return { token: \"['][^']*[']\" }; }\n  NOTENAME()    { return { token: '[a-gA-G]' }; }\n  OCTAVE()      { return { token: '[0-9]+' }; }\n  ACCIDENTALS() { return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' }; }\n  DURATIONS()   { return { token: '[0-9whq]+' }; }\n  TYPES()       { return { token: '[rRsSxX]' }; }\n  LPAREN()      { return { token: '[(]' }; }\n  RPAREN()      { return { token: '[)]' }; }\n  COMMA()       { return { token: '[,]' }; }\n  DOT()         { return { token: '[.]' }; }\n  SLASH()       { return { token: '[/]' }; }\n  MAYBESLASH()  { return { token: '[/]?' }; }\n  EQUALS()      { return { token: '[=]' }; }\n  LBRACKET()    { return { token: '\\\\[' }; }\n  RBRACKET()    { return { token: '\\\\]' }; }\n  EOL()         { return { token: '$' }; }\n}\n\nclass Builder {\n  constructor(factory) {\n    this.factory = factory;\n    this.commitHooks = [];\n    this.reset();\n  }\n\n  reset(options = {}) {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n    };\n    this.elements = {\n      notes: [],\n      accidentals: [],\n    };\n    this.rollingDuration = '8';\n    this.resetPiece();\n    Object.assign(this.options, options);\n  }\n\n  getFactory() { return this.factory; }\n\n  getElements() { return this.elements; }\n\n  addCommitHook(commitHook) {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece() {\n    L('resetPiece');\n    this.piece = {\n      chord: [],\n      duration: this.rollingDuration,\n      dots: 0,\n      type: undefined,\n      options: {},\n    };\n  }\n\n  setNoteDots(dots) {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration) {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type) {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key, value) {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key, accid, octave) {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({ key, accid, octave });\n  }\n\n  addSingleNote(key, accid, octave) {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  addChord(notes) {\n    L('startChord');\n    if (typeof(notes[0]) !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach(n => {\n        if (n) this.addNote(...n);\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece() {\n    L('commitPiece');\n    const { factory } = this;\n\n    if (!factory) return;\n\n    const options = Object.assign({}, this.options, this.piece.options);\n    const { stem, clef } = options;\n    const autoStem = stem.toLowerCase() === 'auto';\n    const stemDirection = !autoStem && stem.toLowerCase() === 'up'\n      ? StaveNote.STEM_UP\n      : StaveNote.STEM_DOWN;\n\n    // Build StaveNotes.\n    const { chord, duration, dots, type } = this.piece;\n    const keys = chord.map(note => note.key + '/' + note.octave);\n    const note = factory.StaveNote({\n      keys,\n      duration,\n      dots,\n      type,\n      clef,\n      auto_stem: autoStem,\n    });\n    if (!autoStem) note.setStemDirection(stemDirection);\n\n    // Attach accidentals.\n    const accids = chord.map(note => note.accid || null);\n    accids.forEach((accid, i) => {\n      if (accid) note.addAccidental(i, factory.Accidental({ type: accid }));\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) note.addDotToAll();\n\n    this.commitHooks.forEach(fn => fn(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.concat(accids);\n    this.resetPiece();\n  }\n}\n\nfunction setId({ id }, note) {\n  if (id === undefined) return;\n\n  note.setAttribute('id', id);\n}\n\n\nfunction setClass(options, note) {\n  if (!options.class) return;\n\n  const commaSeparatedRegex = /\\s*,\\s*/;\n\n  options.class\n    .split(commaSeparatedRegex)\n    .forEach(className => note.addClass(className));\n}\n\nexport class EasyScore {\n  constructor(options = {}) {\n    this.setOptions(options);\n    this.defaults = {\n      clef: 'treble',\n      time: '4/4',\n      stem: 'auto',\n    };\n  }\n\n  set(defaults) {\n    Object.assign(this.defaults, defaults);\n    return this;\n  }\n\n  setOptions(options) {\n    this.options = Object.assign({\n      factory: null,\n      builder: null,\n      commitHooks: [\n        setId,\n        setClass,\n        Articulation.easyScoreHook,\n      ],\n      throwOnError: false,\n    }, options);\n\n    this.factory = this.options.factory;\n    this.builder = this.options.builder || new Builder(this.factory);\n    this.grammar = new Grammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    this.options.commitHooks.forEach(commitHook => this.addCommitHook(commitHook));\n    return this;\n  }\n\n  setContext(context) {\n    if (this.factory) this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line, options = {}) {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      throw new X('Error parsing line: ' + line, result);\n    }\n    return result;\n  }\n\n  beam(notes, options = {}) {\n    this.factory.Beam({ notes, options });\n    return notes;\n  }\n\n  tuplet(notes, options = {}) {\n    this.factory.Tuplet({ notes, options });\n    return notes;\n  }\n\n  notes(line, options = {}) {\n    options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  voice(notes, voiceOptions) {\n    voiceOptions = Object.assign({ time: this.defaults.time }, voiceOptions);\n    return this.factory.Voice(voiceOptions).addTickables(notes);\n  }\n\n  addCommitHook(commitHook) {\n    return this.builder.addCommitHook(commitHook);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/easyscore.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\n\nimport { Vex } from './vex';\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\nfunction L(...args) { if (Parser.DEBUG) Vex.L('Vex.Flow.Parser', args); }\n\nexport const X = Vex.MakeException('ParserError');\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers.\nfunction flattenMatches(results) {\n  if (results.matchedString !== undefined) return results.matchedString;\n  if (results.results) return flattenMatches(results.results);\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches);\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n  // the EasyScore grammar in easyscore.js.\n  constructor(grammar) {\n    this.grammar = grammar;\n  }\n\n  // Parse `line` using current grammar. Returns {success: true} if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line) {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = -1;\n    const results = this.expect(this.grammar.begin());\n    results.errorPos = this.errorPos;\n    return results;\n  }\n\n  matchFail(returnPos) {\n    if (this.errorPos === -1) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess() {\n    this.errorPos = -1;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token, noSpace = false) {\n    const regexp = noSpace\n      ? new RegExp('^((' + token + '))')\n      : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      };\n    } else {\n      return {\n        success: false,\n        pos: this.pos,\n      };\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  expectOne(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = (maybe === true) || (rule.maybe === true);\n\n    // Execute all sub rules in sequence.\n    for (let i = 0; i < rule.expect.length; i++) {\n      const next = rule.expect[i];\n      const localPos = this.pos;\n      const result = this.expect(next);\n\n      // If `rule.or` is set, then return success if any one\n      // of the subrules match, else all subrules must match.\n      if (result.success) {\n        results.push(result);\n        oneMatch = true;\n        if (rule.or) break;\n      } else {\n        allMatches = false;\n        if (!rule.or) {\n          this.pos = localPos;\n          break;\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || (maybe === true);\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches: gotOne ? 1 : 0 };\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success) {\n        numMatches++;\n        results.push(result.results);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = (numMatches > 0) || (maybe === true);\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches };\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule) {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided the `rules` function. This\n  // ofloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(rules) {\n    L('Evaluating rules:', rules);\n    let result;\n    if (!rules) {\n      throw new X('Invalid Rule: ' + rules, rules);\n    }\n\n    // Get rule from Grammar class.\n    const rule = rules.bind(this.grammar)();\n\n    if (rule.token) {\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, (rule.noSpace === true));\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos;\n      }\n    } else if (rule.expect) {\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      throw new X('Bad grammar! No `token` or `expect` property', rule);\n    }\n\n    // If there's a trigger attached to this rule, then pull it.\n    result.matches = [];\n    if (result.results) result.results.forEach(r => result.matches.push(flattenMatches(r)));\n    if (rule.run && result.success) rule.run(result);\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/parser.js"],"sourceRoot":""}