{"version":3,"sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/./src/runtimeerror.ts","webpack://Vex/./src/flow/index.ts","webpack://Vex/./src/glyph.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/smufl.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/fonts/petalumascript_textmetrics.ts","webpack://Vex/./src/fonts/robotoslab_textmetrics.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/index.ts","webpack://Vex/./src/vex.ts","webpack://Vex/./src/fonts/bravura_glyphs.ts","webpack://Vex/./src/fonts/bravura_metrics.ts","webpack://Vex/./src/fonts/gonville_glyphs.ts","webpack://Vex/./src/fonts/gonville_metrics.ts","webpack://Vex/./src/fonts/petaluma_glyphs.ts","webpack://Vex/./src/fonts/petaluma_metrics.ts","webpack://Vex/./src/fonts/custom_glyphs.ts","webpack://Vex/./src/fonts/custom_metrics.ts","webpack://Vex/./src/boundingboxcomputation.ts","webpack://Vex/./src/flow/logging.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/raphaelcontext.ts","webpack://Vex/./node_modules/raphael/raphael.min.js","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/textfont.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","code","message","this","toString","RuntimeError","data","Error","GenericException","MakeException","WARN","LOG","TEXT_HEIGHT_OFFSET_HACK","SLASH_NOTEHEAD_WIDTH","STEM_HEIGHT","RESOLUTION","DEFAULT_NOTATION_FONT_SCALE","DEFAULT_TABLATURE_FONT_SCALE","STAVE_LINE_THICKNESS","STEM_WIDTH","DEFAULT_TIME","num_beats","beat_value","resolution","Prefix","text","MidLine","a","b","x","mid_line","parseInt","SortAndUnique","arr","cmp","eq","length","newArr","last","undefined","sort","push","drawDot","ctx","y","color","save","setFillStyle","beginPath","arc","Math","PI","closePath","fill","restore","sanitizeDuration","duration","alias","DURATION_ALIASES","DURATIONS","textWidth","articulationCodes","artic","ARTICULATIONS","accidentalCodes","acc","ACCIDENTALS","ornamentCodes","ORNAMENTS","durationToFraction","Fraction","parse","getGlyphProps","type","DURATION_CODES","glyphTypeProperties","customGlyphTypeProperties","CUSTOM_NOTEHEADS","toUpperCase","code_head","common","durationToTicks","ticks","durationToNumber","keySignature","spec","keySpec","KEY_SPECS","notes","accidentalList","acc_list","num","line","Merge","destination","source","keyProperties","clef","params","options","octave_shift","pieces","split","k","KEY_PROPERTIES_NOTE_VALUES","octave","index","stroke","props","CLEF_PROPERTIES_VALUES","clefProperties","line_shift","int_value","int_val","shift_right","extraProps","glyph_name","accidental","displaced","integerToNote","integer","noteValue","INTEGER_TO_NOTE_TABLE","tabToGlyph","fret","scale","glyph","width","shift_y","glyphMetrics","Glyph","getMetrics","height","getWidth","processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","command","nextX","nextY","doOutline","args","point","setAttribute","fontStack","getFontStack","category","metrics","x_shift","y_shift","originShift","setOptions","reset","lookupFontMetric","font","defaultValue","lookupMetric","lookupGlyph","getGlyphs","loadMetrics","x_min","x_max","ha","cached_outline","renderGlyph","x_pos","y_pos","val","DefaultFontStack","getResolution","renderOutline","moveTo","lineTo","q","quadraticCurveTo","bezierCurveTo","getOutlineBoundingBox","bboxComp","BoundingBoxComputation","addPoint","addQuadraticCurve","addBezierCurve","z","noOp","BoundingBox","x1","y1","getCode","setPoint","setStave","stave","setXShift","setYShift","bbox","getW","getH","setOriginX","xShift","abs","getX","setOriginY","yShift","getY","setOrigin","render","setRendered","applyStyle","restoreStyle","renderToStave","checkContext","context","getYForGlyphs","Element","attrs","id","newID","el","classes","boundingBox","rendered","musicFont","Registry","getDefaultRegistry","register","ID","setFontStack","setStyle","style","getStyle","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","drawWithStyle","draw","element","hasClass","className","addClass","registry","onUpdate","getAttribute","oldValue","removeClass","onRegister","isRendered","getAttributes","getContext","setContext","getBoundingBox","Position","note","text_line","position","Modifier","LEFT","modifier_context","spacingFromNextModifier","above","ABOVE","below","BELOW","left","right","RIGHT","getCategory","CATEGORY","setWidth","getNote","setNote","getIndex","setIndex","getModifierContext","setModifierContext","getPosition","setPosition","PositionString","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","getXShift","alignSubNotesWithNote","subNotes","tickContext","getTickContext","subNoteXOffset","modLeftPx","modRightPx","forEach","subNote","subTickContext","setXOffset","noteStruct","initStruct","Note","parseNoteStruct","JSON","stringify","dots","noteType","customTypes","duration_override","setDuration","setIntrinsicTicks","modifiers","customGlyphs","map","positions","playNote","modifierContext","ignore_ticks","leftDisplacedHeadPx","rightDisplacedHeadPx","voice","preFormatted","ys","align_center","setCenterAlignment","render_options","annotation_spacing","plotMetrics","yPos","xStart","getAbsoluteX","xPre1","xAbs","xPost1","notePx","xPost2","xEnd","xFreedomRight","getFormatterMetrics","freedom","xWidth","setFont","fillText","round","x2","yy","formatterMetrics","iterations","spaceDeviation","space","deviation","prefix","parseDuration","durationString","result","exec","durationProps","GLYPH_PROPS_VALID_TYPES","keys","currentTicks","getPlayNote","setPlayNote","isRest","addStroke","setPreFormatted","getStave","setYs","getYForLine","getLeftDisplacedHeadPx","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","shouldIgnoreTicks","getLineNumber","getLineForRest","getGlyph","getGlyphWidth","glyph_font_scale","getYs","getYForTopText","getVoice","setVoice","setTickContext","tc","getDuration","isDotted","hasStem","getDots","getNoteType","setBeam","beam","mc","addModifier","modifier","getModifierStartXY","state","left_shift","right_shift","glyphWidth","getNoteStartX","isCenterAligned","getCenterXShift","Tickable","padding","StaveModifier","layoutMetrics","setX","makeSpacer","placeGlyphOnLine","customShift","getPadding","setPadding","setLayoutMetrics","getLayoutMetrics","L","StaveNote","DEBUG","shiftRestVertical","rest","dir","delta","isrest","maxLine","minLine","setKeyLine","getKeyLine","dot_shiftY","keyProps","use_default_head_x","note_heads","stroke_px","DEFAULT_LEDGER_LINE_OFFSET","calculateKeyProps","buildStem","auto_stem","autoStem","setStemDirection","stem_direction","buildFlag","Stem","UP","DOWN","format","formatByY","notesList","getKeyProps","minL","stemDirection","getStemDirection","stemMax","getStemLength","stemMin","getStemMinimumLength","maxL","line_above","line_below","voice_shift","getVoiceShiftWidth","is_displaced","isDisplaced","voices","noteU","noteM","noteL","stemDelta","voiceXShift","max","lineSpacing","setStemLength","centerRest","hasStave","topNote","bottomNote","topKeys","bottomKeys","topNoteBottomY","postFormat","modifierCtx","noteHeadStyles","noteHead","buildNoteHeads","head","calcNoteDisplacements","setStem","hide","start","end","step","getKeys","lastLine","lineDiff","noteProps","NoteHead","note_type","custom_glyph_code","stem_up_x_offset","stem_down_x_offset","calculateOptimalStemDirection","Infinity","minY","maxY","w","halfLineSpacing","getSpacingBetweenLines","frac","equals","stem","getStemExtents","baseY","min","topY","isTopNote","resultLine","thisLine","isChord","hasFlag","getStemX","getCenterGlyphX","WIDTH","textLine","extents","getYForBottomText","notehead","getNoteHeadBounds","y_top","y_bottom","setYBounds","setNoteDisplaced","getTieRightX","tieStartX","getRightShift","getTieLeftX","tieEndX","restLine","bot","forceFlagRight","isInnerNoteIndex","flag","setStemStyle","getStem","getStemStyle","setLedgerLineStyle","ledgerLineStyle","getLedgerLineStyle","setFlagStyle","flagStyle","getFlagStyle","setKeyStyle","addToModifierContext","mContext","addAccidental","addArticulation","articulation","addAnnotation","annotation","addDot","dot","Dot","setDotShiftY","addDotToAll","getAccidentals","getModifiers","preFormat","yTop","yBottom","nonDisplacedX","displacedX","highestLine","getNumLines","lowestLine","highestDisplacedLine","lowestDisplacedLine","highestNonDisplacedLine","lowestNonDisplacedLine","getLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","drawLedgerLines","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getYForNote","drawModifiers","openGroup","noteheadStyle","closeGroup","drawFlag","shouldRenderFlag","noteStemHeight","getHeight","flagX","flagY","pointerBBox","drawNoteHeads","drawStem","stemStruct","getStemExtension","super_stem_extension","lines_over_octave_from_mid_line","spacing_between_lines","xBegin","shouldRenderStem","stemX","setNoteHeadXBounds","StemmableNote","x_begin","x_end","stem_extension","isStemlet","stemletHeight","renderHeightAdjustment","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","setDirection","direction","setExtension","ext","getExtension","y_offset","HEIGHT","getExtents","isStemUp","stemHeight","innerMostNoteheadY","outerMostNoteheadY","setVisibility","isVisible","setStemlet","stem_x","stem_y","y_base_offset","stemletYOffset","numerator","denominator","set","GCD","LCM","LCMM","arg0","shift","simplify","u","gcd","add","param1","param2","otherNumerator","otherDenominator","lcm","subtract","multiply","divide","compare","__compareA","copy","__compareB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","quotient","floor","fraction","toSimplifiedString","__tmp","toMixedString","f","str","Formatter","lookAhead","nextRestLine","createContexts","ContextType","addToContext","totalTicks","getTotalTicks","resolutionMultiplier","reduce","getMode","Voice","Mode","STRICT","isComplete","getResolutionMultiplier","tickToContextMap","tickList","contexts","voiceIndex","ticksUsed","getTickables","tickable","integerTicks","newContext","tickID","getTicks","array","list","softmaxFactor","maxIterations","minTotalWidth","hasMinTotalWidth","tickContexts","modiferContexts","contextGaps","total","gaps","iterationsCompleted","lossHistory","SimpleFormat","paddingBetween","ModifierContext","tick","TickContext","addTickable","totalLeftPx","totalRightPx","plotDebugging","formatter","xPos","y2","stavePadding","gap","fillRect","totalCost","toFixed","totalShift","FormatAndDraw","auto_beam","align_rests","setMode","SOFT","addTickables","beams","Beam","applyAndGetBeams","joinVoices","formatToStave","FormatAndDrawTab","tabstave","tabnotes","autobeam","opts","notevoice","tabvoice","StaveConnector","AlignRestsToNotes","alignAllNotes","alignTuplets","tuplet","alignRests","preCalculateMinTotalWidth","createTickContexts","contextList","contextMap","getMinTotalWidth","createModifierContexts","tContexts","getTicksUsed","justifyWidth","renderingContext","evaluate","firstContext","lastContext","calculateIdealDistances","adjustedJustifyWidth","getTickablesByVoice","backTickable","prevContext","j","backVoices","matchingVoices","v","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","expectedDistance","softmax","maxNegativeShiftPx","fromTickable","errorPx","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","negativeSpaceAccum","ideal","negativeShiftPx","getCenterAlignedTickables","center_x_shift","targetWidth","actualWidth","prevTick","prevMetrics","currMetrics","durationStats","leftNoteEdge","rightNote","rightMetrics","used","stats","mean","count","updateStats","totalDeviation","pow","sqrt","tune","alpha","nextContext","current","prev","next","move","cost","postFormatContexts","setSoftmaxFactor","getNoteEndX","fontData","codePoints","getName","parts","getFontData","glyphs","getCodePoints","setCodePoints","Font","Fonts","Bravura","BravuraMetrics","BravuraFont","Gonville","GonvilleMetrics","GonvilleFont","Petaluma","PetalumaMetrics","PetalumaFont","Custom","CustomMetrics","CustomFont","h","that","setY","setW","setH","mergeWith","new_x","new_y","new_w","new_h","rect","time","match","tickables","smallestTickCount","largestTickWidth","voiceGroup","getLargestTickWidth","getSmallestTickCount","getActualResolution","bb","getVoiceGroup","setVoiceGroup","g","setStrict","strict","FULL","factor","reCalculateExpTicksUsed","expTicksUsed","tickValue","tickable_bb","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","glyphPx","getNextContext","tContext","indexOf","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickablesForVoice","filter","getCurrentTick","setCurrentTick","postFormatted","Backends","LineEndType","elementRef","backend","document","getElementById","paper","Renderer","CANVAS","bolsterCanvasContext","RAPHAEL","RaphaelContext","SVG","SVGContext","buildContext","elementId","background","renderer","resize","setBackgroundFillStyle","getCanvasContext","getRaphaelContext","getSVGContext","USE_CANVAS_PROXY","CanvasContext","vexFlowCanvasContext","methodName","drawDashedLine","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","cos","ny","sin","SanitizeCanvasDims","devicePixelRatio","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_BOTH","getIntrinsicTicks","memo","beam_count","getBeamCount","break_on_indices","beam_width","max_slope","min_slope","slope_iterations","slope_cost","show_stemlets","stemlet_extension","partial_beam_length","flat_beams","min_flat_beam_offset","getDefaultBeamGroups","time_sig","groups","group","beatTotal","beatValue","generateBeams","config","nextGroup","currentGroupTotalTicks","sanitizedGroups","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","unprocessedNote","vf_notes","ticksPerGroup","unbeamable","pop","tempGroup","isFirstOrLast","prevNote","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","findFirstNote","applyStemDirection","uniqueTuplets","beamedNoteGroups","allTuplets","secondary_breaks","secondary_break_ticks","flat_beam_offset","Tuplet","LOCATION_BOTTOM","LOCATION_TOP","setTupletLocation","bracketed","setBracketed","getNotes","beamCount","breakSecondaryAt","indices","getSlopeY","first_x_px","first_y_px","slope","calculateSlope","firstNote","initialSlope","lastNote","firstStemTipY","firstStemX","getStemSlope","increment","minCost","Number","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","stemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","offset","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","totalBeamWidth","lookupBeamDirection","prev_tick","next_tick","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","getBeamLines","tick_of_duration","beam_lines","beam_started","current_beam","previous_should_break","tick_tally","should_break","prev_note","next_note","beam_alone","beam_direction","includes","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","radius","dot_list","max_shift_map","note_id","dot_shift","x_width","last_line","last_note","prev_dotted_space","half_shiftY","lineSpace","spacing_between_lines_px","number","finger","x_offset","family","size","weight","nums","nums_list","shiftLeft","shiftRight","pos","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","num_shift","numWidth","easyScoreHook","builder","fingerings","fingeringString","trim","getFactory","Fingering","fingering","FretHandFinger","setFretHandFinger","setOffsetX","setOffsetY","dot_x","dot_y","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","setNotes","first_note","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","cp_x","last_y_px","isNaN","top_cp_y","bottom_cp_y","renderText","center_x","measureText","getTieStartX","getTieEndX","StaveTie","Articulation","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveNote","noteCategory","font_scale","articulations","getIncrement","top_text_line","maxWidth","articWidth","articNameToCode","staccato","tenuto","accent","articString","aboveCode","belowCode","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","stemBaseY","getTopY","INITIAL_OFFSET","getBottomY","offsetDirection","noteLine","articLine","snappedLine","snapLineToStaff","timeSpec","customPadding","validate_args","fontLineShift","topLine","bottomLine","BEGIN","setTimeSig","timeSig","TimeSignature","parseTimeSpec","numbers","assertIsValidFraction","topDigits","botDigits","makeTimeSignatureGlyph","topGlyphs","botGlyphs","topWidth","topGlyph","botWidth","botGlyph","xMin","topStartX","botStartX","start_x","getTimeSig","UNICODE","String","fromCharCode","parenRightPaddingAdjustment","between_lines","0","1","2","3","4","5","6","7","8","9","10","11","stem_offset","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","code_flag_upstem","code_flag_downstem","ACCIDENTAL_COLUMNS_TABLE","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","some","ratioed","location","resolveGlyphs","attach","setTuplet","detach","resetTuplet","setRatioed","getNoteCount","msg","join","console","warn","log","getBeatsOccupied","getNotesOccupied","setBeatsOccupied","beats","setNotesOccupied","numerator_glyphs","unshift","denom_glyphs","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletStack","tupletCount","getYPosition","nested_tuplet_y_offset","NESTING_OFFSET","top_y","bottom_y","addGlyphWidth","notation_start_x","line_width","shiftY","colon_x","colon_radius","Type","drawBoldDoubleLine","topX","botY","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","thickness","DOUBLE","texts","singleRight","SINGLE_RIGHT","singleLeft","SINGLE_LEFT","single","SINGLE","double","brace","BRACE","bracket","BRACKET","boldDoubleLeft","boldDoubleRight","thinDouble","THIN_DOUBLE","none","NONE","setType","typeString","setText","content","shift_x","attachment_height","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","text_width","getBottomLineY","head_options","STEM_UP","glyph_code","custom_glyph","slashed","setLine","displacementStemAdjustment","fontShift","displacedFontShift","spacing","half_spacing","min_y","head_x","categorySuffix","staveSpace","breve_lines","drawSlashNoteHead","PREFORMAT","Accidental","Stroke","GraceNoteGroup","NoteSubGroup","StringNumber","Ornament","Annotation","ChordSymbol","Bend","Vibrato","POSTFORMAT","getLeftShift","getState","formatted","parenLeftPadding","parenRightPadding","cautionary","parenLeft","parenRight","accidentals","leftShift","accList","accLine","lineList","accShift","previousLine","flatLine","dblSharpLine","numAcc","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","endCase","groupMember","column","patternLength","collisionDetected","columnWidths","columnXOffsets","accCount","lastAccOnLine","clearanceRequired","clearance","collision","applyAccidentals","tickPositions","tickNoteMap","tickPosition","notesAtPosition","music","Music","scaleMap","createScaleMap","modifiedPitches","processNote","keyString","keyIndex","getNoteParts","accidentalString","pitch","sameAccidental","previouslyModified","getGraceNotes","fontScale","parenWidth","setAsCautionary","accX","accY","major","dorian","mixolydian","minor","scales","root_index","isValidNoteValue","NUM_TONES","isValidIntervalValue","interval","noteString","toLowerCase","getKeyParts","getNoteValue","noteValues","getIntervalValue","intervalString","intervals","getCanonicalNoteName","canonical_notes","getCanonicalIntervalName","intervalValue","diatonic_intervals","getRelativeNoteValue","sum","getRelativeNoteName","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","keySigParts","scaleName","scaleTypes","keySigString","noteLocation","root_indices","roots","rootName","noteName","grace_notes","show_slur","slur","slur_y_shift","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","beamNotes","graceNote","TieClass","TabTie","createHammeron","createPulloff","string_number","dashed","leg","shift_left","num_shiftR","x_widthL","x_widthR","num_width","setLineEndType","setStringNumber","setLastNote","setDashed","line_space","stem_ext","bottom","STEM_DOWN","setLineCap","len","pattern","Justify","VerticalJustify","justification","CENTER","vert_justification","TOP","center","centerStem","CENTER_STEM","top","BOTTOM","annotations","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","JustifyString","text_height","has_stem","stem_base","yt","HorizontalJustify","SymbolTypes","SymbolModifiers","symbolBlocks","horizontal","horizontalJustify","vertical","verticalJustify","useKerning","fontFamily","chordSymbolMetrics","global","superSubRatio","debug","noFormat","getMetricForGlyph","glyphCode","PetalumaScriptTextMetrics","RobotoSlabTextMetrics","getMetricForCharacter","NOTEXTFORMAT","textMetricsForEngravingFont","getYOffsetForText","ix","metric","engravingFontResolution","getWidthForCharacter","advanceWidth","getWidthForGlyph","getYShiftForGlyph","yOffset","getXShiftForGlyph","leftSideBearing","superscriptOffset","subscriptOffset","kerningOffset","chordSymbol","lowerKerningText","upperKerningText","instances","nonSuperWidth","instance","fontAdj","glyphAdj","lineSpaces","vAlign","symbol","sup","isSuperscript","sub","isSubscript","subAdj","adj","symbolType","symbolTypes","GLYPH","pointsToPixels","TEXT","over","spacingBetweenBlocks","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","symIx","barIx","findIndex","xoff","yoff","accum","getKerningAdjustment","kernConst","prevSymbol","rv","preKernUpper","preKernLower","xx","symbolModifier","symbolModifiers","SUPERSCRIPT","getSymbolBlock","parameters","glyphArgs","twidth","LINE","addSymbolBlock","addText","addTextSuperscript","addTextSubscript","SUBSCRIPT","addGlyphSuperscript","addGlyph","addGlyphOrText","addLine","setFontSize","setVertical","verticalJustifyString","setHorizontal","horizontalJustifyString","classString","sp","curY","setHorizontalJustification","hJustify","vJustify","release","phrase","line_style","bend_width","release_width","updateWidth","bends","last_width","bend","getText","total_width","additional_width","draw_width","bend_height","annotation_y","renderRelease","renderArrowHead","cp_y","setRawFont","render_x","last_bend","last_drawn_width","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vibratos","vibrato","setHarsh","vx","vy","renderVibrato","num_waves","end_x","measure","endClef","vertical_bar_width","glyph_spacing_px","num_lines","fill_style","left_bar","right_bar","space_above_staff_ln","space_below_staff_ln","top_text_position","bounds","resetLines","BARTYPE","Barline","addEndModifier","line_config","visible","bottom_text_position","getOptions","setNoteStartX","begBarline","setNumLines","lines","getTopLineTopY","getBottomLineBottomY","mod","setMeasure","getModifierXShift","getType","REPEAT_BEGIN","setRepetitionTypeLeft","Repetition","setRepetitionTypeRight","setVoltaType","number_t","Volta","setSection","section","StaveSection","setTempo","tempo","StaveTempo","StaveText","headroom","getLineForY","END","setBegBarType","setEndBarType","setClef","clefSpec","clefs","Clef","addClef","setEndClef","setKeySignature","cancelKeySpec","keySignatures","KeySignature","addKeySignature","setKeySig","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","barlines","keysignatures","timesignatures","splice","widths","paddingRight","paddingLeft","lastBarlineIdx","xMax","drawVertical","isDouble","drawVerticalFixed","top_line","bottom_line","drawVerticalBar","drawVerticalBarFixed","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","Stave","TYPE","REPEAT_END","REPEAT_BOTH","paddings","layoutMetricsMap","repeatBegin","repeatEnd","repeatBoth","drawVerticalEndBar","drawRepeatBar","double_bar","begin","Justification","superscript","subscript","struct","TextNote","GLYPHS","smooth","types","attachment","numLines","alterKeySpec","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","accidentalSpacing","xPosition","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","concat","addToStave","convertAccLines","customLines","alterKey","convertToAlterAccList","cancelAccList","firstAccidentalType","tab_struct","draw_stem","ghost","draw_dots","draw_stem_through_stave","TabNote","setGhost","stem_extension_override","getStemY","getPositions","stemDownLine","stemStartLine","shouldDrawFlag","flag_x","flag_y","flag_code","drawStemThrough","stem_through","stem_lines","unused_strings","up_stem","down_stem","line_spacing","total_lines","strings","containsLastString","containsFirstString","line_ys","string","isTopBound","isBottomBound","getPartialStemLines","strings_used","getUnusedStringGroups","drawPositions","tab_x","clearRect","render_stem","note_struct","GraceNote","SCALE","LEDGER_LINE_OFFSET","slash","ret","staveNoteScale","getStaveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","offsets","slashStemOffset","slashBeamOffset","protrusions","beam_slope","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","ignoreTicks","setGlyph","GlyphNote","X","setIndexValue","elem","clear","enableDefaultRegistry","defaultRegistry","disableDefaultRegistry","class","updateIndex","INDEXES","getElementsByAttribute","attrName","getElementsByType","getElementsByClass","flagCode","getBaseCustomNoteHeadGlyph","offsetYBaseStemUp","offsetYTopStemUp","offsetYBaseStemDown","offsetYTopStemDown","stem_struct","all_voices","note_end","stroke_spacing","strokes","strokeList","strokeShift","addEndNote","arrow","arrow_shift_x","arrow_y","text_y","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","delayed","accidentalUpper","accidentalLower","accidentalLowerPadding","accidentalUpperPadding","ornament","adjustForStemDirection","reportedWidth","stemUpYOffset","ornamentAlignWithNoteHead","ornamentNoteTransition","ornaments","ornamentRelease","ornamentAttack","ornamentArticulation","jazzOrnaments","setDelayed","setUpperAccidental","accid","setLowerAccidental","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","symbol_type","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSignoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","draw_coda","text_x","symbol_x","modifierWidth","bpm","stem_height","setStaveText","volta","vert_height","BEGIN_END","tab_options","addTabGlyph","TabStave","VibratoBracket","bracket_data","stop","stop_x","semibrave_rest","get_semibrave_rest","number_of_measures","show_number","number_line","number_glyph_point","padding_left","padding_right","line_thickness","serif_thickness","use_symbols","symbol_spacing","semibrave_rest_glyph_scale","xs","NaN","getXs","drawLine","sbl","serif","lineThicknessHalf","drawSymbols","n4","n2","n1","semibrave_rest_width","yMiddle","MultiMeasureRest","clef_obj","getClef","ClefNote","abs_x","KeySigNote","timeSignature","TimeSigNote","from","to","Curve","NEAR_HEAD","position_end","invert","cps","nearHead","nearTop","NEAR_TOP","renderCurve","first_x","first_y","last_x","last_y","cp_spacing","end_metric","TextDynamics","text_struct","sequence","glyph_font_size","letter","glyph_data","letter_x","current_letter","TextVerticalPosition","TextJustification","drawArrowHead","x0","y0","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","StaveLine","text_justification","applyLineStyle","setLineDash","applyFontStyle","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","point1","point2","end_y","start_y","both_arrows","distance","ratio","angle1","angle2","top_x","line_angle","drawArrowLine","vertical_position","Styles","PedalMarking","drawPedalGlyph","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","mixed","MIXED","createSustain","createSostenuto","pedal","setCustomText","createUnaCorda","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","TextBracket","Positions","dash","show_bracket","underline_superscript","main_width","main_height","super_y","superscript_width","super_height","line_y","BarNote","barline","parameter","GhostNote","connector","spaceBetweenStaves","noJustification","debugFormatter","formatIterations","noPadding","details","Factory","addConnector","addStave","spaceAbove","spaceBelow","debugNoteMetrics","allVoices","debugNoteMetricsYs","part","lastY","System","setDefaults","defaults","default_options","assign","face","newFromElementId","renderQ","systems","staves","initRenderer","getVoices","RepeatNote","ghostNote","textNoteStruct","textNote","barNote","clefNote","timeSigNote","keySigNote","fontSize","fontWeight","stringNumber","multimeasurerest","secondaryBeamBreaks","curve","tie","vibratoBracket","textBracket","system","EasyScore","StylesString","TextFont","expect","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","run","commitPiece","COMMA","zeroOrMore","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","or","LPAREN","NOTES","RPAREN","addChord","matches","NOTE","oneOrMore","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","maybe","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","slice","SVAL","DVAL","token","Grammar","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","chord","addNote","accids","fn","setId","setClass","Builder","throwOnError","grammar","parser","Parser","success","voiceOptions","flattenMatches","results","matchedString","errorPos","matchFail","returnPos","matchSuccess","matchToken","noSpace","regexp","RegExp","incrementPos","expectOne","rule","allMatches","oneMatch","localPos","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","rules","intrinsicTicks","tickMultiplier","getTuplet","noteCount","notesOccupied","applyTickMultiplier","getTickMultiplier","smufl","\"","first_fret","last_fret","TabSlide","SLIDE_DOWN","SLIDE_UP","slide_direction","createSlideUp","createSlideDown","slide_y","GraceTabNote","tuningString","setTuning","noteToInteger","Tuning","names","tuningValues","numStrings","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","setKey","getKey","keyParts","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","valueNote","originalValueNote","KeyManager","hairpin","left_shift_px","right_shift_px","FormatByTicksAndDraw","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","StaveHairpin","setRenderOptions","renderHairpin","dis","staff_height","l_shift","r_shift","CRESC","DECRESC","Tremolo","isGraceNote","y_spacing","Crescendo","decrescendo","extend_left","extend_right","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","Vex","Flow","unicode","glyphPropsValidTypes","TIME4_4","BM","start_time","Date","getTime","elapsed","default","small","smuflCode","treble","shiftX","bass","lineCount","pedalMarking","up","down","digits","shiftLine","tupletPoint","articStaccatissimoAbove","articStaccatissimoBelow","tremolo","offsetYStemUp","offsetYStemDown","offsetXStemUp","offsetXStemDown","grace","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadTriangleUpWhole","noteheadXHalf","noteheadXBlack","noteheadXWhole","noteheadBlack","noteheadSquareWhite","coda","segno","tabStem","staveTempo","gClef","fClef","ornamentTurn","ornamentTurnSlash","arrowheadBlackDown","straight","wiggly","arrowheadBlackUp","breathMarkTick","breathMarkComma","ornamentTrill","ornamentMordent","ornamentShortTrill","standard","restQuarterStemUp","restQuarterStemDown","custom","csymDiminished","csymHalfDiminished","csymAugmented","csymParensLeftTall","csymParensRightTall","csymBracketLeftTall","csymBracketRightTall","csymParensLeftVeryTall","csymParensRightVeryTall","csymDiagonalArrangementSlash","csymMinor","csymMajorSeventh","accidentalSharp","accidentalFlat","brassScoop","brassDoitMedium","brassFallLipShort","brassLiftMedium","brassFallRoughMedium","brassBend","brassMuteClosed","brassMuteOpen","brassFlip","brassJazzTurn","brassSmear","noteheadBlackStemUp","noteheadBlackStemDown","noteheadHalfStemUp","noteheadHalfStemDown","noteheadWholeStemUp","noteheadWholeStemDown","addX","addY","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","p3x","p3y","p0","p1","p2","p3","b2ac","t1","t2","StackTrace","block","Array","stack","canvas","CANVAS_BROWSER_SIZE_LIMIT","background_fillStyle","blur","cap_type","lineCap","lineDash","parseFloat","startAngle","endAngle","antiClockwise","glow","path","pen","font_family","font_size","font_weight","attributes","background_attributes","shadow_attributes","state_stack","transform","setSize","setViewBox","viewBox","attr","normalizeAngle","tmp","arcHelper","largeArcFlag","sweepFlag","out","sa","num_paths","opacity","strokeWidth","txt","getBBox","remove","e","is","on","A","_engine","T","arguments","version","eve","et","rt","circle","ellipse","image","doc","win","was","Raphael","ca","customAttributes","TouchEvent","DocumentTouch","mousedown","mousemove","mouseup","_","B","C","S","M","E","_ISURL","N","P","F","R","_availableAttrs","cursor","cx","cy","gradient","href","rx","ry","src","target","title","I","_availableAnimAttrs","D","hs","rg","O","V","W","Y","G","_radial_gradient","H","U","_rectPath","$","Z","_getPath","_getBBox","Q","mapPath","Tt","_g","SVGAngle","implementation","hasFeature","J","K","createElement","innerHTML","firstChild","behavior","tt","constructor","svg","vml","_Paper","_id","isArray","rad","deg","snapTo","createUUID","random","replace","setWindow","initWin","it","ActiveXObject","write","close","body","createPopup","createTextRange","ht","queryCommandValue","display","appendChild","defaultView","getComputedStyle","getPropertyValue","nt","at","st","hex","ot","getRGB","lt","rgb","cache","ut","ct","hsb2rgb","hsl2rgb","rgb2hsl","rgb2hsb","_path2string","_preload","cssText","onload","removeChild","onerror","error","substring","charAt","hsb","hsl","getColor","parsePathString","ft","mt","parseTransformString","ps","sleep","setTimeout","pt","dt","gt","xt","bezierBBox","isBBoxIntersect","apply","findDotsAtSegment","vt","_path2curve","segment1","segment2","bez1","bez2","St","isPointInsideBBox","pathIntersection","pathIntersectionNumber","isPointInsidePath","pathBBox","_removedFactory","bt","_pathToRelative","rel","_t","_pathToAbsolute","wt","kt","Bt","asin","tan","Ct","bx","by","qx","qy","At","_parseDots","_tear","Mt","_tofront","_toback","_insertafter","_insertbefore","toMatrix","Et","matrix","transformPath","_extractTransform","Pt","translate","rotate","dirtyT","sx","sy","Nt","Lt","_equaliseTransform","_getContainer","tagName","container","pixelWidth","offsetWidth","pixelHeight","offsetHeight","pathToRelative","path2curve","toFilter","scalex","shear","scaley","acos","isSimple","isSuperSimple","noRotation","toTransformString","zt","returnValue","Ft","originalEvent","preventDefault","Rt","cancelBubble","jt","stopPropagation","It","documentElement","scrollTop","scrollLeft","clientX","clientY","Dt","addEventListener","targetTouches","removeEventListener","attachEvent","event","detachEvent","qt","Ot","touches","identifier","_drag","node","nextSibling","parentNode","opera","getElementByPoint","insertBefore","move_scope","Vt","unmousemove","unmouseup","end_scope","start_scope","Wt","Yt","events","unbind","shape","removeData","getData","hover","mouseover","mouseout","unhover","unmouseover","unmouseout","Gt","Ht","drag","onDragOver","undrag","unmousedown","__set__","ce","setStart","setFinish","getSize","raphael","elementFromPoint","getBoundingClientRect","ownerDocument","clientTop","clientLeft","pageYOffset","pageXOffset","createSVGRect","getIntersectionList","getById","raphaelid","getElementsByBBox","getElementsByPoint","isPointInside","realPath","removed","dirty","bboxwt","offsetx","offsety","Xt","Ut","$t","Zt","Qt","getTotalLength","getPointAtLength","getSubpath","getPath","Jt","easing_formulas","linear","backIn","backOut","elastic","bounce","easeIn","easeOut","easeInOut","Kt","te","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","ee","paused","ms","easing","initstatus","anim","percent","status","re","real","callback","repeat","totalOrigin","ae","percents","ie","ne","times","timestamp","del","origin","se","animateWith","animation","onAnimation","delay","100","animate","setTime","pause","resume","oe","le","he","ue","fe","pe","exclude","insertAfter","registerFont","fonts","getFont","bold","lighter","bolder","test","print","descent","fullfill","ninja","readyState","listeners","firstDefined","lastDefined","zIndex","_events","separator","nts","off","once","classic","diamond","open","oval","setAttributeNS","createElementNS","webkitTapHighlightColor","defs","fx","fy","gradientTransform","isFinite","fillOpacity","documentMode","protocol","host","pathname","search","patternTransform","arrows","endPath","endMarker","startPath","startMarker","getElementsByTagName","markerHeight","markerWidth","orient","refX","refY","startdx","enddx","square","butt","visibility","nodeValue","createTextNode","clip","startString","endString","patternUnits","show","parentElement","clientWidth","clientHeight","def","toFront","toBack","stdDeviation","_blur","removeAttribute","preserveAspectRatio","_viewBox","xmlns","_left","_top","renderfix","_vbSize","getScreenCTM","createSVGMatrix","desc","fillpos","coordsize","rotation","flip","coordorigin","fillsize","clipRect","textpath","fontStyle","joinstyle","miterlimit","endcap","dashstyle","span","bbx","method","color2","colors","focus","focussize","focusposition","_oid","_viewBoxShift","skew","auxGetBBox","runtimeStyle","margin","Path","textpathok","styleSheets","createStyleSheet","addRule","namespaces","rvml","attrNamesToIgnoreMap","fontAttrNamesToIgnore","svgNS","parent","iePolyfill","svgElementType","cls","navigator","userAgent","italic","fontAttributes","fontArray","applyAttributes","visibleWidth","visibleHeight","yMin","viewBoxString","attrNamesToIgnore","nodeName","propertyName","lastChild","rectangle","textContent","ieMeasureTextFix","widthCorrection","setStaveSection","getFontDataByName","maxSizeGlyph","registryInstance","serifs","monospaced","description","getFontFamilies","hash","fontRegistry","fontWeightToBold","fw","fontStyleToItalic","fs","getTextFontFromVexFontData","fd","fallback","candidates","families","perfect","find","ok","fontName","overwrite","exists","td"],"mappings":"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,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,IACT,GAAM,IACN,gBAAmB,EACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElBu6B,IAAM,CACJ,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,OAAU,EACV,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,iBAAoB,EACpB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,GACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,GACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,OAAU,GACV,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,iBAAoB,GACpB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,GACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,kBACT,MAAS,IACT,GAAM,kBACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,GACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,GACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,GACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,KAAM,CACJ,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,OAAU,GACV,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,KACN,iBAAoB,GACpB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,OAAU,EACV,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,OAAU,IACV,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,iBAAoB,IACpB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,OAAU,GACV,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,iBAAoB,GACpB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,GAAM,EACN,gBAAmB,EACnB,aAAgB,KAElB,IAAK,CACH,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,GAAM,EACN,gBAAmB,EACnB,aAAgB,KAElB,IAAK,CACH,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,GAAM,EACN,gBAAmB,EACnB,aAAgB,KAElB,IAAK,CACH,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,GAAM,EACN,gBAAmB,EACnB,aAAgB,MAIpB,WAAc,kBACd,WAAc,IACd,YAAe,6B,6GC/1BJ,EAAAltB,sBAAwB,CACnCvkD,KAAM,aACNwxE,OAAO,EACPt6B,QAAQ,GACR,OAAU,CACR,IAAK,CACH,MAAS,EACT,MAAS,IACT,MAAS,EACT,MAAS,IACT,GAAM,IACN,gBAAmB,EACnB,aAAgB,KAElB,EAAK,CACH,MAAS,IACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,MAElB,EAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,KAElB,EAAK,CACH,MAAS,iBACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,kBACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,iBACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,IACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,iBAAoB,GACpB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,KAElBu6B,IAAM,CACJ,MAAS,IACT,MAAS,IACT,MAAS,KACT,MAAS,KACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,kBACT,MAAS,KACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,KACT,MAAS,KACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,KACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,IACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,EACT,MAAS,IACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,EACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,EACnB,aAAgB,KAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,KACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,MAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,GACT,MAAS,IACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,MAElB,IAAK,CACH,MAAS,kBACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,iBACT,MAAS,mBACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,IACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,KAElB,KAAM,CACJ,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,KACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,IACT,MAAS,KACT,OAAU,IACV,MAAS,EACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,MAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,KACT,MAAS,KACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,OAAU,GACV,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,iBAAoB,GACpB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,OAAU,GACV,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,iBAAoB,GACpB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,IACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MA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,aA+EE,yEA/EM,GAAAo/C,aACR,aA+EE,yEA/EM,GAAA0K,aACR,aA+EE,0EA/EM,GAAAyQ,cAER,aA8EE,oEA9EM,GAAA9zC,QA+EN,qEA/EY,GAAAC,SAgFZ,gFAhFmB,GAAA/pB,oBAErB,UAAe,EAAA4pE,K,2FCvEf,YAIA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QAOa,EAAAA,IAAM,CACjBC,KAAM,CACJC,QAAS,EAAA3nC,QACTjsC,YAAW,eACXoD,YAAW,cACXkB,aAAc,GAAAA,aACduvE,qBAAsB,EAAAp+D,wBACtBq+D,QAAS,GAAAxzE,aACTJ,4BAA2B,+BAC3BD,WAAU,cACV4C,UAAS,YACTiI,YAAW,cACX4B,QAAO,WACPlJ,SAAQ,WACRk1B,SAAQ,WACR7O,UAAS,YACTyvB,MAAK,QACLlyC,MAAK,QACLyoD,MAAK,QACL12C,UAAS,YACTX,cAAa,gBACb8zC,WAAU,aACV9hC,MAAK,QACL6qB,WAAU,aACVvnB,KAAI,OACJka,SAAQ,WACRm1B,SAAQ,WACRlK,QAAO,UACPpd,KAAI,OACJC,QAAO,UACPsnB,eAAc,iBACdnrD,KAAI,OACJsa,gBAAe,kBACf2yC,iBAAgB,mBAChBzyC,YAAW,cACXwb,aAAY,eACZ0N,WAAU,aACVC,YAAW,cACX8U,QAAO,UACP1sC,SAAQ,WACRyQ,eAAc,iBACd4wC,SAAQ,WACR/R,aAAY,eACZiS,WAAU,aACVx0B,cAAa,gBACb00B,YAAW,cACX9kD,KAAI,OACJwjC,OAAM,SACN6O,KAAI,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","file":"vexflow-min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 81);\n","// Default runtime exception.\nexport class RuntimeError {\n  constructor(private readonly code: string, private readonly message?: string) {\n    this.code = code;\n    this.message = message;\n  }\n\n  toString(): string {\n    return '[RuntimeError] ' + this.code + ':' + this.message;\n  }\n}\n\nexport class GenericException extends Error {\n  data: unknown;\n\n  constructor(message?: string, data?: unknown) {\n    super(message);\n    this.message = message;\n    this.data = data;\n  }\n}\n\nexport const MakeException = (name: string): typeof GenericException => {\n  return class extends GenericException {\n    constructor(message?: string, data?: unknown) {\n      super(message, data);\n      this.name = name;\n    }\n  };\n};\n","// HACK:\n// Since text origins are positioned at the baseline, we must\n// compensate for the ascender of the text. Of course, 1 staff space is\n// a very poor approximation.\n//\n// This will be deprecated in the future. This is a temporary solution until\n// we have more robust text metrics.\nimport {DrawContext, IAccItem, ICodeValue, IKeyPropertiesParams, IKeyProps, IType} from \"../types/common\";\nimport {RuntimeError} from \"../runtimeerror\";\nimport {\n  accidentalList,\n  ACCIDENTALS,\n  ARTICULATIONS,\n  CLEF_PROPERTIES_VALUES,\n  CUSTOM_NOTEHEADS, DURATION_ALIASES, DURATION_CODES, DURATIONS,\n  INTEGER_TO_NOTE_TABLE,\n  KEY_PROPERTIES_NOTE_VALUES, KEY_SPECS, ORNAMENTS\n} from \"../tables\";\nimport {IClefPropertyValue} from \"../types/clef\";\nimport {IGlyphProps} from \"../types/glyph\";\nimport {Glyph} from \"../glyph\";\nimport {IArticulation} from \"../types/articulation\";\nimport {IAccidental} from \"../types/accidental\";\nimport {Fraction} from \"../fraction\";\nimport {WARN, LOG} from \"./logging\";\n\nexport const TEXT_HEIGHT_OFFSET_HACK = 1;\nexport const SLASH_NOTEHEAD_WIDTH = 15;\nexport const STEM_HEIGHT = 35;\nexport const RESOLUTION = 16384;\nexport const DEFAULT_NOTATION_FONT_SCALE = 39;\nexport const DEFAULT_TABLATURE_FONT_SCALE = 39;\nexport const STAVE_LINE_THICKNESS = 1;\nexport const STEM_WIDTH = 1.5;\nexport const DEFAULT_TIME = {num_beats: 4, beat_value: 4, resolution: RESOLUTION};\nexport {WARN, LOG};\n\nconst VEX_PREFIX = 'vf-';\n\n// Used by various classes (e.g., SVGContext) to provide a\n// unique prefix to element names (or other keys in shared namespaces).\nexport const Prefix = (text: string): string => {\n  return VEX_PREFIX + text;\n}\n\n// Round number to nearest fractional value (`.5`, `.25`, etc.)\nconst RoundN = (x: number, n: number): number => {\n  return (x % n) >= (n / 2)\n    ? parseInt((x / n).toString(), 10) * n + n\n    : parseInt((x / n).toString(), 10) * n\n};\n\n// Locate the mid point between stave lines. Returns a fractional line if a space.\nexport const MidLine = (a: number, b: number): number => {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = RoundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n}\n\n// Take `arr` and return a new list consisting of the sorted, unique,\n// contents of arr. Does not modify `arr`.\nexport const SortAndUnique = <T>(arr: T[], cmp: (a: T, b: T) => number, eq: <T>(a: T, b: T) => boolean): T[] => {\n  if (arr.length > 1) {\n    const newArr = [];\n    let last = undefined;\n    arr.sort(cmp);\n\n    for (let i = 0; i < arr.length; ++i) {\n      if (i === 0 || !eq(arr[i], last)) {\n        newArr.push(arr[i]);\n      }\n      last = arr[i];\n    }\n\n    return newArr;\n  } else {\n    return arr;\n  }\n};\n\n// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n//\n// `ctx`: Canvas context.\n// `x`, `y`: Dot coordinates.\nexport const drawDot = (ctx: DrawContext, x: number, y: number, color: string): void => {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n// Used to convert duration aliases to the number based duration.\n// If the input isn't an alias, simply return the input.\n//\n// example: 'q' -> '4', '8' -> '8'\nexport const sanitizeDuration = (duration: string): string => {\n  const alias = DURATION_ALIASES[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  if (DURATIONS[duration] === undefined) {\n    throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n  }\n\n  return duration;\n};\n\nexport const textWidth = (text: any): number => 7 * text.toString().length;\nexport const articulationCodes = (artic: string): IArticulation => ARTICULATIONS[artic];\nexport const accidentalCodes = (acc: string): IAccidental => ACCIDENTALS[acc];\nexport const ornamentCodes = (acc: string): ICodeValue => ORNAMENTS[acc];\nexport const durationToFraction = (duration: string): Fraction => new Fraction().parse(sanitizeDuration(duration));\n\n// Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\nexport const getGlyphProps = (duration: string, type?: string): any => {\n  duration = sanitizeDuration(duration);\n  type = type || 'n'; // default type is a regular note\n\n  // Lookup duration for default glyph head code\n  const code = DURATION_CODES[duration];\n  if (code === undefined) {\n    return null;\n  }\n\n  // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n  let glyphTypeProperties = code.type[type];\n\n  // If this isn't a standard type, then lookup the custom note head map.\n  if (glyphTypeProperties === undefined) {\n    // Try and get it from the custom list of note heads\n    const customGlyphTypeProperties = CUSTOM_NOTEHEADS[type.toUpperCase()];\n\n    // If not, then return with nothing\n    if (customGlyphTypeProperties === undefined) {\n      return null;\n    }\n\n    // Otherwise set it as the code_head value\n    glyphTypeProperties = {\n      code_head: customGlyphTypeProperties.code,\n      ...customGlyphTypeProperties,\n    };\n  }\n\n  // Merge duration props for 'duration' with the note head properties.\n  return {...code.common, ...glyphTypeProperties};\n};\n\n// Convert the `duration` to total ticks\nexport const durationToTicks = (duration: string): number => {\n  duration = sanitizeDuration(duration);\n\n  const ticks = DURATIONS[duration];\n  if (ticks === undefined) {\n    return null;\n  }\n\n  return ticks;\n};\n\n// Convert the `duration` to an number\nexport const durationToNumber = (duration: string): number => durationToFraction(duration).value();\nexport const keySignature = (spec: string): IAccItem[] => {\n  const keySpec = KEY_SPECS[spec];\n\n  if (!keySpec) {\n    throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n  }\n\n  if (!keySpec.acc) {\n    return [];\n  }\n\n  const notes = accidentalList(keySpec.acc);\n\n  const acc_list: IAccItem[] = [];\n  for (let i = 0; i < keySpec.num; ++i) {\n    const line = notes[i];\n    acc_list.push({type: keySpec.acc, line});\n  }\n\n  return acc_list;\n};\n\nconst clefProperties = (clef: string): IClefPropertyValue => {\n  if (!clef) throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n\n  const props = CLEF_PROPERTIES_VALUES[clef];\n  if (!props) throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n\n  return props;\n};\n\n// Merge `destination` hash with `source` hash, overwriting like keys\n// in `source` if necessary.\nexport const Merge = <T>(destination: T, source: T): T => {\n  for (const property in source) { // eslint-disable-line guard-for-in\n    destination[property] = source[property];\n  }\n  return destination;\n}\n\n/*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option,\n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\nexport const keyProperties = (key: string, clef?: string, params?: IKeyPropertiesParams): IKeyProps => {\n  if (clef === undefined) {\n    clef = 'treble';\n  }\n\n  const options = {octave_shift: 0};\n\n  if (typeof params === 'object') {\n    Merge(options, params);\n  }\n\n  const pieces = key.split('/');\n\n  if (pieces.length < 2) {\n    throw new RuntimeError('BadArguments', `Key must have note + octave and an optional glyph: ${key}`);\n  }\n\n  const k = pieces[0].toUpperCase();\n  const value = KEY_PROPERTIES_NOTE_VALUES[k];\n  if (!value) throw new RuntimeError('BadArguments', 'Invalid key name: ' + k);\n  if (value.octave) pieces[1] = value.octave;\n\n  let octave = parseInt(pieces[1], 10);\n\n  // Octave_shift is the shift to compensate for clef 8va/8vb.\n  octave += -1 * options.octave_shift;\n\n  const base_index = (octave * 7) - (4 * 7);\n  let line = (base_index + value.index) / 2;\n  line += clefProperties(clef).line_shift;\n\n  let stroke = 0;\n\n  if (line <= 0 && (((line * 2) % 2) === 0)) stroke = 1;  // stroke up\n  if (line >= 6 && (((line * 2) % 2) === 0)) stroke = -1; // stroke down\n\n  // Integer value for note arithmetic.\n  const int_value = typeof (value.int_val) !== 'undefined'\n    ? (octave * 12) + value.int_val\n    : null;\n\n  /* Check if the user specified a glyph. */\n  const code = value.code;\n  const shift_right = value.shift_right;\n  let extraProps: IType = {} as IType;\n  if (pieces.length > 2 && pieces[2]) {\n    const glyph_name = pieces[2].toUpperCase();\n    extraProps = CUSTOM_NOTEHEADS[glyph_name] || {} as IType;\n  }\n\n  return {\n    key: k,\n    octave,\n    line,\n    int_value,\n    accidental: value.accidental,\n    code,\n    stroke,\n    shift_right,\n    displaced: false,\n    ...extraProps,\n  } as IKeyProps;\n};\n\nexport const integerToNote = (integer: number): string => {\n  if (typeof (integer) === 'undefined') {\n    throw new RuntimeError('BadArguments', 'Undefined integer for integerToNote');\n  }\n\n  if (integer < -2) {\n    throw new RuntimeError('BadArguments', `integerToNote requires integer > -2: ${integer}`);\n  }\n\n  const noteValue = INTEGER_TO_NOTE_TABLE[integer];\n  if (!noteValue) {\n    throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n  }\n\n  return noteValue;\n};\n\nexport const tabToGlyph = (fret: string, scale = 1.0): IGlyphProps => {\n  let glyph = null;\n  let width = 0;\n  let shift_y = 0;\n\n  if (fret.toString().toUpperCase() === 'X') {\n    const glyphMetrics = new Glyph('accidentalDoubleSharp', DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n    glyph = 'accidentalDoubleSharp';\n    width = glyphMetrics.width;\n    shift_y = -glyphMetrics.height / 2;\n  } else {\n    width = textWidth(fret.toString());\n  }\n\n  return {\n    text: fret,\n    code: glyph,\n    getWidth: () => width * scale,\n    shift_y,\n  } as IGlyphProps;\n};\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport {Element} from './element';\nimport {BoundingBoxComputation} from './boundingboxcomputation';\nimport {BoundingBox} from './boundingbox';\nimport {DrawContext, ICoordinates} from \"./types/common\";\nimport {DefaultFontStack, Font} from \"./smufl\";\nimport {Stave} from \"./stave\";\nimport {IGlyphLookup, IGlyphMetrics, IGlyphOptions} from \"./types/glyph\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nfunction processOutline(outline: any[], originX: number, originY: number, scaleX: number, scaleY: number, outlineFns: any) {\n  let command;\n  let x;\n  let y;\n  let i = 0;\n\n  function nextX() {\n    return originX + outline[i++] * scaleX;\n  }\n\n  function nextY() {\n    return originY + outline[i++] * scaleY;\n  }\n\n  function doOutline(command: string, ...args: any[]) {\n    outlineFns[command](...args);\n  }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        doOutline(command, nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        doOutline(command, nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        doOutline(command, nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      case 'z':\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  bbox: BoundingBox;\n  code: string;\n  metrics: IGlyphMetrics;\n  topGlyphs: Glyph[];\n  botGlyphs: Glyph[];\n\n  private options: IGlyphOptions;\n  private originShift: ICoordinates;\n  private x_shift: number;\n  private y_shift: number;\n  private scale: number;\n  private point: number;\n  private stave: Stave;\n\n  /*\n    Static methods used to implement loading and rendering glyphs.\n\n    Below categoryPath can be any metric path under 'glyphs', so stem.up would respolve\n    to glyphs.stem.up.shifX, glyphs.stem.up.shiftY, etc.\n  */\n  static lookupFontMetric({font, category, code, key, defaultValue}: any): any {\n    let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, null);\n    if (value === null) {\n      value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n    }\n    return value;\n  }\n\n  static lookupGlyph(fontStack: Font[], code: string): IGlyphLookup {\n    if (!fontStack) {\n      throw new RuntimeError('BAD_FONTSTACK', 'Font stack is misconfigured');\n    }\n\n    let glyph;\n    let font;\n    for (let i = 0; i < fontStack.length; i++) {\n      font = fontStack[i];\n      glyph = font.getGlyphs()[code];\n      if (glyph) break;\n    }\n\n    if (!glyph) {\n      throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n\n    return {glyph, font};\n  }\n\n  static loadMetrics(fontStack: Font[], code: string, category: string = null): IGlyphMetrics {\n    const {glyph, font} = Glyph.lookupGlyph(fontStack, code);\n\n    const x_shift = category ? Glyph.lookupFontMetric({\n      font, category, code,\n      key: 'shiftX', defaultValue: 0\n    }) : 0;\n    const y_shift = category ? Glyph.lookupFontMetric({\n      font, category, code,\n      key: 'shiftY', defaultValue: 0\n    }) : 0;\n    const scale = category ? Glyph.lookupFontMetric({\n      font, category, code,\n      key: 'scale', defaultValue: 1\n    }) : 1;\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline: number[];\n\n    const CACHE = true;\n    if (glyph.o) {\n      if (CACHE) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ') as any;\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ') as any;\n      }\n\n      return {\n        x_min,\n        x_max,\n        x_shift,\n        y_shift,\n        scale,\n        ha,\n        outline,\n        font,\n      } as IGlyphMetrics;\n    } else {\n      throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   *\n   * @param {!Object} ctx The canvas context.\n   * @param {number} x_pos X coordinate.\n   * @param {number} y_pos Y coordinate.\n   * @param {number} point The point size to use.\n   * @param {string} val The glyph code in font.getGlyphs()\n   */\n  static renderGlyph(ctx: DrawContext, x_pos: number, y_pos: number, point: number, val: string, options?: any): IGlyphMetrics {\n    const params = {\n      fontStack: DefaultFontStack,\n      category: null,\n      ...options\n    };\n    const metrics = Glyph.loadMetrics(params.fontStack, val, params.category);\n    point = params.category ? Glyph.lookupFontMetric({\n      font: metrics.font,\n      category: params.category,\n      code: val,\n      key: 'point',\n      defaultValue: point\n    }) : point;\n    const scale = point * 72.0 / (metrics.font.getResolution() * 100.0);\n\n    Glyph.renderOutline(ctx, metrics.outline, scale * metrics.scale, x_pos + metrics.x_shift, y_pos + metrics.y_shift);\n    return metrics;\n  }\n\n  static renderOutline(ctx: DrawContext, outline: any[], scale: number, x_pos: number, y_pos: number): void {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n      // z: ctx.fill.bind(ctx), // ignored\n    });\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline: any[], scale: number, x_pos: number, y_pos: number): BoundingBox {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n      z: bboxComp.noOp.bind(bboxComp),\n    });\n\n    return new BoundingBox(\n      bboxComp.x1,\n      bboxComp.y1,\n      bboxComp.width(),\n      bboxComp.height()\n    );\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code: string, point: number, options?: any) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      fontStack: this.getFontStack(),\n      category: null,\n    };\n\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  getCode(): string {\n    return this.code;\n  }\n\n  setOptions(options: any): void {\n    this.options = {...this.options, ...options};\n    this.reset();\n  }\n\n  setPoint(point: number): this {\n    this.point = point;\n    return this;\n  }\n\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    return this;\n  }\n\n  setXShift(x_shift: number): this {\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  setYShift(y_shift: number): this {\n    this.y_shift = y_shift;\n    return this;\n  }\n\n  reset(): void {\n    this.metrics = Glyph.loadMetrics(this.options.fontStack, this.code, this.options.category);\n    // Override point from metrics file\n    this.point = this.options.category ? Glyph.lookupFontMetric({\n      category: this.options.category,\n      font: this.metrics.font,\n      code: this.code,\n      key: 'point',\n      defaultValue: this.point,\n    }) : this.point;\n\n    this.scale = this.point * 72 / (this.metrics.font.getResolution() * 100);\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale * this.metrics.scale,\n      this.metrics.x_shift,\n      this.metrics.y_shift,\n    );\n  }\n\n  getMetrics(): IGlyphMetrics {\n    if (!this.metrics) {\n      throw new RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale * this.metrics.scale,\n      x_max: this.metrics.x_max * this.scale * this.metrics.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n    } as IGlyphMetrics;\n  }\n\n  setOriginX(x: number): void {\n    const {bbox} = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y: number): void {\n    const {bbox} = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x: number, y: number): void {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx: DrawContext, x: number, y: number): void {\n    if (!this.metrics) {\n      throw new RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale * this.metrics.scale;\n\n    this.setRendered();\n    this.applyStyle(ctx);\n    Glyph.renderOutline(ctx, outline, scale,\n      x + this.originShift.x + this.metrics.x_shift,\n      y + this.originShift.y + this.metrics.y_shift);\n    this.restoreStyle(ctx);\n  }\n\n  renderToStave(x: number): void {\n    this.checkContext();\n\n    if (!this.metrics) {\n      throw new RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale * this.metrics.scale;\n\n    this.setRendered();\n    this.applyStyle();\n    Glyph.renderOutline(this.context, outline, scale,\n      x + this.x_shift + this.metrics.x_shift, this.stave.getYForGlyphs() + this.y_shift + this.metrics.y_shift);\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a generic base class for VexFlow, with implementations\n// of general functions and properties that can be inherited by all VexFlow elements.\nimport {Registry} from './registry';\nimport {DrawContext} from \"./types/common\";\nimport {BoundingBox} from \"./boundingbox\";\nimport {DefaultFontStack, Font} from \"./smufl\";\nimport {IElementAttributes} from \"./types/element\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class Element {\n  static ID = 1000;\n\n  context: DrawContext;\n  rendered: boolean;\n  style: any;\n  attrs: IElementAttributes;\n  boundingBox: BoundingBox;\n  fontStack: Font[];\n  musicFont: Font;\n  registry: Registry;\n\n  static newID(): string {\n    return 'auto' + (Element.ID++);\n  }\n\n  constructor({type} = {} as IElementAttributes) {\n    this.attrs = {\n      id: Element.newID(),\n      el: null,\n      type: type || 'Base',\n      classes: {},\n    };\n\n    this.boundingBox = null;\n    this.context = null;\n    this.rendered = false;\n    this.fontStack = DefaultFontStack;\n    this.musicFont = DefaultFontStack[0];\n\n    // If a default registry exist, then register with it right away.\n    if (Registry.getDefaultRegistry()) {\n      Registry.getDefaultRegistry().register(this);\n    }\n  }\n\n  // set music font\n  setFontStack(fontStack: Font[]): this {\n    this.fontStack = fontStack;\n    this.musicFont = fontStack[0];\n    return this;\n  }\n\n  getFontStack(): Font[] {\n    return this.fontStack;\n  }\n\n  // set the draw style of a stemmable note:\n  setStyle(style: any): this {\n    this.style = style;\n    return this;\n  }\n\n  getStyle(): any {\n    return this.style;\n  }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context = this.context, style = this.getStyle()): this {\n    if (!style) return this;\n\n    context.save();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    if (style.lineWidth) context.setLineWidth(style.lineWidth);\n    return this;\n  }\n\n  restoreStyle(context = this.context, style = this.getStyle()): this {\n    if (!style) return this;\n    context.restore();\n    return this;\n  }\n\n  // draw with style of an element.\n  drawWithStyle(): void {\n    this.checkContext();\n    this.applyStyle();\n    this.draw();\n    this.restoreStyle();\n  }\n\n  draw(element?: any, x_shift?: any): void {\n    // do nothing\n  }\n\n  // An element can have multiple class labels.\n  hasClass(className: string): boolean {\n    return (this.attrs.classes[className] === true);\n  }\n\n  addClass(className: string): this {\n    this.attrs.classes[className] = true;\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: className,\n        oldValue: null,\n      });\n    }\n    return this;\n  }\n\n  removeClass(className: string): this {\n    delete this.attrs.classes[className];\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: null,\n        oldValue: className,\n      });\n    }\n    return this;\n  }\n\n  // This is called by the registry after the element is registered.\n  onRegister(registry: Registry): this {\n    this.registry = registry;\n    return this;\n  }\n\n  isRendered(): boolean {\n    return this.rendered;\n  }\n\n  setRendered(rendered = true): this {\n    this.rendered = rendered;\n    return this;\n  }\n\n  getAttributes(): IElementAttributes {\n    return this.attrs;\n  }\n\n  getAttribute(name: string): any {\n    return this.attrs[name];\n  }\n\n  setAttribute(name: string, value: any): this {\n    const id = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    if (this.registry) {\n      // Register with old id to support id changes.\n      this.registry.onUpdate({id, name, value, oldValue});\n    }\n    return this;\n  }\n\n  getContext(): DrawContext {\n    return this.context;\n  }\n\n  setContext(context: DrawContext): this {\n    this.context = context;\n    return this;\n  }\n\n  getBoundingBox(): BoundingBox {\n    return this.boundingBox;\n  }\n\n  // Validators\n  checkContext(): DrawContext {\n    if (!this.context) {\n      throw new RuntimeError('NoContext', 'No rendering context attached to instance');\n    }\n    return this.context;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `Modifier` is an abstract interface for notational elements that modify\n// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n//\n// For a `Modifier` instance to be positioned correctly, it must be part of\n// a `ModifierContext`. All modifiers in the same context are rendered relative to\n// one another.\n//\n// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\nimport {Element} from './element';\nimport {ModifierContext} from \"./modifiercontext\";\nimport {Note} from \"./note\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport enum Position {\n  CENTER = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  ABOVE = 3,\n  BELOW = 4\n}\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) LOG('Vex.Flow.Modifier', args); }\nexport class Modifier extends Element {\n  public note: Note;\n\n  protected width: number;\n  protected text_line: number;\n  protected position: Position;\n  protected y_shift: number;\n  protected index: number;\n  protected x_shift: number;\n\n  private spacingFromNextModifier: number;\n  private modifier_context: ModifierContext;\n\n  static get CATEGORY(): string {\n    return 'none';\n  }\n\n  // Modifiers can be positioned almost anywhere, relative to a note.\n  static get Position(): typeof Position {\n    return Position;\n  }\n\n  static get PositionString(): Record<string, number> {\n    return {\n      above: Modifier.Position.ABOVE,\n      below: Modifier.Position.BELOW,\n      left: Modifier.Position.LEFT,\n      right: Modifier.Position.RIGHT,\n    } as Record<string, number>;\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Modifier');\n\n    this.width = 0;\n\n    // Modifiers are attached to a note and an index. An index is a\n    // specific head in a chord.\n    this.note = null;\n    this.index = null;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.modifier_context = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  // Called when position changes\n  reset(): void {\n    // do nothing\n  }\n\n  // Every modifier has a category. The `ModifierContext` uses this to determine\n  // the type and order of the modifiers.\n  getCategory(): string {\n    return Modifier.CATEGORY;\n  }\n\n  // Get and set modifier widths.\n  getWidth(): number {\n    return this.width;\n  }\n\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n  getNote(): Note {\n    return this.note;\n  }\n\n  setNote(note: Note): this {\n    this.note = note;\n    return this;\n  }\n\n  // Get and set note index, which is a specific note in a chord.\n  getIndex(): number {\n    return this.index;\n  }\n\n  setIndex(index: number): this {\n    this.index = index;\n    return this;\n  }\n\n  // Every modifier must be part of a `ModifierContext`.\n  getModifierContext(): ModifierContext {\n    return this.modifier_context;\n  }\n\n  setModifierContext(c: ModifierContext): this {\n    this.modifier_context = c;\n    return this;\n  }\n\n  // Get and set articulation position.\n  getPosition(): number {\n    return this.position;\n  }\n\n  setPosition(position: string | number): this {\n    this.position = typeof (position) === 'string'\n      ? Modifier.PositionString[position]\n      : position;\n    this.reset();\n    return this;\n  }\n\n  // Set the `text_line` for the modifier.\n  setTextLine(line: number): this {\n    this.text_line = line;\n    return this;\n  }\n\n  // Shift modifier down `y` pixels. Negative values shift up.\n  setYShift(y: number): this {\n    this.y_shift = y;\n    return this;\n  }\n\n  setSpacingFromNextModifier(x: number): void {\n    this.spacingFromNextModifier = x;\n  }\n\n  getSpacingFromNextModifier(): number {\n    return this.spacingFromNextModifier;\n  }\n\n  // Shift modifier `x` pixels in the direction of the modifier. Negative values\n  // shift reverse.\n  setXShift(x: number): void {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n  }\n\n  getXShift(): number {\n    return this.x_shift;\n  }\n\n  // Render the modifier onto the canvas.\n  draw(): void {\n    this.checkContext();\n    throw new RuntimeError('MethodNotImplemented', 'draw() not implemented for this modifier.');\n  }\n\n  // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n  alignSubNotesWithNote(subNotes: Note[], note: Note): void {\n    // Shift over the tick contexts of each note\n    const tickContext = note.getTickContext();\n    const metrics = tickContext.getMetrics();\n    const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx\n      + this.getSpacingFromNextModifier();\n\n    subNotes.forEach((subNote) => {\n      const subTickContext = subNote.getTickContext();\n      subNote.setStave(note.stave);\n      subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements an abstract interface for notes and chords that\n// are rendered on a stave. Notes have some common properties: All of them\n// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n//\n// Some notes have stems, heads, dots, etc. Most notational elements that\n// surround a note are called *modifiers*, and every note has an associated\n// array of them. All notes also have a rendering context and belong to a stave.\nimport {Tickable} from './tickable';\nimport {Stave} from \"./stave\";\nimport {DrawContext, ICoordinates, IMetrics} from \"./types/common\";\nimport {ModifierContext} from \"./modifiercontext\";\nimport {TickContext} from \"./tickcontext\";\nimport {Voice} from \"./voice\";\nimport {BoundingBox} from \"./boundingbox\";\nimport {Beam} from \"./beam\";\nimport {INoteDuration, INoteRenderOptions, IParsedNote, IStaveNoteStruct} from \"./types/note\";\nimport {IGlyphProps} from \"./types/glyph\";\nimport {ITabNotePositon} from \"./types/tabnote\";\nimport {Glyph} from \"./glyph\";\nimport {Stroke} from \"./strokes\";\nimport {ModifierClass} from \"./types/modifiercontext\";\nimport {Dot} from \"./dot\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {drawDot, durationToTicks, getGlyphProps} from \"./flow\";\nimport {GLYPH_PROPS_VALID_TYPES} from \"./tables\";\n\nexport class Note extends Tickable {\n  stave: Stave;\n  render_options: INoteRenderOptions;\n  duration: string;\n  positions: ITabNotePositon[];\n\n  protected dots: number;\n  protected leftDisplacedHeadPx: number;\n  protected rightDisplacedHeadPx: number;\n  protected noteType: string;\n  protected customGlyphs: IGlyphProps[];\n  protected ys: number[];\n  protected glyph: IGlyphProps|Glyph;\n\n  private customTypes: string[];\n  private playNote: Note;\n\n  static get CATEGORY(): string {\n    return 'note';\n  }\n\n  // Debug helper. Displays various note metrics for the given\n  // note.\n  static plotMetrics(ctx: DrawContext, note: Note, yPos: number): void {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n    const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.notePx;\n    const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n    const xEnd = note.getAbsoluteX()\n      + metrics.notePx\n      + metrics.rightDisplacedHeadPx\n      + metrics.modRightPx;\n    const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = (yPos + 7);\n\n    function stroke(x1: number, x2: number, color: string, yy: number = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation),\n        xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  static parseDuration(durationString: string): INoteDuration {\n    if (typeof (durationString) !== 'string') {\n      return null;\n    }\n\n    const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n    const result = regexp.exec(durationString);\n    if (!result) {\n      return null;\n    }\n\n    const duration = result[1];\n    const dots = result[2].length;\n    const type = result[3] || 'n';\n\n    return {duration, dots, type};\n  }\n\n  static parseNoteStruct(noteStruct: IStaveNoteStruct): IParsedNote {\n    const durationString = noteStruct.duration;\n    const customTypes: string[] = [];\n\n    // Preserve backwards-compatibility\n    const durationProps = Note.parseDuration(durationString);\n    if (!durationProps) {\n      return null;\n    }\n\n    // If specified type is invalid, return null\n    let type = noteStruct.type;\n    if (type && !GLYPH_PROPS_VALID_TYPES[type]) {\n      return null;\n    }\n\n    // If no type specified, check duration or custom types\n    if (!type) {\n      type = durationProps.type || 'n';\n\n      // If we have keys, try and check if we've got a custom glyph\n      if (noteStruct.keys !== undefined) {\n        noteStruct.keys.forEach((k, i) => {\n          const result = k.split('/');\n          // We have a custom glyph specified after the note eg. /X2\n          customTypes[i] = (result && result.length === 3) ? result[2] : type;\n        });\n      }\n    }\n\n    // Calculate the tick duration of the note\n    let ticks = durationToTicks(durationProps.duration);\n    if (ticks == null) {\n      return null;\n    }\n\n    // Are there any dots?\n    const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n    if (typeof (dots) !== 'number') {\n      return null;\n    }\n\n    // Add ticks as necessary depending on the numbr of dots\n    let currentTicks = ticks;\n    for (let i = 0; i < dots; i++) {\n      if (currentTicks <= 1) return null;\n\n      currentTicks = currentTicks / 2;\n      ticks += currentTicks;\n    }\n\n    return {\n      duration: durationProps.duration,\n      type,\n      customTypes,\n      dots,\n      ticks,\n    };\n  }\n\n  // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n  // positioning and layout.\n  // To create a new note you need to provide a `noteStruct`, which consists\n  // of the following fields:\n  //\n  // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n  // `dots`: The number of dots, which affects the duration.\n  // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n  //\n  // The range of values for these parameters are available in `src/tables.js`.\n  constructor(noteStruct: IStaveNoteStruct) {\n    super();\n    this.setAttribute('type', 'Note');\n\n    if (!noteStruct) {\n      throw new RuntimeError(\n        'BadArguments', 'Note must have valid initialization data to identify duration and type.'\n      );\n    }\n\n    // Parse `noteStruct` and get note properties.\n    const initStruct = Note.parseNoteStruct(noteStruct);\n    if (!initStruct) {\n      throw new RuntimeError(\n        'BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // Set note properties from parameters.\n    this.duration = initStruct.duration;\n    this.dots = initStruct.dots;\n    this.noteType = initStruct.type;\n    this.customTypes = initStruct.customTypes;\n\n    if (noteStruct.duration_override) {\n      // Custom duration\n      this.setDuration(noteStruct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(initStruct.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyph = getGlyphProps(this.duration, this.noteType);\n    this.customGlyphs = this.customTypes.map(t => getGlyphProps(this.duration, t));\n\n    if (this.positions && (typeof (this.positions) !== 'object' || !this.positions.length)) {\n      throw new RuntimeError('BadArguments', 'Note keys must be array type.');\n    }\n\n    // Note to play for audio players.\n    this.playNote = null;\n\n    // Positioning contexts used by the Formatter.\n    this.tickContext = null;    // The current tick context.\n    this.modifierContext = null;\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0;             // Width in pixels calculated after preFormat\n    this.leftDisplacedHeadPx = 0;       // Extra room on left for displaced note head\n    this.rightDisplacedHeadPx = 0;      // Extra room on right for displaced note head\n    this.x_shift = 0;           // X shift from tick context X\n    this.voice = null;          // The voice that this note is in\n    this.preFormatted = false;  // Is this note preFormatted?\n    this.ys = [];               // list of y coordinates for each note\n    // we need to hold on to these for ties and beams.\n\n    if (noteStruct.align_center) {\n      this.setCenterAlignment(noteStruct.align_center);\n    }\n\n    // The render surface.\n    this.stave = null;\n    this.render_options = {\n      annotation_spacing: 5,\n    } as INoteRenderOptions;\n  }\n\n  // Get and set the play note, which is arbitrary data that can be used by an\n  // audio player.\n  getPlayNote(): Note {\n    return this.playNote;\n  }\n\n  setPlayNote(note: Note): this {\n    this.playNote = note;\n    return this;\n  }\n\n  // Don't play notes by default, call them rests. This is also used by things like\n  // beams and dots for positioning.\n  isRest(): boolean {\n    return false;\n  }\n\n  // TODO(0xfe): Why is this method here?\n  addStroke(index: number, stroke: Stroke): this {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get and set the target stave.\n  getStave(): Stave {\n    return this.stave;\n  }\n\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // `Note` is not really a modifier, but is used in\n  // a `ModifierContext`.\n  getCategory(): string {\n    return Note.CATEGORY;\n  }\n\n  // Set the rendering context for the note.\n  setContext(context: DrawContext): this {\n    this.context = context;\n    return this;\n  }\n\n  // Get and set spacing to the left and right of the notes.\n  getLeftDisplacedHeadPx(): number {\n    return this.leftDisplacedHeadPx;\n  }\n\n  getRightDisplacedHeadPx(): number {\n    return this.rightDisplacedHeadPx;\n  }\n\n  setLeftDisplacedHeadPx(x: number): this {\n    this.leftDisplacedHeadPx = x;\n    return this;\n  }\n\n  setRightDisplacedHeadPx(x: number): this {\n    this.rightDisplacedHeadPx = x;\n    return this;\n  }\n\n  // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n  shouldIgnoreTicks(): boolean {\n    return this.ignore_ticks;\n  }\n\n  // Get the stave line number for the note.\n  getLineNumber(): number {\n    return 0;\n  }\n\n  // Get the stave line number for rest.\n  getLineForRest(): number {\n    return 0;\n  }\n\n  // Get the glyph associated with this note.\n  getGlyph(): IGlyphProps|Glyph {\n    return this.glyph;\n  }\n\n  getGlyphWidth(): number {\n    // TODO: FIXME (multiple potential values for this.glyph)\n    if (this.glyph) {\n      if (this.glyph.getMetrics) {\n        return this.glyph.getMetrics().width;\n      } else if ((this.glyph as IGlyphProps).getWidth) {\n        return (this.glyph as IGlyphProps).getWidth(this.render_options.glyph_font_scale);\n      }\n    }\n\n    return 0;\n  }\n\n  // Set and get Y positions for this note. Each Y value is associated with\n  // an individual pitch/key within the note/chord.\n  setYs(ys: number[]): this {\n    this.ys = ys;\n    return this;\n  }\n\n  getYs(): number[] {\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  // Get the Y position of the space above the stave onto which text can\n  // be rendered.\n  getYForTopText(text_line: number): number {\n    if (!this.stave) {\n      throw new RuntimeError('NoStave', 'No stave attached to this note.');\n    }\n\n    return this.stave.getYForTopText(text_line);\n  }\n\n  // Get a `BoundingBox` for this note.\n  getBoundingBox(): BoundingBox {\n    return null;\n  }\n\n  // Returns the voice that this note belongs in.\n  getVoice(): Voice {\n    if (!this.voice) throw new RuntimeError('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  // Attach this note to `voice`.\n  setVoice(voice: Voice): this {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get and set the `TickContext` for this note.\n  getTickContext(): TickContext {\n    return this.tickContext;\n  }\n\n  setTickContext(tc: TickContext): this {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Accessors for the note type.\n  getDuration(): string {\n    return this.duration;\n  }\n\n  isDotted(): boolean {\n    return (this.dots > 0);\n  }\n\n  hasStem(): boolean {\n    return false;\n  }\n\n  getDots(): number {\n    return this.dots;\n  }\n\n  getNoteType(): string {\n    return this.noteType;\n  }\n\n  setBeam(beam?: Beam): this {\n    return this;\n  } // ignore parameters\n\n  // Attach this note to a modifier context.\n  setModifierContext(mc: ModifierContext | TickContext): this {\n    this.modifierContext = mc;\n    return this;\n  }\n\n  // Attach a modifier to this note.\n  addModifier(modifier: ModifierClass, index = 0): this {\n    (modifier as Dot).setNote(this);\n    (modifier as Dot).setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get the coordinates for where modifiers begin.\n  getModifierStartXY(position?: number, index?: number, options?: any): ICoordinates {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  // Get bounds and metrics for this note.\n  //\n  // Returns a struct with fields:\n  // `width`: The total width of the note (including modifiers.)\n  // `notePx`: The width of the note head only.\n  // `left_shift`: The horizontal displacement of the note.\n  // `modLeftPx`: Start `X` for left modifiers.\n  // `modRightPx`: Start `X` for right modifiers.\n  // `leftDisplacedHeadPx`: Extra space on left of note.\n  // `rightDisplacedHeadPx`: Extra space on right of note.\n  getMetrics(): IMetrics {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    const modLeftPx = this.modifierContext ? (this.modifierContext as ModifierContext).state.left_shift : 0;\n    const modRightPx = this.modifierContext ? (this.modifierContext as ModifierContext).state.right_shift : 0;\n    const width = this.getWidth();\n    const glyphWidth = this.getGlyphWidth();\n    const notePx = width\n      - modLeftPx           // subtract left modifiers\n      - modRightPx          // subtract right modifiers\n      - this.leftDisplacedHeadPx   // subtract left displaced head\n      - this.rightDisplacedHeadPx;  // subtract right displaced head\n\n    return {\n      // ----------\n      // NOTE: If you change this, remember to update MockTickable in the tests/ directory.\n      // --------------\n      width,\n      glyphWidth,\n      notePx,\n\n      // Modifier spacing.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n      rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n    } as IMetrics;\n  }\n\n  // Get the absolute `X` position of this note's tick context. This\n  // excludes x_shift, so you'll need to factor it in if you're\n  // looking for the post-formatted x-position.\n  getAbsoluteX(): number {\n    if (!this.tickContext) {\n      throw new RuntimeError('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    // Position note to left edge of tick context.\n    let x = this.tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + this.musicFont.lookupMetric('stave.padding');\n    }\n\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n\n    return x;\n  }\n\n  setPreFormatted(value: boolean): void {\n    this.preFormatted = value;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport {Element} from './element';\nimport {Stave} from \"./stave\";\nimport {Glyph} from \"./glyph\";\nimport {ILayoutMetrics, IMetrics} from \"./types/common\";\nimport {IStaveModifierSpacer} from \"./types/stavemodifier\";\n\nexport enum Position {\n  CENTER = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  ABOVE = 3,\n  BELOW = 4,\n  BEGIN = 5,\n  END = 6\n}\n\nexport class StaveModifier extends Element {\n  width: number;\n  x: number;\n\n  protected padding: number;\n  protected position: Position;\n  protected stave: Stave;\n  private layoutMetrics: ILayoutMetrics;\n\n  static get Position(): typeof Position {\n    return Position;\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'StaveModifier');\n\n    this.padding = 10;\n    this.position = StaveModifier.Position.ABOVE;\n    this.layoutMetrics = null;\n  }\n\n  getPosition(): number {\n    return this.position;\n  }\n\n  setPosition(position: number): this {\n    this.position = position;\n    return this;\n  }\n\n  getStave(): Stave {\n    return this.stave;\n  }\n\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  setX(x: number): this {\n    this.x = x;\n    return this;\n  }\n\n  getCategory(): string {\n    return '';\n  }\n\n  makeSpacer(padding: number): IStaveModifierSpacer {\n    // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n    // instead of this hack.\n\n    return {\n      getContext() {\n        return true;\n      },\n      setStave() {\n        // do nothing\n      },\n      renderToStave() {\n        // do nothing\n      },\n      getMetrics(): IMetrics {\n        return {width: padding} as IMetrics;\n      }\n    };\n  }\n\n  placeGlyphOnLine(glyph: Glyph, stave: Stave, line: number, customShift = 0): void {\n    glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs() + customShift);\n  }\n\n  getPadding(index: number): number {\n    return (index !== undefined && index < 2 ? 0 : this.padding);\n  }\n\n  setPadding(padding: number): this {\n    this.padding = padding;\n    return this;\n  }\n\n  setLayoutMetrics(layoutMetrics: ILayoutMetrics): this {\n    this.layoutMetrics = layoutMetrics;\n    return this;\n  }\n\n  getLayoutMetrics(): ILayoutMetrics {\n    return this.layoutMetrics;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\nimport {BoundingBox} from './boundingbox';\nimport {Stem} from './stem';\nimport {NoteHead} from './notehead';\nimport {StemmableNote} from './stemmablenote';\nimport {Modifier} from './modifier';\nimport {Dot} from './dot';\nimport {\n  ICoordinates,\n  IKeyPropertiesParams,\n  IKeyProps,\n  IModifierContextState,\n  IStyle\n} from \"./types/common\";\nimport {ModifierContext} from \"./modifiercontext\";\nimport {Beam} from \"./beam\";\nimport {Stave} from \"./stave\";\nimport {INoteRenderOptions, IStaveNoteStruct} from \"./types/note\";\nimport {IGlyphProps} from \"./types/glyph\";\nimport {IStaveNoteFormatSettings, IStaveNoteGetModifierStartXYOptions, IStaveNoteHeadBounds} from \"./types/stavenote\";\nimport {IStemStruct} from \"./types/stem\";\nimport {TickContext} from \"./tickcontext\";\nimport {ModifierClass} from \"./types/modifiercontext\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {\n  DEFAULT_NOTATION_FONT_SCALE,\n  durationToFraction,\n  getGlyphProps,\n  keyProperties,\n  LOG,\n  Merge,\n  MidLine, WARN\n} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (StaveNote.DEBUG) LOG('Vex.Flow.StaveNote', args);\n}\n\nconst getStemAdjustment = (note: StaveNote) => Stem.WIDTH / (2 * -note.getStemDirection());\n\nconst isInnerNoteIndex = (note: StaveNote, index: number) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest: IStaveNoteFormatSettings, note: IStaveNoteFormatSettings, dir: number) {\n  const delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + (delta));\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest: IStaveNoteFormatSettings, noteU: IStaveNoteFormatSettings, noteL: IStaveNoteFormatSettings) {\n  const delta = rest.line - MidLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static DEBUG: boolean;\n\n  keyProps: IKeyProps[];\n  keys: string[];\n  minLine: number;\n  maxLine: number;\n\n  private readonly clef: string;\n  private readonly octave_shift: number;\n\n  private displaced: boolean;\n  private dot_shiftY: number;\n  private use_default_head_x: boolean;\n  private note_heads: NoteHead[];\n  private ledgerLineStyle: IStyle;\n  private flagStyle: IStyle;\n\n  static get CATEGORY(): string {\n    return 'stavenotes';\n  }\n\n  static get STEM_UP(): number {\n    return Stem.UP;\n  }\n\n  static get STEM_DOWN(): number {\n    return Stem.DOWN;\n  }\n\n  static get DEFAULT_LEDGER_LINE_OFFSET(): number {\n    return 3;\n  }\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  static format(notes: StaveNote[], state: IModifierContextState): boolean|void {\n    if (!notes || notes.length < 2) return false;\n\n    // FIXME: VexFlow will soon require that a stave be set before formatting.\n    // Which, according to the below condition, means that following branch will\n    // always be taken and the rest of this function is dead code.\n    //\n    // Problematically, `Formatter#formatByY` was not designed to work for more\n    // than 2 voices (although, doesn't throw on this condition, just tries\n    // to power through).\n    //\n    // Based on the above:\n    //   * 2 voices can be formatted *with or without* a stave being set but\n    //     the output will be different\n    //   * 3 voices can only be formatted *without* a stave\n    if (notes[0].getStave()) {\n      return StaveNote.formatByY(notes, state);\n    }\n\n    const notesList: IStaveNoteFormatSettings[] = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      const props = notes[i].getKeyProps();\n      const line = props[0].line;\n      let minL = props[props.length - 1].line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinimumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + (notes[i].glyph as IGlyphProps).line_above;\n        minL = line - (notes[i].glyph as IGlyphProps).line_below;\n      } else {\n        maxL = stemDirection === 1\n          ? props[props.length - 1].line + stemMax\n          : props[props.length - 1].line;\n\n        minL = stemDirection === 1\n          ? props[0].line\n          : props[0].line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    const voices = notesList.length;\n\n    let noteU = notesList[0];\n    const noteM = voices > 2 ? notesList[1] : null;\n    let noteL = voices > 2 ? notesList[2] : notesList[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n    let stemDelta;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stemDirection === noteL.stemDirection &&\n        noteU.minLine <= noteL.maxLine) {\n        if (!noteU.isrest) {\n          stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n          stemDelta = Math.max(stemDelta, noteU.stemMin);\n          noteU.minLine = noteU.line - stemDelta;\n          noteU.note.setStemLength(stemDelta * 10);\n        }\n      }\n      if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          xShift = voiceXShift;\n          if (noteU.stemDirection === noteL.stemDirection) {\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(xShift + 3);\n          } else {\n            // shift lower voice right\n            noteL.note.setXShift(xShift);\n          }\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n      if (!noteM.isrest) {\n        stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n        stemDelta = Math.max(stemDelta, noteM.stemMin);\n        noteM.minLine = noteM.line - stemDelta;\n        noteM.note.setStemLength(stemDelta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n          // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 3;    // shift middle rest right\n          noteM.note.setXShift(xShift);\n        }\n        // format complete\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n\n    // If middle voice intersects upper or lower voice\n    if ((!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n      (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)) {\n      xShift = voiceXShift + 3;      // shift middle note right\n      noteM.note.setXShift(xShift);\n    }\n\n    return true;\n  }\n\n  static formatByY(notes: StaveNote[], state: IModifierContextState): void {\n    // NOTE: this function does not support more than two voices per stave\n    // use with care.\n    let hasStave = true;\n\n    for (let i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != null;\n    }\n\n    if (!hasStave) {\n      throw new RuntimeError(\n        'Stave Missing',\n        'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!'\n      );\n    }\n\n    let xShift = 0;\n\n    for (let i = 0; i < notes.length - 1; i++) {\n      let topNote = notes[i];\n      let bottomNote = notes[i + 1];\n\n      if (topNote.getStemDirection() === Stem.DOWN) {\n        topNote = notes[i + 1];\n        bottomNote = notes[i];\n      }\n\n      const topKeys = topNote.getKeyProps();\n      const bottomKeys = bottomNote.getKeyProps();\n\n      const HALF_NOTEHEAD_HEIGHT = 0.5;\n\n      // `keyProps` and `stave.getYForLine` have different notions of a `line`\n      // so we have to convert the keyProps value by subtracting 5.\n      // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n      //\n      // We also extend the y for each note by a half notehead because the\n      // notehead's origin is centered\n      const topNoteBottomY = topNote\n        .getStave()\n        .getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\n      const bottomNoteTopY = bottomNote\n        .getStave()\n        .getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\n      const areNotesColliding = bottomNoteTopY - topNoteBottomY < 0;\n\n      if (areNotesColliding) {\n        xShift = topNote.getVoiceShiftWidth() + 2;\n        bottomNote.setXShift(xShift);\n      }\n    }\n\n    state.right_shift += xShift;\n  }\n\n  static postFormat(notes: StaveNote[], modifierCtx?: ModifierContext): boolean {\n    if (!notes) return false;\n\n    notes.forEach(note => note.postFormat());\n\n    return true;\n  }\n\n  constructor(noteStruct: IStaveNoteStruct) {\n    super(noteStruct);\n    this.setAttribute('type', 'StaveNote');\n\n    this.keys = noteStruct.keys;\n    this.clef = noteStruct.clef;\n    this.octave_shift = noteStruct.octave_shift;\n    this.beam = null;\n\n    // Pull note rendering properties\n    this.glyph = getGlyphProps(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // per-pitch properties\n    this.keyProps = [];\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this.note_heads = [];\n    this.modifiers = [];\n\n    Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: noteStruct.glyph_font_scale || DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET,\n    } as INoteRenderOptions);\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction);\n    }\n    this.reset();\n    this.buildFlag();\n  }\n\n  reset(): this {\n    super.reset();\n\n    // Save prior noteHead styles & reapply them after making new noteheads.\n    const noteHeadStyles = this.note_heads.map(noteHead => noteHead.getStyle());\n    this.buildNoteHeads();\n    this.note_heads.forEach((noteHead, index) => noteHead.setStyle(noteHeadStyles[index]));\n\n    if (this.stave) {\n      this.note_heads.forEach(head => head.setStave(this.stave));\n    }\n    this.calcNoteDisplacements();\n    return this;\n  }\n\n  setBeam(beam: Beam): this {\n    this.beam = beam;\n    this.calcNoteDisplacements();\n    return this;\n  }\n\n  getCategory(): string {\n    return StaveNote.CATEGORY;\n  }\n\n  // Builds a `Stem` for the note\n  buildStem(): this {\n    this.setStem(new Stem({hide: !!this.isRest(),} as IStemStruct));\n    return this;\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads(): void {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = null;\n    let lineDiff = null;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start;\n    let end;\n    let step;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else if (stemDirection === Stem.DOWN) {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      this.note_heads[i] = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        stem_up_x_offset: noteProps.stem_up_x_offset,\n        stem_down_x_offset: noteProps.stem_down_x_offset,\n        line: noteProps.line,\n      } as IStaveNoteStruct);\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem(): void {\n    this.setStemDirection(this.calculateOptimalStemDirection());\n  }\n\n  calculateOptimalStemDirection(): number {\n    // Figure out optimal stem direction based on given notes\n    this.minLine = this.keyProps[0].line;\n    this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n\n    return decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps(): void {\n    let lastLine: number = null;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if ((this.glyph as IGlyphProps).rest) (this.glyph as IGlyphProps).position = key;\n\n      const options = {octave_shift: this.octave_shift || 0} as IKeyPropertiesParams;\n      const props = keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n\n    // Sort the notes from lowest line to highest line\n    lastLine = -Infinity;\n    this.keyProps.forEach(key => {\n      if (key.line < lastLine) {\n        WARN(\n          'Unsorted keys in note will be sorted. ' +\n          'See https://github.com/0xfe/vexflow/issues/104 for details.'\n        );\n      }\n      lastLine = key.line;\n    });\n    this.keyProps.sort((a, b) => a.line - b.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox(): BoundingBox {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const {width: w, modLeftPx, leftDisplacedHeadPx} = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n\n    let minY: number;\n    let maxY: number;\n    const halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - ((this.glyph as IGlyphProps).line_above * lineSpacing);\n        maxY = y + ((this.glyph as IGlyphProps).line_below * lineSpacing);\n      }\n    } else if ((this.glyph as IGlyphProps).stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.stem_direction;\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = null;\n      maxY = null;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note's line number instead\n  getLineNumber(isTopNote?: boolean): number {\n    if (!this.keyProps.length) {\n      throw new RuntimeError(\n        'NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\"\n      );\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  // Determine if current note is a rest\n  isRest(): boolean {\n    return (this.glyph as IGlyphProps).rest;\n  }\n\n  // Determine if the current note is a chord\n  isChord(): boolean {\n    return !this.isRest() && this.keys.length > 1;\n  }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem(): boolean {\n    return (this.glyph as IGlyphProps).stem;\n  }\n\n  hasFlag(): boolean {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX(): number {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + getStemAdjustment(this);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine: number): number {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.stave.getYForTopText(textLine),\n      extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n    );\n  }\n\n  getYForBottomText(textLine: number): number {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.stave.getYForTopText(textLine),\n      extents.baseY + (this.render_options.annotation_spacing * (textLine))\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave: Stave): this {\n    super.setStave(stave);\n\n    const ys = this.note_heads.map(notehead => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const {y_top, y_bottom} = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Get the pitches in the note\n  getKeys(): string[] {\n    return this.keys;\n  }\n\n  // Get the properties for all the keys in the note\n  getKeyProps(): IKeyProps[] {\n    return this.keyProps;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced(): boolean {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced: boolean): this {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX(): number {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n    if (this.modifierContext) tieStartX += (this.modifierContext as ModifierContext).getRightShift();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX(): number {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest(): number {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = MidLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(position?: number, index?: number, options?: IStaveNoteGetModifierStartXYOptions): ICoordinates {\n    options = options || {} as IStaveNoteGetModifierStartXYOptions;\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const {ABOVE, BELOW, LEFT, RIGHT} = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // FIXME: Left modifier padding, move to font file\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // FIXME: Right modifier padding, move to font file\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (this.stem_direction === Stem.UP && this.hasFlag() &&\n        (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n        x += this.flag.getMetrics().width;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style: IStyle): this {\n    super.setStyle(style);\n    this.note_heads.forEach(notehead => notehead.setStyle(style));\n    this.stem.setStyle(style);\n    return this;\n  }\n\n  setStemStyle(style: IStyle): void {\n    const stem = this.getStem();\n    stem.setStyle(style);\n  }\n\n  getStemStyle(): IStyle {\n    return this.stem.getStyle();\n  }\n\n  setLedgerLineStyle(style: IStyle): void {\n    this.ledgerLineStyle = style;\n  }\n\n  getLedgerLineStyle(): IStyle {\n    return this.ledgerLineStyle;\n  }\n\n  setFlagStyle(style: IStyle): void {\n    this.flagStyle = style;\n  }\n\n  getFlagStyle(): IStyle {\n    return this.flagStyle;\n  }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index: number, style: IStyle): this {\n    this.note_heads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index: number, line: number): this {\n    this.keyProps[index].line = line;\n    this.reset();\n    return this;\n  }\n\n  getKeyLine(index: number): number {\n    return this.keyProps[index].line;\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext: ModifierContext|TickContext): this {\n    this.setModifierContext(mContext);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this as any);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Generic function to add modifiers to a note\n  //\n  // Parameters:\n  // * `index`: The index of the key that we're modifying\n  // * `modifier`: The modifier to add\n  addModifier(index: any, modifier: any): this {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Helper function to add an accidental to a key\n  addAccidental(index: number, accidental: Modifier): this {\n    return this.addModifier(index, accidental);\n  }\n\n  // Helper function to add an articulation to a key\n  addArticulation(index: number, articulation: Modifier): this {\n    return this.addModifier(index, articulation);\n  }\n\n  // Helper function to add an annotation to a key\n  addAnnotation(index: number, annotation: Modifier): this {\n    return this.addModifier(index, annotation);\n  }\n\n  // Helper function to add a dot on a specific key\n  addDot(index: number): this {\n    const dot = new Dot();\n    dot.setDotShiftY((this.glyph as IGlyphProps).dot_shiftY);\n    this.dots++;\n    return this.addModifier(index, dot);\n  }\n\n  // Convenience method to add dot to all keys in note\n  addDotToAll(): this {\n    for (let i = 0; i < this.keys.length; ++i) {\n      this.addDot(i);\n    }\n    return this;\n  }\n\n  // Get all accidentals in the `ModifierContext`\n  getAccidentals(): ModifierClass[] {\n    return this.modifierContext.getModifiers('accidentals');\n  }\n\n  // Get all dots in the `ModifierContext`\n  getDots(): any {\n    return this.modifierContext.getModifiers('dots') as any;\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth(): number {\n    // TODO: may need to accomodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcNoteDisplacements(): void {\n    this.setLeftDisplacedHeadPx(\n      this.displaced && this.stem_direction === Stem.DOWN\n        ? this.getGlyphWidth()\n        : 0\n    );\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setRightDisplacedHeadPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP\n        ? this.getGlyphWidth()\n        : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat(): void {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n\n    let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n\n    // For upward flagged notes, the width of the flag needs to be added\n    if ((this.glyph as IGlyphProps).flag && this.beam === null && this.stem_direction === Stem.UP) {\n      width += this.getGlyphWidth();\n      // TODO: Add flag width as a separate metric\n    }\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n  }\n\n  /**\n   * @typedef {Object} noteHeadBounds\n   * @property {number} y_top the highest notehead bound\n   * @property {number} y_bottom the lowest notehead bound\n   * @property {number|Null} displaced_x the starting x for displaced noteheads\n   * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n   * @property {number} highest_line the highest notehead line in traditional music line\n   *  numbering (bottom line = 1, top line = 5)\n   * @property {number} lowest_line the lowest notehead line\n   * @property {number|boolean} highest_displaced_line the highest staff line number\n   *   for a displaced notehead\n   * @property {number|boolean} lowest_displaced_line\n   * @property {number} highest_non_displaced_line\n   * @property {number} lowest_non_displaced_line\n   */\n\n  /**\n   * Get the staff line and y value for the highest & lowest noteheads\n   * @returns {IStaveNoteHeadBounds}\n   */\n  getNoteHeadBounds(): IStaveNoteHeadBounds {\n    // Top and bottom Y values for stem.\n    let yTop: number = null;\n    let yBottom: number = null;\n    let nonDisplacedX: number = null;\n    let displacedX: number = null;\n\n    let highestLine = this.stave.getNumLines();\n    let lowestLine = 1;\n    let highestDisplacedLine: boolean|number = false;\n    let lowestDisplacedLine: boolean|number = false;\n    let highestNonDisplacedLine = highestLine;\n    let lowestNonDisplacedLine = lowestLine;\n\n    this.note_heads.forEach(notehead => {\n      const line = notehead.getLine();\n      const y = notehead.getY();\n\n      if (yTop === null || y < yTop) {\n        yTop = y;\n      }\n\n      if (yBottom === null || y > yBottom) {\n        yBottom = y;\n      }\n\n      if (displacedX === null && notehead.isDisplaced()) {\n        displacedX = notehead.getAbsoluteX();\n      }\n\n      if (nonDisplacedX === null && !notehead.isDisplaced()) {\n        nonDisplacedX = notehead.getAbsoluteX();\n      }\n\n      highestLine = line > highestLine ? line : highestLine;\n      lowestLine = line < lowestLine ? line : lowestLine;\n\n      if (notehead.isDisplaced()) {\n        highestDisplacedLine = (highestDisplacedLine === false) ?\n          line : Math.max(line, +highestDisplacedLine);\n        lowestDisplacedLine = (lowestDisplacedLine === false) ?\n          line : Math.min(line, +lowestDisplacedLine);\n      } else {\n        highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n        lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n      }\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      displaced_x: displacedX,\n      non_displaced_x: nonDisplacedX,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n      highest_displaced_line: highestDisplacedLine,\n      lowest_displaced_line: lowestDisplacedLine,\n      highest_non_displaced_line: highestNonDisplacedLine,\n      lowest_non_displaced_line: lowestNonDisplacedLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX(): number {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX(): number {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines(): void {\n    const {\n      stave, glyph,\n      render_options: {stroke_px},\n      context: ctx,\n    } = this;\n\n    const width = (glyph as IGlyphProps).getWidth() + (stroke_px * 2);\n    const doubleWidth = 2 * ((glyph as IGlyphProps).getWidth() + stroke_px) - (Stem.WIDTH / 2);\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const {\n      highest_line,\n      lowest_line,\n      highest_displaced_line,\n      highest_non_displaced_line,\n      lowest_displaced_line,\n      lowest_non_displaced_line,\n      displaced_x,\n      non_displaced_x,\n    } = this.getNoteHeadBounds();\n\n    const min_x = Math.min(displaced_x, non_displaced_x);\n\n    const drawLedgerLine = (y: number, normal: boolean, displaced: boolean) => {\n      let x;\n      if (displaced && normal) x = min_x - stroke_px;\n      else if (normal) x = non_displaced_x - stroke_px;\n      else x = displaced_x - stroke_px;\n      const ledgerWidth = (normal && displaced) ? doubleWidth : width;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + ledgerWidth, y);\n      ctx.stroke();\n    };\n\n    const style = {...stave.getStyle() || {}, ...this.getLedgerLineStyle() || {}} as IStyle;\n    this.applyStyle(ctx, style);\n\n    // Draw ledger lines below the staff:\n    for (let line = 6; line <= highest_line; ++line) {\n      const normal = (non_displaced_x !== null) && (line <= highest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line <= +highest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    // Draw ledger lines above the staff:\n    for (let line = 0; line >= lowest_line; --line) {\n      const normal = (non_displaced_x !== null) && (line >= lowest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line >= +lowest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    this.restoreStyle(ctx, style);\n  }\n\n  // Draw all key modifiers\n  drawModifiers(): void {\n    if (!this.context) {\n      throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const ctx = this.context;\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const notehead = this.note_heads[(modifier as any).getIndex()];\n      const noteheadStyle = notehead.getStyle();\n      notehead.applyStyle(ctx, noteheadStyle);\n      modifier.setContext(ctx);\n      modifier.drawWithStyle();\n      notehead.restoreStyle(ctx, noteheadStyle);\n    }\n    ctx.closeGroup();\n  }\n\n  // Draw the flag for the note\n  drawFlag(): void {\n    const {stem, beam, context: ctx} = this;\n\n    if (!ctx) {\n      throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const shouldRenderFlag = beam === null;\n    const glyph = this.getGlyph() as IGlyphProps;\n\n    if (glyph.flag && shouldRenderFlag) {\n      const {y_top, y_bottom} = this.getNoteHeadBounds();\n      const noteStemHeight = stem.getHeight();\n      const flagX = this.getStemX();\n      // FIXME: What's with the magic +/- 2\n      const flagY = this.getStemDirection() === Stem.DOWN\n        // Down stems have flags on the left\n        ? y_top - noteStemHeight + 2\n        // Up stems have flags on the eft.\n        : y_bottom - noteStemHeight - 2;\n\n      // Draw the Flag\n      ctx.openGroup('flag', null, {pointerBBox: true});\n      this.applyStyle(ctx, this.getFlagStyle() || undefined);\n      this.flag.render(ctx, flagX, flagY);\n      this.restoreStyle(ctx, this.getFlagStyle() || undefined);\n      ctx.closeGroup();\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads(): void {\n    this.note_heads.forEach(notehead => {\n      this.context.openGroup('notehead', null, {pointerBBox: true});\n      notehead.setContext(this.context).draw();\n      this.context.closeGroup();\n    });\n  }\n\n  drawStem(stemStruct?: IStemStruct): void {\n    // GCR TODO: I can't find any context in which this is called with the stemStruct\n    // argument in the codebase or tests. Nor can I find a case where super.drawStem\n    // is called at all. Perhaps these should be removed?\n    if (!this.context) {\n      throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (stemStruct) {\n      this.setStem(new Stem(stemStruct));\n    }\n\n    this.context.openGroup('stem', null, {pointerBBox: true});\n    this.stem.setContext(this.context).draw();\n    this.context.closeGroup();\n  }\n\n  /**\n   * Override stemmablenote stem extension to adjust for distance from middle line.\n   */\n  getStemExtension(): number {\n    const super_stem_extension = super.getStemExtension();\n    if (!(this.glyph as IGlyphProps).stem) {\n      return super_stem_extension;\n    }\n\n    const stem_direction = this.getStemDirection();\n    if (stem_direction !== this.calculateOptimalStemDirection()) {\n      return super_stem_extension;  // no adjustment for manually set stem direction.\n    }\n    let mid_line_distance;\n    const MIDDLE_LINE = 3;\n    if (stem_direction === Stem.UP) {\n      // Note that the use of maxLine here instead of minLine might\n      // seem counterintuitive, but in the case of (say) treble clef\n      // chord(F2, E4) stem up, we do not want to extend the stem because\n      // of F2, when a normal octave-length stem above E4 is fine.\n      //\n      // maxLine and minLine are set in calculateOptimalStemDirection() so\n      // will be known.\n      mid_line_distance = MIDDLE_LINE - this.maxLine;\n    } else {\n      mid_line_distance = this.minLine - MIDDLE_LINE;\n    }\n\n    // how many lines more than an octave is the relevant notehead?\n    const lines_over_octave_from_mid_line = mid_line_distance - 3.5;\n    if (lines_over_octave_from_mid_line <= 0) {\n      return super_stem_extension;\n    }\n    const stave = this.getStave();\n    let spacing_between_lines = 10;\n    if (stave != null) {\n      spacing_between_lines = stave.getSpacingBetweenLines();\n    }\n    return super_stem_extension + (lines_over_octave_from_mid_line * spacing_between_lines);\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw(): void {\n    if (!this.context) {\n      throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n    if (!this.stave) {\n      throw new RuntimeError('NoStave', \"Can't draw without a stave.\");\n    }\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this.note_heads.forEach(notehead => notehead.setX(xBegin));\n\n    // Format stem x positions\n    const stemX = this.getStemX();\n    this.stem.setNoteHeadXBounds(stemX, stemX);\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Apply the overall style -- may be contradicted by local settings:\n    this.applyStyle();\n    this.setAttribute('el', this.context.openGroup('stavenote', this.getAttribute('id')));\n    this.drawLedgerLines();\n    this.context.openGroup('note', null, { pointerBBox: true });\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    this.context.closeGroup();\n    this.drawModifiers();\n    this.context.closeGroup();\n    this.restoreStyle();\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\nimport {Element} from './element';\nimport {BoundingBox} from \"./boundingbox\";\nimport {IStemStruct} from \"./types/stem\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {LOG, STEM_HEIGHT, STEM_WIDTH} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (Stem.DEBUG) LOG('Vex.Flow.Stem', args);\n}\n\nexport class Stem extends Element {\n  static DEBUG: boolean;\n\n  renderHeightAdjustment: number;\n\n  private hide: boolean;\n  private isStemlet: boolean;\n  private stemletHeight: number;\n  private x_begin: number;\n  private x_end: number;\n  private y_top: number;\n  private stem_up_y_offset: number;\n  private y_bottom: number;\n  private stem_down_y_offset: number;\n  private stem_up_y_base_offset: number;\n  private stem_down_y_base_offset: number;\n  private stem_direction: number;\n  private stem_extension: number;\n\n  static get CATEGORY(): string {\n    return 'stem';\n  }\n\n  // Stem directions\n  static get UP(): number {\n    return 1;\n  }\n\n  static get DOWN(): number {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH(): number {\n    return STEM_WIDTH;\n  }\n\n  static get HEIGHT(): number {\n    return STEM_HEIGHT;\n  }\n\n  constructor(options = {} as IStemStruct) {\n    super();\n    this.setAttribute('type', 'Stem');\n\n    // Default notehead x bounds\n    this.x_begin = options.x_begin || 0;\n    this.x_end = options.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options.y_top || 0;\n    this.y_bottom = options.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options.hide || false;\n\n    this.isStemlet = options.isStemlet || false;\n    this.stemletHeight = options.stemletHeight || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n    this.setOptions(options);\n  }\n\n  setOptions(options: IStemStruct): void {\n    // Changing where the stem meets the head\n    this.stem_up_y_offset = options.stem_up_y_offset || 0;\n    this.stem_down_y_offset = options.stem_down_y_offset || 0;\n    this.stem_up_y_base_offset = options.stem_up_y_base_offset || 0;\n    this.stem_down_y_base_offset = options.stem_down_y_base_offset || 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin: number, x_end: number): this {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction: number): void {\n    this.stem_direction = direction;\n  }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext: number): void {\n    this.stem_extension = ext;\n  }\n\n  getExtension(): number {\n    return this.stem_extension;\n  }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top: number, y_bottom: number): void {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // The category of the object\n  getCategory(): string {\n    return Stem.CATEGORY;\n  }\n\n  // Gets the entire height for the stem\n  getHeight(): number {\n    const y_offset = (this.stem_direction === Stem.UP)\n      ? this.stem_up_y_offset\n      : this.stem_down_y_offset;\n    const unsigned_height = (\n      (this.y_bottom - this.y_top)\n      + (Stem.HEIGHT - y_offset + this.stem_extension)\n    );  // parentheses just for grouping.\n    return unsigned_height * this.stem_direction;\n  }\n\n  getBoundingBox(): BoundingBox {\n    throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents(): Record<string, number> {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + (stemHeight * -this.stem_direction);\n\n    return {topY: stemTipY, baseY: outerMostNoteheadY};\n  }\n\n  setVisibility(isVisible: boolean): this {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet: boolean, stemletHeight: number): this {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  draw(): void {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    let y_base_offset: number;\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top + this.stem_down_y_offset;\n      y_base_offset = this.stem_down_y_base_offset;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom - this.stem_up_y_offset;\n      y_base_offset = this.stem_up_y_base_offset;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet\n      ? stemHeight - this.stemletHeight * this.stem_direction\n      : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle(ctx);\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - (this.renderHeightAdjustment * stem_direction));\n    ctx.stroke();\n    this.restoreStyle(ctx);\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Fraction class that represents a rational number\n//\n// @author zz85\n// @author incompleteopus (modifications)\n\n/* eslint-disable no-underscore-dangle */\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class Fraction {\n  numerator: any;\n  denominator: any;\n\n  private static __compareA = new Fraction();\n  private static __compareB = new Fraction();\n  private static __tmp = new Fraction();\n\n  /**\n   * GCD: Find greatest common divisor using Euclidean algorithm\n   */\n  static GCD(a: number, b: number): number {\n    if (typeof a !== 'number' || typeof b !== 'number') {\n      throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /**\n   * LCM: Lowest common multiple\n   */\n  static LCM(a: number, b: number): number {\n    return ((a * b) / Fraction.GCD(a, b));\n  }\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers\n   */\n  static LCMM(args: any): number {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length === 1) {\n      return args[0];\n    } else if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    } else {\n      const arg0 = args[0];\n      args.shift();\n      return Fraction.LCM(arg0, Fraction.LCMM(args));\n    }\n  }\n\n  constructor(numerator?: number, denominator?: number) {\n    this.set(numerator, denominator);\n  }\n\n  set(numerator: number, denominator: number): this {\n    this.numerator = numerator === undefined ? 1 : numerator;\n    this.denominator = denominator === undefined ? 1 : denominator;\n    return this;\n  }\n\n  value(): number {\n    return this.numerator / this.denominator;\n  }\n\n  simplify(): this {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n\n  add(param1: any, param2?: any): this {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n\n  subtract(param1: Fraction, param2?: Fraction): this {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n\n  multiply(param1: any, param2?: any): this {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n\n  divide(param1: Fraction, param2: Fraction): this {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  // Simplifies both sides and checks if they are equal.\n  equals(compare: Fraction|number): boolean {\n    const a = Fraction.__compareA.copy(compare).simplify();\n    const b = Fraction.__compareB.copy(this).simplify();\n\n    return (a.numerator === b.numerator) && (a.denominator === b.denominator);\n  }\n\n  // Greater than operator.\n  greaterThan(compare: Fraction): boolean {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator > 0);\n  }\n\n  // Greater than or equals operator.\n  greaterThanEquals(compare: Fraction): boolean {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator >= 0);\n  }\n\n  // Less than operator.\n  lessThan(compare: Fraction): boolean {\n    return !(this.greaterThanEquals(compare));\n  }\n\n  // Less than or equals operator.\n  lessThanEquals(compare: Fraction): boolean {\n    return !(this.greaterThan(compare));\n  }\n\n  // Creates a new copy with this current values.\n  clone(): Fraction {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  // Copies value of another Fraction into itself.\n  copy(copy: Fraction|number): this {\n    if (typeof copy === 'number') {\n      return this.set(copy || 0, 1);\n    }\n    return this.set(copy.numerator, copy.denominator);\n  }\n\n  // Returns the integer component eg. (4/2) == 2\n  quotient(): number {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  // Returns the fraction component when reduced to a mixed number\n  fraction(): number {\n    return this.numerator % this.denominator;\n  }\n\n  // Returns the absolute value\n  abs(): this {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  // Returns a raw string representation\n  toString(): string {\n    return this.numerator + '/' + this.denominator;\n  }\n\n  // Returns a simplified string respresentation\n  toSimplifiedString(): string {\n    return Fraction.__tmp.copy(this).simplify().toString();\n  }\n\n  // Returns string representation in mixed form\n  toMixedString(): string {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__tmp.copy(this);\n\n    if (q < 0) {\n      f.abs().fraction();\n    } else {\n      f.fraction();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ' ' + f.toSimplifiedString();\n      }\n    } else {\n      if (f.numerator === 0) {\n        s = '0';\n      } else {\n        s = f.toSimplifiedString();\n      }\n    }\n\n    return s;\n  }\n\n  // Parses a fraction string\n  parse(str: string): this {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = (i[1]) ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the formatting and layout algorithms that are used\n// to position notes in a voice. The algorithm can align multiple voices both\n// within a stave, and across multiple staves.\n//\n// To do this, the formatter breaks up voices into a grid of rational-valued\n// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n// to each tick based on the widths of the notes and modifiers in that tick. This\n// establishes the smallest amount of space required for each tick.\n//\n// Finally, the formatter distributes the left over space proportionally to\n// all the ticks, setting the `x` values of the notes in each tick.\n//\n// See `tests/formatter_tests.js` for usage examples. The helper functions included\n// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\nimport {Beam} from './beam';\nimport {Fraction} from './fraction';\nimport {Voice} from './voice';\nimport {StaveConnector} from './staveconnector';\nimport {StaveNote} from './stavenote';\nimport {ModifierContext} from './modifiercontext';\nimport {TickContext} from './tickcontext';\nimport {Note} from \"./note\";\nimport {\n  DrawContext,\n  IContextGaps,\n  IDistance,\n  ITickContextsStruct\n} from \"./types/common\";\nimport {Stave} from \"./stave\";\nimport {TabStave} from \"./tabstave\";\nimport {TabNote} from \"./tabnote\";\nimport {Tickable} from \"./tickable\";\nimport {\n  IDurationStat,\n  IFormatAndDrawOptions, IFormatOptions,\n  IFormatterOptions,\n  IFormatterPlotDebuggingOptions,\n  IFormatterTuneOptions\n} from \"./types/formatter\";\nimport {IGlyphProps} from \"./types/glyph\";\nimport {BoundingBox} from \"./boundingbox\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {DefaultFontStack} from \"./smufl\";\nimport {DEFAULT_TIME, LOG, Merge, MidLine, SortAndUnique} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (Formatter.DEBUG) LOG('Vex.Flow.Formatter', args);\n}\n\n// Helper function to locate the next non-rest note(s).\nfunction lookAhead(notes: Tickable[], restLine: number, i: number, compare: boolean) {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = restLine;\n\n  // Get the rest line for next valid non-rest note group.\n  for (i += 1; i < notes.length; i += 1) {\n    const note = notes[i];\n    if (!(note as Note).isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = (note as Note).getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && restLine !== nextRestLine) {\n    const top = Math.max(restLine, nextRestLine);\n    const bot = Math.min(restLine, nextRestLine);\n    nextRestLine = MidLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n// Take an array of `voices` and place aligned tickables in the same context. Returns\n// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n// multiplier.\n//\n// Params:\n// * `voices`: Array of `Voice` instances.\n// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n// * `addToContext`: Function to add tickable to context.\nfunction createContexts(\n  voices: Voice[],\n  ContextType: typeof ModifierContext | typeof TickContext,\n  addToContext: (tickable: Note, context: TickContext | ModifierContext, voiceIndex?: number) => void\n): ITickContextsStruct {\n  if (!voices || !voices.length) {\n    throw new RuntimeError('BadArgument', 'No voices to format');\n  }\n\n  // Find out highest common multiple of resolution multipliers.\n  // The purpose of this is to find out a common denominator\n  // for all fractional tick values in all tickables of all voices,\n  // so that the values can be expanded and the numerator used\n  // as an integer tick value.\n  const totalTicks = voices[0].getTotalTicks();\n  const resolutionMultiplier = voices.reduce((resolutionMultiplier, voice) => {\n    if (!voice.getTotalTicks().equals(totalTicks)) {\n      throw new RuntimeError(\n        'TickMismatch', 'Voices should have same total note duration in ticks.'\n      );\n    }\n\n    if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n      throw new RuntimeError(\n        'IncompleteVoice', 'Voice does not have enough notes.'\n      );\n    }\n\n    return Math.max(\n      resolutionMultiplier,\n      Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier())\n    );\n  }, 1);\n\n  // Initialize tick maps.\n  const tickToContextMap: Record<number, TickContext | ModifierContext> = {};\n  const tickList: number[] = [];\n  const contexts: (ModifierContext | TickContext)[] = [];\n\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach((voice, voiceIndex) => {\n    // Use resolution multiplier as denominator to expand ticks\n    // to suitable integer values, so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach(tickable => {\n      const integerTicks: number = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext: TickContext | ModifierContext = new ContextType({tickID: integerTicks});\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n\n      // Maintain a sorted list of tick contexts.\n      tickList.push(integerTicks);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: SortAndUnique(tickList, (a: number, b: number) => a - b, (a, b) => a === b),\n    resolutionMultiplier\n  } as ITickContextsStruct;\n}\n\nexport class Formatter {\n  static DEBUG: boolean;\n\n  private hasMinTotalWidth: boolean;\n  private minTotalWidth: number;\n  private totalTicks: Fraction;\n  private iterationsCompleted: number;\n  private contextGaps: IContextGaps;\n  private justifyWidth: number;\n  private totalCost: number;\n  private totalShift: number;\n  private tickContexts: ITickContextsStruct;\n  private options: IFormatterOptions;\n  private modiferContexts: ITickContextsStruct;\n  private voices: Voice[];\n  private lossHistory: number[];\n  private durationStats: Record<string, IDurationStat>;\n\n  // Helper function to layout \"notes\" one after the other without\n  // regard for proportions. Useful for tests and debugging.\n  static SimpleFormat(notes: Note[], x = 0, {paddingBetween = 10} = {}): void {\n    notes.reduce((x, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const metrics = tick.getMetrics();\n      tick.setX(x + metrics.totalLeftPx);\n\n      return x + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n    }, x);\n  }\n\n  // Helper function to plot formatter debug info.\n  static plotDebugging(ctx: DrawContext, formatter: Formatter, xPos: number, y1: number, y2: number, options?: IFormatterPlotDebuggingOptions): void {\n    options = {\n      stavePadding: DefaultFontStack[0].lookupMetric('stave.padding'),\n      ...options,\n    };\n\n    const x = xPos + options.stavePadding;\n    const contextGaps = formatter.contextGaps;\n\n    function stroke(x1: number, x2: number, color: string) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n\n    contextGaps.gaps.forEach(gap => {\n      stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n      ctx.setFillStyle('green');\n      ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n    });\n\n    ctx.setFillStyle('red');\n    ctx.fillText(`Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n    ctx.restore();\n  }\n\n  // Helper function to format and draw a single voice. Returns a bounding\n  // box for the notation.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n  // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n  // * `params` - One of below:\n  //    * Setting `autobeam` only `(context, stave, notes, true)` or\n  //      `(ctx, stave, notes, {autobeam: true})`\n  //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n  //    * Setting both a struct is needed `(context, stave, notes, {\n  //      autobeam: true, align_rests: true})`\n  //\n  // `autobeam` automatically generates beams for the notes.\n  // `align_rests` aligns rests with nearby notes.\n  static FormatAndDraw(ctx: DrawContext, stave: Stave, notes: StaveNote[], params: IFormatAndDrawOptions|boolean): BoundingBox {\n    const options = {\n      auto_beam: false,\n      align_rests: false,\n    } as IFormatAndDrawOptions;\n\n    if (typeof params === 'object') {\n      Merge(options, params);\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(DEFAULT_TIME)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice])\n      .formatToStave([voice], stave, {align_rests: options.align_rests, stave} as IFormatOptions);\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  // Helper function to format and draw aligned tab and stave notes in two\n  // separate staves.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n  // * `stave` - A `Stave` instance on which to render `Note`s.\n  // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n  // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n  // * `autobeam` - Automatically generate beams.\n  // * `params` - A configuration object:\n  //    * `autobeam` automatically generates beams for the notes.\n  //    * `align_rests` aligns rests with nearby notes.\n  static FormatAndDrawTab(\n    ctx: DrawContext,\n    tabstave: TabStave,\n    stave: Stave,\n    tabnotes: TabNote[],\n    notes: StaveNote[],\n    autobeam: boolean,\n    params: IFormatAndDrawOptions\n  ): void {\n    const opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    } as IFormatAndDrawOptions;\n\n    if (typeof params === 'object') {\n      Merge(opts, params);\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(DEFAULT_TIME)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(DEFAULT_TIME)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(tabnotes);\n\n    // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice])\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, {align_rests: opts.align_rests} as IFormatOptions);\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  // Auto position rests based on previous/next note positions.\n  //\n  // Params:\n  // * `notes`: An array of notes.\n  // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n  // * `alignTuplets`: If set to false, ignores tuplets.\n  static AlignRestsToNotes(notes: Tickable[], alignAllNotes: boolean, alignTuplets?: boolean): typeof Formatter {\n    notes.forEach((note, index) => {\n      if (note instanceof StaveNote && note.isRest()) {\n        if (note.tuplet && !alignTuplets) return;\n\n        // If activated rests not on default can be rendered as specified.\n        const position = (note.getGlyph() as IGlyphProps).position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') return;\n\n        if (alignAllNotes || note.beam != null) {\n          // Align rests with previous/next notes.\n          const props = note.getKeyProps()[0];\n          if (index === 0) {\n            props.line = lookAhead(notes, props.line, index, false);\n            note.setKeyLine(0, props.line);\n          } else if (index > 0 && index < notes.length) {\n            // If previous note is a rest, use its line number.\n            let restLine;\n            if ((notes[index - 1] as Note).isRest()) {\n              restLine = (notes[index - 1] as any).getKeyProps()[0].line;\n              props.line = restLine;\n            } else {\n              restLine = (notes[index - 1] as Note).getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, restLine, index, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    });\n\n    return this;\n  }\n\n  constructor(options?: IFormatterOptions) {\n    this.options = {\n      softmaxFactor: null,\n      maxIterations: 2,\n      ...options\n    };\n\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Total number of ticks in the voice.\n    this.totalTicks = new Fraction(0, 1);\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = null;\n    this.modiferContexts = null;\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n    this.iterationsCompleted = 0;\n    this.lossHistory = [];\n  }\n\n  // Find all the rests in each of the `voices` and align them\n  // to neighboring notes. If `alignAllNotes` is `false`, then only\n  // align non-beamed notes.\n  alignRests(voices: Voice[], alignAllNotes: boolean): void {\n    if (!voices || !voices.length) {\n      throw new RuntimeError('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach(voice =>\n      Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  // Calculate the minimum width required to align and format `voices`.\n  preCalculateMinTotalWidth(voices: Voice[]): number {\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts if not already created.\n    if (!this.tickContexts) {\n      if (!voices) {\n        throw new RuntimeError(\n          'BadArgument', \"'voices' required to run preCalculateMinTotalWidth\"\n        );\n      }\n\n      this.createTickContexts(voices);\n    }\n\n    const {list: contextList, map: contextMap} = this.tickContexts;\n\n    // Go through each tick context and calculate total width.\n    this.minTotalWidth = contextList\n      .map(tick => {\n        const context = contextMap[tick];\n        context.preFormat();\n        return context.getWidth();\n      })\n      .reduce((a, b) => a + b, 0);\n\n    this.hasMinTotalWidth = true;\n\n    return this.minTotalWidth;\n  }\n\n  // Get minimum width required to render all voices. Either `format` or\n  // `preCalculateMinTotalWidth` must be called before this method.\n  getMinTotalWidth(): number {\n    if (!this.hasMinTotalWidth) {\n      throw new RuntimeError(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  // Create `ModifierContext`s for each tick in `voices`.\n  createModifierContexts(voices: Voice[]): ITickContextsStruct {\n    const contexts = createContexts(\n      voices,\n      ModifierContext,\n      (tickable, context) => tickable.addToModifierContext(context)\n    );\n\n    this.modiferContexts = contexts;\n    return contexts;\n  }\n\n  // Create `TickContext`s for each tick in `voices`. Also calculate the\n  // total number of ticks in voices.\n  createTickContexts(voices: Voice[]): ITickContextsStruct {\n    const contexts = createContexts(\n      voices,\n      TickContext,\n      (tickable, context, voiceIndex) => (context as TickContext).addTickable(tickable, voiceIndex)\n    );\n\n    contexts.array.forEach(context => {\n      (context as TickContext).tContexts = contexts.array;\n    });\n\n    this.totalTicks = voices[0].getTicksUsed().clone();\n    this.tickContexts = contexts;\n    return contexts;\n  }\n\n  // This is the core formatter logic. Format voices and justify them\n  // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n  // that can't retreive widths without a canvas. This method sets the `x` positions\n  // of all the tickables/notes in the formatter.\n  preFormat(justifyWidth = 0, renderingContext: DrawContext, voices: Voice[], stave: Stave): number {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    const {list: contextList, map: contextMap} = contexts;\n\n    // Reset loss history for evaluator.\n    this.lossHistory = [];\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voices && stave) {\n      voices.forEach(voice => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    this.minTotalWidth = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      if (renderingContext) context.setContext(renderingContext);\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.totalLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.totalLeftPx;\n    });\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return this.evaluate();\n\n    // Start justification. Subtract the right extra pixels of the final context because the formatter\n    // justifies based on the context's X position, which is the left-most part of the note head.\n    const firstContext = contextMap[contextList[0]];\n    const lastContext = contextMap[contextList[contextList.length - 1]];\n\n    // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n    // the softmax of the ticks.\n    function calculateIdealDistances(adjustedJustifyWidth: number): IDistance[] {\n      return contextList.map((tick, i) => {\n        const context = contextMap[tick];\n        const voices = context.getTickablesByVoice();\n        let backTickable: Note = null;\n        if (i > 0) {\n          const prevContext = contextMap[contextList[i - 1]];\n          // Go through each tickable and search backwards for another tickable\n          // in the same voice. If found, use that duration (ticks) to calculate\n          // the expected distance.\n          for (let j = i - 1; j >= 0; j--) {\n            const backTick = contextMap[contextList[j]];\n            const backVoices = backTick.getTickablesByVoice();\n\n            // Look for matching voices between tick contexts.\n            const matchingVoices: string[] = [];\n            Object.keys(voices).forEach(v => {\n              if (backVoices[v]) {\n                matchingVoices.push(v);\n              }\n            });\n\n            if (matchingVoices.length > 0) {\n              // Found matching voices, get largest duration\n              let maxTicks = 0;\n              let maxNegativeShiftPx = Infinity;\n              let expectedDistance = 0;\n\n              // eslint-disable-next-line\n              matchingVoices.forEach(v => {\n                const ticks = backVoices[v].getTicks().value();\n                if (ticks > maxTicks) {\n                  backTickable = backVoices[v];\n                  maxTicks = ticks;\n                }\n\n                // Calculate the limits of the shift based on modifiers, etc.\n                const thisTickable = voices[v];\n                const insideLeftEdge = thisTickable.getX() - (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n\n                const backMetrics = backVoices[v].getMetrics();\n                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n\n                // Don't allow shifting if notes in the same voice can collide\n                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n              });\n\n              // Don't shift further left than the notehead of the last context\n              maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - prevContext.getX());\n\n              // Calculate the expected distance of the current context from the last matching tickable. The\n              // distance is scaled down by the softmax for the voice.\n              expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n\n              return {\n                expectedDistance,\n                maxNegativeShiftPx,\n                fromTickable: backTickable,\n              } as IDistance;\n            }\n          }\n        }\n\n        return {errorPx: 0, fromTickablePx: 0, maxNegativeShiftPx: 0} as IDistance;\n      });\n    }\n\n    function shiftToIdealDistances(idealDistances: IDistance[]): number {\n      // Distribute ticks to the contexts based on the calculated distance error.\n      const centerX = adjustedJustifyWidth / 2;\n      let spaceAccum = 0;\n      let negativeSpaceAccum = 0;\n\n      contextList.forEach((tick, index) => {\n        const context = contextMap[tick];\n        if (index > 0) {\n          const x = context.getX();\n          const ideal = idealDistances[index];\n          const errorPx = (ideal.fromTickable.getX() + ideal.expectedDistance) - (x + spaceAccum);\n\n          let negativeShiftPx = 0;\n          if (errorPx > 0) {\n            spaceAccum += errorPx;\n          } else if (errorPx < 0) {\n            negativeShiftPx = Math.min(ideal.maxNegativeShiftPx + negativeSpaceAccum, Math.abs(errorPx));\n          }\n\n          context.setX(x + spaceAccum - negativeShiftPx);\n          negativeSpaceAccum += negativeShiftPx;\n        }\n\n        // Move center aligned tickables to middle\n        context.getCenterAlignedTickables().forEach(tickable => { // eslint-disable-line\n          tickable.center_x_shift = centerX - context.getX();\n        });\n      });\n\n      return lastContext.getX() - firstContext.getX();\n    }\n\n    const adjustedJustifyWidth = justifyWidth -\n      lastContext.getMetrics().notePx -\n      lastContext.getMetrics().totalRightPx -\n      firstContext.getMetrics().totalLeftPx;\n    let targetWidth = adjustedJustifyWidth;\n    let actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n\n    let iterations = this.options.maxIterations;\n    while (actualWidth > (adjustedJustifyWidth + lastContext.getMetrics().notePx) && iterations > 0) {\n      // If we couldn't fit all the notes into the jusification width, it's because the softmax-scaled\n      // widths between different durations differ across stave (e.g., 1 quarter note is not the same pixel-width\n      // as 4 16th-notes). Run another pass, now that we know how much to justify.\n      targetWidth -= (actualWidth - targetWidth);\n      actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n      iterations--;\n    }\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return null;\n\n    this.justifyWidth = justifyWidth;\n    return this.evaluate();\n  }\n\n  // Calculate the total cost of this formatting decision.\n  evaluate(): number {\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = {total: 0, gaps: []};\n    this.tickContexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = this.tickContexts.list[index - 1];\n      const prevContext = this.tickContexts.map[prevTick];\n      const context = this.tickContexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n      const currMetrics = context.getMetrics();\n\n      // Calculate X position of right edge of previous note\n      const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n      // Calculate X position of left edge of current note\n      const insideLeftEdge = context.getX() - (currMetrics.totalLeftPx);\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({x1: insideRightEdge, x2: insideLeftEdge});\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    const durationStats = this.durationStats = {} as Record<string, IDurationStat>;\n\n    function updateStats(duration: string, space: number) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = {mean: space, count: 1};\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note: Note, i: number, notes: Note[]) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.notePx + metrics.totalRightPx;\n        let space: number;\n\n        if (i < (notes.length - 1)) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() - rightMetrics.totalLeftPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note: Note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n\n        metrics.space.mean = durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - metrics.space.mean;\n\n        totalDeviation += Math.pow(metrics.space.deviation, 2);\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this.totalCost;\n  }\n\n  // Run a single iteration of rejustification. At a high level, this method calculates\n  // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n  // attempt to reduce the cost. You can call this method multiple times until it finds\n  // and oscillates around a global minimum.\n  //\n  // Alpha is the \"learning rate\" for the formatter. It determines how much of a shift\n  // the formatter should make based on its cost function.\n  tune(options: IFormatterTuneOptions): number {\n    options = {\n      alpha: 0.5,\n      ...options,\n    };\n\n    const sum = (arr: number[]) => arr.reduce((a, b) => a + b);\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current: TickContext, prev: TickContext, next: TickContext, shift: number) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.totalShift = 0;\n    this.tickContexts.list.forEach((tick, index, list) => {\n      const context = this.tickContexts.map[tick];\n      const prevContext = (index > 0) ? this.tickContexts.map[list[index - 1]] : null;\n      const nextContext = (index < list.length - 1) ? this.tickContexts.map[list[index + 1]] : null;\n\n      move(context, prevContext, nextContext, shift);\n\n      const cost = -sum(\n        context.getTickables().map(t => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      shift *= options.alpha;\n      this.totalShift += shift;\n    });\n\n    this.iterationsCompleted++;\n    return this.evaluate();\n  }\n\n  // This is the top-level call for all formatting logic completed\n  // after `x` *and* `y` values have been computed for the notes\n  // in the voices.\n  postFormat(): this {\n    const postFormatContexts = (contexts: ITickContextsStruct) =>\n      contexts.list.forEach(tick => contexts.map[tick].postFormat());\n\n    postFormatContexts(this.modiferContexts);\n    postFormatContexts(this.tickContexts);\n\n    return this;\n  }\n\n  // Take all `voices` and create `ModifierContext`s out of them. This tells\n  // the formatters that the voices belong on a single stave.\n  joinVoices(voices: Voice[]): this {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  // Align rests in voices, justify the contexts, and position the notes\n  // so voices are aligned and ready to render onto the stave. This method\n  // mutates the `x` positions of all tickables in `voices`.\n  //\n  // Voices are full justified to fit in `justifyWidth` pixels.\n  //\n  // Set `options.context` to the rendering context. Set `options.align_rests`\n  // to true to enable rest alignment.\n  format(voices: Voice[], justifyWidth: number, options?: IFormatOptions): this {\n    const opts = {\n      align_rests: false,\n      context: null,\n      stave: null,\n      ...options,\n    } as IFormatOptions;\n\n    this.voices = voices;\n    if (this.options.softmaxFactor) {\n      this.voices.forEach(v => v.setSoftmaxFactor(this.options.softmaxFactor));\n    }\n\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred\n  // from the `stave`.\n  formatToStave(voices: Voice[], stave: Stave, options: IFormatOptions): this {\n    options = {\n      padding: 10,\n      ...options\n    };\n\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - options.padding;\n    L('Formatting voices to width: ', justifyWidth);\n    return this.format(voices, justifyWidth, {context: stave.getContext(), ...options});\n  }\n}\n","import {BravuraFont} from './fonts/bravura_glyphs';\nimport {BravuraMetrics} from './fonts/bravura_metrics';\nimport {GonvilleFont} from './fonts/gonville_glyphs';\nimport {GonvilleMetrics} from './fonts/gonville_metrics';\nimport {PetalumaFont} from './fonts/petaluma_glyphs';\nimport {PetalumaMetrics} from './fonts/petaluma_metrics';\nimport {CustomFont} from './fonts/custom_glyphs';\nimport {CustomMetrics} from './fonts/custom_metrics';\nimport {IFontData, IFontGlyph} from \"./types/font\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nclass Font {\n  name: string;\n  metrics: Record<string, any>;\n\n  private readonly fontData: IFontData;\n\n  private codePoints: never;\n\n  constructor(name: string, metrics: Record<string, unknown>, fontData: IFontData) {\n    this.name = name;\n    this.metrics = metrics;\n    this.fontData = fontData;\n    this.codePoints = {} as never;\n  }\n\n  getName(): string {\n    return this.name;\n  }\n\n  getResolution(): number {\n    return this.fontData.resolution;\n  }\n\n  getMetrics(): Record<string, unknown> {\n    return this.metrics;\n  }\n\n  lookupMetric(key: string, defaultValue: Record<string, any>|number = undefined): any {\n    const parts = key.split('.');\n    let val: any = this.metrics;\n    for (let i = 0; i < parts.length; i++) {\n      if (val[parts[i]] === undefined) {\n        if (defaultValue !== undefined) {\n          return defaultValue;\n        } else {\n          throw new RuntimeError('INVALID_KEY', `Invalid music font metric key: ${key}`);\n        }\n      }\n      val = val[parts[i]];\n    }\n\n    // console.log('found:', key, val);\n    return val;\n  }\n\n  getFontData(): IFontData {\n    return this.fontData;\n  }\n\n  getGlyphs(): Record<string, IFontGlyph> {\n    return this.fontData.glyphs;\n  }\n\n  getCodePoints(): never {\n    return this.codePoints;\n  }\n\n  setCodePoints(codePoints: never): this {\n    this.codePoints = codePoints;\n    return this;\n  }\n}\n\nconst Fonts = {\n  Bravura: new Font('Bravura', BravuraMetrics, BravuraFont as any),\n  Gonville: new Font('Gonville', GonvilleMetrics, GonvilleFont as any),\n  Petaluma: new Font('Petaluma', PetalumaMetrics, PetalumaFont as any),\n  Custom: new Font('Custom', CustomMetrics, CustomFont as any),\n};\n\nconst DefaultFontStack = [Fonts.Bravura, Fonts.Gonville, Fonts.Custom];\n\nexport {Fonts, DefaultFontStack, Font};\n","// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n// Bounding boxes for interactive notation\n\nimport {DrawContext} from \"./types/common\";\n\nexport class BoundingBox {\n  y: number;\n  private x: number;\n  private w: number;\n  h: number;\n\n  static copy(that: BoundingBox): BoundingBox {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x: number, y: number, w: number, h: number) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getW(): number {\n    return this.w;\n  }\n\n  getH(): number {\n    return this.h;\n  }\n\n  setX(x: number): this {\n    this.x = x;\n    return this;\n  }\n\n  setY(y: number): this {\n    this.y = y;\n    return this;\n  }\n\n  setW(w: number): this {\n    this.w = w;\n    return this;\n  }\n\n  setH(h: number): this {\n    this.h = h;\n    return this;\n  }\n\n  move(x: number, y: number): void {\n    this.x += x;\n    this.y += y;\n  }\n\n  clone(): BoundingBox {\n    return BoundingBox.copy(this);\n  }\n\n  // Merge my box with given box. Creates a bigger bounding box unless\n  // the given box is contained in this one.\n  mergeWith(boundingBox: BoundingBox, ctx?: DrawContext): this {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n    const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    if (ctx) this.draw(ctx);\n    return this;\n  }\n\n  draw(ctx: DrawContext, x?: number, y?: number): void {\n    if (!x) x = 0;\n    if (!y) y = 0;\n    ctx.rect(this.x + x, this.y + y, this.w, this.h);\n    ctx.stroke();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the main Voice class. It's mainly a container\n// object to group `Tickables` for formatting.\nimport {Element} from './element';\nimport {Fraction} from './fraction';\nimport {Stave} from \"./stave\";\nimport {Note} from \"./note\";\nimport {DrawContext} from \"./types/common\";\nimport {Tickable} from \"./tickable\";\nimport {VoiceGroup} from \"./voicegroup\";\nimport {BoundingBox} from \"./boundingbox\";\nimport {IVoiceTime} from \"./types/voice\";\nimport {IStaveOptions} from \"./types/stave\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {Merge, RESOLUTION} from \"./flow\";\n\nexport enum Mode {\n  STRICT = 1,\n  SOFT = 2,\n  FULL = 3\n}\n\nexport class Voice extends Element {\n  private resolutionMultiplier: number;\n  private smallestTickCount: Fraction;\n  private stave: Stave;\n  private mode: Mode;\n  private voiceGroup: VoiceGroup;\n  private expTicksUsed: number;\n  private preFormatted: boolean;\n  private options: IStaveOptions;\n\n  private readonly totalTicks: Fraction;\n  private readonly ticksUsed: Fraction;\n  private readonly largestTickWidth: number;\n  private readonly tickables: Note[];\n  private readonly time: IVoiceTime|string;\n\n  // Modes allow the addition of ticks in three different ways:\n  //\n  // STRICT: This is the default. Ticks must fill the voice.\n  // SOFT:   Ticks can be added without restrictions.\n  // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n  //         tick length.\n  static get Mode(): typeof Mode {\n    return Mode;\n  }\n\n  constructor(time: IVoiceTime|string, options?: IStaveOptions) {\n    super();\n    this.setAttribute('type', 'Voice');\n\n    this.options = {\n      softmaxFactor: 100,\n      ...options,\n    };\n\n    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n    if (typeof (time) === 'string') {\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        time = {\n          num_beats: +match[1],\n          beat_value: +match[2],\n          resolution: RESOLUTION,\n        };\n      }\n    }\n\n    // Default time sig is 4/4\n    this.time = Merge({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: RESOLUTION,\n    }, time);\n\n    // Recalculate total ticks.\n    this.totalTicks = typeof (this.time) !== 'string' && new Fraction(\n      this.time.num_beats * (this.time.resolution / this.time.beat_value), 1\n    );\n\n    this.resolutionMultiplier = 1;\n\n    // Set defaults\n    this.tickables = [];\n    this.ticksUsed = new Fraction(0, 1);\n    this.smallestTickCount = this.totalTicks.clone();\n    this.largestTickWidth = 0;\n    this.stave = null;\n    // Do we care about strictly timed notes\n    this.mode = Voice.Mode.STRICT;\n\n    // This must belong to a VoiceGroup\n    this.voiceGroup = null;\n  }\n\n  // Get the total ticks in the voice\n  getTotalTicks(): Fraction {\n    return this.totalTicks;\n  }\n\n  // Get the total ticks used in the voice by all the tickables\n  getTicksUsed(): Fraction {\n    return this.ticksUsed;\n  }\n\n  // Get the largest width of all the tickables\n  getLargestTickWidth(): number {\n    return this.largestTickWidth;\n  }\n\n  // Get the tick count for the shortest tickable\n  getSmallestTickCount(): Fraction {\n    return this.smallestTickCount;\n  }\n\n  // Get the tickables in the voice\n  getTickables(): Note[] {\n    return this.tickables;\n  }\n\n  // Get/set the voice mode, use a value from `Voice.Mode`\n  getMode(): number {\n    return this.mode;\n  }\n\n  setMode(mode: number): this {\n    this.mode = mode;\n    return this;\n  }\n\n  // Get the resolution multiplier for the voice\n  getResolutionMultiplier(): number {\n    return this.resolutionMultiplier;\n  }\n\n  // Get the actual tick resolution for the voice\n  getActualResolution(): number {\n    if (typeof (this.time) === 'string') {\n      throw new RuntimeError('VoiceError', 'Time is of type string');\n    }\n    return this.resolutionMultiplier * this.time.resolution;\n  }\n\n  // Set the voice's stave\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    this.boundingBox = null; // Reset bounding box so we can reformat\n    return this;\n  }\n\n  // Get the bounding box for the voice\n  getBoundingBox(): BoundingBox {\n    let stave;\n    let boundingBox;\n    let bb;\n    let i;\n\n    if (!this.boundingBox) {\n      if (!this.stave) throw new RuntimeError('NoStave', \"Can't get bounding box without stave.\");\n      stave = this.stave;\n      boundingBox = null;\n\n      for (i = 0; i < this.tickables.length; ++i) {\n        (this.tickables[i] as Note).setStave(stave);\n\n        bb = this.tickables[i].getBoundingBox();\n        if (!bb) continue;\n\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  // Every tickable must be associated with a voiceGroup. This allows formatters\n  // and preformatters to associate them with the right modifierContexts.\n  getVoiceGroup(): VoiceGroup {\n    if (!this.voiceGroup) {\n      throw new RuntimeError('NoVoiceGroup', 'No voice group for voice.');\n    }\n\n    return this.voiceGroup;\n  }\n\n  // Set the voice group\n  setVoiceGroup(g: VoiceGroup): this {\n    this.voiceGroup = g;\n    return this;\n  }\n\n  // Set the voice mode to strict or soft\n  setStrict(strict: boolean): this {\n    this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n    return this;\n  }\n\n  // Determine if the voice is complete according to the voice mode\n  isComplete(): boolean {\n    if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  // We use softmax to layout the tickables proportional to the exponent of\n  // their duration. The softmax factor is used to determine the 'linearness' of\n  // the layout.\n  //\n  // The softmax of all the tickables in this voice should sum to 1.\n  setSoftmaxFactor(factor: number): this {\n    this.options.softmaxFactor = factor;\n    return this;\n  }\n\n  // Calculate the sum of the exponents of all the ticks in this voice to use as the denominator\n  // of softmax.\n  reCalculateExpTicksUsed(): number {\n    const totalTicks = this.ticksUsed.value();\n    const exp = (tickable: Tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n    this.expTicksUsed = this.tickables.map(exp).reduce((a, b) => a + b);\n    return this.expTicksUsed;\n  }\n\n  // Get the softmax-scaled value of a tick duration. 'tickValue' is a number.\n  softmax(tickValue: number): number {\n    if (!this.expTicksUsed) {\n      this.reCalculateExpTicksUsed();\n    }\n\n    const totalTicks = this.ticksUsed.value();\n    const exp = (v: number) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n    return exp(tickValue) / this.expTicksUsed;\n  }\n\n  // Add a tickable to the voice\n  addTickable(tickable: Note): this {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n\n      if (\n        (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.ticksUsed.subtract(ticks);\n        throw new RuntimeError('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  // Add an array of tickables to the voice.\n  addTickables(tickables: Note[]): this {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n\n    return this;\n  }\n\n  // Preformats the voice by applying the voice's stave to each note.\n  preFormat(): this {\n    if (this.preFormatted) return this;\n\n    this.tickables.forEach((tickable) => {\n      if (!(tickable as Note).getStave()) {\n        (tickable as Note).setStave(this.stave);\n      }\n    });\n\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the voice onto the canvas `context` and an optional `stave`.\n  // If `stave` is omitted, it is expected that the notes have staves\n  // already set.\n  draw(context: DrawContext = this.context, stave: Stave = this.stave): void {\n    this.setRendered();\n    let boundingBox = null;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n\n      // Set the stave if provided\n      if (stave) (tickable as Note).setStave(stave);\n\n      if (!(tickable as Note).getStave()) {\n        throw new RuntimeError(\n          'MissingStave', 'The voice cannot draw tickables without staves.'\n        );\n      }\n\n      if (i === 0) boundingBox = tickable.getBoundingBox();\n\n      if (i > 0 && boundingBox) {\n        const tickable_bb = tickable.getBoundingBox();\n        if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n      }\n\n      tickable.setContext(context);\n      tickable.drawWithStyle();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport {Tickable} from './tickable';\nimport {Fraction} from './fraction';\nimport {Note} from \"./note\";\nimport {IMetrics} from \"./types/common\";\nimport {ModifierContext} from \"./modifiercontext\";\nimport {ITickContextOptions} from \"./types/tickcontext\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class TickContext extends Tickable {\n  tContexts: (ModifierContext|TickContext)[];\n\n  private readonly tickID: number;\n  private readonly tickables: Note[];\n  private readonly tickablesByVoice: Record<string, Note>;\n\n  private currentTick: Fraction;\n  private maxTicks: Fraction;\n  private padding: number;\n  private xBase: number;\n  private x: number;\n  private xOffset: number;\n  private notePx: number;\n  private glyphPx: number;\n  private leftDisplacedHeadPx: number;\n  private rightDisplacedHeadPx: number;\n  private modLeftPx: number;\n  private modRightPx: number;\n  private totalLeftPx: number;\n  private totalRightPx: number;\n  private maxTickable: Note;\n  private minTicks: Fraction;\n  private minTickable: Note;\n\n  static getNextContext(tContext: TickContext): ModifierContext|TickContext {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    return contexts[index + 1];\n  }\n\n  constructor(options?: ITickContextOptions) {\n    super();\n    this.tickID = options && options.tickID;\n    this.setAttribute('type', 'TickContext');\n    this.currentTick = new Fraction(0, 1);\n\n    this.maxTicks = new Fraction(0, 1);\n    this.maxTickable = null; // Biggest tickable\n    this.minTicks = null; // this can remian null if all tickables have ignore_ticks\n    this.minTickable = null;\n\n    this.padding = 1;     // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.xBase = 0;        // base x position without xOffset\n    this.xOffset = 0;      // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n    this.tickables = [];   // Notes, tabs, chords, lyrics.\n    this.tickablesByVoice = {};   // Tickables indeced by voice number\n\n    // Formatting metrics\n    this.notePx = 0;       // width of widest note in this context\n    this.glyphPx = 0;       // width of glyph (note head)\n    this.leftDisplacedHeadPx = 0;  // Extra left pixels for displaced notes\n    this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n    this.modLeftPx = 0; // Left modifier pixels\n    this.modRightPx = 0; // Right modifier pixels\n    this.totalLeftPx = 0;  // Total left pixels\n    this.totalRightPx = 0; // Total right pixels\n    this.tContexts = [];   // Parent array of tick contexts\n  }\n\n  getTickID(): number {\n    return this.tickID;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  setX(x: number): this {\n    this.x = x;\n    this.xBase = x;\n    this.xOffset = 0;\n    return this;\n  }\n\n  getXBase(): number {\n    return this.xBase;\n  } // use of xBase and xOffset is optional, avoids offset creep\n\n  setXBase(xBase: number): void {\n    this.xBase = xBase;\n    this.x = xBase + this.xOffset;\n  }\n\n  getXOffset(): number {\n    return this.xOffset;\n  }\n\n  setXOffset(xOffset: number): void {\n    this.xOffset = xOffset;\n    this.x = this.xBase + xOffset;\n  }\n\n  getWidth(): number {\n    return this.width + (this.padding * 2);\n  }\n\n  setPadding(padding: number): this {\n    this.padding = padding;\n    return this;\n  }\n\n  getMaxTicks(): Fraction {\n    return this.maxTicks;\n  }\n\n  getMinTicks(): Fraction {\n    return this.minTicks;\n  }\n\n  getMaxTickable(): Note {\n    return this.maxTickable;\n  }\n\n  getMinTickable(): Note {\n    return this.minTickable;\n  }\n\n  getTickables(): Note[] {\n    return this.tickables;\n  }\n\n  getTickablesForVoice(voiceIndex: number): Note {\n    return this.tickablesByVoice[voiceIndex];\n  }\n\n  getTickablesByVoice(): Record<string, Note> {\n    return this.tickablesByVoice;\n  }\n\n  getCenterAlignedTickables(): Note[] {\n    return this.tickables.filter(tickable => tickable.isCenterAligned());\n  }\n\n  // Get widths context, note and left/right modifiers for formatting\n  getMetrics(): IMetrics {\n    const {width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx} = this;\n    return {\n      width, // Width of largest tickable in context\n      glyphPx, // Width of largest glyph (note head)\n      notePx, // Width of notehead + stem\n      leftDisplacedHeadPx, // Left modifiers\n      rightDisplacedHeadPx, // Right modifiers\n      modLeftPx,\n      modRightPx,\n      totalLeftPx,\n      totalRightPx\n    } as IMetrics;\n  }\n\n  getCurrentTick(): Fraction {\n    return this.currentTick;\n  }\n\n  setCurrentTick(tick: Fraction): void {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  addTickable(tickable: Note, voiceIndex?: number): this {\n    if (!tickable) {\n      throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      this.ignore_ticks = false;\n\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n        this.maxTickable = tickable;\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n        this.minTickable = tickable;\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n        this.minTickable = tickable;\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.tickablesByVoice[voiceIndex] = tickable;\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat(): this {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max displaced head pixels from all tickables in the context\n      this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n      this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.notePx);\n\n      // Maintain the widest note head\n      this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth);\n\n      // Total modifier shift\n      this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n      this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n\n      // Total shift\n      this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n      this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat(): this {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Support for different rendering contexts: Canvas, Raphael\nimport {CanvasContext} from './canvascontext';\nimport {RaphaelContext} from './raphaelcontext';\nimport {SVGContext} from './svgcontext';\nimport {DrawContext} from \"./types/common\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nlet lastContext: DrawContext = null;\n\nexport enum Backends {\n  CANVAS = 1,\n  RAPHAEL = 2,\n  SVG = 3,\n  VML = 4\n}\n\nexport enum LineEndType {\n  NONE = 1,   // No leg\n  UP = 2,     // Upward leg\n  DOWN = 3    // Downward leg\n}\n\nexport class Renderer {\n  private readonly elementRef: string | HTMLElement;\n  private readonly element: HTMLCanvasElement;\n  private readonly backend: number;\n\n  private ctx: DrawContext;\n  private paper: any;\n\n  static get Backends(): typeof Backends {\n    return Backends;\n  }\n\n  // End of line types\n  static get LineEndType(): typeof LineEndType {\n    return LineEndType;\n  }\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  static get USE_CANVAS_PROXY(): boolean {\n    return false;\n  }\n\n  static get lastContext(): DrawContext {\n    return lastContext;\n  }\n\n  static set lastContext(ctx: DrawContext) {\n    lastContext = ctx;\n  }\n\n  static buildContext(elementId: string, backend: number, width: number, height: number, background: string): DrawContext {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) {\n      renderer.resize(width, height);\n    }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId: string, width: number, height: number, background: string): DrawContext {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getRaphaelContext(elementId: string, width: number, height: number, background: string): DrawContext {\n    return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n  }\n\n  static getSVGContext(elementId: string, width: number, height: number, background: string): DrawContext {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  static bolsterCanvasContext(ctx: any): DrawContext {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    const methodNames = [\n      'clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle',\n      'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth',\n      'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach(methodName => {\n      ctx[methodName] = ctx[methodName] || (CanvasContext.prototype as any)[methodName];\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(context: DrawContext, fromX: number, fromY: number, toX: number, toY: number, dashPattern: number[]): void {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(elementRef: string | HTMLElement, backend: number) {\n    this.elementRef = elementRef;\n    if (!this.elementRef) {\n      throw new RuntimeError('BadArgument', 'Invalid id for renderer.');\n    }\n\n    this.element = document.getElementById(elementRef as string) as HTMLCanvasElement;\n    if (!this.element) this.element = elementRef as HTMLCanvasElement;\n\n    // Verify backend and create context\n    this.ctx = null;\n    this.paper = null;\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      // Create context.\n      if (!this.element.getContext) {\n        throw new RuntimeError('BadElement', `Can't get canvas context from element: ${elementRef}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n      this.ctx = new RaphaelContext(this.element);\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new RuntimeError('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width: number, height: number): this {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new RuntimeError(\n          'BadElement', `Can't get canvas context from element: ${this.elementRef}`\n        );\n      }\n      [width, height] = CanvasContext.SanitizeCanvasDims(width, height);\n\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      this.element.width = width * devicePixelRatio;\n      this.element.height = height * devicePixelRatio;\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      this.ctx.scale(devicePixelRatio, devicePixelRatio);\n    } else {\n      this.ctx.resize(width.toString(), height.toString());\n    }\n\n    return this;\n  }\n\n  getContext(): DrawContext {\n    return this.ctx;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `Beams` that span over a set of `StemmableNotes`.\nimport {Element} from './element';\nimport {Fraction} from './fraction';\nimport {Tuplet} from './tuplet';\nimport {Stem} from './stem';\nimport {StaveNote} from \"./stavenote\";\nimport {Voice} from \"./voice\";\nimport {StemmableNote} from \"./stemmablenote\";\nimport {Tickable} from \"./tickable\";\nimport {Note} from \"./note\";\nimport {IBeam, IBeamRenderOptions, IGenerateBeamConfig} from \"./types/beam\";\nimport {IGlyphProps} from \"./types/glyph\";\nimport {durationToNumber, durationToTicks, RESOLUTION} from \"./flow\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nfunction calculateStemDirection(notes: Note[]) {\n  let lineSum = 0;\n  notes.forEach(note => {\n    if ((note as StaveNote).keyProps) {\n      (note as StaveNote).keyProps.forEach(keyProp => {\n        lineSum += (keyProp.line - 3);\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nconst getStemSlope = (firstNote: Note, lastNote: Note) => {\n  const firstStemTipY = (firstNote as StemmableNote).getStemExtents().topY;\n  const firstStemX = (firstNote as StemmableNote).getStemX();\n  const lastStemTipY = (lastNote as StemmableNote).getStemExtents().topY;\n  const lastStemX = (lastNote as StemmableNote).getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n};\n\nconst BEAM_LEFT = 'L';\nconst BEAM_RIGHT = 'R';\nconst BEAM_BOTH = 'B';\n\nexport class Beam extends Element {\n  render_options: IBeamRenderOptions;\n  notes: Note[];\n  postFormatted: boolean;\n  slope: number;\n\n  private readonly stem_direction: number;\n  private readonly ticks: number;\n\n  private y_shift: number;\n  private break_on_indices: number[];\n  private beam_count: number;\n  private unbeamable: boolean;\n\n  // Gets the default beam groups for a provided time signature.\n  // Attempts to guess if the time signature is not found in table.\n  // Currently this is fairly naive.\n  static getDefaultBeamGroups(time_sig: string): Fraction[] {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults: Record<string, string[]> = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map(group => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  // A helper function to automatically build basic beams for a voice. For more\n  // complex auto-beaming use `Beam.generateBeams()`.\n  //\n  // Parameters:\n  // * `voice` - The voice to generate the beams for\n  // * `stem_direction` - A stem direction to apply to the entire voice\n  // * `groups` - An array of `Fraction` representing beat groupings for the beam\n  static applyAndGetBeams(voice: Voice, stem_direction?: number, groups?: Fraction[]): Beam[] {\n    return Beam.generateBeams(voice.getTickables(), {\n      groups,\n      stem_direction,\n    } as IGenerateBeamConfig);\n  }\n\n  // A helper function to autimatically build beams for a voice with\n  // configuration options.\n  //\n  // Example configuration object:\n  //\n  // ```\n  // config = {\n  //   groups: [new Vex.Flow.Fraction(2, 8)],\n  //   stem_direction: -1,\n  //   beam_rests: true,\n  //   beam_middle_only: true,\n  //   show_stemlets: false\n  // };\n  // ```\n  //\n  // Parameters:\n  // * `notes` - An array of notes to create the beams for\n  // * `config` - The configuration object\n  //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n  //    * `stem_direction` - Set to apply the same direction to all notes\n  //    * `beam_rests` - Set to `true` to include rests in the beams\n  //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n  //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n  //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n  //\n  static generateBeams(notes: Tickable[], config: IGenerateBeamConfig): Beam[] {\n    if (!config) config = {} as IGenerateBeamConfig;\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map(group => {\n      if (!group.multiply) {\n        throw new RuntimeError('InvalidBeamGroups',\n          'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(RESOLUTION, 1);\n    });\n\n    const unprocessedNotes = notes;\n    let currentTickGroup = 0;\n    let noteGroups: Note[][] = [];\n    let currentGroup: Note[] = [];\n\n    function getTotalTicks(vf_notes: Note[]) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup: Note[] = [];\n      // number of ticks in current group\n      let currentGroupTotalTicks = new Fraction(0, 1);\n      unprocessedNotes.forEach((unprocessedNote: Note) => {\n        nextGroup = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = durationToNumber((unprocessedNote as Note).duration) < 8;\n        if (unbeamable && unprocessedNote.tuplet) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            nextGroup.push(currentGroup.pop());\n          }\n          noteGroups.push(currentGroup);\n\n          // We have overflown, so we're going to next tick group. As we might have\n          // overflown by more than 1 group, we need to go forward as many times as\n          // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n          // in current groups as we go forward.\n          do {\n            currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n            nextTickGroup();\n          } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n          currentGroup = nextGroup;\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroupTotalTicks = new Fraction(0, 1);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes beam\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n\n    function getBeamGroups() {\n      return noteGroups.filter(group => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach(note => {\n            if (note.getIntrinsicTicks() >= durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups: Note[][] = [];\n      noteGroups.forEach(group => {\n        let tempGroup: Note[] = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest = (config.beam_rests &&\n            config.beam_middle_only && note.isRest() && isFirstOrLast);\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote &&\n            !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = (prevNote as StemmableNote).getStemDirection();\n            const currentDirection = (note as StemmableNote).getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest ||\n            breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach(group => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? (note as StemmableNote).getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group: Note[]) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group: Note[], direction: number) {\n      group.forEach(note => {\n        (note as StemmableNote).setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets: Tuplet[] = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach(group => {\n        let tuplet: Tuplet = null;\n        group.forEach(note => {\n          if (note.tuplet && (tuplet !== note.tuplet)) {\n            tuplet = note.tuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams: Beam[] = [];\n    beamedNoteGroups.forEach(group => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach(tuplet => {\n      // Set the tuplet location based on the stem direction\n      const direction = (tuplet.notes[0] as StemmableNote).stem_direction === Stem.DOWN ?\n        Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i] as StemmableNote;\n        if (note.beam === null) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes: Note[], auto_stem = false) {\n    super();\n    this.setAttribute('type', 'Beam');\n\n    if (!notes || notes === []) {\n      throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= durationToTicks('4')) {\n      throw new RuntimeError('BadArguments',\n        'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = Stem.UP;\n\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (note.hasStem()) {\n        this.stem_direction = (note as StemmableNote).getStemDirection();\n        break;\n      }\n    }\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n    if (auto_stem && notes[0].getCategory() === 'stavenotes') {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + (note as StemmableNote).stem_direction, 0);\n\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        (note as StemmableNote).setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    } as IBeamRenderOptions;\n  }\n\n  // Get the notes in this beam\n  getNotes(): Note[] {\n    return this.notes;\n  }\n\n  // Get the max number of beams in the set of notes\n  getBeamCount(): number {\n    const beamCounts = this.notes.map(note => (note.getGlyph() as IGlyphProps).beam_count);\n\n    const maxBeamCount = beamCounts.reduce((max, beamCount) => beamCount > max ? beamCount : max);\n\n    return maxBeamCount;\n  }\n\n  // Set which note `indices` to break the secondary beam at\n  breakSecondaryAt(indices: number[]): this {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  // Return the y coordinate for linear function\n  getSlopeY(x: number, first_x_px: number, first_y_px: number, slope: number): number {\n    return first_y_px + ((x - first_x_px) * slope);\n  }\n\n  // Calculate the best possible slope for the provided notes\n  calculateSlope(): void {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: {max_slope, min_slope, slope_iterations, slope_cost},\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        const adjustedStemTipY = this.getSlopeY(\n          (note as StemmableNote).getStemX(),\n          (firstNote as StemmableNote).getStemX(),\n          (firstNote as StemmableNote).getStemExtents().topY,\n          slope\n        ) + yShiftTemp;\n\n        const stemTipY = (note as StemmableNote).getStemExtents().topY;\n        // beam needs to be shifted up to accommodate note\n        if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n          const diff = Math.abs(stemTipY - adjustedStemTipY);\n          yShiftTemp += diff * -stemDirection;\n          totalStemExtension += diff * i;\n        } else { // beam overshoots note, account for the difference\n          totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  // Calculate a slope and y-shift for flat beams\n  calculateFlatSlope(): void {\n    const {\n      notes, stem_direction,\n      render_options: {beam_width, min_flat_beam_offset, flat_beam_offset},\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0;  // Store the highest or lowest note here\n    let extremeBeamCount = 0;  // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = (note as StemmableNote).getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = (note as StemmableNote).getBeamCount();\n      } else if (\n        stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)\n      ) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = (note as StemmableNote).getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + (extremeBeamCount * beamWidth);\n    const newOffset = extremeY + (extremeTest * -stem_direction);\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  getBeamYToDraw(): number {\n    const firstNote = this.notes[0];\n    const firstStemTipY = (firstNote as StemmableNote).getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n    return beamY;\n  }\n\n  // Create new stems for the notes in the beam, so that each stem\n  // extends into the beams.\n  applyStemExtensions(): void {\n    const {\n      notes, slope, y_shift, stem_direction, beam_count,\n      render_options: {\n        show_stemlets,\n        stemlet_extension,\n        beam_width,\n      },\n    } = this;\n\n    const firstNote = notes[0];\n    const firstStemTipY = this.getBeamYToDraw();\n    const firstStemX = (firstNote as StemmableNote).getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stemX = (note as StemmableNote).getStemX();\n      const {topY: stemTipY} = (note as StemmableNote).getStemExtents();\n      const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n      const preBeamExtension = (note as StemmableNote).getStem().getExtension();\n      const beamExtension = stem_direction === Stem.UP\n        ? stemTipY - beamedStemTipY\n        : beamedStemTipY - stemTipY;\n\n      (note as StemmableNote).stem.setExtension(preBeamExtension + beamExtension);\n      (note as StemmableNote).stem.renderHeightAdjustment = -Stem.WIDTH / 2;\n\n      if (note.isRest() && show_stemlets) {\n        const beamWidth = beam_width;\n        const totalBeamWidth = ((beam_count - 1) * beamWidth * 1.5) + beamWidth;\n        (note as StemmableNote).stem\n          .setVisibility(true)\n          .setStemlet(true, totalBeamWidth + stemlet_extension);\n      }\n    }\n  }\n\n  // return upper level beam direction.\n  lookupBeamDirection(duration: string, prev_tick: number, tick: number, next_tick: number): string {\n    if (duration === '4') {\n      return BEAM_LEFT;\n    }\n\n    const lookup_duration = `${durationToNumber(duration) / 2}`;\n    const prev_note_gets_beam = prev_tick < durationToTicks(lookup_duration);\n    const next_note_gets_beam = next_tick < durationToTicks(lookup_duration);\n    const note_gets_beam = tick < durationToTicks(lookup_duration);\n\n    if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_BOTH;\n    } else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n      return BEAM_LEFT;\n    } else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_RIGHT;\n    }\n\n    return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick);\n  }\n\n  // Get the x coordinates for the beam lines of specific `duration`\n  getBeamLines(duration: string): IBeam[] {\n    const tick_of_duration = durationToTicks(duration);\n    const beam_lines = [];\n    let beam_started = false;\n    let current_beam: IBeam = null;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.ticks.value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >=\n          this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n\n      const stem_x = (note as StemmableNote).getStemX() - (Stem.WIDTH / 2);\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const prev_note = this.notes[i - 1];\n      const next_note = this.notes[i + 1];\n      const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n      const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n      const beam_alone = prev_note && next_note &&\n        note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !next_note_gets_beam && current_beam.end === null) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = {start: stem_x, end: null};\n          beam_started = true;\n\n          if (beam_alone) {\n            // previous and next beam exists and does not get a beam but current gets it.\n            const prev_tick = prev_note.getIntrinsicTicks();\n            const next_tick = next_note.getIntrinsicTicks();\n            const tick = note.getIntrinsicTicks();\n            const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick);\n\n            if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n              current_beam.end = current_beam.start - partial_beam_length;\n            } else {\n              current_beam.end = current_beam.start + partial_beam_length;\n            }\n          } else if (!next_note_gets_beam) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === null) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  // Render the stems for each notes\n  drawStems(): void {\n    this.notes.forEach(note => {\n      if ((note as StemmableNote).getStem()) {\n        (note as StemmableNote).getStem().setContext(this.context).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  drawBeamLines(): void {\n    this.checkContext();\n\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n    let beamY = this.getBeamYToDraw();\n    const firstStemX = (firstNote as StemmableNote).getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n        this.context.beginPath();\n        this.context.moveTo(startBeamX, startBeamY);\n        this.context.lineTo(startBeamX, startBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY);\n        this.context.closePath();\n        this.context.fill();\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  // Pre-format the beam\n  preFormat(): this {\n    return this;\n  }\n\n  // Post-format the beam. This can only be called after\n  // the notes in the beam have both `x` and `y` values. ie: they've\n  // been formatted and have staves\n  postFormat(): void {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  // Render the beam to the canvas context\n  draw(): void {\n    this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n\n    this.drawStems();\n    this.applyStyle();\n    this.drawBeamLines();\n    this.restoreStyle();\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\nimport {Modifier} from './modifier';\nimport {StemmableNote} from \"./stemmablenote\";\nimport {IState} from \"./types/common\";\nimport {StaveNote} from \"./stavenote\";\nimport {Note} from \"./note\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class Dot extends Modifier {\n  note: Note;\n\n  private radius: number;\n  private dot_shiftY: number;\n\n  static get CATEGORY(): string {\n    return 'dots';\n  }\n\n  // Arrange dots inside a ModifierContext.\n  static format(dots: Dot[], state: IState): boolean {\n    const right_shift = state.right_shift;\n    const dot_spacing = 1;\n\n    if (!dots || dots.length === 0) return false;\n\n    const dot_list = [];\n    const max_shift_map: Record<string, number> = {};\n    for (let i = 0; i < dots.length; ++i) {\n      const dot = dots[i];\n      const note = dot.getNote();\n\n      let props;\n      let shift;\n\n      // Only StaveNote has .getKeyProps()\n      if (typeof (note as StaveNote).getKeyProps === 'function') {\n        props = (note as StaveNote).getKeyProps()[dot.getIndex()];\n        shift = note.getRightDisplacedHeadPx();\n      } else { // Else it's a TabNote\n        props = {line: 0.5}; // Shim key props for dot placement\n        shift = 0;\n      }\n\n      const note_id = note.getAttribute('id');\n      dot_list.push({line: props.line, note, note_id, dot});\n      max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n    }\n\n    // Sort dots by line number.\n    dot_list.sort((a, b) => b.line - a.line);\n\n    let dot_shift = right_shift;\n    let x_width = 0;\n    let last_line = null;\n    let last_note = null;\n    let prev_dotted_space = null;\n    let half_shiftY = 0;\n\n    for (let i = 0; i < dot_list.length; ++i) {\n      const {dot, note, note_id, line} = dot_list[i];\n\n      // Reset the position of the dot every line.\n      if (line !== last_line || note !== last_note) {\n        dot_shift = max_shift_map[note_id];\n      }\n\n      if (!note.isRest() && line !== last_line) {\n        if (Math.abs(line % 1) === 0.5) {\n          // note is on a space, so no dot shift\n          half_shiftY = 0;\n        } else {\n          // note is on a line, so shift dot to space above the line\n          half_shiftY = 0.5;\n          if (last_note != null &&\n            !last_note.isRest() && last_line - line === 0.5) {\n            // previous note on a space, so shift dot to space below the line\n            half_shiftY = -0.5;\n          } else if (line + half_shiftY === prev_dotted_space) {\n            // previous space is dotted, so shift dot to space below the line\n            half_shiftY = -0.5;\n          }\n        }\n      }\n\n      // convert half_shiftY to a multiplier for dots.draw()\n      if (note.isRest()) {\n        dot.dot_shiftY += -half_shiftY;\n      } else {\n        dot.dot_shiftY = -half_shiftY;\n      }\n      prev_dotted_space = line + half_shiftY;\n\n      dot.setXShift(dot_shift);\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\n      x_width = (dot_shift > x_width) ? dot_shift : x_width;\n      last_line = line;\n      last_note = note;\n    }\n\n    // Update state.\n    state.right_shift += x_width;\n    return true;\n  }\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.setAttribute('type', 'Dot');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.RIGHT;\n\n    this.radius = 2;\n    this.setWidth(5);\n    this.dot_shiftY = 0;\n  }\n\n  getCategory(): string {\n    return Dot.CATEGORY;\n  }\n\n  setNote(note: Note): this {\n    this.note = note;\n\n    if (this.note.getCategory() === 'gracenotes') {\n      this.radius *= 0.50;\n      this.setWidth(3);\n    }\n\n    return this;\n  }\n\n  setDotShiftY(y: number): this {\n    this.dot_shiftY = y;\n    return this;\n  }\n\n  draw(): void {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.note || this.index === null) {\n      throw new RuntimeError('NoAttachedNote', \"Can't draw dot without a note and index.\");\n    }\n\n    const lineSpace = this.note.stave.options.spacing_between_lines_px;\n\n    const start = this.note.getModifierStartXY(this.position, this.index, {forceFlagRight: true});\n\n    // Set the starting y coordinate to the base of the stem for TabNotes\n    if (this.note.getCategory() === 'tabnotes') {\n      start.y = (this.note as StemmableNote).getStemExtents().baseY;\n    }\n\n    const x = (start.x + this.x_shift) + this.width - this.radius;\n    const y = start.y + this.y_shift + (this.dot_shiftY * lineSpace);\n    const ctx = this.context;\n\n    ctx.beginPath();\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n    ctx.fill();\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\n\nimport {Modifier} from './modifier';\nimport {StaveNote} from \"./stavenote\";\nimport {Builder} from \"./easyscore\";\nimport {IFont} from \"./types/font\";\nimport {RuntimeError} from \"./runtimeerror\";\n\n/**\n * @constructor\n */\nexport class FretHandFinger extends Modifier {\n  private finger: any;\n  private x_offset: number;\n  private y_offset: number;\n  private font: IFont;\n\n  static get CATEGORY(): string {\n    return 'frethandfinger';\n  }\n\n  // Arrange fingerings inside a ModifierContext.\n  static format(nums: FretHandFinger[], state: any): boolean {\n    const {left_shift, right_shift} = state;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return false;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shiftLeft = 0;\n    let shiftRight = 0;\n\n    for (let i = 0; i < nums.length; ++i) {\n      const num = nums[i];\n      const note = num.getNote() as StaveNote;\n      const pos = num.getPosition();\n      const props = note.getKeyProps()[num.getIndex()];\n      if (note !== prev_note) {\n        for (let n = 0; n < note.keys.length; ++n) {\n          if (left_shift === 0) {\n            shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n          }\n          if (right_shift === 0) {\n            shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n          }\n        }\n        prev_note = note;\n      }\n\n      nums_list.push({\n        note,\n        num,\n        pos,\n        line: props.line,\n        shiftL: shiftLeft,\n        shiftR: shiftRight,\n      });\n    }\n\n    // Sort fingernumbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    let numShiftL = 0;\n    let numShiftR = 0;\n    let xWidthL = 0;\n    let xWidthR = 0;\n    let lastLine = null;\n    let lastNote = null;\n\n    for (let i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      const {note, pos, num, line, shiftL, shiftR} = nums_list[i];\n\n      // Reset the position of the string number every line.\n      if (line !== lastLine || note !== lastNote) {\n        numShiftL = left_shift + shiftL;\n        numShiftR = right_shift + shiftR;\n      }\n\n      const numWidth = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift + numShiftL);\n        num_shift = left_shift + numWidth; // spacing\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(numShiftR);\n        num_shift = shiftRight + numWidth; // spacing\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n      }\n      lastLine = line;\n      lastNote = note;\n    }\n\n    state.left_shift += xWidthL;\n    state.right_shift += xWidthR;\n\n    return true;\n  }\n\n  static easyScoreHook({fingerings}: any, note: StaveNote, builder: Builder): void {\n    if (!fingerings) return;\n\n    fingerings.split(',')\n      .map((fingeringString: any) => fingeringString.trim().split('.'))\n      .map(([number, position]: any) => {\n        const params = {number} as any;\n        if (position) params.position = position;\n        return builder.getFactory().Fingering(params);\n      })\n      .map((fingering: Modifier, index: number) => note.addModifier(index, fingering));\n  }\n\n  constructor(number: string) {\n    super();\n    this.setAttribute('type', 'FretHandFinger');\n\n    this.note = null;\n    this.index = null;\n    this.finger = number;\n    this.width = 7;\n    this.position = Modifier.Position.LEFT;  // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0;       // Horizontal offset from default\n    this.y_offset = 0;       // Vertical offset from default\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    } as IFont;\n  }\n\n  getCategory(): string {\n    return FretHandFinger.CATEGORY;\n  }\n\n  setFretHandFinger(number: string): this {\n    this.finger = number;\n    return this;\n  }\n\n  setOffsetX(x: number): this {\n    this.x_offset = x;\n    return this;\n  }\n\n  setOffsetY(y: number): this {\n    this.y_offset = y;\n    return this;\n  }\n\n  draw(): void {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new RuntimeError('NoAttachedNote', \"Can't draw string number without a note and index.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let dot_x = start.x + this.x_shift + this.x_offset;\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n        dot_x -= 4;\n        dot_y -= 12;\n        break;\n      case Modifier.Position.BELOW:\n        dot_x -= 2;\n        dot_y += 10;\n        break;\n      case Modifier.Position.LEFT:\n        dot_x -= this.width;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += 1;\n        break;\n      default:\n        throw new RuntimeError('InvalidPostion', `The position ${this.position} does not exist`);\n    }\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    ctx.fillText('' + this.finger, dot_x, dot_y);\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport {Element} from './element';\nimport {Note} from \"./note\";\nimport {StaveNote} from \"./stavenote\";\nimport {INotesStruct} from \"./types/note\";\nimport {IFont} from \"./types/font\";\nimport {IStaveTieRenderOptions, IStaveTieRenderTieParams} from \"./types/stavetie\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class StaveTie extends Element {\n  render_options: IStaveTieRenderOptions;\n\n  private readonly text: string;\n\n  private font: IFont;\n  protected first_indices: number[];\n  protected last_indices: number[];\n  private notes: INotesStruct;\n  private direction: number;\n  protected first_note: Note;\n  protected last_note: Note;\n\n  constructor(notes: INotesStruct, text?: string) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.context = null;\n    this.text = text;\n    this.direction = null;\n\n    this.render_options = {\n      cp1: 8,      // Curve control point 1\n      cp2: 12,      // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: {family: 'Arial', size: 10, style: ''} as IFont,\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font: IFont): this {\n    this.font = font;\n    return this;\n  }\n\n  setDirection(direction: number): this {\n    this.direction = direction;\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes: INotesStruct): this {\n    if (!notes.first_note && !notes.last_note) {\n      throw new RuntimeError(\n        'BadArguments', 'Tie needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial(): boolean {\n    return (!this.first_note || !this.last_note);\n  }\n\n  renderTie(params: IStaveTieRenderTieParams): void {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new RuntimeError('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2;\n      cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const cp_x = ((params.last_x_px + last_x_shift) +\n        (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n      const bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px: number, last_x_px: number): void {\n    if (!this.text) return;\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= this.context.measureText(this.text).width / 2;\n\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.style);\n    this.context.fillText(\n      this.text,\n      center_x + this.render_options.text_shift_x,\n      (this.first_note || this.last_note).getStave().getYForTopText() - 1\n    );\n    this.context.restore();\n  }\n\n  draw(): boolean {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction;\n    if (first_note) {\n      first_x_px = (first_note as StaveNote).getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = (first_note as StaveNote).getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = (last_note as StaveNote).getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = (last_note as StaveNote).getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n//\n// ## Description\n//\n// This file implements articulations and accents as modifiers that can be\n// attached to notes. The complete list of articulations is available in\n// `tables.js` under `Vex.Flow.articulationCodes`.\n//\n// See `tests/articulation_tests.js` for usage examples.\nimport {Modifier} from './modifier';\nimport {Glyph} from './glyph';\nimport {Stem} from './stem';\nimport {StaveNote} from \"./stavenote\";\nimport {Note} from \"./note\";\nimport {Builder} from \"./easyscore\";\nimport {\n  IArticulation,\n  IArticulationRenderOptions,\n  IArticulationState,\n  IStringArticulation\n} from \"./types/articulation\";\nimport {IFactoryParams} from \"./types/factory\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {articulationCodes, LOG} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (Articulation.DEBUG) LOG('Vex.Flow.Articulation', args);\n}\n\nconst {ABOVE, BELOW} = Modifier.Position;\n\nconst roundToNearestHalf = (mathFn: (a: number) => number, value: number) => mathFn(value / 0.5) * 0.5;\n\n// This includes both staff and ledger lines\nconst isWithinLines = (line: number, position: number) => position === ABOVE ? line <= 5 : line >= 1;\n\nconst getRoundingFunction = (line: number, position: number) => {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n};\n\nconst snapLineToStaff = (canSitBetweenLines: boolean, line: number, position: number, offsetDirection: number) => {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + (HALF_STAFF_SPACE * -offsetDirection);\n  } else {\n    return snappedLine;\n  }\n};\n\nconst isStaveNote = (note: Note) => {\n  const noteCategory = note.getCategory();\n  return noteCategory === 'stavenotes' || noteCategory === 'gracenotes';\n};\n\nconst getTopY = (note: StaveNote, textLine: number) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const {topY: stemTipY, baseY: stemBaseY} = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stave.getYForTopText(textLine);\n      }\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  } else {\n    throw new RuntimeError(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\nconst getBottomY = (note: StaveNote, textLine: number) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const {topY: stemTipY, baseY: stemBaseY} = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stave.getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  } else {\n    throw new RuntimeError(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\n// Gets the initial offset of the articulation from the y value of the starting position.\n// This is required because the top/bottom text positions already have spacing applied to\n// provide a \"visually pleasent\" default position. However the y values provided from\n// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n// normalizes this asymmetry.\nconst getInitialOffset = (note: StaveNote, position: number) => {\n  const isOnStemTip = (\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN)\n  );\n\n  if (isStaveNote(note)) {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n};\n\nexport class Articulation extends Modifier {\n  note: StaveNote;\n\n  private readonly type: string;\n\n  private render_options: IArticulationRenderOptions;\n  private articulation: IArticulation;\n  private glyph: Glyph;\n  static DEBUG: boolean;\n\n  static get CATEGORY(): string {\n    return 'articulations';\n  }\n\n  static get INITIAL_OFFSET(): number {\n    return -0.5;\n  }\n\n  // FIXME:\n  // Most of the complex formatting logic (ie: snapping to space) is\n  // actually done in .render(). But that logic belongs in this method.\n  //\n  // Unfortunately, this isn't possible because, by this point, stem lengths\n  // have not yet been finalized. Finalized stem lengths are required to determine the\n  // initial position of any stem-side articulation.\n  //\n  // This indicates that all objects should have their stave set before being\n  // formatted. It can't be an optional if you want accurate vertical positioning.\n  // Consistently positioned articulations that play nice with other modifiers\n  // won't be possible until we stop relying on render-time formatting.\n  //\n  // Ideally, when this function has completed, the vertical articulation positions\n  // should be ready to render without further adjustment. But the current state\n  // is far from this ideal.\n  static format(articulations: Articulation[], state: IArticulationState): boolean {\n    if (!articulations || articulations.length === 0) return false;\n\n    const isAbove = (artic: Articulation) => artic.getPosition() === ABOVE;\n    const isBelow = (artic: Articulation) => artic.getPosition() === BELOW;\n    const margin = 0.5;\n    const getIncrement = (articulation: Articulation, line: number, position: number) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        (articulation.glyph.getMetrics().height / 10) + margin\n      );\n\n    articulations\n      .filter(isAbove)\n      .forEach(articulation => {\n        articulation.setTextLine(state.top_text_line);\n        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n      });\n\n    articulations\n      .filter(isBelow)\n      .forEach(articulation => {\n        articulation.setTextLine(state.text_line);\n        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n      });\n\n    const width = articulations\n      .map(articulation => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  static easyScoreHook({articulations}: IStringArticulation, note: StaveNote, builder: Builder): void {\n    if (!articulations) return;\n\n    const articNameToCode: Record<string, string> = {\n      staccato: 'a.',\n      tenuto: 'a-',\n      accent: 'a>'\n    };\n\n    articulations\n      .split(',')\n      .map(articString => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic = {type: articNameToCode[name]} as IFactoryParams;\n        if (position) artic.position = Modifier.PositionString[position] as any;\n        return builder.getFactory().Articulation(artic);\n      })\n      .map((artic: Modifier) => note.addModifier(0, artic));\n  }\n\n  // Create a new articulation of type `type`, which is an entry in\n  // `Vex.Flow.articulationCodes` in `tables.js`.\n  constructor(type: string) {\n    super();\n    this.setAttribute('type', 'Articulation');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = BELOW;\n    this.render_options = {\n      font_scale: 38,\n    };\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.articulation = articulationCodes(this.type);\n    if (!this.articulation) {\n      throw new RuntimeError('ArgumentError', `Articulation not found: ${this.type}`);\n    }\n\n    const code = (this.position === ABOVE ? this.articulation.aboveCode : this.articulation.belowCode) || this.articulation.code;\n    this.glyph = new Glyph(code, this.render_options.font_scale);\n\n    this.setWidth(this.glyph.getMetrics().width);\n  }\n\n  getCategory(): string {\n    return Articulation.CATEGORY;\n  }\n\n  // Render articulation in position next to note.\n  draw(): void {\n    const {\n      note, index, position, glyph,\n      articulation: {between_lines: canSitBetweenLines},\n      text_line: textLine,\n      context: ctx,\n    } = this;\n\n    this.checkContext();\n\n    if (!note || index == null) {\n      throw new RuntimeError('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const stave = note.getStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = note.getCategory() === 'tabnotes';\n\n    // Articulations are centered over/under the note head.\n    const {x} = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    const padding = this.musicFont.lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n\n    let y = ({\n      [ABOVE]: () => {\n        glyph.setOrigin(0.5, 1);\n        const y = getTopY(note, textLine) - ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n      [BELOW]: () => {\n        glyph.setOrigin(0.5, 0);\n        const y = getBottomY(note, textLine) + ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n    } as Record<number, () => number>)[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + noteLine;\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + (padding * offsetDirection);\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\nimport {Glyph} from './glyph';\nimport {StaveModifier} from './stavemodifier';\nimport {IGlyphMetrics} from \"./types/glyph\";\nimport {ITimeSignature, ITimeSignatureGlyph} from \"./types/timesignature\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nconst assertIsValidFraction = (timeSpec: string) => {\n  const numbers = timeSpec.split('/').filter(number => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new RuntimeError(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach(number => {\n    if (isNaN(Number(number))) {\n      throw new RuntimeError(\n        'BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`\n      );\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  point: number;\n  bottomLine: number;\n  timeSig: ITimeSignature;\n\n  private readonly validate_args: boolean;\n\n  private topLine: number;\n\n  static get CATEGORY(): string {\n    return 'timesignatures';\n  }\n\n  static get glyphs(): Record<string, ITimeSignatureGlyph> {\n    return {\n      'C': {\n        code: 'timeSigCommon',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'timeSigCutCommon',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec: string = null, customPadding = 15, validate_args = true) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n    this.validate_args = validate_args;\n\n    if (timeSpec === null) return;\n\n    const padding = customPadding;\n\n    this.point = this.musicFont.lookupMetric('digits.point');\n    const fontLineShift = this.musicFont.lookupMetric('digits.shiftLine', 0);\n    this.topLine = 2 + fontLineShift;\n    this.bottomLine = 4 + fontLineShift;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n    this.setPadding(padding);\n  }\n\n  getCategory(): string {\n    return TimeSignature.CATEGORY;\n  }\n\n  parseTimeSpec(timeSpec: string): ITimeSignature {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const {line, code, point} = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      } as ITimeSignature;\n    }\n\n    if (this.validate_args) {\n      assertIsValidFraction(timeSpec);\n    }\n\n    const [topDigits, botDigits] = timeSpec\n      .split('/')\n      .map(number => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    } as ITimeSignature;\n  }\n\n  makeTimeSignatureGlyph(topDigits: string[], botDigits: string[]): Glyph {\n    const glyph = new Glyph('timeSig0', this.point);\n    glyph.topGlyphs = [];\n    glyph.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('timeSig' + num, this.point);\n\n      glyph.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('timeSig' + num, this.point);\n\n      glyph.botGlyphs.push(botGlyph);\n      botWidth += botGlyph.getMetrics().width;\n    }\n\n    const width = topWidth > botWidth ? topWidth : botWidth;\n    const xMin = glyph.getMetrics().x_min;\n\n    glyph.getMetrics = () => ({\n      x_min: xMin,\n      x_max: xMin + width,\n      width,\n    } as IGlyphMetrics);\n\n    const topStartX = (width - topWidth) / 2.0;\n    const botStartX = (width - botWidth) / 2.0;\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    glyph.renderToStave = function renderToStave(x) {\n      let start_x = x + topStartX;\n      for (let i = 0; i < this.topGlyphs.length; ++i) {\n        const glyph = this.topGlyphs[i];\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.topLine)\n        );\n        start_x += glyph.getMetrics().width;\n      }\n\n      start_x = x + botStartX;\n      for (let i = 0; i < this.botGlyphs.length; ++i) {\n        const glyph = this.botGlyphs[i];\n        that.placeGlyphOnLine(glyph, this.stave, glyph.line);\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.bottomLine)\n        );\n        start_x += glyph.getMetrics().width;\n      }\n    };\n\n    return glyph;\n  }\n\n  getTimeSig(): ITimeSignature {\n    return this.timeSig;\n  }\n\n  setTimeSig(timeSpec: string): this {\n    this.timeSig = this.parseTimeSpec(timeSpec) as ITimeSignature;\n    return this;\n  }\n\n  draw(): void {\n    if (!this.x) {\n      throw new RuntimeError('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new RuntimeError('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setContext(this.stave.context);\n    this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n    this.timeSig.glyph.renderToStave(this.x);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport {Glyph} from './glyph';\nimport {\n  ICodeValue, IDurationCode, IKeySpec, IType\n} from './types/common';\nimport {IClefPropertyValue} from \"./types/clef\";\nimport {INoteValue} from \"./types/note\";\nimport {IArticulation} from \"./types/articulation\";\nimport {IAccidental} from \"./types/accidental\";\nimport {DEFAULT_NOTATION_FONT_SCALE, RESOLUTION, SLASH_NOTEHEAD_WIDTH, STEM_HEIGHT} from \"./flow\";\n\nexport const UNICODE = {\n  // Unicode accidentals\n  'sharp': String.fromCharCode(parseInt('266F', 16)),\n  'flat': String.fromCharCode(parseInt('266D', 16)),\n  'natural': String.fromCharCode(parseInt('266E', 16)),\n  // Major Chord\n  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n  // half-diminished\n  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n  // Diminished\n  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n  'circle': String.fromCharCode(parseInt('25CB', 16)),\n};\nexport const ACCIDENTALS: Record<string, IAccidental> = {\n  '#': {code: 'accidentalSharp', parenRightPaddingAdjustment: -1},\n  '##': {code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1},\n  'b': {code: 'accidentalFlat', parenRightPaddingAdjustment: -2},\n  'bb': {code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2},\n  'n': {code: 'accidentalNatural', parenRightPaddingAdjustment: -1},\n  '{': {code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1},\n  '}': {code: 'accidentalParensRight', parenRightPaddingAdjustment: -1},\n  'db': {code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1},\n  'd': {code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0},\n  '++': {code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1},\n  '+': {code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1},\n  '+-': {code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1},\n  'bs': {code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1},\n  'bss': {code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1},\n  'o': {code: 'accidentalSori', parenRightPaddingAdjustment: -1},\n  'k': {code: 'accidentalKoron', parenRightPaddingAdjustment: -1},\n  'bbs': {code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1},\n  '++-': {code: 'vexAccidentalMicrotonal2', parenRightPaddingAdjustment: -1},\n  'ashs': {code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1},\n  'afhf': {code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1},\n  'accSagittal5v7KleismaUp': {code: 'accSagittal5v7KleismaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal5v7KleismaDown': {code: 'accSagittal5v7KleismaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal5CommaUp': {code: 'accSagittal5CommaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal5CommaDown': {code: 'accSagittal5CommaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal7CommaUp': {code: 'accSagittal7CommaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal7CommaDown': {code: 'accSagittal7CommaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal25SmallDiesisUp': {code: 'accSagittal25SmallDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal25SmallDiesisDown': {code: 'accSagittal25SmallDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal35MediumDiesisUp': {code: 'accSagittal35MediumDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal35MediumDiesisDown': {code: 'accSagittal35MediumDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal11MediumDiesisUp': {code: 'accSagittal11MediumDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal11MediumDiesisDown': {code: 'accSagittal11MediumDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal11LargeDiesisUp': {code: 'accSagittal11LargeDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal11LargeDiesisDown': {code: 'accSagittal11LargeDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal35LargeDiesisUp': {code: 'accSagittal35LargeDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal35LargeDiesisDown': {code: 'accSagittal35LargeDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp25SDown': {code: 'accSagittalSharp25SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat25SUp': {code: 'accSagittalFlat25SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp7CDown': {code: 'accSagittalSharp7CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat7CUp': {code: 'accSagittalFlat7CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5CDown': {code: 'accSagittalSharp5CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5CUp': {code: 'accSagittalFlat5CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5v7kDown': {code: 'accSagittalSharp5v7kDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5v7kUp': {code: 'accSagittalFlat5v7kUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp': {code: 'accSagittalSharp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat': {code: 'accSagittalFlat', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5v7kUp': {code: 'accSagittalSharp5v7kUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5v7kDown': {code: 'accSagittalFlat5v7kDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5CUp': {code: 'accSagittalSharp5CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5CDown': {code: 'accSagittalFlat5CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp7CUp': {code: 'accSagittalSharp7CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat7CDown': {code: 'accSagittalFlat7CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp25SUp': {code: 'accSagittalSharp25SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat25SDown': {code: 'accSagittalFlat25SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp35MUp': {code: 'accSagittalSharp35MUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat35MDown': {code: 'accSagittalFlat35MDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp11MUp': {code: 'accSagittalSharp11MUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat11MDown': {code: 'accSagittalFlat11MDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp11LUp': {code: 'accSagittalSharp11LUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat11LDown': {code: 'accSagittalFlat11LDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp35LUp': {code: 'accSagittalSharp35LUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat35LDown': {code: 'accSagittalFlat35LDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp25SDown': {code: 'accSagittalDoubleSharp25SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat25SUp': {code: 'accSagittalDoubleFlat25SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp7CDown': {code: 'accSagittalDoubleSharp7CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat7CUp': {code: 'accSagittalDoubleFlat7CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp5CDown': {code: 'accSagittalDoubleSharp5CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat5CUp': {code: 'accSagittalDoubleFlat5CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp5v7kDown': {code: 'accSagittalDoubleSharp5v7kDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat5v7kUp': {code: 'accSagittalDoubleFlat5v7kUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp': {code: 'accSagittalDoubleSharp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat': {code: 'accSagittalDoubleFlat', parenRightPaddingAdjustment: -1},\n  'accSagittal7v11KleismaUp': {code: 'accSagittal7v11KleismaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal7v11KleismaDown': {code: 'accSagittal7v11KleismaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal17CommaUp': {code: 'accSagittal17CommaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal17CommaDown': {code: 'accSagittal17CommaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal55CommaUp': {code: 'accSagittal55CommaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal55CommaDown': {code: 'accSagittal55CommaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal7v11CommaUp': {code: 'accSagittal7v11CommaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal7v11CommaDown': {code: 'accSagittal7v11CommaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal5v11SmallDiesisUp': {code: 'accSagittal5v11SmallDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal5v11SmallDiesisDown': {code: 'accSagittal5v11SmallDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5v11SDown': {code: 'accSagittalSharp5v11SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5v11SUp': {code: 'accSagittalFlat5v11SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp7v11CDown': {code: 'accSagittalSharp7v11CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat7v11CUp': {code: 'accSagittalFlat7v11CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp55CDown': {code: 'accSagittalSharp55CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat55CUp': {code: 'accSagittalFlat55CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp17CDown': {code: 'accSagittalSharp17CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat17CUp': {code: 'accSagittalFlat17CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp7v11kDown': {code: 'accSagittalSharp7v11kDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat7v11kUp': {code: 'accSagittalFlat7v11kUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp7v11kUp': {code: 'accSagittalSharp7v11kUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat7v11kDown': {code: 'accSagittalFlat7v11kDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp17CUp': {code: 'accSagittalSharp17CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat17CDown': {code: 'accSagittalFlat17CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp55CUp': {code: 'accSagittalSharp55CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat55CDown': {code: 'accSagittalFlat55CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp7v11CUp': {code: 'accSagittalSharp7v11CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat7v11CDown': {code: 'accSagittalFlat7v11CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5v11SUp': {code: 'accSagittalSharp5v11SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5v11SDown': {code: 'accSagittalFlat5v11SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp5v11SDown': {code: 'accSagittalDoubleSharp5v11SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat5v11SUp': {code: 'accSagittalDoubleFlat5v11SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp7v11CDown': {code: 'accSagittalDoubleSharp7v11CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat7v11CUp': {code: 'accSagittalDoubleFlat7v11CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp55CDown': {code: 'accSagittalDoubleSharp55CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat55CUp': {code: 'accSagittalDoubleFlat55CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp17CDown': {code: 'accSagittalDoubleSharp17CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat17CUp': {code: 'accSagittalDoubleFlat17CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp7v11kDown': {code: 'accSagittalDoubleSharp7v11kDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat7v11kUp': {code: 'accSagittalDoubleFlat7v11kUp', parenRightPaddingAdjustment: -1},\n  'accSagittal23CommaUp': {code: 'accSagittal23CommaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal23CommaDown': {code: 'accSagittal23CommaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal5v19CommaUp': {code: 'accSagittal5v19CommaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal5v19CommaDown': {code: 'accSagittal5v19CommaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal5v23SmallDiesisUp': {code: 'accSagittal5v23SmallDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal5v23SmallDiesisDown': {code: 'accSagittal5v23SmallDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5v23SDown': {code: 'accSagittalSharp5v23SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5v23SUp': {code: 'accSagittalFlat5v23SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5v19CDown': {code: 'accSagittalSharp5v19CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5v19CUp': {code: 'accSagittalFlat5v19CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp23CDown': {code: 'accSagittalSharp23CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat23CUp': {code: 'accSagittalFlat23CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp23CUp': {code: 'accSagittalSharp23CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat23CDown': {code: 'accSagittalFlat23CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5v19CUp': {code: 'accSagittalSharp5v19CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5v19CDown': {code: 'accSagittalFlat5v19CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5v23SUp': {code: 'accSagittalSharp5v23SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5v23SDown': {code: 'accSagittalFlat5v23SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp5v23SDown': {code: 'accSagittalDoubleSharp5v23SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat5v23SUp': {code: 'accSagittalDoubleFlat5v23SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp5v19CDown': {code: 'accSagittalDoubleSharp5v19CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat5v19CUp': {code: 'accSagittalDoubleFlat5v19CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp23CDown': {code: 'accSagittalDoubleSharp23CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat23CUp': {code: 'accSagittalDoubleFlat23CUp', parenRightPaddingAdjustment: -1},\n  'accSagittal19SchismaUp': {code: 'accSagittal19SchismaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal19SchismaDown': {code: 'accSagittal19SchismaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal17KleismaUp': {code: 'accSagittal17KleismaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal17KleismaDown': {code: 'accSagittal17KleismaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal143CommaUp': {code: 'accSagittal143CommaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal143CommaDown': {code: 'accSagittal143CommaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal11v49CommaUp': {code: 'accSagittal11v49CommaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal11v49CommaDown': {code: 'accSagittal11v49CommaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal19CommaUp': {code: 'accSagittal19CommaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal19CommaDown': {code: 'accSagittal19CommaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal7v19CommaUp': {code: 'accSagittal7v19CommaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal7v19CommaDown': {code: 'accSagittal7v19CommaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal49SmallDiesisUp': {code: 'accSagittal49SmallDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal49SmallDiesisDown': {code: 'accSagittal49SmallDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal23SmallDiesisUp': {code: 'accSagittal23SmallDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal23SmallDiesisDown': {code: 'accSagittal23SmallDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal5v13MediumDiesisUp': {code: 'accSagittal5v13MediumDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal5v13MediumDiesisDown': {code: 'accSagittal5v13MediumDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal11v19MediumDiesisUp': {code: 'accSagittal11v19MediumDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal11v19MediumDiesisDown': {code: 'accSagittal11v19MediumDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal49MediumDiesisUp': {code: 'accSagittal49MediumDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal49MediumDiesisDown': {code: 'accSagittal49MediumDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal5v49MediumDiesisUp': {code: 'accSagittal5v49MediumDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal5v49MediumDiesisDown': {code: 'accSagittal5v49MediumDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal49LargeDiesisUp': {code: 'accSagittal49LargeDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal49LargeDiesisDown': {code: 'accSagittal49LargeDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal11v19LargeDiesisUp': {code: 'accSagittal11v19LargeDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal11v19LargeDiesisDown': {code: 'accSagittal11v19LargeDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittal5v13LargeDiesisUp': {code: 'accSagittal5v13LargeDiesisUp', parenRightPaddingAdjustment: -1},\n  'accSagittal5v13LargeDiesisDown': {code: 'accSagittal5v13LargeDiesisDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp23SDown': {code: 'accSagittalSharp23SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat23SUp': {code: 'accSagittalFlat23SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp49SDown': {code: 'accSagittalSharp49SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat49SUp': {code: 'accSagittalFlat49SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp7v19CDown': {code: 'accSagittalSharp7v19CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat7v19CUp': {code: 'accSagittalFlat7v19CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp19CDown': {code: 'accSagittalSharp19CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat19CUp': {code: 'accSagittalFlat19CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp11v49CDown': {code: 'accSagittalSharp11v49CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat11v49CUp': {code: 'accSagittalFlat11v49CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp143CDown': {code: 'accSagittalSharp143CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat143CUp': {code: 'accSagittalFlat143CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp17kDown': {code: 'accSagittalSharp17kDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat17kUp': {code: 'accSagittalFlat17kUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp19sDown': {code: 'accSagittalSharp19sDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat19sUp': {code: 'accSagittalFlat19sUp', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp19sUp': {code: 'accSagittalSharp19sUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat19sDown': {code: 'accSagittalFlat19sDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp17kUp': {code: 'accSagittalSharp17kUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat17kDown': {code: 'accSagittalFlat17kDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp143CUp': {code: 'accSagittalSharp143CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat143CDown': {code: 'accSagittalFlat143CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp11v49CUp': {code: 'accSagittalSharp11v49CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat11v49CDown': {code: 'accSagittalFlat11v49CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp19CUp': {code: 'accSagittalSharp19CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat19CDown': {code: 'accSagittalFlat19CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp7v19CUp': {code: 'accSagittalSharp7v19CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat7v19CDown': {code: 'accSagittalFlat7v19CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp49SUp': {code: 'accSagittalSharp49SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat49SDown': {code: 'accSagittalFlat49SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp23SUp': {code: 'accSagittalSharp23SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat23SDown': {code: 'accSagittalFlat23SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5v13MUp': {code: 'accSagittalSharp5v13MUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5v13MDown': {code: 'accSagittalFlat5v13MDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp11v19MUp': {code: 'accSagittalSharp11v19MUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat11v19MDown': {code: 'accSagittalFlat11v19MDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp49MUp': {code: 'accSagittalSharp49MUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat49MDown': {code: 'accSagittalFlat49MDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5v49MUp': {code: 'accSagittalSharp5v49MUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5v49MDown': {code: 'accSagittalFlat5v49MDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp49LUp': {code: 'accSagittalSharp49LUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat49LDown': {code: 'accSagittalFlat49LDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp11v19LUp': {code: 'accSagittalSharp11v19LUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat11v19LDown': {code: 'accSagittalFlat11v19LDown', parenRightPaddingAdjustment: -1},\n  'accSagittalSharp5v13LUp': {code: 'accSagittalSharp5v13LUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFlat5v13LDown': {code: 'accSagittalFlat5v13LDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp23SDown': {code: 'accSagittalDoubleSharp23SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat23SUp': {code: 'accSagittalDoubleFlat23SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp49SDown': {code: 'accSagittalDoubleSharp49SDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat49SUp': {code: 'accSagittalDoubleFlat49SUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp7v19CDown': {code: 'accSagittalDoubleSharp7v19CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat7v19CUp': {code: 'accSagittalDoubleFlat7v19CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp19CDown': {code: 'accSagittalDoubleSharp19CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat19CUp': {code: 'accSagittalDoubleFlat19CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp11v49CDown': {code: 'accSagittalDoubleSharp11v49CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat11v49CUp': {code: 'accSagittalDoubleFlat11v49CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp143CDown': {code: 'accSagittalDoubleSharp143CDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat143CUp': {code: 'accSagittalDoubleFlat143CUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp17kDown': {code: 'accSagittalDoubleSharp17kDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat17kUp': {code: 'accSagittalDoubleFlat17kUp', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleSharp19sDown': {code: 'accSagittalDoubleSharp19sDown', parenRightPaddingAdjustment: -1},\n  'accSagittalDoubleFlat19sUp': {code: 'accSagittalDoubleFlat19sUp', parenRightPaddingAdjustment: -1},\n  'accSagittalShaftUp': {code: 'accSagittalShaftUp', parenRightPaddingAdjustment: -1},\n  'accSagittalShaftDown': {code: 'accSagittalShaftDown', parenRightPaddingAdjustment: -1},\n  'accSagittalAcute': {code: 'accSagittalAcute', parenRightPaddingAdjustment: -1},\n  'accSagittalGrave': {code: 'accSagittalGrave', parenRightPaddingAdjustment: -1},\n  'accSagittal1MinaUp': {code: 'accSagittal1MinaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal1MinaDown': {code: 'accSagittal1MinaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal2MinasUp': {code: 'accSagittal2MinasUp', parenRightPaddingAdjustment: -1},\n  'accSagittal2MinasDown': {code: 'accSagittal2MinasDown', parenRightPaddingAdjustment: -1},\n  'accSagittal1TinaUp': {code: 'accSagittal1TinaUp', parenRightPaddingAdjustment: -1},\n  'accSagittal1TinaDown': {code: 'accSagittal1TinaDown', parenRightPaddingAdjustment: -1},\n  'accSagittal2TinasUp': {code: 'accSagittal2TinasUp', parenRightPaddingAdjustment: -1},\n  'accSagittal2TinasDown': {code: 'accSagittal2TinasDown', parenRightPaddingAdjustment: -1},\n  'accSagittal3TinasUp': {code: 'accSagittal3TinasUp', parenRightPaddingAdjustment: -1},\n  'accSagittal3TinasDown': {code: 'accSagittal3TinasDown', parenRightPaddingAdjustment: -1},\n  'accSagittal4TinasUp': {code: 'accSagittal4TinasUp', parenRightPaddingAdjustment: -1},\n  'accSagittal4TinasDown': {code: 'accSagittal4TinasDown', parenRightPaddingAdjustment: -1},\n  'accSagittal5TinasUp': {code: 'accSagittal5TinasUp', parenRightPaddingAdjustment: -1},\n  'accSagittal5TinasDown': {code: 'accSagittal5TinasDown', parenRightPaddingAdjustment: -1},\n  'accSagittal6TinasUp': {code: 'accSagittal6TinasUp', parenRightPaddingAdjustment: -1},\n  'accSagittal6TinasDown': {code: 'accSagittal6TinasDown', parenRightPaddingAdjustment: -1},\n  'accSagittal7TinasUp': {code: 'accSagittal7TinasUp', parenRightPaddingAdjustment: -1},\n  'accSagittal7TinasDown': {code: 'accSagittal7TinasDown', parenRightPaddingAdjustment: -1},\n  'accSagittal8TinasUp': {code: 'accSagittal8TinasUp', parenRightPaddingAdjustment: -1},\n  'accSagittal8TinasDown': {code: 'accSagittal8TinasDown', parenRightPaddingAdjustment: -1},\n  'accSagittal9TinasUp': {code: 'accSagittal9TinasUp', parenRightPaddingAdjustment: -1},\n  'accSagittal9TinasDown': {code: 'accSagittal9TinasDown', parenRightPaddingAdjustment: -1},\n  'accSagittalFractionalTinaUp': {code: 'accSagittalFractionalTinaUp', parenRightPaddingAdjustment: -1},\n  'accSagittalFractionalTinaDown': {code: 'accSagittalFractionalTinaDown', parenRightPaddingAdjustment: -1},\n  'accidentalNarrowReversedFlat': {code: 'accidentalNarrowReversedFlat', parenRightPaddingAdjustment: -1},\n  'accidentalNarrowReversedFlatAndFlat': {code: 'accidentalNarrowReversedFlatAndFlat', parenRightPaddingAdjustment: -1},\n  'accidentalWilsonPlus': {code: 'accidentalWilsonPlus', parenRightPaddingAdjustment: -1},\n  'accidentalWilsonMinus': {code: 'accidentalWilsonMinus', parenRightPaddingAdjustment: -1},\n};\nexport const CLEF_PROPERTIES_VALUES: Record<string, IClefPropertyValue> = {\n  'treble': {line_shift: 0},\n  'bass': {line_shift: 6},\n  'tenor': {line_shift: 4},\n  'alto': {line_shift: 3},\n  'soprano': {line_shift: 1},\n  'percussion': {line_shift: 0},\n  'mezzo-soprano': {line_shift: 2},\n  'baritone-c': {line_shift: 5},\n  'baritone-f': {line_shift: 5},\n  'subbass': {line_shift: 7},\n  'french': {line_shift: -1},\n};\nexport const ARTICULATIONS: Record<string, IArticulation> = {\n  'a.': {code: 'augmentationDot', between_lines: true} as IArticulation, // Staccato\n  'av': {\n    aboveCode: 'articStaccatissimoAbove',\n    belowCode: 'articStaccatissimoBelow',\n    between_lines: true\n  } as IArticulation, // Staccatissimo\n  'a>': {\n    aboveCode: 'articAccentAbove',\n    belowCode: 'articAccentBelow',\n    between_lines: true\n  } as IArticulation, // Accent\n  'a-': {\n    aboveCode: 'articTenutoAbove',\n    belowCode: 'articTenutoBelow',\n    between_lines: true\n  } as IArticulation, // Tenuto\n  'a^': {\n    aboveCode: 'articMarcatoAbove',\n    belowCode: 'articMarcatoBelow',\n    between_lines: false\n  } as IArticulation, // Marcato\n  'a+': {code: 'pluckedLeftHandPizzicato', between_lines: false} as IArticulation, // Left hand pizzicato\n  'ao': {\n    aboveCode: 'pluckedSnapPizzicatoAbove',\n    belowCode: 'pluckedSnapPizzicatoBelow',\n    between_lines: false\n  } as IArticulation, // Snap pizzicato\n  'ah': {code: 'stringsHarmonic', between_lines: false} as IArticulation, // Natural harmonic or open note\n  'a@': {aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false} as IArticulation, // Fermata\n  'a@a': {code: 'fermataAbove', between_lines: false} as IArticulation, // Fermata above staff\n  'a@u': {code: 'fermataBelow', between_lines: false} as IArticulation, // Fermata below staff\n  'a|': {code: 'stringsUpBow', between_lines: false} as IArticulation, // Bow up - up stroke\n  'am': {code: 'stringsDownBow', between_lines: false} as IArticulation, // Bow down - down stroke\n  'a,': {code: 'pictChokeCymbal', between_lines: false} as IArticulation, // Choked\n};\nexport const KEY_PROPERTIES_NOTE_VALUES: Record<string, INoteValue> = {\n  'C': {index: 0, int_val: 0, accidental: null} as INoteValue,\n  'CN': {index: 0, int_val: 0, accidental: 'n'} as INoteValue,\n  'C#': {index: 0, int_val: 1, accidental: '#'} as INoteValue,\n  'C##': {index: 0, int_val: 2, accidental: '##'} as INoteValue,\n  'CB': {index: 0, int_val: -1, accidental: 'b'} as INoteValue,\n  'CBB': {index: 0, int_val: -2, accidental: 'bb'} as INoteValue,\n  'D': {index: 1, int_val: 2, accidental: null} as INoteValue,\n  'DN': {index: 1, int_val: 2, accidental: 'n'} as INoteValue,\n  'D#': {index: 1, int_val: 3, accidental: '#'} as INoteValue,\n  'D##': {index: 1, int_val: 4, accidental: '##'} as INoteValue,\n  'DB': {index: 1, int_val: 1, accidental: 'b'} as INoteValue,\n  'DBB': {index: 1, int_val: 0, accidental: 'bb'} as INoteValue,\n  'E': {index: 2, int_val: 4, accidental: null} as INoteValue,\n  'EN': {index: 2, int_val: 4, accidental: 'n'} as INoteValue,\n  'E#': {index: 2, int_val: 5, accidental: '#'} as INoteValue,\n  'E##': {index: 2, int_val: 6, accidental: '##'} as INoteValue,\n  'EB': {index: 2, int_val: 3, accidental: 'b'} as INoteValue,\n  'EBB': {index: 2, int_val: 2, accidental: 'bb'} as INoteValue,\n  'F': {index: 3, int_val: 5, accidental: null} as INoteValue,\n  'FN': {index: 3, int_val: 5, accidental: 'n'} as INoteValue,\n  'F#': {index: 3, int_val: 6, accidental: '#'} as INoteValue,\n  'F##': {index: 3, int_val: 7, accidental: '##'} as INoteValue,\n  'FB': {index: 3, int_val: 4, accidental: 'b'} as INoteValue,\n  'FBB': {index: 3, int_val: 3, accidental: 'bb'} as INoteValue,\n  'G': {index: 4, int_val: 7, accidental: null} as INoteValue,\n  'GN': {index: 4, int_val: 7, accidental: 'n'} as INoteValue,\n  'G#': {index: 4, int_val: 8, accidental: '#'} as INoteValue,\n  'G##': {index: 4, int_val: 9, accidental: '##'} as INoteValue,\n  'GB': {index: 4, int_val: 6, accidental: 'b'} as INoteValue,\n  'GBB': {index: 4, int_val: 5, accidental: 'bb'} as INoteValue,\n  'A': {index: 5, int_val: 9, accidental: null} as INoteValue,\n  'AN': {index: 5, int_val: 9, accidental: 'n'} as INoteValue,\n  'A#': {index: 5, int_val: 10, accidental: '#'} as INoteValue,\n  'A##': {index: 5, int_val: 11, accidental: '##'} as INoteValue,\n  'AB': {index: 5, int_val: 8, accidental: 'b'} as INoteValue,\n  'ABB': {index: 5, int_val: 7, accidental: 'bb'} as INoteValue,\n  'B': {index: 6, int_val: 11, accidental: null} as INoteValue,\n  'BN': {index: 6, int_val: 11, accidental: 'n'} as INoteValue,\n  'B#': {index: 6, int_val: 12, accidental: '#'} as INoteValue,\n  'B##': {index: 6, int_val: 13, accidental: '##'} as INoteValue,\n  'BB': {index: 6, int_val: 10, accidental: 'b'} as INoteValue,\n  'BBB': {index: 6, int_val: 9, accidental: 'bb'} as INoteValue,\n  'R': {index: 6, int_val: 9, rest: true} as INoteValue, // Rest\n  'X': {\n    index: 6,\n    accidental: '',\n    octave: 4,\n    code: 'noteheadXBlack',\n    shift_right: 5.5,\n  } as INoteValue,\n};\nexport const INTEGER_TO_NOTE_TABLE: Record<number, string> = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B',\n};\nexport const ORNAMENTS: Record<string, ICodeValue> = {\n  'mordent': {code: 'ornamentShortTrill'},\n  'mordent_inverted': {code: 'ornamentMordent'},\n  'turn': {code: 'ornamentTurn'},\n  'turn_inverted': {code: 'ornamentTurnSlash'},\n  'tr': {code: 'ornamentTrill'},\n  'upprall': {code: 'ornamentPrecompSlideTrillDAnglebert'},\n  'downprall': {code: 'ornamentPrecompDoubleCadenceUpperPrefix'},\n  'prallup': {code: 'ornamentPrecompTrillSuffixDandrieu'},\n  'pralldown': {code: 'ornamentPrecompTrillLowerSuffix'},\n  'upmordent': {code: 'ornamentPrecompSlideTrillBach'},\n  'downmordent': {code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn'},\n  'lineprall': {code: 'ornamentPrecompAppoggTrill'},\n  'prallprall': {code: 'ornamentTremblement'},\n  'scoop': {code: 'brassScoop'},\n  'doit': {code: 'brassDoitMedium'},\n  'fall': {code: 'brassFallLipShort'},\n  'doitLong': {code: 'brassLiftMedium'},\n  'fallLong': {code: 'brassFallRoughMedium'},\n  'bend': {code: 'brassBend'},\n  'plungerClosed': {code: 'brassMuteClosed'},\n  'plungerOpen': {code: 'brassMuteOpen'},\n  'flip': {code: 'brassFlip'},\n  'jazzTurn': {code: 'brassJazzTurn'},\n  'smear': {code: 'brassSmear'}\n};\nexport const KEY_SPECS: Record<string, IKeySpec> = {\n  'C': {acc: null, num: 0},\n  'Am': {acc: null, num: 0},\n  'F': {acc: 'b', num: 1},\n  'Dm': {acc: 'b', num: 1},\n  'Bb': {acc: 'b', num: 2},\n  'Gm': {acc: 'b', num: 2},\n  'Eb': {acc: 'b', num: 3},\n  'Cm': {acc: 'b', num: 3},\n  'Ab': {acc: 'b', num: 4},\n  'Fm': {acc: 'b', num: 4},\n  'Db': {acc: 'b', num: 5},\n  'Bbm': {acc: 'b', num: 5},\n  'Gb': {acc: 'b', num: 6},\n  'Ebm': {acc: 'b', num: 6},\n  'Cb': {acc: 'b', num: 7},\n  'Abm': {acc: 'b', num: 7},\n  'G': {acc: '#', num: 1},\n  'Em': {acc: '#', num: 1},\n  'D': {acc: '#', num: 2},\n  'Bm': {acc: '#', num: 2},\n  'A': {acc: '#', num: 3},\n  'F#m': {acc: '#', num: 3},\n  'E': {acc: '#', num: 4},\n  'C#m': {acc: '#', num: 4},\n  'B': {acc: '#', num: 5},\n  'G#m': {acc: '#', num: 5},\n  'F#': {acc: '#', num: 6},\n  'D#m': {acc: '#', num: 6},\n  'C#': {acc: '#', num: 7},\n  'A#m': {acc: '#', num: 7},\n};\nexport const accidentalList = (acc: string) => {\n  const patterns = {\n    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n  } as Record<string, number[]>;\n\n  return patterns[acc];\n};\nexport const DURATION_ALIASES: Record<string, string> = {\n  'w': '1',\n  'h': '2',\n  'q': '4',\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  //\n  // TODO(0xfe): This needs to be cleaned up.\n  'b': '256',\n};\n\n// Custom note heads\nexport const CUSTOM_NOTEHEADS: Record<string, IType> = {\n  /* Diamond */\n  'D0': {code: 'noteheadDiamondWhole'} as IType,\n  'D1': {code: 'noteheadDiamondHalf'} as IType,\n  'D2': {code: 'noteheadDiamondBlack'} as IType,\n  'D3': {code: 'noteheadDiamondBlack'} as IType,\n\n  /* Triangle */\n  'T0': {code: 'noteheadTriangleUpWhole'} as IType,\n  'T1': {code: 'noteheadTriangleUpHalf'} as IType,\n  'T2': {code: 'noteheadTriangleUpBlack'} as IType,\n  'T3': {code: 'noteheadTriangleUpBlack'} as IType,\n\n  /* Cross */\n  'X0': {code: 'noteheadXWhole'} as IType,\n  'X1': {code: 'noteheadXHalf'} as IType,\n  'X2': {code: 'noteheadXBlack'} as IType,\n  'X3': {code: 'noteheadCircleX'} as IType,\n\n  /* Square */\n  'S1': {code: 'noteheadSquareWhite'} as IType,\n  'S2': {code: 'noteheadSquareBlack'} as IType,\n\n  /* Rectangle */\n  'R1': {code: 'vexNoteHeadRectWhite'} as IType, // no smufl code\n  'R2': {code: 'vexNoteHeadRectBlack'} as IType, // no smufl code\n};\n\nexport const GLYPH_PROPS_VALID_TYPES: Record<string, Record<string, string>> = {\n  'n': {name: 'note'},\n  'r': {name: 'rest'},\n  'h': {name: 'harmonic'},\n  'm': {name: 'muted'},\n  's': {name: 'slash'},\n};\n\nexport const DURATIONS: Record<string, number> = {\n  '1/2': RESOLUTION * 2,\n  '1': RESOLUTION,\n  '2': RESOLUTION / 2,\n  '4': RESOLUTION / 4,\n  '8': RESOLUTION / 8,\n  '16': RESOLUTION / 16,\n  '32': RESOLUTION / 32,\n  '64': RESOLUTION / 64,\n  '128': RESOLUTION / 128,\n  '256': RESOLUTION / 256,\n};\n\nexport const DURATION_CODES: Record<string, IDurationCode> = {\n  '1/2': {\n    common: {\n      getWidth(scale = DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v53', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -STEM_HEIGHT,\n      stem_down_extension: -STEM_HEIGHT,\n      tabnote_stem_up_extension: -STEM_HEIGHT,\n      tabnote_stem_down_extension: -STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    } as IType,\n    type: {\n      'n': { // Breve note\n        code_head: 'noteheadDoubleWhole',\n      } as IType,\n      'h': { // Breve note harmonic\n        code_head: 'unpitchedPercussionClef1',\n      } as IType,\n      'm': { // Breve note muted -\n        code_head: 'vexNoteHeadMutedBreve',\n        stem_offset: 0,\n      } as IType,\n      'r': { // Breve rest\n        code_head: 'restDoubleWhole',\n        rest: true,\n        position: 'B/5',\n        dot_shiftY: 0.5,\n      } as IType,\n      's': { // Breve note slash -\n        // Drawn with canvas primitives\n        getWidth: () => SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      } as IType,\n    },\n  },\n  '1': {\n    common: {\n      getWidth(scale = DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -STEM_HEIGHT,\n      stem_down_extension: -STEM_HEIGHT,\n      tabnote_stem_up_extension: -STEM_HEIGHT,\n      tabnote_stem_down_extension: -STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    } as IType,\n    type: {\n      'n': { // Whole note\n        code_head: 'noteheadWhole',\n      } as IType,\n      'h': { // Whole note harmonic\n        code_head: 'noteheadDiamondWhole',\n      } as IType,\n      'm': { // Whole note muted\n        code_head: 'noteheadXWhole',\n        stem_offset: -3,\n      } as IType,\n      'r': { // Whole rest\n        code_head: 'restWhole',\n        rest: true,\n        position: 'D/5',\n        dot_shiftY: 0.5,\n      } as IType,\n      's': { // Whole note slash\n        // Drawn with canvas primitives\n        getWidth: () => SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      } as IType,\n    },\n  },\n  '2': {\n    common: {\n      getWidth(scale = DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadHalf', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    } as IType,\n    type: {\n      'n': { // Half note\n        code_head: 'noteheadHalf',\n      } as IType,\n      'h': { // Half note harmonic\n        code_head: 'noteheadDiamondHalf',\n      } as IType,\n      'm': { // Half note muted\n        code_head: 'noteheadXHalf',\n        stem_offset: -3,\n      } as IType,\n      'r': { // Half rest\n        code_head: 'restHalf',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n      } as IType,\n      's': { // Half note slash\n        // Drawn with canvas primitives\n        getWidth: () => SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      } as IType,\n    },\n  },\n  '4': {\n    common: {\n      getWidth(scale = DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    } as IType,\n    type: {\n      'n': { // Quarter note\n        code_head: 'noteheadBlack',\n      } as IType,\n      'h': { // Quarter harmonic\n        code_head: 'noteheadDiamondBlack',\n      } as IType,\n      'm': { // Quarter muted\n        code_head: 'noteheadXBlack',\n      } as IType,\n      'r': { // Quarter rest\n        code_head: 'restQuarter',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5,\n      } as IType,\n      's': { // Quarter slash\n        // Drawn with canvas primitives\n        getWidth: () => SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      } as IType,\n    },\n  },\n  '8': {\n    common: {\n      getWidth(scale = DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      beam_count: 1,\n      code_flag_upstem: 'flag8thUp',\n      code_flag_downstem: 'flag8thDown',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    } as IType,\n    type: {\n      'n': { // Eighth note\n        code_head: 'noteheadBlack',\n      } as IType,\n      'h': { // Eighth note harmonic\n        code_head: 'noteheadDiamondBlack',\n      } as IType,\n      'm': { // Eighth note muted\n        code_head: 'noteheadXBlack',\n      } as IType,\n      'r': { // Eighth rest\n        code_head: 'rest8th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0,\n      } as IType,\n      's': { // Eight slash\n        // Drawn with canvas primitives\n        getWidth: () => SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      } as IType,\n    },\n  },\n  '16': {\n    common: {\n      beam_count: 2,\n      getWidth(scale = DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'flag16thUp',\n      code_flag_downstem: 'flag16thDown',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    } as IType,\n    type: {\n      'n': { // Sixteenth note\n        code_head: 'noteheadBlack',\n      } as IType,\n      'h': { // Sixteenth note harmonic\n        code_head: 'noteheadDiamondBlack',\n      } as IType,\n      'm': { // Sixteenth note muted\n        code_head: 'noteheadXBlack',\n      } as IType,\n      'r': { // Sixteenth rest\n        code_head: 'rest16th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0,\n      } as IType,\n      's': { // Sixteenth slash\n        // Drawn with canvas primitives\n        getWidth: () => SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      } as IType,\n    },\n  },\n  '32': {\n    common: {\n      beam_count: 3,\n      getWidth(scale = DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'flag32ndUp',\n      code_flag_downstem: 'flag32ndDown',\n      stem_up_extension: 9,\n      stem_down_extension: 9,\n      tabnote_stem_up_extension: 8,\n      tabnote_stem_down_extension: 5,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    } as IType,\n    type: {\n      'n': { // Thirty-second note\n        code_head: 'noteheadBlack',\n      } as IType,\n      'h': { // Thirty-second harmonic\n        code_head: 'noteheadDiamondBlack',\n      } as IType,\n      'm': { // Thirty-second muted\n        code_head: 'noteheadXBlack',\n      } as IType,\n      'r': { // Thirty-second rest\n        code_head: 'rest32nd',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0,\n      } as IType,\n      's': { // Thirty-second slash\n        // Drawn with canvas primitives\n        getWidth: () => SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      } as IType,\n    },\n  },\n  '64': {\n    common: {\n      beam_count: 4,\n      getWidth(scale = DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'flag64thUp',\n      code_flag_downstem: 'flag64thDown',\n      stem_up_extension: 13,\n      stem_down_extension: 13,\n      tabnote_stem_up_extension: 12,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    } as IType,\n    type: {\n      'n': { // Sixty-fourth note\n        code_head: 'noteheadBlack',\n      } as IType,\n      'h': { // Sixty-fourth harmonic\n        code_head: 'noteheadDiamondBlack',\n      } as IType,\n      'm': { // Sixty-fourth muted\n        code_head: 'noteheadXBlack',\n      } as IType,\n      'r': { // Sixty-fourth rest\n        code_head: 'rest64th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0,\n      } as IType,\n      's': { // Sixty-fourth slash\n        // Drawn with canvas primitives\n        getWidth: () => SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      } as IType,\n    },\n  },\n  '128': {\n    common: {\n      beam_count: 5,\n      getWidth(scale = DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'flag128thUp',\n      code_flag_downstem: 'flag128thDown',\n      stem_up_extension: 22,\n      stem_down_extension: 22,\n      tabnote_stem_up_extension: 21,\n      tabnote_stem_down_extension: 18,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    } as IType,\n    type: {\n      'n': {  // Hundred-twenty-eight note\n        code_head: 'noteheadBlack',\n      } as IType,\n      'h': { // Hundred-twenty-eight harmonic\n        code_head: 'noteheadDiamondBlack',\n      } as IType,\n      'm': { // Hundred-twenty-eight muted\n        code_head: 'noteheadXBlack',\n      } as IType,\n      'r': {  // Hundred-twenty-eight rest\n        code_head: 'rest128th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: 1.5,\n        line_above: 3.0,\n        line_below: 3.0,\n      } as IType,\n      's': { // Hundred-twenty-eight rest\n        // Drawn with canvas primitives\n        getWidth: () => SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      } as IType,\n    },\n  },\n};\nexport const ACCIDENTAL_COLUMNS_TABLE: Record<number, Record<string, number[]>> = {\n  1: {\n    a: [1],\n    b: [1],\n  },\n  2: {\n    a: [1, 2],\n  },\n  3: {\n    a: [1, 3, 2],\n    b: [1, 2, 1],\n    second_on_bottom: [1, 2, 3],\n  },\n  4: {\n    a: [1, 3, 4, 2],\n    b: [1, 2, 3, 1],\n    spaced_out_tetrachord: [1, 2, 1, 2],\n  },\n  5: {\n    a: [1, 3, 5, 4, 2],\n    b: [1, 2, 4, 3, 1],\n    spaced_out_pentachord: [1, 2, 3, 2, 1],\n    very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n  },\n  6: {\n    a: [1, 3, 5, 6, 4, 2],\n    b: [1, 2, 4, 5, 3, 1],\n    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n  },\n};\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\nimport {Element} from './element';\nimport {Formatter} from './formatter';\nimport {Glyph} from './glyph';\nimport {Stem} from './stem';\nimport {Note} from \"./note\";\nimport {StemmableNote} from \"./stemmablenote\";\nimport {StaveNote} from \"./stavenote\";\nimport {IStaveOptions} from \"./types/stave\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {Merge} from \"./flow\";\n\nexport class Tuplet extends Element {\n  notes: Note[];\n\n  private readonly options: IStaveOptions;\n  private readonly num_notes: number;\n  private readonly point: number;\n\n  private bracketed: boolean;\n  private y_pos: number;\n  private x_pos: number;\n  private width: number;\n  private location: number;\n  private notes_occupied: number;\n  private ratioed: boolean;\n  private numerator_glyphs: Glyph[];\n  private denom_glyphs: Glyph[];\n\n  static get LOCATION_TOP(): number {\n    return 1;\n  }\n\n  static get LOCATION_BOTTOM(): number {\n    return -1;\n  }\n\n  static get NESTING_OFFSET(): number {\n    return 15;\n  }\n\n  constructor(notes: Note[], options: IStaveOptions) {\n    super();\n    this.setAttribute('type', 'Tuplet');\n    if (!notes || !notes.length) {\n      throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    this.options = Merge({} as IStaveOptions, options);\n    this.notes = notes;\n    this.num_notes = 'num_notes' in this.options ?\n      this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied ||\n      this.options.beats_occupied ||\n      2;\n    if ('bracketed' in this.options) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed =\n        notes.some(note => (note as StemmableNote).beam === null);\n    }\n\n    this.ratioed = 'ratioed' in this.options ?\n      this.options.ratioed :\n      (Math.abs(this.notes_occupied - this.num_notes) > 1);\n    this.point = this.musicFont.lookupMetric('digits.tupletPoint');\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n    this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach(): void {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach(): void {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed: boolean): this {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed: boolean): this {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet to be displayed either on the top or bottom of the stave\n   */\n  setTupletLocation(location: number): this {\n    if (!location) {\n      location = Tuplet.LOCATION_TOP;\n    } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      throw new RuntimeError('BadArgument', 'Invalid tuplet location: ' + location);\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes(): Note[] {\n    return this.notes;\n  }\n\n  getNoteCount(): number {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning(): void {\n    const msg = [\n      'beats_occupied has been deprecated as an ',\n      'option for tuplets. Please use notes_occupied ',\n      'instead. Calls to getBeatsOccupied and ',\n      'setBeatsOccupied should now be routed to ',\n      'getNotesOccupied and setNotesOccupied instead',\n    ].join('');\n\n    if (console && console.warn) { // eslint-disable-line no-console\n      console.warn(msg); // eslint-disable-line no-console\n    } else if (console) {\n      console.log(msg); // eslint-disable-line no-console\n    }\n  }\n\n  getBeatsOccupied(): number {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats: number): void {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied(): number {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes: number): void {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs(): void {\n    this.numerator_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n      n = parseInt((n / 10).toString(), 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n      n = parseInt((n / 10).toString(), 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount(): number {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note: Note, location: number) {\n      return note.tupletStack.filter(tuplet => tuplet.location === location).length;\n    }\n\n    this.notes.forEach(note => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition(): number {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset =\n      this.getNestedTupletCount() *\n      Tuplet.NESTING_OFFSET *\n      -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos: number;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.getStave().getYForLine(0) - 15;\n      // y_pos = first_note.getStemExtents().topY - 10;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const top_y = (this.notes[i] as StemmableNote).getStemDirection() === Stem.UP\n          ? (this.notes[i] as StemmableNote).getStemExtents().topY - 10\n          : (this.notes[i] as StemmableNote).getStemExtents().baseY - 20;\n\n        if (top_y < y_pos) {\n          y_pos = top_y;\n        }\n      }\n    } else {\n      y_pos = first_note.getStave().getYForLine(4) + 20;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const bottom_y = (this.notes[i] as StemmableNote).getStemDirection() === Stem.UP\n          ? (this.notes[i] as StemmableNote).getStemExtents().baseY + 20\n          : (this.notes[i] as StemmableNote).getStemExtents().topY + 10;\n        if (bottom_y > y_pos) {\n          y_pos = bottom_y;\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw(): void {\n    this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0] as StaveNote;\n    const last_note = this.notes[this.notes.length - 1] as StaveNote;\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width: number, glyph: Glyph) => width + glyph.getMetrics().width;\n\n    // calculate total width of tuplet notation\n    let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + (this.width / 2);\n    const notation_start_x = notation_center_x - (width / 2);\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        this.context.fillRect(\n          this.x_pos + this.width / 2 + width / 2 + 5,\n          this.y_pos,\n          line_width,\n          1\n        );\n        this.context.fillRect(\n          this.x_pos,\n          this.y_pos + +(this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n        this.context.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + +(this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    const shiftY = this.musicFont.lookupMetric('digits.shiftY', 0);\n\n    let x_offset = 0;\n    this.numerator_glyphs.forEach(glyph => {\n      glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2 + shiftY);\n      x_offset += glyph.getMetrics().width;\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach(glyph => {\n        glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2 + shiftY);\n        x_offset += glyph.getMetrics().width;\n      });\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport {Element} from './element';\nimport {Glyph} from './glyph';\nimport {DrawContext, IText} from \"./types/common\";\nimport {Stave} from \"./stave\";\nimport {IFont} from \"./types/font\";\nimport {IStaveConnectorTextOptions} from \"./types/staveconnector\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {Merge, STAVE_LINE_THICKNESS} from \"./flow\";\n\nfunction drawBoldDoubleLine(ctx: DrawContext, type: number, topX: number, topY: number, botY: number) {\n  if (\n    type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n    type !== StaveConnector.type.BOLD_DOUBLE_RIGHT\n  ) {\n    throw new RuntimeError(\n      'InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.'\n    );\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\nexport enum Type {\n  SINGLE_RIGHT = 0,\n  SINGLE_LEFT = 1,\n  SINGLE = 1,\n  DOUBLE = 2,\n  BRACE = 3,\n  BRACKET = 4,\n  BOLD_DOUBLE_LEFT = 5,\n  BOLD_DOUBLE_RIGHT = 6,\n  THIN_DOUBLE = 7,\n  NONE = 8\n}\n\nexport class StaveConnector extends Element {\n  private readonly thickness: number;\n  private readonly width: number;\n  private readonly font: IFont;\n  private readonly texts: IText[];\n\n  private type: Type;\n  private x_shift: number;\n  private top_stave: Stave;\n  private bottom_stave: Stave;\n\n  // SINGLE_LEFT and SINGLE are the same value for compatibility\n  // with older versions of vexflow which didn't have right sided\n  // stave connectors\n  static get type(): typeof Type {\n    return Type\n  }\n\n  static get typeString(): Record<string, number> {\n    return {\n      singleRight: StaveConnector.type.SINGLE_RIGHT,\n      singleLeft: StaveConnector.type.SINGLE_LEFT,\n      single: StaveConnector.type.SINGLE,\n      double: StaveConnector.type.DOUBLE,\n      brace: StaveConnector.type.BRACE,\n      bracket: StaveConnector.type.BRACKET,\n      boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n      boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n      thinDouble: StaveConnector.type.THIN_DOUBLE,\n      none: StaveConnector.type.NONE,\n    };\n  }\n\n  constructor(top_stave: Stave, bottom_stave: Stave) {\n    super();\n    this.setAttribute('type', 'StaveConnector');\n\n    this.thickness = STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    } as IFont;\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  setType(type: number): this {\n    type = typeof (type) === 'string'\n      ? StaveConnector.typeString[type]\n      : type;\n\n    if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  setText(text: string, options: IStaveConnectorTextOptions): this {\n    this.texts.push({\n      content: text,\n      options: Merge<IStaveConnectorTextOptions>({shift_x: 0, shift_y: 0}, options),\n    });\n    return this;\n  }\n\n  setFont(font: IFont): void {\n    Merge(this.font, font);\n  }\n\n  setXShift(x_shift: number): this {\n    if (typeof x_shift !== 'number') {\n      throw new RuntimeError('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) +\n      this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector = (\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE\n    );\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.width;\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= (this.width + 2);\n        topY -= this.thickness;\n        attachment_height += 0.5;\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - (0.90 * width);\n        const cpy1 = y1 + (0.2 * attachment_height);\n        const cpx2 = x1 + (1.10 * width);\n        const cpy2 = y2 - (0.135 * attachment_height);\n        const cpx3 = cpx2;\n        const cpy3 = y2 + (0.135 * attachment_height);\n        const cpx4 = cpx1;\n        const cpy4 = y3 - (0.2 * attachment_height);\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + (0.40 * width);\n        const cpy6 = y2 + (0.135 * attachment_height);\n        const cpx7 = cpx6;\n        const cpy7 = y2 - (0.135 * attachment_height);\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      }\n      case StaveConnector.type.BRACKET:\n        topY -= 6;\n        botY += 6;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n        Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        attachment_height -= this.thickness;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new RuntimeError(\n          'InvalidType', `The provided StaveConnector.type (${this.type}) is invalid`\n        );\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.setLineWidth(2);//ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 +\n        text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n// directly, but used internally in `StaveNote`.\n//\n// See `tests/notehead_tests.js` for usage examples.\n\nimport {Note} from './note';\nimport {Stem} from './stem';\nimport {StaveNote} from './stavenote';\nimport {Glyph} from './glyph';\nimport {DrawContext} from \"./types/common\";\nimport {Stave} from \"./stave\";\nimport {INoteRenderOptions, IStaveNoteStruct} from \"./types/note\";\nimport {IGlyphProps} from \"./types/glyph\";\nimport {BoundingBox} from \"./boundingbox\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {\n  DEFAULT_NOTATION_FONT_SCALE,\n  durationToFraction,\n  durationToNumber, getGlyphProps, LOG,\n  Merge,\n  SLASH_NOTEHEAD_WIDTH,\n  STEM_WIDTH\n} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\nfunction L(...args: unknown[]) { if (NoteHead.DEBUG) LOG('Vex.Flow.NoteHead', args); }\n\n// Draw slashnote head manually. No glyph exists for this.\n//\n// Parameters:\n// * `ctx`: the Canvas context\n// * `duration`: the duration of the note. ex: \"4\"\n// * `x`: the x coordinate to draw at\n// * `y`: the y coordinate to draw at\n// * `stem_direction`: the direction of the stem\nfunction drawSlashNoteHead(ctx: DrawContext, duration: string, x: number, y: number, stem_direction: number, staveSpace: number) {\n  const width = SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(STEM_WIDTH);\n\n  let fill = false;\n\n  if (durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\nexport class NoteHead extends Note {\n  static DEBUG: boolean;\n\n  glyph_code: string;\n\n  private readonly custom_glyph: boolean;\n  private readonly stem_up_x_offset: number;\n  private readonly stem_down_x_offset: number;\n  private readonly note_type: string;\n  private readonly displaced: boolean;\n  private readonly stem_direction: number;\n\n  private x: number;\n  private y: number;\n  private line: number;\n  private index: number;\n  private slashed: boolean;\n\n  static get CATEGORY(): string { return 'notehead'; }\n\n  constructor(head_options: IStaveNoteStruct) {\n    super(head_options);\n    this.setAttribute('type', 'NoteHead');\n\n    this.index = head_options.index;\n    this.x = head_options.x || 0;\n    this.y = head_options.y || 0;\n    this.note_type = head_options.note_type;\n    this.duration = head_options.duration;\n    this.displaced = head_options.displaced || false;\n    this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n    this.line = head_options.line;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyph = getGlyphProps(this.duration, this.note_type);\n    if (!this.glyph) {\n      throw new RuntimeError(\n        'BadArguments',\n        `No glyph found for duration '${this.duration}' and type '${this.note_type}'`);\n    }\n\n    this.glyph_code = (this.glyph as IGlyphProps).code_head;\n    this.x_shift = head_options.x_shift || 0;\n    if (head_options.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = head_options.custom_glyph_code;\n      this.stem_up_x_offset = head_options.stem_up_x_offset || 0;\n      this.stem_down_x_offset = head_options.stem_down_x_offset || 0;\n    }\n\n    this.style = head_options.style;\n    this.slashed = head_options.slashed;\n\n    Merge(this.render_options, {\n      // font size for note heads\n      glyph_font_scale: head_options.glyph_font_scale || DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: 3,\n    } as INoteRenderOptions);\n\n    this.setWidth((this.glyph as IGlyphProps).getWidth(this.render_options.glyph_font_scale));\n  }\n\n  getCategory(): string { return NoteHead.CATEGORY; }\n\n  // Get the width of the notehead\n  getWidth(): number { return this.width; }\n\n  // Determine if the notehead is displaced\n  isDisplaced(): boolean { return this.displaced === true; }\n\n  // Get the glyph data\n  getGlyph(): IGlyphProps|Glyph { return this.glyph; }\n\n  // Set the X coordinate\n  setX(x: number): this { this.x = x; return this; }\n\n  // get/set the Y coordinate\n  getY(): number { return this.y; }\n  setY(y: number): this { this.y = y;  return this; }\n\n  // Get/set the stave line the notehead is placed on\n  getLine(): number { return this.line; }\n  setLine(line: number): this { this.line = line; return this; }\n\n  // Get the canvas `x` coordinate position of the notehead.\n  getAbsoluteX(): number {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = (Stem.WIDTH / 2);\n    const fontShift = this.musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n    const displacedFontShift = this.musicFont.lookupMetric('noteHead.displaced.shiftX', 0) * this.stem_direction;\n\n    return x + fontShift + (this.displaced\n      ? ((this.width - displacementStemAdjustment) * this.stem_direction) + displacedFontShift\n      : 0\n    );\n  }\n\n  // Get the `BoundingBox` for the `NoteHead`\n  getBoundingBox(): BoundingBox {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const spacing = this.stave.getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  // Set notehead to a provided `stave`\n  setStave(stave: Stave): this {\n    const line = this.getLine();\n\n    this.stave = stave;\n    this.setY(stave.getYForNote(line));\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat(): this {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Draw the notehead\n  draw(): void {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    let head_x = this.getAbsoluteX();\n    if (this.custom_glyph) {\n      // head_x += this.x_shift;\n      head_x += this.stem_direction === Stem.UP ? this.stem_up_x_offset : this.stem_down_x_offset;\n    }\n\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n\n    if (this.style) {\n      this.applyStyle(ctx);\n    }\n\n    const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n    if (this.note_type === 's') {\n      const staveSpace = this.stave.getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n        font: this.musicFont,\n        category: this.custom_glyph ? `noteHead.custom.${categorySuffix}` : `noteHead.standard.${categorySuffix}`\n      });\n    }\n\n    if (this.style) {\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of modifiers to notes (e.g. bends,\n// fingering positions etc.)\nimport {StaveNote} from './stavenote';\nimport {Dot} from './dot';\nimport {FretHandFinger} from './frethandfinger';\nimport {Accidental} from './accidental';\nimport {NoteSubGroup} from './notesubgroup';\nimport {GraceNoteGroup} from './gracenotegroup';\nimport {Stroke} from './strokes';\nimport {StringNumber} from './stringnumber';\nimport {Articulation} from './articulation';\nimport {Ornament} from './ornament';\nimport {Annotation} from './annotation';\nimport {ChordSymbol} from './chordsymbol';\nimport {Bend} from './bend';\nimport {Vibrato} from './vibrato';\nimport {IModifierContextState} from \"./types/common\";\nimport {\n  IModifierContextMetrics,\n  ModifierClass,\n  PostformatModifierType,\n  PreformatModifierType\n} from \"./types/modifiercontext\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {LOG} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (ModifierContext.DEBUG) LOG('Vex.Flow.ModifierContext', args);\n}\n\nexport class ModifierContext {\n  static DEBUG: boolean;\n\n  state: IModifierContextState;\n\n  private readonly postFormatted: boolean;\n  private readonly spacing: number;\n  private readonly modifiers: Record<string, ModifierClass[]>;\n\n  private preFormatted: boolean;\n  private width: number;\n  private formatted: boolean;\n  private PREFORMAT: PreformatModifierType[];\n  private POSTFORMAT: PostformatModifierType[];\n\n  constructor() {\n    // Current modifiers\n    this.modifiers = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0,\n      top_text_line: 0,\n    };\n\n    // Add new modifiers to this array. The ordering is significant -- lower\n    // modifiers are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      StaveNote,\n      Dot,\n      FretHandFinger,\n      Accidental,\n      Stroke,\n      GraceNoteGroup,\n      NoteSubGroup,\n      StringNumber,\n      Articulation,\n      Ornament,\n      Annotation,\n      ChordSymbol,\n      Bend,\n      Vibrato,\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [StaveNote];\n  }\n\n  addModifier(modifier: ModifierClass): this {\n    const type = modifier.getCategory();\n    if (!this.modifiers[type]) this.modifiers[type] = [];\n    this.modifiers[type].push(modifier);\n    modifier.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(type: string): ModifierClass[] {\n    return this.modifiers[type];\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  getLeftShift(): number {\n    return this.state.left_shift;\n  }\n\n  getRightShift(): number {\n    return this.state.right_shift;\n  }\n\n  getState(): IModifierContextState {\n    return this.state;\n  }\n\n  getMetrics(): IModifierContextMetrics {\n    if (!this.formatted) {\n      throw new RuntimeError('UnformattedModifier', 'Unformatted modifier has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n    };\n  }\n\n  preFormat(): void {\n    if (this.preFormatted) return;\n    this.PREFORMAT.forEach((modifier) => {\n      L('Preformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.format(this.getModifiers(modifier.CATEGORY) as any, this.state, this);\n    });\n\n    // Update width of this modifier context\n    this.width = this.state.left_shift + this.state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat(): void {\n    if (this.postFormatted) return;\n    this.POSTFORMAT.forEach((modifier) => {\n      L('Postformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.postFormat((this.getModifiers(modifier.CATEGORY) as StaveNote[]), this);\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n//\n// ## Description\n//\n// This file implements accidentals as modifiers that can be attached to\n// notes. Support is included for both western and microtonal accidentals.\n//\n// See `tests/accidental_tests.js` for usage examples.\nimport {Fraction} from './fraction';\nimport {Music} from './music';\nimport {Modifier} from './modifier';\nimport {Glyph} from './glyph';\nimport {ILine} from \"./types/common\";\nimport {StaveNote} from \"./stavenote\";\nimport {Voice} from \"./voice\";\nimport {GraceNoteGroup} from \"./gracenotegroup\";\nimport {StemmableNote} from \"./stemmablenote\";\nimport {IAccidental, IAccidentalListItem, IAccidentalRenderOptions, IAccidentalState} from \"./types/accidental\";\nimport {Note} from \"./note\";\nimport {accidentalCodes, LOG} from \"./flow\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {ACCIDENTAL_COLUMNS_TABLE} from \"./tables\";\n\n// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (Accidental.DEBUG) LOG('Vex.Flow.Accidental', args);\n}\n\nconst getGlyphWidth = (glyph: Glyph) => glyph.getMetrics().width;\n\n// An `Accidental` inherits from `Modifier`, and is formatted within a\n// `ModifierContext`.\nexport class Accidental extends Modifier {\n  type: string;\n\n  static DEBUG: boolean;\n\n  private readonly accidental: IAccidental;\n\n  private render_options: IAccidentalRenderOptions;\n  private cautionary: boolean;\n  private glyph: Glyph;\n  private parenRight: Glyph;\n  private parenLeft: Glyph;\n\n  static get CATEGORY(): string {\n    return 'accidentals';\n  }\n\n  // Arrange accidentals inside a ModifierContext.\n  static format(accidentals: Accidental[], state: IAccidentalState): void {\n    const noteheadAccidentalPadding = 1;\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = 3;\n\n    // If there are no accidentals, we needn't format their positions\n    if (!accidentals || accidentals.length === 0) return;\n\n    const accList: IAccidentalListItem[] = [];\n    let prevNote = null;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc = accidentals[i];\n      const note = acc.getNote() as StaveNote;\n      const stave = note.getStave();\n      const props = note.getKeyProps()[acc.getIndex()];\n      if (note !== prevNote) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n        }\n        prevNote = note;\n      }\n      if (stave !== null) {\n        const lineSpace = stave.options.spacing_between_lines_px;\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round(y / lineSpace * 2) / 2;\n        accList.push({y, line: accLine, shift: shiftL, acc, lineSpace});\n      } else {\n        accList.push({line: props.line, shift: shiftL, acc} as IAccidentalListItem);\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList: ILine[] = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = null;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === null || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n        } as ILine);\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Vex.Flow.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n          // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index: number) => lineList[groupStart + index];\n      const getGroupLines = (indexes: number[]) => indexes.map(getGroupLine);\n      const lineDifference = (indexA: number, indexB: number) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map(item => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs: number[][]) =>\n        indexPairs\n          .map(getGroupLines)\n          .every(([line1, line2]) => !this.checkCollision(line1, line2));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains more than seven members, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n\n        // Otherwise, if the group contains fewer than seven members, use the layouts from\n        // the accidentalsColumnsTable housed in tables.js.\n      } else {\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ACCIDENTAL_COLUMNS_TABLE[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths: number[] = [];\n    const columnXOffsets: number[] = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach(line => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach(line => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = (columnXOffsets[line.column - 1] + lineWidth);\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift;\n  }\n\n  // Helper function to determine whether two lines of accidentals collide vertically\n  static checkCollision(line1: ILine, line2: ILine): boolean {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired: number;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) { // then line 2 is on top\n      clearanceRequired = (line2.flatLine || line2.dblSharpLine) ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else { // line 1 is on top\n      clearanceRequired = (line1.flatLine || line1.dblSharpLine) ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  // Use this method to automatically apply accidentals to a set of `voices`.\n  // The accidentals will be remembered between all the voices provided.\n  // Optionally, you can also provide an initial `keySignature`.\n  static applyAccidentals(voices: Voice[], keySignature: string): void {\n    const tickPositions: number[] = [];\n    const tickNoteMap: Record<number, Note[]> = {} as Record<number, Note[]>;\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach(voice => {\n      const tickPosition = new Fraction(0, 1);\n      const notes = voice.getTickables();\n      notes.forEach(note => {\n        if (note.shouldIgnoreTicks()) return;\n\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch\n    const scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach(tick => {\n      const notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches: string[] = [];\n\n      const processNote = (note: StaveNote) => {\n        if (note.isRest() || note.shouldIgnoreTicks()) return;\n\n        // Go through each key and determine if an accidental should be\n        // applied\n        note.keys.forEach((keyString: string, keyIndex: number) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          const sameAccidental = scaleMap[key.root] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n          // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            note.addAccidental(keyIndex, accidental);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(pitch);\n          }\n        });\n\n        // process grace notes\n        note.getModifiers().forEach(modifier => {\n          if (modifier.getCategory() === 'gracenotegroups') {\n            (modifier as GraceNoteGroup).getGraceNotes().forEach(processNote);\n          }\n        });\n      };\n\n      notes.forEach(processNote);\n    });\n  }\n\n  // Create accidental. `type` can be a value from the\n  // `ACCIDENTALS` table in `tables.ts`. For\n  // example: `#`, `##`, `b`, `n`, etc.\n  constructor(type: string = null) {\n    super();\n    this.setAttribute('type', 'Accidental');\n\n    L('New accidental: ', type);\n\n    this.note = null;\n    // The `index` points to a specific note in a chord.\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: 38,\n\n      // Length of stroke across heads above or below the stave.\n      stroke_px: 3,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = accidentalCodes(this.type);\n    if (!this.accidental) {\n      throw new RuntimeError('ArgumentError', `Unknown accidental type: ${type}`);\n    }\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n    this.parenLeft = null;\n    this.parenRight = null;\n\n    this.reset();\n  }\n\n  reset(): void {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  getCategory(): string {\n    return Accidental.CATEGORY;\n  }\n\n  getWidth(): number {\n    const parenWidth = this.cautionary\n      ? (\n        getGlyphWidth(this.parenLeft) +\n        getGlyphWidth(this.parenRight) +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding\n      )\n      : 0;\n\n    return getGlyphWidth(this.glyph) + parenWidth;\n  }\n\n  // Attach this accidental to `note`, which must be a `StaveNote`.\n  setNote(note: Note): this {\n    if (!note) {\n      throw new RuntimeError('ArgumentError', `Bad note value: ${note}`);\n    }\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (this.note.getCategory() === 'gracenotes') {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n    return this;\n  }\n\n  // If called, draws parenthesis around accidental.\n  setAsCautionary(): this {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  // Render accidental onto canvas.\n  draw(): void {\n    const {\n      context,\n      type, position, note, index, cautionary,\n      x_shift, y_shift,\n      glyph, parenLeft, parenRight,\n      render_options: {parenLeftPadding, parenRightPadding},\n    } = this;\n\n    this.checkContext();\n\n    if (!(note && (index != null))) {\n      throw new RuntimeError('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n    }\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = (note as StemmableNote).getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(context, accX, accY);\n    } else {\n      // Render the accidental in parentheses.\n      parenRight.render(context, accX, accY);\n      accX -= getGlyphWidth(parenRight);\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(context, accX, accY);\n      accX -= getGlyphWidth(glyph);\n      accX -= parenLeftPadding;\n      parenLeft.render(context, accX, accY);\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements some standard music theory routines.\nimport {IMusicNoteValue} from \"./types/common\";\nimport {IMusicAccidental, IMusicNotePart} from \"./types/music\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class Music {\n  static get NUM_TONES(): number {\n    return 12;\n  }\n\n  static get roots(): string[] {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  static get root_values(): number[] {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  static get root_indices(): Record<string, number> {\n    return {\n      'c': 0,\n      'd': 1,\n      'e': 2,\n      'f': 3,\n      'g': 4,\n      'a': 5,\n      'b': 6,\n    };\n  }\n\n  static get canonical_notes(): string[] {\n    return [\n      'c', 'c#', 'd', 'd#',\n      'e', 'f', 'f#', 'g',\n      'g#', 'a', 'a#', 'b',\n    ];\n  }\n\n  static get diatonic_intervals(): string[] {\n    return [\n      'unison', 'm2', 'M2', 'm3', 'M3',\n      'p4', 'dim5', 'p5', 'm6', 'M6',\n      'b7', 'M7', 'octave',\n    ];\n  }\n\n  static get diatonic_accidentals(): Record<string, IMusicAccidental> {\n    return {\n      'unison': {note: 0, accidental: 0},\n      'm2': {note: 1, accidental: -1},\n      'M2': {note: 1, accidental: 0},\n      'm3': {note: 2, accidental: -1},\n      'M3': {note: 2, accidental: 0},\n      'p4': {note: 3, accidental: 0},\n      'dim5': {note: 4, accidental: -1},\n      'p5': {note: 4, accidental: 0},\n      'm6': {note: 5, accidental: -1},\n      'M6': {note: 5, accidental: 0},\n      'b7': {note: 6, accidental: -1},\n      'M7': {note: 6, accidental: 0},\n      'octave': {note: 7, accidental: 0},\n    };\n  }\n\n  static get intervals(): Record<string, number> {\n    return {\n      'u': 0,\n      'unison': 0,\n      'm2': 1,\n      'b2': 1,\n      'min2': 1,\n      'S': 1,\n      'H': 1,\n      '2': 2,\n      'M2': 2,\n      'maj2': 2,\n      'T': 2,\n      'W': 2,\n      'm3': 3,\n      'b3': 3,\n      'min3': 3,\n      'M3': 4,\n      '3': 4,\n      'maj3': 4,\n      '4': 5,\n      'p4': 5,\n      '#4': 6,\n      'b5': 6,\n      'aug4': 6,\n      'dim5': 6,\n      '5': 7,\n      'p5': 7,\n      '#5': 8,\n      'b6': 8,\n      'aug5': 8,\n      '6': 9,\n      'M6': 9,\n      'maj6': 9,\n      'b7': 10,\n      'm7': 10,\n      'min7': 10,\n      'dom7': 10,\n      'M7': 11,\n      'maj7': 11,\n      '8': 12,\n      'octave': 12,\n    };\n  }\n\n  static get scales(): Record<string, number[]> {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n    };\n  }\n\n  static get scaleTypes(): Record<string, number[]> {\n    return {\n      'M': Music.scales.major,\n      'm': Music.scales.minor,\n    };\n  }\n\n  static get accidentals(): string[] {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  static get noteValues(): Record<string, IMusicNoteValue> {\n    return {\n      'c': {root_index: 0, int_val: 0},\n      'cn': {root_index: 0, int_val: 0},\n      'c#': {root_index: 0, int_val: 1},\n      'c##': {root_index: 0, int_val: 2},\n      'cb': {root_index: 0, int_val: 11},\n      'cbb': {root_index: 0, int_val: 10},\n      'd': {root_index: 1, int_val: 2},\n      'dn': {root_index: 1, int_val: 2},\n      'd#': {root_index: 1, int_val: 3},\n      'd##': {root_index: 1, int_val: 4},\n      'db': {root_index: 1, int_val: 1},\n      'dbb': {root_index: 1, int_val: 0},\n      'e': {root_index: 2, int_val: 4},\n      'en': {root_index: 2, int_val: 4},\n      'e#': {root_index: 2, int_val: 5},\n      'e##': {root_index: 2, int_val: 6},\n      'eb': {root_index: 2, int_val: 3},\n      'ebb': {root_index: 2, int_val: 2},\n      'f': {root_index: 3, int_val: 5},\n      'fn': {root_index: 3, int_val: 5},\n      'f#': {root_index: 3, int_val: 6},\n      'f##': {root_index: 3, int_val: 7},\n      'fb': {root_index: 3, int_val: 4},\n      'fbb': {root_index: 3, int_val: 3},\n      'g': {root_index: 4, int_val: 7},\n      'gn': {root_index: 4, int_val: 7},\n      'g#': {root_index: 4, int_val: 8},\n      'g##': {root_index: 4, int_val: 9},\n      'gb': {root_index: 4, int_val: 6},\n      'gbb': {root_index: 4, int_val: 5},\n      'a': {root_index: 5, int_val: 9},\n      'an': {root_index: 5, int_val: 9},\n      'a#': {root_index: 5, int_val: 10},\n      'a##': {root_index: 5, int_val: 11},\n      'ab': {root_index: 5, int_val: 8},\n      'abb': {root_index: 5, int_val: 7},\n      'b': {root_index: 6, int_val: 11},\n      'bn': {root_index: 6, int_val: 11},\n      'b#': {root_index: 6, int_val: 0},\n      'b##': {root_index: 6, int_val: 1},\n      'bb': {root_index: 6, int_val: 10},\n      'bbb': {root_index: 6, int_val: 9},\n    };\n  }\n\n  isValidNoteValue(note: number): boolean {\n    return !(note == null || note < 0 || note >= Music.NUM_TONES);\n  }\n\n  isValidIntervalValue(interval: number): boolean {\n    return this.isValidNoteValue(interval);\n  }\n\n  getNoteParts(noteString: string): IMusicNotePart {\n    if (!noteString || noteString.length < 1) {\n      throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      } as IMusicNotePart;\n    } else {\n      throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  getKeyParts(keyString: string): IMusicNotePart {\n    if (!keyString || keyString.length < 1) {\n      throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  getNoteValue(noteString: string): number {\n    const value = Music.noteValues[noteString];\n    if (value == null) {\n      throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n    }\n\n    return value.int_val;\n  }\n\n  getIntervalValue(intervalString: string): number {\n    const value = Music.intervals[intervalString];\n    if (value == null) {\n      throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n    }\n\n    return value;\n  }\n\n  getCanonicalNoteName(noteValue: number): string {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n\n    return Music.canonical_notes[noteValue];\n  }\n\n  getCanonicalIntervalName(intervalValue: number): string {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /* Given a note, interval, and interval direction, product the\n   * relative note.\n   */\n  getRelativeNoteValue(noteValue: number, intervalValue: number, direction?: number): number {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + (direction * intervalValue)) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  getRelativeNoteName(root: string, noteValue: number): string {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = (((noteValue + 1) + (rootValue + 1)) %\n        Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /* Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key: number, intervals: number[]): number[] {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i += 1) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /* Returns the interval of a note, given a diatonic scale.\n   *\n   * E.g., Given the scale C, and the note E, returns M3\n   */\n  getIntervalBetween(note1: number, note2: number, direction: number): number {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1\n      ? note2 - note1\n      : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  // Create a scale map that represents the pitch state for a\n  // `keySignature`. For example, passing a `G` to `keySignature` would\n  // return a scale map with every note naturalized except for `F` which\n  // has an `F#` state.\n  createScaleMap(keySignature: string): Record<string, string> {\n    const keySigParts = this.getKeyParts(keySignature);\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {} as Record<string, string>;\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\nimport {Modifier} from './modifier';\nimport {Formatter} from './formatter';\nimport {Voice} from './voice';\nimport {Note} from \"./note\";\nimport {RESOLUTION} from \"./flow\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class NoteSubGroup extends Modifier {\n  private readonly voice: Voice;\n  private readonly subNotes: Note[];\n\n  private preFormatted: boolean;\n  private formatter: Formatter;\n\n  static get CATEGORY(): string {\n    return 'notesubgroup';\n  }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups: Note[], state: any): boolean {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  constructor(subNotes: Note[]) {\n    super();\n    this.setAttribute('type', 'NoteSubGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach(subNote => {\n      subNote.ignore_ticks = false;\n    });\n    this.width = 0;\n    this.preFormatted = false;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n\n    return this;\n  }\n\n  getCategory(): string {\n    return NoteSubGroup.CATEGORY;\n  }\n\n  preFormat(): void {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setNote(note: Note): this {\n    this.note = note;\n    return this;\n  }\n\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  draw(): void {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    if (!(note && (this.index !== null))) {\n      throw new RuntimeError('NoAttachedNote',\n        \"Can't draw notes without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n\n    // Draw notes\n    this.subNotes.forEach(subNote => subNote.setContext(this.context).drawWithStyle());\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\nimport {Modifier} from './modifier';\nimport {Formatter} from './formatter';\nimport {Voice} from './voice';\nimport {Beam} from './beam';\nimport {StaveTie} from './stavetie';\nimport {TabTie} from './tabtie';\nimport {StaveNote} from './stavenote';\nimport {IGraceNoteGroupRenderOptions} from \"./types/common\";\nimport {GraceNote} from \"./gracenote\";\nimport {Note} from \"./note\";\nimport {IGraceNoteGroupFormatOptions} from \"./types/gracenotegroup\";\nimport {LOG, RESOLUTION} from \"./flow\";\nimport {RuntimeError} from \"./runtimeerror\";\n\n// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (GraceNoteGroup.DEBUG) LOG('Vex.Flow.GraceNoteGroup', args);\n}\n\nexport class GraceNoteGroup extends Modifier {\n  static DEBUG: boolean;\n\n  private readonly voice: Voice;\n  private readonly grace_notes: GraceNote[];\n  private readonly show_slur: boolean;\n\n  private preFormatted: boolean;\n  private formatter: Formatter;\n  private render_options: IGraceNoteGroupRenderOptions;\n  private slur: StaveTie|TabTie;\n  private beams: Beam[];\n\n  static get CATEGORY(): string {\n    return 'gracenotegroups';\n  }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(gracenote_groups: GraceNoteGroup[], state: IGraceNoteGroupFormatOptions): boolean {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = (note.getCategory() === StaveNote.CATEGORY);\n      const spacing = (is_stavenote ? group_spacing_stave : group_spacing_tab);\n\n      if (is_stavenote && note !== prev_note) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < (note as StaveNote).keys.length; ++n) {\n          shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({shift: shiftL, gracenote_group, spacing});\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n  // `ModifierContext`.\n  constructor(grace_notes: GraceNote[], show_slur: boolean) {\n    super();\n    this.setAttribute('type', 'GraceNoteGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.preFormatted = false;\n\n    this.show_slur = show_slur;\n    this.slur = null;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.beams = [];\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  getCategory(): string {\n    return GraceNoteGroup.CATEGORY;\n  }\n\n  preFormat(): void {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes(grace_notes: GraceNote[]): this {\n    grace_notes = grace_notes || this.grace_notes;\n    if (grace_notes.length > 1) {\n      const beam = new Beam(grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beams.push(beam);\n    }\n\n    return this;\n  }\n\n  setNote(note: Note): this {\n    this.note = note;\n    return this;\n  }\n\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  getGraceNotes(): GraceNote[] {\n    return this.grace_notes;\n  }\n\n  draw(): void {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    L('Drawing grace note group for:', note);\n\n    if (!(note && (this.index !== null))) {\n      throw new RuntimeError('NoAttachedNote',\n        \"Can't draw grace note without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n\n    // Draw notes\n    this.grace_notes.forEach(graceNote => {\n      graceNote.setContext(this.context).draw();\n    });\n\n    // Draw beam\n    this.beams.forEach(beam => {\n      beam.setContext(this.context).draw();\n    });\n\n    if (this.show_slur) {\n      // Create and draw slur\n      const is_stavenote = (this.getNote().getCategory() === StaveNote.CATEGORY);\n      const TieClass = (is_stavenote ? StaveTie : TabTie);\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(this.context).draw();\n    }\n  }\n}\n","// / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport {StaveTie} from './stavetie';\nimport {StaveNote} from \"./stavenote\";\nimport {INotesStruct} from \"./types/note\";\n\nexport class TabTie extends StaveTie {\n  static createHammeron(notes: INotesStruct): TabTie {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes: INotesStruct): TabTie {\n    return new TabTie(notes, 'P');\n  }\n\n  constructor(notes: INotesStruct, text?: string) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, text);\n    this.setAttribute('type', 'TabTie');\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.setNotes(notes);\n  }\n\n  draw(): boolean {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n\n    if (first_note) {\n      first_x_px = (first_note as StaveNote).getTieRightX() + this.render_options.tie_spacing;\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = (last_note as StaveNote).getTieLeftX() + this.render_options.tie_spacing;\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: -1, // Tab tie's are always face up.\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\nimport {Modifier} from './modifier';\nimport {Renderer} from './renderer';\nimport {StaveNote} from './stavenote';\nimport {StemmableNote} from \"./stemmablenote\";\nimport {Note} from \"./note\";\nimport {IFont} from \"./types/font\";\nimport {IState} from \"./types/common\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class StringNumber extends Modifier {\n  note: Note;\n\n  private readonly radius: number;\n\n  private last_note: StemmableNote;\n  private string_number: string;\n  private x_offset: number;\n  private y_offset: number;\n  private dashed: boolean;\n  private leg: number;\n  private font: IFont;\n\n  static get CATEGORY(): string {\n    return 'stringnumber';\n  }\n\n  // ## Static Methods\n  // Arrange string numbers inside a `ModifierContext`\n  static format(nums: StringNumber[], state: IState): boolean| typeof StringNumber{\n    const left_shift = state.left_shift;\n    const right_shift = state.right_shift;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return this;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shift_left = 0;\n    let shift_right = 0;\n\n    let i;\n    let num;\n    let note;\n    let pos;\n    for (i = 0; i < nums.length; ++i) {\n      num = nums[i];\n      note = num.getNote();\n\n      for (i = 0; i < nums.length; ++i) {\n        num = nums[i];\n        note = num.getNote();\n        pos = num.getPosition();\n        const props = (note as StaveNote).getKeyProps()[num.getIndex()];\n\n        if (note !== prev_note) {\n          for (let n = 0; n < (note as StaveNote).keys.length; ++n) {\n            if (left_shift === 0) {\n              shift_left = Math.max(note.getLeftDisplacedHeadPx(), shift_left);\n            }\n            if (right_shift === 0) {\n              shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n            }\n          }\n          prev_note = note;\n        }\n\n        nums_list.push({\n          pos,\n          note,\n          num,\n          line: props.line,\n          shiftL: shift_left,\n          shiftR: shift_right,\n        });\n      }\n    }\n\n    // Sort string numbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\n    let num_shiftL = 0; // eslint-disable-line\n    let num_shiftR = 0;\n    let x_widthL = 0;\n    let x_widthR = 0;\n    let last_line = null;\n    let last_note = null;\n    for (i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      note = nums_list[i].note;\n      pos = nums_list[i].pos;\n      num = nums_list[i].num;\n      const line = nums_list[i].line;\n      const shiftL = nums_list[i].shiftL;\n      const shiftR = nums_list[i].shiftR;\n\n      // Reset the position of the string number every line.\n      if (line !== last_line || note !== last_note) {\n        num_shiftL = left_shift + shiftL;\n        num_shiftR = right_shift + shiftR;\n      }\n\n      const num_width = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift);\n        num_shift = shift_left + num_width; // spacing\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(num_shiftR);\n        num_shift += num_width; // spacing\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\n      }\n      last_line = line;\n      last_note = note;\n    }\n\n    state.left_shift += x_widthL;\n    state.right_shift += x_widthR;\n    return true;\n  }\n\n  constructor(number: string) {\n    super();\n    this.setAttribute('type', 'StringNumber');\n\n    this.note = null;\n    this.last_note = null;\n    this.index = null;\n    this.string_number = number;\n    this.setWidth(20); // ???\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0; // Horizontal offset from default\n    this.y_offset = 0; // Vertical offset from default\n    this.dashed = true; // true - draw dashed extension  false - no extension\n    this.leg = Renderer.LineEndType.NONE;   // draw upward/downward leg at the of extension line\n    this.radius = 8;\n    this.font = {\n      family: 'sans-serif',\n      size: 10,\n      weight: 'bold',\n    } as IFont;\n  }\n\n  getCategory(): string {\n    return StringNumber.CATEGORY;\n  }\n\n  getNote(): Note {\n    return this.note;\n  }\n\n  setNote(note: Note): this {\n    this.note = note;\n    return this;\n  }\n\n  getIndex(): number {\n    return this.index;\n  }\n\n  setIndex(index: number): this {\n    this.index = index;\n    return this;\n  }\n\n  setLineEndType(leg: number): this {\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n      this.leg = leg;\n    }\n    return this;\n  }\n\n  setStringNumber(number: string): this {\n    this.string_number = number;\n    return this;\n  }\n\n  setOffsetX(x: number): this {\n    this.x_offset = x;\n    return this;\n  }\n\n  setOffsetY(y: number): this {\n    this.y_offset = y;\n    return this;\n  }\n\n  setLastNote(note: StemmableNote): this {\n    this.last_note = note;\n    return this;\n  }\n\n  setDashed(dashed: boolean): this {\n    this.dashed = dashed;\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new RuntimeError('NoAttachedNote', \"Can't draw string number without a note and index.\");\n    }\n    this.setRendered();\n\n    const line_space = this.note.stave.options.spacing_between_lines_px;\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let dot_x = (start.x + this.x_shift + this.x_offset);\n    let dot_y = start.y + this.y_shift + this.y_offset;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n      case Modifier.Position.BELOW: {\n        const stem_ext = (this.note as StemmableNote).getStemExtents();\n        let top = stem_ext.topY;\n        let bottom = stem_ext.baseY + 2;\n\n        if ((this.note as StemmableNote).stem_direction === StaveNote.STEM_DOWN) {\n          top = stem_ext.baseY;\n          bottom = stem_ext.topY - 2;\n        }\n\n        if (this.position === Modifier.Position.ABOVE) {\n          dot_y = this.note.hasStem()\n            ? top - (line_space * 1.75)\n            : start.y - (line_space * 1.75);\n        } else {\n          dot_y = this.note.hasStem()\n            ? bottom + (line_space * 1.5)\n            : start.y + (line_space * 1.75);\n        }\n\n        dot_y += this.y_shift + this.y_offset;\n\n        break;\n      }\n      case Modifier.Position.LEFT:\n        dot_x -= (this.radius / 2) + 5;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += (this.radius / 2) + 6;\n        break;\n      default:\n        throw new RuntimeError(\n          'InvalidPosition', `The position ${this.position} is invalid`\n        );\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n    ctx.setLineWidth(1.5); //ctx.lineWidth = 1.5;\n    ctx.stroke();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n\n    if (this.last_note != null) {\n      const end = this.last_note.getStemX() - this.note.getX() + 5;\n      ctx.setStrokeStyle('#000000'); //ctx.strokeStyle = '#000000';\n      ctx.setLineCap('round'); //ctx.lineCap = 'round';\n      ctx.setLineWidth(0.6);//ctx.lineWidth = 0.6;\n      if (this.dashed) {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n      } else {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n      }\n\n      let len;\n      let pattern;\n      switch (this.leg) {\n        case Renderer.LineEndType.UP:\n          len = -10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        case Renderer.LineEndType.DOWN:\n          len = 10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        default:\n          break;\n      }\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements text annotations as modifiers that can be attached to\n// notes.\n//\n// See `tests/annotation_tests.js` for usage examples.\nimport {Modifier} from './modifier';\nimport {IState} from \"./types/common\";\nimport {StemmableNote} from \"./stemmablenote\";\nimport {IFont} from \"./types/font\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {LOG, TEXT_HEIGHT_OFFSET_HACK, textWidth} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (Annotation.DEBUG) LOG('Vex.Flow.Annotation', args);\n}\n\nexport enum Justify {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3,\n  CENTER_STEM = 4\n}\n\nexport enum VerticalJustify {\n  TOP = 1,\n  CENTER = 2,\n  BOTTOM = 3,\n  CENTER_STEM = 4\n}\n\nexport class Annotation extends Modifier {\n  static DEBUG: boolean;\n\n  note: StemmableNote;\n\n  private justification: Justify;\n  private vert_justification: VerticalJustify;\n  private text: string;\n  private font: IFont;\n\n  static get CATEGORY(): string {\n    return 'annotations';\n  }\n\n  // Text annotations can be positioned and justified relative to the note.\n  static get Justify(): typeof Justify {\n    return Justify;\n  }\n\n  static get JustifyString(): Record<string, number> {\n    return {\n      left: Annotation.Justify.LEFT,\n      right: Annotation.Justify.RIGHT,\n      center: Annotation.Justify.CENTER,\n      centerStem: Annotation.Justify.CENTER_STEM,\n    };\n  }\n\n  static get VerticalJustify(): typeof VerticalJustify{\n    return VerticalJustify;\n  }\n\n  static get VerticalJustifyString(): Record<string, number> {\n    return {\n      above: Annotation.VerticalJustify.TOP,\n      top: Annotation.VerticalJustify.TOP,\n      below: Annotation.VerticalJustify.BOTTOM,\n      bottom: Annotation.VerticalJustify.BOTTOM,\n      center: Annotation.VerticalJustify.CENTER,\n      centerStem: Annotation.VerticalJustify.CENTER_STEM,\n    };\n  }\n\n  // Arrange annotations within a `ModifierContext`\n  static format(annotations: Annotation[], state: IState): boolean {\n    if (!annotations || annotations.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < annotations.length; ++i) {\n      const annotation = annotations[i];\n      width = Math.max(annotation.getWidth(), width);\n      if (annotation.getPosition() === Modifier.Position.ABOVE) {\n        annotation.setTextLine(state.top_text_line);\n        state.top_text_line++;\n      } else {\n        annotation.setTextLine(state.text_line);\n        state.text_line++;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // Annotations inherit from `Modifier` and is positioned correctly when\n  // in a `ModifierContext`.\n  // Create a new `Annotation` with the string `text`.\n  constructor(text: string) {\n    super();\n    this.setAttribute('type', 'Annotation');\n\n    this.note = null;\n    this.index = null;\n    this.text = text;\n    this.justification = Annotation.Justify.CENTER;\n    this.vert_justification = Annotation.VerticalJustify.TOP;\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    } as IFont;\n\n    // The default width is calculated from the text.\n    this.setWidth(textWidth(text));\n  }\n\n  getCategory(): string {\n    return Annotation.CATEGORY;\n  }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family: string, size: number, weight: string): this {\n    this.font = {family, size, weight} as IFont;\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `Annotation.VerticalJustify`.\n  setVerticalJustification(just: string | number): this {\n    this.vert_justification = typeof (just) === 'string'\n      ? Annotation.VerticalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `Annotation.Justify`.\n  getJustification(): Justify {\n    return this.justification;\n  }\n\n  setJustification(just: string | number): this {\n    this.justification = typeof (just) === 'string'\n      ? Annotation.JustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Render text beside the note.\n  draw(): void {\n    this.checkContext();\n\n    if (!this.note) {\n      throw new RuntimeError(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n      this.index);\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = this.context.measureText(this.text).width;\n\n    // Estimate text height to be the same as the width of an 'm'.\n    //\n    // This is a hack to work around the inability to measure text height\n    // in HTML5 Canvas (and SVG).\n    const text_height = this.context.measureText('m').width;\n    let x;\n    let y;\n\n    if (this.justification === Annotation.Justify.LEFT) {\n      x = start.x;\n    } else if (this.justification === Annotation.Justify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.justification === Annotation.Justify.CENTER) {\n      x = start.x - text_width / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() - text_width / 2;\n    }\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n      const yt = this.note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    } else /* CENTER_STEM */ {\n      const extents = this.note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 +\n        text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    this.context.fillText(this.text, x, y);\n    this.context.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements chord symbols as modifiers that can be attached to\n// notes.  Chord symbols can contain multiple 'blocks' which can contain\n// text or glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.js` for usage examples.\nimport {Glyph} from './glyph';\nimport {Modifier} from './modifier';\nimport {PetalumaScriptTextMetrics} from './fonts/petalumascript_textmetrics';\nimport {RobotoSlabTextMetrics} from './fonts/robotoslab_textmetrics';\nimport {ICodeValue, ISymbolBlock} from \"./types/common\";\nimport {StemmableNote} from \"./stemmablenote\";\nimport {IFont} from \"./types/font\";\nimport {DefaultFontStack} from \"./smufl\";\nimport {LOG, TEXT_HEIGHT_OFFSET_HACK} from \"./flow\";\nimport {RuntimeError} from \"./runtimeerror\";\n\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (ChordSymbol.DEBUG) LOG('Vex.Flow.ChordSymbol', args);\n}\n\nexport enum HorizontalJustify {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3,\n  CENTER_STEM = 4\n}\n\nexport enum VerticalJustify {\n  TOP = 1,\n  BOTTOM = 2\n}\n\nexport enum SymbolTypes {\n  GLYPH = 1,\n  TEXT = 2,\n  LINE = 3\n}\n\nexport enum SymbolModifiers {\n  NONE = 1,\n  SUBSCRIPT = 2,\n  SUPERSCRIPT = 3\n}\n\nexport class ChordSymbol extends Modifier {\n  note: StemmableNote;\n\n  private static debug: boolean;\n  private static noFormat: boolean;\n\n  private readonly symbolBlocks: ISymbolBlock[];\n\n  private horizontal: HorizontalJustify;\n  private vertical: VerticalJustify;\n  private useKerning: boolean;\n  private font: IFont;\n  private text: string;\n\n  static get CATEGORY(): string {\n    return 'chordSymbol';\n  }\n\n  // Chord symbols can be positioned and justified relative to the note.\n  static get horizontalJustify(): typeof HorizontalJustify {\n    return HorizontalJustify;\n  }\n\n  static get horizontalJustifyString(): Record<string, number> {\n    return {\n      left: ChordSymbol.horizontalJustify.LEFT,\n      right: ChordSymbol.horizontalJustify.RIGHT,\n      center: ChordSymbol.horizontalJustify.CENTER,\n      centerStem: ChordSymbol.horizontalJustify.CENTER_STEM,\n    };\n  }\n\n  static get verticalJustify(): typeof VerticalJustify {\n    return VerticalJustify;\n  }\n\n  static get superSubRatio(): any {\n    return ChordSymbol.chordSymbolMetrics.global.superSubRatio;\n  }\n\n  static get DEBUG(): boolean {\n    return ChordSymbol.debug;\n  }\n\n  static set DEBUG(val: boolean) {\n    ChordSymbol.debug = val;\n  }\n\n  // ### NOTEXTFORMAT\n  // used to globally turn off text formatting, if the built-in formatting does not\n  // work for your font..\n  static get NOTEXTFORMAT(): boolean {\n    return typeof (ChordSymbol.noFormat) === 'undefined' ? false : ChordSymbol.noFormat;\n  }\n\n  static set NOTEXTFORMAT(val: boolean) {\n    ChordSymbol.noFormat = val;\n  }\n\n\n  static get verticalJustifyString(): Record<string, number> {\n    return {\n      top: ChordSymbol.verticalJustify.TOP,\n      above: ChordSymbol.verticalJustify.TOP,\n      below: ChordSymbol.verticalJustify.BOTTOM,\n      bottom: ChordSymbol.verticalJustify.BOTTOM\n    };\n  }\n\n  static getMetricForGlyph(glyphCode: string): any {\n    if (ChordSymbol.chordSymbolMetrics[glyphCode]) {\n      return ChordSymbol.chordSymbolMetrics[glyphCode];\n    }\n    return null;\n  }\n\n  static get textMetricsForEngravingFont(): Record<string, any> {\n    if (DefaultFontStack[0].name === 'Petaluma') {\n      return PetalumaScriptTextMetrics;\n    } else {\n      return RobotoSlabTextMetrics;\n    }\n  }\n\n  static getMetricForCharacter(c: string): any {\n    if (ChordSymbol.NOTEXTFORMAT) {\n      return null;\n    }\n    if (ChordSymbol.textMetricsForEngravingFont.glyphs[c]) {\n      return ChordSymbol.textMetricsForEngravingFont.glyphs[c];\n    }\n    return null;\n  }\n\n  static getYOffsetForText(text: string): number {\n    let acc = 0;\n    let ix = 0;\n    const resolution = ChordSymbol.textMetricsForEngravingFont.resolution;\n    for (ix = 0; ix < text.length; ++ix) {\n      const metric = ChordSymbol.getMetricForCharacter(text[ix]);\n\n      if (metric) {\n        acc = metric.y < acc ? metric.y : acc;\n      }\n    }\n\n    return ix > 0 ? -1 * (acc / resolution) : 0;\n  }\n\n  static get engravingFontResolution(): any {\n    return DefaultFontStack[0].getResolution();\n  }\n\n  static get spacingBetweenBlocks(): number {\n    return ChordSymbol.chordSymbolMetrics.global.spacing / ChordSymbol.engravingFontResolution;\n  }\n\n  static getWidthForCharacter(c: string): number {\n    const resolution = ChordSymbol.textMetricsForEngravingFont.resolution;\n    const metric = ChordSymbol.getMetricForCharacter(c);\n    if (!metric) {\n      return 0.65;\n    }\n    return metric.advanceWidth / resolution;\n  }\n\n  static getWidthForGlyph(glyph: Glyph): number {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0.65;  // probably should do something here.\n    }\n    return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n  }\n\n  static getYShiftForGlyph(glyph: Glyph): number {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0;\n    }\n    return metric.yOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static getXShiftForGlyph(glyph: Glyph): number {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0;\n    }\n    return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n  }\n\n  static get superscriptOffset(): number {\n    return ChordSymbol.chordSymbolMetrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static get subscriptOffset(): number {\n    return ChordSymbol.chordSymbolMetrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static get kerningOffset(): number {\n    return ChordSymbol.chordSymbolMetrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  // Glyph data\n  static get glyphs(): Record<string, ICodeValue> {\n    return {\n      'diminished': {\n        code: 'csymDiminished',\n      },\n      'dim': {\n        code: 'csymDiminished',\n      },\n      'halfDiminished': {\n        code: 'csymHalfDiminished',\n      },\n      '+': {\n        code: 'csymAugmented',\n      },\n      'augmented': {\n        code: 'csymAugmented',\n      },\n      'majorSeventh': {\n        code: 'csymMajorSeventh',\n      },\n      'minor': {\n        code: 'csymMinor',\n      },\n      '-': {\n        code: 'csymMinor',\n      },\n      '(': {\n        code: 'csymParensLeftTall',\n      },\n      'leftParen': {\n        code: 'csymParensLeftTall',\n      },\n      ')': {\n        code: 'csymParensRightTall',\n      },\n      'rightParen': {\n        code: 'csymParensRightTall',\n      },\n      'leftBracket': {\n        code: 'csymBracketLeftTall',\n      },\n      'rightBracket': {\n        code: 'csymBracketRightTall',\n      },\n      'leftParenTall': {\n        code: 'csymParensLeftVeryTall',\n      },\n      'rightParenTall': {\n        code: 'csymParensRightVeryTall',\n      },\n      '/': {\n        code: 'csymDiagonalArrangementSlash',\n      },\n      'over': {\n        code: 'csymDiagonalArrangementSlash',\n      },\n      '#': {\n        code: 'accidentalSharp',\n      },\n      'b': {\n        code: 'accidentalFlat',\n      }\n    };\n  }\n\n  static get symbolTypes(): typeof SymbolTypes {\n    return SymbolTypes;\n  }\n\n  static get symbolModifiers(): typeof SymbolModifiers {\n    return SymbolModifiers;\n  }\n\n  static get chordSymbolMetrics(): any {\n    return DefaultFontStack[0].metrics.glyphs.chordSymbol;\n  }\n\n  static get lowerKerningText(): string[] {\n    return DefaultFontStack[0].metrics.glyphs.chordSymbol.global.lowerKerningText;\n  }\n\n  static get upperKerningText(): string[] {\n    return DefaultFontStack[0].metrics.glyphs.chordSymbol.global.upperKerningText;\n  }\n\n  // ### format\n  // try to estimate the width of the whole chord symbol, based on the\n  // sum of the widths of the individual blocks.  Also estimate how many\n  // lines above/below the staff we need`\n  static format(instances: any[], state: any): boolean {\n    if (!instances || instances.length === 0) return false;\n\n    let width = 0;\n    let nonSuperWidth = 0;\n\n    for (let i = 0; i < instances.length; ++i) {\n      const instance = instances[i];\n      const fontAdj = instance.font.size / 20;\n      const glyphAdj = fontAdj * 2;\n      let lineSpaces = 1;\n      let vAlign = false;\n\n      for (let j = 0; j < instance.symbolBlocks.length; ++j) {\n        const symbol = instance.symbolBlocks[j];\n        const sup = instance.isSuperscript(symbol);\n        const sub = instance.isSubscript(symbol);\n        const subAdj = (sup || sub) ? ChordSymbol.superSubRatio : 1;\n        const adj = symbol.symbolType === ChordSymbol.symbolTypes.GLYPH ? glyphAdj * subAdj : fontAdj * subAdj;\n\n        // If there are super/subscripts, they extend beyond the line so\n        // assume they take up 2 lines\n        if (sup || sub) {\n          lineSpaces = 2;\n        }\n\n        // If there is a symbol-specific offset, add it but consider font\n        // size since font and glyphs will be interspersed\n        if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH) {\n          symbol.yShift += ChordSymbol.getYShiftForGlyph(symbol.glyph) * instance.pointsToPixels * subAdj;\n          symbol.xShift += ChordSymbol.getXShiftForGlyph(symbol.glyph) * instance.pointsToPixels * subAdj;\n          symbol.glyph.scale = symbol.glyph.scale * adj;\n          symbol.width = ChordSymbol.getWidthForGlyph(symbol.glyph) * instance.pointsToPixels * subAdj;\n        } else if (symbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n          symbol.width = symbol.width * instance.pointsToPixels * subAdj;\n          symbol.yShift += ChordSymbol.getYOffsetForText(symbol.text) * adj;\n        }\n\n        if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH &&\n          symbol.glyph.code === ChordSymbol.glyphs.over.code) {\n          lineSpaces = 2;\n        }\n        symbol.width += ChordSymbol.spacingBetweenBlocks * instance.pointsToPixels * subAdj;\n\n        // If a subscript immediately  follows a superscript block, try to\n        // overlay them.\n        if (sup && j > 0) {\n          const prev = instance.symbolBlocks[j - 1];\n          if (!instance.isSuperscript(prev)) {\n            nonSuperWidth = width;\n          }\n        }\n        if (sub && nonSuperWidth > 0) {\n          vAlign = true;\n          // slide the symbol over so it lines up with superscript\n          symbol.xShift = symbol.xShift + (nonSuperWidth - width);\n          width = nonSuperWidth;\n          nonSuperWidth = 0;\n          // If we have vertically lined up, turn kerning off.\n          instance.setEnableKerning(false);\n        }\n        if (!sup && !sub) {\n          nonSuperWidth = 0;\n        }\n        symbol.vAlign = vAlign;\n        width += symbol.width;\n      }\n\n      // make kerning adjustments after computing super/subscripts\n      instance.updateKerningAdjustments();\n      instance.updateOverBarAdjustments();\n\n      if (instance.getVertical() === ChordSymbol.verticalJustify.TOP) {\n        instance.setTextLine(state.top_text_line);\n        state.top_text_line += lineSpaces;\n      } else {\n        instance.setTextLine(state.text_line + 1);\n        state.text_line += lineSpaces + 1;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // chordSymbol is a modifier that creates a chord symbol above/below a chord\n  // This is the modifier version, meaning it is attached to an existing note.\n  constructor() {\n    super();\n    this.setAttribute('type', 'ChordSymbol');\n    this.note = null;\n    this.index = null;\n    this.symbolBlocks = [];\n    this.horizontal = ChordSymbol.horizontalJustify.LEFT;\n    this.vertical = ChordSymbol.verticalJustify.TOP;\n    this.useKerning = true;\n\n    let fontFamily = 'Arial';\n    if (this.musicFont.name === 'Petaluma') {\n      fontFamily = 'petalumaScript,Arial';\n    } else {\n      fontFamily = 'Roboto Slab,Times';\n    }\n    this.font = {\n      family: fontFamily,\n      size: 12,\n      weight: '',\n    } as IFont;\n  }\n\n  // ### pointsToPixels\n  // The font size is specified in points, convert to 'pixels' in the svg space\n  get pointsToPixels(): number {\n    return (this.font.size / 72) / (1 / 96);\n  }\n\n  get superscriptOffset(): number {\n    return ChordSymbol.superscriptOffset * this.pointsToPixels;\n  }\n\n  get subscriptOffset(): number {\n    return ChordSymbol.subscriptOffset * this.pointsToPixels;\n  }\n\n  updateOverBarAdjustments(): void {\n    let symIx = 0;\n    const barIx = this.symbolBlocks.findIndex((symbol) =>\n      symbol.symbolType === ChordSymbol.symbolTypes.GLYPH &&\n      symbol.glyph.code === 'csymDiagonalArrangementSlash');\n\n    if (barIx < 0) {\n      return;\n    }\n    const bar = this.symbolBlocks[barIx];\n    const xoff = bar.width / 4;\n    const yoff = 0.25 * this.pointsToPixels;\n    for (symIx === 0; symIx < barIx; ++symIx) {\n      const symbol = this.symbolBlocks[symIx];\n      symbol.xShift = symbol.xShift + xoff;\n      symbol.yShift = symbol.yShift - yoff;\n    }\n\n    for (symIx = barIx + 1; symIx < this.symbolBlocks.length; ++symIx) {\n      const symbol = this.symbolBlocks[symIx];\n      symbol.xShift = symbol.xShift - xoff;\n      symbol.yShift = symbol.yShift + yoff;\n    }\n  }\n\n  updateKerningAdjustments(): void {\n    let accum = 0;\n    for (let j = 0; j < this.symbolBlocks.length; ++j) {\n      const symbol = this.symbolBlocks[j];\n      accum += this.getKerningAdjustment(j);\n      symbol.xShift += accum;\n    }\n  }\n\n  // ### getKerningAdjustment\n  // Do some very basic kerning so that letter chords like 'A' don't have\n  // the extensions hanging off to the right.\n  getKerningAdjustment(j: number): number {\n    if (!this.useKerning) {\n      return 0;\n    }\n    const symbol = this.symbolBlocks[j];\n    const kernConst = ChordSymbol.kerningOffset * this.pointsToPixels;\n    const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : null;\n    let rv = 0;\n\n    // Move things into the '/' over bar\n    if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH &&\n      symbol.glyph.code === ChordSymbol.glyphs.over.code) {\n      rv += symbol.glyph.metrics.x_shift;\n    }\n\n    if (prevSymbol !== null &&\n      prevSymbol.symbolType === ChordSymbol.symbolTypes.GLYPH &&\n      prevSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n      rv += prevSymbol.glyph.metrics.x_shift;\n    }\n\n    // For superscripts that follow a letter without much top part, move it to the\n    // left slightly\n    let preKernUpper = false;\n    let preKernLower = false;\n    if (prevSymbol != null && prevSymbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n      preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n      preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n    }\n\n    // TODO: adjustkern for  for font size.\n    // Where should this constant live?\n    if (preKernUpper && symbol.symbolModifier === ChordSymbol.symbolModifiers.SUPERSCRIPT) {\n      rv += kernConst;\n    }\n\n    if (preKernLower && symbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n      if (symbol.text[0] >= 'a' && symbol.text[0] <= 'z') {\n        rv += kernConst / 2;\n      }\n      if (ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1])) {\n        rv += kernConst / 2;\n      }\n    }\n    return rv;\n  }\n\n  // ### getSymbolBlock\n  // ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n  // Each block can have its own vertical orientation\n  getSymbolBlock(parameters: any): any {\n    parameters = parameters == null ? {} : parameters;\n    const symbolType = (parameters.symbolType ? parameters.symbolType : ChordSymbol.symbolTypes.TEXT);\n    const text = parameters.text ? parameters.text : '';\n    const symbolModifier = parameters.symbolModifier ? parameters.symbolModifier : ChordSymbol.symbolModifiers.NONE;\n    const xShift = 0;\n    const yShift = 0;\n    const vAlign = 0;\n\n    const rv = {\n      text, symbolType, symbolModifier, xShift, yShift, vAlign\n    } as any;\n\n    rv.width = 0;\n    // Note: all symbol widths are resolution and font-independent.  We convert to\n    // pixel values when we know what the font is.\n    if (symbolType === ChordSymbol.symbolTypes.GLYPH && typeof (parameters.glyph) === 'string') {\n      const glyphArgs = ChordSymbol.glyphs[parameters.glyph];\n      const glyphPoints = 20;\n      rv.glyph = new Glyph(glyphArgs.code, glyphPoints, {category: 'chordSymbol'});\n      // Beware: glyph.metrics is not the same as glyph.getMetrics() !\n      // rv.glyph.point = rv.glyph.point * rv.glyph.metrics.scale;\n      // rv.width = rv.glyph.getMetrics().width;\n      // don't set yShift here, b/c we need to do it at formatting time after the font is set.\n    } else if (symbolType === ChordSymbol.symbolTypes.TEXT) {\n      let twidth = 0;\n      for (let i = 0; i < rv.text.length; ++i) {\n        twidth += ChordSymbol.getWidthForCharacter(rv.text[i]);\n      }\n      rv.width = twidth;\n    } else if (symbolType === ChordSymbol.symbolTypes.LINE) {\n      rv.width = parameters.width;\n    }\n\n    return rv;\n  }\n\n  // ### addSymbolBlock\n  // Add a symbol to this chord, could be text, glyph or line.\n  addSymbolBlock(parameters: any): this {\n    this.symbolBlocks.push(this.getSymbolBlock(parameters));\n    return this;\n  }\n\n  // ### Convenience functions follow that let you create different types of\n  // chord symbol parts easily\n  // ### addText\n  // Add a text block\n  addText(text: string, parameters: any): this {\n    parameters = parameters == null ? {} : parameters;\n    parameters.text = text;\n    parameters.symbolType = ChordSymbol.symbolTypes.TEXT;\n    return this.addSymbolBlock(parameters);\n  }\n\n  // ### addTextSuperscript\n  // add a text block with superscript modifier\n  addTextSuperscript(text: string): this {\n    const symbolType = ChordSymbol.symbolTypes.TEXT;\n    const symbolModifier = ChordSymbol.symbolModifiers.SUPERSCRIPT;\n    return this.addSymbolBlock({text, symbolType, symbolModifier});\n  }\n\n  // ### addTextSubscript\n  // add a text block with subscript modifier\n  addTextSubscript(text: string): this {\n    const symbolType = ChordSymbol.symbolTypes.TEXT;\n    const symbolModifier = ChordSymbol.symbolModifiers.SUBSCRIPT;\n    return this.addSymbolBlock({text, symbolType, symbolModifier});\n  }\n\n  // ### addGlyphSuperscript\n  // add a glyph block with superscript modifier\n  addGlyphSuperscript(glyph: Glyph): this {\n    const symbolType = ChordSymbol.symbolTypes.GLYPH;\n    const symbolModifier = ChordSymbol.symbolModifiers.SUPERSCRIPT;\n    return this.addSymbolBlock({glyph, symbolType, symbolModifier});\n  }\n\n  addGlyph(glyph: string, parameters: any): this {\n    parameters = parameters == null ? {} : parameters;\n    parameters.glyph = glyph;\n    parameters.symbolType = ChordSymbol.symbolTypes.GLYPH;\n    return this.addSymbolBlock(parameters);\n  }\n\n  // ### addGlyphOrText\n  // Add a glyph for each character in 'text'.  If the glyph is not\n  // available, use text from the font.  E.g.:\n  // `addGlyphOrText(\"(+5#11)\")`\n  // will use text for the '5' and '11', and glyphs for everything else.\n  addGlyphOrText(text: string[], parameters: any): this {\n    parameters = parameters == null ? {} : parameters;\n    let str = '';\n    for (let i = 0; i < text.length; ++i) {\n      if (ChordSymbol.glyphs[text[i]]) {\n        if (str.length > 0) {\n          this.addText(str, parameters);\n          str = '';\n        }\n        this.addGlyph(text[i], parameters);\n      } else {\n        str += text[i];\n      }\n    }\n    if (str.length > 0) {\n      this.addText(str, parameters);\n    }\n    return this;\n  }\n\n  // ### Add a line of the given width, used as a continuation of the previous\n  // symbol in analysis, or lyrics, etc.\n  addLine(width: number, parameters: any): this {\n    parameters = parameters == null ? {} : parameters;\n    parameters.symbolType = ChordSymbol.symbolTypes.LINE;\n    parameters.width = width;\n    return this.addSymbolBlock(parameters);\n  }\n\n  getCategory(): string {\n    return ChordSymbol.CATEGORY;\n  }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family: string, size: number, weight: string): this {\n    this.font = {family, size, weight} as IFont;\n    return this;\n  }\n\n  setFontSize(size: number): this {\n    this.font.size = size;\n    return this;\n  }\n\n  setEnableKerning(val: boolean): this {\n    this.useKerning = val;\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `ChordSymbol.vertical`.\n  setVertical(just: number): this {\n    this.vertical = typeof (just) === 'string'\n      ? ChordSymbol.verticalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  getVertical(): number {\n    return this.vertical;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `ChordSymbol.Justify`.\n  setHorizontal(just: number): this {\n    this.horizontal = typeof (just) === 'string'\n      ? ChordSymbol.horizontalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  getWidth(): number {\n    let rv = 0;\n    this.symbolBlocks.forEach((symbol) => {\n      rv += symbol.vAlign ? 0 : symbol.width;\n    });\n    return rv;\n  }\n\n  isSuperscript(symbol: any): boolean {\n    return symbol.symbolModifier !== null && symbol.symbolModifier === ChordSymbol.symbolModifiers.SUPERSCRIPT;\n  }\n\n  isSubscript(symbol: any): boolean {\n    return symbol.symbolModifier !== null && symbol.symbolModifier === ChordSymbol.symbolModifiers.SUBSCRIPT;\n  }\n\n  // Render text and glyphs above/below the note\n  draw(): void {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.note) {\n      throw new RuntimeError(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n    const classString = Object.keys(this.getAttribute('classes')).join(' ');\n    this.context.openGroup(classString, this.getAttribute('id'));\n\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n      this.index);\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n\n    let y: number;\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vertical === ChordSymbol.verticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else { // (this.vertical === ChordSymbol.verticalJustify.TOP)\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    }\n\n    let x = start.x;\n    if (this.horizontal === ChordSymbol.horizontalJustify.LEFT) {\n      x = start.x;\n    } else if (this.horizontal === ChordSymbol.horizontalJustify.RIGHT) {\n      x = start.x + this.getWidth();\n    } else if (this.horizontal === ChordSymbol.horizontalJustify.CENTER) {\n      x = start.x - this.getWidth() / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() - this.getWidth() / 2;\n    }\n    L('Rendering ChordSymbol: ', this.text, x, y);\n\n    this.symbolBlocks.forEach((symbol) => {\n      const sp = this.isSuperscript(symbol);\n      const sub = this.isSubscript(symbol);\n      let curY = y;\n      L('shift was ', symbol.xShift, symbol.yShift);\n      L('curY pre sub ', curY);\n      if (sp) {\n        curY += this.superscriptOffset;\n      }\n      if (sub) {\n        curY += this.subscriptOffset;\n      }\n      L('curY sup/sub ', curY);\n\n      if (symbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n        if (sp || sub) {\n          this.context.save();\n          this.context.setFont(this.font.family, this.font.size * ChordSymbol.superSubRatio, this.font.weight);\n        }\n        // We estimate the text width, fill it in with the empirical value so the\n        // formatting is even.\n        /* const textDim = this.context.measureText(symbol.text);\n        symbol.width = textDim.width; */\n        L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n\n        this.context.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n        if (sp || sub) {\n          this.context.restore();\n        }\n      } else if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH) {\n        curY += symbol.yShift;\n        L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n        symbol.glyph.render(this.context, x + symbol.xShift, curY);\n      } else if (symbol.symbolType === ChordSymbol.symbolTypes.LINE) {\n        L('Rendering Line : ', symbol.width, x, curY);\n        this.context.beginPath();\n        this.context.setLineWidth(1); // ?\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + symbol.width, curY);\n        this.context.stroke();\n      }\n\n      x += symbol.width;\n      if (symbol.vAlign) {\n        x += symbol.xShift;\n      }\n    });\n    this.context.closeGroup();\n    this.context.restore();\n  }\n\n  //TODO: This was added during typescript migration to avoid compilation errors. Remove?\n  setHorizontalJustification(hJustify: any): void {\n    throw new Error('method setHorizontalJustification does not exist');\n  }\n\n  //TODO: This was added during typescript migration to avoid compilation errors. Remove?\n  setVerticalJustification(vJustify: any): void {\n    throw new Error('method setVerticalJustification does not exist');\n  }\n\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements tablature bends.\nimport {Modifier} from './modifier';\nimport {IBendRenderOptions, IPhrase, IState} from \"./types/common\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {textWidth} from \"./flow\";\n\n/**\n @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n @param release If true, render a release. (DEPRECATED)\n @param phrase If set, ignore \"text\" and \"release\", and use the more\n sophisticated phrase specified.\n\n Example of a phrase:\n\n    [{\n      type: UP,\n      text: \"whole\"\n      width: 8;\n    },\n    {\n      type: DOWN,\n      text: \"whole\"\n      width: 8;\n    },\n    {\n      type: UP,\n      text: \"half\"\n      width: 8;\n    },\n    {\n      type: UP,\n      text: \"whole\"\n      width: 8;\n    },\n    {\n      type: DOWN,\n      text: \"1 1/2\"\n      width: 8;\n    }]\n */\nexport class Bend extends Modifier {\n  private readonly text: string;\n  private readonly release: boolean;\n  private readonly phrase: IPhrase[];\n\n  private font: string;\n  private render_options: IBendRenderOptions;\n\n  static get CATEGORY(): string {\n    return 'bends';\n  }\n\n  static get UP(): number {\n    return 0;\n  }\n\n  static get DOWN(): number {\n    return 1;\n  }\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  static format(bends: Bend[], state: IState): boolean {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Bends are always on top.\n    const text_line = state.top_text_line;\n\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor(text: string, release: boolean, phrase: IPhrase[]) {\n    super();\n    this.setAttribute('type', 'Bend');\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release || false;\n    this.font = '10pt Arial';\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{type: Bend.UP, text: this.text} as IPhrase];\n      if (this.release) this.phrase.push({type: Bend.DOWN, text: ''} as IPhrase);\n    }\n\n    this.updateWidth();\n  }\n\n  getCategory(): string {\n    return Bend.CATEGORY;\n  }\n\n  setXShift(value: number): void {\n    this.x_shift = value;\n    this.updateWidth();\n  }\n\n  setFont(font: string): this {\n    this.font = font;\n    return this;\n  }\n\n  getText(): string {\n    return this.text;\n  }\n\n  updateWidth(): this {\n    const measure_text = (text: string) => {\n      let text_width;\n      if (this.context) {\n        text_width = this.context.measureText(text).width;\n      } else {\n        text_width = textWidth(text);\n      }\n\n      return text_width;\n    };\n\n    let total_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend: any = this.phrase[i];\n      if ('width' in bend) {\n        total_width += bend.width;\n      } else {\n        const additional_width = (bend.type === Bend.UP) ?\n          this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Math.max(additional_width, measure_text(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        total_width += bend.width;\n      }\n    }\n\n    this.setWidth(total_width + this.x_shift);\n    return this;\n  }\n\n  draw(): void {\n    this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new RuntimeError('NoNoteForBend', \"Can't draw bend without a note or index.\");\n    }\n\n    this.setRendered();\n\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT,\n      this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const ctx = this.context;\n    const bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n    const annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n\n    const renderBend = (x: number, y: number, width: number, height: number) => {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(this.render_options.line_width);\n      ctx.setStrokeStyle(this.render_options.line_style);\n      ctx.setFillStyle(this.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    const renderRelease = (x: number, y: number, width: number, height: number) => {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(this.render_options.line_width);\n      ctx.setStrokeStyle(this.render_options.line_style);\n      ctx.setFillStyle(this.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(\n        x + width, height,\n        x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderArrowHead(x: number, y: number, direction?: number) {\n      const width = 4;\n      const dir = direction || 1;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x - width, y + width * dir);\n      ctx.lineTo(x + width, y + width * dir);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    const renderText = (x: number, text: string) => {\n      ctx.save();\n      ctx.setRawFont(this.font);\n      const render_x = x - (ctx.measureText(text).width / 2);\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    }\n\n    let last_bend = null;\n    let last_drawn_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width +\n        (last_bend ? last_bend.draw_width : 0) -\n        (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend === null) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements vibratos.\nimport {Modifier} from './modifier';\nimport {Bend} from './bend';\nimport {DrawContext, IVibratoRenderOptions} from \"./types/common\";\nimport {ModifierContext} from \"./modifiercontext\";\nimport {IVibratoState} from \"./types/vibrato\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class Vibrato extends Modifier {\n  private readonly render_options: IVibratoRenderOptions;\n\n  static get CATEGORY(): string {\n    return 'vibratos';\n  }\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  static format(vibratos: Vibrato[], state: IVibratoState, context: ModifierContext): boolean {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getModifiers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n\n  getCategory(): string {\n    return Vibrato.CATEGORY;\n  }\n\n  setHarsh(harsh: boolean): Vibrato {\n    this.render_options.harsh = harsh;\n    return this;\n  }\n\n  setVibratoWidth(width: number): Vibrato {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n\n    if (!this.note) {\n      throw new RuntimeError('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = this.note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  // Static rendering method that can be called from\n  // other classes (e.g. VibratoBracket)\n  static renderVibrato(ctx: DrawContext, x: number, y: number, opts: IVibratoRenderOptions): void {\n    const {harsh, vibrato_width, wave_width, wave_girth, wave_height} = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - (wave_height / 2));\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + (wave_height / 2));\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y + (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y - (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport {Element} from './element';\nimport {Barline} from './stavebarline';\nimport {StaveModifier} from './stavemodifier';\nimport {Repetition} from './staverepetition';\nimport {StaveSection} from './stavesection';\nimport {StaveTempo} from './stavetempo';\nimport {StaveText} from './stavetext';\nimport {BoundingBox} from './boundingbox';\nimport {Clef} from './clef';\nimport {KeySignature} from './keysignature';\nimport {TimeSignature} from './timesignature';\nimport {Volta} from './stavevolta';\nimport {\n  IBounds,\n  IStyle,\n  ITempo\n} from \"./types/common\";\nimport {IFont} from \"./types/font\";\nimport {IStaveLineConfig, IStaveOptions, IStaveTextOptions} from \"./types/stave\";\nimport {Merge, STAVE_LINE_THICKNESS} from \"./flow\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class Stave extends Element {\n  x: number;\n  start_x: number;\n  clef: string;\n  options: IStaveOptions;\n  endClef: string;\n  width: number;\n  height: number;\n  y: number;\n\n  private formatted: boolean;\n  private end_x: number;\n  private measure: number;\n  private font: IFont;\n  private bounds: IBounds;\n  private readonly modifiers: StaveModifier[];\n\n  constructor(x: number, y: number, width: number, options?: IStaveOptions) {\n    super();\n    this.setAttribute('type', 'Stave');\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = [];  // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.endClef = undefined;\n    this.font = {\n      family: 'sans-serif',\n      size: 8,\n      weight: '',\n    } as IFont;\n    this.options = {\n      vertical_bar_width: 10,       // Width around vertical bar end-marker\n      glyph_spacing_px: 10,\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true,               // draw vertical bar on left\n      right_bar: true,               // draw vertical bar on right\n      spacing_between_lines_px: 10, // in pixels\n      space_above_staff_ln: 4,      // in staff lines\n      space_below_staff_ln: 4,      // in staff lines\n      top_text_position: 1,          // in staff lines\n    } as IStaveOptions;\n    this.bounds = {x: this.x, y: this.y, w: this.width, h: 0};\n    Merge(this.options, options);\n\n    this.resetLines();\n\n    const BARTYPE = Barline.type;\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n  }\n\n  space(spacing: number): number {\n    return this.options.spacing_between_lines_px * spacing;\n  }\n\n  resetLines(): void {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({visible: true});\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) *\n      this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  getOptions(): IStaveOptions {\n    return this.options;\n  }\n\n  setNoteStartX(x: number): this {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    const begBarline = this.modifiers[0];\n    begBarline.setX(this.start_x - begBarline.getWidth());\n    return this;\n  }\n\n  getNoteStartX(): number {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX(): number {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n\n  getTieStartX(): number {\n    return this.start_x;\n  }\n\n  getTieEndX(): number {\n    return this.x + this.width;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getNumLines(): number {\n    return this.options.num_lines;\n  }\n\n  setNumLines(lines: string): this {\n    this.options.num_lines = parseInt(lines, 10);\n    this.resetLines();\n    return this;\n  }\n\n  setY(y: number): this {\n    this.y = y;\n    return this;\n  }\n\n  getTopLineTopY(): number {\n    return this.getYForLine(0) - (STAVE_LINE_THICKNESS / 2);\n  }\n\n  getBottomLineBottomY(): number {\n    return this.getYForLine(this.getNumLines() - 1) + (STAVE_LINE_THICKNESS / 2);\n  }\n\n  setX(x: number): this {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      if (mod.x !== undefined) {\n        mod.x += shift;\n      }\n    }\n    return this;\n  }\n\n  setWidth(width: number): this {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  getStyle(): IStyle {\n    return {\n      fillStyle: this.options.fill_style,\n      strokeStyle: this.options.fill_style, // yes, this is correct for legacy compatibility\n      lineWidth: STAVE_LINE_THICKNESS, ...(this.style as IStyle) || {}\n    } as IStyle;\n  }\n\n  setMeasure(measure: number): this {\n    this.measure = measure;\n    return this;\n  }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index = 0): number {\n    if (typeof index !== 'number') {\n      throw new RuntimeError('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n      return 0;\n    }\n\n    // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n    if (this.modifiers[index].getPosition() === StaveModifier.Position.RIGHT) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0] as Barline;\n    if (begBarline.getType() === Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  // Coda & Segno Symbol functions\n  setRepetitionTypeLeft(type: number, y: number): this {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  setRepetitionTypeRight(type: number, y: number): this {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type: number, number_t: string, y: number): this {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section: string, y: number): this {\n    this.modifiers.push(new StaveSection(section, this.x, y));\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo: ITempo, y: number): this {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(text: string, position: number, options: IStaveTextOptions): this {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  getSpacingBetweenLines(): number {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox(): BoundingBox {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY(): number {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n\n    return this.getYForLine(options.num_lines) +\n      (options.space_below_staff_ln * spacing);\n  }\n\n  getBottomLineY(): number {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns the y for the *center* of a staff line\n  getYForLine(line: number): number {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    return this.y + (line * spacing) + (headroom * spacing);\n  }\n\n  getLineForY(y: number): number {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return ((y - this.y) / spacing) - headroom;\n  }\n\n  getYForTopText(line?: number): number {\n    const l = line || 0;\n    return this.getYForLine(-l - this.options.top_text_position);\n  }\n\n  getYForBottomText(line: number): number {\n    const l = line || 0;\n    return this.getYForLine(this.options.bottom_text_position + l);\n  }\n\n  getYForNote(line: number): number {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    return this.y + (headroom * spacing) + (5 * spacing) - (line * spacing);\n  }\n\n  getYForGlyphs(): number {\n    return this.getYForLine(3);\n  }\n\n  // This method adds a stave modifier to the stave. Note that the first two\n  // modifiers (BarLines) are automatically added upon construction.\n  addModifier(modifier: StaveModifier, position?: number): this {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier: StaveModifier): this {\n    this.addModifier(modifier, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type: number): this {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const {SINGLE, REPEAT_BEGIN, NONE} = Barline.type;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      (this.modifiers[0] as Barline).setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type: number | string): this {\n    // Repeat end not valid at end of stave\n    if (type !== Barline.type.REPEAT_BEGIN) {\n      (this.modifiers[1] as Barline).setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setClef(clefSpec: string, size: string, annotation: string, position: number): this {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    if (position === StaveModifier.Position.END) {\n      this.endClef = clefSpec;\n    } else {\n      this.clef = clefSpec;\n    }\n\n    const clefs = this.getModifiers(position, Clef.CATEGORY);\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      (clefs[0] as Clef).setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  setEndClef(clefSpec: string, size: string, annotation: string): this {\n    this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  setKeySignature(keySpec: string, cancelKeySpec: string, position: number): this {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, position);\n    } else {\n      (keySignatures[0] as KeySignature).setKeySig(keySpec, cancelKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec: string, cancelKeySpec: string): this {\n    this.setKeySignature(keySpec, cancelKeySpec, StaveModifier.Position.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec: string, customPadding: number, position: number): this {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      (timeSignatures[0] as TimeSignature).setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec: string, customPadding: number): this {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  addKeySignature(keySpec: string, cancelKeySpec: string, position: number): this {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec)\n      .setPosition(position), position);\n    return this;\n  }\n\n  addClef(clef: string, size?: string, annotation?: string, position?: number): this {\n    if (position === undefined || position === StaveModifier.Position.BEGIN) {\n      this.clef = clef;\n    } else if (position === StaveModifier.Position.END) {\n      this.endClef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef: string, size: string, annotation: string): this {\n    this.addClef(clef, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  addTimeSignature(timeSpec: string, customPadding?: number, position?: number): this {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec: string, customPadding: number): this {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph(): this {\n    this.addClef('treble');\n    return this;\n  }\n\n  getModifiers(position: number, category?: string): StaveModifier[] {\n    if (position === undefined && category === undefined) return this.modifiers;\n\n    return this.modifiers.filter(modifier =>\n      (position === undefined || position === modifier.getPosition()) &&\n      (category === undefined || category === modifier.getCategory())\n    );\n  }\n\n  sortByCategory(items: StaveModifier[], order: Record<string, number>): void {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format(): void {\n    const begBarline = this.modifiers[0];\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n    this.sortByCategory(begModifiers, {\n      barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3,\n    });\n\n    this.sortByCategory(endModifiers, {\n      timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3,\n    });\n\n    if (begModifiers.length > 1 &&\n      (begBarline as Barline).getType() === Barline.type.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(Barline.type.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(Barline.type.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    const widths = {\n      left: 0,\n      right: 0,\n      paddingRight: 0,\n      paddingLeft: 0,\n    };\n\n    let lastBarlineIdx = 0;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      lastBarlineIdx = (modifier.getCategory() === 'barlines') ? i : lastBarlineIdx;\n\n      widths.right = 0;\n      widths.left = 0;\n      widths.paddingRight = 0;\n      widths.paddingLeft = 0;\n      const layoutMetrics = modifier.getLayoutMetrics();\n\n      if (layoutMetrics) {\n        if (i !== 0) {\n          widths.right = layoutMetrics.xMax || 0;\n          widths.paddingRight = layoutMetrics.paddingRight || 0;\n        }\n        widths.left = (-layoutMetrics.xMin) || 0;\n        widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n\n        if (i === endModifiers.length - 1) {\n          widths.paddingLeft = 0;\n        }\n      } else {\n        widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n        if (i !== 0) {\n          widths.right = modifier.getWidth();\n        }\n        if (i === 0) {\n          widths.left = modifier.getWidth();\n        }\n      }\n      x -= widths.paddingRight;\n      x -= widths.right;\n\n      modifier.setX(x);\n\n      x -= widths.left;\n      x -= widths.paddingLeft;\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw(): this {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      this.applyStyle();\n      if (this.options.line_config[line].visible) {\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + width, y);\n        this.context.stroke();\n      }\n      this.restoreStyle();\n    }\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      // Only draw modifier if it has a draw function\n      if (typeof this.modifiers[i].draw === 'function') {\n        this.modifiers[i].applyStyle(this.context);\n        this.modifiers[i].draw(this, this.getModifierXShift(i));\n        this.modifiers[i].restoreStyle(this.context);\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      const text_width = this.context.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n      this.context.restore();\n    }\n\n    return this;\n  }\n\n  // Draw Simple barlines for backward compatability\n  // Do not delete - draws the beginning bar of the stave\n  drawVertical(x: number, isDouble: boolean): void {\n    this.drawVerticalFixed(this.x + x, isDouble);\n  }\n\n  drawVerticalFixed(x: number, isDouble: boolean): void {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    if (isDouble) {\n      this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n    }\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  drawVerticalBar(x: number): void {\n    this.drawVerticalBarFixed(this.x + x);\n  }\n\n  drawVerticalBarFixed(x: number): void {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines(): IStaveLineConfig[] {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number: number, line_config: IStaveLineConfig): this {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new RuntimeError(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new RuntimeError(\n        'StaveConfigError',\n        \"The line configuration object is missing the 'visible' property.\"\n      );\n    }\n\n    if (typeof (line_config.visible) !== 'boolean') {\n      throw new RuntimeError(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration: IStaveLineConfig[]): this {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new RuntimeError(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    // eslint-disable-next-line\n    for (const line_config in lines_configuration) {\n      // Allow 'null' to be used if the caller just wants the default for a particular node.\n      if (!lines_configuration[line_config]) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\nimport {StaveModifier} from './stavemodifier';\nimport {Stave} from \"./stave\";\nimport {ILayoutMetrics} from \"./types/common\";\nimport {STAVE_LINE_THICKNESS} from \"./flow\";\n\nexport enum Type {\n  SINGLE = 1,\n  DOUBLE = 2,\n  END = 3,\n  REPEAT_BEGIN = 4,\n  REPEAT_END = 5,\n  REPEAT_BOTH = 6,\n  NONE = 7\n}\n\nexport class Barline extends StaveModifier {\n  private readonly widths: Record<string, number>;\n  private readonly paddings: Record<string, number>;\n  private readonly layoutMetricsMap: Record<number, ILayoutMetrics>;\n\n  private thickness: number;\n  private type: Type;\n\n  static get CATEGORY(): string {\n    return 'barlines';\n  }\n\n  static get type(): typeof Type {\n    return Type;\n  }\n\n  static get typeString(): Record<string, number> {\n    return {\n      single: Barline.type.SINGLE,\n      double: Barline.type.DOUBLE,\n      end: Barline.type.END,\n      repeatBegin: Barline.type.REPEAT_BEGIN,\n      repeatEnd: Barline.type.REPEAT_END,\n      repeatBoth: Barline.type.REPEAT_BOTH,\n      none: Barline.type.NONE,\n    };\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(type: number | string) {\n    super();\n    this.setAttribute('type', 'Barline');\n    this.thickness = STAVE_LINE_THICKNESS;\n\n    const TYPE = Barline.type;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.layoutMetricsMap = {};\n    this.layoutMetricsMap[TYPE.SINGLE] = {\n      xMin: 0,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.DOUBLE] = {\n      xMin: -3,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.END] = {\n      xMin: -5,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_END] = {\n      xMin: -10,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n      xMin: -2,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n      xMin: -10,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.NONE] = {\n      xMin: 0,\n      xMax: 0,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type);\n  }\n\n  getCategory(): string {\n    return Barline.CATEGORY;\n  }\n\n  getType(): number {\n    return this.type;\n  }\n\n  setType(type: string | number): this {\n    this.type = typeof (type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave?: Stave): void {\n    stave.checkContext();\n    this.setRendered();\n\n    switch (this.type) {\n      case Barline.type.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case Barline.type.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case Barline.type.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case Barline.type.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case Barline.type.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case Barline.type.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n  }\n\n  drawVerticalBar(stave: Stave, x: number, double_bar?: boolean): void {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      stave.context.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    stave.context.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave: Stave, x: number): void {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    stave.context.fillRect(x - 5, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave: Stave, x: number, begin: boolean): void {\n    stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = (x + x_shift) + (dot_radius / 2);\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = (y_offset / 2) - (stave.getSpacingBetweenLines() / 2);\n    let dot_y = topY + y_offset + (dot_radius / 2);\n\n    // draw the top repeat dot\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `TextNote` is a notation element that is positioned in time. Generally\n// meant for objects that sit above/below the staff and inline with each other.\n// Examples of this would be such as dynamics, lyrics, chord changes, etc.\nimport {Note} from './note';\nimport {Glyph} from './glyph';\nimport {ICodeValue} from \"./types/common\";\nimport {IStaveNoteStruct} from \"./types/note\";\nimport {IFont} from \"./types/font\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport enum Justification {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3\n}\n\nexport class TextNote extends Note {\n  private readonly text: string;\n  private readonly superscript: string;\n  private readonly subscript: string;\n  private readonly smooth: boolean;\n\n  private font: IFont;\n  private justification: Justification;\n  private line: number;\n\n  static get Justification(): typeof Justification {\n    return Justification;\n  }\n\n  // Glyph data\n  static get GLYPHS(): Record<string, ICodeValue> {\n    return {\n      'segno': {\n        code: 'segno',\n      },\n      'tr': {\n        code: 'ornamentTrill',\n      },\n      'mordent': {\n        code: 'ornamentMordent',\n      },\n      'mordent_upper': {\n        code: 'ornamentShortTrill',\n      },\n      'mordent_lower': {\n        code: 'ornamentMordent',\n      },\n      'f': {\n        code: 'dynamicForte',\n      },\n      'p': {\n        code: 'dynamicPiano',\n      },\n      'm': {\n        code: 'dynamicMezzo',\n      },\n      's': {\n        code: 'dynamicSforzando',\n      },\n      'z': {\n        code: 'dynamicZ',\n      },\n      'coda': {\n        code: 'coda',\n      },\n      'pedal_open': {\n        code: 'keyboardPedalPed',\n      },\n      'pedal_close': {\n        code: 'keyboardPedalUp',\n      },\n      'caesura_straight': {\n        code: 'caesura',\n      },\n      'caesura_curved': {\n        code: 'caesuraCurved',\n      },\n      'breath': {\n        code: 'breathMarkComma',\n      },\n      'tick': {\n        code: 'breathMarkTick',\n      },\n      'turn': {\n        code: 'ornamentTurn',\n      },\n      'turn_inverted': {\n        code: 'ornamentTurnSlash',\n      },\n    };\n  }\n\n  constructor(options: IStaveNoteStruct) {\n    super(options);\n    this.setAttribute('type', 'TextNote');\n\n    // Note properties\n    this.text = options.text;\n    this.superscript = options.superscript;\n    this.subscript = options.subscript;\n    this.glyph = null;\n    this.font = {\n      family: 'Arial',\n      size: 12,\n      weight: '',\n      ...options.font\n    };\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `canvasmeasureText()`\n    if (options.glyph) {\n      const struct = TextNote.GLYPHS[options.glyph];\n      if (!struct) throw new RuntimeError('Invalid glyph type: ' + options.glyph);\n\n      this.glyph = new Glyph(struct.code, 40, {category: 'textNote'});\n      this.setWidth(this.glyph.getMetrics().width);\n    }\n\n    this.line = options.line || 0;\n    this.smooth = options.smooth || false;\n    this.ignore_ticks = options.ignore_ticks || false;\n    this.justification = TextNote.Justification.LEFT;\n  }\n\n  // Set the horizontal justification of the TextNote\n  setJustification(just: number): this {\n    this.justification = just;\n    return this;\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat(): void {\n    this.checkContext();\n\n    if (this.preFormatted) return;\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        this.context.setFont(this.font.family, this.font.size, this.font.weight);\n        this.setWidth(this.context.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      this.leftDisplacedHeadPx = this.width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      this.leftDisplacedHeadPx = this.width;\n    }\n\n    // We reposition to the center of the note head\n    this.rightDisplacedHeadPx = this.tickContext.getMetrics().glyphPx / 2;\n    this.setPreFormatted(true);\n  }\n\n  // Renders the TextNote\n  draw(): void {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new RuntimeError('NoStave', \"Can't draw without a stave.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n\n    // Reposition to center of note head\n    let x = this.getAbsoluteX() + (this.tickContext.getMetrics().glyphPx / 2);\n\n    // Align based on tick-context width.\n    const width = this.getWidth();\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      x -= width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      x -= width;\n    }\n\n    let y;\n    if (this.glyph) {\n      y = this.stave.getYForLine(this.line + -3);\n      (this.glyph as Glyph).render(this.context, x, y);\n    } else {\n      y = this.stave.getYForLine(this.line + -3);\n      this.applyStyle(ctx);\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.text, x, y);\n\n      const height = (ctx.measureText(this.text) as DOMRect).height;\n\n      // Write superscript\n      if (this.superscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.superscript, x + width + 2, y - (height / 2.2));\n      }\n\n      // Write subscript\n      if (this.subscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.subscript, x + width + 2, y + (height / 2.2) - 1);\n      }\n\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n//\n// ## Description\n//\n// This file implements various types of clefs that can be rendered on a stave.\n//\n// See `tests/clef_tests.js` for usage examples.\nimport {StaveModifier} from './stavemodifier';\nimport {Glyph} from './glyph';\nimport {Stave} from \"./stave\";\nimport {IClefType} from \"./types/clef\";\nimport {IAnnotation} from \"./types/annotation\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {LOG} from \"./flow\";\n\n// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (Clef.DEBUG) LOG('Vex.Flow.Clef', args);\n}\n\nexport class Clef extends StaveModifier {\n  static DEBUG: boolean;\n\n  annotation: IAnnotation;\n  clef: IClefType;\n\n  private glyph: Glyph;\n  private attachment: Glyph;\n  private size: string;\n  private type: string;\n\n  static get CATEGORY(): string {\n    return 'clefs';\n  }\n\n  // Every clef name is associated with a glyph code from the font file\n  // and a default stave line number.\n  static get types(): Record<string, IClefType> {\n    return {\n      'treble': {\n        code: 'gClef',\n        line: 3,\n      } as IClefType,\n      'bass': {\n        code: 'fClef',\n        line: 1,\n      } as IClefType,\n      'alto': {\n        code: 'cClef',\n        line: 2,\n      } as IClefType,\n      'tenor': {\n        code: 'cClef',\n        line: 1,\n      } as IClefType,\n      'percussion': {\n        code: 'restMaxima',\n        line: 2,\n      } as IClefType,\n      'soprano': {\n        code: 'cClef',\n        line: 4,\n      } as IClefType,\n      'mezzo-soprano': {\n        code: 'cClef',\n        line: 3,\n      } as IClefType,\n      'baritone-c': {\n        code: 'cClef',\n        line: 0,\n      } as IClefType,\n      'baritone-f': {\n        code: 'fClef',\n        line: 2,\n      } as IClefType,\n      'subbass': {\n        code: 'fClef',\n        line: 0,\n      } as IClefType,\n      'french': {\n        code: 'gClef',\n        line: 4,\n      } as IClefType,\n      'tab': {\n        code: '6stringTabClef',\n      } as IClefType,\n    };\n  }\n\n  // Create a new clef. The parameter `clef` must be a key from\n  // `Clef.types`.\n  constructor(type: string, size: string, annotation: string) {\n    super();\n    this.setAttribute('type', 'Clef');\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(this.musicFont.lookupMetric(`clef.${this.size}.width`));\n    L('Creating clef:', type);\n  }\n\n  getCategory(): string {\n    return Clef.CATEGORY;\n  }\n\n  setType(type: string, size: string, annotation: string): this {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n    this.clef.point = this.musicFont.lookupMetric(`clef.${this.size}.point`, 0);\n    this.glyph = new Glyph(this.clef.code, this.clef.point, {\n      category: `clef.${this.clef.code}.${this.size}`\n    });\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const code = this.musicFont.lookupMetric(`clef.annotations.${annotation}.smuflCode`);\n      const point = this.musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.point`);\n      const line = this.musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.line`);\n      const x_shift = this.musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.shiftX`);\n\n      this.annotation = {code, point, line, x_shift};\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  getWidth(): number {\n    if (this.type === 'tab' && !this.stave) {\n      throw new RuntimeError('ClefError', \"Can't get width without stave.\");\n    }\n\n    return this.width;\n  }\n\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    if (this.type !== 'tab') return this;\n\n    const numLines = this.stave.getOptions().num_lines;\n    const point = this.musicFont.lookupMetric(`clef.lineCount.${numLines}.point`);\n    const shiftY = this.musicFont.lookupMetric(`clef.lineCount.${numLines}.shiftY`);\n    this.glyph.setPoint(point);\n    this.glyph.setYShift(shiftY);\n\n    return this;\n  }\n\n  draw(): void {\n    if (!this.x) throw new RuntimeError('ClefError', \"Can't draw clef without x.\");\n    if (!this.stave) throw new RuntimeError('ClefError', \"Can't draw clef without stave.\");\n    this.setRendered();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setContext(this.stave.context);\n    if (this.clef.line !== undefined) {\n      this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n    }\n\n    this.glyph.renderToStave(this.x);\n\n    if (this.annotation !== undefined) {\n      this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n      this.attachment.setStave(this.stave);\n      this.attachment.setContext(this.stave.context);\n      this.attachment.renderToStave(this.x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nimport {StaveModifier} from './stavemodifier';\nimport {Glyph} from './glyph';\nimport {IAccItem} from \"./types/common\";\nimport {Stave} from \"./stave\";\nimport {IAccidentalSpacing, IAccList} from \"./types/keysignature\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {accidentalCodes, keySignature} from \"./flow\";\n\nexport class KeySignature extends StaveModifier {\n  private readonly glyphFontScale: number;\n\n  private glyphs: Glyph[];\n  private xPositions: number[];\n  private paddingForced: boolean;\n  private formatted: boolean;\n  private cancelKeySpec: string;\n  private accList: IAccItem[];\n  private keySpec: string;\n  private alterKeySpec: string;\n\n  static get CATEGORY(): string {\n    return 'keysignatures';\n  }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static get accidentalSpacing(): Record<string, IAccidentalSpacing> {\n    return {\n      '#': {\n        above: 6,\n        below: 4,\n      },\n      'b': {\n        above: 4,\n        below: 7,\n      },\n      'n': {\n        above: 4,\n        below: 1,\n      },\n      '##': {\n        above: 6,\n        below: 4,\n      },\n      'bb': {\n        above: 4,\n        below: 7,\n      },\n      'db': {\n        above: 4,\n        below: 7,\n      },\n      'd': {\n        above: 4,\n        below: 7,\n      },\n      'bbs': {\n        above: 4,\n        below: 7,\n      },\n      '++': {\n        above: 6,\n        below: 4,\n      },\n      '+': {\n        above: 6,\n        below: 4,\n      },\n      '+-': {\n        above: 6,\n        below: 4,\n      },\n      '++-': {\n        above: 6,\n        below: 4,\n      },\n      'bs': {\n        above: 4,\n        below: 10,\n      },\n      'bss': {\n        above: 4,\n        below: 10,\n      },\n    };\n  }\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec: string, cancelKeySpec: string, alterKeySpec?: string) {\n    super();\n    this.setAttribute('type', 'KeySignature');\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  getCategory(): string {\n    return KeySignature.CATEGORY;\n  }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc: any, nextAcc: any): void {\n    const accGlyphData = accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.stave, acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec: string): this {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec: string): IAccList {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types = this.accList.length > 0\n      && cancel_accList.length > 0\n      && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types\n      ? cancel_accList.length\n      : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return undefined;\n\n    // Get the line position for each natural\n    const cancelled: IAccItem[] = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({type: 'n', line: acc.line});\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n\n    return {\n      accList: cancelled,\n      type: cancel_accList[0].type\n    };\n  }\n\n  // Deprecated\n  addToStave(stave: Stave): this {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef: string, type: string, accList = this.accList): void {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index: number): number {\n    if (!this.formatted) this.format();\n\n    return (\n      this.glyphs.length === 0 || (!this.paddingForced && index < 2) ?\n        0 : this.padding\n    );\n  }\n\n  getWidth(): number {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec: string, cancelKeySpec: string, alterKeySpec?: string): this {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec: string): this {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec: string): void {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format(): void {\n    if (!this.stave) {\n      throw new RuntimeError('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = keySignature(this.keySpec);\n    const accList = this.accList;\n    const firstAccidentalType = accList.length > 0 ? accList[0].type : null;\n    let cancelAccList;\n    if (this.cancelKeySpec) {\n      cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      const clef = ((this.position === StaveModifier.Position.END) ?\n        this.stave.endClef : this.stave.clef) || this.stave.clef;\n      if (cancelAccList) {\n        this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n      }\n      this.convertAccLines(clef, firstAccidentalType, accList);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  draw(): void {\n    if (!this.x) {\n      throw new RuntimeError('KeySignatureError', \"Can't draw key signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new RuntimeError('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(this.stave);\n      glyph.setContext(this.stave.context);\n      glyph.renderToStave(x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\nimport {Modifier} from './modifier';\nimport {Stem} from './stem';\nimport {StemmableNote} from './stemmablenote';\nimport {Dot} from './dot';\nimport {Glyph} from './glyph';\nimport {ICoordinates} from \"./types/common\";\nimport {Stave} from \"./stave\";\nimport {ModifierContext} from \"./modifiercontext\";\nimport {TickContext} from \"./tickcontext\";\nimport {INoteRenderOptions, IStaveNoteStruct} from \"./types/note\";\nimport {IGlyphProps} from \"./types/glyph\";\nimport {ITabNotePositon} from \"./types/tabnote\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {DEFAULT_TABLATURE_FONT_SCALE, getGlyphProps, Merge, tabToGlyph} from \"./flow\";\n\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines: number, strings_used: number[]) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y: number, unused_strings: number[][], stave: Stave, stem_direction: number) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines: number[][] = [];\n\n  unused_strings.forEach(strings => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString = strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) ||\n      (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys: number[] = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  private ghost: boolean;\n  private glyphs: IGlyphProps[];\n\n  static get CATEGORY(): string {\n    return 'tabnotes';\n  }\n\n  // Initialize the TabNote with a `tab_struct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(tab_struct: IStaveNoteStruct, draw_stem?: boolean) {\n    super(tab_struct);\n    this.setAttribute('type', 'TabNote');\n\n    this.ghost = false; // Renders parenthesis around notes\n    // Note properties\n    //\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = tab_struct.positions;\n\n    // Render Options\n    Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: DEFAULT_TABLATURE_FONT_SCALE,\n      // Flag to draw a stem\n      draw_stem,\n      // Flag to draw dot modifiers\n      draw_dots: draw_stem,\n      // Flag to extend the main stem through the stave and fret positions\n      draw_stem_through_stave: false,\n      // vertical shift from stave line\n      y_shift: 0,\n      // normal glyph scale\n      scale: 1.0,\n      // default tablature font\n      font: '10pt Arial',\n    } as INoteRenderOptions);\n\n    this.glyph = getGlyphProps(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(tab_struct)}`\n      );\n    }\n\n    this.buildStem();\n\n    if (tab_struct.stem_direction) {\n      this.setStemDirection(tab_struct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n\n  reset(): this {\n    if (this.stave) {\n      this.setStave(this.stave);\n    }\n    return this;\n  }\n\n  // The ModifierContext category\n  getCategory(): string {\n    return TabNote.CATEGORY;\n  }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost: boolean): this {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem(): boolean {\n    return this.render_options.draw_stem;\n  }\n\n  // Get the default stem extension for the note\n  getStemExtension(): number {\n    const glyph = this.getGlyph() as IGlyphProps;\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.tabnote_stem_up_extension\n        : glyph.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Add a dot to the note\n  addDot(): this {\n    const dot = new Dot();\n    this.dots += 1;\n    return this.addModifier(dot, 0);\n  }\n\n  // Calculate and store the width of the note\n  updateWidth(): void {\n    this.glyphs = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyph = tabToGlyph(fret, this.render_options.scale);\n      this.glyphs.push(glyph);\n      this.width = Math.max(glyph.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    (this.glyph as IGlyphProps).getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave: Stave): this {\n    super.setStave(stave);\n    this.context = stave.context;\n\n    // Calculate the fret number width based on font used\n    let i;\n    if (this.context) {\n      const ctx = this.context;\n      this.width = 0;\n      for (i = 0; i < this.glyphs.length; ++i) {\n        const glyph = this.glyphs[i];\n        const text = '' + glyph.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setRawFont(this.render_options.font);\n          glyph.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyph.getWidth = () => glyph.width;\n        }\n        this.width = Math.max(glyph.getWidth(), this.width);\n      }\n      (this.glyph as IGlyphProps).getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({str: line}) => stave.getYForLine(line - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions(): ITabNotePositon[] {\n    return this.positions;\n  }\n\n  // Add self to the provided modifier context `mc`\n  addToModifierContext(mc: ModifierContext|TickContext): this {\n    this.setModifierContext(mc);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this as any);\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get the `x` coordinate to the right of the note\n  getTieRightX(): number {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = (this.glyph as IGlyphProps).getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += (-this.width / 2) + this.width + 2;\n\n    return tieStartX;\n  }\n\n  // Get the `x` coordinate to the left of the note\n  getTieLeftX(): number {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = (this.glyph as IGlyphProps).getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= (this.width / 2) + 2;\n\n    return tieEndX;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position?: number, index?: number): ICoordinates {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2;  // FIXME: modifier padding, move to font file\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // FIXME: modifier padding, move to font file\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = (this.glyph as IGlyphProps).getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    } as ICoordinates;\n  }\n\n  // Get the default line for rest\n  getLineForRest(): number {\n    return this.positions[0].str;\n  }\n\n  // Pre-render formatting\n  preFormat(): void {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.setPreFormatted(true);\n  }\n\n  // Get the x position for the stem\n  getStemX(): number {\n    return this.getCenterGlyphX();\n  }\n\n  // Get the y position for the stem\n  getStemY(): number {\n    const num_lines = this.stave.getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.stave.getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents(): Record<string, number> {\n    return this.stem.getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag(): void {\n    const {\n      beam, glyph, context, stem, stem_direction,\n      render_options: {draw_stem, glyph_font_scale},\n    } = this;\n\n    const shouldDrawFlag = beam == null && draw_stem;\n\n    // Now it's the flag's turn.\n    if ((glyph as IGlyphProps).flag && shouldDrawFlag) {\n      const flag_x = this.getStemX() + 1;\n      const flag_y = this.getStemY() - stem.getHeight();\n\n      const flag_code = stem_direction === Stem.DOWN\n        ? (glyph as IGlyphProps).code_flag_downstem // Down stems have flags on the left.\n        : (glyph as IGlyphProps).code_flag_upstem;\n\n      // Draw the Flag\n      Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, {category: 'flag.tabStem'});\n    }\n  }\n\n  // Render the modifiers onto the context\n  drawModifiers(): void {\n    // Draw the modifiers\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled\n      if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n      modifier.setContext(this.context);\n      modifier.drawWithStyle();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough(): void {\n    const stem_x = this.getStemX();\n    const stem_y = this.getStemY();\n    const ctx = this.context;\n\n    const stem_through = this.render_options.draw_stem_through_stave;\n    const draw_stem = this.render_options.draw_stem;\n    if (draw_stem && stem_through) {\n      const total_lines = this.stave.getNumLines();\n      const strings_used = this.positions.map(position => position.str);\n\n      const unused_strings = getUnusedStringGroups(total_lines, strings_used);\n      const stem_lines = getPartialStemLines(\n        stem_y,\n        unused_strings,\n        this.getStave(),\n        this.getStemDirection()\n      );\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stem_lines.forEach(bounds => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stem_x, bounds[0]);\n        ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions(): void {\n    const ctx = this.context;\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyph = this.glyphs[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = (this.glyph as IGlyphProps).getWidth();\n      const tab_x = x + (note_glyph_width / 2) - (glyph.getWidth() / 2);\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n\n      if (glyph.code) {\n        Glyph.renderGlyph(ctx, tab_x, y,\n          this.render_options.glyph_font_scale * this.render_options.scale,\n          glyph.code);\n      } else {\n        ctx.save();\n        ctx.setRawFont(this.render_options.font);\n        const text = glyph.text.toString();\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note\n  draw(): void {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new RuntimeError('NoStave', \"Can't draw without a stave.\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == null && this.render_options.draw_stem;\n\n    this.context.openGroup('tabnote', null, {pointerBBox: true});\n    this.drawPositions();\n    this.drawStemThrough();\n\n    const stem_x = this.getStemX();\n\n    this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\n    if (render_stem) {\n      this.context.openGroup('stem', null, {pointerBBox: true});\n      this.stem.setContext(this.context).draw();\n      this.context.closeGroup();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n    this.context.closeGroup();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport {StaveNote} from './stavenote';\nimport {Stem} from './stem';\nimport {StemmableNote} from \"./stemmablenote\";\nimport {IStaveNoteStruct} from \"./types/note\";\nimport {IGlyphProps} from \"./types/glyph\";\nimport {IGraceNoteProtrusion} from \"./types/gracenote\";\nimport {DEFAULT_NOTATION_FONT_SCALE, STEM_HEIGHT} from \"./flow\";\n\nexport class GraceNote extends StaveNote {\n  private readonly slash: boolean;\n\n  private slur: boolean;\n\n  static get CATEGORY(): string {\n    return 'gracenotes';\n  }\n\n  static get LEDGER_LINE_OFFSET(): number {\n    return 2;\n  }\n\n  static get SCALE(): number {\n    return 0.66;\n  }\n\n  constructor(note_struct: IStaveNoteStruct) {\n    super({\n      glyph_font_scale: DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n      stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n      ...note_struct,\n    });\n    this.setAttribute('type', 'GraceNote');\n\n    this.slash = note_struct.slash;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension(): number {\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    const glyph = this.getGlyph();\n    if (glyph) {\n      let ret = super.getStemExtension();\n      if ((glyph as IGlyphProps).stem) {\n        const staveNoteScale = this.getStaveNoteScale();\n        ret = ((Stem.HEIGHT + ret) * staveNoteScale) - Stem.HEIGHT;\n      }\n      return ret;\n    }\n\n    return 0;\n  }\n\n  getCategory(): string {\n    return GraceNote.CATEGORY;\n  }\n\n  // FIXME: move this to more basic class.\n  getStaveNoteScale(): number {\n    return this.render_options.glyph_font_scale / DEFAULT_NOTATION_FONT_SCALE;\n  }\n\n  draw(): void {\n    super.draw();\n    this.setRendered();\n    const stem = this.stem;\n    if (this.slash && stem) {\n      const staveNoteScale = this.getStaveNoteScale();\n\n      // some magic numbers are based on the staveNoteScale 0.66.\n      const offsetScale = staveNoteScale / 0.66;\n      let slashBBox: Record<string, number>;\n      const beam = this.beam;\n      if (beam) {\n        // FIXME: should render slash after beam?\n        if (!beam.postFormatted) {\n          beam.postFormat();\n        }\n\n        slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale,\n          8 * offsetScale,\n          {\n            stem: 6 * offsetScale,\n            beam: 5 * offsetScale,\n          });\n      } else {\n        const stem_direction = this.getStemDirection();\n        const noteHeadBounds = this.getNoteHeadBounds();\n        const noteStemHeight = stem.getHeight();\n        let x = this.getAbsoluteX();\n        let y = stem_direction === Stem.DOWN ?\n          noteHeadBounds.y_top - noteStemHeight :\n          noteHeadBounds.y_bottom - noteStemHeight;\n\n        const defaultStemExtention = stem_direction === Stem.DOWN ?\n          (this.glyph as IGlyphProps).stem_down_extension :\n          (this.glyph as IGlyphProps).stem_up_extension;\n\n        let defaultOffsetY = STEM_HEIGHT;\n        defaultOffsetY -= (defaultOffsetY / 2.8);\n        defaultOffsetY += defaultStemExtention;\n        y += ((defaultOffsetY * staveNoteScale) * stem_direction);\n\n        const offsets = stem_direction === Stem.UP ? {\n          x1: 1,\n          y1: 0,\n          x2: 13,\n          y2: -9,\n        } : {\n          x1: -4,\n          y1: 1,\n          x2: 13,\n          y2: 9,\n        };\n\n        x += (offsets.x1 * offsetScale);\n        y += (offsets.y1 * offsetScale);\n        slashBBox = {\n          x1: x,\n          y1: y,\n          x2: x + (offsets.x2 * offsetScale),\n          y2: y + (offsets.y2 * offsetScale),\n        };\n      }\n\n      // FIXME: avoide staff lines, leadger lines or others.\n\n      const ctx = this.context;\n      ctx.save();\n      ctx.setLineWidth(offsetScale); // FIXME: use more appropriate value.\n      ctx.beginPath();\n      ctx.moveTo(slashBBox.x1, slashBBox.y1);\n      ctx.lineTo(slashBBox.x2, slashBBox.y2);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  calcBeamedNotesSlashBBox(slashStemOffset: number, slashBeamOffset: number, protrusions: IGraceNoteProtrusion): Record<string, number> {\n    const beam = this.beam;\n    const beam_slope = beam.slope;\n    const isBeamEndNote = (beam.notes[beam.notes.length - 1] === this);\n    const scaleX = isBeamEndNote ? -1 : 1;\n    const beam_angle = Math.atan(beam_slope * scaleX);\n\n    // slash line intersecting point on beam.\n    const iPointOnBeam = {\n      dx: Math.cos(beam_angle) * slashBeamOffset,\n      dy: Math.sin(beam_angle) * slashBeamOffset,\n    };\n\n    slashStemOffset *= this.getStemDirection();\n    const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n    const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n    const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n    const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n    const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n\n    const stemX = this.getStemX();\n    const stem0X = (beam.notes[0] as StemmableNote).getStemX();\n    const stemY = this.beam.getBeamYToDraw() + ((stemX - stem0X) * beam_slope);\n\n    return {\n      x1: stemX - protrusion_stem_dx,\n      y1: (stemY + slashStemOffset - protrusion_stem_dy),\n      x2: stemX + (iPointOnBeam.dx * scaleX) + protrusion_beam_dx,\n      y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n    };\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport {Note} from './note';\nimport {Glyph} from \"./glyph\";\nimport {IStaveNoteStruct} from \"./types/note\";\nimport {BoundingBox} from \"./boundingbox\";\nimport {IGlyphNoteOptions} from \"./types/glyphnote\";\n\nexport class GlyphNote extends Note {\n  private options: IGlyphNoteOptions;\n\n  constructor(glyph: Glyph, noteStruct: IStaveNoteStruct, options: IGlyphNoteOptions) {\n    super(noteStruct);\n    this.options = {\n      ignoreTicks: false,\n      line: 2,\n      ...options\n    };\n    this.setAttribute('type', 'GlyphNote');\n\n    // Note properties\n    this.ignore_ticks = this.options.ignoreTicks;\n    if (glyph) {\n      this.setGlyph(glyph);\n    }\n  }\n\n  setGlyph(glyph: Glyph): this {\n    this.glyph = glyph;\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getBoundingBox(): BoundingBox {\n    return (this.glyph as Glyph).getBoundingBox();\n  }\n\n  /*\n  addToModifierContext() {\n    return this;\n  }\n  */\n\n  preFormat(): this {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw(): void {\n    this.stave.checkContext();\n    this.setRendered();\n\n    // Context is set when setStave is called on Note\n    if (!(this.glyph as Glyph).getContext()) {\n      (this.glyph as Glyph).setContext(this.context);\n    }\n\n    (this.glyph as Glyph).setStave(this.stave);\n    (this.glyph as Glyph).setYShift(this.stave.getYForLine(this.options.line) - this.stave.getYForGlyphs());\n\n    const x = this.isCenterAligned() ? this.getAbsoluteX() - (this.getWidth() / 2) : this.getAbsoluteX();\n    (this.glyph as Glyph).renderToStave(x);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to regiser with a registry:\n//\n// 1) Explicitly call `element.register(registry)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\nimport {Element} from \"./element\";\nimport {IRegistryIndex, IRegistryUpdate} from \"./types/registry\";\nimport {MakeException} from \"./runtimeerror\";\n\n// export const X = Vex.MakeException('RegistryError');\nconst X = MakeException('RegistryError');\n\nfunction setIndexValue(index: IRegistryIndex, name: string, value: string, id: string, elem: Element) {\n  if (!index[name][value]) index[name][value] = {};\n  index[name][value][id] = elem;\n}\n\nexport class Registry {\n  static defaultRegistry: Registry;\n\n  static get INDEXES(): string[] {\n    return ['type'];\n  }\n\n  private index: IRegistryIndex;\n\n  constructor() {\n    this.clear();\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry: Registry): void {\n    Registry.defaultRegistry = registry;\n  }\n\n  static getDefaultRegistry(): Registry {\n    return Registry.defaultRegistry;\n  }\n\n  static disableDefaultRegistry(): void {\n    Registry.defaultRegistry = null;\n  }\n\n  clear(): this {\n    // Indexes are represented as maps of maps (of maps). This allows\n    // for both multi-labeling (e.g., an element can have multiple classes)\n    // and efficient lookup.\n    this.index = {\n      id: {},\n      type: {},\n      class: {},\n    };\n    return this;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({id, name, value, oldValue}: IRegistryUpdate): void {\n    const elem = this.getElementById(id);\n    if (oldValue !== null && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value !== null) {\n      setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  // Register element `elem` with this registry. This adds the element to its index and watches\n  // it for attribute changes.\n  register(elem: Element, id?: string): this {\n    id = id || elem.getAttribute('id');\n\n    if (!id) {\n      throw new X('Can\\'t add element without `id` attribute to registry', elem);\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    setIndexValue(this.index, 'id', id, id, elem);\n    Registry.INDEXES.forEach(name => {\n      this.updateIndex({id, name, value: elem.getAttribute(name), oldValue: null});\n    });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id: string): Element {\n    return this.index.id[id] ? this.index.id[id][id] : null;\n  }\n\n  getElementsByAttribute(attrName: string, value: string): Element[] {\n    const index = this.index[attrName];\n    if (index && index[value]) {\n      return Object.keys(index[value]).map(i => index[value][i]);\n    } else {\n      return [];\n    }\n  }\n\n  getElementsByType(type: string): Element[] {\n    return this.getElementsByAttribute('type', type);\n  }\n\n  getElementsByClass(className: string): Element[] {\n    return this.getElementsByAttribute('class', className);\n  }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate({id, name, value, oldValue}: IRegistryUpdate): this {\n    function includes(array: string[], value: string) {\n      return array.filter(x => x === value).length > 0;\n    }\n\n    if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n    this.updateIndex({id, name, value, oldValue});\n    return this;\n  }\n}\n\nRegistry.defaultRegistry = null;\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nimport {Stem} from './stem';\nimport {Glyph} from './glyph';\nimport {Note} from './note';\nimport {Beam} from \"./beam\";\nimport {IStaveNoteStruct} from \"./types/note\";\nimport {IGlyphProps} from \"./types/glyph\";\nimport {IStemStruct} from \"./types/stem\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {durationToFraction, getGlyphProps} from \"./flow\";\n\nexport class StemmableNote extends Note {\n  stem_direction: number;\n  stem: Stem;\n  beam: Beam;\n\n  protected flag: Glyph;\n  protected stem_extension_override: number;\n\n  constructor(note_struct: IStaveNoteStruct) {\n    super(note_struct);\n    this.setAttribute('type', 'StemmableNote');\n\n    this.stem = null;\n    this.stem_extension_override = null;\n    this.beam = null;\n  }\n\n  // Get and set the note's `Stem`\n  getStem(): Stem {\n    return this.stem;\n  }\n\n  setStem(stem: Stem): this {\n    this.stem = stem;\n    return this;\n  }\n\n  // Builds and sets a new stem\n  buildStem(): this {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag(category = 'flag'): void {\n    const {glyph, beam} = this;\n    const shouldRenderFlag = beam === null;\n\n    if ((glyph as IGlyphProps) && (glyph as IGlyphProps).flag && shouldRenderFlag) {\n      const flagCode = this.getStemDirection() === Stem.DOWN\n        ? (glyph as IGlyphProps).code_flag_downstem\n        : (glyph as IGlyphProps).code_flag_upstem;\n\n      this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, {category});\n    }\n  }\n\n  // Get the custom glyph associated with the outer note head on the base of the stem.\n  getBaseCustomNoteHeadGlyph(): IGlyphProps {\n    if (this.getStemDirection() === Stem.DOWN) {\n      return this.customGlyphs[this.customGlyphs.length - 1];\n    } else {\n      return this.customGlyphs[0];\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength(): number {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount(): number {\n    const glyph = this.getGlyph();\n\n    if (glyph) {\n      return (glyph as IGlyphProps).beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinimumLength(): number {\n    const frac = durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == null) length = 35;\n        break;\n      case '16':\n        length = this.beam == null ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == null ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == null ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == null ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection(): number {\n    return this.stem_direction;\n  }\n\n  setStemDirection(direction: number): this {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n\n      // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n      // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n      const glyph = this.getBaseCustomNoteHeadGlyph() || this.getGlyph();\n\n      // Get the font-specific customizations for the note heads.\n      const offsets = this.musicFont.lookupMetric(`stem.noteHead.${(glyph as IGlyphProps).code_head}`,\n        {offsetYBaseStemUp: 0, offsetYTopStemUp: 0, offsetYBaseStemDown: 0, offsetYTopStemDown: 0,});\n\n      // Configure the stem to use these offsets.\n      this.stem.setOptions({\n        stem_up_y_offset: offsets.offsetYTopStemUp, // glyph.stem_up_y_offset,\n        stem_down_y_offset: offsets.offsetYTopStemDown, // glyph.stem_down_y_offset,\n        stem_up_y_base_offset: offsets.offsetYBaseStemUp, // glyph.stem_up_y_base_offset,\n        stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n      } as IStemStruct);\n    }\n\n    // Reset and reformat everything.\n    this.reset();\n    if (this.flag) {\n      this.buildFlag();\n    }\n    this.beam = null;\n    if (this.preFormatted) {\n      this.preFormat();\n    }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX(): number {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n\n    return this.stem_direction === Stem.DOWN ? x_begin : x_end;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX(): number {\n    return this.getAbsoluteX() + this.x_shift + (this.getGlyphWidth() / 2);\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension(): number {\n    const glyph = this.getGlyph() as IGlyphProps;\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === Stem.UP\n        ? glyph.stem_up_extension\n        : glyph.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height: number): this {\n    this.stem_extension_override = (height - Stem.HEIGHT);\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents(): Record<string, number> {\n    return this.stem.getExtents();\n  }\n\n  // Sets the current note's beam\n  setBeam(beam?: Beam): this {\n    this.beam = beam;\n    return this;\n  }\n\n  // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n  getYForTopText(textLine: number): number {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.min(\n        this.stave.getYForTopText(textLine),\n        extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n      );\n    } else {\n      return this.stave.getYForTopText(textLine);\n    }\n  }\n\n  getYForBottomText(textLine: number): number {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.max(\n        this.stave.getYForTopText(textLine),\n        extents.baseY + (this.render_options.annotation_spacing * (textLine))\n      );\n    } else {\n      return this.stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag(): boolean {\n    return getGlyphProps(this.duration).flag && !this.beam;\n  }\n\n  // Post format the note\n  postFormat(): this {\n    if (this.beam) {\n      this.beam.postFormat();\n    }\n\n    this.postFormatted = true;\n\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stem_struct: IStemStruct): void {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stem_struct));\n    this.stem.setContext(this.context).draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\nimport {Modifier} from './modifier';\nimport {StaveNote} from './stavenote';\nimport {Glyph} from './glyph';\nimport {TabNote} from \"./tabnote\";\nimport {Note} from \"./note\";\nimport {IFont} from \"./types/font\";\nimport {IState} from \"./types/common\";\nimport {IStrokeOptions, IStrokeRenderOptions} from \"./types/stroke\";\nimport {Merge} from \"./flow\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport enum Type {\n  BRUSH_DOWN = 1,\n  BRUSH_UP = 2,\n  ROLL_DOWN = 3, // Arpeggiated chord\n  ROLL_UP = 4,   // Arpeggiated chord\n  RASQUEDO_DOWN = 5,\n  RASQUEDO_UP = 6,\n  ARPEGGIO_DIRECTIONLESS = 7 // Arpeggiated chord without upwards or downwards arrow\n}\n\nexport class Stroke extends Modifier {\n  private readonly options: IStrokeOptions;\n  private readonly all_voices: boolean;\n  private readonly type: Type;\n\n  private note_end: Note;\n  private render_options: IStrokeRenderOptions;\n  private font: IFont;\n\n  static get CATEGORY(): string {\n    return 'strokes';\n  }\n\n  static get Type(): typeof Type {\n    return Type;\n  }\n\n  // Arrange strokes inside `ModifierContext`\n  static format(strokes: Stroke[], state: IState): typeof Stroke|boolean {\n    const left_shift = state.left_shift;\n    const stroke_spacing = 0;\n\n    if (!strokes || strokes.length === 0) return this;\n\n    const strokeList = strokes.map((stroke) => {\n      const note = stroke.getNote();\n      if (note instanceof StaveNote) {\n        const {line} = note.getKeyProps()[stroke.getIndex()];\n        const shift = note.getLeftDisplacedHeadPx();\n        return {line, shift, stroke};\n      } else {\n        const {str: string} = (note as TabNote).getPositions()[stroke.getIndex()];\n        return {line: string, shift: 0, stroke};\n      }\n    });\n\n    const strokeShift = left_shift;\n\n    // There can only be one stroke .. if more than one, they overlay each other\n    const xShift = strokeList.reduce((xShift, {stroke, shift}) => {\n      stroke.setXShift(strokeShift + shift);\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n    }, 0);\n\n    state.left_shift += xShift;\n    return true;\n  }\n\n  constructor(type: number, options: never) {\n    super();\n    this.setAttribute('type', 'Stroke');\n\n    this.note = null;\n    this.options = Merge({} as IStrokeOptions, options);\n\n    // multi voice - span stroke across all voices if true\n    this.all_voices = 'all_voices' in this.options ? this.options.all_voices : true;\n\n    // multi voice - end note of stroke, set in draw()\n    this.note_end = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      font_scale: 38,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'serif',\n      size: 10,\n      weight: 'bold italic',\n    } as IFont;\n\n    this.setXShift(0);\n    this.setWidth(10);\n  }\n\n  getCategory(): string {\n    return Stroke.CATEGORY;\n  }\n\n  getPosition(): number {\n    return this.position;\n  }\n\n  addEndNote(note: Note): this {\n    this.note_end = note;\n    return this;\n  }\n\n  draw(): void {\n    this.checkContext();\n    this.setRendered();\n\n    if (!(this.note && (this.index != null))) {\n      throw new RuntimeError('NoAttachedNote', \"Can't draw stroke without a note and index.\");\n    }\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let ys = this.note.getYs();\n    let topY = start.y;\n    let botY = start.y;\n    const x = start.x - 5;\n    const line_space = this.note.stave.options.spacing_between_lines_px;\n\n    const notes = this.getModifierContext().getModifiers(this.note.getCategory()) as Note[];\n    for (let i = 0; i < notes.length; i++) {\n      ys = notes[i].getYs();\n      for (let n = 0; n < ys.length; n++) {\n        if (this.note === notes[i] || this.all_voices) {\n          topY = Math.min(topY, ys[n]);\n          botY = Math.max(botY, ys[n]);\n        }\n      }\n    }\n\n    let arrow;\n    let arrow_shift_x;\n    let arrow_y;\n    let text_shift_x;\n    let text_y;\n\n    switch (this.type) {\n      case Stroke.Type.BRUSH_DOWN:\n        arrow = 'arrowheadBlackUp';\n        arrow_shift_x = -3;\n        arrow_y = topY - (line_space / 2) + 10;\n        botY += (line_space / 2);\n        break;\n      case Stroke.Type.BRUSH_UP:\n        arrow = 'arrowheadBlackDown';\n        arrow_shift_x = 0.5;\n        arrow_y = botY + (line_space / 2);\n        topY -= (line_space / 2);\n        break;\n      case Stroke.Type.ROLL_DOWN:\n      case Stroke.Type.RASQUEDO_DOWN:\n        arrow = 'arrowheadBlackUp';\n        arrow_shift_x = -3;\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\n        if (this.note instanceof StaveNote) {\n          topY += 1.5 * line_space;\n          if ((botY - topY) % 2 !== 0) {\n            botY += 0.5 * line_space;\n          } else {\n            botY += line_space;\n          }\n          arrow_y = topY - line_space;\n          text_y = botY + line_space + 2;\n        } else {\n          topY += 1.5 * line_space;\n          botY += line_space;\n          arrow_y = topY - 0.75 * line_space;\n          text_y = botY + 0.25 * line_space;\n        }\n        break;\n      case Stroke.Type.ROLL_UP:\n      case Stroke.Type.RASQUEDO_UP:\n        arrow = 'arrowheadBlackDown';\n        arrow_shift_x = -4;\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\n        if (this.note instanceof StaveNote) {\n          arrow_y = line_space / 2;\n          topY += 0.5 * line_space;\n          if ((botY - topY) % 2 === 0) {\n            botY += line_space / 2;\n          }\n          arrow_y = botY + 0.5 * line_space;\n          text_y = topY - 1.25 * line_space;\n        } else {\n          topY += 0.25 * line_space;\n          botY += 0.5 * line_space;\n          arrow_y = botY + 0.25 * line_space;\n          text_y = topY - line_space;\n        }\n        break;\n      case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n        topY += 0.5 * line_space;\n        botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n        break;\n      default:\n        throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n    }\n\n    let strokeLine = 'straight';\n    // Draw the stroke\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n      this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\n    } else {\n      strokeLine = 'wiggly';\n      if (this.note instanceof StaveNote) {\n        for (let i = topY; i <= botY; i += line_space) {\n          Glyph.renderGlyph(\n            this.context,\n            x + this.x_shift - 4,\n            i,\n            this.render_options.font_scale,\n            'vexWiggleArpeggioUp'\n          );\n        }\n      } else {\n        let i;\n        for (i = topY; i <= botY; i += 10) {\n          Glyph.renderGlyph(\n            this.context,\n            x + this.x_shift - 4,\n            i,\n            this.render_options.font_scale,\n            'vexWiggleArpeggioUp'\n          );\n        }\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n          text_y = i + 0.25 * line_space;\n        }\n      }\n    }\n\n    if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n      return; // skip drawing arrow heads or text\n    }\n\n    // Draw the arrow head\n    Glyph.renderGlyph(\n      this.context,\n      x + this.x_shift + arrow_shift_x,\n      arrow_y,\n      this.render_options.font_scale,\n      arrow,\n      {category: `stroke.${arrow}.${strokeLine}`}\n    );\n\n    // Draw the rasquedo \"R\"\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      this.context.fillText('R', x + text_shift_x, text_y);\n      this.context.restore();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements ornaments as modifiers that can be\n// attached to notes. The complete list of ornaments is available in\n// `tables.js` under `Vex.Flow.ornamentCodes`.\n//\n// See `tests/ornament_tests.js` for usage examples.\nimport {Modifier} from './modifier';\nimport {TickContext} from './tickcontext';\nimport {StaveNote} from './stavenote';\nimport {Glyph} from './glyph';\nimport {ICodeValue, IState} from \"./types/common\";\nimport {StemmableNote} from \"./stemmablenote\";\nimport {IOrnamentRenderOptions} from \"./types/ornament\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {accidentalCodes, LOG, ornamentCodes} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (Ornament.DEBUG) LOG('Vex.Flow.Ornament', args);\n}\n\nexport class Ornament extends Modifier {\n  static DEBUG: boolean;\n\n  note: StemmableNote;\n\n  private readonly ornament: ICodeValue;\n  private readonly stemUpYOffset: number;\n  private readonly ornamentAlignWithNoteHead: string[] | boolean;\n  private readonly type: string;\n\n  private delayed: boolean;\n  private reportedWidth: number;\n  private adjustForStemDirection: boolean;\n  private render_options: IOrnamentRenderOptions;\n  private glyph: Glyph;\n  private accidentalUpper: Glyph;\n  private accidentalLower: Glyph;\n  private delayXShift: number;\n\n  static get CATEGORY(): string {\n    return 'ornaments';\n  }\n\n  // ## Static Methods\n  // Arrange ornaments inside `ModifierContext`\n  static format(ornaments: Ornament[], state: IState): boolean {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0;  // width is used by ornaments, which are always centered on the note head\n    let right_shift = state.right_shift;  // jazz ornaments calculate r/l shift separately\n    let left_shift = state.left_shift;\n    let yOffset = 0;\n\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n        ornament.x_shift += (right_shift + 2);\n      }\n      if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n        ornament.x_shift -= (left_shift + 2);\n      }\n      if (ornament.reportedWidth && ornament.x_shift < 0) {\n        left_shift += ornament.reportedWidth;\n      } else if (ornament.reportedWidth && ornament.x_shift > 0) {\n        right_shift += ornament.reportedWidth;\n      } else {\n        width = Math.max(ornament.getWidth(), width);\n      }\n      // articulations above/below the line can be stacked.\n      if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n        // Unfortunately we don't know the stem direction.  So we base it\n        // on the line number, but also allow it to be overridden.\n        if (ornament.note.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n          state.top_text_line += increment;\n          ornament.y_shift += yOffset;\n          yOffset -= ornament.glyph.bbox.h;\n        } else {\n          state.text_line += increment;\n          ornament.y_shift += yOffset;\n          yOffset += ornament.glyph.bbox.h;\n        }\n      } else {\n        if (ornament.getPosition() === Modifier.Position.ABOVE) {\n          ornament.setTextLine(state.top_text_line);\n          state.top_text_line += increment;\n        } else {\n          ornament.setTextLine(state.text_line);\n          state.text_line += increment;\n        }\n      }\n    }\n\n    // Note: 'legit' ornaments don't consider other modifiers when calculating their\n    // X position, but jazz ornaments sometimes need to.\n    state.left_shift = left_shift + (width / 2);\n    state.right_shift = right_shift + (width / 2);\n    return true;\n  }\n\n  // ### ornamentNoteTransition\n  // means the jazz ornament represents an effect from one note to another,\n  // these are generally on the top of the staff.\n  static get ornamentNoteTransition(): string[] {\n    return ['flip', 'jazzTurn', 'smear'];\n  }\n\n  // ### ornamentAttack\n  // Indicates something that happens in the attach, placed before the note and\n  // any accidentals\n  static get ornamentAttack(): string[] {\n    return ['scoop'];\n  }\n\n  // ### ornamentAlignWithNoteHead\n  // The ornament is aligned based on the note head, but without regard to whether the\n  // stem goes up or down.\n  static get ornamentAlignWithNoteHead(): string[] {\n    return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n  }\n\n  // ### ornamentRelease\n  // An ornament that happens on the release of the note, generally placed after the\n  // note and overlapping the next beat/measure..\n  static get ornamentRelease(): string[] {\n    return [\n      'doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'\n    ];\n  }\n\n  // ### ornamentArticulation\n  // goes above/below the note based on space availablity\n  static get ornamentArticulation(): string[] {\n    return ['bend', 'plungerClosed', 'plungerOpen'];\n  }\n\n  // ### getMetrics\n  // legacy ornaments have hard-coded metrics.  If additional ornament types are\n  // added, get their metrics here.\n  getMetrics(): any {\n    return this.getFontStack()[0].metrics.glyphs.jazzOrnaments[this.ornament.code];\n  }\n\n  // Create a new ornament of type `type`, which is an entry in\n  // `Vex.Flow.ornamentCodes` in `tables.js`.\n  constructor(type: string) {\n    super();\n    this.setAttribute('type', 'Ornament');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.delayed = false;\n\n    this.accidentalUpper = null;\n    this.accidentalLower = null;\n\n    this.render_options = {\n      font_scale: 38,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3\n    };\n\n    this.ornament = ornamentCodes(this.type);\n\n    // new ornaments have their origin at the origin, and have more specific\n    // metrics.  Legacy ornaments do some\n    // x scaling, and have hard-coded metrics\n    const metrics = this.getMetrics();\n\n    // some jazz ornaments are above or below depending on stem direction.\n    this.adjustForStemDirection = false;\n\n    // some jazz ornaments like falls are supposed to overlap with future bars\n    // and so we report a different width than they actually take up.\n    this.reportedWidth = (metrics && metrics.reportedWidth) ?\n      metrics.reportedWidth : 0;\n\n    this.stemUpYOffset = (metrics && metrics.stemUpYOffset) ?\n      metrics.stemUpYOffset : 0;\n\n    this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n\n    if (!this.ornament) {\n      throw new RuntimeError('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.x_shift = metrics ? metrics.xOffset : 0;\n    this.y_shift = metrics ? metrics.yOffset : 0;\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, {category: `ornament.${this.ornament.code}`});\n\n    // Is this a jazz ornament that goes between this note and the next note.\n    if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n      this.delayed = true;\n    }\n\n    // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n    // happen if I don't set it.\n    if (!metrics) {\n      this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n    }\n  }\n\n  getCategory(): string {\n    return Ornament.CATEGORY;\n  }\n\n  // Set whether the ornament is to be delayed\n  setDelayed(delayed: boolean): this {\n    this.delayed = delayed;\n    return this;\n  }\n\n  // Set the upper accidental for the ornament\n  setUpperAccidental(accid: string): this {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Set the lower accidental for the ornament\n  setLowerAccidental(accid: string): this {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Render ornament in position next to note.\n  draw(): void {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new RuntimeError('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const ctx = this.context;\n    const stemDir = this.note.getStemDirection();\n    const stave = this.note.getStave();\n\n    const classString = Object.keys(this.getAttribute('classes')).join(' ');\n    this.context.openGroup(classString, this.getAttribute('id'));\n\n    // Get stem extents\n    const stemExtents = this.note.getStem().getExtents();\n    let y = stemDir === StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered\n    // outside the stave.\n    if (this.note.getCategory() === 'tabnotes') {\n      if (this.note.hasStem()) {\n        if (stemDir === StaveNote.STEM_DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else { // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === StaveNote.STEM_DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && this.note.beam) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n\n    // If the ornament is aligned with the note head, don't consider the stave y\n    // but use the 'natural' modifier y\n    let glyphY = this.ornamentAlignWithNoteHead ? start.y :\n      Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      let delayXShift = 0;\n      const startX = glyphX - (stave.getX() - 10);\n      if (this.delayXShift !== undefined) {\n        delayXShift = +this.delayXShift;\n      } else {\n        delayXShift += this.glyph.getMetrics().width / 2;\n        const nextContext = TickContext.getNextContext(this.note.getTickContext());\n        if (nextContext) {\n          delayXShift += ((nextContext as TickContext).getX() - startX) * 0.5;\n        } else {\n          delayXShift += (stave.x + stave.width - startX) * 0.5;\n        }\n        this.delayXShift = delayXShift;\n      }\n      glyphX += delayXShift;\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    if (this.stemUpYOffset && this.note.hasStem() && this.note.getStemDirection() === 1) {\n      glyphY += this.stemUpYOffset;\n    }\n    if (this.note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n      glyphY = this.note.getStave().getBoundingBox().y + 40;\n    }\n\n    this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n\n    if (this.accidentalUpper) {\n      glyphY -= (this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding);\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n    this.context.closeGroup();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport {StaveModifier} from './stavemodifier';\nimport {Glyph} from './glyph';\nimport {Stave} from \"./stave\";\nimport {IFont} from \"./types/font\";\n\nexport enum Type {\n  NONE = 1,         // no coda or segno\n  CODA_LEFT = 2,    // coda at beginning of stave\n  CODA_RIGHT = 3,   // coda at end of stave\n  SEGNO_LEFT = 4,   // segno at beginning of stave\n  SEGNO_RIGHT = 5,  // segno at end of stave\n  DC = 6,           // D.C. at end of stave\n  DC_AL_CODA = 7,   // D.C. al coda at end of stave\n  DC_AL_FINE = 8,   // D.C. al Fine end of stave\n  DS = 9,           // D.S. at end of stave\n  DS_AL_CODA = 10,  // D.S. al coda at end of stave\n  DS_AL_FINE = 11,  // D.S. al Fine at end of stave\n  FINE = 12         // Fine at end of stave\n}\n\nexport class Repetition extends StaveModifier {\n  private readonly symbol_type: number;\n\n  private x_shift: number;\n  private y_shift: number;\n  private font: IFont;\n\n  static get CATEGORY(): string {\n    return 'repetitions';\n  }\n\n  static get type(): typeof Type {\n    return Type;\n  }\n\n  constructor(type: number, x: number, y_shift: number) {\n    super();\n    this.setAttribute('type', 'Repetition');\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n    this.font = {\n      family: 'times',\n      size: 12,\n      weight: 'bold italic',\n    } as IFont;\n  }\n\n  getCategory(): string {\n    return Repetition.CATEGORY;\n  }\n\n  setShiftX(x: number): this {\n    this.x_shift = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.y_shift = y;\n    return this;\n  }\n\n  draw(stave?: Stave, x?: number): this {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave: Stave, x: number): this {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'coda', {category: 'coda'});\n    return this;\n  }\n\n  drawSignoFixed(stave: Stave, x: number): this {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'segno', {category: 'segno'});\n    return this;\n  }\n\n  drawSymbolText(stave: Stave, x: number, text: string, draw_coda: boolean): this {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Default to right symbol\n    let text_x: number;\n    let symbol_x = x + this.x_shift;\n    if (this.symbol_type === Repetition.type.CODA_LEFT) {\n      // Offset Coda text to right of stave beginning\n      text_x = this.x + stave.options.vertical_bar_width;\n      symbol_x = text_x + ctx.measureText(text).width + 12;\n    } else if (this.symbol_type === Repetition.type.DS) {\n      const modifierWidth = stave.start_x - this.x;\n      text_x = this.x + x + this.x_shift + stave.width - 5 - modifierWidth - ctx.measureText(text).width;\n      // TODO this is weird. setting the x position should probably be refactored, parameters aren't clear here.\n    } else {\n      // Offset Signo text to left stave end\n      symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n      text_x = symbol_x - +ctx.measureText(text).width - 12;\n    }\n\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'coda', {category: 'coda'});\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\nimport {StaveModifier} from './stavemodifier';\nimport {Glyph} from './glyph';\nimport {ITempo} from \"./types/common\";\nimport {Stave} from \"./stave\";\nimport {IFont} from \"./types/font\";\nimport {IStaveTempoRenderOptions} from \"./types/stavetempo\";\nimport {getGlyphProps} from \"./flow\";\n\nexport class StaveTempo extends StaveModifier {\n  private readonly font: IFont;\n  private readonly render_options: IStaveTempoRenderOptions;\n\n  private tempo: ITempo;\n  private shift_x: number;\n  private shift_y: number;\n\n  static get CATEGORY(): string {\n    return 'stavetempo';\n  }\n\n  constructor(tempo: ITempo, x: number, shift_y: number) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = StaveModifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    } as IFont;\n    this.render_options = {\n      glyph_font_scale: 30,  // font size for note\n    };\n  }\n\n  getCategory(): string {\n    return StaveTempo.CATEGORY;\n  }\n\n  setTempo(tempo: ITempo): this {\n    this.tempo = tempo;\n    return this;\n  }\n\n  setShiftX(x: number): this {\n    this.shift_x = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.shift_y = y;\n    return this;\n  }\n\n  draw(stave?: Stave, shift_x?: number): this {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = getGlyphProps(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale,\n            code.code_flag_upstem, {category: 'flag.staveTempo'});\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport {StaveModifier} from './stavemodifier';\nimport {TextNote} from './textnote';\nimport {Stave} from \"./stave\";\nimport {IFont} from \"./types/font\";\nimport {IStaveTextOptions} from \"./types/stave\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {Merge} from \"./flow\";\n\nexport class StaveText extends StaveModifier {\n  private readonly options: IStaveTextOptions;\n  private readonly font: IFont;\n\n  private text: string;\n  private shift_x: number;\n  private shift_y: number;\n\n  static get CATEGORY(): string {\n    return 'stavetext';\n  }\n\n  constructor(text: string, position: number, options: IStaveTextOptions) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    Merge(this.options, options);\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    } as IFont;\n  }\n\n  getCategory(): string {\n    return StaveText.CATEGORY;\n  }\n\n  setStaveText(text: string): this {\n    this.text = text;\n    return this;\n  }\n\n  setShiftX(x: number): this {\n    this.shift_x = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.shift_y = y;\n    return this;\n  }\n\n  setFont(font: IFont): void {\n    Merge(this.font, font);\n  }\n\n  setText(text: string): void {\n    this.text = text;\n  }\n\n  draw(stave?: Stave): this {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setLineWidth(2); //ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport {StaveModifier} from './stavemodifier';\nimport {Stave} from \"./stave\";\nimport {IFont} from \"./types/font\";\n\nexport enum Type {\n  NONE = 1,\n  BEGIN = 2,\n  MID = 3,\n  END = 4,\n  BEGIN_END = 5\n}\n\nexport class Volta extends StaveModifier {\n  private readonly volta: number;\n  private readonly number: string;\n\n  private font: IFont;\n  private y_shift: number;\n\n  static get CATEGORY(): string {\n    return 'voltas';\n  }\n\n  static get type(): typeof Type {\n    return Type;\n  }\n\n  constructor(type: number, number: string, x: number, y_shift: number) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    } as IFont;\n  }\n\n  getCategory(): string {\n    return Volta.CATEGORY;\n  }\n\n  setShiftY(y: number): this {\n    this.y_shift = y;\n    return this;\n  }\n\n  draw(stave?: Stave, x?: number): this {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.width - x; // don't include x (offset) for width\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n    // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport {Stave} from './stave';\nimport {IStaveOptions} from \"./types/stave\";\nimport {Merge} from \"./flow\";\n\nexport class TabStave extends Stave {\n  constructor(x: number, y: number, width: number, options: IStaveOptions) {\n    const tab_options = {\n      spacing_between_lines_px: 13,\n      num_lines: 6,\n      top_text_position: 1,\n    } as IStaveOptions;\n\n    Merge(tab_options, options);\n    super(x, y, width, tab_options);\n    this.setAttribute('type', 'TabStave');\n  }\n\n  getYForGlyphs(): number {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph(): this {\n    this.addClef('tab');\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\nimport {Element} from './element';\nimport {Vibrato} from './vibrato';\nimport {Note} from \"./note\";\nimport {IVibratoBracketData, IVibratoBracketRenderOptions} from \"./types/vibratobracket\";\nimport {LOG} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (VibratoBracket.DEBUG) LOG('Vex.Flow.VibratoBracket', args);\n}\n\nexport class VibratoBracket extends Element {\n  static DEBUG: boolean;\n\n  private line: number;\n\n  private readonly start: Note;\n  private readonly stop: Note;\n  private readonly render_options: IVibratoBracketRenderOptions;\n\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data: IVibratoBracketData) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    } as IVibratoBracketRenderOptions;\n  }\n\n  // Set line position of the vibrato bracket\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  setHarsh(harsh: boolean): this {\n    this.render_options.harsh = harsh;\n    return this;\n  }\n\n  // Draw the vibrato bracket on the rendering context\n  draw(): void {\n    const ctx = this.context;\n    this.setRendered();\n\n    const y = (this.start)\n      ? this.start.getStave().getYForTopText(this.line)\n      : this.stop.getStave().getYForTopText(this.line);\n\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x = (this.start)\n      ? this.start.getAbsoluteX()\n      : this.stop.getStave().getTieStartX();\n\n    // If stop note is not set then vibrato will be drawn\n    // until the end of the stave\n    const stop_x = (this.stop)\n      ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5\n      : this.start.getStave().getTieEndX() - 10;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests\nimport {Element} from './element';\nimport {Glyph} from './glyph';\nimport {NoteHead} from './notehead';\nimport {StaveModifier} from './stavemodifier';\nimport {TimeSignature} from './timesignature';\nimport {DrawContext, ILeftRight} from \"./types/common\";\nimport {Stave} from \"./stave\";\nimport {IStaveNoteStruct} from \"./types/note\";\nimport {IMultimeasureRestRenderOptions, IMultimeasureRestSemibraveRest} from \"./types/multimeasurerest\";\nimport {DEFAULT_NOTATION_FONT_SCALE, Merge} from \"./flow\";\n\nlet semibrave_rest: IMultimeasureRestSemibraveRest;\n\nfunction get_semibrave_rest() {\n  if (!semibrave_rest) {\n    const notehead = new NoteHead({duration: 'w', note_type: 'r'} as IStaveNoteStruct);\n    semibrave_rest = {\n      glyph_font_scale: notehead.render_options.glyph_font_scale,\n      glyph_code: notehead.glyph_code,\n      width: notehead.getWidth(),\n    };\n  }\n  return semibrave_rest;\n}\n\nexport class MultiMeasureRest extends Element {\n  private readonly render_options: IMultimeasureRestRenderOptions;\n  private readonly xs: ILeftRight;\n  private readonly number_of_measures: number;\n\n  private stave: Stave;\n\n  // Parameters:\n  // * `number_of_measures` - Number of measures.\n  // * `options` - The options object.\n  //   * `show_number` - Show number of measures string or not.\n  //   * `number_line` -  Staff line to render the number of measures string.\n  //   * `number_glyph_point` - Size of the number of measures string glyphs.\n  //   * `padding_left` - Left padding from stave x.\n  //   * `padding_right` - Right padding from stave end x.\n  //   * `line` - Staff line to render rest line or rest symbols.\n  //   * `spacing_between_lines_px` - Spacing between staff lines to\n  // resolve serif height or {2-bar and 4-bar}rest symbol height.\n  //   * `line_thickness` - Rest line thickness.\n  //   * `serif_thickness` - Rest serif line thickness.\n  //   * `use_symbols` - Use rest symbols or not.\n  //   * `symbol_spacing` - Spacing between each rest symbol glyphs.\n  //   * `semibrave_rest_glyph_scale` - Size of the semibrave(1-bar) rest symbol.\n  constructor(number_of_measures: number, options: IMultimeasureRestRenderOptions) {\n    super();\n    this.setAttribute('type', 'MultiMeasureRest');\n\n    const point = this.musicFont.lookupMetric('digits.point');\n    const fontLineShift = this.musicFont.lookupMetric('digits.shiftLine', 0);\n\n    this.render_options = {\n      show_number: true,\n      number_line: -0.5,\n      number_glyph_point: point, // same as TimeSignature.\n\n      padding_left: undefined,\n      padding_right: undefined,\n\n      line: 2,\n\n      spacing_between_lines_px: 10, // same as Stave.\n\n      line_thickness: undefined,\n      serif_thickness: 2,\n\n      use_symbols: false,\n      symbol_spacing: undefined,\n\n      /* same as NoteHead. */\n      semibrave_rest_glyph_scale: DEFAULT_NOTATION_FONT_SCALE,\n    } as IMultimeasureRestRenderOptions;\n    Merge(this.render_options, options);\n\n    this.render_options.number_line += fontLineShift;\n\n    this.number_of_measures = number_of_measures;\n    this.xs = {\n      left: NaN,\n      right: NaN,\n    };\n  }\n\n  getXs(): ILeftRight {\n    return this.xs;\n  }\n\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    return this;\n  }\n\n  getStave(): Stave {\n    return this.stave;\n  }\n\n  drawLine(ctx: DrawContext, left: number, right: number, sbl: number): void {\n    const y = this.stave.getYForLine(this.render_options.line);\n    const padding = (right - left) * 0.1;\n\n    left += padding;\n    right -= padding;\n\n    const serif = {\n      thickness: this.render_options.serif_thickness,\n      height: sbl,\n    };\n    let lineThicknessHalf = sbl * 0.25;\n    if (!isNaN(this.render_options.line_thickness)) {\n      lineThicknessHalf = this.render_options.line_thickness * 0.5;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(left, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - sbl);\n    ctx.lineTo(right, y - sbl);\n    ctx.lineTo(right, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + sbl);\n    ctx.lineTo(left, y + sbl);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  drawSymbols(ctx: DrawContext, left: number, right: number, sbl: number): void {\n    const n4 = Math.floor(this.number_of_measures / 4);\n    const n = this.number_of_measures % 4;\n    const n2 = Math.floor(n / 2);\n    const n1 = n % 2;\n\n    const semibrave_rest = get_semibrave_rest();\n    const semibrave_rest_width = semibrave_rest.width *\n      (this.render_options.semibrave_rest_glyph_scale / semibrave_rest.glyph_font_scale);\n    const glyphs = {\n      2: {\n        width: semibrave_rest_width * 0.5,\n        height: sbl,\n      },\n      1: {\n        width: semibrave_rest_width,\n      },\n    };\n\n    let spacing = semibrave_rest_width * 1.35;\n    if (!isNaN(this.render_options.symbol_spacing)) {\n      spacing = this.render_options.symbol_spacing;\n    }\n\n    const width = (n4 * glyphs[2].width) + (n2 * glyphs[2].width)\n      + (n1 * glyphs[1].width) + ((n4 + n2 + n1 - 1) * spacing);\n    let x = left + ((right - left) * 0.5) - (width * 0.5);\n    const yTop = this.stave.getYForLine(this.render_options.line - 1);\n    const yMiddle = this.stave.getYForLine(this.render_options.line);\n    const yBottom = this.stave.getYForLine(this.render_options.line + 1);\n\n    ctx.save();\n    ctx.setStrokeStyle('none');\n    ctx.setLineWidth(0);\n\n    for (let i = 0; i < n4; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n2; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n1; ++i) {\n      Glyph.renderGlyph(ctx, x, yTop, this.render_options.semibrave_rest_glyph_scale,\n        semibrave_rest.glyph_code);\n      x += glyphs[1].width + spacing;\n    }\n\n    ctx.restore();\n  }\n\n  draw(): void {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const stave = this.stave;\n    const sbl = this.render_options.spacing_between_lines_px;\n\n    let left = stave.getNoteStartX();\n    let right = stave.getNoteEndX();\n\n    // FIXME: getNoteStartX() returns x+5(barline width) and\n    // getNoteEndX() returns x + width(no barline width) by default. how to fix?\n    const begModifiers = stave.getModifiers(StaveModifier.Position.BEGIN);\n    if (begModifiers.length === 1 && begModifiers[0].getCategory() === 'barlines') {\n      left -= begModifiers[0].getWidth();\n    }\n\n    if (!isNaN(this.render_options.padding_left)) {\n      left = stave.getX() + this.render_options.padding_left;\n    }\n\n    if (!isNaN(this.render_options.padding_right)) {\n      right = stave.getX() + stave.getWidth() - this.render_options.padding_right;\n    }\n\n    this.xs.left = left;\n    this.xs.right = right;\n\n    if (this.render_options.use_symbols) {\n      this.drawSymbols(ctx, left, right, sbl);\n    } else {\n      this.drawLine(ctx, left, right, sbl);\n    }\n\n    if (this.render_options.show_number) {\n      const timeSpec = '/' + this.number_of_measures;\n      const timeSig = new TimeSignature(null, undefined, false);\n      timeSig.point = this.render_options.number_glyph_point;\n      timeSig.setTimeSig(timeSpec);\n      timeSig.setStave(stave);\n      timeSig.x = left + ((right - left) * 0.5) - (timeSig.timeSig.glyph.getMetrics().width * 0.5);\n      timeSig.bottomLine = this.render_options.number_line;\n      timeSig.setContext(ctx).draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\nimport {Note} from './note';\nimport {Clef} from './clef';\nimport {Glyph} from './glyph';\nimport {DrawContext} from \"./types/common\";\nimport {IClefType} from \"./types/clef\";\nimport {IStaveNoteStruct} from \"./types/note\";\nimport {BoundingBox} from \"./boundingbox\";\nimport {RuntimeError} from \"./runtimeerror\";\n\n/** @constructor */\nexport class ClefNote extends Note {\n  private clef_obj: Clef;\n  private type: string;\n  private clef: IClefType;\n\n  static get CATEGORY(): string {\n    return 'clefnote';\n  }\n\n  constructor(type: string, size: string, annotation: string) {\n    super({duration: 'b'} as IStaveNoteStruct);\n    this.setAttribute('type', 'ClefNote');\n\n    this.setType(type, size, annotation);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  setType(type: string, size: string, annotation: string): this {\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getClef(): IClefType {\n    return this.clef;\n  }\n\n  setContext(context: DrawContext): this {\n    this.context = context;\n    (this.glyph as Glyph).setContext(this.context);\n    return this;\n  }\n\n  getBoundingBox(): BoundingBox {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext(): this {\n    /* overridden to ignore */\n    return this;\n  }\n\n  getCategory(): string {\n    return ClefNote.CATEGORY;\n  }\n\n  preFormat(): this {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw(): void {\n    if (!this.stave) throw new RuntimeError('NoStave', \"Can't draw without a stave.\");\n\n    if (!(this.glyph as Glyph).getContext()) {\n      (this.glyph as Glyph).setContext(this.context);\n    }\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    (this.glyph as Glyph).setStave(this.stave);\n    (this.glyph as Glyph).setYShift(\n      this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n    (this.glyph as Glyph).renderToStave(abs_x);\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.clef_obj.annotation !== undefined) {\n      const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n      if (!attachment.getContext()) {\n        attachment.setContext(this.context);\n      }\n      attachment.setStave(this.stave);\n      attachment.setYShift(\n        this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n      attachment.setXShift(this.clef_obj.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\n\nimport {Note} from './note';\nimport {KeySignature} from './keysignature';\nimport {IStaveNoteStruct} from \"./types/note\";\nimport {BoundingBox} from \"./boundingbox\";\n\nexport class KeySigNote extends Note {\n  private keySignature: KeySignature;\n\n  constructor(keySpec: string, cancelKeySpec: string, alterKeySpec: string) {\n    super({duration: 'b'} as IStaveNoteStruct);\n    this.setAttribute('type', 'KeySigNote');\n\n    this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox(): BoundingBox {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext(): this {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat(): this {\n    this.setPreFormatted(true);\n    this.keySignature.setStave(this.stave);\n    this.keySignature.format();\n    this.setWidth(this.keySignature.width);\n    return this;\n  }\n\n  draw(): void {\n    this.stave.checkContext();\n    this.setRendered();\n    this.keySignature.x = this.getAbsoluteX();\n    this.keySignature.setContext(this.context);\n    this.keySignature.draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport {Note} from './note';\nimport {TimeSignature} from './timesignature';\nimport {IStaveNoteStruct} from \"./types/note\";\nimport {BoundingBox} from \"./boundingbox\";\nimport {ITimeSignature} from \"./types/timesignature\";\n\nexport class TimeSigNote extends Note {\n  private timeSig: ITimeSignature;\n\n  constructor(timeSpec: string, customPadding?: number) {\n    super({duration: 'b'} as IStaveNoteStruct);\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox(): BoundingBox {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext(): this {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat(): this {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw(): void {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(\n      this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\nimport {Element} from './element';\nimport {ICurveRenderParams} from \"./types/common\";\nimport {StaveNote} from \"./stavenote\";\nimport {IStaveOptions} from \"./types/stave\";\nimport {Merge} from \"./flow\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport enum Position {\n  NEAR_HEAD = 1,\n  NEAR_TOP = 2\n}\n\nexport class Curve extends Element {\n  private readonly render_options: IStaveOptions;\n  private from: StaveNote;\n  private to: StaveNote;\n\n  static get Position(): typeof Position {\n    return Position;\n  }\n\n  static get PositionString(): Record<string, number> {\n    return {\n      nearHead: Curve.Position.NEAR_HEAD,\n      nearTop: Curve.Position.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from: StaveNote, to: StaveNote, options: IStaveOptions) {\n    super();\n    this.setAttribute('type', 'Curve');\n\n    this.render_options = {\n      spacing: 2,\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: Curve.Position.NEAR_HEAD,\n      position_end: Curve.Position.NEAR_HEAD,\n      invert: false,\n      cps: [{x: 0, y: 10}, {x: 0, y: 10}],\n    } as IStaveOptions;\n\n    Merge(this.render_options, options);\n    this.setNotes(from, to);\n  }\n\n  setNotes(from: StaveNote, to: StaveNote): this {\n    if (!from && !to) {\n      throw new RuntimeError(\n        'BadArguments', 'Curve needs to have either first_note or last_note set.'\n      );\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial(): boolean {\n    return (!this.from || !this.to);\n  }\n\n  renderCurve(params: ICurveRenderParams): void {\n    const ctx = this.context;\n    const cps = this.render_options.cps;\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cps[0].x,\n      first_y + (cps[0].y * params.direction),\n      last_x - cp_spacing + cps[1].x,\n      last_y + (cps[1].y * params.direction),\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cps[1].x,\n      last_y + ((cps[1].y + thickness) * params.direction),\n      first_x + cp_spacing + cps[0].x,\n      first_y + ((cps[0].y + thickness) * params.direction),\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw(): boolean {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position: string | number) {\n      return typeof (position) === 'string'\n        ? Curve.PositionString[position]\n        : position;\n    }\n\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === Curve.Position.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === Curve.Position.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === Curve.Position.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      first_x = last_note.getStave().getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      last_x = first_note.getStave().getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `TextDynamics` which renders traditional\n// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n//\n// You can render any dynamics string that contains a combination of\n// the following letters:  P, M, F, Z, R, S\nimport {Note} from './note';\nimport {Glyph} from './glyph';\nimport {INoteRenderOptions, IStaveNoteStruct} from \"./types/note\";\nimport {ITextDynamicsGlyph} from \"./types/textdynamics\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {LOG, Merge} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (TextDynamics.DEBUG) LOG('Vex.Flow.TextDynamics', args);\n}\n\nexport class TextDynamics extends Note {\n  static DEBUG: boolean;\n\n  private readonly sequence: string;\n\n  private line: number;\n  private glyphs: Glyph[];\n\n  // The glyph data for each dynamics letter\n  static get GLYPHS(): Record<string, ITextDynamicsGlyph> {\n    return {\n      'f': {\n        code: 'dynamicForte',\n        width: 12,\n      },\n      'p': {\n        code: 'dynamicPiano',\n        width: 14,\n      },\n      'm': {\n        code: 'dynamicMezzo',\n        width: 17,\n      },\n      's': {\n        code: 'dynamicSforzando',\n        width: 10,\n      },\n      'z': {\n        code: 'dynamicZ',\n        width: 12,\n      },\n      'r': {\n        code: 'dynamicRinforzando',\n        width: 12,\n      },\n    };\n  }\n\n  // A `TextDynamics` object inherits from `Note` so that it can be formatted\n  // within a `Voice`.\n  // Create the dynamics marking. `text_struct` is an object\n  // that contains a `duration` property and a `sequence` of\n  // letters that represents the letters to render\n  constructor(text_struct: IStaveNoteStruct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextDynamics');\n\n    this.sequence = text_struct.text.toLowerCase();\n    this.line = text_struct.line || 0;\n    this.glyphs = [];\n\n    Merge(this.render_options, {\n      glyph_font_size: 40,\n    } as INoteRenderOptions);\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  // Preformat the dynamics text\n  preFormat(): this {\n    let total_width = 0;\n    // Iterate through each letter\n    this.sequence.split('').forEach(letter => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new RuntimeError('Invalid dynamics character: ' + letter);\n\n      const size = this.render_options.glyph_font_size;\n      const glyph = new Glyph(glyph_data.code, size, {category: 'textNote'});\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Draw the dynamics text on the rendering context\n  draw(): void {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.stave.getYForLine(this.line + (-3));\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.context, letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport {Element} from './element';\nimport {DrawContext, ICoordinates, IStaveLineRenderOptions} from \"./types/common\";\nimport {StaveNote} from \"./stavenote\";\nimport {IFont} from \"./types/font\";\nimport {IGlyphProps} from \"./types/glyph\";\nimport {IStaveLineDrawArrowLineConfig, IStaveLineNotes} from \"./types/staveline\";\nimport {TEXT_HEIGHT_OFFSET_HACK} from \"./flow\";\nimport {RuntimeError} from \"./runtimeerror\";\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates\nfunction drawArrowHead(ctx: DrawContext, x0: number, y0: number, x1: number, y1: number, x2: number, y2: number) {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\n// Helper function to draw a line with arrow heads\nfunction drawArrowLine(ctx: DrawContext, point1: ICoordinates, point2: ICoordinates, config: IStaveLineDrawArrowLineConfig) {\n  const both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n  const x1 = point1.x;\n  const y1 = point1.y;\n  const x2 = point2.x;\n  const y2 = point2.y;\n\n  // For ends with arrow we actually want to stop before we get to the arrow\n  // so that wide lines won't put a flat end on the arrow.\n  const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ratio = (distance - config.arrowhead_length / 3) / distance;\n  let end_x;\n  let end_y;\n  let start_x;\n  let start_y;\n  if (config.draw_end_arrow || both_arrows) {\n    end_x = Math.round(x1 + (x2 - x1) * ratio);\n    end_y = Math.round(y1 + (y2 - y1) * ratio);\n  } else {\n    end_x = x2;\n    end_y = y2;\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    start_x = x1 + (x2 - x1) * (1 - ratio);\n    start_y = y1 + (y2 - y1) * (1 - ratio);\n  } else {\n    start_x = x1;\n    start_y = y1;\n  }\n\n  if (config.color) {\n    ctx.setStrokeStyle(config.color);\n    ctx.setFillStyle(config.color);\n  }\n\n  // Draw the shaft of the arrow\n  ctx.beginPath();\n  ctx.moveTo(start_x, start_y);\n  ctx.lineTo(end_x, end_y);\n  ctx.stroke();\n  ctx.closePath();\n\n  // calculate the angle of the line\n  const line_angle = Math.atan2(y2 - y1, x2 - x1);\n  // h is the line length of a side of the arrow head\n  const h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n  let angle1;\n  let angle2;\n  let top_x;\n  let top_y;\n  let bottom_x;\n  let bottom_y;\n\n  if (config.draw_end_arrow || both_arrows) {\n    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n    top_x = x2 + Math.cos(angle1) * h;\n    top_y = y2 + Math.sin(angle1) * h;\n\n    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n    bottom_x = x2 + Math.cos(angle2) * h;\n    bottom_y = y2 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    angle1 = line_angle + config.arrowhead_angle;\n    top_x = x1 + Math.cos(angle1) * h;\n    top_y = y1 + Math.sin(angle1) * h;\n\n    angle2 = line_angle - config.arrowhead_angle;\n    bottom_x = x1 + Math.cos(angle2) * h;\n    bottom_y = y1 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n  }\n}\n\nexport enum TextVerticalPosition {\n  TOP = 1,\n  BOTTOM = 2\n}\n\nexport enum TextJustification {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3\n}\n\nexport class StaveLine extends Element {\n  private readonly render_options: IStaveLineRenderOptions;\n\n  private text: string;\n  private font: IFont;\n  private first_indices: number[];\n  private last_indices: number[];\n  private notes: IStaveLineNotes;\n  private first_note: StaveNote;\n  private last_note: StaveNote;\n\n  // Text Positioning\n  static get TextVerticalPosition(): typeof TextVerticalPosition {\n    return TextVerticalPosition;\n  }\n\n  static get TextJustification(): typeof TextJustification {\n    return TextJustification;\n  }\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes: IStaveLineNotes) {\n    super();\n    this.setAttribute('type', 'StaveLine');\n\n    this.notes = notes;\n\n    this.text = '';\n\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    } as IFont;\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. Unsupported with Raphael (SVG)\n      line_dash: null,\n      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: null,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n\n    this.setNotes(notes);\n  }\n\n  // Set the font for the `StaveLine` text\n  setFont(font: IFont): this {\n    this.font = font;\n    return this;\n  }\n\n  // The the annotation for the `StaveLine`\n  setText(text: string): this {\n    this.text = text;\n    return this;\n  }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes: IStaveLineNotes): this {\n    if (!notes.first_note && !notes.last_note) {\n      throw new RuntimeError(\n        'BadArguments', 'Notes needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new RuntimeError(\n        'BadArguments', 'Connected notes must have similar index sizes'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle(): void {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle(): void {\n    const ctx = this.checkContext();\n\n    if (this.font) {\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    }\n\n    if (this.render_options.color) {\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw(): this {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position: ICoordinates = undefined;\n    let end_position: ICoordinates = undefined;\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = (first_note.getGlyph() as IGlyphProps).getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      drawArrowLine(ctx, start_position, end_position, this.render_options);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = (end_position.x - start_position.x);\n      const center_x = (delta_x / 2) + start_position.x;\n      x = center_x - (text_width / 2);\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x - text_width;\n    }\n\n    // Determine the y value to start the text\n    let y;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.getStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.getStave().getYForBottomText(TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements different types of pedal markings. These notation\n// elements indicate to the performer when to depress and release the a pedal.\n//\n// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n// custom text for the release/depress pedal markings.\nimport {Element} from './element';\nimport {Glyph} from './glyph';\nimport {DrawContext, IPedalMarkingGlyph, IPedalMarkingRenderOptions, IStyle} from \"./types/common\";\nimport {StaveNote} from \"./stavenote\";\nimport {IFont} from \"./types/font\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {LOG} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (PedalMarking.DEBUG) LOG('Vex.Flow.PedalMarking', args);\n}\n\n// Draws a pedal glyph with the provided `name` on a rendering `context`\n// at the coordinates `x` and `y. Takes into account the glyph data\n// coordinate shifts.\nfunction drawPedalGlyph(name: string, context: DrawContext, x: number, y: number, point: number) {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point, {category: 'pedalMarking'});\n  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n\nexport enum Styles {\n  TEXT = 1,\n  BRACKET = 2,\n  MIXED = 3\n}\n\nexport class PedalMarking extends Element {\n  static DEBUG: boolean;\n\n  private line: number;\n  private custom_depress_text: string;\n  private custom_release_text: string;\n  private render_options: IPedalMarkingRenderOptions;\n  private font: IFont;\n  private notes: StaveNote[];\n  private static TEXT: never;\n\n  // Glyph data\n  static get GLYPHS(): Record<string, IPedalMarkingGlyph> {\n    return {\n      'pedal_depress': {\n        code: 'keyboardPedalPed',\n        x_shift: -10,\n        y_shift: 0,\n      },\n      'pedal_release': {\n        code: 'keyboardPedalUp',\n        x_shift: -2,\n        y_shift: 3,\n      },\n    };\n  }\n\n  static get Styles(): typeof Styles {\n    return Styles;\n  }\n\n  static get StylesString(): Record<string, number> {\n    return {\n      text: PedalMarking.Styles.TEXT,\n      bracket: PedalMarking.Styles.BRACKET,\n      mixed: PedalMarking.Styles.MIXED,\n    };\n  }\n\n  // Create a sustain pedal marking. Returns the defaults PedalMarking.\n  // Which uses the traditional \"Ped\" and \"*\"\" markings.\n  static createSustain(notes: StaveNote[]): PedalMarking {\n    return new PedalMarking(notes);\n  }\n\n  // Create a sostenuto pedal marking\n  static createSostenuto(notes: StaveNote[]): PedalMarking {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  // Create an una corda pedal marking\n  static createUnaCorda(notes: StaveNote[]): PedalMarking {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  // ## Prototype Methods\n  constructor(notes: StaveNote[]) {\n    super();\n    this.setAttribute('type', 'PedalMarking');\n\n    this.notes = notes;\n    this.style = PedalMarking.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.font = {\n      family: 'Times New Roman',\n      size: 12,\n      weight: 'italic bold',\n    } as IFont;\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      color: 'black',\n    };\n  }\n\n  // Set custom text for the `depress`/`release` pedal markings. No text is\n  // set if the parameter is falsy.\n  setCustomText(depress: string, release?: string): this {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  // Set the pedal marking style\n  setStyle(style: IStyle | number): this {\n    if (style < 1 && style > 3) {\n      throw new RuntimeError('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n    }\n\n    this.style = style;\n    return this;\n  }\n\n  // Set the staff line to render the markings on\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  // Draw the bracket based pedal markings\n  drawBracketed(): void {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    let prev_x: number;\n    let prev_y: number;\n\n    // Iterate through each note\n    this.notes.forEach((note: StaveNote, index: number, notes: StaveNote[]) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.getStave().getYForBottomText(this.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new RuntimeError(\n          'InvalidConfiguration', 'The notes provided must be in order of ascending x positions'\n        );\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift: number;\n      const point = this.musicFont.lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift = prev_is_same ? 5 : 0;\n\n        if (this.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (this.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(this.custom_depress_text).width;\n            ctx.fillText(this.custom_depress_text, x - (text_width / 2), y);\n            x_shift = (text_width / 2) + this.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, point);\n            x_shift = 20 + this.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - this.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - this.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  // Draw the text based pedal markings. This defaults to the traditional\n  // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n  drawText(): void {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach(note => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.getStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(this.line + 3);\n\n      const point = this.musicFont.lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (this.custom_depress_text) {\n          text_width = ctx.measureText(this.custom_depress_text).width;\n          ctx.fillText(this.custom_depress_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (this.custom_release_text) {\n          text_width = ctx.measureText(this.custom_release_text).width;\n          ctx.fillText(this.custom_release_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  // Render the pedal marking in position on the rendering context\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    L('Rendering Pedal Marking');\n\n    if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.style === PedalMarking.Styles.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\nimport {Element} from './element';\nimport {Renderer} from './renderer';\nimport {DrawContext, ITextBracketRenderOptions} from \"./types/common\";\nimport {Note} from \"./note\";\nimport {IFont} from \"./types/font\";\nimport {ITextBracketParams} from \"./types/textbracket\";\nimport {IGlyphProps} from \"./types/glyph\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {LOG, TEXT_HEIGHT_OFFSET_HACK} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (TextBracket.DEBUG) LOG('Vex.Flow.TextBracket', args);\n}\n\nexport enum Position {\n  TOP = 1,\n  BOTTOM = -1\n}\n\nexport class TextBracket extends Element {\n  static DEBUG: boolean;\n\n  private readonly text: string;\n  private readonly superscript: string;\n  private readonly position: Position;\n\n  private line: number;\n  private start: Note;\n  private stop: Note;\n  private font: IFont;\n  private render_options: ITextBracketRenderOptions;\n\n  static get Positions(): typeof Position {\n    return Position;\n  }\n\n  static get PositionString(): Record<string, number> {\n    return {\n      top: TextBracket.Positions.TOP,\n      bottom: TextBracket.Positions.BOTTOM,\n    };\n  }\n\n  constructor({\n                start,\n                stop,\n                text = '',\n                superscript = '',\n                position = TextBracket.Positions.TOP\n              }: ITextBracketParams) {\n    super();\n    this.setAttribute('type', 'TextBracket');\n\n    this.start = start;\n    this.stop = stop;\n\n    this.text = text;\n    this.superscript = superscript;\n\n    this.position = typeof position === 'string'\n      ? TextBracket.PositionString[position]\n      : position;\n\n    this.line = 1;\n\n    this.font = {\n      family: 'Serif',\n      size: 15,\n      weight: 'italic',\n    } as IFont;\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  // Apply the text backet styling to the provided `context`\n  applyStyle(context: DrawContext): this {\n    // Apply style for the octave bracket\n    context.setFont(this.font.family, this.font.size, this.font.weight);\n    context.setStrokeStyle(this.render_options.color);\n    context.setFillStyle(this.render_options.color);\n    context.setLineWidth(this.render_options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed: boolean, dash: number[]): this {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the font for the text\n  setFont(font: IFont): this {\n    // We use Object.assign to support partial updates to the font object\n    this.font = {...this.font, ...font};\n    return this;\n  }\n\n  // Set the rendering `context` for the octave bracket\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  // Draw the octave bracket on the rendering context\n  draw(): void {\n    const ctx = this.context;\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracket.Positions.TOP:\n        y = this.start.getStave().getYForTopText(this.line);\n        break;\n      case TextBracket.Positions.BOTTOM:\n        y = this.start.getStave().getYForBottomText(this.line + TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = {x: this.start.getAbsoluteX(), y};\n    const stop = {x: this.stop.getAbsoluteX(), y};\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_width = ctx.measureText(this.text).width;\n    const main_height = ctx.measureText('M').width;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - (main_height / 2.5);\n\n    // Draw the superscript\n    ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const superscript_width = ctx.measureText(this.superscript).width;\n    const super_height = ctx.measureText('M').width;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + (this.stop.getGlyph() as IGlyphProps).getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracket.Positions.TOP) {\n      start_x += main_width + superscript_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracket.Positions.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += superscript_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(\n        ctx,\n        start_x,\n        line_y,\n        end_x,\n        line_y,\n        this.render_options.dash\n      );\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + (1 * this.position),\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n// be added to a voice and rendered in the middle of a stave. Since it has no\n// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n//\n// See `tests/barnote_tests.js` for usage examples.\nimport {Note} from './note';\nimport {Barline} from './stavebarline';\nimport {IBarnoteMetrics} from \"./types/common\";\nimport {IStaveNoteStruct} from \"./types/note\";\nimport {BoundingBox} from \"./boundingbox\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {LOG} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (BarNote.DEBUG) LOG('Vex.Flow.BarNote', args);\n}\n\nexport class BarNote extends Note {\n  private metrics: IBarnoteMetrics;\n  static DEBUG: boolean;\n  private type: number;\n\n  constructor(type = Barline.type.SINGLE) {\n    super({duration: 'b'} as IStaveNoteStruct);\n    this.setAttribute('type', 'BarNote');\n\n    this.metrics = {\n      widths: {},\n    };\n\n    const TYPE = Barline.type;\n    this.metrics.widths = {\n      [TYPE.SINGLE]: 8,\n      [TYPE.DOUBLE]: 12,\n      [TYPE.END]: 15,\n      [TYPE.REPEAT_BEGIN]: 14,\n      [TYPE.REPEAT_END]: 14,\n      [TYPE.REPEAT_BOTH]: 18,\n      [TYPE.NONE]: 0,\n    };\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.setType(type);\n  }\n\n  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n  getType(): number {\n    return this.type;\n  }\n\n  setType(type: string | number): this {\n    this.type = typeof (type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  getBoundingBox(): BoundingBox {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext(): this {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat(): this {\n    /* overridden to ignore */\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Render note to stave.\n  draw(): void {\n    this.checkContext();\n    if (!this.stave) throw new RuntimeError('NoStave', \"Can't draw without a stave.\");\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.stave);\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\nimport {StemmableNote} from './stemmablenote';\nimport {Stave} from \"./stave\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class GhostNote extends StemmableNote {\n  /** @constructor */\n  constructor(parameter: any) {\n    // Sanity check\n    if (!parameter) {\n      throw new RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    let note_struct;\n\n    // Preserve backwards-compatibility\n    if (typeof (parameter) === 'string') {\n      note_struct = { duration: parameter };\n    } else if (typeof (parameter) === 'object') {\n      note_struct = parameter;\n    } else {\n      throw new RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    super(note_struct);\n    this.setAttribute('type', 'GhostNote');\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  isRest(): boolean { return true; }\n\n  setStave(stave: Stave): this {\n    super.setStave(stave);\n    return this;\n  }\n\n  addToModifierContext(): this { /* intentionally overridden */ return this; }\n\n  preFormat(): this {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw(): void {\n    if (!this.stave) throw new RuntimeError('NoStave', \"Can't draw without a stave.\");\n\n    // Draw the modifiers\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(this.context);\n      modifier.drawWithStyle();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a musical system, which is a collection of staves,\n// each which can have one or more voices. All voices across all staves in\n// the system are formatted together.\n\nimport {Element} from './element';\nimport {Factory} from './factory';\nimport {Formatter} from './formatter';\nimport {Note} from './note';\nimport {DrawContext} from \"./types/common\";\nimport {Voice} from \"./voice\";\nimport {StaveConnector} from \"./staveconnector\";\nimport {IDebugNoteMetrics, ISystemOptions, ISystemParams} from \"./types/system\";\nimport {Stave} from \"./stave\";\nimport {IFactoryParams} from \"./types/factory\";\nimport {IStaveOptions} from \"./types/stave\";\n\nexport class System extends Element {\n  private options: ISystemOptions;\n  private factory: Factory;\n  private formatter: Formatter;\n  private startX: number;\n  private lastY: number;\n  private parts: ISystemParams[];\n  private connector: StaveConnector;\n  private debugNoteMetricsYs: IDebugNoteMetrics[];\n\n  constructor(params = {} as ISystemOptions) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  setOptions(options = {} as ISystemOptions): void {\n    this.options = {\n      x: 10,\n      y: 10,\n      width: 500,\n      connector: null,\n      spaceBetweenStaves: 12, // stave spaces\n      factory: null,\n      noJustification: false,\n      debugFormatter: false,\n      formatIterations: 0,   // number of formatter tuning steps\n      noPadding: false,\n      ...options,\n      details: {\n        alpha: 0.5,          // formatter tuner learning/shifting rate\n        ...options.details,\n      },\n    };\n\n    this.factory = this.options.factory || new Factory({renderer: {el: null}} as IStaveOptions);\n  }\n\n  setContext(context: DrawContext): this {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  addConnector(type = 'double'): StaveConnector {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    } as IFactoryParams);\n    return this.connector;\n  }\n\n  addStave(params: ISystemParams): Stave {\n    params = {\n      stave: null,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      ...params,\n      options: {\n        left_bar: false,\n        ...params.options,\n      },\n    };\n\n    if (!params.stave) {\n      params.stave = this.factory.Stave({\n        x: this.options.x,\n        y: this.options.y,\n        width: this.options.width,\n        options: params.options,\n      } as IFactoryParams);\n    }\n\n    params.voices.forEach((voice: Voice) =>\n      voice\n        .setContext(this.context)\n        .setStave(params.stave)\n        .getTickables()\n        .forEach(tickable => tickable.setStave(params.stave))\n    );\n\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  format(): void {\n    const formatter = new Formatter({...this.options.details});\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices: Voice[] = [];\n    const debugNoteMetricsYs: IDebugNoteMetrics[] = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach(part => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      formatter.joinVoices(part.voices);\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({y, voice: part.voices[0]});\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach(part => part.stave.setNoteStartX(startX));\n    const justifyWidth = this.options.noPadding ?\n      this.options.width - this.options.x :\n      this.options.width - (startX - this.options.x) - this.musicFont.lookupMetric('stave.padding');\n\n    formatter.format(allVoices, this.options.noJustification ? 0 : justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune({alpha: this.options.details.alpha});\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  draw(): void {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach(d => {\n      d.voice.getTickables().forEach((note: Note) => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\nimport {Accidental} from './accidental';\nimport {Articulation} from './articulation';\nimport {Annotation} from './annotation';\nimport {ChordSymbol} from './chordsymbol';\nimport {Formatter} from './formatter';\nimport {FretHandFinger} from './frethandfinger';\nimport {StringNumber} from './stringnumber';\nimport {TextDynamics} from './textdynamics';\nimport {ModifierContext} from './modifiercontext';\nimport {MultiMeasureRest} from './multimeasurerest';\nimport {Renderer} from './renderer';\nimport {Stave} from './stave';\nimport {StaveTie} from './stavetie';\nimport {StaveLine} from './staveline';\nimport {StaveNote} from './stavenote';\nimport {GlyphNote} from './glyphnote';\nimport {RepeatNote} from './repeatnote';\nimport {StaveConnector} from './staveconnector';\nimport {System} from './system';\nimport {TickContext} from './tickcontext';\nimport {Tuplet} from './tuplet';\nimport {Voice} from './voice';\nimport {Beam} from './beam';\nimport {Curve} from './curve';\nimport {GraceNote} from './gracenote';\nimport {GraceNoteGroup} from './gracenotegroup';\nimport {NoteSubGroup} from './notesubgroup';\nimport {EasyScore} from './easyscore';\nimport {TimeSigNote} from './timesignote';\nimport {KeySigNote} from './keysignote';\nimport {ClefNote} from './clefnote';\nimport {PedalMarking} from './pedalmarking';\nimport {TextBracket} from './textbracket';\nimport {VibratoBracket} from './vibratobracket';\nimport {GhostNote} from './ghostnote';\nimport {BarNote} from './barnote';\nimport {TabNote} from './tabnote';\nimport {TabStave} from './tabstave';\nimport {TextNote} from './textnote';\nimport {DrawContext, IRenderable} from \"./types/common\";\nimport {Glyph} from \"./glyph\";\nimport {INoteStruct, IStaveNoteStruct} from \"./types/note\";\nimport {TextFont} from './textfont';\nimport {IGlyphNoteOptions} from \"./types/glyphnote\";\nimport {IFactoryParams, IFactoryRendererOptions} from \"./types/factory\";\nimport {IStaveOptions} from \"./types/stave\";\nimport {IMultimeasureRestRenderOptions} from \"./types/multimeasurerest\";\nimport {ISystemOptions} from \"./types/system\";\nimport {ITextFontRegistry} from \"./types/textfont\";\nimport {IEasyScoreOptions} from \"./types/easyscore\";\nimport {LOG} from \"./flow\";\nimport {MakeException} from \"./runtimeerror\";\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (Factory.DEBUG) LOG('Vex.Flow.Factory', args);\n}\n\nconst X = MakeException('FactoryError');\n\nfunction setDefaults(params = {} as IFactoryParams, defaults: IFactoryParams) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  static DEBUG: boolean;\n\n  private readonly options: IStaveOptions;\n\n  private stave: Stave;\n  private context: DrawContext;\n  private staves: Stave[];\n  private voices: Voice[];\n  private renderQ: IRenderable[];\n  private systems: System[];\n\n  constructor(options: IStaveOptions) {\n    L('New factory: ', options);\n    this.options = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        context: null,\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: '',\n      },\n    } as IStaveOptions;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId: string, width = 500, height = 200): Factory {\n    return new Factory({renderer: {elementId, width, height} as IFactoryRendererOptions} as IStaveOptions);\n  }\n\n  reset(): void {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions(): IStaveOptions {\n    return this.options;\n  }\n\n  setOptions(options: IStaveOptions): void {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n    if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer(): void {\n    const {elementId, backend, width, height, background} = this.options.renderer;\n    if (elementId === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext(): DrawContext {\n    return this.context;\n  }\n\n  setContext(context: DrawContext): this {\n    this.context = context;\n    return this;\n  }\n\n  getStave(): Stave {\n    return this.stave;\n  }\n\n  getVoices(): Voice[] {\n    return this.voices;\n  }\n\n  // Returns pixels from current stave spacing.\n  space(spacing: number): number {\n    return this.options.stave.space * spacing;\n  }\n\n  Stave(params: IFactoryParams): Stave {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space,\n      },\n    } as IFactoryParams);\n\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params: IFactoryParams): TabStave {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space * 1.3,\n      },\n    } as IFactoryParams);\n\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct: IStaveNoteStruct): StaveNote {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GlyphNote(glyph: Glyph, noteStruct: IStaveNoteStruct, options: IGlyphNoteOptions): GlyphNote {\n    const note = new GlyphNote(glyph, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  RepeatNote(type: string, noteStruct: INoteStruct, options: IGlyphNoteOptions): RepeatNote {\n    const note = new RepeatNote(type, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct: IStaveNoteStruct): GhostNote {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct: IStaveNoteStruct): TextNote {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params: IFactoryParams): BarNote {\n    params = setDefaults(params, {\n      type: 'single',\n      options: {},\n    } as IFactoryParams);\n\n    const barNote = new BarNote(params.type as number);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params: IFactoryParams): ClefNote {\n    params = setDefaults(params, {\n      type: 'treble',\n      options: {\n        size: 'default',\n      },\n    } as IFactoryParams);\n\n    const clefNote = new ClefNote(params.type as string, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params: IFactoryParams): TimeSigNote {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    } as IFactoryParams);\n\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  KeySigNote(params: IFactoryParams): KeySigNote {\n    const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n    if (this.stave) keySigNote.setStave(this.stave);\n    keySigNote.setContext(this.context);\n    this.renderQ.push(keySigNote);\n    return keySigNote;\n  }\n\n  TabNote(noteStruct: IStaveNoteStruct): TabNote {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct: IStaveNoteStruct): GraceNote {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params: IFactoryParams): GraceNoteGroup {\n    const group = new GraceNoteGroup(params.notes as GraceNote[], params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params: IFactoryParams): Accidental {\n    params = setDefaults(params, {\n      type: null,\n      options: {},\n    } as IFactoryParams);\n\n    const accid = new Accidental(params.type as string);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params: IFactoryParams): Annotation {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    } as IFactoryParams);\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  ChordSymbol(params: IFactoryParams): ChordSymbol {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    } as IFactoryParams);\n\n    const chordSymbol = new ChordSymbol();\n    //TODO start: Are these methods used?\n    chordSymbol.setHorizontalJustification(params.hJustify);\n    chordSymbol.setVerticalJustification(params.vJustify);\n    //TODO end\n    chordSymbol.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    chordSymbol.setContext(this.context);\n    return chordSymbol;\n  }\n\n  Articulation(params: IFactoryParams): Articulation {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {},\n    } as IFactoryParams);\n\n    const articulation = new Articulation(params.type as string);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params: IFactoryParams): TextDynamics {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {},\n    } as IFactoryParams);\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    } as IStaveNoteStruct);\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params: IFactoryParams): FretHandFinger {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    } as IFactoryParams);\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params: IFactoryParams): StringNumber {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    } as IFactoryParams);\n\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext(): TickContext {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext(): ModifierContext {\n    return new ModifierContext();\n  }\n\n  MultiMeasureRest(params: IMultimeasureRestRenderOptions): MultiMeasureRest {\n    const multimeasurerest = new MultiMeasureRest(params.number_of_measures, params);\n    multimeasurerest.setContext(this.context);\n    this.renderQ.push(multimeasurerest);\n    return multimeasurerest;\n  }\n\n  Voice(params: IFactoryParams): Voice {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    } as IFactoryParams);\n    const voice = new Voice(params.time, params.options);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params: IFactoryParams): StaveConnector {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {},\n    } as IFactoryParams);\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type as number).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter(): Formatter {\n    return new Formatter();\n  }\n\n  Tuplet(params: IFactoryParams): Tuplet {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    } as IFactoryParams);\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params: IFactoryParams): Beam {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n        secondaryBeamBreaks: [],\n      },\n    } as IFactoryParams);\n\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params: IFactoryParams): Curve {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {},\n    } as IFactoryParams);\n\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params: IFactoryParams): StaveTie {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {\n        direction: undefined,\n      },\n    } as IFactoryParams);\n\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    }, params.text);\n\n    if (params.options.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params: IFactoryParams): StaveLine {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      options: {},\n    } as IFactoryParams);\n\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options.text) line.setText(params.options.text);\n    if (params.options.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params: IFactoryParams): VibratoBracket {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {\n        harsh: false,\n      },\n    } as IFactoryParams);\n\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params: IFactoryParams): TextBracket {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      text: '',\n      options: {\n        superscript: '',\n        position: 1,\n      },\n    } as IFactoryParams);\n\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params = {} as ISystemOptions): System {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {} as IEasyScoreOptions): EasyScore {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(params = {} as IFactoryParams): PedalMarking {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        style: 'mixed',\n      },\n    } as IFactoryParams);\n\n    const pedal = new PedalMarking(params.notes as StaveNote[]);\n    pedal.setStyle(PedalMarking.StylesString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params = {} as IFactoryParams): NoteSubGroup {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    } as IFactoryParams);\n\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  TextFont(params = {} as ITextFontRegistry): TextFont {\n    params.factory = this;\n    return new TextFont(params);\n  }\n\n  draw(): void {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport {GlyphNote} from './glyphnote';\nimport {Glyph} from './glyph';\nimport {INoteStruct, IStaveNoteStruct} from \"./types/note\";\nimport {IGlyphNoteOptions} from \"./types/glyphnote\";\n\nexport class RepeatNote extends GlyphNote {\n  constructor(type: string, noteStruct: INoteStruct, options: IGlyphNoteOptions) {\n    // Smufl Codes\n    const CODES = {\n      '1': 'repeat1Bar',\n      '2': 'repeat2Bars',\n      '4': 'repeat4Bars',\n      'slash': 'repeatBarSlash',\n    } as Record<string, string>;\n\n    noteStruct = {\n      duration: 'q',\n      align_center: type !== 'slash',\n      ...noteStruct,\n    };\n\n    super(null, {duration: 'q', align_center: type !== 'slash', ...noteStruct} as IStaveNoteStruct, options);\n    this.setAttribute('type', 'RepeatNote');\n\n    const glyphCode = CODES[type] || 'repeat1Bar';\n    const glyph = new Glyph(glyphCode, this.musicFont.lookupMetric('repeatNote.point', 40), {category: 'repeatNote'});\n    this.setGlyph(glyph);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a parser for a simple language to generate\n// VexFlow objects.\n\n/* eslint max-classes-per-file: \"off\" */\n\nimport {StaveNote} from './stavenote';\nimport {Parser} from './parser';\nimport {Articulation} from './articulation';\nimport {FretHandFinger} from './frethandfinger';\nimport {DrawContext, ICommitHook, IState} from \"./types/common\";\nimport {Factory} from \"./factory\";\nimport {\n  IEasyScoreDefaults,\n  IEasyScoreOptions,\n  IGrammarVal\n} from \"./types/easyscore\";\nimport {IBuilderElements, IBuilderOptions, IBuilderPiece} from \"./types/builder\";\nimport {IStaveNoteStruct} from \"./types/note\";\nimport {IFactoryParams} from \"./types/factory\";\nimport {Note} from \"./note\";\nimport {IStaveOptions} from \"./types/stave\";\nimport {IParserResult} from \"./types/parser\";\nimport {Voice} from \"./voice\";\nimport {LOG} from \"./flow\";\nimport {MakeException} from \"./runtimeerror\";\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (EasyScore.DEBUG) LOG('Vex.Flow.EasyScore', args);\n}\n\nconst X = MakeException('EasyScoreError');\n\nexport class Grammar {\n  private builder: Builder;\n\n  constructor(builder: Builder) {\n    this.builder = builder;\n  }\n\n  begin(): () => IGrammarVal {\n    return this.LINE;\n  }\n\n  LINE(): IGrammarVal {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    } as IGrammarVal;\n  }\n\n  PIECE(): IGrammarVal {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    } as IGrammarVal;\n  }\n\n  PIECES(): IGrammarVal {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    } as IGrammarVal;\n  }\n\n  PARAMS(): IGrammarVal {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    } as IGrammarVal;\n  }\n\n  CHORDORNOTE(): IGrammarVal {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    } as IGrammarVal;\n  }\n\n  CHORD(): IGrammarVal {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      run: (state: IState) => this.builder.addChord(state.matches[1]),\n    } as IGrammarVal;\n  }\n\n  NOTES(): IGrammarVal {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    } as IGrammarVal;\n  }\n\n  NOTE(): IGrammarVal {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    } as IGrammarVal;\n  }\n\n  SINGLENOTE(): IGrammarVal {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state: IState) =>\n        this.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]),\n    } as IGrammarVal;\n  }\n\n  ACCIDENTAL(): IGrammarVal {\n    return {\n      expect: [this.ACCIDENTALS],\n      maybe: true,\n    } as IGrammarVal;\n  }\n\n  DOTS(): IGrammarVal {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      run: (state: IState) => this.builder.setNoteDots(state.matches),\n    } as IGrammarVal;\n  }\n\n  TYPE(): IGrammarVal {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      run: (state: IState) => this.builder.setNoteType(state.matches[2]),\n    } as IGrammarVal;\n  }\n\n  DURATION(): IGrammarVal {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      run: (state: IState) => this.builder.setNoteDuration(state.matches[1]),\n    } as IGrammarVal;\n  }\n\n  OPTS(): IGrammarVal {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    } as IGrammarVal;\n  }\n\n  KEYVALS(): IGrammarVal {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    } as IGrammarVal;\n  }\n\n  KEYVAL(): IGrammarVal {\n    const unquote = (str: string) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      run: (state: IState) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n    } as IGrammarVal;\n  }\n\n  VAL(): IGrammarVal {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    } as IGrammarVal;\n  }\n\n  KEY() { return { token: '[a-zA-Z][a-zA-Z0-9]*' } as IGrammarVal; }\n  DVAL() { return { token: '[\"][^\"]*[\"]' } as IGrammarVal; }\n  SVAL() { return { token: \"['][^']*[']\" } as IGrammarVal; }\n  NOTENAME() { return { token: '[a-gA-G]' } as IGrammarVal; }\n  OCTAVE() { return { token: '[0-9]+' }as IGrammarVal;  }\n  ACCIDENTALS() { return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' }as IGrammarVal; }\n  DURATIONS() { return { token: '[0-9whq]+' } as IGrammarVal; }\n  TYPES() { return { token: '[rRsSxX]' } as IGrammarVal; }\n  LPAREN() { return { token: '[(]' } as IGrammarVal; }\n  RPAREN() { return { token: '[)]' } as IGrammarVal; }\n  COMMA() { return { token: '[,]' } as IGrammarVal; }\n  DOT() { return { token: '[.]' } as IGrammarVal; }\n  SLASH() { return { token: '[/]' } as IGrammarVal; }\n  MAYBESLASH() { return { token: '[/]?' } as IGrammarVal; }\n  EQUALS() { return { token: '[=]' } as IGrammarVal; }\n  LBRACKET() { return { token: '\\\\[' } as IGrammarVal; }\n  RBRACKET() { return { token: '\\\\]' } as IGrammarVal; }\n  EOL() { return { token: '$' } as IGrammarVal; }\n}\n\nexport class Builder {\n  private readonly factory: Factory;\n\n  private options: IBuilderOptions;\n  private elements: IBuilderElements;\n  private rollingDuration: string;\n  private piece: IBuilderPiece;\n  private commitHooks: ICommitHook[];\n\n  constructor(factory: Factory) {\n    this.factory = factory;\n    this.commitHooks = [];\n    this.reset();\n  }\n\n  reset(options = {}): void {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n    };\n    this.elements = {\n      notes: [],\n      accidentals: [],\n    };\n    this.rollingDuration = '8';\n    this.resetPiece();\n    Object.assign(this.options, options);\n  }\n\n  getFactory(): Factory {\n    return this.factory;\n  }\n\n  getElements(): IBuilderElements {\n    return this.elements;\n  }\n\n  addCommitHook(commitHook: ICommitHook): void {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece(): void {\n    L('resetPiece');\n    this.piece = {\n      chord: [],\n      duration: this.rollingDuration,\n      dots: 0,\n      type: undefined,\n      options: {},\n    };\n  }\n\n  setNoteDots(dots: string[]): void {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration: string): void {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type: string): void {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key: string, value: string): void {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key?: string, accid?: string, octave?: string): void {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({key, accid, octave});\n  }\n\n  addSingleNote(key: string, accid?: string, octave?: string): void {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  addChord(notes: any[]): void {\n    L('startChord');\n    if (typeof (notes[0]) !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach(n => {\n        if (n) this.addNote(...n);\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece(): void {\n    L('commitPiece');\n    const {factory} = this;\n\n    if (!factory) return;\n\n    const options = {...this.options, ...this.piece.options};\n    const {stem, clef} = options;\n    const autoStem = stem.toLowerCase() === 'auto';\n    const stemDirection = !autoStem && stem.toLowerCase() === 'up'\n      ? StaveNote.STEM_UP\n      : StaveNote.STEM_DOWN;\n\n    // Build StaveNotes.\n    const {chord, duration, dots, type} = this.piece;\n    const keys = chord.map(note => note.key + '/' + note.octave);\n    const note = factory.StaveNote({\n      keys,\n      duration,\n      dots,\n      type,\n      clef,\n      auto_stem: autoStem,\n    } as IStaveNoteStruct);\n    if (!autoStem) note.setStemDirection(stemDirection);\n\n    // Attach accidentals.\n    const accids = chord.map(note => note.accid || null);\n    accids.forEach((accid, i) => {\n      if (accid) note.addAccidental(i, factory.Accidental({type: accid} as IFactoryParams));\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) note.addDotToAll();\n\n    this.commitHooks.forEach(fn => fn(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.concat(accids);\n    this.resetPiece();\n  }\n}\n\nfunction setId({id}: any, note: StaveNote) {\n  if (id === undefined) return;\n\n  note.setAttribute('id', id);\n}\n\nfunction setClass(options: any, note: StaveNote) {\n  if (!options.class) return;\n\n  const commaSeparatedRegex = /\\s*,\\s*/;\n\n  options.class\n    .split(commaSeparatedRegex)\n    .forEach((className: string) => note.addClass(className));\n}\n\nexport class EasyScore {\n  static DEBUG: boolean;\n\n  private readonly defaults: IEasyScoreDefaults;\n\n  private factory: Factory;\n  private builder: Builder;\n  private grammar: Grammar;\n  private parser: Parser;\n  private options: IEasyScoreOptions;\n\n  constructor(options = {} as IEasyScoreOptions) {\n    this.setOptions(options);\n    this.defaults = {\n      clef: 'treble',\n      time: '4/4',\n      stem: 'auto',\n    };\n  }\n\n  set(defaults: IEasyScoreDefaults): this {\n    Object.assign(this.defaults, defaults);\n    return this;\n  }\n\n  setOptions(options: IEasyScoreOptions): this {\n    this.options = {\n      factory: null,\n      builder: null,\n      commitHooks: [\n        setId,\n        setClass,\n        Articulation.easyScoreHook,\n        FretHandFinger.easyScoreHook,\n      ],\n      throwOnError: false, ...options\n    };\n\n    this.factory = this.options.factory;\n    this.builder = this.options.builder || new Builder(this.factory);\n    this.grammar = new Grammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    this.options.commitHooks.forEach((commitHook) => this.addCommitHook(commitHook));\n    return this;\n  }\n\n  setContext(context: DrawContext): this {\n    if (this.factory) this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line: string, options = {}): IParserResult {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      throw new X('Error parsing line: ' + line, result);\n    }\n    return result;\n  }\n\n  beam(notes: Note[], options = {}): Note[] {\n    this.factory.Beam({notes, options} as IFactoryParams);\n    return notes;\n  }\n\n  tuplet(notes: Note[], options = {} as IStaveOptions): Note[] {\n    this.factory.Tuplet({notes, options} as IFactoryParams);\n    return notes;\n  }\n\n  notes(line: string, options = {}): Note[] {\n    options = {clef: this.defaults.clef, stem: this.defaults.stem, ...options};\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  voice(notes: StaveNote[], voiceOptions: any): Voice {\n    voiceOptions = {time: this.defaults.time, ...voiceOptions};\n    return this.factory.Voice(voiceOptions).addTickables(notes);\n  }\n\n  addCommitHook(commitHook: ICommitHook): void {\n    return this.builder.addCommitHook(commitHook);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\nimport {IParserResult} from \"./types/parser\";\nimport {IGrammarVal} from \"./types/easyscore\";\nimport {Grammar} from \"./easyscore\";\nimport {LOG} from \"./flow\";\nimport {MakeException} from \"./runtimeerror\";\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (Parser.DEBUG) LOG('Vex.Flow.Parser', args);\n}\n\nconst X = MakeException('ParserError');\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers.\nfunction flattenMatches(results: any): any {\n  if (results.matchedString !== undefined) return results.matchedString;\n  if (results.results) return flattenMatches(results.results);\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches);\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  static DEBUG: boolean;\n\n  private readonly grammar: Grammar;\n\n  private pos: number;\n  private errorPos: number;\n  private line: string;\n\n  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n  // the EasyScore grammar in easyscore.js.\n  constructor(grammar: Grammar) {\n    this.grammar = grammar;\n  }\n\n  // Parse `line` using current grammar. Returns {success: true} if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line: string): IParserResult {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = -1;\n    const results = this.expect(this.grammar.begin());\n    results.errorPos = this.errorPos;\n    return results;\n  }\n\n  matchFail(returnPos: number): void {\n    if (this.errorPos === -1) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess(): void {\n    this.errorPos = -1;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token: string, noSpace = false): IParserResult {\n    const regexp = noSpace\n      ? new RegExp('^((' + token + '))')\n      : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      } as IParserResult;\n    } else {\n      return {\n        success: false,\n        pos: this.pos,\n      } as IParserResult;\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  expectOne(rule: IGrammarVal, maybe = false): IParserResult {\n    const results: IParserResult[] = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = (maybe === true) || (rule.maybe === true);\n\n    // Execute all sub rules in sequence.\n    for (let i = 0; i < rule.expect.length; i++) {\n      const next = rule.expect[i];\n      const localPos = this.pos;\n      const result = this.expect(next);\n\n      // If `rule.or` is set, then return success if any one\n      // of the subrules match, else all subrules must match.\n      if (result.success) {\n        results.push(result);\n        oneMatch = true;\n        if (rule.or) break;\n      } else {\n        allMatches = false;\n        if (!rule.or) {\n          this.pos = localPos;\n          break;\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || (maybe === true);\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return {success, results, numMatches: gotOne ? 1 : 0} as IParserResult;\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule: IGrammarVal, maybe = false): IParserResult {\n    const results: IParserResult[] = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success) {\n        numMatches++;\n        results.push(result.results as any);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = (numMatches > 0) || (maybe === true);\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return {success, results, numMatches} as IParserResult;\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule: IGrammarVal): IParserResult {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided the `rules` function. This\n  // ofloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(rules: () => IGrammarVal): IParserResult {\n    L('Evaluating rules:', rules);\n    let result: IParserResult;\n    if (!rules) {\n      throw new X('Invalid Rule: ' + rules, rules);\n    }\n\n    // Get rule from Grammar class.\n    const rule = rules.bind(this.grammar)();\n\n    if (rule.token) {\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, (rule.noSpace === true));\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos;\n      }\n    } else if (rule.expect) {\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      throw new X('Bad grammar! No `token` or `expect` property', rule);\n    }\n\n    // If there's a trigger attached to this rule, then pull it.\n    result.matches = [];\n    if (result.results) result.results.forEach((r: any) => result.matches.push(flattenMatches(r)));\n    if (rule.run && result.success) rule.run(result);\n    return result;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// The tickable interface. Tickables are things that sit on a score and\n// have a duration, i.e., they occupy space in the musical rendering dimension.\nimport {Element} from './element';\nimport {Fraction} from './fraction';\nimport {Voice} from \"./voice\";\nimport {Tuplet} from \"./tuplet\";\nimport {ModifierContext} from \"./modifiercontext\";\nimport {TickContext} from \"./tickcontext\";\nimport {IFormatterMetrics} from \"./types/formatter\";\nimport {ModifierClass} from \"./types/modifiercontext\";\nimport {RESOLUTION} from \"./flow\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class Tickable extends Element {\n  ignore_ticks: boolean;\n  tupletStack: Tuplet[];\n  tuplet: Tuplet;\n  ticks: Fraction;\n  center_x_shift: number;\n  voice: Voice;\n\n  protected width: number;\n  protected x_shift: number;\n  protected preFormatted: boolean;\n  protected postFormatted: boolean;\n  protected modifierContext: ModifierContext | TickContext;\n  protected tickContext: TickContext;\n  protected modifiers: ModifierClass[];\n\n  private readonly tickMultiplier: Fraction;\n  private readonly formatterMetrics: IFormatterMetrics;\n\n  private intrinsicTicks: number;\n  private align_center: boolean;\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Tickable');\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1); // Fractional value of ticks\n    this.intrinsicTicks = 0; // Floating point value of ticks\n    this.tickMultiplier = new Fraction(1, 1);\n\n    // Formatter metrics\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n\n    this.voice = null;\n    this.tickContext = null;\n    this.modifierContext = null;\n    this.modifiers = [];\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.tuplet = null;\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: {left: 0, right: 0},\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  reset(): this {\n    return this;\n  }\n\n  getTicks(): Fraction {\n    return this.ticks;\n  }\n\n  shouldIgnoreTicks(): boolean {\n    return this.ignore_ticks;\n  }\n\n  // Get and set width of note. Used by the formatter for positioning.\n  setWidth(width: number): void {\n    this.width = width;\n  }\n\n  getWidth(): number {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  // Displace note by `x` pixels. Used by the formatter.\n  setXShift(x: number): this {\n    this.x_shift = x;\n    return this;\n  }\n\n  getXShift(): number {\n    return this.x_shift;\n  }\n\n  // Get `X` position of this tick context.\n  getX(): number {\n    if (!this.tickContext) {\n      throw new RuntimeError('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    return this.tickContext.getX() + this.x_shift;\n  }\n\n  getFormatterMetrics(): IFormatterMetrics {\n    return this.formatterMetrics;\n  }\n\n  getCenterXShift(): number {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n\n  isCenterAligned(): boolean {\n    return this.align_center;\n  }\n\n  setCenterAlignment(align_center: boolean): this {\n    this.align_center = align_center;\n    return this;\n  }\n\n  // Every tickable must be associated with a voice. This allows formatters\n  // and preFormatter to associate them with the right modifierContexts.\n  getVoice(): Voice {\n    if (!this.voice) throw new RuntimeError('NoVoice', 'Tickable has no voice.');\n    return this.voice;\n  }\n\n  setVoice(voice: Voice): void {\n    this.voice = voice;\n  }\n\n  getTuplet(): Tuplet {\n    return this.tuplet;\n  }\n\n  /*\n   * resetTuplet\n   * @param tuplet -- the specific tuplet to reset\n   *   if this is not provided, all tuplets are reset.\n   * @returns this\n   *\n   * Removes any prior tuplets from the tick calculation and\n   * resets the intrinsic tick value to\n   */\n  resetTuplet(tuplet: Tuplet): this {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop();\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  setTuplet(tuplet: Tuplet): this {\n    // Attach to new tuplet\n\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addToModifierContext(mc: ModifierContext | TickContext): void {\n    this.modifierContext = mc;\n    // Add modifiers to modifier context (if any)\n    this.preFormatted = false;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addModifier(mod: ModifierClass): this {\n    this.modifiers.push(mod);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(): ModifierClass[] {\n    return this.modifiers;\n  }\n\n  setTickContext(tc: TickContext): void {\n    this.tickContext = tc;\n    this.preFormatted = false;\n  }\n\n  preFormat(): void {\n    if (this.preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n\n  postFormat(): this {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n\n  getIntrinsicTicks(): number {\n    return this.intrinsicTicks;\n  }\n\n  setIntrinsicTicks(intrinsicTicks: number): void {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n\n  getTickMultiplier(): Fraction {\n    return this.tickMultiplier;\n  }\n\n  applyTickMultiplier(numerator: number, denominator: number): void {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n\n  setDuration(duration: Fraction): void {\n    const ticks = duration.numerator * (RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n}\n","export const PetalumaScriptTextMetrics = {\n  name: 'PetalumaScript',\n  smufl: false,\n  spacing:50,\n  \"glyphs\": {\n    \" \": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": 0,\n      \"y_max\": 500,\n      \"ha\": 500,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 250\n    },\"0\": {\n      \"x_min\": 33,\n      \"x_max\": 534,\n      \"y_min\": -13,\n      \"y_max\": 751,\n      \"ha\": 764,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 570\n    },\n    \"1\": {\n      \"x_min\": 48,\n      \"x_max\": 235,\n      \"y_min\": -17,\n      \"y_max\": 734,\n      \"ha\": 751,\n      \"leftSideBearing\": 48,\n      \"advanceWidth\": 286\n    },\n    \"2\": {\n      \"x_min\": 56,\n      \"x_max\": 571,\n      \"y_min\": -19,\n      \"y_max\": 741,\n      \"ha\": 760,\n      \"leftSideBearing\": 56,\n      \"advanceWidth\": 626\n    },\n    \"3\": {\n      \"x_min\": 50,\n      \"x_max\": 528,\n      \"y_min\": -7,\n      \"y_max\": 731,\n      \"ha\": 738,\n      \"leftSideBearing\": 50,\n      \"advanceWidth\": 589\n    },\n    \"4\": {\n      \"x_min\": 38,\n      \"x_max\": 564,\n      \"y_min\": -13,\n      \"y_max\": 743,\n      \"ha\": 756,\n      \"leftSideBearing\": 38,\n      \"advanceWidth\": 614\n    },\n    \"5\": {\n      \"x_min\": 42,\n      \"x_max\": 601,\n      \"y_min\": -34,\n      \"y_max\": 743,\n      \"ha\": 777,\n      \"leftSideBearing\": 42,\n      \"advanceWidth\": 648\n    },\n    \"6\": {\n      \"x_min\": 47,\n      \"x_max\": 606,\n      \"y_min\": -16,\n      \"y_max\": 743,\n      \"ha\": 759,\n      \"leftSideBearing\": 47,\n      \"advanceWidth\": 667\n    },\n    \"7\": {\n      \"x_min\": 47,\n      \"x_max\": 567,\n      \"y_min\": 5,\n      \"y_max\": 739,\n      \"ha\": 734,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 615\n    },\n    \"8\": {\n      \"x_min\": 40,\n      \"x_max\": 541,\n      \"y_min\": -15,\n      \"y_max\": 752,\n      \"ha\": 767,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 585\n    },\n    \"9\": {\n      \"x_min\": 40,\n      \"x_max\": 537,\n      \"y_min\": -52,\n      \"y_max\": 736,\n      \"ha\": 788,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 592\n    },\n    \"!\": {\n      \"x_min\": 49,\n      \"x_max\": 180,\n      \"y_min\": -7,\n      \"y_max\": 761,\n      \"ha\": 768,\n      \"leftSideBearing\": 49,\n      \"advanceWidth\": 230\n    },\n    \"\\\"\": {\n      \"x_min\": 39,\n      \"x_max\": 304,\n      \"y_min\": 596,\n      \"y_max\": 804,\n      \"ha\": 208,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 353\n    },\n    \"#\": {\n      \"x_min\": 33,\n      \"x_max\": 599,\n      \"y_min\": -8,\n      \"y_max\": 765,\n      \"ha\": 773,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 648\n    },\n    \"$\": {\n      \"x_min\": 53,\n      \"x_max\": 495,\n      \"y_min\": -111,\n      \"y_max\": 823,\n      \"ha\": 934,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 560\n    },\n    \"%\": {\n      \"x_min\": 35,\n      \"x_max\": 656,\n      \"y_min\": -128,\n      \"y_max\": 808,\n      \"ha\": 936,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 711\n    },\n    \"&\": {\n      \"x_min\": 53,\n      \"x_max\": 441,\n      \"y_min\": -3,\n      \"y_max\": 753,\n      \"ha\": 756,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 500\n    },\n    \"'\": {\n      \"x_min\": 43,\n      \"x_max\": 161,\n      \"y_min\": 590,\n      \"y_max\": 811,\n      \"ha\": 221,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 217\n    },\n    \"(\": {\n      \"x_min\": 41,\n      \"x_max\": 311,\n      \"y_min\": -36,\n      \"y_max\": 845,\n      \"ha\": 881,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 308\n    },\n    \")\": {\n      \"x_min\": -8,\n      \"x_max\": 257,\n      \"y_min\": -21,\n      \"y_max\": 852,\n      \"ha\": 873,\n      \"leftSideBearing\": -8,\n      \"advanceWidth\": 280\n    },\n    \"*\": {\n      \"x_min\": 59,\n      \"x_max\": 539,\n      \"y_min\": 175,\n      \"y_max\": 589,\n      \"ha\": 414,\n      \"leftSideBearing\": 59,\n      \"advanceWidth\": 601\n    },\n    \"+\": {\n      \"x_min\": 33,\n      \"x_max\": 361,\n      \"y_min\": 180,\n      \"y_max\": 587,\n      \"ha\": 407,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 400\n    },\n    \",\": {\n      \"x_min\": 15,\n      \"x_max\": 176,\n      \"y_min\": -129,\n      \"y_max\": 92,\n      \"ha\": 221,\n      \"leftSideBearing\": 15,\n      \"advanceWidth\": 205\n    },\n    \"-\": {\n      \"x_min\": 40,\n      \"x_max\": 380,\n      \"y_min\": 317,\n      \"y_max\": 452,\n      \"ha\": 135,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 422\n    },\n    \".\": {\n      \"x_min\": 48,\n      \"x_max\": 185,\n      \"y_min\": -56,\n      \"y_max\": 84,\n      \"ha\": 140,\n      \"leftSideBearing\": 48,\n      \"advanceWidth\": 227\n    },\n    \"/\": {\n      \"x_min\": -58,\n      \"x_max\": 654,\n      \"y_min\": -122,\n      \"y_max\": 844,\n      \"ha\": 966,\n      \"leftSideBearing\": -58,\n      \"advanceWidth\": 626\n    },\n    \":\": {\n      \"x_min\": 65,\n      \"x_max\": 225,\n      \"y_min\": 97,\n      \"y_max\": 536,\n      \"ha\": 439,\n      \"leftSideBearing\": 65,\n      \"advanceWidth\": 302\n    },\n    \";\": {\n      \"x_min\": 13,\n      \"x_max\": 295,\n      \"y_min\": -139,\n      \"y_max\": 536,\n      \"ha\": 675,\n      \"leftSideBearing\": 13,\n      \"advanceWidth\": 334\n    },\n    \"<\": {\n      \"x_min\": 28,\n      \"x_max\": 438,\n      \"y_min\": -1,\n      \"y_max\": 607,\n      \"ha\": 608,\n      \"leftSideBearing\": 28,\n      \"advanceWidth\": 475\n    },\n    \"=\": {\n      \"x_min\": 40,\n      \"x_max\": 383,\n      \"y_min\": 199.9598640852289,\n      \"y_max\": 541,\n      \"ha\": 341.0401359147711,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 422\n    },\n    \">\": {\n      \"x_min\": 35,\n      \"x_max\": 421,\n      \"y_min\": 28,\n      \"y_max\": 632,\n      \"ha\": 604,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 466\n    },\n    \"?\": {\n      \"x_min\": 45,\n      \"x_max\": 548,\n      \"y_min\": -17,\n      \"y_max\": 767,\n      \"ha\": 784,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 592\n    },\n    \"@\": {\n      \"x_min\": 51,\n      \"x_max\": 730,\n      \"y_min\": -78,\n      \"y_max\": 753,\n      \"ha\": 831,\n      \"leftSideBearing\": 51,\n      \"advanceWidth\": 781\n    },\n    \"A\": {\n      \"x_min\": 37,\n      \"x_max\": 554,\n      \"y_min\": -4,\n      \"y_max\": 746,\n      \"ha\": 750,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 617\n    },\n    \"B\": {\n      \"x_min\": 37,\n      \"x_max\": 532,\n      \"y_min\": 3,\n      \"y_max\": 783,\n      \"ha\": 780,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 579\n    },\n    \"C\": {\n      \"x_min\": 37,\n      \"x_max\": 583,\n      \"y_min\": -3,\n      \"y_max\": 775,\n      \"ha\": 778,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 623\n    },\n    \"D\": {\n      \"x_min\": 50,\n      \"x_max\": 530,\n      \"y_min\": -15,\n      \"y_max\": 749,\n      \"ha\": 764,\n      \"leftSideBearing\": 50,\n      \"advanceWidth\": 579\n    },\n    \"E\": {\n      \"x_min\": 45,\n      \"x_max\": 531,\n      \"y_min\": -1,\n      \"y_max\": 743,\n      \"ha\": 744,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 585\n    },\n    \"F\": {\n      \"x_min\": 45,\n      \"x_max\": 459,\n      \"y_min\": 23,\n      \"y_max\": 727,\n      \"ha\": 704,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 510\n    },\n    \"G\": {\n      \"x_min\": 31,\n      \"x_max\": 577,\n      \"y_min\": -8,\n      \"y_max\": 733,\n      \"ha\": 741,\n      \"leftSideBearing\": 31,\n      \"advanceWidth\": 611\n    },\n    \"H\": {\n      \"x_min\": 37,\n      \"x_max\": 493,\n      \"y_min\": -22,\n      \"y_max\": 758,\n      \"ha\": 780,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 535\n    },\n    \"I\": {\n      \"x_min\": 47,\n      \"x_max\": 501,\n      \"y_min\": -3,\n      \"y_max\": 731,\n      \"ha\": 734,\n      \"leftSideBearing\": 47,\n      \"advanceWidth\": 541\n    },\n    \"J\": {\n      \"x_min\": 33,\n      \"x_max\": 531,\n      \"y_min\": -23,\n      \"y_max\": 725,\n      \"ha\": 748,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 573\n    },\n    \"K\": {\n      \"x_min\": 43,\n      \"x_max\": 505,\n      \"y_min\": -10,\n      \"y_max\": 740,\n      \"ha\": 750,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 560\n    },\n    \"L\": {\n      \"x_min\": 49,\n      \"x_max\": 457,\n      \"y_min\": -2,\n      \"y_max\": 746,\n      \"ha\": 748,\n      \"leftSideBearing\": 49,\n      \"advanceWidth\": 510\n    },\n    \"M\": {\n      \"x_min\": 35,\n      \"x_max\": 699,\n      \"y_min\": 1,\n      \"y_max\": 744,\n      \"ha\": 743,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 743\n    },\n    \"N\": {\n      \"x_min\": 34,\n      \"x_max\": 533,\n      \"y_min\": -17,\n      \"y_max\": 761,\n      \"ha\": 778,\n      \"leftSideBearing\": 34,\n      \"advanceWidth\": 579\n    },\n    \"O\": {\n      \"x_min\": 41,\n      \"x_max\": 608,\n      \"y_min\": -5,\n      \"y_max\": 735,\n      \"ha\": 740,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 667\n    },\n    \"P\": {\n      \"x_min\": 53,\n      \"x_max\": 451,\n      \"y_min\": -18,\n      \"y_max\": 735,\n      \"ha\": 753,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 497\n    },\n    \"Q\": {\n      \"x_min\": 40,\n      \"x_max\": 599,\n      \"y_min\": -67,\n      \"y_max\": 744,\n      \"ha\": 811,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 648\n    },\n    \"R\": {\n      \"x_min\": 39,\n      \"x_max\": 487,\n      \"y_min\": 16,\n      \"y_max\": 735,\n      \"ha\": 719,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 535\n    },\n    \"S\": {\n      \"x_min\": 35,\n      \"x_max\": 552,\n      \"y_min\": -47,\n      \"y_max\": 708,\n      \"ha\": 755,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 604\n    },\n    \"T\": {\n      \"x_min\": 26,\n      \"x_max\": 656,\n      \"y_min\": -13,\n      \"y_max\": 718,\n      \"ha\": 731,\n      \"leftSideBearing\": 26,\n      \"advanceWidth\": 705\n    },\n    \"U\": {\n      \"x_min\": 41,\n      \"x_max\": 518,\n      \"y_min\": -20,\n      \"y_max\": 748,\n      \"ha\": 768,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 567\n    },\n    \"V\": {\n      \"x_min\": 47,\n      \"x_max\": 509,\n      \"y_min\": -26,\n      \"y_max\": 744,\n      \"ha\": 770,\n      \"leftSideBearing\": 47,\n      \"advanceWidth\": 567\n    },\n    \"W\": {\n      \"x_min\": 44,\n      \"x_max\": 789,\n      \"y_min\": -35,\n      \"y_max\": 720,\n      \"ha\": 755,\n      \"leftSideBearing\": 44,\n      \"advanceWidth\": 833\n    },\n    \"X\": {\n      \"x_min\": 63,\n      \"x_max\": 635,\n      \"y_min\": -10,\n      \"y_max\": 745,\n      \"ha\": 755,\n      \"leftSideBearing\": 63,\n      \"advanceWidth\": 680\n    },\n    \"Y\": {\n      \"x_min\": 43,\n      \"x_max\": 503,\n      \"y_min\": -21,\n      \"y_max\": 734,\n      \"ha\": 755,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 541\n    },\n    \"Z\": {\n      \"x_min\": 42,\n      \"x_max\": 584,\n      \"y_min\": -10,\n      \"y_max\": 739,\n      \"ha\": 749,\n      \"leftSideBearing\": 42,\n      \"advanceWidth\": 629\n    },\n    \"[\": {\n      \"x_min\": 46,\n      \"x_max\": 346,\n      \"y_min\": -150,\n      \"y_max\": 884,\n      \"ha\": 1034,\n      \"leftSideBearing\": 46,\n      \"advanceWidth\": 291\n    },\n    \"\\\\\": {\n      \"x_min\": 20,\n      \"x_max\": 616,\n      \"y_min\": -100,\n      \"y_max\": 797,\n      \"ha\": 897,\n      \"leftSideBearing\": 20,\n      \"advanceWidth\": 645\n    },\n    \"]\": {\n      \"x_min\": -76,\n      \"x_max\": 226,\n      \"y_min\": -150,\n      \"y_max\": 881,\n      \"ha\": 1031,\n      \"leftSideBearing\": -76,\n      \"advanceWidth\": 297\n    },\n    \"^\": {\n      \"x_min\": 43,\n      \"x_max\": 437,\n      \"y_min\": 517,\n      \"y_max\": 812,\n      \"ha\": 295,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 478\n    },\n    \"_\": {\n      \"x_min\": 29,\n      \"x_max\": 563,\n      \"y_min\": -110,\n      \"y_max\": -1,\n      \"ha\": 109,\n      \"leftSideBearing\": 29,\n      \"advanceWidth\": 598\n    },\n    \"`\": {\n      \"x_min\": 54,\n      \"x_max\": 321,\n      \"y_min\": 540,\n      \"y_max\": 747,\n      \"ha\": 207,\n      \"leftSideBearing\": 54,\n      \"advanceWidth\": 368\n    },\n    \"a\": {\n      \"x_min\": 20,\n      \"x_max\": 447,\n      \"y_min\": -17,\n      \"y_max\": 495,\n      \"ha\": 512,\n      \"leftSideBearing\": 20,\n      \"advanceWidth\": 494\n    },\n    \"b\": {\n      \"x_min\": 37,\n      \"x_max\": 466,\n      \"y_min\": -27,\n      \"y_max\": 770,\n      \"ha\": 797,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 510\n    },\n    \"c\": {\n      \"x_min\": 35,\n      \"x_max\": 456,\n      \"y_min\": -9,\n      \"y_max\": 507,\n      \"ha\": 516,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 460\n    },\n    \"d\": {\n      \"x_min\": 45,\n      \"x_max\": 520,\n      \"y_min\": -15,\n      \"y_max\": 764,\n      \"ha\": 779,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 560\n    },\n    \"e\": {\n      \"x_min\": 33,\n      \"x_max\": 370,\n      \"y_min\": -5,\n      \"y_max\": 501,\n      \"ha\": 506,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 397\n    },\n    \"f\": {\n      \"x_min\": 35,\n      \"x_max\": 411,\n      \"y_min\": -13,\n      \"y_max\": 695,\n      \"ha\": 708,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 453\n    },\n    \"g\": {\n      \"x_min\": 33,\n      \"x_max\": 551,\n      \"y_min\": -257,\n      \"y_max\": 505,\n      \"ha\": 762,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 611\n    },\n    \"h\": {\n      \"x_min\": 32,\n      \"x_max\": 458,\n      \"y_min\": -29,\n      \"y_max\": 743,\n      \"ha\": 772,\n      \"leftSideBearing\": 32,\n      \"advanceWidth\": 491\n    },\n    \"i\": {\n      \"x_min\": 45,\n      \"x_max\": 167,\n      \"y_min\": -13,\n      \"y_max\": 631,\n      \"ha\": 644,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 220\n    },\n    \"j\": {\n      \"x_min\": -127,\n      \"x_max\": 261,\n      \"y_min\": -231,\n      \"y_max\": 601,\n      \"ha\": 832,\n      \"leftSideBearing\": -127,\n      \"advanceWidth\": 308\n    },\n    \"k\": {\n      \"x_min\": 39,\n      \"x_max\": 443,\n      \"y_min\": -3,\n      \"y_max\": 700,\n      \"ha\": 703,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 497\n    },\n    \"l\": {\n      \"x_min\": 58,\n      \"x_max\": 168,\n      \"y_min\": -8,\n      \"y_max\": 686,\n      \"ha\": 694,\n      \"leftSideBearing\": 58,\n      \"advanceWidth\": 227\n    },\n    \"m\": {\n      \"x_min\": 39,\n      \"x_max\": 688,\n      \"y_min\": -14,\n      \"y_max\": 501,\n      \"ha\": 515,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 718\n    },\n    \"n\": {\n      \"x_min\": 45,\n      \"x_max\": 491,\n      \"y_min\": -32,\n      \"y_max\": 512,\n      \"ha\": 544,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 541\n    },\n    \"o\": {\n      \"x_min\": 41,\n      \"x_max\": 424,\n      \"y_min\": -12,\n      \"y_max\": 493,\n      \"ha\": 505,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 447\n    },\n    \"p\": {\n      \"x_min\": 25,\n      \"x_max\": 529,\n      \"y_min\": -260,\n      \"y_max\": 500,\n      \"ha\": 760,\n      \"leftSideBearing\": 25,\n      \"advanceWidth\": 573\n    },\n    \"q\": {\n      \"x_min\": 53,\n      \"x_max\": 603,\n      \"y_min\": -235,\n      \"y_max\": 514,\n      \"ha\": 749,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 623\n    },\n    \"r\": {\n      \"x_min\": 32,\n      \"x_max\": 407,\n      \"y_min\": -7,\n      \"y_max\": 492,\n      \"ha\": 499,\n      \"leftSideBearing\": 32,\n      \"advanceWidth\": 460\n    },\n    \"s\": {\n      \"x_min\": 49,\n      \"x_max\": 416,\n      \"y_min\": -12,\n      \"y_max\": 519,\n      \"ha\": 531,\n      \"leftSideBearing\": 49,\n      \"advanceWidth\": 460\n    },\n    \"t\": {\n      \"x_min\": 32,\n      \"x_max\": 442,\n      \"y_min\": -5,\n      \"y_max\": 684,\n      \"ha\": 689,\n      \"leftSideBearing\": 32,\n      \"advanceWidth\": 469\n    },\n    \"u\": {\n      \"x_min\": 41,\n      \"x_max\": 487,\n      \"y_min\": -5,\n      \"y_max\": 507,\n      \"ha\": 512,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 510\n    },\n    \"v\": {\n      \"x_min\": 16,\n      \"x_max\": 441,\n      \"y_min\": -20,\n      \"y_max\": 542,\n      \"ha\": 562,\n      \"leftSideBearing\": 16,\n      \"advanceWidth\": 456\n    },\n    \"w\": {\n      \"x_min\": 39,\n      \"x_max\": 639,\n      \"y_min\": -22,\n      \"y_max\": 505,\n      \"ha\": 527,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 661\n    },\n    \"x\": {\n      \"x_min\": 15,\n      \"x_max\": 505,\n      \"y_min\": -39,\n      \"y_max\": 539,\n      \"ha\": 578,\n      \"leftSideBearing\": 15,\n      \"advanceWidth\": 541\n    },\n    \"y\": {\n      \"x_min\": -98,\n      \"x_max\": 501,\n      \"y_min\": -242,\n      \"y_max\": 511,\n      \"ha\": 753,\n      \"leftSideBearing\": -98,\n      \"advanceWidth\": 548\n    },\n    \"z\": {\n      \"x_min\": 27,\n      \"x_max\": 479,\n      \"y_min\": -3,\n      \"y_max\": 494,\n      \"ha\": 497,\n      \"leftSideBearing\": 27,\n      \"advanceWidth\": 494\n    },\n    \"{\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    },\n    \"|\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    },\n    \"}\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    },\n    \"~\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    }\n\n  },\n  \"fontFamily\": \"Petaluma Script\",\n  \"resolution\": 1000,\n  \"generatedOn\": \"2020-06-14T18:33:25.407Z\"\n};\n","export const RobotoSlabTextMetrics = {\n  name: 'RobotoSlab',\n  smufl: false,\n  spacing:50,\n  \"glyphs\": {\n    \" \": {\n      \"x_min\": 0,\n      \"x_max\": 509,\n      \"y_min\": 0,\n      \"y_max\": 2000,\n      \"ha\": 2000,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 509\n    },\n    \"0\": {\n      \"x_min\": 121,\n      \"x_max\": 1048,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 121,\n      \"advanceWidth\": 1168\n    },\n    \"1\": {\n      \"x_min\": 117,\n      \"x_max\": 767,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 117,\n      \"advanceWidth\": 844\n    },\n    \"2\": {\n      \"x_min\": 75.8474576645637,\n      \"x_max\": 1040,\n      \"y_min\": 0,\n      \"y_max\": 1477,\n      \"ha\": 1477,\n      \"leftSideBearing\": 75,\n      \"advanceWidth\": 1131\n    },\n    \"3\": {\n      \"x_min\": 74.85365853658536,\n      \"x_max\": 994,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 74,\n      \"advanceWidth\": 1106\n    },\n    \"4\": {\n      \"x_min\": 63,\n      \"x_max\": 1114,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 63,\n      \"advanceWidth\": 1187\n    },\n    \"5\": {\n      \"x_min\": 96.8448275474953,\n      \"x_max\": 982,\n      \"y_min\": -21,\n      \"y_max\": 1456,\n      \"ha\": 1477,\n      \"leftSideBearing\": 96,\n      \"advanceWidth\": 1081\n    },\n    \"6\": {\n      \"x_min\": 121,\n      \"x_max\": 1067,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 121,\n      \"advanceWidth\": 1144\n    },\n    \"7\": {\n      \"x_min\": 76,\n      \"x_max\": 1060,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": -30,\n      \"advanceWidth\": 1128\n    },\n    \"8\": {\n      \"x_min\": 92,\n      \"x_max\": 1039,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 92,\n      \"advanceWidth\": 1131\n    },\n    \"9\": {\n      \"x_min\": 84,\n      \"x_max\": 1026,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 84,\n      \"advanceWidth\": 1154\n    },\n    \"!\": {\n      \"x_min\": 143,\n      \"x_max\": 340,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 143,\n      \"advanceWidth\": 483\n    },\n    \"\\\"\": {\n      \"x_min\": 166,\n      \"x_max\": 634,\n      \"y_min\": 1055,\n      \"y_max\": 1560,\n      \"ha\": 505,\n      \"leftSideBearing\": 166,\n      \"advanceWidth\": 770\n    },\n    \"#\": {\n      \"x_min\": 63,\n      \"x_max\": 1179,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 63,\n      \"advanceWidth\": 1246\n    },\n    \"$\": {\n      \"x_min\": 81.92156915727656,\n      \"x_max\": 1012,\n      \"y_min\": -208,\n      \"y_max\": 1693,\n      \"ha\": 1901,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1110\n    },\n    \"%\": {\n      \"x_min\": 77,\n      \"x_max\": 1384,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 77,\n      \"advanceWidth\": 1460\n    },\n    \"&\": {\n      \"x_min\": 74,\n      \"x_max\": 1242,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 74,\n      \"advanceWidth\": 1289\n    },\n    \"'\": {\n      \"x_min\": 166,\n      \"x_max\": 324,\n      \"y_min\": 1055,\n      \"y_max\": 1560,\n      \"ha\": 505,\n      \"leftSideBearing\": 166,\n      \"advanceWidth\": 460\n    },\n    \"(\": {\n      \"x_min\": 114,\n      \"x_max\": 650,\n      \"y_min\": -463,\n      \"y_max\": 1636,\n      \"ha\": 2099,\n      \"leftSideBearing\": 114,\n      \"advanceWidth\": 662\n    },\n    \")\": {\n      \"x_min\": 11,\n      \"x_max\": 547,\n      \"y_min\": -463,\n      \"y_max\": 1636,\n      \"ha\": 2099,\n      \"leftSideBearing\": 11,\n      \"advanceWidth\": 654\n    },\n    \"*\": {\n      \"x_min\": 66,\n      \"x_max\": 893,\n      \"y_min\": 607,\n      \"y_max\": 1456,\n      \"ha\": 849,\n      \"leftSideBearing\": 66,\n      \"advanceWidth\": 958\n    },\n    \"+\": {\n      \"x_min\": 73,\n      \"x_max\": 1071,\n      \"y_min\": 146,\n      \"y_max\": 1206,\n      \"ha\": 1060,\n      \"leftSideBearing\": 73,\n      \"advanceWidth\": 1145\n    },\n    \",\": {\n      \"x_min\": 23,\n      \"x_max\": 315,\n      \"y_min\": -311,\n      \"y_max\": 221,\n      \"ha\": 532,\n      \"leftSideBearing\": 23,\n      \"advanceWidth\": 404\n    },\n    \"-\": {\n      \"x_min\": 154,\n      \"x_max\": 643,\n      \"y_min\": 538,\n      \"y_max\": 692,\n      \"ha\": 154,\n      \"leftSideBearing\": 154,\n      \"advanceWidth\": 797\n    },\n    \".\": {\n      \"x_min\": 145,\n      \"x_max\": 342,\n      \"y_min\": 0,\n      \"y_max\": 202,\n      \"ha\": 202,\n      \"leftSideBearing\": 145,\n      \"advanceWidth\": 493\n    },\n    \"/\": {\n      \"x_min\": 0,\n      \"x_max\": 774,\n      \"y_min\": -125,\n      \"y_max\": 1456,\n      \"ha\": 1581,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 824\n    },\n    \":\": {\n      \"x_min\": 145,\n      \"x_max\": 342,\n      \"y_min\": 0,\n      \"y_max\": 1082,\n      \"ha\": 1082,\n      \"leftSideBearing\": 145,\n      \"advanceWidth\": 419\n    },\n    \";\": {\n      \"x_min\": 53,\n      \"x_max\": 345,\n      \"y_min\": -311,\n      \"y_max\": 1082,\n      \"ha\": 1393,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 424\n    },\n    \"<\": {\n      \"x_min\": 76,\n      \"x_max\": 892,\n      \"y_min\": 107,\n      \"y_max\": 1013,\n      \"ha\": 906,\n      \"leftSideBearing\": 76,\n      \"advanceWidth\": 1017\n    },\n    \"=\": {\n      \"x_min\": 147,\n      \"x_max\": 981,\n      \"y_min\": 407,\n      \"y_max\": 987,\n      \"ha\": 580,\n      \"leftSideBearing\": 147,\n      \"advanceWidth\": 1127\n    },\n    \">\": {\n      \"x_min\": 125,\n      \"x_max\": 980,\n      \"y_min\": 87,\n      \"y_max\": 993,\n      \"ha\": 906,\n      \"leftSideBearing\": 125,\n      \"advanceWidth\": 1060\n    },\n    \"?\": {\n      \"x_min\": 65.92660602419838,\n      \"x_max\": 890,\n      \"y_min\": 0,\n      \"y_max\": 1477,\n      \"ha\": 1477,\n      \"leftSideBearing\": 65,\n      \"advanceWidth\": 953\n    },\n    \"@\": {\n      \"x_min\": 84.3592218305664,\n      \"x_max\": 1705.2346925277395,\n      \"y_min\": -453,\n      \"y_max\": 1431,\n      \"ha\": 1884,\n      \"leftSideBearing\": 84,\n      \"advanceWidth\": 1821\n    },\n    \"A\": {\n      \"x_min\": 70,\n      \"x_max\": 1463,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 70,\n      \"advanceWidth\": 1533\n    },\n    \"B\": {\n      \"x_min\": 81,\n      \"x_max\": 1253,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1322\n    },\n    \"C\": {\n      \"x_min\": 80,\n      \"x_max\": 1174,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 80,\n      \"advanceWidth\": 1290\n    },\n    \"D\": {\n      \"x_min\": 81,\n      \"x_max\": 1291,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1356\n    },\n    \"E\": {\n      \"x_min\": 81,\n      \"x_max\": 1190,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1306\n    },\n    \"F\": {\n      \"x_min\": 81,\n      \"x_max\": 1176,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1256\n    },\n    \"G\": {\n      \"x_min\": 80,\n      \"x_max\": 1226,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 80,\n      \"advanceWidth\": 1346\n    },\n    \"H\": {\n      \"x_min\": 81,\n      \"x_max\": 1497,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1578\n    },\n    \"I\": {\n      \"x_min\": 81,\n      \"x_max\": 604,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 685\n    },\n    \"J\": {\n      \"x_min\": 60,\n      \"x_max\": 1100,\n      \"y_min\": -21,\n      \"y_max\": 1456,\n      \"ha\": 1477,\n      \"leftSideBearing\": 60,\n      \"advanceWidth\": 1169\n    },\n    \"K\": {\n      \"x_min\": 81,\n      \"x_max\": 1427,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1501\n    },\n    \"L\": {\n      \"x_min\": 81,\n      \"x_max\": 1130,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1210\n    },\n    \"M\": {\n      \"x_min\": 94,\n      \"x_max\": 1888,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 94,\n      \"advanceWidth\": 1982\n    },\n    \"N\": {\n      \"x_min\": 83,\n      \"x_max\": 1509,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 83,\n      \"advanceWidth\": 1592\n    },\n    \"O\": {\n      \"x_min\": 70,\n      \"x_max\": 1281,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 70,\n      \"advanceWidth\": 1351\n    },\n    \"P\": {\n      \"x_min\": 81,\n      \"x_max\": 1242,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1297\n    },\n    \"Q\": {\n      \"x_min\": 70,\n      \"x_max\": 1348,\n      \"y_min\": -245,\n      \"y_max\": 1477,\n      \"ha\": 1722,\n      \"leftSideBearing\": 70,\n      \"advanceWidth\": 1376\n    },\n    \"R\": {\n      \"x_min\": 81,\n      \"x_max\": 1285,\n      \"y_min\": 0,\n      \"y_max\": 1455,\n      \"ha\": 1455,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1385\n    },\n    \"S\": {\n      \"x_min\": 115,\n      \"x_max\": 1116,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 115,\n      \"advanceWidth\": 1206\n    },\n    \"T\": {\n      \"x_min\": 96,\n      \"x_max\": 1306,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 96,\n      \"advanceWidth\": 1406\n    },\n    \"U\": {\n      \"x_min\": 70,\n      \"x_max\": 1452,\n      \"y_min\": -21,\n      \"y_max\": 1456,\n      \"ha\": 1477,\n      \"leftSideBearing\": 70,\n      \"advanceWidth\": 1522\n    },\n    \"V\": {\n      \"x_min\": 65,\n      \"x_max\": 1443,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 65,\n      \"advanceWidth\": 1508\n    },\n    \"W\": {\n      \"x_min\": 72,\n      \"x_max\": 2057,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 72,\n      \"advanceWidth\": 2129\n    },\n    \"X\": {\n      \"x_min\": 80,\n      \"x_max\": 1449,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 80,\n      \"advanceWidth\": 1529\n    },\n    \"Y\": {\n      \"x_min\": 65,\n      \"x_max\": 1396,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 65,\n      \"advanceWidth\": 1461\n    },\n    \"Z\": {\n      \"x_min\": 90,\n      \"x_max\": 1107,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 90,\n      \"advanceWidth\": 1197\n    },\n    \"[\": {\n      \"x_min\": 157,\n      \"x_max\": 541,\n      \"y_min\": -312,\n      \"y_max\": 1664,\n      \"ha\": 1976,\n      \"leftSideBearing\": 157,\n      \"advanceWidth\": 573\n    },\n    \"\\\\\": {\n      \"x_min\": 36,\n      \"x_max\": 830,\n      \"y_min\": -125,\n      \"y_max\": 1456,\n      \"ha\": 1581,\n      \"leftSideBearing\": 36,\n      \"advanceWidth\": 841\n    },\n    \"]\": {\n      \"x_min\": 23,\n      \"x_max\": 408,\n      \"y_min\": -312,\n      \"y_max\": 1664,\n      \"ha\": 1976,\n      \"leftSideBearing\": 23,\n      \"advanceWidth\": 552\n    },\n    \"^\": {\n      \"x_min\": 71,\n      \"x_max\": 802,\n      \"y_min\": 729,\n      \"y_max\": 1456,\n      \"ha\": 727,\n      \"leftSideBearing\": 71,\n      \"advanceWidth\": 864\n    },\n    \"_\": {\n      \"x_min\": 119,\n      \"x_max\": 1041,\n      \"y_min\": -154,\n      \"y_max\": 0,\n      \"ha\": 154,\n      \"leftSideBearing\": 119,\n      \"advanceWidth\": 1168\n    },\n    \"`\": {\n      \"x_min\": 40,\n      \"x_max\": 456,\n      \"y_min\": 1288,\n      \"y_max\": 1560,\n      \"ha\": 272,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 496\n    },\n    \"a\": {\n      \"x_min\": 79,\n      \"x_max\": 1053,\n      \"y_min\": -21,\n      \"y_max\": 1102,\n      \"ha\": 1123,\n      \"leftSideBearing\": 79,\n      \"advanceWidth\": 1132\n    },\n    \"b\": {\n      \"x_min\": -16,\n      \"x_max\": 1071,\n      \"y_min\": -21,\n      \"y_max\": 1560,\n      \"ha\": 1581,\n      \"leftSideBearing\": -16,\n      \"advanceWidth\": 1145\n    },\n    \"c\": {\n      \"x_min\": 78,\n      \"x_max\": 988,\n      \"y_min\": -21,\n      \"y_max\": 1102,\n      \"ha\": 1123,\n      \"leftSideBearing\": 78,\n      \"advanceWidth\": 1067\n    },\n    \"d\": {\n      \"x_min\": 78,\n      \"x_max\": 1156,\n      \"y_min\": -21,\n      \"y_max\": 1560,\n      \"ha\": 1581,\n      \"leftSideBearing\": 78,\n      \"advanceWidth\": 1218\n    },\n    \"e\": {\n      \"x_min\": 74,\n      \"x_max\": 980,\n      \"y_min\": -21,\n      \"y_max\": 1102,\n      \"ha\": 1123,\n      \"leftSideBearing\": 74,\n      \"advanceWidth\": 1059\n    },\n    \"f\": {\n      \"x_min\": 64,\n      \"x_max\": 731,\n      \"y_min\": 0,\n      \"y_max\": 1581,\n      \"ha\": 1581,\n      \"leftSideBearing\": 64,\n      \"advanceWidth\": 725\n    },\n    \"g\": {\n      \"x_min\": 78,\n      \"x_max\": 1133,\n      \"y_min\": -437,\n      \"y_max\": 1102,\n      \"ha\": 1539,\n      \"leftSideBearing\": 78,\n      \"advanceWidth\": 1157\n    },\n    \"h\": {\n      \"x_min\": 49,\n      \"x_max\": 1255,\n      \"y_min\": 0,\n      \"y_max\": 1560,\n      \"ha\": 1560,\n      \"leftSideBearing\": 49,\n      \"advanceWidth\": 1315\n    },\n    \"i\": {\n      \"x_min\": 67,\n      \"x_max\": 590,\n      \"y_min\": 0,\n      \"y_max\": 1560,\n      \"ha\": 1560,\n      \"leftSideBearing\": 67,\n      \"advanceWidth\": 652\n    },\n    \"j\": {\n      \"x_min\": -56,\n      \"x_max\": 381,\n      \"y_min\": -437,\n      \"y_max\": 1560,\n      \"ha\": 1997,\n      \"leftSideBearing\": -56,\n      \"advanceWidth\": 525\n    },\n    \"k\": {\n      \"x_min\": 64,\n      \"x_max\": 1248,\n      \"y_min\": 0,\n      \"y_max\": 1560,\n      \"ha\": 1560,\n      \"leftSideBearing\": 64,\n      \"advanceWidth\": 1287\n    },\n    \"l\": {\n      \"x_min\": 64,\n      \"x_max\": 587,\n      \"y_min\": 0,\n      \"y_max\": 1560,\n      \"ha\": 1560,\n      \"leftSideBearing\": 64,\n      \"advanceWidth\": 653\n    },\n    \"m\": {\n      \"x_min\": 74,\n      \"x_max\": 1905,\n      \"y_min\": 0,\n      \"y_max\": 1102,\n      \"ha\": 1102,\n      \"leftSideBearing\": 74,\n      \"advanceWidth\": 1977\n    },\n    \"n\": {\n      \"x_min\": 74,\n      \"x_max\": 1278,\n      \"y_min\": 0,\n      \"y_max\": 1102,\n      \"ha\": 1102,\n      \"leftSideBearing\": 74,\n      \"advanceWidth\": 1343\n    },\n    \"o\": {\n      \"x_min\": 78,\n      \"x_max\": 1046,\n      \"y_min\": -21,\n      \"y_max\": 1102,\n      \"ha\": 1123,\n      \"leftSideBearing\": 78,\n      \"advanceWidth\": 1124\n    },\n    \"p\": {\n      \"x_min\": 34,\n      \"x_max\": 1119,\n      \"y_min\": -416,\n      \"y_max\": 1102,\n      \"ha\": 1518,\n      \"leftSideBearing\": 34,\n      \"advanceWidth\": 1197\n    },\n    \"q\": {\n      \"x_min\": 78,\n      \"x_max\": 1135,\n      \"y_min\": -416,\n      \"y_max\": 1102,\n      \"ha\": 1518,\n      \"leftSideBearing\": 78,\n      \"advanceWidth\": 1139\n    },\n    \"r\": {\n      \"x_min\": 72,\n      \"x_max\": 808,\n      \"y_min\": 0,\n      \"y_max\": 1102,\n      \"ha\": 1102,\n      \"leftSideBearing\": 72,\n      \"advanceWidth\": 854\n    },\n    \"s\": {\n      \"x_min\": 104,\n      \"x_max\": 933,\n      \"y_min\": -21,\n      \"y_max\": 1102,\n      \"ha\": 1123,\n      \"leftSideBearing\": 104,\n      \"advanceWidth\": 1022\n    },\n    \"t\": {\n      \"x_min\": 24,\n      \"x_max\": 678,\n      \"y_min\": -17,\n      \"y_max\": 1343,\n      \"ha\": 1360,\n      \"leftSideBearing\": 24,\n      \"advanceWidth\": 730\n    },\n    \"u\": {\n      \"x_min\": 52,\n      \"x_max\": 1181,\n      \"y_min\": -21,\n      \"y_max\": 1082,\n      \"ha\": 1103,\n      \"leftSideBearing\": 52,\n      \"advanceWidth\": 1245\n    },\n    \"v\": {\n      \"x_min\": 26,\n      \"x_max\": 1176,\n      \"y_min\": 0,\n      \"y_max\": 1082,\n      \"ha\": 1082,\n      \"leftSideBearing\": 26,\n      \"advanceWidth\": 1206\n    },\n    \"w\": {\n      \"x_min\": 52,\n      \"x_max\": 1777,\n      \"y_min\": 0,\n      \"y_max\": 1082,\n      \"ha\": 1082,\n      \"leftSideBearing\": 52,\n      \"advanceWidth\": 1823\n    },\n    \"x\": {\n      \"x_min\": 42,\n      \"x_max\": 1163,\n      \"y_min\": 0,\n      \"y_max\": 1082,\n      \"ha\": 1082,\n      \"leftSideBearing\": 42,\n      \"advanceWidth\": 1203\n    },\n    \"y\": {\n      \"x_min\": 24,\n      \"x_max\": 1172,\n      \"y_min\": -437,\n      \"y_max\": 1082,\n      \"ha\": 1519,\n      \"leftSideBearing\": 24,\n      \"advanceWidth\": 1192\n    },\n    \"z\": {\n      \"x_min\": 88,\n      \"x_max\": 960,\n      \"y_min\": 0,\n      \"y_max\": 1082,\n      \"ha\": 1082,\n      \"leftSideBearing\": 88,\n      \"advanceWidth\": 1032\n    },\n    \"{\": {\n      \"x_min\": 63,\n      \"x_max\": 671,\n      \"y_min\": -364,\n      \"y_max\": 1597,\n      \"ha\": 1961,\n      \"leftSideBearing\": 63,\n      \"advanceWidth\": 701\n    },\n    \"|\": {\n      \"x_min\": 150,\n      \"x_max\": 307,\n      \"y_min\": -270,\n      \"y_max\": 1456,\n      \"ha\": 1726,\n      \"leftSideBearing\": 150,\n      \"advanceWidth\": 451\n    },\n    \"}\": {\n      \"x_min\": 27,\n      \"x_max\": 635,\n      \"y_min\": -364,\n      \"y_max\": 1597,\n      \"ha\": 1961,\n      \"leftSideBearing\": 27,\n      \"advanceWidth\": 701\n    },\n    \"~\": {\n      \"x_min\": 121,\n      \"x_max\": 1257,\n      \"y_min\": 401,\n      \"y_max\": 803,\n      \"ha\": 402,\n      \"leftSideBearing\": 121,\n      \"advanceWidth\": 1386\n    }\n  },\n  \"fontFamily\": \"Roboto Slab\",\n  \"resolution\": 2048,\n  \"generatedOn\": \"2020-06-15T19:12:58.120Z\"\n};\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport {TabTie} from './tabtie';\nimport {TabNote} from \"./tabnote\";\nimport {INotesStruct} from \"./types/note\";\nimport {IFont} from \"./types/font\";\nimport {ITabSlideRenderTieParams} from \"./types/tabslide\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class TabSlide extends TabTie {\n  private readonly slide_direction: number;\n\n  static get SLIDE_UP(): number {\n    return 1;\n  }\n\n  static get SLIDE_DOWN(): number {\n    return -1;\n  }\n\n  static createSlideUp(notes: INotesStruct): TabSlide {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes: INotesStruct): TabSlide {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  constructor(notes: INotesStruct, direction: number) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, 'sl.');\n    this.setAttribute('type', 'TabSlide');\n\n    if (!direction) {\n      const first_fret = (notes.first_note as TabNote).getPositions()[0].fret;\n      const last_fret = (notes.last_note as TabNote).getPositions()[0].fret;\n\n      direction = ((parseInt(first_fret, 10) > parseInt(last_fret, 10)) ?\n        TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP);\n    }\n\n    this.slide_direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.setFont({font: 'Times', size: 10, style: 'bold italic'} as IFont);\n    this.setNotes(notes);\n  }\n\n  renderTie(params: ITabSlideRenderTieParams): void {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new RuntimeError('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = this.slide_direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new RuntimeError('BadSlide', 'Invalid slide direction');\n    }\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const slide_y = first_ys[this.first_indices[i]] +\n        this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new RuntimeError('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + (3 * direction));\n      ctx.lineTo(last_x_px, slide_y - (3 * direction));\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.js` for usage examples.\nimport {TabNote} from './tabnote';\nimport {INoteRenderOptions, IStaveNoteStruct} from \"./types/note\";\nimport {Merge} from \"./flow\";\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY(): string {\n    return 'gracetabnotes';\n  }\n\n  constructor(note_struct: IStaveNoteStruct) {\n    super(note_struct, false);\n    this.setAttribute('type', 'GraceTabNote');\n\n    Merge(this.render_options, {\n      // vertical shift from stave line\n      y_shift: 0.3,\n      // grace glyph scale\n      scale: 0.6,\n      // grace tablature font\n      font: '7.5pt Arial',\n    } as INoteRenderOptions);\n\n    this.updateWidth();\n  }\n\n  getCategory(): string {\n    return GraceTabNote.CATEGORY;\n  }\n\n  draw(): void {\n    super.draw();\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of tunings for tablature.\nimport {RuntimeError} from \"./runtimeerror\";\nimport {integerToNote, keyProperties} from \"./flow\";\n\nexport class Tuning {\n  private numStrings: number;\n  private tuningString: string;\n  private tuningValues: number[];\n\n  static get names(): Record<string, string> {\n    return {\n      'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n      'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n      'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n      'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      'standardBanjo': 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  noteToInteger(noteString: string): number {\n    return keyProperties(noteString).int_value;\n  }\n\n  setTuning(noteString: string): void {\n    if (Tuning.names[noteString]) {\n      noteString = Tuning.names[noteString];\n    }\n\n    this.tuningString = noteString;\n    this.tuningValues = [];\n    this.numStrings = 0;\n\n    const keys = noteString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new RuntimeError('BadArguments', 'Invalid tuning string: ' + noteString);\n    }\n\n    this.numStrings = keys.length;\n    for (let i = 0; i < this.numStrings; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  getValueForString(stringNum: string): number {\n    const s = parseInt(stringNum, 10);\n    if (s < 1 || s > this.numStrings) {\n      throw new RuntimeError(\n        'BadArguments', `String number must be between 1 and ${this.numStrings}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  getValueForFret(fretNum: string, stringNum: string): number {\n    const stringValue = this.getValueForString(stringNum);\n    const f = parseInt(fretNum, 10);\n\n    if (f < 0) {\n      throw new RuntimeError('BadArguments', 'Fret number must be 0 or higher: ' +\n        fretNum);\n    }\n\n    return stringValue + f;\n  }\n\n  getNoteForFret(fretNum: string, stringNum: string): string {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return integerToNote(value) + '/' + octave;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\nimport {Music} from './music';\nimport {IKeyParts} from \"./types/common\";\nimport {IKeymanagerAccidental} from \"./types/keymanager\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class KeyManager {\n  private music: Music;\n  private keyParts: IKeyParts;\n  private keyString: string;\n  private key: string;\n  private scale: number[];\n  private scaleMap: Record<string, string>;\n  private scaleMapByValue: Record<number, string>;\n  private originalScaleMapByValue: Record<number, string>;\n\n  constructor(key: string) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key: string): this {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey(): string {\n    return this.key;\n  }\n\n  reset(): this {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key: string): IKeymanagerAccidental {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    } as IKeymanagerAccidental;\n  }\n\n  selectNote(note: string): IKeymanagerAccidental {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        'note': scaleNote,\n        'accidental': parts.accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        'note': valueNote,\n        'accidental': this.music.getNoteParts(valueNote).accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[\n      this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        'note': originalValueNote,\n        'accidental': this.music.getNoteParts(originalValueNote).accidental,\n        'change': true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        'note': modparts.root,\n        'accidental': null,\n        'change': true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      'accidental': parts.accidental,\n      'change': true,\n    };\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\nimport {Element} from './element';\nimport {Modifier} from './modifier';\nimport {DrawContext} from \"./types/common\";\nimport {Note} from \"./note\";\nimport {IStaveHairpinFormatter, IStaveHairpinRenderOptions, IStaveHairpinRenderParams} from \"./types/stavehairpin\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport enum Type {\n  CRESC = 1,\n  DECRESC = 2\n}\n\nexport class StaveHairpin extends Element {\n  private readonly hairpin: number;\n\n  private position: number;\n  private render_options: IStaveHairpinRenderOptions;\n  private notes: Record<string, Note>;\n  private first_note: Note;\n  private last_note: Note;\n\n  static get type(): typeof Type {\n    return Type;\n  }\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(\n    ctx: DrawContext,\n    formatter: IStaveHairpinFormatter,\n    notes: Record<string, Note>,\n    type: number,\n    position: number,\n    options: IStaveHairpinRenderOptions\n  ): void {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new RuntimeError(\n        'BadArguments',\n        'A valid Formatter must be provide to draw offsets by ticks.'\n      );\n    }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px\n    } as IStaveHairpinRenderOptions;\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note,\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes: Record<string, Note>, type: number) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n    } as IStaveHairpinRenderOptions;\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position: number): this {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options: IStaveHairpinRenderOptions): this {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes: Record<string, Note>): this {\n    if (!notes.first_note && !notes.last_note) {\n      throw new RuntimeError(\n        'BadArguments',\n        'Hairpin needs to have either first_note or last_note set.'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params: IStaveHairpinRenderParams): void {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw(): boolean {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.getStave().y + firstNote.getStave().height,\n      last_y: lastNote.getStave().y + lastNote.getStave().height,\n      staff_height: firstNote.getStave().height,\n    });\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n//\n// This class implements tremolo notation.\nimport {Modifier} from './modifier';\nimport {Glyph} from './glyph';\nimport {GraceNote} from './gracenote';\nimport {Stem} from './stem';\nimport {ITremoloRenderOptions} from \"./types/common\";\nimport {StaveNote} from \"./stavenote\";\nimport {IFont} from \"./types/font\";\nimport {RuntimeError} from \"./runtimeerror\";\n\nexport class Tremolo extends Modifier {\n  note: StaveNote;\n\n  private readonly code: string;\n  private readonly num: number;\n\n  private y_spacing: number;\n  private font: IFont;\n  private render_options: ITremoloRenderOptions;\n\n  static get CATEGORY(): string {\n    return 'tremolo';\n  }\n\n  constructor(num: number) {\n    super();\n    this.setAttribute('type', 'Tremolo');\n\n    this.num = num;\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'tremolo1';\n  }\n\n  getCategory(): string {\n    return Tremolo.CATEGORY;\n  }\n\n  draw(): void {\n    this.checkContext();\n\n    if (!(this.note && this.index != null)) {\n      throw new RuntimeError('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n    }\n\n    this.setRendered();\n    const stemDirection = this.note.getStemDirection();\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    const isGraceNote = this.note.getCategory() === 'gracenotes';\n    const scale = isGraceNote ? GraceNote.SCALE : 1;\n    const category = `tremolo.${isGraceNote ? 'grace' : 'default'}`;\n\n    this.y_spacing = this.musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n    const height = this.num * this.y_spacing;\n    let y = this.note.stem.getExtents().baseY - height;\n\n    if (stemDirection < 0) {\n      y += this.musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n    } else {\n      y += this.musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n    }\n\n    this.font = {\n      family: 'Arial',\n      size: 16 * scale,\n      weight: '',\n    } as IFont;\n\n    this.render_options = {\n      font_scale: this.musicFont.lookupMetric(`${category}.point`),\n      stroke_px: 3,\n      stroke_spacing: 10 * scale,\n    };\n\n    x += this.musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code, {category});\n      y += this.y_spacing;\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport {Note} from './note';\nimport {TickContext} from './tickcontext';\nimport {DrawContext, ICrescendoParams} from \"./types/common\";\nimport {INoteRenderOptions, IStaveNoteStruct} from \"./types/note\";\nimport {LOG, Merge} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (Crescendo.DEBUG) LOG('Vex.Flow.Crescendo', args);\n}\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx: DrawContext, params: ICrescendoParams) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height = params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x, y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x, y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x, y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  static DEBUG: boolean;\n\n  private decrescendo: boolean;\n  private height: number;\n  private line: number;\n\n  // Initialize the crescendo's properties\n  constructor(note_struct: IStaveNoteStruct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n\n    Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0,\n    } as INoteRenderOptions);\n  }\n\n  // Set the line to center the element on\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  // Set the full height at the open end\n  setHeight(height: number): this {\n    this.height = height;\n    return this;\n  }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc: boolean): this {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat(): this {\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the Crescendo object onto the canvas\n  draw(): void {\n    this.checkContext();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x = next_context ? (next_context as TickContext).getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n    L(\n      'Drawing ',\n      this.decrescendo ? 'decrescendo ' : 'crescendo ',\n      this.height,\n      'x',\n      begin_x - end_x\n    );\n\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport {Vex} from './vex';\nimport {Element} from './element';\nimport {Fraction} from './fraction';\nimport {Renderer} from './renderer';\nimport {Formatter} from './formatter';\nimport {Music} from './music';\nimport {Glyph} from './glyph';\nimport {Stave} from './stave';\nimport {StaveNote} from './stavenote';\nimport {StaveModifier} from './stavemodifier';\nimport {StaveTempo} from './stavetempo';\nimport {Voice} from './voice';\nimport {Accidental} from './accidental';\nimport {Beam} from './beam';\nimport {StaveTie} from './stavetie';\nimport {TabStave} from './tabstave';\nimport {TabNote} from './tabnote';\nimport {Bend} from './bend';\nimport {Vibrato} from './vibrato';\nimport {VibratoBracket} from './vibratobracket';\nimport {Note} from './note';\nimport {ModifierContext} from './modifiercontext';\nimport {MultiMeasureRest} from './multimeasurerest';\nimport {TickContext} from './tickcontext';\nimport {Articulation} from './articulation';\nimport {Annotation} from './annotation';\nimport {ChordSymbol} from './chordsymbol';\nimport {Barline} from './stavebarline';\nimport {NoteHead} from './notehead';\nimport {StaveConnector} from './staveconnector';\nimport {ClefNote} from './clefnote';\nimport {KeySignature} from './keysignature';\nimport {KeySigNote} from './keysignote';\nimport {TimeSignature} from './timesignature';\nimport {TimeSigNote} from './timesignote';\nimport {Stem} from './stem';\nimport {TabTie} from './tabtie';\nimport {Clef} from './clef';\nimport {Dot} from './dot';\nimport {Modifier} from './modifier';\nimport {TabSlide} from './tabslide';\nimport {Tuplet} from './tuplet';\nimport {GraceNote} from './gracenote';\nimport {GraceTabNote} from './gracetabnote';\nimport {Tuning} from './tuning';\nimport {KeyManager} from './keymanager';\nimport {StaveHairpin} from './stavehairpin';\nimport {BoundingBox} from './boundingbox';\nimport {Stroke} from './strokes';\nimport {TextNote} from './textnote';\nimport {Curve} from './curve';\nimport {TextDynamics} from './textdynamics';\nimport {StaveLine} from './staveline';\nimport {Ornament} from './ornament';\nimport {PedalMarking} from './pedalmarking';\nimport {TextBracket} from './textbracket';\nimport {FretHandFinger} from './frethandfinger';\nimport {Repetition} from './staverepetition';\nimport {BarNote} from './barnote';\nimport {GhostNote} from './ghostnote';\nimport {NoteSubGroup} from './notesubgroup';\nimport {GraceNoteGroup} from './gracenotegroup';\nimport {Tremolo} from './tremolo';\nimport {StringNumber} from './stringnumber';\nimport {Crescendo} from './crescendo';\nimport {Volta} from './stavevolta';\nimport {System} from './system';\nimport {Factory} from './factory';\nimport {Parser} from './parser';\nimport {EasyScore} from './easyscore';\nimport {Registry} from './registry';\nimport {StaveText} from './stavetext';\nimport {GlyphNote} from './glyphnote';\nimport {RepeatNote} from './repeatnote';\n\nimport {Font, Fonts, DefaultFontStack} from './smufl';\n\nexport default Vex;\nexport {\n  Vex,\n  Element,\n  Fraction,\n  Renderer,\n  Formatter,\n  Music,\n  Glyph,\n  Stave,\n  StaveNote,\n  StaveModifier,\n  StaveTempo,\n  Voice,\n  Accidental,\n  Beam,\n  StaveTie,\n  TabStave,\n  TabNote,\n  Bend,\n  Vibrato,\n  VibratoBracket,\n  Note,\n  ModifierContext,\n  MultiMeasureRest,\n  TickContext,\n  Articulation,\n  Annotation,\n  ChordSymbol,\n  Barline,\n  NoteHead,\n  StaveConnector,\n  ClefNote,\n  KeySignature,\n  KeySigNote,\n  TimeSignature,\n  TimeSigNote,\n  Stem,\n  TabTie,\n  Clef,\n  Dot,\n  Modifier,\n  TabSlide,\n  Tuplet,\n  GraceNote,\n  GraceTabNote,\n  Tuning,\n  KeyManager,\n  StaveHairpin,\n  BoundingBox,\n  Stroke,\n  TextNote,\n  Curve,\n  TextDynamics,\n  StaveLine,\n  Ornament,\n  PedalMarking,\n  TextBracket,\n  FretHandFinger,\n  Repetition,\n  BarNote,\n  GhostNote,\n  NoteSubGroup,\n  GraceNoteGroup,\n  Tremolo,\n  StringNumber,\n  Crescendo,\n  Volta,\n  System,\n  Factory,\n  Parser,\n  EasyScore,\n  Registry,\n  StaveText,\n  GlyphNote,\n  RepeatNote,\n  Font,\n  Fonts,\n  DefaultFontStack\n};\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n\n/* eslint max-classes-per-file: \"off\" */\nimport {\n  ACCIDENTALS, DURATIONS,\n  GLYPH_PROPS_VALID_TYPES, UNICODE,\n} from \"./tables\";\nimport {DefaultFontStack, Font, Fonts} from \"./smufl\";\nimport {Glyph} from \"./glyph\";\nimport {Fraction} from \"./fraction\";\nimport {BoundingBox} from \"./boundingbox\";\nimport {Renderer} from \"./renderer\";\nimport {Formatter} from \"./formatter\";\nimport {Music} from \"./music\";\nimport {Stave} from \"./stave\";\nimport {StaveNote} from \"./stavenote\";\nimport {StaveModifier} from \"./stavemodifier\";\nimport {StaveTempo} from \"./stavetempo\";\nimport {Voice} from \"./voice\";\nimport {Accidental} from \"./accidental\";\nimport {Beam} from \"./beam\";\nimport {StaveTie} from \"./stavetie\";\nimport {TabStave} from \"./tabstave\";\nimport {TabNote} from \"./tabnote\";\nimport {Bend} from \"./bend\";\nimport {Vibrato} from \"./vibrato\";\nimport {VibratoBracket} from \"./vibratobracket\";\nimport {Note} from \"./note\";\nimport {ModifierContext} from \"./modifiercontext\";\nimport {MultiMeasureRest} from \"./multimeasurerest\";\nimport {TickContext} from \"./tickcontext\";\nimport {Articulation} from \"./articulation\";\nimport {Annotation} from \"./annotation\";\nimport {ChordSymbol} from \"./chordsymbol\";\nimport {Barline} from \"./stavebarline\";\nimport {NoteHead} from \"./notehead\";\nimport {StaveConnector} from \"./staveconnector\";\nimport {ClefNote} from \"./clefnote\";\nimport {KeySignature} from \"./keysignature\";\nimport {KeySigNote} from \"./keysignote\";\nimport {TimeSignature} from \"./timesignature\";\nimport {TimeSigNote} from \"./timesignote\";\nimport {Stem} from \"./stem\";\nimport {TabTie} from \"./tabtie\";\nimport {Clef} from \"./clef\";\nimport {Dot} from \"./dot\";\nimport {Modifier} from \"./modifier\";\nimport {TabSlide} from \"./tabslide\";\nimport {Tuplet} from \"./tuplet\";\nimport {GraceNote} from \"./gracenote\";\nimport {GraceTabNote} from \"./gracetabnote\";\nimport {Tuning} from \"./tuning\";\nimport {KeyManager} from \"./keymanager\";\nimport {StaveHairpin} from \"./stavehairpin\";\nimport {Stroke} from \"./strokes\";\nimport {TextNote} from \"./textnote\";\nimport {Curve} from \"./curve\";\nimport {TextDynamics} from \"./textdynamics\";\nimport {StaveLine} from \"./staveline\";\nimport {Ornament} from \"./ornament\";\nimport {PedalMarking} from \"./pedalmarking\";\nimport {TextBracket} from \"./textbracket\";\nimport {FretHandFinger} from \"./frethandfinger\";\nimport {Repetition} from \"./staverepetition\";\nimport {BarNote} from \"./barnote\";\nimport {GhostNote} from \"./ghostnote\";\nimport {NoteSubGroup} from \"./notesubgroup\";\nimport {GraceNoteGroup} from \"./gracenotegroup\";\nimport {Tremolo} from \"./tremolo\";\nimport {StringNumber} from \"./stringnumber\";\nimport {Crescendo} from \"./crescendo\";\nimport {Volta} from \"./stavevolta\";\nimport {System} from \"./system\";\nimport {Factory} from \"./factory\";\nimport {Parser} from \"./parser\";\nimport {EasyScore} from \"./easyscore\";\nimport {Registry} from \"./registry\";\nimport {StaveText} from \"./stavetext\";\nimport {GlyphNote} from \"./glyphnote\";\nimport {RepeatNote} from \"./repeatnote\";\nimport {Element} from \"./element\";\nimport {\n  DEFAULT_NOTATION_FONT_SCALE,\n  DEFAULT_TIME,\n  keySignature, LOG, RESOLUTION,\n  STEM_HEIGHT\n} from \"./flow\";\n\nexport const Vex = {\n  Flow: {\n    unicode: UNICODE,\n    STEM_HEIGHT,\n    ACCIDENTALS,\n    keySignature: keySignature,\n    glyphPropsValidTypes: GLYPH_PROPS_VALID_TYPES,\n    TIME4_4: DEFAULT_TIME,\n    DEFAULT_NOTATION_FONT_SCALE,\n    RESOLUTION,\n    DURATIONS,\n    BoundingBox,\n    Element,\n    Fraction,\n    Renderer,\n    Formatter,\n    Music,\n    Glyph,\n    Stave,\n    StaveNote,\n    StaveModifier,\n    StaveTempo,\n    Voice,\n    Accidental,\n    Beam,\n    StaveTie,\n    TabStave,\n    TabNote,\n    Bend,\n    Vibrato,\n    VibratoBracket,\n    Note,\n    ModifierContext,\n    MultiMeasureRest,\n    TickContext,\n    Articulation,\n    Annotation,\n    ChordSymbol,\n    Barline,\n    NoteHead,\n    StaveConnector,\n    ClefNote,\n    KeySignature,\n    KeySigNote,\n    TimeSignature,\n    TimeSigNote,\n    Stem,\n    TabTie,\n    Clef,\n    Dot,\n    Modifier,\n    TabSlide,\n    Tuplet,\n    GraceNote,\n    GraceTabNote,\n    Tuning,\n    KeyManager,\n    StaveHairpin,\n    Stroke,\n    TextNote,\n    Curve,\n    TextDynamics,\n    StaveLine,\n    Ornament,\n    PedalMarking,\n    TextBracket,\n    FretHandFinger,\n    Repetition,\n    BarNote,\n    GhostNote,\n    NoteSubGroup,\n    GraceNoteGroup,\n    Tremolo,\n    StringNumber,\n    Crescendo,\n    Volta,\n    System,\n    Factory,\n    Parser,\n    EasyScore,\n    Registry,\n    StaveText,\n    GlyphNote,\n    RepeatNote,\n    Font,\n    Fonts,\n    DefaultFontStack\n  },\n  forEach: (a: never[], fn: (...args: unknown[]) => void): void => {\n    for (let i = 0; i < a.length; i++) {\n      fn(a[i], i);\n    }\n  },\n  // Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\n  BM: (s: never, f: () => void): void => {\n    const start_time = new Date().getTime();\n    f();\n    const elapsed = new Date().getTime() - start_time;\n    LOG(s + elapsed + 'ms');\n  }\n};\n","export const BravuraFont = {\n  \"glyphs\": {\n    \"bracketTop\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": 0,\n      \"y_max\": 295,\n      \"ha\": 295,\n      \"o\": \"m 0 168 l 0 0 l 180 0 b 674 390 410 43 616 150 b 675 405 675 396 675 400 b 664 425 675 416 671 422 b 628 405 651 425 635 415 b 157 179 613 389 432 199 l 12 179 b 0 168 3 179 0 177 z\"\n    },\n    \"bracketBottom\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -295,\n      \"y_max\": 0,\n      \"ha\": 295,\n      \"o\": \"m 0 0 l 0 -168 b 12 -179 0 -177 3 -179 l 157 -179 b 628 -405 432 -199 613 -389 b 664 -425 635 -415 651 -425 b 675 -405 671 -422 675 -416 b 674 -390 675 -400 675 -396 b 180 0 616 -150 410 -43 z\"\n    },\n    \"barlineTick\": {\n      \"x_min\": 0,\n      \"x_max\": 36,\n      \"y_min\": 868,\n      \"y_max\": 1120,\n      \"ha\": 252,\n      \"o\": \"m 52 1250 l 52 1613 l 0 1613 l 0 1250 z\"\n    },\n    \"breathMarkTick\": {\n      \"x_min\": 0,\n      \"x_max\": 500,\n      \"y_min\": 0,\n      \"y_max\": 502,\n      \"ha\": 502,\n      \"o\": \"m 0 374 b 9 334 0 367 0 343 b 179 19 40 312 164 121 b 192 0 179 3 186 0 b 210 19 197 0 207 6 b 698 701 245 197 507 658 b 720 714 714 704 720 711 b 698 723 720 720 711 723 b 197 186 455 714 210 202 b 186 176 194 179 189 176 b 176 186 179 176 176 186 b 9 367 143 266 27 359 b 0 374 6 372 3 374 z\"\n    },\n    \"segno\": {\n      \"x_min\": 4,\n      \"x_max\": 550,\n      \"y_min\": -27,\n      \"y_max\": 759,\n      \"ha\": 786,\n      \"o\": \"m 29 687 b 295 449 75 582 284 454 b 304 438 301 446 304 444 b 295 415 304 432 301 425 b 78 22 285 395 78 22 b 73 3 75 16 73 9 b 114 -39 73 -20 91 -39 b 150 -17 128 -39 143 -30 b 377 395 150 -17 373 386 b 395 402 377 393 389 402 b 704 176 416 397 704 312 b 624 75 704 120 670 82 b 613 73 621 75 616 73 b 562 138 586 73 562 94 l 562 154 b 485 249 562 209 526 249 b 468 246 480 249 474 248 b 366 153 415 233 366 210 b 540 -12 366 65 455 -12 b 600 -1 559 -12 579 -9 b 792 251 716 37 792 131 b 789 292 792 264 791 278 b 523 588 768 451 540 579 b 498 611 505 598 498 603 b 501 619 498 613 500 616 b 732 1032 508 631 732 1032 b 737 1053 736 1040 737 1045 b 697 1093 737 1076 719 1093 b 661 1073 683 1093 668 1086 b 423 647 661 1073 432 660 b 410 635 419 639 416 635 b 396 639 406 635 402 636 b 128 792 383 644 166 727 b 108 868 120 808 108 838 b 186 958 108 907 125 948 l 194 958 b 217 939 203 958 213 955 l 220 929 b 325 805 230 890 252 805 b 425 901 384 805 425 840 b 413 969 425 923 420 946 b 220 1060 390 1035 294 1060 b 6 793 120 1060 6 936 b 29 687 6 759 13 723 z m 680 589 b 762 671 726 589 762 626 b 680 753 762 717 726 753 b 598 671 635 753 598 717 b 680 589 598 626 635 589 z m 120 298 b 202 380 166 298 202 334 b 120 462 202 425 166 462 b 37 380 75 462 37 425 b 120 298 37 334 75 298 z\"\n    },\n    \"coda\": {\n      \"x_min\": -4,\n      \"x_max\": 955,\n      \"y_min\": -158,\n      \"y_max\": 898,\n      \"ha\": 1056,\n      \"o\": \"m -6 541 b 20 507 -6 523 0 507 l 210 507 b 660 0 226 238 426 19 l 660 -202 b 694 -228 660 -222 675 -228 b 729 -202 713 -228 729 -222 l 729 0 b 1178 507 962 19 1164 238 l 1349 507 b 1375 541 1369 507 1375 523 b 1349 576 1375 560 1369 576 l 1178 576 b 729 1083 1164 847 962 1064 l 729 1269 b 694 1293 729 1287 713 1293 b 660 1269 675 1293 660 1287 l 660 1083 b 210 576 426 1064 226 848 l 20 576 b -6 541 0 576 -6 560 z m 940 576 l 729 576 l 729 1002 b 940 576 930 985 940 809 z m 729 507 l 940 507 b 729 69 936 287 909 91 z m 455 576 b 660 1002 455 809 455 985 l 660 576 z m 660 507 l 660 69 b 455 507 474 91 456 285 z\"\n    },\n    \"gClef\": {\n      \"x_min\": 0,\n      \"x_max\": 671,\n      \"y_min\": -658,\n      \"y_max\": 1098,\n      \"ha\": 1756,\n      \"o\": \"m 524 -363 b 624 -354 557 -363 595 -360 b 645 -367 639 -351 642 -350 b 684 -657 662 -464 684 -589 b 455 -896 684 -870 540 -896 b 340 -854 377 -896 340 -873 b 386 -829 340 -844 353 -840 b 482 -694 431 -816 482 -778 b 344 -547 482 -615 432 -547 b 190 -713 248 -547 190 -624 b 464 -948 190 -806 246 -948 b 747 -660 560 -948 747 -904 b 706 -351 747 -577 721 -441 b 724 -327 703 -334 704 -336 b 966 16 870 -269 966 -147 b 619 363 966 200 831 363 b 577 389 582 363 582 363 l 541 598 b 550 625 539 615 541 616 b 824 1174 706 770 824 953 b 730 1509 824 1299 789 1423 b 655 1581 708 1541 671 1581 b 562 1512 635 1581 590 1544 b 420 1064 455 1394 420 1214 b 441 828 420 981 431 887 b 428 793 444 811 445 808 b 0 125 220 622 0 416 b 524 -363 0 -125 171 -363 z m 115 29 b 249 363 115 114 130 228 b 469 567 336 459 402 513 b 490 562 484 579 487 577 l 520 377 b 498 343 524 350 524 351 b 289 63 372 300 289 186 b 455 -192 289 -66 357 -158 b 494 -200 467 -196 484 -200 b 511 -184 505 -200 511 -193 b 490 -166 511 -174 500 -170 b 386 -12 429 -140 386 -78 b 530 157 386 71 442 132 b 559 145 553 163 556 161 l 631 -284 b 611 -304 634 -300 632 -300 b 530 -311 588 -308 559 -311 b 115 29 278 -311 115 -171 z m 677 1358 b 763 1240 724 1358 763 1319 b 513 851 763 1080 626 950 b 494 863 503 842 497 844 b 485 995 488 900 485 949 b 677 1358 485 1220 589 1358 z m 635 168 b 848 -66 752 158 848 60 b 713 -271 848 -157 793 -230 b 690 -262 696 -279 693 -279 l 619 148 b 635 168 616 166 618 170 z\"\n    },\n    \"cClef\": {\n      \"x_min\": 0,\n      \"x_max\": 699,\n      \"y_min\": -506,\n      \"y_max\": 506,\n      \"ha\": 1012,\n      \"o\": \"m 269 -694 b 300 -724 269 -714 279 -724 l 301 -724 b 331 -694 321 -724 331 -714 l 331 -63 b 344 -55 331 -52 338 -53 b 472 -265 382 -65 442 -102 b 500 -301 477 -288 485 -301 b 530 -262 516 -301 523 -287 b 684 -128 549 -199 582 -128 b 804 -409 778 -128 804 -220 b 651 -683 804 -598 770 -683 b 528 -644 631 -683 528 -674 b 567 -622 528 -636 552 -628 b 625 -528 596 -612 625 -583 b 527 -429 625 -465 583 -429 b 416 -547 465 -429 416 -471 b 667 -729 416 -638 495 -729 b 1007 -413 903 -729 1007 -563 b 706 -76 1007 -215 897 -76 b 618 -89 664 -76 636 -84 b 576 -88 603 -94 589 -96 b 524 0 556 -75 524 -29 b 576 88 524 29 556 75 b 618 89 589 96 603 94 b 706 76 636 84 664 76 b 1007 413 897 76 1007 215 b 667 729 1007 563 903 729 b 416 547 495 729 416 638 b 527 429 416 471 465 429 b 625 528 583 429 625 465 b 567 622 625 583 596 612 b 528 644 552 628 528 636 b 651 683 528 674 631 683 b 804 409 770 683 804 598 b 684 128 804 220 778 128 b 530 262 582 128 549 199 b 500 301 523 287 516 301 b 472 265 485 301 477 288 b 344 55 442 102 382 65 b 331 63 338 53 331 52 l 331 694 b 301 724 331 714 321 724 l 300 724 b 269 694 279 724 269 714 z m 30 -724 l 154 -724 b 184 -694 174 -724 184 -714 l 184 694 b 154 724 184 714 174 724 l 30 724 b 0 694 10 724 0 714 l 0 -694 b 30 -724 0 -714 10 -724 z\"\n    },\n    \"fClef\": {\n      \"x_min\": -5,\n      \"x_max\": 684,\n      \"y_min\": -635,\n      \"y_max\": 262,\n      \"ha\": 897,\n      \"o\": \"m 12 -914 b 36 -907 19 -914 27 -912 b 765 -40 390 -734 765 -478 b 363 377 765 210 612 377 b 0 56 112 377 0 194 b 177 -158 0 -59 60 -158 b 330 -6 268 -158 330 -95 b 192 144 330 86 262 144 b 120 134 153 144 138 134 b 96 160 101 134 96 145 b 330 323 96 217 183 323 b 549 -53 482 323 549 173 b 14 -871 549 -455 350 -680 b -7 -897 1 -878 -7 -886 b 12 -914 -7 -906 -1 -914 z m 906 101 b 985 180 950 101 985 135 b 906 259 985 225 950 259 b 827 180 861 259 827 225 b 906 101 827 135 861 101 z m 907 -258 b 985 -180 952 -258 985 -225 b 907 -102 985 -135 952 -102 b 829 -180 863 -102 829 -135 b 907 -258 829 -225 863 -258 z\"\n    },\n    \"unpitchedPercussionClef1\": {\n      \"x_min\": 0,\n      \"x_max\": 382,\n      \"y_min\": -250,\n      \"y_max\": 250,\n      \"ha\": 500,\n      \"o\": \"m 320 338 l 320 -338 b 340 -360 320 -350 328 -360 l 530 -360 b 550 -338 541 -360 550 -350 l 550 338 b 530 360 550 350 541 360 l 340 360 b 320 338 328 360 320 350 z m 20 -360 l 210 -360 b 230 -338 222 -360 230 -350 l 230 338 b 210 360 230 350 222 360 l 20 360 b 0 338 9 360 0 350 l 0 -338 b 20 -360 0 -350 9 -360 z\"\n    },\n    \"6stringTabClef\": {\n      \"x_min\": -3,\n      \"x_max\": 408,\n      \"y_min\": -748,\n      \"y_max\": 764,\n      \"ha\": 1512,\n      \"o\": \"m 39 -399 l 39 -1077 l 344 -1077 b 544 -883 467 -1077 544 -995 b 420 -719 544 -802 507 -752 b 514 -572 482 -690 514 -639 b 314 -399 514 -472 442 -399 z m 88 -328 l 160 -125 l 420 -125 l 491 -328 l 588 -328 l 350 348 l 238 348 l -4 -328 z m 26 1100 l 26 1024 l 249 1024 l 249 422 l 336 422 l 336 1024 l 557 1024 l 557 1100 z m 125 -768 l 337 -768 b 458 -884 418 -768 458 -818 b 337 -1001 458 -949 418 -1001 l 125 -1001 z m 292 -475 b 428 -583 389 -475 428 -514 b 292 -691 428 -652 389 -691 l 125 -691 l 125 -475 z m 292 256 l 397 -52 l 181 -52 z\"\n    },\n    \"timeSig0\": {\n      \"x_min\": 20,\n      \"x_max\": 450,\n      \"y_min\": -250,\n      \"y_max\": 251,\n      \"ha\": 501,\n      \"o\": \"m 338 -360 b 648 0 510 -360 648 -199 b 338 361 648 200 510 361 b 29 0 167 361 29 200 b 338 -360 29 -199 167 -360 z m 230 10 b 338 317 230 180 278 317 b 446 10 397 317 446 180 b 338 -295 446 -158 397 -295 b 230 10 278 -295 230 -158 z\"\n    },\n    \"timeSig1\": {\n      \"x_min\": 20,\n      \"x_max\": 314,\n      \"y_min\": -250,\n      \"y_max\": 251,\n      \"ha\": 501,\n      \"o\": \"m 29 0 b 45 -20 29 -7 33 -16 b 58 -23 50 -22 56 -23 b 78 -10 72 -23 78 -10 b 156 117 78 -10 140 89 b 170 131 161 127 167 131 b 179 111 176 131 179 120 l 179 -261 b 115 -315 179 -294 145 -315 b 91 -337 105 -315 91 -320 b 122 -360 91 -353 104 -360 l 429 -360 b 452 -337 452 -360 452 -337 b 431 -315 452 -337 452 -315 b 384 -265 410 -315 384 -289 l 384 328 b 356 361 384 351 376 360 b 281 356 336 361 300 356 b 206 360 253 356 228 357 b 199 361 203 360 200 361 b 173 334 184 361 179 347 l 35 19 b 29 0 35 19 29 10 z\"\n    },\n    \"timeSig2\": {\n      \"x_min\": 20,\n      \"x_max\": 426,\n      \"y_min\": -257,\n      \"y_max\": 254,\n      \"ha\": 511,\n      \"o\": \"m 29 170 b 42 108 29 150 33 130 b 160 29 63 63 108 29 b 261 156 248 29 261 120 b 161 275 261 242 161 246 b 275 330 164 295 190 330 b 405 192 403 330 405 233 b 193 -102 405 60 297 -39 b 33 -314 114 -153 58 -223 b 69 -370 33 -336 40 -370 b 203 -282 101 -370 118 -282 b 410 -360 261 -282 282 -360 b 606 -131 472 -360 583 -354 b 589 -111 606 -114 599 -111 b 570 -125 577 -111 573 -117 b 569 -130 570 -127 569 -128 b 513 -192 554 -164 543 -192 b 488 -187 505 -192 498 -190 b 445 -171 469 -180 459 -179 b 289 -137 416 -160 348 -137 b 236 -145 271 -137 252 -140 b 422 -42 268 -94 390 -50 b 613 147 523 -14 613 27 b 330 366 613 300 464 366 b 69 275 229 366 140 357 b 29 170 45 245 29 209 z\"\n    },\n    \"timeSig3\": {\n      \"x_min\": 20,\n      \"x_max\": 401,\n      \"y_min\": -251,\n      \"y_max\": 249,\n      \"ha\": 500,\n      \"o\": \"m 29 -203 b 275 -361 32 -315 134 -359 l 288 -361 b 577 -161 431 -361 577 -288 l 577 -151 b 537 -50 575 -109 564 -82 b 503 -20 528 -39 517 -29 l 472 -3 l 425 10 b 410 17 418 12 413 12 b 409 24 409 20 409 22 b 415 37 409 30 410 36 b 459 50 431 42 446 43 b 547 181 517 78 547 115 b 307 357 547 314 367 353 b 285 359 300 357 292 359 b 37 200 161 359 37 276 b 154 84 37 153 65 89 l 161 84 b 256 177 225 84 256 130 l 256 189 b 209 248 252 242 216 245 b 180 268 202 251 180 248 l 180 274 b 240 310 183 298 228 310 b 374 199 363 310 374 233 l 374 189 b 199 36 374 82 289 40 b 164 12 184 35 164 27 b 200 -6 164 -6 189 -6 b 379 -137 366 -6 379 -118 b 269 -307 379 -289 301 -307 b 256 -305 264 -307 258 -305 b 216 -282 245 -304 217 -304 l 216 -275 b 249 -180 216 -243 248 -222 b 145 -76 249 -120 207 -76 b 130 -78 140 -76 135 -76 b 60 -115 105 -82 78 -96 b 29 -203 36 -137 29 -171 z\"\n    },\n    \"timeSig4\": {\n      \"x_min\": 20,\n      \"x_max\": 450,\n      \"y_min\": -250,\n      \"y_max\": 251,\n      \"ha\": 501,\n      \"o\": \"m 58 -161 l 325 -161 l 325 -252 b 268 -302 325 -291 294 -302 b 235 -330 245 -302 235 -315 b 262 -360 235 -344 240 -360 l 569 -360 b 598 -330 583 -360 598 -350 b 566 -301 598 -310 580 -301 b 521 -246 552 -301 521 -292 l 521 -161 l 626 -161 b 648 -134 641 -161 648 -151 b 626 -107 648 -117 642 -107 l 521 -107 l 521 202 b 504 226 521 213 520 226 b 475 213 491 226 484 223 l 338 48 b 325 14 333 40 325 32 l 325 -107 l 131 -107 b 481 334 246 -9 477 318 b 482 341 481 337 482 338 b 461 361 482 353 472 361 b 363 359 448 361 389 359 b 261 361 337 359 272 361 b 228 334 248 361 228 357 b 43 -105 228 156 86 -45 l 35 -117 b 33 -121 35 -118 33 -120 b 29 -137 30 -127 29 -132 b 58 -161 29 -151 40 -161 z\"\n    },\n    \"timeSig5\": {\n      \"x_min\": 20,\n      \"x_max\": 383,\n      \"y_min\": -251,\n      \"y_max\": 246,\n      \"ha\": 497,\n      \"o\": \"m 29 -183 b 284 -361 29 -302 107 -361 b 552 -125 456 -361 552 -255 b 314 112 552 6 445 112 b 122 71 230 112 168 98 b 115 69 120 69 117 69 b 109 79 109 69 109 75 l 109 85 b 117 179 109 85 115 166 b 138 197 118 190 125 197 l 144 197 b 285 184 158 194 226 184 b 492 323 485 184 492 300 b 472 353 492 341 488 353 b 295 340 454 353 341 340 b 101 354 249 340 125 351 b 66 330 75 354 68 341 l 50 10 l 50 7 b 79 -14 50 -12 65 -14 b 111 14 94 -14 95 -1 b 209 62 125 29 160 62 b 357 -125 258 62 357 35 b 235 -304 357 -284 272 -304 b 202 -300 223 -304 212 -304 b 184 -279 194 -295 186 -289 b 202 -259 184 -269 194 -264 b 256 -163 235 -239 256 -203 b 144 -50 256 -99 206 -50 b 30 -157 66 -50 35 -107 b 29 -183 29 -166 29 -174 z\"\n    },\n    \"timeSig6\": {\n      \"x_min\": 20,\n      \"x_max\": 414,\n      \"y_min\": -249,\n      \"y_max\": 251,\n      \"ha\": 500,\n      \"o\": \"m 29 4 l 29 -1 b 73 -200 30 -68 42 -143 b 324 -359 132 -307 203 -359 b 513 -307 389 -359 461 -348 b 596 -137 563 -266 596 -202 b 379 72 596 -24 490 72 b 248 22 333 72 285 55 b 239 19 245 19 242 19 b 226 53 230 19 226 30 b 346 327 230 320 315 327 b 393 305 374 327 393 320 b 357 251 393 285 366 268 b 347 209 350 238 347 223 b 369 150 347 187 354 166 b 439 120 379 131 420 120 b 554 229 500 120 554 167 b 553 245 554 235 554 239 b 348 361 539 337 426 361 b 85 209 239 360 137 307 b 29 4 53 148 29 72 z m 320 3 b 405 -158 366 3 405 -69 b 320 -320 405 -248 366 -320 b 236 -158 274 -320 236 -248 b 320 3 236 -69 274 3 z\"\n    },\n    \"timeSig7\": {\n      \"x_min\": 20,\n      \"x_max\": 421,\n      \"y_min\": -250,\n      \"y_max\": 249,\n      \"ha\": 499,\n      \"o\": \"m 29 71 b 45 48 29 71 30 48 b 66 76 56 48 60 60 b 164 196 81 112 99 196 b 374 88 222 196 291 88 b 446 118 415 88 435 109 b 459 124 451 121 456 124 b 469 111 465 124 468 120 b 272 -112 469 71 359 -10 b 173 -315 217 -176 173 -259 b 200 -360 173 -346 173 -360 b 294 -347 226 -360 258 -347 b 412 -360 330 -347 397 -360 b 435 -307 426 -360 435 -348 b 606 288 435 -66 606 140 l 606 294 b 582 351 606 333 606 351 b 552 336 580 351 557 346 b 485 236 541 318 521 236 b 262 359 449 236 382 359 b 137 307 179 359 157 325 b 98 281 117 288 108 282 b 60 315 86 281 68 301 b 43 325 58 321 50 325 b 29 308 36 325 29 321 z\"\n    },\n    \"timeSig8\": {\n      \"x_min\": 20,\n      \"x_max\": 416,\n      \"y_min\": -259,\n      \"y_max\": 259,\n      \"ha\": 518,\n      \"o\": \"m 29 -190 b 301 -373 29 -315 158 -373 b 599 -117 445 -373 599 -311 b 481 52 599 -30 549 17 b 567 204 533 85 567 132 b 317 373 567 351 356 373 b 36 176 150 373 36 297 b 161 -16 36 76 92 23 b 29 -190 86 -52 29 -99 z m 111 -183 b 225 -48 111 -125 161 -72 b 436 -219 330 -94 436 -124 b 295 -325 436 -276 392 -325 b 111 -183 199 -325 111 -276 z m 314 331 b 482 207 360 331 482 308 b 406 85 482 150 454 112 b 168 240 291 125 168 150 b 314 331 168 301 251 331 z\"\n    },\n    \"timeSig9\": {\n      \"x_min\": 20,\n      \"x_max\": 414,\n      \"y_min\": -249,\n      \"y_max\": 251,\n      \"ha\": 500,\n      \"o\": \"m 246 -69 b 377 -19 292 -69 340 -52 b 386 -16 380 -16 383 -16 b 399 -50 395 -16 399 -27 b 279 -324 395 -317 310 -324 b 232 -302 251 -324 232 -317 b 268 -248 232 -282 259 -265 b 278 -206 275 -235 278 -220 b 256 -147 278 -184 271 -163 b 186 -117 246 -128 204 -117 b 71 -226 125 -117 71 -164 b 72 -242 71 -232 71 -236 b 276 -359 86 -334 199 -359 b 540 -206 386 -357 488 -304 b 596 -1 572 -145 596 -69 l 596 4 b 552 203 595 71 583 145 b 301 361 492 310 422 361 b 112 310 236 361 164 351 b 29 140 62 269 29 204 b 246 -69 29 27 135 -69 z m 220 161 b 305 323 220 251 259 323 b 389 161 351 323 389 251 b 305 0 389 72 351 0 b 220 161 259 0 220 72 z\"\n    },\n    \"timeSigCommon\": {\n      \"x_min\": 5,\n      \"x_max\": 424,\n      \"y_min\": -249,\n      \"y_max\": 251,\n      \"ha\": 500,\n      \"o\": \"m 101 -262 b 321 -359 156 -328 235 -359 b 611 -88 573 -359 611 -130 b 589 -56 611 -56 595 -56 b 567 -82 577 -56 567 -58 b 363 -311 567 -268 409 -311 b 184 40 246 -311 184 -197 b 372 327 184 278 294 327 b 477 278 446 327 477 292 b 451 246 477 265 472 246 b 360 140 393 246 360 184 b 471 32 360 58 431 32 b 580 156 471 32 580 36 b 336 361 580 344 363 361 b 7 -14 131 361 7 180 b 101 -262 7 -108 42 -190 z\"\n    },\n    \"timeSigCutCommon\": {\n      \"x_min\": 0,\n      \"x_max\": 418,\n      \"y_min\": -359,\n      \"y_max\": 361,\n      \"ha\": 720,\n      \"o\": \"m 225 -346 b 252 -382 235 -350 252 -369 l 252 -492 b 276 -517 252 -505 265 -517 b 302 -492 292 -517 302 -505 l 302 -379 b 318 -359 302 -370 308 -363 b 602 -85 563 -354 602 -130 b 579 -58 600 -58 586 -58 l 573 -58 b 559 -82 567 -58 559 -60 b 354 -310 559 -266 400 -310 b 317 -305 340 -310 328 -308 b 302 -284 311 -304 302 -295 l 302 287 b 338 323 302 297 328 321 b 363 324 347 324 356 324 b 468 275 436 324 468 289 b 442 243 468 264 464 243 b 351 137 384 243 351 181 b 462 30 351 56 422 30 b 572 154 462 30 572 35 b 318 357 572 295 441 357 b 302 390 310 359 302 383 l 302 495 b 276 520 302 507 292 520 b 252 495 265 520 252 507 l 252 369 b 235 346 252 359 238 346 l 196 331 b 0 -14 66 275 0 122 b 225 -346 0 -150 86 -310 z m 232 259 b 236 262 233 262 235 262 b 252 239 243 262 252 251 l 252 -235 b 243 -252 252 -248 248 -252 b 236 -248 240 -252 238 -251 b 177 37 197 -193 177 -96 b 232 259 177 147 200 215 z\"\n    },\n    \"noteheadDoubleWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 599,\n      \"y_min\": -155,\n      \"y_max\": 155,\n      \"ha\": 310,\n      \"o\": \"m 423 -180 b 733 1 657 -180 733 -98 l 733 -213 b 747 -223 733 -219 740 -223 l 766 -223 b 780 -213 773 -223 780 -219 l 780 212 b 766 223 780 217 773 223 l 747 223 b 733 212 740 223 733 217 l 733 1 b 438 180 733 104 572 180 b 130 1 248 180 130 101 b 423 -180 130 -92 210 -180 z m 284 58 b 400 147 284 131 333 147 b 577 -45 498 147 577 42 b 469 -145 577 -115 533 -145 b 331 -71 409 -145 369 -112 b 284 58 305 -37 284 12 z m 815 -213 b 829 -223 815 -219 824 -223 l 848 -223 b 863 -213 857 -223 863 -219 l 863 212 b 848 223 863 217 857 223 l 829 223 b 815 212 824 223 815 217 z m 82 212 l 82 -213 b 96 -223 82 -219 88 -223 l 114 -223 b 128 -213 121 -223 128 -219 l 128 212 b 114 223 128 217 121 223 l 96 223 b 82 212 88 223 82 217 z m 13 -223 l 32 -223 b 45 -213 39 -223 45 -219 l 45 212 b 32 223 45 217 39 223 l 13 223 b 0 212 4 223 0 217 l 0 -213 b 13 -223 0 -219 4 -223 z\"\n    },\n    \"noteheadWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 422,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 3 b 297 -180 0 -94 82 -180 b 608 3 533 -180 608 -98 b 311 180 608 105 445 180 b 0 3 120 180 0 101 z m 156 56 b 160 91 156 68 157 79 b 274 148 176 141 229 148 b 452 -45 373 148 452 42 b 386 -141 452 -89 433 -130 b 341 -147 372 -145 356 -147 b 206 -72 289 -147 236 -112 b 156 56 177 -39 156 10 z\"\n    },\n    \"noteheadHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 295,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 140 -180 b 425 60 377 -180 425 13 b 282 180 425 134 366 180 b 0 -60 68 180 0 14 b 140 -180 0 -137 60 -180 z m 42 -63 b 318 121 42 7 251 121 b 372 91 346 121 361 108 b 380 63 376 82 380 73 b 108 -125 380 1 177 -125 b 50 -92 78 -125 60 -109 b 42 -63 46 -84 42 -73 z\"\n    },\n    \"noteheadBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 295,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 -60 b 140 -180 0 -135 62 -180 b 425 60 268 -180 425 -62 b 285 180 425 134 367 180 b 0 -60 127 180 0 63 z\"\n    },\n    \"noteheadXWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 377,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 148 b 12 124 0 140 4 131 l 132 0 l 12 -124 b 1 -148 4 -131 1 -140 b 32 -180 1 -164 14 -180 l 158 -180 b 179 -171 166 -180 173 -177 l 272 -95 l 364 -171 b 384 -180 370 -177 377 -180 l 511 -180 b 543 -148 528 -180 543 -164 b 531 -124 543 -140 539 -131 l 412 0 l 531 124 b 541 148 539 131 541 140 b 513 180 541 164 528 180 l 384 180 b 364 171 377 180 370 177 l 272 94 l 179 171 b 158 180 173 177 166 180 l 30 180 b 0 148 16 180 0 164 z m 245 0 l 88 141 l 157 141 l 272 45 l 386 141 l 456 141 l 300 0 l 456 -141 l 386 -141 l 272 -45 l 157 -141 l 88 -141 z\"\n    },\n    \"noteheadXHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 334,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 32 -180 l 184 -180 b 209 -170 193 -180 203 -177 l 271 -99 l 363 -171 b 384 -180 370 -176 377 -180 l 445 -180 b 478 -147 461 -180 478 -163 b 465 -125 478 -138 474 -131 l 341 -22 l 474 127 b 481 148 480 131 481 138 b 448 180 481 166 468 180 l 295 180 b 271 170 287 180 278 177 l 209 98 l 115 171 b 95 180 109 177 104 180 l 36 180 b 4 148 19 180 4 164 b 14 124 4 140 7 132 l 140 22 l 7 -127 b 0 -148 3 -131 0 -138 b 32 -180 0 -166 14 -180 z m 95 148 l 233 33 l 334 148 l 410 148 l 274 -6 l 445 -148 l 384 -148 l 248 -35 l 147 -148 l 71 -148 l 206 4 l 36 148 z\"\n    },\n    \"noteheadXBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 290,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 -158 b 19 -180 0 -170 7 -180 b 29 -176 23 -180 26 -179 l 207 -24 l 389 -176 b 399 -180 392 -179 396 -180 b 418 -160 410 -180 418 -168 b 410 -143 418 -153 415 -147 l 239 0 l 410 144 b 418 160 415 147 418 154 b 399 180 418 171 408 180 b 389 177 396 180 392 179 l 207 26 l 29 177 b 17 180 26 179 22 180 b 0 161 7 180 0 170 b 7 144 0 156 3 148 l 179 0 l 7 -143 b 0 -158 1 -147 0 -153 z\"\n    },\n    \"noteheadCircleX\": {\n      \"x_min\": 0,\n      \"x_max\": 249,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 0 b 179 -180 0 -99 81 -180 b 359 0 278 -180 359 -99 b 179 180 359 99 278 180 b 0 0 81 180 0 99 z m 69 84 l 151 1 l 68 -84 b 40 0 49 -60 40 -30 b 69 84 40 32 50 60 z m 180 -27 l 262 -111 b 179 -138 239 -128 210 -138 b 95 -111 148 -138 120 -128 z m 209 1 l 291 84 b 317 0 307 60 317 30 b 292 -82 317 -30 308 -59 z m 179 138 b 261 112 210 138 238 128 l 180 30 l 98 112 b 179 138 121 128 148 138 z\"\n    },\n    \"noteheadTriangleUpWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 319,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 -166 b 14 -180 0 -173 6 -180 l 445 -180 b 459 -166 454 -180 459 -173 b 458 -158 459 -163 458 -160 l 239 173 b 228 180 238 177 233 180 b 216 173 225 180 219 177 l 1 -158 b 0 -166 1 -160 0 -163 z m 145 -96 b 228 108 145 -17 197 56 b 310 -98 259 55 310 -17 b 288 -137 310 -111 301 -137 l 170 -137 b 145 -96 157 -137 145 -109 z\"\n    },\n    \"noteheadTriangleUpHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 285,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 14 -180 l 396 -180 b 410 -166 406 -180 410 -173 b 409 -158 410 -163 410 -161 l 228 173 b 215 180 226 174 220 180 b 202 173 210 180 204 177 l 3 -157 b 0 -166 1 -160 0 -163 b 14 -180 0 -173 7 -180 z m 115 -138 l 232 76 l 297 -37 l 246 -138 z\"\n    },\n    \"noteheadTriangleUpBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 293,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 422 -180 l 207 180 l 0 -180 z\"\n    },\n    \"noteheadDiamondWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 270,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 4 7 l 258 -179 b 264 -180 261 -179 262 -180 b 272 -176 268 -180 271 -179 l 386 -23 b 389 -16 387 -20 389 -19 b 383 -7 389 -13 386 -9 l 130 179 b 122 180 128 180 125 180 b 115 177 120 180 117 180 l 3 23 b 0 17 1 20 0 19 b 4 7 0 16 3 10 z m 109 111 b 112 112 109 112 111 112 b 118 111 115 112 117 111 l 320 -37 b 324 -46 323 -39 324 -42 b 275 -111 278 -111 276 -111 b 268 -108 272 -111 271 -109 l 66 40 b 62 48 65 42 62 45 z\"\n    },\n    \"noteheadDiamondHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 251,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 4 -7 l 174 -177 b 180 -180 176 -180 179 -180 b 189 -177 183 -180 186 -180 l 359 -7 b 361 0 360 -6 361 -3 b 359 7 361 3 360 4 l 189 177 b 180 180 186 179 183 180 b 174 177 179 180 176 179 l 4 7 b 0 0 1 4 0 3 b 4 -7 0 -3 1 -6 z m 215 73 b 266 26 238 73 266 50 b 138 -71 266 -12 176 -71 b 96 -50 121 -71 108 -63 b 88 -24 89 -43 88 -32 b 215 73 88 13 177 73 z\"\n    },\n    \"noteheadDiamondBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 4 -7 l 173 -177 b 180 -180 176 -180 177 -180 b 187 -177 181 -180 184 -180 l 357 -6 b 360 1 359 -4 360 -1 b 357 9 360 4 359 7 l 189 177 b 180 180 187 179 184 180 b 171 177 177 180 173 179 l 3 9 b 0 1 0 6 0 4 b 4 -7 0 -1 1 -4 z\"\n    },\n    \"noteheadSquareWhite\": {\n      \"x_min\": 0,\n      \"x_max\": 313,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 451 -180 l 451 180 l 0 180 l 0 -180 z m 40 -138 l 40 140 l 410 140 l 410 -138 z\"\n    },\n    \"noteheadSquareBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 313,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 451 -180 l 451 180 l 0 180 l 0 -180 z\"\n    },\n    \"augmentationDot\": {\n      \"x_min\": 0,\n      \"x_max\": 100,\n      \"y_min\": -50,\n      \"y_max\": 50,\n      \"ha\": 100,\n      \"o\": \"m 72 -72 b 144 0 112 -72 144 -40 b 72 72 144 40 112 72 b 0 0 32 72 0 40 b 72 -72 0 -40 32 -72 z\"\n    },\n    \"tremolo1\": {\n      \"x_min\": -150,\n      \"x_max\": 150,\n      \"y_min\": -93,\n      \"y_max\": 94,\n      \"ha\": 187,\n      \"o\": \"m 216 -45 l 216 135 l -216 46 l -216 -134 z\"\n    },\n    \"flag8thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 264,\n      \"y_min\": -810.1921176545984,\n      \"y_max\": 9,\n      \"ha\": 819.1921176545984,\n      \"o\": \"m 284 -688 b 318 -904 305 -737 318 -819 b 284 -1102 318 -969 308 -1037 b 279 -1123 281 -1110 279 -1117 b 302 -1165 279 -1146 294 -1159 b 343 -1138 311 -1171 336 -1162 b 380 -888 343 -1138 380 -1001 b 215 -395 380 -708 305 -539 b 58 -19 141 -281 81 -157 b 14 13 53 4 42 13 b 0 -9 6 13 0 9 l 0 -353 b 284 -688 95 -370 232 -566 z\"\n    },\n    \"flag8thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 306,\n      \"y_min\": -14,\n      \"y_max\": 808,\n      \"ha\": 822,\n      \"o\": \"m 16 -20 b 58 12 43 -20 55 -12 b 262 387 82 148 189 274 b 441 881 353 530 441 701 b 400 1142 441 994 412 1096 b 377 1164 396 1158 387 1164 b 346 1094 356 1164 331 1136 b 376 897 366 1034 376 962 b 318 642 376 812 340 691 b 0 340 265 521 193 405 l 0 1 b 16 -20 0 -16 7 -20 z\"\n    },\n    \"flag16thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 279,\n      \"y_min\": -813,\n      \"y_max\": 2,\n      \"ha\": 815,\n      \"o\": \"m 7 -570 b 298 -778 96 -573 199 -576 b 344 -992 331 -847 344 -917 b 333 -1120 344 -1034 340 -1077 b 331 -1133 331 -1126 331 -1129 b 363 -1171 331 -1152 343 -1171 b 392 -1146 373 -1171 383 -1165 b 402 -988 397 -1139 402 -1057 l 402 -956 b 360 -783 402 -896 386 -837 b 359 -770 360 -779 359 -776 b 360 -760 359 -768 359 -765 b 396 -577 364 -752 396 -665 b 392 -526 396 -559 395 -543 b 236 -275 377 -428 340 -387 b 53 -16 158 -192 78 -168 b 24 3 50 0 33 3 b 0 1 16 3 0 1 l 0 -570 z m 78 -312 l 89 -312 b 302 -464 177 -312 255 -393 b 341 -592 328 -501 341 -546 b 340 -621 341 -602 341 -611 b 330 -658 337 -632 337 -647 b 311 -667 328 -662 318 -667 b 301 -661 307 -667 304 -665 b 223 -562 278 -625 253 -596 b 59 -331 156 -484 89 -449 b 58 -327 58 -330 58 -328 b 78 -312 58 -321 66 -312 z\"\n    },\n    \"flag16thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 290.8951581511223,\n      \"y_min\": -9,\n      \"y_max\": 812.0064,\n      \"ha\": 821.0064,\n      \"o\": \"m 0 -12 b 24 -13 0 -12 16 -13 b 53 6 33 -13 50 -10 b 406 516 88 228 372 289 b 410 567 409 531 410 549 b 374 750 410 655 379 742 b 373 760 373 753 373 756 b 374 773 373 766 374 769 b 405 1138 426 881 428 1022 b 370 1169 397 1171 387 1169 b 346 1132 353 1168 341 1156 b 312 768 367 1011 367 880 b 7 559 213 566 96 562 l 0 559 z m 58 317 b 59 321 58 318 58 320 b 238 552 89 439 170 472 b 315 651 268 585 292 613 b 325 657 318 655 321 657 b 344 647 333 657 343 652 b 354 611 351 636 351 622 b 356 582 356 600 356 590 b 317 454 356 534 343 491 b 89 302 269 383 177 302 l 78 302 b 58 317 66 302 58 310 z\"\n    },\n    \"flag32ndUp\": {\n      \"x_min\": 0,\n      \"x_max\": 261,\n      \"y_min\": -812,\n      \"y_max\": 149,\n      \"ha\": 961,\n      \"o\": \"m 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 366 -289 369 -315 369 -302 b 220 -58 350 -202 317 -163 b 46 187 148 20 71 43 b 17 215 45 200 26 215 b 0 197 9 215 0 197 l 0 -609 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 55 -386 b 73 -367 55 -384 65 -369 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 z\"\n    },\n    \"flag32ndDown\": {\n      \"x_min\": 0,\n      \"x_max\": 273,\n      \"y_min\": -172,\n      \"y_max\": 812,\n      \"ha\": 984,\n      \"o\": \"m 17 -248 b 48 -219 27 -248 46 -232 b 229 36 72 -69 154 -46 b 380 278 330 145 364 186 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 351 793 356 785 351 789 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 l 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -229 b 17 -248 0 -229 9 -248 z m 56 76 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z\"\n    },\n    \"flag64thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 261,\n      \"y_min\": -812,\n      \"y_max\": 347,\n      \"ha\": 1159,\n      \"o\": \"m 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 220 228 350 84 317 122 b 46 472 148 305 71 328 b 17 500 45 485 26 500 b 0 482 9 500 0 482 z m 56 193 b 300 24 138 193 220 157 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 58 187 148 20 82 43 b 56 193 58 189 58 192 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 55 -386 b 73 -367 55 -384 65 -369 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 z\"\n    },\n    \"flag64thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 273,\n      \"y_min\": -376,\n      \"y_max\": 812,\n      \"ha\": 1188,\n      \"o\": \"m 17 -541 b 48 -513 27 -541 46 -526 b 229 -258 72 -363 154 -340 b 380 -16 330 -148 364 -108 b 384 27 383 -1 384 13 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 351 793 356 785 351 789 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 l 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -523 b 17 -541 0 -523 9 -541 z m 56 76 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 z m 229 36 b 311 128 264 73 289 102 l 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 b 229 36 75 -86 145 -55 z m 217 609 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 b 217 609 86 501 153 533 z\"\n    },\n    \"flag128thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 261,\n      \"y_min\": -812,\n      \"y_max\": 533,\n      \"ha\": 1345,\n      \"o\": \"m 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 341 75 360 26 353 50 b 369 222 354 111 369 167 b 366 264 369 236 369 251 b 220 495 350 351 317 390 b 46 740 148 573 71 596 b 17 768 45 753 26 768 b 0 750 9 768 0 750 l 0 -609 z m 300 24 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 56 187 148 20 81 43 b 55 193 56 189 56 192 b 300 24 137 193 220 157 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 55 -386 b 73 -367 55 -384 65 -369 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 z m 300 292 b 321 223 315 264 321 242 b 317 193 321 212 318 203 b 301 135 314 180 308 158 b 220 228 281 161 255 190 b 55 461 151 304 79 327 b 300 292 134 461 220 426 z\"\n    },\n    \"flag128thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 273,\n      \"y_min\": -580,\n      \"y_max\": 812,\n      \"ha\": 1392,\n      \"o\": \"m 17 -835 b 48 -806 27 -835 46 -819 b 229 -552 72 -657 154 -634 b 380 -310 330 -442 364 -402 b 384 -266 383 -295 384 -281 b 351 -105 384 -206 366 -143 b 384 27 372 -66 384 -16 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 351 793 356 785 351 789 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 l 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -816 b 17 -835 0 -816 9 -835 z m 229 331 b 310 423 264 369 289 397 b 330 350 318 396 325 366 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 z m 56 -516 b 229 -258 75 -380 145 -348 b 311 -166 264 -220 289 -192 l 330 -238 b 334 -268 331 -248 334 -256 b 311 -340 334 -287 328 -310 b 56 -516 229 -478 137 -516 z m 56 -222 b 229 36 75 -86 145 -55 b 311 128 264 73 289 102 l 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 z m 217 609 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 b 217 609 86 501 153 533 z\"\n    },\n    \"accidentalFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 226,\n      \"y_min\": -175,\n      \"y_max\": 439,\n      \"ha\": 614,\n      \"o\": \"m 17 -245 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 82 -225 117 -186 b 325 82 281 -72 325 16 b 196 220 325 164 262 216 b 117 196 171 220 137 209 b 85 176 108 189 92 176 b 78 177 82 176 81 176 b 62 202 68 181 62 192 b 72 608 63 233 72 579 b 45 632 72 624 59 632 b 0 592 24 632 1 618 b 17 -245 0 592 6 -230 z m 66 73 b 167 144 76 102 134 144 b 226 60 209 144 226 96 b 98 -134 226 -17 160 -95 b 84 -138 92 -137 88 -138 b 68 -117 71 -138 68 -124 b 63 27 68 -117 63 -30 b 66 73 63 50 65 68 z\"\n    },\n    \"accidentalNatural\": {\n      \"x_min\": 0,\n      \"x_max\": 168,\n      \"y_min\": -335,\n      \"y_max\": 341,\n      \"ha\": 676,\n      \"o\": \"m 0 -268 b 12 -281 0 -276 4 -281 b 22 -278 13 -281 20 -279 b 164 -235 42 -269 122 -235 b 189 -251 179 -235 189 -239 l 189 -465 b 206 -482 189 -475 196 -482 l 225 -482 b 242 -465 233 -482 242 -475 l 242 258 b 230 269 242 265 236 269 b 225 268 229 269 226 269 l 203 261 b 197 259 200 261 199 259 b 68 226 197 259 105 226 b 53 233 59 226 53 228 l 53 474 b 36 491 53 484 45 491 l 17 491 b 0 474 7 491 0 484 z m 176 114 b 189 107 184 114 189 112 l 189 -42 b 71 -101 189 -68 107 -101 b 53 -92 60 -101 53 -98 l 53 56 b 176 114 53 76 141 114 z\"\n    },\n    \"accidentalSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 249,\n      \"y_min\": -348,\n      \"y_max\": 350,\n      \"ha\": 698,\n      \"o\": \"m 12 37 b 49 53 17 37 45 50 b 53 55 50 53 52 55 b 72 29 63 55 72 40 l 72 -114 b 56 -147 72 -130 65 -143 b 17 -163 48 -150 17 -163 b 0 -186 7 -166 0 -177 l 0 -288 b 12 -301 0 -297 4 -301 b 17 -300 13 -301 16 -300 b 50 -287 17 -300 37 -291 b 55 -285 52 -285 53 -285 b 72 -308 65 -285 72 -301 l 72 -485 b 91 -501 72 -494 81 -501 b 115 -485 105 -501 115 -494 l 115 -285 b 130 -253 115 -266 122 -256 l 217 -217 b 223 -216 219 -217 222 -216 b 242 -242 235 -216 242 -233 l 242 -422 b 261 -438 242 -431 251 -438 b 285 -422 276 -438 285 -431 l 285 -217 b 301 -184 285 -206 291 -189 b 341 -168 311 -180 341 -168 b 359 -144 351 -164 359 -153 l 359 -42 b 348 -30 359 -35 354 -30 b 341 -32 346 -30 344 -30 l 304 -46 b 285 -20 295 -46 285 -37 l 285 114 b 304 156 285 124 292 151 l 341 170 b 359 194 351 174 359 186 l 359 297 b 348 308 359 304 354 308 b 341 307 346 308 344 308 b 305 294 341 307 312 295 b 285 312 295 294 285 301 l 285 488 b 265 504 285 497 276 504 b 242 488 251 504 242 497 l 242 301 b 223 259 240 287 236 268 b 132 223 206 249 157 229 b 115 252 120 223 115 240 l 115 425 b 95 441 115 433 105 441 b 72 425 81 441 72 433 l 72 230 b 55 192 72 210 63 196 b 17 176 46 187 17 176 b 0 153 7 173 0 161 l 0 50 b 12 37 0 42 4 37 z m 111 -43 b 115 63 111 1 112 52 b 220 118 118 88 184 118 b 242 109 230 118 239 115 b 248 27 245 102 248 66 b 242 -65 248 -12 245 -52 b 132 -122 233 -94 166 -122 b 115 -115 124 -122 117 -120 b 111 -43 112 -109 111 -78 z\"\n    },\n    \"accidentalDoubleSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 247,\n      \"y_min\": -125,\n      \"y_max\": 127,\n      \"ha\": 252,\n      \"o\": \"m 0 -111 b 7 -166 0 -137 3 -163 b 65 -180 17 -174 40 -180 b 118 -166 86 -180 109 -176 b 130 -111 127 -158 130 -134 b 132 -105 130 -109 131 -107 b 177 -45 141 -85 158 -45 b 226 -111 196 -45 220 -91 b 233 -166 226 -137 228 -161 b 291 -180 243 -174 266 -180 b 356 -114 346 -180 356 -166 b 346 -56 356 -89 351 -63 b 288 -46 338 -49 312 -46 l 274 -46 b 206 1 258 -37 206 -9 b 274 50 206 22 253 43 b 291 49 279 50 285 49 b 346 63 314 49 336 55 b 356 115 353 71 356 92 b 292 183 356 174 351 183 b 233 173 266 183 240 180 b 226 117 228 168 226 143 b 179 49 219 101 196 49 b 130 117 158 49 135 96 b 118 173 130 141 125 167 b 66 183 112 180 89 183 b 7 173 42 183 16 180 b 0 120 3 170 0 145 b 7 63 0 94 3 68 b 68 49 17 55 43 49 b 82 50 73 49 78 50 b 150 3 98 42 150 13 b 84 -46 150 -16 104 -39 l 69 -46 b 7 -56 43 -46 16 -49 b 0 -111 3 -60 0 -85 z\"\n    },\n    \"accidentalDoubleFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 411,\n      \"y_min\": -175,\n      \"y_max\": 437,\n      \"ha\": 612,\n      \"o\": \"m 17 -245 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 84 -226 120 -186 b 274 -50 206 -124 246 -85 b 284 -245 276 -158 279 -240 b 295 -252 288 -251 292 -252 b 304 -249 300 -252 304 -249 b 416 -163 348 -226 383 -186 b 592 82 546 -72 592 16 b 461 217 592 163 528 216 l 452 217 b 384 194 426 217 408 207 b 350 176 374 189 363 176 b 343 177 347 176 344 176 b 328 202 333 180 328 190 b 337 606 328 232 337 579 b 310 629 337 622 324 629 b 265 592 291 629 268 616 b 269 194 265 592 266 395 b 196 217 248 209 223 217 l 187 217 b 120 194 160 217 143 207 b 85 176 108 189 98 176 b 78 177 82 176 81 176 b 62 202 68 180 62 190 b 72 606 62 232 72 579 b 45 629 72 622 59 629 b 0 592 24 629 1 616 b 17 -245 0 592 7 -232 z m 66 72 b 168 144 75 101 134 144 b 226 59 212 144 226 95 b 96 -134 226 -22 161 -94 b 84 -138 92 -137 86 -138 b 68 -115 72 -138 68 -124 b 63 26 68 -115 63 -30 b 66 72 63 49 65 66 z m 328 39 b 330 72 328 55 328 68 b 433 144 338 101 399 144 b 468 130 448 144 459 140 b 490 59 481 112 490 88 b 361 -134 490 -22 426 -94 b 348 -138 356 -137 351 -138 b 333 -115 337 -138 333 -124 b 328 39 333 -115 328 -16 z\"\n    },\n    \"accidentalParensLeft\": {\n      \"x_min\": 0,\n      \"x_max\": 141,\n      \"y_min\": -248,\n      \"y_max\": 247,\n      \"ha\": 495,\n      \"o\": \"m 199 -357 b 203 -354 200 -357 203 -356 l 203 -333 b 200 -327 203 -330 202 -328 b 86 0 118 -253 86 -160 b 200 324 86 158 120 251 b 203 331 202 325 203 327 l 203 351 b 202 356 203 354 203 356 b 0 0 60 281 0 140 b 199 -357 0 -144 60 -269 z\"\n    },\n    \"accidentalParensRight\": {\n      \"x_min\": 0,\n      \"x_max\": 141,\n      \"y_min\": -248,\n      \"y_max\": 247,\n      \"ha\": 495,\n      \"o\": \"m 0 331 b 3 324 0 327 1 325 b 117 0 84 251 117 158 b 3 -327 117 -160 85 -253 b 0 -333 1 -328 0 -330 l 0 -354 b 4 -357 0 -356 3 -357 b 203 0 143 -269 203 -144 b 1 356 203 140 143 281 b 0 351 0 356 0 354 z\"\n    },\n    \"accidentalQuarterToneFlatStein\": {\n      \"x_min\": 1,\n      \"x_max\": 227,\n      \"y_min\": -175,\n      \"y_max\": 439,\n      \"ha\": 614,\n      \"o\": \"m 174 -161 b 288 -249 210 -186 245 -225 b 297 -252 288 -249 292 -252 b 310 -245 301 -252 305 -251 b 327 592 321 -230 327 592 b 282 632 325 618 302 632 b 255 608 268 632 255 624 b 265 202 255 579 264 233 b 249 177 265 192 259 181 b 242 176 246 176 245 176 b 210 196 235 176 219 189 b 131 220 190 209 156 220 b 1 85 65 216 1 164 b 174 -161 1 16 46 -72 z m 101 60 b 160 144 101 96 118 144 b 261 73 193 144 251 102 b 264 27 262 68 264 50 b 259 -117 264 -30 259 -117 b 243 -138 259 -124 256 -138 b 229 -134 239 -138 235 -137 b 101 60 167 -95 101 -17 z\"\n    },\n    \"accidentalThreeQuarterTonesFlatZimmermann\": {\n      \"x_min\": 1,\n      \"x_max\": 466,\n      \"y_min\": -175,\n      \"y_max\": 439,\n      \"ha\": 614,\n      \"o\": \"m 363 -245 b 376 -252 367 -251 372 -252 b 384 -249 380 -252 384 -249 b 497 -161 428 -226 464 -186 b 671 84 625 -72 671 16 b 541 220 671 164 606 217 b 513 217 531 220 523 219 b 464 196 495 212 480 206 b 431 176 452 189 442 176 b 423 177 428 176 426 176 b 408 202 413 180 408 190 l 419 608 b 392 632 419 625 406 632 b 346 592 372 632 347 618 b 363 -245 346 592 351 -230 z m 177 -163 b 289 -249 210 -186 245 -226 b 297 -252 289 -249 292 -252 b 310 -245 300 -252 305 -251 b 328 592 321 -230 328 592 b 282 631 327 618 302 631 b 255 608 268 631 255 624 l 266 202 b 251 177 266 190 261 180 b 243 176 248 176 246 176 b 210 196 232 176 222 189 b 166 216 196 204 180 210 b 161 217 164 216 163 217 b 132 220 151 219 143 220 b 1 84 65 217 1 163 b 177 -163 1 16 48 -72 z m 102 60 b 124 128 102 88 111 112 b 161 144 134 138 147 144 b 199 134 173 144 184 141 b 262 72 219 122 256 92 b 265 26 264 66 265 49 b 261 -115 265 -30 261 -115 b 245 -138 261 -124 258 -138 b 230 -134 240 -138 236 -137 b 102 60 166 -92 102 -20 z m 409 26 b 412 72 409 49 410 66 b 514 144 420 102 480 144 b 570 60 557 144 570 96 b 442 -134 570 -23 508 -91 b 429 -138 436 -137 433 -138 b 413 -115 418 -138 413 -124 b 409 26 413 -115 409 -30 z\"\n    },\n    \"accidentalQuarterToneSharpStein\": {\n      \"x_min\": 0,\n      \"x_max\": 179,\n      \"y_min\": -353,\n      \"y_max\": 307,\n      \"ha\": 660,\n      \"o\": \"m 12 -315 b 85 -285 17 -315 76 -289 b 105 -312 92 -282 105 -301 l 105 -492 b 125 -508 105 -501 114 -508 b 150 -484 147 -508 150 -498 l 150 -285 b 151 -274 150 -281 150 -278 b 164 -253 153 -265 158 -256 b 240 -225 176 -251 240 -225 b 258 -202 249 -222 258 -210 l 258 -99 b 246 -86 258 -91 253 -86 b 240 -88 245 -86 242 -88 l 240 -86 b 168 -115 240 -86 174 -114 b 148 -91 158 -115 148 -107 l 148 43 b 167 85 148 55 156 81 b 240 114 180 91 240 114 b 258 138 249 118 258 128 l 258 240 b 246 252 258 248 252 252 b 240 251 245 252 242 252 b 168 225 240 251 171 225 b 150 253 156 225 150 240 l 150 426 b 130 442 150 435 141 442 b 105 418 108 442 105 429 l 105 230 b 91 193 105 219 101 202 b 17 161 65 183 42 171 b 0 138 9 158 0 147 l 0 36 b 12 23 0 27 4 23 b 17 24 13 23 16 24 b 85 53 17 24 73 49 b 89 55 86 53 88 55 b 107 30 98 55 107 42 l 107 -114 b 92 -145 107 -130 101 -143 l 17 -177 b 0 -200 9 -180 0 -192 l 0 -302 b 12 -315 0 -311 4 -315 z\"\n    },\n    \"accidentalThreeQuarterTonesSharpStein\": {\n      \"x_min\": 3,\n      \"x_max\": 317,\n      \"y_min\": -347,\n      \"y_max\": 369,\n      \"ha\": 716,\n      \"o\": \"m 14 -301 b 53 -287 16 -301 40 -291 b 62 -285 56 -285 59 -285 b 72 -298 69 -285 72 -289 l 72 -477 b 95 -500 72 -495 76 -500 b 118 -477 114 -500 118 -495 l 118 -278 b 127 -259 118 -269 121 -261 l 196 -232 b 207 -243 204 -232 207 -235 l 207 -432 b 230 -455 207 -452 212 -455 b 253 -432 249 -455 253 -451 l 253 -228 b 268 -204 253 -216 259 -207 l 320 -186 b 328 -183 323 -184 325 -183 b 337 -194 334 -183 337 -187 l 337 -387 b 360 -410 337 -408 341 -410 b 383 -387 379 -410 383 -406 l 383 -174 b 395 -157 383 -166 390 -158 l 445 -138 b 456 -127 452 -135 456 -132 l 456 -14 b 448 -3 456 -10 454 -3 b 399 -22 445 -3 408 -17 b 383 -6 387 -22 383 -22 l 383 163 b 392 181 383 173 384 179 b 445 202 397 183 445 202 b 456 213 452 203 456 207 l 456 324 b 448 336 456 330 454 336 b 393 317 445 336 400 320 b 389 315 392 315 390 315 b 383 325 386 315 383 318 l 383 508 b 360 531 383 528 379 531 b 337 508 341 531 337 527 l 337 318 b 325 291 337 300 334 294 b 268 268 320 288 287 276 b 253 281 256 268 253 274 l 253 464 b 230 487 253 484 249 487 b 207 464 212 487 207 482 l 207 264 b 194 240 207 253 204 245 l 132 217 b 128 216 131 217 130 216 b 118 229 122 216 118 220 l 118 420 b 95 444 118 439 114 444 b 72 420 76 444 72 439 l 72 212 b 60 190 72 197 68 193 l 16 173 b 4 161 9 170 4 167 l 4 50 b 13 39 4 45 9 39 b 58 55 16 39 46 49 b 63 56 60 56 62 56 b 72 42 71 56 72 50 l 72 -125 b 58 -150 72 -137 65 -147 l 16 -166 b 4 -177 9 -168 4 -171 l 4 -289 b 14 -301 4 -295 9 -301 z m 114 -48 b 118 78 114 6 115 68 b 200 114 122 91 180 114 b 207 111 204 114 206 112 b 212 22 210 107 212 66 b 207 -94 212 -29 210 -85 b 127 -130 203 -108 148 -130 b 118 -127 122 -130 120 -128 b 114 -48 114 -121 114 -86 z m 253 19 b 258 130 253 69 255 122 b 333 163 264 141 315 163 b 337 161 334 163 337 161 b 341 78 340 157 341 120 b 337 -45 341 24 340 -37 b 266 -78 333 -56 287 -78 b 258 -75 262 -78 259 -76 b 253 19 255 -71 253 -27 z\"\n    },\n    \"accidentalBuyukMucennebFlat\": {\n      \"x_min\": 1,\n      \"x_max\": 287,\n      \"y_min\": -174,\n      \"y_max\": 438,\n      \"ha\": 612,\n      \"o\": \"m 1 480 l 1 406 b 12 395 1 400 4 395 b 79 419 14 395 76 418 b 89 412 86 419 89 415 b 91 376 89 399 89 386 b 82 359 91 364 89 361 b 16 331 76 356 16 331 b 1 321 6 331 1 328 l 1 248 b 13 236 1 242 4 236 b 79 262 16 236 71 258 b 92 251 89 262 92 256 b 107 -242 95 23 101 -236 b 120 -251 111 -249 115 -251 b 128 -248 124 -251 128 -248 b 240 -160 171 -225 207 -184 b 413 84 367 -71 413 16 b 284 220 413 166 350 216 b 207 196 259 220 229 209 b 171 176 196 190 184 176 b 167 177 170 176 168 177 b 151 203 157 181 151 192 b 153 269 151 210 151 236 b 163 292 153 275 153 289 b 366 367 173 297 366 367 b 379 383 374 370 379 376 l 379 452 b 370 464 379 458 377 464 b 164 389 366 464 170 392 b 156 396 163 389 156 393 b 157 436 157 409 157 428 b 167 452 157 445 161 449 b 366 526 173 455 366 526 b 379 540 374 528 379 534 l 379 611 b 370 622 379 616 377 622 b 170 550 366 622 174 552 b 160 557 163 550 160 554 b 161 608 160 585 161 602 b 134 631 161 624 148 631 b 89 590 114 631 91 616 l 89 528 b 81 517 89 526 88 518 b 16 491 76 514 16 491 b 1 480 6 490 1 485 z m 154 73 b 219 135 160 92 197 124 b 255 144 232 141 243 144 b 292 130 269 144 282 140 b 314 62 305 114 314 91 b 186 -132 314 -17 251 -94 b 173 -137 180 -135 176 -137 b 157 -114 161 -137 157 -122 b 153 35 157 -114 153 -22 b 154 73 153 53 153 68 z\"\n    },\n    \"accidentalBakiyeFlat\": {\n      \"x_min\": -1,\n      \"x_max\": 286,\n      \"y_min\": -175,\n      \"y_max\": 439,\n      \"ha\": 614,\n      \"o\": \"m -1 248 b 9 236 -1 242 1 236 b 81 264 12 236 78 261 b 89 258 86 264 89 261 b 104 -245 92 30 96 -236 b 115 -252 108 -251 112 -252 b 124 -249 120 -252 124 -249 b 239 -161 167 -226 203 -186 b 412 84 367 -72 412 17 b 282 220 412 166 348 216 b 255 216 274 220 264 219 b 203 196 238 212 222 206 b 171 177 193 189 177 177 b 163 179 168 177 166 177 b 147 202 153 181 147 192 b 150 276 147 210 150 268 b 158 291 150 287 154 289 b 363 370 163 292 363 370 b 377 384 373 373 377 379 l 377 454 b 369 467 377 458 376 467 b 363 465 367 467 364 467 b 161 390 363 465 167 393 b 153 399 154 390 153 395 b 157 608 154 494 157 593 b 130 632 157 624 144 632 b 86 592 111 632 88 618 b 88 377 86 592 86 501 b 76 356 88 373 88 360 l 12 331 b -1 320 3 330 -1 327 z m 148 27 b 151 73 148 50 150 68 b 255 144 161 105 219 144 b 312 62 298 144 312 99 b 181 -134 312 -19 249 -96 b 167 -138 176 -137 171 -138 b 153 -117 156 -138 153 -125 b 148 27 153 -117 148 -30 z\"\n    },\n    \"accidentalKomaSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 229,\n      \"y_min\": -337,\n      \"y_max\": 322,\n      \"ha\": 659,\n      \"o\": \"m 10 39 b 17 40 13 39 14 39 l 128 81 b 138 52 138 81 138 63 l 138 -91 b 124 -124 138 -107 132 -120 b 17 -167 115 -127 17 -167 b 0 -192 7 -171 0 -181 l 0 -294 b 10 -305 0 -301 4 -305 b 17 -304 13 -305 14 -305 b 127 -261 17 -304 117 -264 b 138 -276 138 -261 138 -262 l 138 -469 b 157 -485 138 -478 147 -485 b 181 -462 179 -485 181 -475 l 181 -262 b 183 -252 181 -258 181 -255 b 197 -232 186 -243 190 -235 b 312 -187 207 -228 312 -187 b 330 -163 323 -183 330 -173 l 330 -60 b 320 -49 330 -53 327 -49 b 312 -50 318 -49 315 -49 l 200 -94 b 193 -95 197 -95 194 -95 b 181 -68 183 -95 181 -85 l 181 66 b 200 108 181 92 189 104 l 312 151 b 330 176 323 156 330 166 l 330 278 b 320 289 330 285 327 289 b 312 288 318 289 315 289 b 200 246 312 288 203 248 b 181 275 187 246 181 264 l 181 448 b 163 464 181 456 173 464 b 138 441 140 464 138 452 l 138 253 b 122 215 137 240 132 225 b 17 177 92 203 45 177 b 0 153 7 173 0 163 l 0 50 b 10 39 0 43 4 39 z\"\n    },\n    \"accidentalKucukMucennebSharp\": {\n      \"x_min\": -1,\n      \"x_max\": 339,\n      \"y_min\": -338,\n      \"y_max\": 321,\n      \"ha\": 659,\n      \"o\": \"m -1 -45 l -1 -138 b 12 -154 -1 -145 3 -154 l 215 -79 b 220 -84 219 -79 220 -81 l 220 -105 b 210 -122 220 -115 219 -120 b 99 -168 202 -127 99 -168 b 82 -193 89 -173 82 -183 l 82 -295 b 92 -307 82 -302 86 -307 b 99 -305 95 -307 96 -307 b 209 -262 99 -305 199 -265 b 220 -278 220 -262 220 -264 l 220 -471 b 239 -487 220 -480 229 -487 b 264 -464 261 -487 264 -477 l 264 -264 b 265 -253 264 -259 264 -256 b 279 -233 268 -245 272 -236 b 395 -189 289 -229 395 -189 b 412 -164 405 -184 412 -174 l 412 -62 b 402 -50 412 -55 409 -50 b 395 -52 400 -50 397 -50 l 278 -96 b 264 -86 268 -96 264 -94 l 264 -68 b 269 -59 264 -62 265 -60 b 471 17 274 -58 471 17 b 488 36 484 22 488 27 l 488 127 b 477 144 488 134 487 144 b 471 141 475 144 472 141 l 471 143 b 274 68 471 143 282 71 b 268 66 272 68 269 66 b 264 71 264 66 264 69 l 264 92 b 271 102 264 98 265 99 l 395 150 b 412 174 405 154 412 164 l 412 276 b 402 288 412 284 409 288 b 395 287 400 288 397 288 b 282 245 395 287 285 246 b 264 274 269 245 264 262 l 264 446 b 245 462 264 455 255 462 b 220 439 222 462 220 451 l 220 252 b 204 213 219 239 215 223 b 99 176 174 202 127 176 b 82 151 89 171 82 161 l 82 49 b 92 37 82 42 86 37 b 99 39 95 37 96 37 l 210 79 b 216 81 212 81 215 81 b 220 78 219 81 220 79 l 220 56 b 216 46 220 52 220 48 b 16 -29 210 45 16 -29 b -1 -45 4 -32 -1 -36 z\"\n    },\n    \"accidentalKoron\": {\n      \"x_min\": 0,\n      \"x_max\": 300,\n      \"y_min\": -472,\n      \"y_max\": 157,\n      \"ha\": 629,\n      \"o\": \"m 0 -672 b 7 -680 0 -677 3 -680 l 45 -680 b 52 -672 49 -680 52 -677 l 52 -193 l 415 -22 b 432 -4 418 -20 432 -13 b 415 10 432 1 418 9 l 4 226 b 0 223 1 226 0 225 z m 327 -7 l 52 -137 l 52 144 z\"\n    },\n    \"accidentalSori\": {\n      \"x_min\": 0,\n      \"x_max\": 421,\n      \"y_min\": -318,\n      \"y_max\": 328,\n      \"ha\": 646,\n      \"o\": \"m 0 265 l 0 223 b 3 213 0 216 0 215 l 131 160 l 131 -150 l 3 -203 b 0 -212 0 -204 0 -206 l 0 -255 b 3 -259 0 -258 1 -259 l 131 -204 l 131 -451 b 138 -458 131 -455 134 -458 l 176 -458 b 183 -451 180 -458 183 -455 l 183 -183 l 330 -120 l 330 -410 b 337 -418 330 -415 333 -418 l 374 -418 b 382 -410 379 -418 382 -415 l 382 -98 l 589 -9 b 606 10 592 -9 606 0 b 589 23 606 16 592 22 l 382 109 l 382 465 b 374 472 382 469 379 472 l 337 472 b 330 465 333 472 330 469 l 330 132 l 183 194 l 183 425 b 176 432 183 429 180 432 l 138 432 b 131 425 134 432 131 429 l 131 216 l 3 269 b 0 265 0 269 0 266 z m 183 138 l 330 76 l 330 -66 l 183 -128 z m 501 6 l 382 -45 l 382 55 z\"\n    },\n    \"articAccentAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 339,\n      \"y_min\": 1,\n      \"y_max\": 245,\n      \"ha\": 244,\n      \"o\": \"m 0 318 b 20 298 0 311 4 304 b 346 187 20 298 331 193 b 356 177 353 186 356 181 b 344 167 356 173 353 170 b 20 58 328 163 20 58 b 0 36 4 50 0 43 b 3 23 0 32 1 27 b 23 1 7 13 13 1 b 29 3 24 1 27 1 l 469 151 b 488 177 488 156 488 166 b 469 203 488 189 488 197 l 37 350 b 24 353 32 351 26 353 b 3 333 12 353 7 344 b 0 318 1 327 0 323 z\"\n    },\n    \"articAccentBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 339,\n      \"y_min\": -244,\n      \"y_max\": 0,\n      \"ha\": 244,\n      \"o\": \"m 0 -35 b 20 -55 0 -42 4 -49 b 346 -166 20 -55 331 -160 b 356 -176 353 -167 356 -171 b 344 -186 356 -180 353 -183 b 20 -295 328 -190 20 -295 b 0 -317 4 -302 0 -310 b 3 -330 0 -321 1 -325 b 23 -351 7 -340 13 -351 b 29 -350 24 -351 27 -351 l 469 -202 b 488 -176 488 -197 488 -187 b 469 -150 488 -164 488 -156 l 37 -3 b 24 0 32 -1 26 0 b 3 -20 12 0 7 -9 b 0 -35 1 -26 0 -30 z\"\n    },\n    \"articTenutoAbove\": {\n      \"x_min\": -1,\n      \"x_max\": 338,\n      \"y_min\": 0,\n      \"y_max\": 48,\n      \"ha\": 48,\n      \"o\": \"m 33 0 l 452 0 b 487 35 485 0 487 16 b 452 69 487 53 487 69 l 33 69 b -1 35 -1 69 -1 53 b 33 0 -1 16 -1 0 z\"\n    },\n    \"articTenutoBelow\": {\n      \"x_min\": -1,\n      \"x_max\": 338,\n      \"y_min\": -48,\n      \"y_max\": 0,\n      \"ha\": 48,\n      \"o\": \"m 33 -69 l 452 -69 b 487 -35 485 -69 487 -53 b 452 0 487 -16 487 0 l 33 0 b -1 -35 -1 0 -1 -16 b 33 -69 -1 -53 -1 -69 z\"\n    },\n    \"articStaccatoAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 84,\n      \"y_min\": 0,\n      \"y_max\": 84,\n      \"ha\": 84,\n      \"o\": \"m 60 0 b 121 60 94 0 121 27 b 60 121 121 94 94 121 b 0 60 27 121 0 94 b 60 0 0 27 27 0 z\"\n    },\n    \"articStaccatoBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 84,\n      \"y_min\": -84,\n      \"y_max\": 0,\n      \"ha\": 84,\n      \"o\": \"m 60 -121 b 121 -60 94 -121 121 -94 b 60 0 121 -27 94 0 b 0 -60 27 0 0 -27 b 60 -121 0 -94 27 -121 z\"\n    },\n    \"articStaccatissimoAbove\": {\n      \"x_min\": 1,\n      \"x_max\": 100,\n      \"y_min\": -2,\n      \"y_max\": 293,\n      \"ha\": 295,\n      \"o\": \"m 1 390 b 72 -3 1 369 39 -3 b 144 389 108 -3 144 356 b 72 422 144 410 111 422 b 1 390 35 422 3 409 z\"\n    },\n    \"articStaccatissimoBelow\": {\n      \"x_min\": 1,\n      \"x_max\": 100,\n      \"y_min\": -295,\n      \"y_max\": 0,\n      \"ha\": 295,\n      \"o\": \"m 1 -393 b 72 -425 3 -412 35 -425 b 144 -392 111 -425 144 -413 b 72 0 144 -359 108 0 b 1 -393 39 0 1 -372 z\"\n    },\n    \"articMarcatoAbove\": {\n      \"x_min\": -1,\n      \"x_max\": 235,\n      \"y_min\": -1,\n      \"y_max\": 253,\n      \"ha\": 254,\n      \"o\": \"m -1 16 b 9 0 -1 9 1 1 b 16 -1 10 -1 14 -1 b 32 9 22 -1 29 1 b 112 186 32 9 109 180 b 118 190 114 189 115 190 b 127 186 121 190 124 189 b 209 9 128 180 209 9 b 225 0 213 3 219 0 l 323 0 b 338 16 333 1 338 7 b 337 23 338 19 338 22 l 181 356 b 167 364 177 361 173 364 b 153 356 157 364 153 356 l 0 23 b -1 16 -1 20 -1 19 z\"\n    },\n    \"articMarcatoBelow\": {\n      \"x_min\": -1,\n      \"x_max\": 235,\n      \"y_min\": -254,\n      \"y_max\": 0,\n      \"ha\": 254,\n      \"o\": \"m -1 -17 b 0 -24 -1 -20 -1 -23 l 156 -357 b 170 -366 160 -363 164 -366 b 184 -357 180 -366 184 -357 l 337 -24 b 338 -17 338 -22 338 -20 b 328 -1 338 -10 336 -3 b 321 0 327 0 323 0 b 305 -10 315 0 308 -3 b 225 -187 305 -10 228 -181 b 219 -192 223 -190 222 -192 b 210 -187 216 -192 213 -190 b 128 -10 209 -181 128 -10 b 112 -1 124 -4 118 -1 l 14 -1 b -1 -17 4 -3 -1 -9 z\"\n    },\n    \"fermataAbove\": {\n      \"x_min\": 3,\n      \"x_max\": 605,\n      \"y_min\": -3,\n      \"y_max\": 329,\n      \"ha\": 332,\n      \"o\": \"m 4 14 b 23 -4 4 0 12 -4 b 52 26 36 -4 43 6 b 56 39 53 27 55 33 b 435 318 73 98 138 318 b 818 36 742 318 804 91 b 821 26 819 32 819 27 b 851 -4 831 6 837 -4 b 871 16 864 -4 871 1 b 870 30 871 20 871 24 b 438 474 780 471 480 474 b 6 30 392 474 94 471 b 4 14 4 24 4 19 z m 359 75 b 436 -4 359 32 395 -4 b 516 75 480 -4 516 32 b 436 153 516 117 480 153 b 359 75 395 153 359 117 z\"\n    },\n    \"fermataBelow\": {\n      \"x_min\": 3,\n      \"x_max\": 605,\n      \"y_min\": -332,\n      \"y_max\": 0,\n      \"ha\": 332,\n      \"o\": \"m 6 -35 b 438 -478 94 -475 392 -478 b 870 -35 480 -478 780 -475 b 871 -20 871 -29 871 -24 b 851 0 871 -6 864 0 b 821 -30 837 0 831 -10 b 818 -40 819 -32 819 -36 b 435 -323 804 -95 742 -323 b 56 -43 138 -323 73 -102 b 52 -30 55 -37 53 -32 b 23 0 43 -10 36 0 b 4 -19 12 0 4 -4 b 6 -35 4 -23 4 -29 z m 436 -157 b 516 -79 480 -157 516 -121 b 436 0 516 -36 480 0 b 359 -79 395 0 359 -36 b 436 -157 359 -121 395 -157 z\"\n    },\n    \"breathMarkComma\": {\n      \"x_min\": 1,\n      \"x_max\": 152,\n      \"y_min\": 2,\n      \"y_max\": 251,\n      \"ha\": 249,\n      \"o\": \"m 1 271 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 19 32 29 26 26 b 27 14 26 17 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 b 1 271 42 361 1 321 z\"\n    },\n    \"breathMarkUpbow\": {\n      \"x_min\": 1,\n      \"x_max\": 249,\n      \"y_min\": 1,\n      \"y_max\": 495,\n      \"ha\": 494,\n      \"o\": \"m 1 690 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 z\"\n    },\n    \"caesura\": {\n      \"x_min\": 0,\n      \"x_max\": 384,\n      \"y_min\": -1,\n      \"y_max\": 532,\n      \"ha\": 533,\n      \"o\": \"m 258 1 b 271 -1 262 -1 266 -1 b 308 26 287 -1 302 9 l 552 713 b 553 726 553 717 553 721 b 513 766 553 747 534 766 b 475 739 495 766 481 756 l 232 52 b 230 39 230 48 230 43 b 258 1 230 23 240 7 z m 27 1 b 40 -1 32 -1 36 -1 b 78 26 58 -1 72 9 l 321 713 b 323 726 323 717 323 721 b 282 766 323 747 304 766 b 245 739 265 766 251 756 l 3 52 b 0 37 1 48 0 42 b 27 1 0 22 10 7 z\"\n    },\n    \"caesuraCurved\": {\n      \"x_min\": 0,\n      \"x_max\": 373,\n      \"y_min\": 0,\n      \"y_max\": 530,\n      \"ha\": 530,\n      \"o\": \"m 0 29 b 29 0 0 14 12 0 b 53 16 39 0 48 6 l 82 69 b 314 716 187 264 314 498 b 268 763 314 742 295 763 b 222 719 245 763 223 744 b 29 98 209 507 117 295 l 3 39 b 0 29 1 36 0 33 z m 223 27 b 252 0 223 13 233 0 b 276 16 262 0 272 6 b 537 716 386 230 537 478 b 491 763 537 742 518 763 b 445 719 468 763 446 744 b 252 98 432 507 340 295 l 226 39 b 223 27 225 35 223 32 z\"\n    },\n    \"restMaxima\": {\n      \"x_min\": 0,\n      \"x_max\": 381,\n      \"y_min\": -249,\n      \"y_max\": 250,\n      \"ha\": 499,\n      \"o\": \"m 369 331 l 369 -330 b 392 -359 369 -354 379 -359 l 524 -359 b 549 -330 539 -359 549 -354 l 549 331 b 524 360 549 356 539 360 l 392 360 b 369 331 379 360 369 356 z m 23 -359 l 156 -359 b 180 -330 170 -359 180 -354 l 180 331 b 156 360 180 356 170 360 l 23 360 b 0 331 10 360 0 356 l 0 -330 b 23 -359 0 -354 10 -359 z\"\n    },\n    \"restDoubleWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 125,\n      \"y_min\": 0,\n      \"y_max\": 250,\n      \"ha\": 250,\n      \"o\": \"m 23 0 l 156 0 b 180 22 170 0 180 10 l 180 338 b 156 360 180 350 170 360 l 23 360 b 0 338 10 360 0 350 l 0 22 b 23 0 0 10 10 0 z\"\n    },\n    \"restWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 282,\n      \"y_min\": -135,\n      \"y_max\": 9,\n      \"ha\": 144,\n      \"o\": \"m 37 -194 l 369 -194 b 406 -157 389 -194 406 -177 l 406 -24 b 369 13 406 -3 389 13 l 37 13 b 0 -24 16 13 0 -3 l 0 -157 b 37 -194 0 -177 16 -194 z\"\n    },\n    \"restHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 282,\n      \"y_min\": -2,\n      \"y_max\": 142,\n      \"ha\": 144,\n      \"o\": \"m 37 -3 l 369 -3 b 406 35 389 -3 406 14 l 406 167 b 369 204 406 189 389 204 l 37 204 b 0 167 16 204 0 189 l 0 35 b 37 -3 0 14 16 -3 z\"\n    },\n    \"restQuarter\": {\n      \"x_min\": 1,\n      \"x_max\": 270,\n      \"y_min\": -375,\n      \"y_max\": 373,\n      \"ha\": 748,\n      \"o\": \"m 168 -527 b 206 -540 180 -536 194 -540 b 228 -531 216 -540 226 -537 b 230 -521 229 -527 230 -524 b 207 -487 230 -508 219 -497 b 170 -435 189 -487 173 -448 b 164 -397 166 -423 164 -410 b 255 -292 164 -338 194 -292 b 367 -317 297 -292 344 -308 b 372 -318 369 -317 370 -318 b 382 -320 376 -320 379 -320 b 389 -314 386 -320 389 -318 b 336 -232 389 -297 351 -249 b 236 -32 281 -166 236 -112 b 238 -13 236 -26 238 -19 b 333 199 243 71 295 140 b 338 220 337 206 338 213 b 333 248 338 235 333 248 b 95 526 333 248 120 501 b 69 537 88 533 78 537 b 40 507 55 537 40 527 b 46 484 40 500 42 492 b 134 291 52 468 134 395 b 48 108 134 238 112 176 b 27 66 33 94 27 78 b 42 32 27 46 42 32 l 112 -55 b 174 -141 135 -84 156 -111 b 183 -161 177 -147 183 -158 b 181 -167 183 -163 183 -166 b 166 -174 179 -173 173 -174 b 143 -170 160 -174 148 -171 b 120 -166 135 -170 127 -166 b 1 -304 58 -166 1 -228 b 168 -527 1 -376 63 -446 z\"\n    },\n    \"rest8th\": {\n      \"x_min\": 0,\n      \"x_max\": 247,\n      \"y_min\": -251,\n      \"y_max\": 174,\n      \"ha\": 425,\n      \"o\": \"m 39 81 b 117 56 62 65 89 56 b 173 66 137 56 157 60 b 225 88 193 72 206 78 b 232 89 228 89 230 89 b 239 76 238 89 239 84 b 238 60 239 72 239 66 b 104 -343 233 39 130 -248 b 145 -361 104 -360 137 -361 b 196 -347 161 -361 181 -359 b 341 161 200 -344 341 161 b 356 217 347 187 354 210 b 338 240 356 232 341 239 b 323 235 336 240 331 240 b 193 140 312 226 240 140 l 193 154 b 96 251 193 207 150 251 b 0 154 43 251 0 207 b 39 81 0 124 17 98 z\"\n    },\n    \"rest16th\": {\n      \"x_min\": 0,\n      \"x_max\": 320,\n      \"y_min\": -500,\n      \"y_max\": 179,\n      \"ha\": 679,\n      \"o\": \"m 115 -301 b 223 -271 153 -301 190 -288 b 229 -278 226 -271 229 -274 b 228 -282 229 -279 228 -281 l 91 -690 b 89 -694 91 -691 89 -693 b 134 -720 89 -706 102 -720 b 189 -687 176 -720 183 -703 l 356 -138 b 420 81 393 -16 420 81 b 459 226 420 81 456 207 b 461 232 459 229 461 230 b 446 248 461 240 449 246 b 431 242 439 248 435 245 b 300 145 420 233 348 147 l 300 160 b 202 258 300 215 256 258 b 104 160 148 258 104 215 b 219 62 104 101 164 62 b 331 94 258 62 298 75 b 341 96 336 95 338 96 b 348 86 346 96 348 94 b 265 -173 348 63 275 -151 b 194 -217 253 -200 215 -217 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 151 -105 b 0 -203 43 -105 0 -148 b 115 -301 0 -262 60 -301 z\"\n    },\n    \"rest32nd\": {\n      \"x_min\": 0,\n      \"x_max\": 363,\n      \"y_min\": -500,\n      \"y_max\": 426,\n      \"ha\": 926,\n      \"o\": \"m 0 -203 b 115 -301 0 -262 60 -301 b 228 -269 154 -301 194 -288 b 232 -268 229 -268 230 -268 b 240 -276 236 -268 240 -272 b 138 -688 240 -282 141 -678 b 137 -697 137 -691 137 -694 b 176 -720 137 -708 145 -720 b 232 -690 222 -720 226 -706 b 484 436 236 -672 484 436 b 521 582 484 436 518 564 b 523 588 521 585 523 586 b 508 603 523 600 511 603 b 492 598 501 603 497 600 b 361 503 482 590 410 503 l 361 516 b 264 613 361 570 318 613 b 166 516 210 613 166 570 b 206 444 166 487 183 461 b 246 423 217 433 232 428 b 284 418 258 420 269 418 b 393 449 321 418 360 432 b 399 451 395 451 397 451 b 415 428 409 451 415 436 b 413 422 415 426 413 423 l 357 192 b 279 140 350 168 302 140 b 281 153 281 144 281 148 b 183 251 281 207 236 251 b 85 153 128 251 85 207 b 125 81 85 124 102 98 b 164 60 137 71 150 65 b 203 55 176 58 189 55 b 311 86 240 55 278 69 b 315 88 312 88 314 88 b 325 69 323 88 325 76 l 268 -167 b 194 -217 261 -197 216 -216 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 153 -105 b 0 -203 45 -105 0 -148 z\"\n    },\n    \"rest64th\": {\n      \"x_min\": 0,\n      \"x_max\": 423,\n      \"y_min\": -753,\n      \"y_max\": 430,\n      \"ha\": 1183,\n      \"o\": \"m 0 -554 b 40 -626 0 -583 17 -609 b 118 -652 60 -644 92 -652 b 210 -629 145 -652 186 -642 b 216 -628 213 -628 215 -628 b 228 -644 223 -628 228 -635 b 226 -652 228 -647 226 -649 l 122 -1054 b 121 -1064 121 -1058 121 -1061 b 167 -1084 121 -1077 134 -1084 b 215 -1060 202 -1084 209 -1076 b 402 -278 217 -1047 229 -1021 b 436 -135 403 -278 431 -161 l 570 441 b 609 588 570 441 605 569 b 596 609 609 603 602 608 b 580 603 589 609 585 606 b 448 507 569 595 497 507 b 449 521 449 511 449 516 b 351 619 449 575 405 619 b 253 521 297 619 253 575 b 372 422 253 461 317 422 b 481 454 410 422 446 438 b 491 456 484 455 488 456 b 504 441 498 456 504 451 b 501 426 504 436 503 432 b 445 202 500 422 451 217 b 359 144 435 174 383 144 l 359 158 b 261 256 359 212 315 256 b 163 158 207 256 163 212 b 243 65 163 112 202 78 b 279 60 255 62 266 60 b 397 91 320 60 360 73 b 403 92 400 92 402 92 b 412 79 409 92 412 86 b 410 72 412 76 412 75 b 351 -161 408 59 356 -150 b 281 -212 340 -199 301 -212 l 281 -197 b 183 -99 281 -144 238 -99 b 85 -197 130 -99 85 -144 b 125 -271 85 -228 102 -253 b 166 -291 138 -279 151 -287 b 204 -297 177 -294 192 -297 b 262 -287 225 -297 245 -292 b 305 -265 282 -279 287 -274 b 310 -264 307 -264 308 -264 b 318 -284 317 -264 318 -275 b 317 -295 318 -288 317 -294 b 259 -524 315 -302 265 -508 b 194 -567 251 -554 213 -567 b 196 -554 196 -563 196 -559 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 z\"\n    },\n    \"rest128th\": {\n      \"x_min\": 0,\n      \"x_max\": 485,\n      \"y_min\": -750,\n      \"y_max\": 689,\n      \"ha\": 1439,\n      \"o\": \"m 118 -652 b 176 -642 138 -652 160 -648 b 180 -641 177 -642 179 -641 b 228 -621 197 -635 210 -629 b 232 -619 229 -621 230 -619 b 239 -626 236 -619 239 -622 b 238 -632 239 -628 239 -631 b 131 -1057 235 -642 134 -1050 b 173 -1080 131 -1071 140 -1080 b 230 -1057 219 -1080 225 -1074 l 658 815 b 697 960 658 815 694 942 b 698 966 697 963 698 965 b 684 982 698 975 687 981 b 668 976 677 982 672 979 b 537 880 658 969 586 881 l 537 894 b 439 992 537 949 494 992 b 341 894 386 992 341 949 b 382 822 341 865 359 840 b 459 796 402 805 433 796 b 517 806 480 796 501 801 b 521 808 518 806 520 808 b 569 828 539 814 552 819 b 580 831 572 829 577 831 b 598 812 589 831 598 825 b 596 801 598 809 598 805 b 540 575 590 773 546 595 b 448 510 534 553 475 510 l 448 524 b 350 622 448 577 405 622 b 252 524 297 622 252 577 b 292 451 252 494 269 468 b 369 426 318 433 337 426 b 429 435 389 426 412 429 b 494 464 449 442 475 455 b 498 465 495 465 497 465 b 505 446 504 465 505 456 b 503 426 505 439 504 432 l 446 202 b 366 144 439 173 389 144 l 366 158 b 268 256 366 212 323 256 b 170 158 215 256 170 212 b 289 59 170 98 235 59 b 347 69 310 59 330 63 b 397 91 367 76 379 82 b 406 94 400 92 403 94 b 415 79 412 94 415 88 b 412 63 415 75 413 69 b 357 -157 408 42 364 -134 b 281 -212 346 -196 302 -212 b 282 -197 281 -207 282 -203 b 184 -99 282 -144 238 -99 b 86 -197 130 -99 86 -144 b 204 -297 86 -258 150 -297 b 262 -287 225 -297 245 -292 b 312 -265 282 -279 294 -274 b 318 -264 314 -264 317 -264 b 327 -275 324 -264 327 -269 b 266 -517 324 -287 278 -490 b 200 -569 248 -566 220 -567 l 196 -554 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 b 118 -652 0 -615 63 -652 z\"\n    },\n    \"dynamicPiano\": {\n      \"x_min\": -89,\n      \"x_max\": 366,\n      \"y_min\": -142,\n      \"y_max\": 274,\n      \"ha\": 416,\n      \"o\": \"m -128 -187 b -111 -204 -128 -199 -122 -204 l 167 -204 b 186 -186 180 -204 186 -199 b 168 -168 186 -174 180 -168 l 111 -168 b 98 -164 102 -168 98 -168 b 101 -154 98 -163 99 -158 l 166 7 b 179 24 168 14 171 24 b 213 -1 186 24 190 10 b 276 -14 233 -12 252 -14 b 527 266 415 -14 527 130 b 395 395 527 350 475 395 b 292 357 350 395 318 380 b 262 328 272 340 268 328 b 246 363 255 328 259 338 b 177 393 236 380 215 393 b 1 251 92 393 46 333 b -9 223 -6 238 -9 230 b 7 207 -9 213 -1 207 b 30 229 17 207 23 216 b 127 338 72 301 101 338 b 143 321 138 338 143 331 b 134 285 143 310 138 295 l -43 -154 b -65 -168 -48 -166 -50 -168 l -109 -168 b -128 -187 -122 -168 -128 -174 z m 207 81 b 235 180 207 111 219 140 l 264 251 b 356 341 284 300 321 341 b 389 288 380 341 389 320 b 243 35 389 217 312 35 b 207 81 219 35 207 50 z\"\n    },\n    \"dynamicMezzo\": {\n      \"x_min\": -20,\n      \"x_max\": 446,\n      \"y_min\": -10,\n      \"y_max\": 274,\n      \"ha\": 284,\n      \"o\": \"m -29 223 b -13 207 -29 213 -22 207 b 9 226 -3 207 1 215 b 107 338 52 300 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 287 323 225 292 255 323 b 308 302 304 323 308 314 b 294 249 308 285 302 269 b 203 24 294 248 292 248 b 199 9 200 17 199 13 b 215 0 199 3 203 0 l 285 0 b 308 17 298 0 302 3 l 402 251 b 481 323 419 292 449 323 b 503 302 498 323 503 314 b 413 43 503 252 413 104 b 478 -14 413 6 436 -14 b 629 102 533 -14 583 26 b 642 132 638 117 642 125 b 629 145 642 141 636 145 b 608 127 619 145 615 138 b 534 49 580 84 553 49 b 523 62 526 49 523 53 b 606 317 523 112 606 238 b 528 395 606 353 588 395 b 431 350 487 395 454 374 b 409 330 416 336 415 330 b 397 360 402 330 406 341 b 334 395 389 379 370 395 b 236 350 292 395 259 374 b 215 330 222 336 220 330 b 203 360 207 330 212 340 b 147 393 194 379 174 393 b -19 251 71 393 26 331 b -29 223 -26 238 -29 230 z\"\n    },\n    \"dynamicForte\": {\n      \"x_min\": -141,\n      \"x_max\": 364,\n      \"y_min\": -152,\n      \"y_max\": 444,\n      \"ha\": 596,\n      \"o\": \"m -203 -122 b -95 -219 -203 -186 -156 -219 b 161 17 14 -219 82 -145 b 269 315 203 105 235 194 b 289 336 269 323 284 336 l 383 336 b 406 359 399 336 406 343 b 384 380 406 373 399 380 l 298 380 b 284 387 288 380 284 380 b 287 405 284 392 285 396 b 419 606 315 530 347 606 b 442 595 431 606 442 603 b 419 580 442 586 435 588 b 389 526 400 572 389 552 b 454 465 389 485 418 465 b 524 543 491 465 524 490 b 400 639 524 596 491 639 b 135 402 261 639 183 540 b 107 380 128 380 127 380 l 23 380 b 0 357 7 380 0 373 b 22 336 0 343 7 336 l 105 336 b 117 330 114 336 117 336 b 114 315 117 327 115 323 l 23 0 b -101 -187 -17 -141 -43 -187 b -127 -174 -120 -187 -127 -181 b -92 -156 -127 -163 -114 -170 b -63 -102 -75 -144 -63 -125 b -128 -43 -63 -65 -89 -43 b -203 -122 -171 -43 -203 -78 z\"\n    },\n    \"dynamicRinforzando\": {\n      \"x_min\": -20,\n      \"x_max\": 277,\n      \"y_min\": 0,\n      \"y_max\": 274,\n      \"ha\": 274,\n      \"o\": \"m -13 207 b 9 226 -3 207 3 215 b 107 338 52 301 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 304 351 226 298 272 351 b 318 343 312 351 318 348 b 287 285 318 330 287 325 b 338 239 287 256 308 239 b 399 318 373 239 399 268 b 324 395 399 360 377 395 b 235 350 287 395 256 374 b 215 330 222 336 220 330 b 203 360 207 330 213 337 b 145 393 194 379 174 393 b -19 251 75 393 27 337 b -29 223 -26 238 -29 230 b -13 207 -29 213 -22 207 z\"\n    },\n    \"dynamicSforzando\": {\n      \"x_min\": 0,\n      \"x_max\": 229,\n      \"y_min\": -10,\n      \"y_max\": 273,\n      \"ha\": 283,\n      \"o\": \"m 125 -14 b 291 120 219 -14 291 36 b 220 232 291 160 276 190 b 151 314 168 271 151 287 b 213 361 151 337 168 361 b 258 346 238 361 258 356 b 240 333 258 340 251 340 b 226 298 232 325 226 314 b 276 252 226 269 248 252 b 330 307 311 252 330 279 b 212 393 330 360 285 393 b 68 274 127 393 68 350 b 145 161 68 223 95 196 b 200 85 187 132 200 114 b 127 20 200 53 173 20 b 66 42 91 20 66 32 b 91 56 66 49 75 46 b 111 98 104 65 111 79 b 59 145 111 127 86 145 b 0 78 24 145 0 117 b 125 -14 0 30 49 -14 z\"\n    },\n    \"dynamicZ\": {\n      \"x_min\": -30,\n      \"x_max\": 244,\n      \"y_min\": -10,\n      \"y_max\": 268,\n      \"ha\": 278,\n      \"o\": \"m -24 -1 b 4 16 -12 -1 -3 10 b 39 30 16 24 27 30 b 179 -14 79 30 108 -14 b 297 102 259 -14 297 43 b 245 166 297 147 271 166 b 197 115 219 166 197 145 b 236 72 197 88 216 72 b 259 79 251 72 255 79 b 264 75 262 79 264 78 b 258 60 264 72 261 66 b 229 45 252 50 242 45 b 117 95 186 45 173 95 b 85 86 98 95 89 86 b 102 111 85 86 95 104 l 333 338 b 351 370 344 350 351 359 b 333 386 351 380 343 386 b 298 377 321 386 314 382 b 239 370 282 373 259 370 b 94 383 153 370 111 383 b 68 364 79 383 72 377 l 33 264 b 29 242 30 255 29 248 b 45 228 29 232 36 228 b 66 249 55 228 60 236 l 81 279 b 96 297 85 288 88 297 b 168 292 102 297 127 292 b 223 302 194 292 215 302 b 196 269 229 302 197 271 l -26 45 b -43 16 -37 33 -43 27 b -24 -1 -43 6 -36 -1 z\"\n    },\n    \"ornamentTrill\": {\n      \"x_min\": 0,\n      \"x_max\": 521,\n      \"y_min\": -10,\n      \"y_max\": 390,\n      \"ha\": 400,\n      \"o\": \"m 95 210 b 140 213 112 210 131 213 b 144 209 143 213 144 212 b 140 194 144 206 143 202 l 124 156 b 96 58 108 117 96 88 b 179 -14 96 17 124 -14 b 325 153 253 -14 325 46 b 307 251 325 187 320 219 b 302 265 304 258 302 261 b 334 294 302 274 311 281 l 343 298 b 455 348 393 328 428 348 b 474 327 468 348 474 344 b 465 285 474 312 469 295 l 360 24 b 356 9 357 17 356 13 b 372 0 356 3 360 0 l 442 0 b 465 17 455 0 459 3 l 559 251 b 655 351 577 298 624 351 b 670 343 664 351 670 348 b 638 285 670 330 638 325 b 690 239 638 256 660 239 b 750 318 724 239 750 268 b 675 395 750 360 729 395 b 586 350 638 395 608 374 b 566 330 573 336 572 330 b 553 361 559 330 564 340 b 490 393 543 380 521 393 b 347 348 432 393 377 364 b 312 333 328 338 320 333 b 308 337 310 333 308 334 b 315 359 308 343 312 351 l 387 537 b 392 553 390 544 392 549 b 383 562 392 559 389 562 b 364 557 377 562 369 559 l 294 534 b 269 511 281 530 275 526 l 217 384 b 206 367 212 370 210 367 b 179 380 200 367 192 374 b 118 393 158 389 140 393 b 0 292 50 393 0 353 b 95 210 0 248 30 210 z m 118 360 b 192 325 134 360 192 347 b 186 307 192 321 189 314 l 180 292 b 148 265 173 274 167 269 b 98 258 130 261 112 258 b 39 301 50 258 39 281 b 118 360 39 327 60 360 z m 196 48 b 207 92 196 59 202 78 b 264 230 207 94 209 94 b 272 240 266 238 268 240 b 279 229 276 240 276 236 b 292 151 279 204 292 177 b 212 30 292 88 253 30 b 196 48 200 30 196 37 z\"\n    },\n    \"ornamentTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 460,\n      \"y_min\": 0,\n      \"y_max\": 218,\n      \"ha\": 218,\n      \"o\": \"m 0 148 b 128 0 0 45 66 0 b 209 63 173 0 209 20 b 157 115 209 95 187 115 b 84 82 115 115 114 82 b 36 150 59 82 36 112 b 130 242 36 212 79 242 b 285 134 176 242 223 203 b 513 1 356 56 419 1 b 662 166 608 1 662 73 b 534 314 662 269 596 314 b 454 251 490 314 454 294 b 505 199 454 219 475 199 b 579 232 547 199 549 232 b 626 164 603 232 626 202 b 533 72 626 102 583 72 b 377 180 487 72 439 111 b 150 312 307 258 243 312 b 0 148 55 312 0 240 z\"\n    },\n    \"ornamentTurnSlash\": {\n      \"x_min\": 0,\n      \"x_max\": 460,\n      \"y_min\": -90,\n      \"y_max\": 306,\n      \"ha\": 396,\n      \"o\": \"m 0 147 b 128 -1 0 43 66 -1 b 209 62 173 -1 209 19 b 157 114 209 94 187 114 b 84 81 115 114 114 81 b 36 148 59 81 36 111 b 130 240 36 210 79 240 b 285 128 176 240 222 197 b 307 79 304 108 307 105 l 307 -107 b 330 -130 307 -122 312 -130 b 353 -107 347 -130 353 -122 l 353 37 b 360 59 353 53 353 59 b 402 33 369 59 376 49 b 513 0 435 13 471 0 b 662 164 608 0 662 72 b 534 312 662 268 596 312 b 454 249 490 312 454 292 b 505 197 454 217 475 197 b 579 230 547 197 549 230 b 626 163 603 230 626 200 b 533 71 626 101 583 71 b 377 183 487 71 441 114 b 356 232 359 203 356 206 l 356 418 b 333 441 356 433 350 441 b 310 418 315 441 310 433 l 310 274 b 302 252 310 258 308 252 b 261 278 294 252 287 262 b 150 311 228 298 192 311 b 0 147 55 311 0 239 z\"\n    },\n    \"ornamentMordent\": {\n      \"x_min\": 1,\n      \"x_max\": 729,\n      \"y_min\": -73,\n      \"y_max\": 319,\n      \"ha\": 392,\n      \"o\": \"m 30 59 b 88 94 53 59 73 79 b 144 143 107 109 124 127 b 176 161 158 154 168 161 b 197 144 183 161 189 156 l 323 10 b 351 0 328 3 340 0 b 377 9 361 0 372 3 b 498 114 392 17 475 94 l 498 -105 l 544 -105 l 544 153 b 562 160 550 157 556 160 b 585 144 569 160 576 156 b 710 10 590 135 697 24 b 737 0 716 3 727 0 b 765 9 749 0 759 3 b 1030 295 776 17 1011 274 l 1032 300 b 1050 328 1041 308 1050 318 b 1012 353 1050 343 1024 353 b 986 343 1002 353 994 348 b 854 190 971 330 871 206 b 828 176 842 180 835 176 b 802 190 818 176 809 183 b 681 333 791 202 696 320 b 645 353 668 344 657 353 b 613 340 634 353 626 350 b 580 304 600 330 590 315 l 546 265 l 546 459 l 501 459 l 501 216 l 459 167 b 449 156 455 164 452 160 b 302 327 397 216 310 317 b 258 353 291 338 282 351 b 226 340 245 353 238 348 b 193 304 213 330 203 317 l 187 298 b 72 167 148 255 109 212 l 20 107 b 1 73 12 98 1 84 b 30 59 1 65 9 59 z\"\n    },\n    \"ornamentShortTrill\": {\n      \"x_min\": 0,\n      \"x_max\": 725,\n      \"y_min\": 0,\n      \"y_max\": 245,\n      \"ha\": 245,\n      \"o\": \"m 0 72 b 29 58 0 63 7 58 b 88 92 50 58 72 78 b 143 141 105 109 124 125 b 147 144 144 143 145 144 b 174 160 158 153 168 160 b 197 143 181 160 187 154 b 321 10 203 135 310 24 b 350 0 327 3 338 0 b 377 7 361 0 372 3 l 436 65 b 469 92 449 72 459 84 b 524 141 487 109 505 125 l 528 145 b 533 148 531 147 531 148 b 554 160 541 154 550 160 b 577 143 562 160 569 154 b 703 10 585 135 691 24 b 732 0 708 3 720 0 b 759 7 743 0 753 3 b 1024 294 769 16 1005 272 b 1044 327 1032 305 1044 321 b 1005 353 1044 341 1018 353 b 979 343 996 353 988 348 b 848 189 963 330 864 204 b 821 174 837 179 828 174 b 796 189 811 174 804 181 b 674 331 783 202 688 318 b 641 351 662 343 651 351 b 606 340 628 351 619 350 b 573 304 593 328 583 315 b 452 167 533 258 491 213 l 445 158 l 301 325 b 256 353 291 338 282 350 b 225 340 246 353 238 350 b 192 304 212 328 203 315 l 17 107 b 0 72 12 96 0 76 z\"\n    },\n    \"ornamentTremblement\": {\n      \"x_min\": 1,\n      \"x_max\": 985,\n      \"y_min\": 0,\n      \"y_max\": 244,\n      \"ha\": 244,\n      \"o\": \"m 1 72 b 30 58 1 63 9 58 b 89 92 52 58 73 78 l 144 141 b 148 144 147 143 147 144 b 176 160 160 153 170 160 b 199 143 183 160 189 154 b 324 10 204 134 311 23 b 351 0 330 3 340 0 b 379 7 363 0 373 3 b 488 111 386 13 446 72 b 520 141 498 122 508 132 b 524 144 521 143 523 144 b 552 160 536 153 546 160 b 575 143 559 160 564 154 b 698 10 580 134 687 23 b 727 0 704 3 716 0 b 755 7 739 0 749 3 l 899 141 b 930 160 913 153 923 160 b 952 143 937 160 943 154 l 1077 10 b 1107 0 1084 3 1096 0 b 1133 7 1117 0 1128 3 b 1398 294 1143 16 1380 272 b 1418 327 1407 305 1418 321 b 1381 351 1418 343 1394 351 b 1354 341 1371 351 1362 348 b 1223 189 1338 328 1238 204 b 1195 174 1211 179 1202 174 b 1171 189 1185 174 1178 181 b 1048 331 1158 200 1063 318 b 1012 351 1035 343 1024 351 b 981 338 1002 351 994 350 b 948 304 968 328 958 315 b 827 166 907 258 865 212 b 821 160 825 164 822 163 l 678 325 b 634 351 667 338 657 350 b 602 338 621 351 613 348 b 569 304 590 328 580 315 l 444 161 b 302 325 392 222 311 317 b 258 351 291 338 281 350 b 228 338 245 351 238 348 b 193 304 215 328 204 315 l 19 107 b 1 72 13 96 1 76 z\"\n    },\n    \"ornamentPrecompAppoggTrill\": {\n      \"x_min\": 0,\n      \"x_max\": 1119,\n      \"y_min\": 0,\n      \"y_max\": 481,\n      \"ha\": 481,\n      \"o\": \"m 121 0 b 249 68 168 0 232 53 b 279 94 262 75 271 86 b 336 144 298 111 315 128 b 367 163 350 156 360 163 b 389 145 374 163 380 157 b 514 12 395 137 501 26 b 543 1 520 4 531 1 b 569 9 553 1 563 4 b 636 73 576 14 605 43 l 658 94 b 714 144 677 111 694 128 b 746 163 729 156 739 163 b 768 145 753 163 759 157 b 893 12 773 137 880 26 b 922 1 899 4 910 1 b 948 9 932 1 942 4 l 1012 71 b 1037 94 1022 78 1030 86 b 1092 144 1054 111 1073 128 b 1123 161 1106 156 1115 161 b 1146 145 1130 161 1136 157 b 1270 12 1152 137 1259 26 b 1299 1 1276 4 1287 1 b 1326 9 1310 1 1320 4 b 1591 297 1336 19 1572 275 b 1611 328 1600 307 1611 320 b 1574 354 1611 343 1585 354 b 1548 344 1565 354 1555 350 b 1416 192 1532 331 1431 206 b 1388 177 1404 181 1395 177 b 1365 190 1380 177 1371 184 b 1243 333 1352 203 1256 321 b 1205 354 1228 346 1217 354 b 1174 341 1195 354 1187 351 b 1140 305 1161 330 1152 317 l 1015 163 b 873 328 963 223 880 318 b 828 354 860 344 847 353 b 796 341 816 354 809 351 b 763 305 783 331 773 317 b 642 168 721 261 681 215 b 636 163 641 167 639 164 b 494 328 585 223 501 318 b 449 354 481 344 468 353 b 418 341 438 354 431 351 b 384 305 405 331 395 317 b 264 168 343 261 302 215 l 242 144 b 144 88 232 124 171 88 b 79 197 81 88 79 189 l 79 648 b 60 693 79 683 71 693 b 52 691 58 693 55 693 b 0 616 3 672 0 625 l 0 207 b 121 0 0 40 68 0 z\"\n    },\n    \"ornamentPrecompSlideTrillDAnglebert\": {\n      \"x_min\": 2,\n      \"x_max\": 1150,\n      \"y_min\": -367,\n      \"y_max\": 245,\n      \"ha\": 612,\n      \"o\": \"m 3 -144 b 4 -168 3 -153 3 -160 b 246 -482 24 -315 99 -422 b 458 -528 340 -521 410 -528 b 514 -526 485 -528 504 -526 b 552 -508 531 -526 552 -517 b 514 -497 552 -503 541 -498 l 503 -497 b 194 -390 432 -494 298 -488 b 69 -151 194 -390 69 -279 b 184 96 69 -60 128 27 b 328 183 202 118 258 183 b 477 96 413 183 454 118 b 559 10 510 62 552 19 b 588 0 566 3 576 0 b 613 7 598 0 609 3 b 723 112 622 14 681 73 b 789 161 733 122 776 161 b 811 144 796 161 802 156 b 936 10 816 135 923 24 b 965 0 942 3 953 0 b 991 7 975 0 985 3 b 1051 66 996 12 1022 37 b 1081 92 1063 73 1073 84 b 1136 143 1099 109 1117 127 b 1168 160 1151 154 1159 160 b 1191 144 1175 160 1181 156 b 1315 10 1197 135 1303 24 b 1344 0 1320 3 1332 0 b 1371 7 1355 0 1365 3 b 1636 295 1381 17 1617 274 b 1656 327 1644 305 1656 318 b 1619 353 1656 341 1630 353 b 1593 343 1610 353 1600 348 b 1460 190 1577 330 1476 204 b 1433 176 1449 180 1440 176 b 1410 189 1424 176 1416 183 b 1287 331 1397 202 1300 320 b 1250 353 1273 344 1261 353 b 1218 340 1240 353 1231 350 b 1185 304 1205 328 1197 315 l 1058 160 b 916 327 1007 220 923 317 b 871 353 903 343 890 351 b 840 340 860 353 852 350 b 806 304 827 330 816 315 b 685 167 765 259 724 213 l 680 160 l 615 235 b 419 344 582 275 523 344 b 3 -144 258 344 3 26 z\"\n    },\n    \"ornamentPrecompSlideTrillBach\": {\n      \"x_min\": 0,\n      \"x_max\": 1048,\n      \"y_min\": -367,\n      \"y_max\": 331,\n      \"ha\": 698,\n      \"o\": \"m 0 -144 b 1 -168 0 -153 0 -160 b 243 -482 22 -315 96 -422 b 455 -528 337 -521 408 -528 b 511 -526 482 -528 501 -526 b 549 -508 528 -526 549 -517 b 511 -497 549 -503 539 -498 l 500 -497 b 192 -390 429 -494 295 -488 b 66 -151 127 -336 66 -238 b 189 105 66 -58 127 35 b 232 143 203 118 216 131 b 264 161 246 154 256 161 b 285 144 271 161 276 156 b 410 10 291 135 397 24 b 439 0 416 3 428 0 b 465 7 449 0 459 3 l 531 72 b 554 92 540 78 547 86 b 611 143 573 109 590 127 b 642 161 625 154 635 161 b 664 144 649 161 655 156 b 789 10 670 135 776 24 b 818 0 795 3 806 0 b 844 7 828 0 838 3 b 904 66 850 12 876 37 b 935 92 916 73 924 84 b 979 134 949 107 963 121 l 979 -88 l 1037 -88 l 1037 151 l 1044 144 b 1168 10 1050 135 1156 24 b 1197 0 1174 3 1185 0 b 1224 7 1208 0 1218 3 b 1489 295 1234 17 1470 274 b 1509 327 1498 305 1509 318 b 1472 353 1509 341 1483 353 b 1446 343 1463 353 1453 348 b 1313 190 1430 330 1329 204 b 1286 176 1302 180 1293 176 b 1263 189 1277 176 1269 183 b 1140 331 1250 202 1153 320 b 1103 353 1126 344 1115 353 b 1071 340 1093 353 1084 350 b 1038 304 1058 328 1050 315 l 1038 477 l 979 477 l 979 238 l 912 160 b 769 327 858 220 775 317 b 724 353 756 343 743 351 b 693 340 713 353 706 350 b 660 304 680 330 670 315 b 539 167 618 259 577 213 b 533 161 536 166 534 163 b 390 327 480 220 396 317 b 346 353 377 343 364 351 l 340 353 b 308 340 330 353 321 350 b 275 304 295 330 285 315 b 117 122 220 243 168 186 b 0 -144 68 62 0 -48 z\"\n    },\n    \"ornamentPrecompTrillSuffixDandrieu\": {\n      \"x_min\": 0,\n      \"x_max\": 949,\n      \"y_min\": 0,\n      \"y_max\": 381,\n      \"ha\": 381,\n      \"o\": \"m 0 73 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 174 161 157 154 167 161 b 196 144 181 161 187 156 b 321 10 202 135 308 24 b 350 0 327 3 338 0 b 376 7 360 0 370 3 b 485 112 384 14 444 73 b 552 161 495 122 539 161 b 573 144 559 161 564 156 b 698 10 579 135 685 24 b 727 0 704 3 716 0 b 753 7 737 0 747 3 b 863 112 762 14 821 73 b 929 161 873 122 916 161 b 950 144 936 161 942 156 b 1076 10 956 135 1063 24 b 1104 0 1081 3 1093 0 b 1130 7 1115 0 1125 3 b 1236 108 1139 14 1195 69 b 1367 314 1297 160 1367 233 b 1250 521 1367 419 1318 482 b 1107 549 1211 537 1145 549 b 1083 546 1096 549 1087 549 b 1066 528 1071 540 1066 534 b 1079 520 1066 524 1070 520 b 1323 351 1187 517 1323 487 b 1201 171 1323 269 1260 219 b 1194 166 1201 171 1198 168 b 1056 327 1142 226 1063 317 b 1011 353 1043 343 1030 351 b 979 340 999 353 992 350 b 946 304 966 330 956 315 b 825 167 904 259 864 213 l 821 161 b 678 327 768 222 685 317 b 634 353 665 343 652 351 b 602 340 622 353 615 350 b 569 304 589 330 579 315 b 448 167 527 259 487 213 l 444 161 b 301 327 390 222 308 317 b 256 353 288 343 275 351 b 225 340 245 353 238 350 b 192 304 212 330 202 315 b 71 167 150 259 109 213 b 17 105 52 147 36 127 b 0 73 10 98 0 84 z\"\n    },\n    \"ornamentPrecompDoubleCadenceUpperPrefix\": {\n      \"x_min\": 0,\n      \"x_max\": 1278,\n      \"y_min\": 0,\n      \"y_max\": 247,\n      \"ha\": 247,\n      \"o\": \"m 1 285 b 308 0 42 190 157 0 b 530 120 415 1 482 63 b 559 144 539 128 549 137 b 590 163 573 156 583 163 b 612 145 598 163 603 157 b 739 10 618 137 724 24 b 768 0 744 3 756 0 b 793 7 778 0 788 3 b 903 114 802 14 861 75 l 939 144 b 971 163 953 156 963 163 b 992 145 978 163 984 157 b 1119 10 998 137 1106 24 b 1148 0 1125 3 1136 0 b 1174 7 1158 0 1168 3 b 1284 114 1182 14 1241 75 b 1316 144 1282 115 1312 141 b 1348 161 1331 156 1339 161 b 1371 145 1355 161 1361 157 b 1496 10 1377 137 1485 24 b 1525 0 1502 3 1513 0 b 1552 7 1536 0 1547 3 b 1819 298 1562 17 1800 276 b 1840 330 1829 308 1840 320 b 1832 344 1840 334 1837 340 b 1801 356 1820 351 1810 356 b 1776 346 1793 356 1783 351 b 1642 192 1760 333 1659 206 b 1614 177 1630 181 1621 177 b 1591 190 1606 177 1597 184 b 1469 334 1578 203 1482 323 b 1430 356 1453 347 1441 356 b 1398 343 1420 356 1411 353 b 1365 307 1385 331 1377 318 l 1240 164 b 1097 330 1187 226 1104 320 b 1053 356 1084 346 1071 354 b 1021 343 1041 356 1034 353 b 988 307 1008 333 998 318 b 865 168 946 262 904 216 l 861 163 b 717 330 808 223 724 320 b 672 356 704 346 691 354 b 641 343 661 356 654 353 b 608 307 628 333 618 318 b 485 168 566 262 524 216 l 455 134 b 284 46 409 88 351 46 b 16 285 148 46 32 265 b 3 295 9 292 4 295 b 0 291 1 295 0 292 b 1 285 0 288 1 285 z\"\n    },\n    \"ornamentPrecompDoubleCadenceUpperPrefixTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 1277,\n      \"y_min\": -62,\n      \"y_max\": 333,\n      \"ha\": 395,\n      \"o\": \"m 0 289 b 1 284 0 287 1 284 b 308 -1 42 189 157 -1 b 530 118 415 0 481 62 b 557 143 539 127 547 135 b 590 161 572 154 582 161 b 612 144 598 161 603 156 b 737 9 618 135 724 24 b 768 -1 743 1 755 -1 b 793 6 778 -1 788 1 b 903 112 802 13 861 73 l 937 143 b 971 161 953 154 963 161 b 992 144 978 161 984 156 b 1117 9 998 135 1104 24 b 1148 -1 1123 1 1136 -1 b 1174 6 1158 -1 1168 1 l 1230 60 l 1230 -89 l 1273 -89 l 1273 102 l 1283 112 b 1348 160 1295 125 1332 160 b 1371 144 1355 160 1361 156 b 1496 9 1377 135 1483 24 b 1525 -1 1502 1 1513 -1 b 1552 6 1536 -1 1547 1 b 1819 297 1562 16 1800 275 b 1839 328 1827 307 1839 320 b 1801 354 1839 343 1813 354 b 1776 344 1793 354 1783 350 b 1642 190 1760 331 1657 206 b 1614 176 1630 180 1621 176 b 1591 189 1606 176 1597 183 b 1467 333 1578 203 1480 321 b 1430 354 1453 346 1441 354 b 1398 341 1420 354 1411 351 b 1365 305 1385 330 1377 317 l 1273 202 l 1273 480 l 1230 480 l 1230 174 l 1097 328 b 1053 354 1084 344 1071 353 b 1021 341 1041 354 1034 351 b 988 305 1008 331 998 317 b 865 167 945 261 904 215 l 861 161 b 717 328 808 222 724 318 b 672 354 704 344 691 353 b 641 341 661 354 654 351 b 608 305 628 331 618 317 b 485 167 564 261 524 215 b 455 132 474 156 465 144 b 284 45 410 88 350 45 b 14 284 148 45 30 264 b 3 294 9 291 4 294 b 0 289 1 294 0 291 z\"\n    },\n    \"ornamentPrecompTrillLowerSuffix\": {\n      \"x_min\": 0,\n      \"x_max\": 859,\n      \"y_min\": -222,\n      \"y_max\": 246,\n      \"ha\": 468,\n      \"o\": \"m 0 73 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 176 161 157 154 168 161 b 197 144 183 161 189 156 b 323 9 203 135 310 23 b 353 -1 328 1 340 -1 b 379 6 363 -1 373 1 b 488 112 387 13 446 73 l 523 143 b 556 161 539 154 549 161 b 577 144 563 161 569 156 b 703 9 583 135 690 23 b 733 -1 708 1 721 -1 b 759 6 743 -1 753 1 b 868 112 768 13 827 73 b 955 183 878 122 943 183 b 1081 107 965 183 1031 153 b 1156 -89 1128 63 1156 6 l 1156 -102 b 948 -297 1156 -204 1048 -297 b 806 -271 904 -297 850 -282 l 792 -266 b 801 -288 792 -268 795 -282 b 948 -320 809 -297 880 -320 b 1237 -50 1092 -320 1237 -199 b 1164 217 1237 75 1218 122 b 1031 351 1138 259 1063 351 b 1011 337 1020 351 1024 347 b 828 167 952 291 886 217 l 824 164 b 683 328 772 225 690 318 b 638 354 670 344 657 353 b 606 341 626 354 619 351 b 573 305 593 331 583 317 b 451 167 530 261 490 215 l 446 161 b 302 328 393 222 310 318 b 258 354 289 344 276 353 b 226 341 246 354 239 351 b 193 305 213 331 203 317 b 71 167 150 261 109 215 b 17 105 52 147 36 127 b 0 73 10 98 0 84 z\"\n    },\n    \"stringsDownBow\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": 0,\n      \"y_max\": 318,\n      \"ha\": 318,\n      \"o\": \"m 17 0 l 37 0 b 55 17 46 0 55 7 l 55 253 b 225 278 55 269 140 278 b 395 253 310 278 395 269 l 395 17 b 413 0 395 7 403 0 l 432 0 b 449 17 441 0 449 7 l 449 420 b 412 458 449 441 432 458 l 37 458 b 0 420 17 458 0 441 l 0 17 b 17 0 0 7 9 0 z\"\n    },\n    \"stringsUpBow\": {\n      \"x_min\": 1,\n      \"x_max\": 249,\n      \"y_min\": 1,\n      \"y_max\": 495,\n      \"ha\": 494,\n      \"o\": \"m 1 690 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 z\"\n    },\n    \"stringsHarmonic\": {\n      \"x_min\": 0,\n      \"x_max\": 200,\n      \"y_min\": 0,\n      \"y_max\": 200,\n      \"ha\": 200,\n      \"o\": \"m 144 0 b 288 144 223 0 288 65 b 144 288 288 225 223 288 b 0 144 65 288 0 225 b 144 0 0 65 65 0 z m 39 144 b 144 249 39 203 86 249 b 249 144 203 249 249 203 b 144 39 249 86 203 39 b 39 144 86 39 39 86 z\"\n    },\n    \"pluckedSnapPizzicatoAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 200,\n      \"y_min\": 0,\n      \"y_max\": 300,\n      \"ha\": 300,\n      \"o\": \"m 144 0 b 288 144 223 0 288 63 b 167 285 288 215 235 275 l 167 432 l 121 432 l 121 285 b 0 144 52 275 0 215 b 144 0 0 63 65 0 z m 39 144 b 121 246 39 193 73 236 l 121 144 l 167 144 l 167 246 b 249 144 213 236 249 193 b 144 39 249 85 202 39 b 39 144 85 39 39 85 z\"\n    },\n    \"pluckedSnapPizzicatoBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 200,\n      \"y_min\": 0,\n      \"y_max\": 300,\n      \"ha\": 300,\n      \"o\": \"m 121 145 l 121 0 l 167 0 l 167 145 b 288 288 235 157 288 216 b 144 432 288 369 223 432 b 0 288 65 432 0 369 b 121 145 0 216 52 157 z m 39 288 b 144 393 39 347 86 393 b 249 288 203 393 249 347 b 167 186 249 238 215 196 l 167 288 l 121 288 l 121 186 b 39 288 75 196 39 238 z\"\n    },\n    \"pluckedLeftHandPizzicato\": {\n      \"x_min\": 0,\n      \"x_max\": 272,\n      \"y_min\": 0,\n      \"y_max\": 272,\n      \"ha\": 272,\n      \"o\": \"m 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 l 392 219 l 219 219 l 219 392 l 173 392 l 173 219 z\"\n    },\n    \"keyboardPedalPed\": {\n      \"x_min\": 0,\n      \"x_max\": 1019,\n      \"y_min\": -8,\n      \"y_max\": 555,\n      \"ha\": 563,\n      \"o\": \"m 122 376 b 240 540 189 376 240 452 b 225 586 240 579 233 586 b 204 549 213 586 212 573 b 138 480 199 527 181 480 b 85 549 96 480 85 517 l 85 554 b 353 762 89 690 230 762 b 373 752 364 762 373 760 b 351 708 373 740 360 723 b 274 546 330 675 274 585 b 353 416 274 508 333 444 b 412 304 372 390 412 351 b 382 228 412 275 403 256 b 334 190 363 202 361 200 b 147 29 271 167 147 88 b 196 -12 147 4 171 -12 b 343 108 239 -12 279 33 l 363 132 b 387 150 370 141 376 150 b 543 -4 445 150 467 -4 b 631 42 567 -4 586 0 l 668 78 b 685 89 674 84 680 89 b 696 75 688 89 690 86 b 809 -9 717 29 753 -9 b 946 66 854 -9 894 13 b 988 107 971 92 981 107 b 1002 89 994 107 996 99 b 1152 -4 1030 36 1077 -4 b 1329 248 1238 -4 1329 82 b 792 717 1329 556 1047 665 b 766 720 785 719 775 720 b 747 703 752 720 747 711 b 780 680 747 693 756 685 b 1223 222 1028 621 1223 504 b 1152 39 1223 122 1205 39 b 1073 229 1104 39 1073 132 b 1132 423 1073 314 1086 377 b 1142 442 1140 432 1142 436 b 1126 458 1142 451 1136 458 b 1093 446 1119 458 1109 455 b 975 216 1022 408 975 337 l 975 190 b 943 121 975 160 972 150 b 852 69 899 76 877 69 b 776 148 816 69 786 117 b 773 163 775 154 773 158 b 786 177 773 167 776 170 l 801 187 b 937 366 867 235 937 284 b 844 454 937 422 900 454 b 665 217 711 454 665 331 b 671 153 665 197 667 176 l 671 147 b 662 134 671 143 670 140 b 605 111 639 118 625 111 b 521 160 572 111 546 135 b 451 203 497 184 474 197 b 426 212 435 207 426 206 b 436 230 426 216 429 220 b 510 389 464 269 510 340 b 429 521 510 435 480 462 b 369 629 387 570 369 599 b 402 720 369 648 384 691 b 462 763 425 759 446 763 b 611 624 540 763 611 704 b 564 575 611 592 590 575 b 501 602 540 575 520 582 b 474 622 492 611 487 622 b 459 603 465 622 459 615 b 603 471 459 570 510 471 b 711 588 670 471 711 524 b 422 799 711 742 554 799 l 413 799 b 179 749 327 798 261 789 b 0 517 107 713 0 632 b 122 376 0 454 37 376 z m 1405 0 b 1467 62 1441 0 1467 26 b 1405 124 1467 98 1441 124 b 1344 62 1369 124 1344 98 b 1405 0 1344 26 1369 0 z m 756 282 b 815 403 756 346 772 403 b 848 343 838 403 848 383 b 780 226 848 295 824 261 b 765 217 773 220 768 217 b 759 228 762 217 759 220 b 756 282 757 245 756 262 z\"\n    },\n    \"keyboardPedalUp\": {\n      \"x_min\": 0,\n      \"x_max\": 450,\n      \"y_min\": 0,\n      \"y_max\": 450,\n      \"ha\": 450,\n      \"o\": \"m 66 252 b 132 281 94 252 115 264 b 183 308 153 301 161 308 l 190 308 b 236 271 216 308 236 300 b 216 239 236 261 229 252 l 210 233 b 158 219 197 220 184 219 b 73 147 114 219 73 196 b 147 73 73 107 107 73 b 219 158 196 73 219 114 b 233 210 219 184 220 197 l 239 216 b 271 236 252 229 261 236 b 308 190 300 236 308 216 l 308 183 b 281 132 308 161 301 153 b 252 66 264 115 252 94 b 324 0 252 23 285 0 b 396 66 363 0 396 23 b 367 132 396 94 384 115 b 340 183 347 153 340 161 l 340 190 b 377 236 340 216 348 236 b 409 216 387 236 396 229 l 415 210 b 429 158 428 197 429 184 b 501 73 429 114 452 73 b 575 147 541 73 575 107 b 490 219 575 196 534 219 b 438 233 464 219 451 220 l 432 239 b 412 271 419 252 412 261 b 458 308 412 300 432 308 l 465 308 b 516 281 487 308 495 301 b 582 252 533 264 554 252 b 648 324 625 252 648 285 b 582 396 648 363 625 396 b 516 367 554 396 533 384 b 465 340 495 347 487 340 l 458 340 b 412 377 432 340 412 348 b 432 409 412 387 419 396 l 438 415 b 490 429 451 428 464 429 b 575 501 534 429 575 452 b 501 575 575 541 541 575 b 429 490 452 575 429 534 b 415 438 429 464 428 451 l 409 432 b 377 412 396 419 387 412 b 340 458 348 412 340 432 l 340 465 b 367 516 340 487 347 495 b 396 582 384 533 396 554 b 324 648 396 625 363 648 b 252 582 285 648 252 625 b 281 516 252 554 264 533 b 308 465 301 495 308 487 l 308 458 b 271 412 308 432 300 412 b 239 432 261 412 252 419 l 233 438 b 219 490 220 451 219 464 b 147 575 219 534 196 575 b 73 501 107 575 73 541 b 158 429 73 452 114 429 b 210 415 184 429 197 428 l 216 409 b 236 377 229 396 236 387 b 190 340 236 348 216 340 l 183 340 b 132 367 161 340 153 347 b 66 396 115 384 94 396 b 0 324 23 396 0 363 b 66 252 0 285 23 252 z m 271 324 b 324 377 271 357 291 377 b 377 324 357 377 377 357 b 324 271 377 291 357 271 b 271 324 291 271 271 291 z\"\n    },\n    \"pictChokeCymbal\": {\n      \"x_min\": 1,\n      \"x_max\": 152,\n      \"y_min\": 2,\n      \"y_max\": 251,\n      \"ha\": 249,\n      \"o\": \"m 1 271 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 19 32 29 26 26 b 27 14 26 17 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 b 1 271 42 361 1 321 z\"\n    },\n    \"wiggleArpeggiatoUp\": {\n      \"x_min\": -33,\n      \"x_max\": 292,\n      \"y_min\": 0,\n      \"y_max\": 119,\n      \"ha\": 119,\n      \"o\": \"m -29 42 b -10 46 -23 42 -16 43 b 56 63 12 56 29 63 b 248 0 121 63 135 0 b 419 127 361 0 410 104 b 420 132 420 130 420 131 b 412 140 420 137 416 140 b 386 130 403 140 392 134 b 334 107 367 117 353 107 b 318 108 330 107 324 107 b 240 138 289 112 265 128 b 130 171 209 153 168 171 b -39 68 16 171 -14 91 b -48 53 -45 62 -48 58 b -29 42 -48 46 -39 42 z\"\n    },\n    \"arrowheadBlackUp\": {\n      \"x_min\": 0,\n      \"x_max\": 228,\n      \"y_min\": 0,\n      \"y_max\": 299,\n      \"ha\": 299,\n      \"o\": \"m 0 20 b 19 1 0 4 7 1 b 166 50 43 16 160 50 b 308 1 171 50 289 13 b 312 0 310 1 311 0 b 328 20 321 0 328 12 b 166 431 328 30 220 274 b 0 20 111 274 0 30 z\"\n    },\n    \"arrowheadBlackDown\": {\n      \"x_min\": 0,\n      \"x_max\": 228,\n      \"y_min\": 0,\n      \"y_max\": 299,\n      \"ha\": 299,\n      \"o\": \"m 166 0 b 328 410 220 157 328 400 b 312 431 328 419 321 431 b 308 429 311 431 310 429 b 166 380 289 418 171 380 b 19 429 160 380 43 415 b 0 410 7 429 0 426 b 166 0 0 400 111 157 z\"\n    },\n    \"arpeggiatoUp\": {\n      \"x_min\": 1,\n      \"x_max\": 229,\n      \"y_min\": 7,\n      \"y_max\": 1511,\n      \"ha\": 1504,\n      \"o\": \"m 121 1848 b 92 1778 115 1822 101 1800 l 89 1773 b 59 1668 75 1741 59 1702 b 96 1555 59 1614 76 1580 b 99 1551 98 1554 99 1551 l 102 1547 b 124 1496 115 1531 124 1515 b 122 1482 124 1492 124 1488 b 92 1404 118 1453 102 1428 b 59 1293 78 1372 59 1332 b 105 1172 59 1234 81 1198 b 124 1123 115 1158 124 1145 b 122 1110 124 1119 122 1115 b 92 1032 118 1081 102 1057 b 59 922 78 1001 59 960 b 115 792 59 855 86 816 b 124 760 121 782 124 773 b 122 744 124 756 124 750 b 92 667 118 716 102 693 b 59 556 78 635 59 595 b 108 433 59 495 82 458 b 124 389 117 420 124 408 b 122 374 124 384 124 379 b 92 298 118 346 102 323 l 89 292 b 59 186 75 261 59 222 b 163 19 59 73 140 42 b 177 10 168 13 173 10 b 189 29 184 10 189 19 b 184 48 189 35 187 42 b 167 114 174 69 167 85 b 230 305 167 179 229 193 b 181 423 230 357 209 396 b 167 484 173 442 167 458 b 230 675 167 547 229 563 b 179 796 230 729 206 769 b 167 850 171 812 167 827 b 230 1040 167 913 229 929 b 183 1158 230 1092 209 1130 b 167 1220 173 1178 167 1194 b 230 1411 167 1284 229 1300 b 186 1526 230 1462 210 1499 b 167 1594 176 1529 167 1584 b 230 1786 167 1659 229 1673 b 219 1848 230 1809 226 1829 l 330 1848 l 164 2176 l 1 1848 z\"\n    },\n    \"arpeggiatoDown\": {\n      \"x_min\": 1,\n      \"x_max\": 229,\n      \"y_min\": -4,\n      \"y_max\": 1500,\n      \"ha\": 1504,\n      \"o\": \"m 1 323 l 164 -6 l 330 323 l 219 323 b 230 384 226 341 230 361 b 167 576 229 497 167 511 b 186 644 167 586 176 641 b 230 759 210 671 230 708 b 167 950 229 870 167 886 b 183 1012 167 976 173 992 b 230 1130 209 1040 230 1079 b 167 1320 229 1241 167 1257 b 179 1374 167 1344 171 1358 b 230 1495 206 1401 230 1441 b 167 1686 229 1607 167 1623 b 181 1747 167 1712 173 1728 b 230 1865 209 1774 230 1813 b 167 2056 229 1977 167 1992 b 184 2123 167 2085 174 2101 b 189 2141 187 2128 189 2136 b 177 2160 189 2151 184 2160 b 163 2151 173 2160 168 2157 b 59 1984 140 2128 59 2097 b 89 1878 59 1948 75 1909 l 92 1872 b 122 1796 102 1848 118 1824 b 124 1781 124 1791 124 1786 b 108 1737 124 1763 117 1750 b 59 1614 82 1712 59 1675 b 92 1503 59 1575 78 1535 b 122 1426 102 1477 118 1454 b 124 1410 124 1420 124 1414 b 115 1378 124 1397 121 1388 b 59 1248 86 1354 59 1315 b 92 1138 59 1210 78 1169 b 122 1060 102 1113 118 1089 b 124 1047 122 1056 124 1051 b 105 998 124 1025 115 1012 b 59 877 81 972 59 936 b 92 766 59 838 78 798 b 122 688 102 742 118 717 b 124 674 124 683 124 678 b 102 624 124 655 115 639 l 99 619 b 96 615 99 619 98 616 b 59 503 76 590 59 556 b 89 397 59 468 75 429 l 92 392 b 121 323 101 370 115 348 z\"\n    },\n    \"repeat1Bar\": {\n      \"x_min\": 0,\n      \"x_max\": 532,\n      \"y_min\": -250,\n      \"y_max\": 279,\n      \"ha\": 529,\n      \"o\": \"m 0 -350 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 l 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 z m 586 -161 b 675 -251 586 -210 626 -251 b 766 -161 726 -251 766 -210 b 675 -71 766 -111 726 -71 b 586 -161 626 -71 586 -111 z m 0 197 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 b 0 197 40 288 0 248 z\"\n    },\n    \"repeat2Bars\": {\n      \"x_min\": 0,\n      \"x_max\": 762,\n      \"y_min\": -250,\n      \"y_max\": 279,\n      \"ha\": 529,\n      \"o\": \"m 0 -350 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 l 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 z m 343 -360 l 485 -360 b 516 -340 498 -360 508 -348 l 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 b 343 -360 331 -356 336 -360 z m 917 -161 b 1007 -251 917 -210 958 -251 b 1097 -161 1057 -251 1097 -210 b 1007 -71 1097 -111 1057 -71 b 917 -161 958 -71 917 -111 z m 89 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 z\"\n    },\n    \"repeat4Bars\": {\n      \"x_min\": 0,\n      \"x_max\": 1232,\n      \"y_min\": -250,\n      \"y_max\": 279,\n      \"ha\": 529,\n      \"o\": \"m 331 -350 b 343 -360 331 -356 336 -360 l 485 -360 b 516 -340 498 -360 508 -348 l 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 z m 1008 -350 b 1020 -360 1008 -356 1012 -360 l 1162 -360 b 1192 -340 1175 -360 1185 -348 l 1767 380 b 1774 395 1771 386 1774 390 b 1765 402 1774 399 1771 402 l 1613 402 b 1587 380 1604 402 1597 393 l 1012 -340 b 1008 -350 1009 -343 1008 -347 z m 688 -360 l 831 -360 b 861 -340 844 -360 854 -348 l 1436 380 b 1443 395 1440 386 1443 390 b 1434 402 1443 399 1440 402 l 1282 402 b 1256 380 1273 402 1266 393 l 681 -340 b 677 -350 678 -343 677 -347 b 688 -360 677 -356 681 -360 z m 0 -350 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 l 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 z m 1683 -251 b 1774 -161 1734 -251 1774 -210 b 1683 -71 1774 -111 1734 -71 b 1594 -161 1634 -71 1594 -111 b 1683 -251 1594 -210 1634 -251 z m 0 197 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 b 0 197 40 288 0 248 z\"\n    },\n    \"repeatBarSlash\": {\n      \"x_min\": 0,\n      \"x_max\": 532,\n      \"y_min\": -250,\n      \"y_max\": 279,\n      \"ha\": 529,\n      \"o\": \"m 12 -360 l 154 -360 b 184 -340 167 -360 177 -348 l 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 z\"\n    },\n    \"csymDiminished\": {\n      \"x_min\": 0,\n      \"x_max\": 473,\n      \"y_min\": 0,\n      \"y_max\": 473,\n      \"ha\": 473,\n      \"o\": \"m 0 341 b 341 0 0 153 153 0 b 681 341 530 0 681 153 b 341 681 681 530 530 681 b 0 341 153 681 0 530 z m 63 341 b 341 618 63 494 189 618 b 618 341 495 618 618 495 b 341 63 618 189 494 63 b 63 341 187 63 63 187 z\"\n    },\n    \"csymHalfDiminished\": {\n      \"x_min\": -16,\n      \"x_max\": 488,\n      \"y_min\": -15,\n      \"y_max\": 489,\n      \"ha\": 504,\n      \"o\": \"m 22 -22 l 122 79 b 340 0 181 30 258 0 b 680 341 528 0 680 153 b 602 559 680 423 651 500 l 703 660 l 658 704 l 557 603 b 340 681 498 652 422 681 b -1 341 151 681 -1 530 b 78 124 -1 259 29 183 l -23 23 z m 557 514 b 616 341 596 465 616 405 b 340 63 616 189 492 63 b 167 124 276 63 216 85 z m 340 618 b 513 559 403 618 464 598 l 122 168 b 62 341 84 217 62 278 b 340 618 62 494 187 618 z\"\n    },\n    \"csymAugmented\": {\n      \"x_min\": 0,\n      \"x_max\": 395,\n      \"y_min\": 1,\n      \"y_max\": 396,\n      \"ha\": 395,\n      \"o\": \"m 0 318 l 0 255 l 253 255 l 253 1 l 317 1 l 317 255 l 569 255 l 569 318 l 317 318 l 317 570 l 253 570 l 253 318 z\"\n    },\n    \"csymMajorSeventh\": {\n      \"x_min\": 0,\n      \"x_max\": 558,\n      \"y_min\": 1,\n      \"y_max\": 477,\n      \"ha\": 476,\n      \"o\": \"m 402 562 l 693 65 l 111 65 z m 402 687 l 0 1 l 804 1 z\"\n    },\n    \"csymMinor\": {\n      \"x_min\": 0,\n      \"x_max\": 325,\n      \"y_min\": 216,\n      \"y_max\": 260,\n      \"ha\": 44,\n      \"o\": \"m 468 374 l 0 374 l 0 311 l 468 311 z\"\n    },\n    \"csymParensLeftTall\": {\n      \"x_min\": 1,\n      \"x_max\": 185,\n      \"y_min\": 0,\n      \"y_max\": 997,\n      \"ha\": 997,\n      \"o\": \"m 259 1 b 264 0 261 0 262 0 b 266 9 265 0 266 6 l 266 48 b 261 65 266 55 264 62 b 92 719 157 212 92 400 b 262 1371 92 1037 154 1228 b 266 1394 266 1378 266 1394 l 266 1424 b 264 1436 266 1431 266 1436 b 259 1434 262 1436 259 1434 b 1 719 84 1261 1 1011 b 259 1 1 429 79 177 z\"\n    },\n    \"csymParensRightTall\": {\n      \"x_min\": -20,\n      \"x_max\": 164,\n      \"y_min\": 0,\n      \"y_max\": 997,\n      \"ha\": 997,\n      \"o\": \"m -29 1424 l -29 1394 b -24 1371 -29 1394 -29 1378 b 145 719 84 1228 145 1037 b -23 65 145 400 81 212 b -29 48 -26 62 -29 55 l -29 9 b -26 0 -29 6 -27 0 b -22 1 -24 0 -23 0 b 236 719 158 177 236 429 b -22 1434 236 1011 154 1261 b -26 1436 -22 1434 -24 1436 b -29 1424 -29 1436 -29 1431 z\"\n    },\n    \"csymBracketLeftTall\": {\n      \"x_min\": 0,\n      \"x_max\": 155,\n      \"y_min\": 0,\n      \"y_max\": 1000,\n      \"ha\": 1000,\n      \"o\": \"m 0 1436 l 0 4 b 6 0 0 1 3 0 l 217 0 b 223 9 220 0 223 4 l 223 37 b 217 46 223 42 220 46 l 92 46 l 92 1394 l 217 1394 b 223 1403 220 1394 223 1398 l 223 1431 b 217 1440 223 1436 220 1440 l 6 1440 b 0 1436 3 1440 0 1439 z\"\n    },\n    \"csymBracketRightTall\": {\n      \"x_min\": 1,\n      \"x_max\": 156,\n      \"y_min\": 0,\n      \"y_max\": 1000,\n      \"ha\": 1000,\n      \"o\": \"m 1 9 b 7 0 1 4 4 0 l 219 0 b 225 4 222 0 225 1 l 225 1436 b 219 1440 225 1439 222 1440 l 7 1440 b 1 1431 4 1440 1 1436 l 1 1403 b 7 1394 1 1398 4 1394 l 132 1394 l 132 46 l 7 46 b 1 37 4 46 1 42 z\"\n    },\n    \"csymParensLeftVeryTall\": {\n      \"x_min\": 0,\n      \"x_max\": 122,\n      \"y_min\": 0,\n      \"y_max\": 993,\n      \"ha\": 993,\n      \"o\": \"m 170 3 b 171 0 170 1 170 0 b 176 6 173 0 176 4 l 176 32 b 171 49 176 39 174 46 b 60 716 104 194 60 399 b 173 1382 60 1032 101 1241 b 176 1405 176 1390 176 1405 l 176 1427 b 173 1430 176 1428 174 1430 b 0 716 40 1297 0 978 b 170 3 0 428 50 179 z\"\n    },\n    \"csymParensRightVeryTall\": {\n      \"x_min\": -15,\n      \"x_max\": 107,\n      \"y_min\": 0,\n      \"y_max\": 993,\n      \"ha\": 993,\n      \"o\": \"m -22 1427 l -22 1405 b -19 1382 -22 1405 -22 1390 b 94 716 53 1241 94 1032 b -17 49 94 399 50 194 b -22 32 -20 46 -22 39 l -22 6 b -17 0 -22 4 -19 0 b -16 3 -16 0 -16 1 b 154 716 104 179 154 428 b -19 1430 154 978 114 1297 b -22 1427 -20 1430 -22 1428 z\"\n    },\n    \"csymDiagonalArrangementSlash\": {\n      \"x_min\": 0,\n      \"x_max\": 999,\n      \"y_min\": 0,\n      \"y_max\": 1000,\n      \"ha\": 1000,\n      \"o\": \"m 1439 1380 l 1377 1440 l 0 60 l 62 0 z\"\n    },\n    \"brassScoop\": {\n      \"x_min\": 1,\n      \"x_max\": 320,\n      \"y_min\": -373,\n      \"y_max\": 13,\n      \"ha\": 386,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 318,\n      \"o\": \"m 1 -482 l 1 -505 b 26 -537 1 -526 3 -537 l 35 -537 b 461 -12 194 -518 461 -289 b 438 19 461 13 451 19 b 410 -9 425 19 413 9 b 35 -425 357 -366 92 -403 b 1 -482 13 -433 1 -438 z\"\n    },\n    \"brassDoitMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 489,\n      \"y_min\": -40,\n      \"y_max\": 346,\n      \"ha\": 386,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 490,\n      \"o\": \"m 0 -3 l 0 -26 b 24 -58 0 -46 1 -58 l 33 -58 b 704 468 255 -58 683 186 b 681 498 704 494 693 498 b 654 471 668 498 658 488 b 33 55 550 118 91 76 b 0 -3 12 46 0 42 z\"\n    },\n    \"brassFallLipShort\": {\n      \"x_min\": 1,\n      \"x_max\": 293,\n      \"y_min\": -345,\n      \"y_max\": 42,\n      \"ha\": 387,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 293,\n      \"o\": \"m 1 35 l 1 6 b 26 -50 3 -40 10 -43 b 32 -52 27 -50 30 -50 b 376 -469 85 -73 327 -111 b 400 -497 379 -487 387 -497 b 422 -467 412 -497 422 -491 b 32 60 422 -187 177 40 l 22 60 b 1 35 4 60 1 52 z\"\n    },\n    \"brassLiftMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 811,\n      \"y_min\": 0,\n      \"y_max\": 852,\n      \"ha\": 852,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 812,\n      \"o\": \"m 33 0 b 49 17 40 0 49 10 b 71 63 52 35 56 49 b 212 115 102 95 154 59 b 239 186 230 134 239 160 b 236 210 239 194 238 202 b 256 249 239 225 243 236 b 397 301 288 281 340 245 b 425 372 416 320 425 346 b 422 396 425 380 423 387 b 442 435 425 410 429 422 b 583 487 474 467 526 431 b 611 557 602 505 611 531 b 608 582 611 566 609 573 b 628 621 611 596 615 608 b 769 672 660 652 711 618 b 796 743 788 691 796 717 b 793 768 796 752 795 759 b 814 806 796 782 801 793 b 955 858 845 838 897 804 b 982 929 973 877 982 903 b 979 953 982 937 981 945 b 999 992 982 968 986 979 b 1140 1045 1031 1024 1083 989 b 1168 1116 1161 1066 1168 1090 b 1138 1220 1168 1162 1145 1207 b 1135 1225 1135 1223 1135 1224 b 1129 1227 1133 1227 1130 1227 b 1117 1207 1122 1227 1117 1212 l 1117 1201 b 1109 1164 1117 1187 1117 1172 b 1100 1156 1107 1161 1104 1158 b 959 1104 1058 1128 995 1140 b 929 1032 936 1081 929 1056 b 932 1007 929 1024 930 1015 b 923 976 932 995 930 985 l 914 971 b 773 919 873 942 809 955 b 743 847 750 896 743 870 b 746 821 743 838 744 829 b 737 791 746 809 744 799 l 729 783 b 588 733 687 756 624 769 b 557 661 564 710 557 684 b 560 635 557 652 559 644 b 552 605 560 624 559 612 l 543 598 b 402 547 501 570 438 583 b 372 475 379 524 372 498 b 374 449 372 467 373 458 b 366 419 374 438 373 426 l 357 412 b 216 361 315 384 252 397 b 186 289 193 338 186 312 b 189 264 186 281 187 272 b 180 233 189 252 187 240 b 171 226 177 232 174 229 b 30 176 130 199 66 212 b 0 104 7 153 0 128 b 33 0 0 88 14 0 z\"\n    },\n    \"brassFallRoughMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 811,\n      \"y_min\": 0,\n      \"y_max\": 852,\n      \"ha\": 852,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 812,\n      \"o\": \"m 0 1116 b 27 1045 0 1090 7 1066 b 168 992 85 989 137 1024 b 189 953 181 979 186 968 b 186 929 187 945 186 937 b 213 858 186 903 194 877 b 354 806 271 804 323 838 b 374 768 367 793 372 782 b 372 743 373 759 372 752 b 399 672 372 717 380 691 b 540 621 456 618 508 652 b 560 582 553 608 557 596 b 557 557 559 573 557 566 b 585 487 557 531 566 505 b 726 435 642 431 694 467 b 746 396 739 422 743 410 b 743 372 744 387 743 380 b 770 301 743 346 752 320 b 912 249 828 245 880 281 b 932 210 924 236 929 225 b 929 186 930 202 929 194 b 956 115 929 160 937 134 b 1097 63 1014 59 1066 95 b 1119 17 1112 49 1116 35 b 1135 0 1119 10 1128 0 b 1168 104 1153 0 1168 91 b 1138 176 1168 128 1161 153 b 996 226 1102 212 1038 199 b 988 233 994 229 991 232 b 979 264 981 240 979 252 b 982 289 981 272 982 281 b 952 361 982 312 975 338 b 811 412 916 397 852 384 l 802 419 b 793 449 795 426 793 438 b 796 475 795 458 796 467 b 766 547 796 498 789 524 b 625 598 730 583 667 570 l 616 605 b 608 635 609 612 608 624 b 611 661 609 644 611 652 b 580 733 611 684 603 710 b 439 783 544 769 481 756 l 431 791 b 422 821 423 799 422 809 b 425 847 423 829 425 838 b 395 919 425 870 418 896 b 253 971 359 955 295 942 l 245 976 b 236 1007 238 985 236 995 b 239 1032 238 1015 239 1024 b 209 1104 239 1056 232 1081 b 68 1156 173 1140 109 1128 b 59 1164 63 1158 60 1161 b 50 1201 50 1172 50 1187 l 50 1207 b 39 1227 50 1212 46 1227 b 33 1225 37 1227 35 1227 b 30 1220 33 1224 33 1223 b 0 1116 23 1207 0 1162 z\"\n    },\n    \"brassBend\": {\n      \"x_min\": 0,\n      \"x_max\": 392,\n      \"y_min\": 0,\n      \"y_max\": 282,\n      \"ha\": 282,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 393,\n      \"o\": \"m 13 72 b 282 0 108 23 196 0 b 552 72 369 0 456 23 b 564 92 560 75 564 84 l 564 383 b 541 406 564 395 554 406 b 518 383 528 406 518 395 l 518 107 b 282 46 435 65 357 46 b 46 107 207 46 130 65 l 46 383 b 23 406 46 395 36 406 b 0 383 10 406 0 395 l 0 92 b 13 72 0 84 4 75 z\"\n    },\n    \"brassMuteClosed\": {\n      \"x_min\": 0,\n      \"x_max\": 272,\n      \"y_min\": 0,\n      \"y_max\": 272,\n      \"ha\": 272,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 272,\n      \"o\": \"m 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 l 392 219 l 219 219 l 219 392 l 173 392 l 173 219 z\"\n    },\n    \"brassMuteOpen\": {\n      \"x_min\": 0,\n      \"x_max\": 304,\n      \"y_min\": 0,\n      \"y_max\": 304,\n      \"ha\": 304,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 305,\n      \"o\": \"m 0 219 b 219 0 0 98 98 0 b 438 219 340 0 438 98 b 219 438 438 340 340 438 b 0 219 98 438 0 340 z m 219 392 b 392 219 314 392 392 314 b 219 46 392 124 314 46 b 46 219 124 46 46 124 b 219 392 46 314 124 392 z\"\n    },\n    \"brassFlip\": {\n      \"x_min\": 0,\n      \"x_max\": 379,\n      \"y_min\": 0,\n      \"y_max\": 282,\n      \"ha\": 282,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 379,\n      \"o\": \"m 23 0 b 46 23 36 0 46 10 l 46 337 l 508 4 b 523 0 513 1 517 0 b 541 9 530 0 536 3 b 546 22 544 13 546 17 b 536 42 546 29 541 36 l 36 402 b 23 406 33 405 27 406 b 0 383 12 406 0 395 l 0 23 b 23 0 0 10 10 0 z\"\n    },\n    \"brassJazzTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 620,\n      \"y_min\": 0,\n      \"y_max\": 245,\n      \"ha\": 245,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 620,\n      \"o\": \"m 0 121 b 16 107 0 114 4 108 b 84 143 26 107 76 137 b 118 160 92 150 108 160 b 141 143 125 160 131 154 b 265 10 147 135 253 24 b 294 0 271 3 282 0 b 321 7 305 0 315 3 b 498 160 321 7 478 158 b 521 143 505 160 513 154 b 647 10 528 135 635 24 b 675 0 652 3 664 0 b 703 7 687 0 697 3 b 874 186 713 16 855 164 b 893 220 881 196 893 212 b 873 245 890 235 883 243 b 796 194 847 245 815 213 l 792 190 b 765 176 780 179 772 176 b 740 190 755 176 747 183 b 629 325 727 202 644 312 b 593 347 616 338 605 347 b 562 334 583 346 575 344 b 528 298 549 323 539 310 l 406 176 b 389 168 406 176 399 168 b 374 176 384 168 379 170 b 245 325 360 192 245 325 b 200 353 232 343 219 351 b 168 340 190 353 181 350 l 17 156 b 0 121 10 147 0 132 z\"\n    },\n    \"brassSmear\": {\n      \"x_min\": 1,\n      \"x_max\": 306,\n      \"y_min\": 0,\n      \"y_max\": 170,\n      \"ha\": 170,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 307,\n      \"o\": \"m 7 107 b 36 122 13 107 22 112 b 92 151 55 137 65 151 b 183 89 125 151 161 112 b 189 84 184 88 187 86 l 193 79 b 308 0 219 50 264 0 b 439 117 396 0 438 102 b 441 128 439 121 441 124 b 433 141 441 135 439 141 b 416 130 429 141 423 137 b 343 94 390 107 370 94 b 269 153 315 94 294 121 l 265 158 b 144 245 239 190 180 245 b 6 134 62 245 10 143 b 1 114 3 125 1 118 b 7 107 1 108 4 107 z\"\n    },\n    \"accSagittal5v7KleismaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -517 l 45 -517 l 45 -35 b 135 -112 68 -86 99 -112 b 225 68 194 -112 225 -53 l 180 68 b 144 -4 180 20 168 -4 b 122 0 138 -4 131 -3 b 23 248 86 14 52 96 l 0 248 z\"\n    },\n    \"accSagittal5v7KleismaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 517 l 45 517 l 45 35 b 135 112 68 86 99 112 b 225 -68 194 112 225 53 l 180 -68 b 144 4 180 -20 168 4 b 122 0 138 4 131 3 b 23 -248 86 -14 52 -96 l 0 -248 z\"\n    },\n    \"accSagittal5CommaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 225 -517 l 225 248 l 203 248 l 0 -112 l 0 -284 l 180 33 l 180 -517 z\"\n    },\n    \"accSagittal5CommaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 225 517 l 225 -248 l 203 -248 l 0 112 l 0 284 l 180 -33 l 180 517 z\"\n    },\n    \"accSagittal7CommaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 248 l 0 -517 l 45 -517 l 45 112 l 89 112 b 180 -68 150 112 180 53 l 180 -248 l 225 -248 l 225 68 b 135 248 225 187 194 248 z\"\n    },\n    \"accSagittal7CommaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -248 l 0 517 l 45 517 l 45 -112 l 89 -112 b 180 68 150 -112 180 -53 l 180 248 l 225 248 l 225 -68 b 135 -248 225 -187 194 -248 z\"\n    },\n    \"accSagittal25SmallDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -157 l 0 -259 l 315 -89 l 315 -517 l 360 -517 l 360 248 l 337 248 l 0 68 l 0 -33 l 315 135 l 315 10 z\"\n    },\n    \"accSagittal25SmallDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 157 l 0 259 l 315 89 l 315 517 l 360 517 l 360 -248 l 337 -248 l 0 -68 l 0 33 l 315 -135 l 315 -10 z\"\n    },\n    \"accSagittal35MediumDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -68 330 112 360 53 l 360 -248 l 405 -248 l 405 68 b 315 248 405 187 374 248 l 203 248 l 0 -112 z\"\n    },\n    \"accSagittal35MediumDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 284 l 180 -33 l 180 517 l 225 517 l 225 -112 l 271 -112 b 360 68 330 -112 360 -53 l 360 248 l 405 248 l 405 -68 b 315 -248 405 -187 374 -248 l 203 -248 l 0 112 z\"\n    },\n    \"accSagittal11MediumDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 225 53 l 225 -517 l 271 -517 l 271 53 l 495 -248 l 495 -89 l 248 248 l 0 -89 l 0 -248 z\"\n    },\n    \"accSagittal11MediumDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 225 -53 l 225 517 l 271 517 l 271 -53 l 495 248 l 495 89 l 248 -248 l 0 89 l 0 248 z\"\n    },\n    \"accSagittal11LargeDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 112 l 315 112 b 449 -68 405 112 449 53 l 449 -248 l 495 -248 l 495 68 b 360 248 495 187 449 248 l 135 248 b 0 68 45 248 0 187 z\"\n    },\n    \"accSagittal11LargeDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 l 0 248 l 45 248 l 45 68 b 180 -112 45 -53 89 -112 l 225 -112 l 225 517 l 271 517 l 271 -112 l 315 -112 b 449 68 405 -112 449 -53 l 449 248 l 495 248 l 495 -68 b 360 -248 495 -187 449 -248 l 135 -248 b 0 -68 45 -248 0 -187 z\"\n    },\n    \"accSagittal35LargeDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 58 l 540 -274 l 540 -112 l 248 248 l 135 248 b 0 68 45 248 0 187 z\"\n    },\n    \"accSagittal35LargeDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 248 l 45 248 l 45 68 b 180 -112 45 -53 89 -112 l 225 -112 l 225 517 l 271 517 l 271 -58 l 540 274 l 540 112 l 248 -248 l 135 -248 b 0 -68 45 -248 0 -187 z\"\n    },\n    \"accSagittalSharp25SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 68 b 112 -112 0 -53 36 -112 l 135 -112 l 135 -517 l 180 -517 l 180 -89 b 248 26 206 -65 229 -27 b 315 -89 264 -27 287 -65 l 315 -517 l 360 -517 l 360 -112 l 383 -112 b 495 68 458 -112 495 -53 l 449 68 b 399 -4 449 20 433 -4 b 248 248 297 -4 261 171 b 122 0 216 96 176 14 b 94 -4 112 -3 102 -4 b 45 68 60 -4 45 20 z\"\n    },\n    \"accSagittalFlat25SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 b 112 112 0 53 36 112 l 135 112 l 135 517 l 180 517 l 180 89 b 248 -26 206 65 229 27 b 315 89 264 27 287 65 l 315 517 l 360 517 l 360 112 l 383 112 b 495 -68 458 112 495 53 l 449 -68 b 399 4 449 -20 433 4 b 248 -248 297 4 261 -171 b 122 0 216 -96 176 -14 b 94 4 112 3 102 4 b 45 -68 60 4 45 -20 z\"\n    },\n    \"accSagittalSharp7CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -517 l 45 -517 l 45 112 l 89 112 b 180 104 124 112 154 109 l 180 -517 l 225 -517 l 225 89 b 315 -68 285 60 315 9 l 315 -248 l 360 -248 l 360 68 b 135 248 360 187 285 248 l 0 248 z\"\n    },\n    \"accSagittalFlat7CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 517 l 45 517 l 45 -112 l 89 -112 b 180 -104 124 -112 154 -109 l 180 517 l 225 517 l 225 -89 b 315 68 285 -60 315 -9 l 315 248 l 360 248 l 360 -68 b 135 -248 360 -187 285 -248 l 0 -248 z\"\n    },\n    \"accSagittalSharp5CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -517 l 45 71 l 180 -56 l 180 -517 l 225 -517 l 225 -98 l 405 -268 l 405 -112 l 23 248 l 0 248 l 0 -517 z\"\n    },\n    \"accSagittalFlat5CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 517 l 45 -71 l 180 56 l 180 517 l 225 517 l 225 98 l 405 268 l 405 112 l 23 -248 l 0 -248 l 0 517 z\"\n    },\n    \"accSagittalSharp5v7kDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -112 l 0 -276 l 135 -82 l 135 -517 l 180 -517 l 180 -17 l 271 112 l 315 112 l 315 -517 l 360 -517 l 360 107 b 449 -68 420 89 449 30 l 449 -248 l 495 -248 l 495 68 b 360 248 495 189 449 248 l 248 248 z\"\n    },\n    \"accSagittalFlat5v7kUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 112 l 0 276 l 135 82 l 135 517 l 180 517 l 180 17 l 271 -112 l 315 -112 l 315 517 l 360 517 l 360 -107 b 449 68 420 -89 449 -30 l 449 248 l 495 248 l 495 -68 b 360 -248 495 -189 449 -248 l 248 -248 z\"\n    },\n    \"accSagittalSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 180 -53 l 180 -517 l 225 -517 l 225 0 l 292 85 l 360 0 l 360 -517 l 405 -517 l 405 -53 l 585 -274 l 585 -112 l 292 248 l 0 -112 l 0 -274 z\"\n    },\n    \"accSagittalFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 180 53 l 180 517 l 225 517 l 225 0 l 292 -85 l 360 0 l 360 517 l 405 517 l 405 53 l 585 274 l 585 112 l 292 -248 l 0 112 l 0 274 z\"\n    },\n    \"accSagittalSharp5v7kUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -361,\n      \"y_max\": 172,\n      \"ha\": 533,\n      \"o\": \"m 45 -517 l 45 -10 b 135 -92 68 -48 98 -75 l 135 -520 l 180 -520 l 180 -108 b 248 -115 203 -112 225 -115 b 271 -112 256 -115 264 -115 l 271 -517 l 315 -517 l 315 -107 b 449 68 405 -89 449 -30 l 405 68 b 297 -4 405 19 369 -4 b 23 248 131 -4 56 85 l 0 248 l 0 -517 z\"\n    },\n    \"accSagittalFlat5v7kDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 361,\n      \"ha\": 533,\n      \"o\": \"m 45 517 l 45 10 b 135 92 68 48 98 75 l 135 520 l 180 520 l 180 108 b 248 115 203 112 225 115 b 271 112 256 115 264 115 l 271 517 l 315 517 l 315 107 b 449 -68 405 89 449 30 l 405 -68 b 297 4 405 -19 369 4 b 23 -248 131 4 56 -85 l 0 -248 l 0 517 z\"\n    },\n    \"accSagittalSharp5CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -266 l 135 -153 l 135 -517 l 180 -517 l 180 -115 l 271 -39 l 271 -517 l 315 -517 l 315 0 l 405 75 l 405 -517 l 449 -517 l 449 248 l 428 248 l 0 -112 z\"\n    },\n    \"accSagittalFlat5CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 266 l 135 153 l 135 517 l 180 517 l 180 115 l 271 39 l 271 517 l 315 517 l 315 0 l 405 -75 l 405 517 l 449 517 l 449 -248 l 428 -248 l 0 112 z\"\n    },\n    \"accSagittalSharp7CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -517 l 45 -517 l 45 112 l 135 112 l 135 -517 l 180 -517 l 180 108 b 271 89 213 105 243 99 l 271 -517 l 315 -517 l 315 73 b 405 -68 374 45 405 -3 l 405 -248 l 449 -248 l 449 68 b 135 248 449 187 346 248 l 0 248 z\"\n    },\n    \"accSagittalFlat7CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 517 l 45 517 l 45 -112 l 135 -112 l 135 517 l 180 517 l 180 -108 b 271 -89 213 -105 243 -99 l 271 517 l 315 517 l 315 -73 b 405 68 374 -45 405 3 l 405 248 l 449 248 l 449 -68 b 135 -248 449 -187 346 -248 l 0 -248 z\"\n    },\n    \"accSagittalSharp25SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -30 l 495 143 l 495 14 l 0 -157 l 0 -255 l 225 -177 l 225 -517 l 271 -517 l 271 -161 l 360 -130 l 360 -517 l 405 -517 l 405 -115 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 517 248 l 0 68 z\"\n    },\n    \"accSagittalFlat25SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 30 l 495 -143 l 495 -14 l 0 157 l 0 255 l 225 177 l 225 517 l 271 517 l 271 161 l 360 130 l 360 517 l 405 517 l 405 115 l 495 84 l 495 517 l 540 517 l 540 -248 l 517 -248 l 0 -68 z\"\n    },\n    \"accSagittalSharp35MUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -112 l 0 -274 l 135 -108 l 135 -517 l 180 -517 l 180 -53 l 271 58 l 271 -517 l 315 -517 l 315 112 l 360 112 b 405 109 376 112 390 112 l 405 -517 l 449 -517 l 449 96 b 540 -68 510 72 540 17 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 z\"\n    },\n    \"accSagittalFlat35MDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 112 l 0 274 l 135 108 l 135 517 l 180 517 l 180 53 l 271 -58 l 271 517 l 315 517 l 315 -112 l 360 -112 b 405 -109 376 -112 390 -112 l 405 517 l 449 517 l 449 -96 b 540 68 510 -72 540 -17 l 540 248 l 585 248 l 585 -68 b 405 -248 585 -187 526 -248 l 292 -248 z\"\n    },\n    \"accSagittalSharp11MUp\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -112 l 0 -271 l 180 -79 l 180 -517 l 225 -517 l 225 -30 l 315 65 l 315 -517 l 360 -517 l 360 65 l 449 -30 l 449 -517 l 495 -517 l 495 -79 l 675 -271 l 675 -112 l 337 248 z\"\n    },\n    \"accSagittalFlat11MDown\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 112 l 0 271 l 180 79 l 180 517 l 225 517 l 225 30 l 315 -65 l 315 517 l 360 517 l 360 -65 l 449 30 l 449 517 l 495 517 l 495 79 l 675 271 l 675 112 l 337 -248 z\"\n    },\n    \"accSagittalSharp11LUp\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 271 112 l 315 112 l 315 -517 l 360 -517 l 360 112 l 405 112 l 449 112 l 449 -517 l 495 -517 l 495 104 b 631 -68 585 82 631 26 l 631 -248 l 675 -248 l 675 68 b 449 248 675 187 600 248 l 225 248 b 0 68 75 248 0 187 z\"\n    },\n    \"accSagittalFlat11LDown\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 l 0 248 l 45 248 l 45 68 b 180 -104 45 -26 89 -82 l 180 517 l 225 517 l 225 -112 l 271 -112 l 315 -112 l 315 517 l 360 517 l 360 -112 l 405 -112 l 449 -112 l 449 517 l 495 517 l 495 -104 b 631 68 585 -82 631 -26 l 631 248 l 675 248 l 675 -68 b 449 -248 675 -187 600 -248 l 225 -248 b 0 -68 75 -248 0 -187 z\"\n    },\n    \"accSagittalSharp35LUp\": {\n      \"x_min\": 0,\n      \"x_max\": 500,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 271 112 l 315 112 l 315 -517 l 360 -517 l 360 71 l 452 -17 l 452 -517 l 495 -517 l 495 -56 l 720 -268 l 720 -112 l 337 248 l 225 248 b 0 68 75 248 0 187 z\"\n    },\n    \"accSagittalFlat35LDown\": {\n      \"x_min\": 0,\n      \"x_max\": 500,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 248 l 45 248 l 45 68 b 180 -104 45 -26 89 -82 l 180 517 l 225 517 l 225 -112 l 271 -112 l 315 -112 l 315 517 l 360 517 l 360 -71 l 452 17 l 452 517 l 495 517 l 495 56 l 720 268 l 720 112 l 337 -248 l 225 -248 b 0 -68 75 -248 0 -187 z\"\n    },\n    \"accSagittalDoubleSharp25SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 68 b 135 -112 0 -53 45 -112 b 243 -62 180 -112 215 -95 l 89 -503 l 143 -517 l 292 -82 l 445 -517 l 495 -503 l 343 -62 b 449 -112 372 -95 408 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 315 148 b 112 -4 274 148 236 -4 b 45 68 68 -4 45 20 z\"\n    },\n    \"accSagittalDoubleFlat25SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 b 135 112 0 53 45 112 b 243 62 180 112 215 95 l 89 503 l 143 517 l 292 82 l 445 517 l 495 503 l 343 62 b 449 112 372 95 408 112 b 585 -68 540 112 585 53 l 540 -68 b 475 4 540 -20 517 4 b 292 -248 350 4 315 -148 b 112 4 274 -148 236 4 b 45 -68 68 4 45 -20 z\"\n    },\n    \"accSagittalDoubleSharp7CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 213 112 l 203 82 l 192 112 z m 0 -503 l 52 -517 l 203 -82 l 354 -517 l 405 -503 l 230 0 l 271 108 b 495 -68 420 92 495 35 l 495 -248 l 540 -248 l 540 68 b 225 248 540 187 435 248 l 89 248 l 89 112 l 135 112 l 174 0 z\"\n    },\n    \"accSagittalDoubleFlat7CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 503 l 52 517 l 203 82 l 354 517 l 405 503 l 230 0 l 271 -108 b 495 68 420 -92 495 -35 l 495 248 l 540 248 l 540 -68 b 225 -248 540 -187 435 -248 l 89 -248 l 89 -112 l 135 -112 l 174 0 z m 213 -112 l 203 -82 l 192 -112 z\"\n    },\n    \"accSagittalDoubleSharp5CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 405 -503 l 230 0 l 232 4 l 585 -264 l 585 -112 l 112 248 l 89 248 l 89 112 l 151 68 l 174 0 l 0 -503 l 52 -517 l 203 -82 l 354 -517 z\"\n    },\n    \"accSagittalDoubleFlat5CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 405 503 l 230 0 l 232 -4 l 585 264 l 585 112 l 112 -248 l 89 -248 l 89 -112 l 151 -68 l 174 0 l 0 503 l 52 517 l 203 82 l 354 517 z\"\n    },\n    \"accSagittalDoubleSharp5v7kDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -274 l 252 35 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 360 112 b 540 -68 480 112 540 53 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 l 0 -112 z\"\n    },\n    \"accSagittalDoubleFlat5v7kUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 274 l 252 -35 l 265 0 l 89 503 l 141 517 l 292 82 l 444 517 l 495 503 l 321 0 l 360 -112 b 540 68 480 -112 540 -53 l 540 248 l 585 248 l 585 -68 b 405 -248 585 -187 526 -248 l 292 -248 l 0 112 z\"\n    },\n    \"accSagittalDoubleSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 540 -503 l 366 0 l 380 45 l 675 -271 l 675 -112 l 337 248 l 0 -112 l 0 -271 l 295 45 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 z\"\n    },\n    \"accSagittalDoubleFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 540 503 l 366 0 l 380 -45 l 675 271 l 675 112 l 337 -248 l 0 112 l 0 271 l 295 -45 l 310 0 l 135 503 l 186 517 l 337 82 l 488 517 z\"\n    },\n    \"accSagittal7v11KleismaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 219,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 68 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 -45 b 248 -112 200 -89 225 -112 b 315 68 292 -112 315 -53 l 271 68 b 248 -4 271 20 264 -4 b 236 0 245 -4 240 -3 b 157 248 213 14 187 96 b 78 0 127 96 101 14 b 65 -4 73 -3 68 -4 b 45 68 50 -4 45 20 l 0 68 b 68 -112 0 -53 23 -112 z\"\n    },\n    \"accSagittal7v11KleismaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 219,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 68 112 b 135 45 89 112 112 89 l 135 517 l 180 517 l 180 45 b 248 112 200 89 225 112 b 315 -68 292 112 315 53 l 271 -68 b 248 4 271 -20 264 4 b 236 0 245 4 240 3 b 157 -248 213 -14 187 -96 b 78 0 127 -96 101 -14 b 65 4 73 3 68 4 b 45 -68 50 4 45 -20 l 0 -68 b 68 112 0 53 23 112 z\"\n    },\n    \"accSagittal17CommaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 -40 b 315 -118 248 -92 279 -118 b 405 62 374 -118 405 -59 l 360 62 b 324 -10 360 14 348 -10 b 302 -6 318 -10 311 -9 b 206 217 268 9 235 84 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z\"\n    },\n    \"accSagittal17CommaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 89 23 45 82 60 23 l 157 23 b 180 4 164 23 173 17 l 180 517 l 225 517 l 225 40 b 315 118 248 92 279 118 b 405 -62 374 118 405 59 l 360 -62 b 324 10 360 -14 348 10 b 302 6 318 10 311 9 b 206 -217 268 -9 235 -84 l 203 -248 b 135 -68 177 -127 154 -68 l 68 -68 b 0 203 23 -68 0 23 z\"\n    },\n    \"accSagittal55CommaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 219,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 248 l 0 -517 l 45 -517 l 45 58 l 315 -274 l 315 -112 l 23 248 z\"\n    },\n    \"accSagittal55CommaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 219,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -248 l 0 517 l 45 517 l 45 -58 l 315 274 l 315 112 l 23 -248 z\"\n    },\n    \"accSagittal7v11CommaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 188,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 248 l 135 248 b 0 68 45 248 0 187 z\"\n    },\n    \"accSagittal7v11CommaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 188,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 248 l 45 248 l 45 68 b 180 -112 45 -53 89 -112 l 225 -112 l 225 517 l 271 517 l 271 -248 l 135 -248 b 0 -68 45 -248 0 -187 z\"\n    },\n    \"accSagittal5v11SmallDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 73 l 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 -40 b 360 -118 295 -92 325 -118 b 449 62 420 -118 449 -59 l 405 62 b 369 -10 405 14 393 -10 b 348 -6 363 -10 356 -9 b 251 217 312 9 279 84 l 248 248 l 135 248 b 0 73 45 248 0 189 z\"\n    },\n    \"accSagittal5v11SmallDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -73 l 0 248 l 45 248 l 45 68 b 180 -112 45 -53 89 -112 l 225 -112 l 225 517 l 271 517 l 271 40 b 360 118 295 92 325 118 b 449 -62 420 118 449 59 l 405 -62 b 369 10 405 -14 393 10 b 348 6 363 10 356 9 b 251 -217 312 -9 279 -84 l 248 -248 l 135 -248 b 0 -73 45 -248 0 -189 z\"\n    },\n    \"accSagittalSharp5v11SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 242 37 203 -23 225 -3 b 315 -89 262 -23 285 -63 l 315 -517 l 360 -517 l 360 -112 l 383 -112 b 495 68 458 -112 495 -53 l 449 68 b 399 -4 449 20 433 -4 b 248 248 297 -4 261 171 b 157 68 222 127 192 68 l 89 68 b 0 -203 30 68 0 -23 z\"\n    },\n    \"accSagittalFlat5v11SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 112 23 45 84 68 23 l 135 23 l 135 517 l 180 517 l 180 23 b 242 -37 203 23 225 3 b 315 89 262 23 285 63 l 315 517 l 360 517 l 360 112 l 383 112 b 495 -68 458 112 495 53 l 449 -68 b 399 4 449 -20 433 4 b 248 -248 297 4 261 -171 b 157 -68 222 -127 192 -68 l 89 -68 b 0 203 30 -68 0 23 z\"\n    },\n    \"accSagittalSharp7v11CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 89 -112 l 89 -517 l 135 -517 l 135 -95 b 206 37 163 -73 187 -30 b 271 -23 225 -3 248 -23 l 271 -517 l 315 -517 l 315 -23 l 383 -23 b 449 -203 428 -23 449 -84 l 495 -203 b 405 68 495 -23 465 68 l 292 68 b 203 248 258 68 228 127 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 20 l 0 68 b 89 -112 0 -52 30 -112 z\"\n    },\n    \"accSagittalFlat7v11CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 89 112 l 89 517 l 135 517 l 135 95 b 206 -37 163 73 187 30 b 271 23 225 3 248 23 l 271 517 l 315 517 l 315 23 l 383 23 b 449 203 428 23 449 84 l 495 203 b 405 -68 495 23 465 -68 l 292 -68 b 203 -248 258 -68 228 -127 b 101 0 173 -98 138 -16 b 81 3 94 0 86 3 b 45 -68 56 3 45 -20 l 0 -68 b 89 112 0 52 30 112 z\"\n    },\n    \"accSagittalSharp55CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -271 l 135 -125 l 135 -517 l 180 -517 l 180 -78 l 315 65 l 315 -517 l 360 -517 l 360 248 l 337 248 l 0 -112 z\"\n    },\n    \"accSagittalFlat55CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 271 l 135 125 l 135 517 l 180 517 l 180 78 l 315 -65 l 315 517 l 360 517 l 360 -248 l 337 -248 l 0 112 z\"\n    },\n    \"accSagittalSharp17CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -248 l 45 -68 b 180 109 45 36 89 95 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -89 292 13 321 -55 l 360 -517 l 405 -517 l 405 -112 l 428 -112 b 540 68 504 -112 540 -53 l 495 68 b 445 -4 495 20 480 -4 b 292 248 343 -4 307 171 l 180 248 b 0 68 60 248 0 187 l 0 -248 z\"\n    },\n    \"accSagittalFlat17CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 248 l 45 68 b 180 -109 45 -36 89 -95 l 180 517 l 225 517 l 225 -112 l 271 -112 b 360 89 292 -13 321 55 l 360 517 l 405 517 l 405 112 l 428 112 b 540 -68 504 112 540 53 l 495 -68 b 445 4 495 -20 480 4 b 292 -248 343 4 307 -171 l 180 -248 b 0 -68 60 -248 0 -187 l 0 248 z\"\n    },\n    \"accSagittalSharp7v11kDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -32 l 405 138 l 405 13 l 0 -157 l 0 -256 l 225 -161 l 225 -517 l 271 -517 l 271 -144 l 405 -86 l 405 -517 l 449 -517 l 449 248 l 428 248 l 0 68 z\"\n    },\n    \"accSagittalFlat7v11kUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 32 l 405 -138 l 405 -13 l 0 157 l 0 256 l 225 161 l 225 517 l 271 517 l 271 144 l 405 86 l 405 517 l 449 517 l 449 -248 l 428 -248 l 0 -68 z\"\n    },\n    \"accSagittalSharp7v11kUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 135 -112 l 135 -517 l 180 -517 l 180 -105 b 271 -23 217 -94 248 -65 l 271 -517 l 315 -517 l 315 -23 b 405 -105 337 -65 369 -94 l 405 -517 l 449 -517 l 449 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 315 148 b 112 -4 274 148 236 -4 b 45 68 68 -4 45 20 l 0 68 b 135 -112 0 -53 45 -112 z\"\n    },\n    \"accSagittalFlat7v11kDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 135 112 l 135 517 l 180 517 l 180 105 b 271 23 217 94 248 65 l 271 517 l 315 517 l 315 23 b 405 105 337 65 369 94 l 405 517 l 449 517 l 449 112 b 585 -68 540 112 585 53 l 540 -68 b 475 4 540 -20 517 4 b 292 -248 350 4 315 -148 b 112 4 274 -148 236 4 b 45 -68 68 4 45 -20 l 0 -68 b 135 112 0 53 45 112 z\"\n    },\n    \"accSagittalSharp17CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 -23 b 405 -105 337 -65 369 -94 l 405 -517 l 449 -517 l 449 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 312 150 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z\"\n    },\n    \"accSagittalFlat17CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 135 23 45 84 75 23 l 135 517 l 180 517 l 180 23 l 203 23 b 271 -14 229 23 251 10 l 271 517 l 315 517 l 315 23 b 405 105 337 65 369 94 l 405 517 l 449 517 l 449 112 b 585 -68 540 112 585 53 l 540 -68 b 475 4 540 -20 517 4 b 292 -248 350 4 312 -150 b 180 -68 268 -127 230 -68 l 112 -68 b 0 203 37 -68 0 23 z\"\n    },\n    \"accSagittalSharp55CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -517 l 45 78 l 135 10 l 135 -517 l 180 -517 l 180 -23 l 271 -92 l 271 -517 l 315 -517 l 315 -127 l 495 -264 l 495 -112 l 23 248 l 0 248 l 0 -517 z\"\n    },\n    \"accSagittalFlat55CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 517 l 45 -78 l 135 -10 l 135 517 l 180 517 l 180 23 l 271 92 l 271 517 l 315 517 l 315 127 l 495 264 l 495 112 l 23 -248 l 0 -248 l 0 517 z\"\n    },\n    \"accSagittalSharp7v11CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 86 45 6 89 58 l 180 -517 l 225 -517 l 225 98 b 315 109 252 104 282 108 l 315 -517 l 360 -517 l 360 112 l 405 112 l 449 112 l 449 -517 l 495 -517 l 495 248 l 360 248 b 0 68 121 248 0 189 z\"\n    },\n    \"accSagittalFlat7v11CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 l 0 248 l 45 248 l 45 68 b 180 -86 45 -6 89 -58 l 180 517 l 225 517 l 225 -98 b 315 -109 252 -104 282 -108 l 315 517 l 360 517 l 360 -112 l 405 -112 l 449 -112 l 449 517 l 495 517 l 495 -248 l 360 -248 b 0 -68 121 -248 0 -189 z\"\n    },\n    \"accSagittalSharp5v11SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 271 112 l 315 112 l 315 -517 l 360 -517 l 360 -23 b 449 -105 383 -65 415 -94 l 449 -517 l 495 -517 l 495 -112 b 631 68 585 -112 631 -53 l 585 68 b 520 -4 585 20 563 -4 b 337 248 396 -4 360 150 l 225 248 b 0 68 76 248 0 187 z\"\n    },\n    \"accSagittalFlat5v11SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 248 l 45 248 l 45 68 b 180 -104 45 -26 89 -82 l 180 517 l 225 517 l 225 -112 l 271 -112 l 315 -112 l 315 517 l 360 517 l 360 23 b 449 105 383 65 415 94 l 449 517 l 495 517 l 495 112 b 631 -68 585 112 631 53 l 585 -68 b 520 4 585 -20 563 4 b 337 -248 396 4 360 -150 l 225 -248 b 0 -68 76 -248 0 -187 z\"\n    },\n    \"accSagittalDoubleSharp5v11SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 341 -60 b 449 -112 370 -95 405 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 312 150 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z\"\n    },\n    \"accSagittalDoubleFlat5v11SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 135 23 45 84 75 23 l 203 23 b 262 -4 225 23 245 13 l 265 0 l 89 503 l 141 517 l 292 82 l 444 517 l 495 503 l 341 60 b 449 112 370 95 405 112 b 585 -68 540 112 585 53 l 540 -68 b 475 4 540 -20 517 4 b 292 -248 350 4 312 -150 b 180 -68 268 -127 230 -68 l 112 -68 b 0 203 37 -68 0 23 z\"\n    },\n    \"accSagittalDoubleSharp7v11CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 112 -112 b 193 -73 143 -112 170 -99 l 45 -501 l 95 -517 l 248 -81 l 397 -517 l 449 -503 l 275 0 l 278 4 b 337 -23 295 -13 315 -23 l 405 -23 b 495 -203 465 -23 495 -84 l 540 -203 b 428 68 540 -23 503 68 l 360 68 b 248 248 310 68 271 127 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 112 -112 0 -52 36 -112 z\"\n    },\n    \"accSagittalDoubleFlat7v11CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 112 112 b 193 73 143 112 170 99 l 45 501 l 95 517 l 248 81 l 397 517 l 449 503 l 275 0 l 278 -4 b 337 23 295 13 315 23 l 405 23 b 495 203 465 23 495 84 l 540 203 b 428 -68 540 23 503 -68 l 360 -68 b 248 -248 310 -68 271 -127 b 122 0 217 -98 176 -16 b 95 3 112 0 104 3 b 45 -68 60 3 45 -20 l 0 -68 b 112 112 0 52 36 112 z\"\n    },\n    \"accSagittalDoubleSharp55CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 428 248 l 0 -112 l 0 -266 l 307 -7 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 386 59 l 449 112 l 449 248 z\"\n    },\n    \"accSagittalDoubleFlat55CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 428 -248 l 0 112 l 0 266 l 307 7 l 135 503 l 186 517 l 337 82 l 488 517 l 540 503 l 366 0 l 386 -59 l 449 -112 l 449 -248 z\"\n    },\n    \"accSagittalDoubleSharp17CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -248 l 45 -68 b 271 112 45 53 120 112 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 387 -62 b 495 -112 416 -95 452 -112 b 631 68 585 -112 631 -53 l 585 68 b 520 -4 585 20 563 -4 b 337 248 396 -4 360 150 l 225 248 b 0 68 76 248 0 187 l 0 -248 z\"\n    },\n    \"accSagittalDoubleFlat17CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 248 l 45 68 b 271 -112 45 -53 120 -112 l 310 0 l 135 503 l 186 517 l 337 82 l 488 517 l 540 503 l 387 62 b 495 112 416 95 452 112 b 631 -68 585 112 631 53 l 585 -68 b 520 4 585 -20 563 4 b 337 -248 396 4 360 -150 l 225 -248 b 0 -68 76 -248 0 -187 l 0 248 z\"\n    },\n    \"accSagittalDoubleSharp7v11kDown\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 416 115 l 442 124 l 428 82 z m 0 68 l 0 -30 l 366 96 l 399 0 l 392 -23 l 0 -157 l 0 -255 l 353 -135 l 225 -503 l 276 -517 l 428 -82 l 579 -517 l 631 -503 l 455 0 l 507 145 l 540 157 l 540 248 l 517 248 z\"\n    },\n    \"accSagittalDoubleFlat7v11kUp\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 l 0 30 l 366 -96 l 399 0 l 392 23 l 0 157 l 0 255 l 353 135 l 225 503 l 276 517 l 428 82 l 579 517 l 631 503 l 455 0 l 507 -145 l 540 -157 l 540 -248 l 517 -248 z m 416 -115 l 442 -124 l 428 -82 z\"\n    },\n    \"accSagittal23CommaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 188,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -517 l 45 -517 l 45 -4 b 68 -23 53 -17 60 -23 l 180 -23 b 225 -203 210 -23 225 -82 l 271 -203 b 206 68 271 -23 248 68 l 89 68 b 23 248 71 68 48 127 l 0 248 z\"\n    },\n    \"accSagittal23CommaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 188,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 517 l 45 517 l 45 4 b 68 23 53 17 60 23 l 180 23 b 225 203 210 23 225 82 l 271 203 b 206 -68 271 23 248 -68 l 89 -68 b 23 -248 71 -68 48 -127 l 0 -248 z\"\n    },\n    \"accSagittal5v19CommaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 248 l 203 248 b 86 112 151 157 112 112 b 45 157 59 112 45 127 l 0 157 b 76 23 0 72 26 27 l 0 -112 z\"\n    },\n    \"accSagittal5v19CommaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 284 l 180 -33 l 180 517 l 225 517 l 225 -248 l 203 -248 b 86 -112 151 -157 112 -112 b 45 -157 59 -112 45 -127 l 0 -157 b 76 -23 0 -72 26 -27 l 0 112 z\"\n    },\n    \"accSagittal5v23SmallDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 -4 b 248 -23 233 -17 240 -23 l 360 -23 b 405 -203 390 -23 405 -82 l 449 -203 b 386 68 449 -23 428 68 l 271 68 b 203 248 251 68 228 127 l 0 -112 z\"\n    },\n    \"accSagittal5v23SmallDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 284 l 180 -33 l 180 517 l 225 517 l 225 4 b 248 23 233 17 240 23 l 360 23 b 405 203 390 23 405 82 l 449 203 b 386 -68 449 23 428 -68 l 271 -68 b 203 -248 251 -68 228 -127 l 0 112 z\"\n    },\n    \"accSagittalSharp5v23SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -517 l 45 -517 l 45 6 b 89 -23 59 -13 73 -23 l 180 -23 l 180 -517 l 225 -517 l 225 -23 l 292 -23 b 360 -203 337 -23 360 -84 l 405 -203 b 315 68 405 -23 374 68 l 112 68 b 23 248 78 68 48 127 l 0 248 z\"\n    },\n    \"accSagittalFlat5v23SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 517 l 45 517 l 45 -6 b 89 23 59 13 73 23 l 180 23 l 180 517 l 225 517 l 225 23 l 292 23 b 360 203 337 23 360 84 l 405 203 b 315 -68 405 23 374 -68 l 112 -68 b 23 -248 78 -68 48 -127 l 0 -248 z\"\n    },\n    \"accSagittalSharp5v19CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 68 b 89 -112 0 -52 30 -112 l 89 -517 l 135 -517 l 135 -95 b 225 112 173 -65 203 4 l 271 112 l 271 -517 l 315 -517 l 315 107 b 405 -68 374 89 405 30 l 405 -248 l 449 -248 l 449 68 b 315 248 449 189 405 248 l 203 248 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 23 z\"\n    },\n    \"accSagittalFlat5v19CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 b 89 112 0 52 30 112 l 89 517 l 135 517 l 135 95 b 225 -112 173 65 203 -4 l 271 -112 l 271 517 l 315 517 l 315 -107 b 405 68 374 -89 405 -30 l 405 248 l 449 248 l 449 -68 b 315 -248 449 -189 405 -248 l 203 -248 b 101 0 173 -98 138 -16 b 81 3 94 0 86 3 b 45 -68 56 3 45 -23 z\"\n    },\n    \"accSagittalSharp23CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 135 -82 l 135 -517 l 180 -517 l 180 -17 l 239 68 b 315 -23 261 7 287 -23 l 315 -517 l 360 -517 l 360 -23 l 428 -23 b 495 -203 472 -23 495 -84 l 540 -203 b 449 68 540 -23 510 68 l 337 68 b 248 248 302 68 271 127 l 0 -112 l 0 -276 z\"\n    },\n    \"accSagittalFlat23CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 135 82 l 135 517 l 180 517 l 180 17 l 239 -68 b 315 23 261 -7 287 23 l 315 517 l 360 517 l 360 23 l 428 23 b 495 203 472 23 495 84 l 540 203 b 449 -68 540 23 510 -68 l 337 -68 b 248 -248 302 -68 271 -127 l 0 112 l 0 276 z\"\n    },\n    \"accSagittalSharp23CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -517 l 45 -517 l 45 14 b 112 -23 63 -10 86 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 360 -23 b 449 -203 420 -23 449 -84 l 495 -203 b 383 68 495 -23 458 68 l 135 68 b 23 248 85 68 48 127 l 0 248 z\"\n    },\n    \"accSagittalFlat23CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 517 l 45 517 l 45 -14 b 112 23 63 10 86 23 l 135 23 l 135 517 l 180 517 l 180 23 l 271 23 l 271 517 l 315 517 l 315 23 l 360 23 b 449 203 420 23 449 84 l 495 203 b 383 -68 495 23 458 -68 l 135 -68 b 23 -248 85 -68 48 -127 l 0 -248 z\"\n    },\n    \"accSagittalSharp5v19CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -112 l 0 -266 l 135 -153 l 135 -517 l 180 -517 l 180 -115 l 271 -39 l 271 -517 l 315 -517 l 315 0 l 405 75 l 405 -517 l 449 -517 l 449 248 l 428 248 b 130 68 285 127 186 68 b 45 157 73 68 45 98 l 0 157 b 112 -20 0 53 37 -6 z\"\n    },\n    \"accSagittalFlat5v19CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 112 l 0 266 l 135 153 l 135 517 l 180 517 l 180 115 l 271 39 l 271 517 l 315 517 l 315 0 l 405 -75 l 405 517 l 449 517 l 449 -248 l 428 -248 b 130 -68 285 -127 186 -68 b 45 -157 73 -68 45 -98 l 0 -157 b 112 20 0 -53 37 6 z\"\n    },\n    \"accSagittalSharp5v23SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 135 -108 l 135 -517 l 180 -517 l 180 -53 l 271 58 l 271 -517 l 315 -517 l 315 14 b 383 -23 334 -10 357 -23 l 405 -23 l 405 -517 l 449 -517 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 405 68 b 292 248 356 68 318 127 l 0 -112 l 0 -274 z\"\n    },\n    \"accSagittalFlat5v23SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 135 108 l 135 517 l 180 517 l 180 53 l 271 -58 l 271 517 l 315 517 l 315 -14 b 383 23 334 10 357 23 l 405 23 l 405 517 l 449 517 l 449 23 b 540 203 510 23 540 84 l 585 203 b 472 -68 585 23 547 -68 l 405 -68 b 292 -248 356 -68 318 -127 l 0 112 l 0 274 z\"\n    },\n    \"accSagittalDoubleSharp5v23SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 52 -517 l 203 -81 l 354 -517 l 405 -503 l 239 -23 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 225 68 b 112 248 176 68 138 127 l 89 248 l 89 112 b 170 -14 109 45 135 0 l 0 -501 z\"\n    },\n    \"accSagittalDoubleFlat5v23SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 52 517 l 203 81 l 354 517 l 405 503 l 239 23 l 449 23 b 540 203 510 23 540 84 l 585 203 b 472 -68 585 23 547 -68 l 225 -68 b 112 -248 176 -68 138 -127 l 89 -248 l 89 -112 b 170 14 109 -45 135 0 l 0 501 z\"\n    },\n    \"accSagittalDoubleSharp5v19CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 68 b 112 -112 0 -52 36 -112 b 193 -73 143 -112 170 -99 l 45 -501 l 95 -517 l 248 -81 l 397 -517 l 449 -501 l 275 0 l 315 112 b 495 -68 435 112 495 53 l 495 -248 l 540 -248 l 540 68 b 360 248 540 189 480 248 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 z\"\n    },\n    \"accSagittalDoubleFlat5v19CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 b 112 112 0 52 36 112 b 193 73 143 112 170 99 l 45 501 l 95 517 l 248 81 l 397 517 l 449 501 l 275 0 l 315 -112 b 495 68 435 -112 495 -53 l 495 248 l 540 248 l 540 -68 b 360 -248 540 -189 480 -248 l 248 -248 b 122 0 217 -98 176 -16 b 95 3 112 0 104 3 b 45 -68 60 3 45 -20 z\"\n    },\n    \"accSagittalDoubleSharp23CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 252 35 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 323 4 b 383 -23 340 -13 360 -23 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 405 68 b 292 248 356 68 318 127 l 0 -112 l 0 -274 z\"\n    },\n    \"accSagittalDoubleFlat23CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 252 -35 l 265 0 l 89 503 l 141 517 l 292 82 l 444 517 l 495 503 l 321 0 l 323 -4 b 383 23 340 13 360 23 l 449 23 b 540 203 510 23 540 84 l 585 203 b 472 -68 585 23 547 -68 l 405 -68 b 292 -248 356 -68 318 -127 l 0 112 l 0 274 z\"\n    },\n    \"accSagittal19SchismaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 125,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 68 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 248 l 157 248 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 l 0 68 b 68 -112 0 -52 23 -112 z\"\n    },\n    \"accSagittal19SchismaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 125,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 68 112 b 135 45 89 112 112 89 l 135 517 l 180 517 l 180 -248 l 157 -248 b 79 0 127 -98 101 -16 b 68 3 73 0 68 3 b 45 -68 52 3 45 -20 l 0 -68 b 68 112 0 52 23 112 z\"\n    },\n    \"accSagittal17KleismaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 248 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z\"\n    },\n    \"accSagittal17KleismaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 89 23 45 82 60 23 l 157 23 b 180 4 164 23 173 17 l 180 517 l 225 517 l 225 -248 l 203 -248 b 135 -68 177 -127 154 -68 l 68 -68 b 0 203 23 -68 0 23 z\"\n    },\n    \"accSagittal143CommaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -203 l 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 248 l 203 248 b 135 68 177 127 154 68 l 105 68 b 45 157 65 68 45 98 l 0 157 b 23 20 0 95 7 50 b 0 -203 7 -23 0 -98 z\"\n    },\n    \"accSagittal143CommaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 156,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 203 l 45 203 b 89 23 45 82 60 23 l 157 23 b 180 4 164 23 173 17 l 180 517 l 225 517 l 225 -248 l 203 -248 b 135 -68 177 -127 154 -68 l 105 -68 b 45 -157 65 -68 45 -98 l 0 -157 b 23 -20 0 -95 7 -50 b 0 203 7 23 0 98 z\"\n    },\n    \"accSagittal11v49CommaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 188,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -292 b 89 -157 45 -203 60 -157 l 203 -157 b 225 -143 210 -157 217 -153 l 225 -517 l 271 -517 l 271 248 l 248 248 b 180 157 233 187 210 157 l 68 157 b 0 -68 23 157 0 82 l 45 -68 b 89 68 45 23 60 68 l 203 68 b 225 84 209 68 216 72 l 225 -36 b 180 -68 213 -58 199 -68 l 68 -68 b 0 -292 23 -68 0 -143 z\"\n    },\n    \"accSagittal11v49CommaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 188,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 292 b 89 157 45 203 60 157 l 203 157 b 225 143 210 157 217 153 l 225 517 l 271 517 l 271 -248 l 248 -248 b 180 -157 233 -187 210 -157 l 68 -157 b 0 68 23 -157 0 -82 l 45 68 b 89 -68 45 -23 60 -68 l 203 -68 b 225 -84 209 -68 216 -72 l 225 36 b 180 68 213 58 199 68 l 68 68 b 0 292 23 68 0 143 z\"\n    },\n    \"accSagittal19CommaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 68 b 68 -112 0 -52 23 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 -4 b 203 -23 187 -17 196 -23 l 315 -23 b 360 -203 346 -23 360 -82 l 405 -203 b 341 68 405 -23 383 68 l 225 68 b 157 248 206 68 183 127 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 z\"\n    },\n    \"accSagittal19CommaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 b 68 112 0 52 23 112 b 135 45 89 112 112 89 l 135 517 l 180 517 l 180 4 b 203 23 187 17 196 23 l 315 23 b 360 203 346 23 360 82 l 405 203 b 341 -68 405 23 383 -68 l 225 -68 b 157 -248 206 -68 183 -127 b 79 0 127 -98 101 -16 b 68 3 73 0 68 3 b 45 -68 52 3 45 -20 z\"\n    },\n    \"accSagittal7v19CommaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 68 b 68 -112 0 -52 23 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 112 l 225 112 b 315 -68 285 112 315 53 l 315 -248 l 360 -248 l 360 68 b 271 248 360 187 330 248 l 157 248 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 z\"\n    },\n    \"accSagittal7v19CommaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 b 68 112 0 52 23 112 b 135 45 89 112 112 89 l 135 517 l 180 517 l 180 -112 l 225 -112 b 315 68 285 -112 315 -53 l 315 248 l 360 248 l 360 -68 b 271 -248 360 -187 330 -248 l 157 -248 b 79 0 127 -98 101 -16 b 68 3 73 0 68 3 b 45 -68 52 3 45 -20 z\"\n    },\n    \"accSagittal49SmallDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -203 l 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -68 330 112 360 53 l 360 -248 l 405 -248 l 405 68 b 315 248 405 187 374 248 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z\"\n    },\n    \"accSagittal49SmallDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 203 l 45 203 b 89 23 45 82 60 23 l 157 23 b 180 4 164 23 173 17 l 180 517 l 225 517 l 225 -112 l 271 -112 b 360 68 330 -112 360 -53 l 360 248 l 405 248 l 405 -68 b 315 -248 405 -187 374 -248 l 203 -248 b 135 -68 177 -127 154 -68 l 68 -68 b 0 203 23 -68 0 23 z\"\n    },\n    \"accSagittal23SmallDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 58 l 495 -274 l 495 -112 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z\"\n    },\n    \"accSagittal23SmallDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 89 23 45 82 60 23 l 157 23 b 180 4 164 23 173 17 l 180 517 l 225 517 l 225 -58 l 495 274 l 495 112 l 203 -248 b 135 -68 177 -127 154 -68 l 68 -68 b 0 203 23 -68 0 23 z\"\n    },\n    \"accSagittal5v13MediumDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -259 l 315 -89 l 315 -517 l 360 -517 l 360 248 l 337 248 b 128 180 253 203 184 180 b 45 248 73 180 45 203 l 0 248 b 52 95 0 170 17 120 l 0 68 l 0 -33 l 315 135 l 315 10 l 0 -157 z\"\n    },\n    \"accSagittal5v13MediumDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 259 l 315 89 l 315 517 l 360 517 l 360 -248 l 337 -248 b 128 -180 253 -203 184 -180 b 45 -248 73 -180 45 -203 l 0 -248 b 52 -95 0 -170 17 -120 l 0 -68 l 0 33 l 315 -135 l 315 -10 l 0 157 z\"\n    },\n    \"accSagittal11v19MediumDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 -4 b 292 -23 278 -17 285 -23 l 405 -23 b 449 -203 435 -23 449 -82 l 495 -203 b 431 68 495 -23 472 68 l 315 68 b 248 248 295 68 271 127 l 135 248 b 0 68 45 248 0 187 l 0 -248 z\"\n    },\n    \"accSagittal11v19MediumDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 248 l 45 68 b 180 -112 45 -53 89 -112 l 225 -112 l 225 517 l 271 517 l 271 4 b 292 23 278 17 285 23 l 405 23 b 449 203 435 23 449 82 l 495 203 b 431 -68 495 23 472 -68 l 315 -68 b 248 -248 295 -68 271 -127 l 135 -248 b 0 -68 45 -248 0 -187 l 0 248 z\"\n    },\n    \"accSagittal49MediumDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -68 b 225 112 45 53 105 112 l 315 112 l 315 10 l 45 -145 z m 0 -68 l 0 -248 l 45 -248 l 315 -94 l 315 -517 l 360 -517 l 360 248 l 225 248 b 0 -68 75 248 0 143 z\"\n    },\n    \"accSagittal49MediumDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 68 l 0 248 l 45 248 l 315 94 l 315 517 l 360 517 l 360 -248 l 225 -248 b 0 68 75 -248 0 -143 z m 45 68 b 225 -112 45 -53 105 -112 l 315 -112 l 315 -10 l 45 145 z\"\n    },\n    \"accSagittal5v49MediumDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -89 l 0 -248 l 225 53 l 225 -517 l 271 -517 l 271 53 l 495 -248 l 495 -89 l 248 248 b 89 89 170 143 118 89 b 45 157 60 89 45 112 l 0 157 b 68 3 0 68 23 16 z\"\n    },\n    \"accSagittal5v49MediumDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 89 l 0 248 l 225 -53 l 225 517 l 271 517 l 271 -53 l 495 248 l 495 89 l 248 -248 b 89 -89 170 -143 118 -89 b 45 -157 60 -89 45 -112 l 0 -157 b 68 -3 0 -68 23 -16 z\"\n    },\n    \"accSagittal49LargeDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 12 l 45 112 l 180 112 b 360 -68 300 112 360 53 l 360 -147 z m 0 -517 l 45 -517 l 45 -89 l 360 -248 l 405 -248 l 405 -68 b 180 248 405 143 330 248 l 0 248 z\"\n    },\n    \"accSagittal49LargeDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 517 l 45 517 l 45 89 l 360 248 l 405 248 l 405 68 b 180 -248 405 -143 330 -248 l 0 -248 z m 45 -12 l 45 -112 l 180 -112 b 360 68 300 -112 360 -53 l 360 147 z\"\n    },\n    \"accSagittal11v19LargeDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -517 l 45 -517 l 45 -86 l 449 -256 l 449 -157 l 45 13 l 45 138 l 449 -30 l 449 68 l 23 248 l 0 248 z\"\n    },\n    \"accSagittal11v19LargeDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 517 l 45 517 l 45 86 l 449 256 l 449 157 l 45 -13 l 45 -138 l 449 30 l 449 -68 l 23 -248 l 0 -248 z\"\n    },\n    \"accSagittal5v13LargeDiesisUp\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 68 b 89 -112 0 -52 30 -112 b 180 -35 125 -112 157 -86 l 180 -517 l 225 -517 l 225 -86 l 631 -256 l 631 -157 l 225 13 l 225 138 l 631 -30 l 631 68 l 203 248 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 20 z\"\n    },\n    \"accSagittal5v13LargeDiesisDown\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 b 89 112 0 52 30 112 b 180 35 125 112 157 86 l 180 517 l 225 517 l 225 86 l 631 256 l 631 157 l 225 -13 l 225 -138 l 631 30 l 631 -68 l 203 -248 b 101 0 173 -98 138 -16 b 81 3 94 0 86 3 b 45 -68 56 3 45 -20 z\"\n    },\n    \"accSagittalSharp23SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -203 l 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 b 315 6 287 -23 301 -13 l 315 -517 l 360 -517 l 360 248 l 337 248 b 248 68 312 127 282 68 l 194 68 b 89 157 125 68 89 98 l 45 157 b 60 59 45 118 50 85 b 0 -203 20 30 0 -56 z\"\n    },\n    \"accSagittalFlat23SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 203 l 45 203 b 112 23 45 84 68 23 l 135 23 l 135 517 l 180 517 l 180 23 l 271 23 b 315 -6 287 23 301 13 l 315 517 l 360 517 l 360 -248 l 337 -248 b 248 -68 312 -127 282 -68 l 194 -68 b 89 -157 125 -68 89 -98 l 45 -157 b 60 -59 45 -118 50 -85 b 0 203 20 -30 0 56 z\"\n    },\n    \"accSagittalSharp49SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -292 l 45 -292 b 112 -157 45 -203 68 -157 l 135 -157 l 135 -517 l 180 -517 l 180 -157 l 271 -157 b 315 -135 285 -157 300 -150 l 315 -517 l 360 -517 l 360 248 l 337 248 b 248 157 323 187 292 157 l 89 157 b 0 -68 30 157 0 82 l 45 -68 b 112 68 45 23 68 68 l 271 68 b 315 89 284 68 300 75 l 315 -32 b 248 -68 298 -56 275 -68 l 89 -68 b 0 -292 29 -68 0 -143 z\"\n    },\n    \"accSagittalFlat49SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 292 l 45 292 b 112 157 45 203 68 157 l 135 157 l 135 517 l 180 517 l 180 157 l 271 157 b 315 135 285 157 300 150 l 315 517 l 360 517 l 360 -248 l 337 -248 b 248 -157 323 -187 292 -157 l 89 -157 b 0 68 30 -157 0 -82 l 45 68 b 112 -68 45 -23 68 -68 l 271 -68 b 315 -89 284 -68 300 -75 l 315 32 b 248 68 298 56 275 68 l 89 68 b 0 292 29 68 0 143 z\"\n    },\n    \"accSagittalSharp7v19CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -112 l 0 -271 l 135 -125 l 135 -517 l 180 -517 l 180 -78 l 315 65 l 315 -517 l 360 -517 l 360 248 l 337 248 b 118 89 239 143 166 89 b 45 157 68 89 45 112 l 0 157 b 89 -20 0 53 29 -6 z\"\n    },\n    \"accSagittalFlat7v19CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 112 l 0 271 l 135 125 l 135 517 l 180 517 l 180 78 l 315 -65 l 315 517 l 360 517 l 360 -248 l 337 -248 b 118 -89 239 -143 166 -89 b 45 -157 68 -89 45 -112 l 0 -157 b 89 20 0 -53 29 6 z\"\n    },\n    \"accSagittalSharp19CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -248 l 45 -248 l 45 -68 b 180 96 45 17 89 72 l 180 -517 l 225 -517 l 225 107 b 315 112 252 112 282 112 l 360 112 l 360 -517 l 405 -517 l 405 248 l 271 248 b 0 68 89 248 0 187 z\"\n    },\n    \"accSagittalFlat19CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 248 l 45 248 l 45 68 b 180 -96 45 -17 89 -72 l 180 517 l 225 517 l 225 -107 b 315 -112 252 -112 282 -112 l 360 -112 l 360 517 l 405 517 l 405 -248 l 271 -248 b 0 -68 89 -248 0 -187 z\"\n    },\n    \"accSagittalSharp11v49CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 112 -23 45 -82 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 271 112 215 -23 245 23 l 315 112 l 315 -517 l 360 -517 l 360 107 b 449 -68 420 89 449 30 l 449 -248 l 495 -248 l 495 68 b 360 248 495 189 449 248 l 248 248 b 157 68 222 128 192 68 l 89 68 b 0 -203 30 68 0 -23 z\"\n    },\n    \"accSagittalFlat11v49CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 112 23 45 82 68 23 l 135 23 l 135 517 l 180 517 l 180 23 b 271 -112 215 23 245 -23 l 315 -112 l 315 517 l 360 517 l 360 -107 b 449 68 420 -89 449 -30 l 449 248 l 495 248 l 495 -68 b 360 -248 495 -189 449 -248 l 248 -248 b 157 -68 222 -128 192 -68 l 89 -68 b 0 203 30 -68 0 23 z\"\n    },\n    \"accSagittalSharp143CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 259 76 210 -23 236 10 l 315 17 l 315 -517 l 360 -517 l 360 -30 l 585 -271 l 585 -112 l 248 248 b 157 68 222 127 192 68 l 89 68 b 0 -203 30 68 0 -23 z\"\n    },\n    \"accSagittalFlat143CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 112 23 45 84 68 23 l 135 23 l 135 517 l 180 517 l 180 23 b 259 -76 210 23 236 -10 l 315 -17 l 315 517 l 360 517 l 360 30 l 585 271 l 585 112 l 248 -248 b 157 -68 222 -127 192 -68 l 89 -68 b 0 203 30 -68 0 23 z\"\n    },\n    \"accSagittalSharp17kDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -157 l 0 -256 l 225 -161 l 225 -517 l 271 -517 l 271 -144 l 405 -86 l 405 -517 l 449 -517 l 449 248 l 428 248 b 145 171 305 196 210 171 b 45 248 78 171 45 196 l 0 248 b 79 101 0 170 26 121 l 0 68 l 0 -32 l 405 138 l 405 13 z\"\n    },\n    \"accSagittalFlat17kUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 157 l 0 256 l 225 161 l 225 517 l 271 517 l 271 144 l 405 86 l 405 517 l 449 517 l 449 -248 l 428 -248 b 145 -171 305 -196 210 -171 b 45 -248 78 -171 45 -196 l 0 -248 b 79 -101 0 -170 26 -121 l 0 -68 l 0 32 l 405 -138 l 405 -13 z\"\n    },\n    \"accSagittalSharp19sDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -248 l 45 -248 l 45 -68 b 180 109 45 36 89 95 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -23 295 23 325 -23 l 360 -517 l 405 -517 l 405 -23 l 472 -23 b 540 -203 517 -23 540 -84 l 585 -203 b 495 68 585 -23 554 68 l 383 68 b 292 248 348 68 318 127 l 180 248 b 0 68 60 248 0 187 z\"\n    },\n    \"accSagittalFlat19sUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 248 l 45 248 l 45 68 b 180 -109 45 -36 89 -95 l 180 517 l 225 517 l 225 -112 l 271 -112 b 360 23 295 -23 325 23 l 360 517 l 405 517 l 405 23 l 472 23 b 540 203 517 23 540 84 l 585 203 b 495 -68 585 23 554 -68 l 383 -68 b 292 -248 348 -68 318 -127 l 180 -248 b 0 -68 60 -248 0 -187 z\"\n    },\n    \"accSagittalSharp19sUp\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 89 -96 l 89 -517 l 135 -517 l 135 -108 b 180 -112 148 -112 163 -112 b 225 -108 196 -112 210 -112 l 225 -517 l 271 -517 l 271 -94 b 360 -12 305 -78 337 -50 l 360 -517 l 405 -517 l 405 248 l 383 248 b 190 0 353 98 288 16 b 138 -3 171 0 153 -3 b 45 68 75 -3 45 20 l 0 68 b 89 -96 0 -17 30 -72 z\"\n    },\n    \"accSagittalFlat19sDown\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 89 96 l 89 517 l 135 517 l 135 108 b 180 112 148 112 163 112 b 225 108 196 112 210 112 l 225 517 l 271 517 l 271 94 b 360 12 305 78 337 50 l 360 517 l 405 517 l 405 -248 l 383 -248 b 190 0 353 -98 288 -16 b 138 3 171 0 153 3 b 45 -68 75 3 45 -20 l 0 -68 b 89 96 0 17 30 72 z\"\n    },\n    \"accSagittalSharp17kUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 337 -23 b 405 14 363 -23 386 -10 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 68 402 127 364 68 l 112 68 b 0 -203 37 68 0 -23 z\"\n    },\n    \"accSagittalFlat17kDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 135 23 45 84 75 23 l 135 517 l 180 517 l 180 23 l 271 23 l 271 517 l 315 517 l 315 23 l 337 23 b 405 -14 363 23 386 10 l 405 517 l 449 517 l 449 -248 l 428 -248 b 315 -68 402 -127 364 -68 l 112 -68 b 0 203 37 -68 0 23 z\"\n    },\n    \"accSagittalSharp143CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 337 -23 b 405 14 363 -23 386 -10 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 68 402 127 364 68 l 240 68 b 89 157 140 68 89 98 l 45 157 b 68 53 45 115 52 81 b 0 -203 23 23 0 -63 z\"\n    },\n    \"accSagittalFlat143CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 135 23 45 84 75 23 l 135 517 l 180 517 l 180 23 l 271 23 l 271 517 l 315 517 l 315 23 l 337 23 b 405 -14 363 23 386 10 l 405 517 l 449 517 l 449 -248 l 428 -248 b 315 -68 402 -127 364 -68 l 240 -68 b 89 -157 140 -68 89 -98 l 45 -157 b 68 -53 45 -115 52 -81 b 0 203 23 -23 0 63 z\"\n    },\n    \"accSagittalSharp11v49CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -68 b 135 68 45 23 76 68 l 337 68 b 405 95 363 68 386 76 l 405 -27 b 315 -68 386 -55 356 -68 l 112 -68 b 0 -292 37 -68 0 -143 l 45 -292 b 135 -157 45 -203 75 -157 l 135 -517 l 180 -517 l 180 -157 l 271 -157 l 271 -517 l 315 -517 l 315 -157 l 337 -157 b 405 -130 360 -157 383 -148 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 157 413 187 376 157 l 112 157 b 0 -68 37 157 0 82 z\"\n    },\n    \"accSagittalFlat11v49CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 68 b 135 -68 45 -23 76 -68 l 337 -68 b 405 -95 363 -68 386 -76 l 405 27 b 315 68 386 55 356 68 l 112 68 b 0 292 37 68 0 143 l 45 292 b 135 157 45 203 75 157 l 135 517 l 180 517 l 180 157 l 271 157 l 271 517 l 315 517 l 315 157 l 337 157 b 405 130 360 157 383 148 l 405 517 l 449 517 l 449 -248 l 428 -248 b 315 -157 413 -187 376 -157 l 112 -157 b 0 68 37 -157 0 -82 z\"\n    },\n    \"accSagittalSharp19CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 14 b 337 -23 289 -10 311 -23 l 360 -23 l 360 -517 l 405 -517 l 405 -23 b 495 -203 465 -23 495 -82 l 540 -203 b 428 68 540 -23 503 68 l 360 68 b 248 248 310 68 271 128 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z\"\n    },\n    \"accSagittalFlat19CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 89 109 l 89 517 l 135 517 l 135 109 b 225 27 170 102 200 75 l 225 517 l 271 517 l 271 -14 b 337 23 289 10 311 23 l 360 23 l 360 517 l 405 517 l 405 23 b 495 203 465 23 495 82 l 540 203 b 428 -68 540 23 503 -68 l 360 -68 b 248 -248 310 -68 271 -128 b 122 0 217 -98 176 -16 b 95 3 112 0 104 3 b 45 -68 60 3 45 -20 l 0 -68 b 89 109 0 39 30 98 z\"\n    },\n    \"accSagittalSharp7v19CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 112 l 315 112 b 360 109 331 112 346 112 l 360 -517 l 405 -517 l 405 98 b 495 -68 465 73 495 19 l 495 -248 l 540 -248 l 540 68 b 360 248 540 189 480 248 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z\"\n    },\n    \"accSagittalFlat7v19CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 89 109 l 89 517 l 135 517 l 135 109 b 225 27 170 102 200 75 l 225 517 l 271 517 l 271 -112 l 315 -112 b 360 -109 331 -112 346 -112 l 360 517 l 405 517 l 405 -98 b 495 68 465 -73 495 -19 l 495 248 l 540 248 l 540 -68 b 360 -248 540 -189 480 -248 l 248 -248 b 122 0 217 -98 176 -16 b 95 3 112 0 104 3 b 45 -68 60 3 45 -20 l 0 -68 b 89 109 0 39 30 98 z\"\n    },\n    \"accSagittalSharp49SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 112 l 360 112 b 405 109 376 112 390 112 l 405 -517 l 449 -517 l 449 96 b 540 -68 510 72 540 17 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z\"\n    },\n    \"accSagittalFlat49SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 135 23 45 84 75 23 l 135 517 l 180 517 l 180 23 l 203 23 b 271 -14 229 23 251 10 l 271 517 l 315 517 l 315 -112 l 360 -112 b 405 -109 376 -112 390 -112 l 405 517 l 449 517 l 449 -96 b 540 68 510 -72 540 -17 l 540 248 l 585 248 l 585 -68 b 405 -248 585 -187 526 -248 l 292 -248 b 180 -68 268 -127 230 -68 l 112 -68 b 0 203 37 -68 0 23 z\"\n    },\n    \"accSagittalSharp23SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 71 l 405 -14 l 405 -517 l 449 -517 l 449 -56 l 675 -268 l 675 -112 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z\"\n    },\n    \"accSagittalFlat23SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 135 23 45 84 75 23 l 135 517 l 180 517 l 180 23 l 203 23 b 271 -14 229 23 251 10 l 271 517 l 315 517 l 315 -71 l 405 14 l 405 517 l 449 517 l 449 56 l 675 268 l 675 112 l 292 -248 b 180 -68 268 -127 230 -68 l 112 -68 b 0 203 37 -68 0 23 z\"\n    },\n    \"accSagittalSharp5v13MUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 495 141 l 495 14 l 0 -157 l 0 -256 l 225 -180 l 225 -517 l 271 -517 l 271 -161 l 360 -130 l 360 -517 l 405 -517 l 405 -115 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 517 248 b 167 168 366 194 248 168 b 45 248 85 168 45 194 l 0 248 b 95 99 0 170 30 120 l 0 68 l 0 -30 z\"\n    },\n    \"accSagittalFlat5v13MDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 495 -141 l 495 -14 l 0 157 l 0 256 l 225 180 l 225 517 l 271 517 l 271 161 l 360 130 l 360 517 l 405 517 l 405 115 l 495 84 l 495 517 l 540 517 l 540 -248 l 517 -248 b 167 -168 366 -194 248 -168 b 45 -248 85 -168 45 -194 l 0 -248 b 95 -99 0 -170 30 -120 l 0 -68 l 0 30 z\"\n    },\n    \"accSagittalSharp11v19MUp\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 271 112 l 315 112 l 315 -517 l 360 -517 l 360 14 b 428 -23 379 -10 402 -23 l 449 -23 l 449 -517 l 495 -517 l 495 -23 b 585 -203 554 -23 585 -84 l 631 -203 b 517 68 631 -23 593 68 l 449 68 b 337 248 400 68 363 127 l 225 248 b 0 68 75 248 0 187 z\"\n    },\n    \"accSagittalFlat11v19MDown\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 l 0 248 l 45 248 l 45 68 b 180 -104 45 -26 89 -82 l 180 517 l 225 517 l 225 -112 l 271 -112 l 315 -112 l 315 517 l 360 517 l 360 -14 b 428 23 379 10 402 23 l 449 23 l 449 517 l 495 517 l 495 23 b 585 203 554 23 585 84 l 631 203 b 517 -68 631 23 593 -68 l 449 -68 b 337 -248 400 -68 363 -127 l 225 -248 b 0 -68 75 -248 0 -187 z\"\n    },\n    \"accSagittalSharp49MUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -145 l 45 -68 b 360 112 45 53 150 112 l 495 112 l 495 14 z m 0 -248 l 45 -248 l 225 -180 l 225 -517 l 271 -517 l 271 -166 l 360 -132 l 360 -517 l 405 -517 l 405 -117 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 360 248 b 0 -68 120 248 0 143 z\"\n    },\n    \"accSagittalFlat49MDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 248 l 45 248 l 225 180 l 225 517 l 271 517 l 271 166 l 360 132 l 360 517 l 405 517 l 405 117 l 495 84 l 495 517 l 540 517 l 540 -248 l 360 -248 b 0 68 120 -248 0 -143 z m 45 145 l 45 68 b 360 -112 45 -53 150 -112 l 495 -112 l 495 -14 z\"\n    },\n    \"accSagittalSharp5v49MUp\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -271 l 180 -79 l 180 -517 l 225 -517 l 225 -30 l 315 65 l 315 -517 l 360 -517 l 360 65 l 449 -30 l 449 -517 l 495 -517 l 495 -79 l 675 -271 l 675 -112 l 337 248 b 118 89 239 143 166 89 b 45 157 68 89 45 112 l 0 157 b 107 0 0 62 36 10 l 0 -112 z\"\n    },\n    \"accSagittalFlat5v49MDown\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 271 l 180 79 l 180 517 l 225 517 l 225 30 l 315 -65 l 315 517 l 360 517 l 360 -65 l 449 30 l 449 517 l 495 517 l 495 79 l 675 271 l 675 112 l 337 -248 b 118 -89 239 -143 166 -89 b 45 -157 68 -89 45 -112 l 0 -157 b 107 0 0 -62 36 -10 l 0 112 z\"\n    },\n    \"accSagittalSharp49LUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 112 l 180 112 b 540 -68 420 112 540 53 l 540 -145 l 45 16 z m 0 -517 l 45 -517 l 45 -82 l 135 -112 l 135 -517 l 180 -517 l 180 -127 l 271 -157 l 271 -517 l 315 -517 l 315 -173 l 540 -248 l 585 -248 l 585 -68 b 180 248 585 143 449 248 l 0 248 z\"\n    },\n    \"accSagittalFlat49LDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 517 l 45 517 l 45 82 l 135 112 l 135 517 l 180 517 l 180 127 l 271 157 l 271 517 l 315 517 l 315 173 l 540 248 l 585 248 l 585 68 b 180 -248 585 -143 449 -248 l 0 -248 z m 45 -112 l 180 -112 b 540 68 420 -112 540 -53 l 540 145 l 45 -16 z\"\n    },\n    \"accSagittalSharp11v19LUp\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -517 l 45 -517 l 45 -81 l 135 -108 l 135 -517 l 180 -517 l 180 -121 l 271 -148 l 271 -517 l 315 -517 l 315 -161 l 631 -255 l 631 -157 l 45 16 l 45 144 l 631 -30 l 631 68 l 23 248 l 0 248 z\"\n    },\n    \"accSagittalFlat11v19LDown\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 517 l 45 517 l 45 81 l 135 108 l 135 517 l 180 517 l 180 121 l 271 148 l 271 517 l 315 517 l 315 161 l 631 255 l 631 157 l 45 -16 l 45 -144 l 631 30 l 631 -68 l 23 -248 l 0 -248 z\"\n    },\n    \"accSagittalSharp5v13LUp\": {\n      \"x_min\": 0,\n      \"x_max\": 500,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 -85 l 360 -120 l 360 -517 l 405 -517 l 405 -135 l 720 -256 l 720 -157 l 271 14 l 271 141 l 720 -30 l 720 68 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z\"\n    },\n    \"accSagittalFlat5v13LDown\": {\n      \"x_min\": 0,\n      \"x_max\": 500,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 89 109 l 89 517 l 135 517 l 135 109 b 225 27 170 102 200 75 l 225 517 l 271 517 l 271 85 l 360 120 l 360 517 l 405 517 l 405 135 l 720 256 l 720 157 l 271 -14 l 271 -141 l 720 30 l 720 -68 l 248 -248 b 122 0 217 -98 176 -16 b 95 3 112 0 104 3 b 45 -68 60 3 45 -20 l 0 -68 b 89 109 0 39 30 98 z\"\n    },\n    \"accSagittalDoubleSharp23SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -203 l 45 -203 b 135 -23 45 -82 76 -23 l 301 -23 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 370 -14 b 449 112 423 10 449 53 l 449 248 l 428 248 b 315 68 402 127 364 68 l 240 68 b 89 157 140 68 89 98 l 45 157 b 68 53 45 115 52 81 b 0 -203 23 23 0 -63 z\"\n    },\n    \"accSagittalDoubleFlat23SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 203 l 45 203 b 135 23 45 82 76 23 l 301 23 l 135 503 l 186 517 l 337 82 l 488 517 l 540 503 l 370 14 b 449 -112 423 -10 449 -53 l 449 -248 l 428 -248 b 315 -68 402 -127 364 -68 l 240 -68 b 89 -157 140 -68 89 -98 l 45 -157 b 68 -53 45 -115 52 -81 b 0 203 23 -23 0 63 z\"\n    },\n    \"accSagittalDoubleSharp49SDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -292 l 45 -292 b 112 -157 45 -203 68 -157 l 256 -157 l 135 -503 l 187 -517 l 337 -82 l 490 -517 l 540 -503 l 366 0 l 396 89 b 449 157 416 102 435 125 l 449 248 l 428 248 b 315 157 413 187 376 157 l 112 157 b 0 -68 39 157 0 82 l 45 -68 b 135 68 45 23 76 68 l 287 68 l 311 0 l 288 -68 l 89 -68 b 0 -292 32 -68 0 -144 z\"\n    },\n    \"accSagittalDoubleFlat49SUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 292 l 45 292 b 112 157 45 203 68 157 l 256 157 l 135 503 l 187 517 l 337 82 l 490 517 l 540 503 l 366 0 l 396 -89 b 449 -157 416 -102 435 -125 l 449 -248 l 428 -248 b 315 -157 413 -187 376 -157 l 112 -157 b 0 68 39 -157 0 -82 l 45 68 b 135 -68 45 -23 76 -68 l 287 -68 l 311 0 l 288 68 l 89 68 b 0 292 32 68 0 144 z\"\n    },\n    \"accSagittalDoubleSharp7v19CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -112 l 0 -266 l 307 -7 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 386 59 l 449 112 l 449 248 l 428 248 b 130 68 285 127 186 68 b 45 157 73 68 45 98 l 0 157 b 112 -20 0 53 37 -6 z\"\n    },\n    \"accSagittalDoubleFlat7v19CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 375,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 112 l 0 266 l 307 7 l 135 503 l 186 517 l 337 82 l 488 517 l 540 503 l 366 0 l 386 -59 l 449 -112 l 449 -248 l 428 -248 b 130 -68 285 -127 186 -68 b 45 -157 73 -68 45 -98 l 0 -157 b 112 20 0 -53 37 6 z\"\n    },\n    \"accSagittalDoubleSharp19CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 372 112 l 393 112 l 383 82 z m 0 68 l 0 -248 l 45 -248 l 45 -68 b 315 109 45 36 135 95 l 354 0 l 180 -503 l 232 -517 l 383 -82 l 534 -517 l 585 -503 l 410 0 l 449 112 l 495 112 l 495 248 l 360 248 b 0 68 120 248 0 187 z\"\n    },\n    \"accSagittalDoubleFlat19CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -68 l 0 248 l 45 248 l 45 68 b 315 -109 45 -36 135 -95 l 354 0 l 180 503 l 232 517 l 383 82 l 534 517 l 585 503 l 410 0 l 449 -112 l 495 -112 l 495 -248 l 360 -248 b 0 -68 120 -248 0 -187 z m 372 -112 l 393 -112 l 383 -82 z\"\n    },\n    \"accSagittalDoubleSharp11v49CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 360 112 b 540 -68 480 112 540 53 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z\"\n    },\n    \"accSagittalDoubleFlat11v49CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 406,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 135 23 45 84 75 23 l 203 23 b 262 -4 225 23 245 13 l 265 0 l 89 503 l 141 517 l 292 82 l 444 517 l 495 503 l 321 0 l 360 -112 b 540 68 480 -112 540 -53 l 540 248 l 585 248 l 585 -68 b 405 -248 585 -187 526 -248 l 292 -248 b 180 -68 268 -127 230 -68 l 112 -68 b 0 203 37 -68 0 23 z\"\n    },\n    \"accSagittalDoubleSharp143CDown\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 337 49 l 675 -268 l 675 -112 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z\"\n    },\n    \"accSagittalDoubleFlat143CUp\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 45 203 b 135 23 45 84 75 23 l 203 23 b 262 -4 225 23 245 13 l 265 0 l 89 503 l 141 517 l 292 82 l 444 517 l 495 503 l 321 0 l 337 -49 l 675 268 l 675 112 l 292 -248 b 180 -68 268 -127 230 -68 l 112 -68 b 0 203 37 -68 0 23 z\"\n    },\n    \"accSagittalDoubleSharp17kDown\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 416 115 l 442 124 l 428 82 z m 0 248 b 95 101 0 170 30 121 l 0 68 l 0 -30 l 364 96 l 399 0 l 390 -23 l 0 -157 l 0 -255 l 353 -135 l 225 -503 l 275 -517 l 428 -82 l 577 -517 l 631 -503 l 455 0 l 507 145 l 540 157 l 540 248 l 517 248 b 167 168 366 194 248 168 b 45 248 85 168 45 194 z\"\n    },\n    \"accSagittalDoubleFlat17kUp\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -248 b 95 -101 0 -170 30 -121 l 0 -68 l 0 30 l 364 -96 l 399 0 l 390 23 l 0 157 l 0 255 l 353 135 l 225 503 l 275 517 l 428 82 l 577 517 l 631 503 l 455 0 l 507 -145 l 540 -157 l 540 -248 l 517 -248 b 167 -168 366 -194 248 -168 b 45 -248 85 -168 45 -194 z m 416 -115 l 442 -124 l 428 -82 z\"\n    },\n    \"accSagittalDoubleSharp19sDown\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 -248 l 45 -248 l 45 -68 b 271 112 45 53 120 112 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 367 4 b 428 -23 386 -13 405 -23 l 495 -23 b 585 -203 554 -23 585 -84 l 631 -203 b 517 68 631 -23 593 68 l 449 68 b 337 248 400 68 363 127 l 225 248 b 0 68 75 248 0 187 z\"\n    },\n    \"accSagittalDoubleFlat19sUp\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 248 l 45 248 l 45 68 b 271 -112 45 -53 120 -112 l 310 0 l 135 503 l 186 517 l 337 82 l 488 517 l 540 503 l 366 0 l 367 -4 b 428 23 386 13 405 23 l 495 23 b 585 203 554 23 585 84 l 631 203 b 517 -68 631 23 593 -68 l 449 -68 b 337 -248 400 -68 363 -127 l 225 -248 b 0 -68 75 -248 0 -187 z\"\n    },\n    \"accSagittalShaftUp\": {\n      \"x_min\": 0,\n      \"x_max\": 31,\n      \"y_min\": -359,\n      \"y_max\": 172,\n      \"ha\": 531,\n      \"o\": \"m 0 112 l 0 -517 l 45 -517 l 45 112 l 23 248 z\"\n    },\n    \"accSagittalShaftDown\": {\n      \"x_min\": 0,\n      \"x_max\": 31,\n      \"y_min\": -172,\n      \"y_max\": 359,\n      \"ha\": 531,\n      \"o\": \"m 0 -112 l 0 517 l 45 517 l 45 -112 l 23 -248 z\"\n    },\n    \"accSagittalAcute\": {\n      \"x_min\": 0,\n      \"x_max\": 125,\n      \"y_min\": -62,\n      \"y_max\": 125,\n      \"ha\": 187,\n      \"o\": \"m 0 0 l 0 -89 l 180 89 l 180 180 z\"\n    },\n    \"accSagittalGrave\": {\n      \"x_min\": 0,\n      \"x_max\": 125,\n      \"y_min\": -125,\n      \"y_max\": 62,\n      \"ha\": 187,\n      \"o\": \"m 0 0 l 0 89 l 180 -89 l 180 -180 z\"\n    },\n    \"accSagittal1MinaUp\": {\n      \"x_min\": -7,\n      \"x_max\": 124,\n      \"y_min\": 16,\n      \"y_max\": 106.32667068233003,\n      \"ha\": 90.32667068233003,\n      \"o\": \"m -10 23 l 43 23 b 72 65 43 23 65 55 b 135 23 104 108 136 148 l 179 23 b 134 150 179 112 163 135 b 68 130 116 158 85 150 b -10 23 43 101 13 58 z\"\n    },\n    \"accSagittal1MinaDown\": {\n      \"x_min\": -7,\n      \"x_max\": 124,\n      \"y_min\": -106.32667068233003,\n      \"y_max\": -16,\n      \"ha\": 90.32667068233003,\n      \"o\": \"m -10 -23 l 43 -23 b 72 -65 43 -23 65 -55 b 135 -23 104 -108 136 -148 l 179 -23 b 134 -150 179 -112 163 -135 b 68 -130 116 -158 85 -150 b -10 -23 43 -101 13 -58 z\"\n    },\n    \"accSagittal2MinasUp\": {\n      \"x_min\": -7,\n      \"x_max\": 218,\n      \"y_min\": 16,\n      \"y_max\": 106.32679473178912,\n      \"ha\": 90.32679473178912,\n      \"o\": \"m -10 23 l 43 23 b 72 65 43 23 65 55 b 135 23 104 108 136 148 l 179 23 b 207 65 179 23 200 55 b 271 23 240 108 272 148 l 314 23 b 269 150 314 112 299 135 b 203 130 252 158 220 150 b 173 93 191 115 182 104 b 134 150 167 127 153 140 b 68 130 116 158 85 150 b -10 23 43 101 13 58 z\"\n    },\n    \"accSagittal2MinasDown\": {\n      \"x_min\": -7,\n      \"x_max\": 218,\n      \"y_min\": -106.32679473178912,\n      \"y_max\": -16,\n      \"ha\": 90.32679473178912,\n      \"o\": \"m -10 -23 l 43 -23 b 72 -65 43 -23 65 -55 b 135 -23 104 -108 136 -148 l 179 -23 b 207 -65 179 -23 200 -55 b 271 -23 240 -108 272 -148 l 314 -23 b 269 -150 314 -112 299 -135 b 203 -130 252 -158 220 -150 b 173 -93 191 -115 182 -104 b 134 -150 167 -127 153 -140 b 68 -130 116 -158 85 -150 b -10 -23 43 -101 13 -58 z\"\n    },\n    \"accSagittal1TinaUp\": {\n      \"x_min\": 0,\n      \"x_max\": 93,\n      \"y_min\": 16,\n      \"y_max\": 107,\n      \"ha\": 91,\n      \"o\": \"m 134 154 l 91 154 b 81 76 91 101 90 86 b 0 68 73 69 48 68 l 0 23 b 112 45 50 23 92 27 b 134 154 129 59 134 73 z\"\n    },\n    \"accSagittal1TinaDown\": {\n      \"x_min\": 0,\n      \"x_max\": 93,\n      \"y_min\": -107,\n      \"y_max\": -16,\n      \"ha\": 91,\n      \"o\": \"m 134 -154 l 91 -154 b 81 -76 91 -101 90 -86 b 0 -68 73 -69 48 -68 l 0 -23 b 112 -45 50 -23 92 -27 b 134 -154 129 -59 134 -73 z\"\n    },\n    \"accSagittal2TinasUp\": {\n      \"x_min\": 0,\n      \"x_max\": 94,\n      \"y_min\": 16,\n      \"y_max\": 107,\n      \"ha\": 91,\n      \"o\": \"m 135 68 b 99 92 116 68 103 82 b 89 154 94 105 89 121 l 46 154 b 36 92 45 131 42 106 b 0 68 32 83 23 68 l 0 23 b 53 45 23 23 48 39 b 68 63 60 52 60 52 b 82 43 75 52 77 50 b 135 23 86 37 115 23 z\"\n    },\n    \"accSagittal2TinasDown\": {\n      \"x_min\": 0,\n      \"x_max\": 94,\n      \"y_min\": -107,\n      \"y_max\": -16,\n      \"ha\": 91,\n      \"o\": \"m 135 -68 b 99 -92 116 -68 103 -82 b 89 -154 94 -105 89 -121 l 46 -154 b 36 -92 45 -131 42 -106 b 0 -68 32 -83 23 -68 l 0 -23 b 53 -45 23 -23 48 -39 b 68 -63 60 -52 60 -52 b 82 -43 75 -52 77 -50 b 135 -23 86 -37 115 -23 z\"\n    },\n    \"accSagittal3TinasUp\": {\n      \"x_min\": -7,\n      \"x_max\": 124,\n      \"y_min\": 16,\n      \"y_max\": 106.32667068233003,\n      \"ha\": 90.32667068233003,\n      \"o\": \"m -10 23 l 43 23 b 72 65 43 23 65 55 b 135 23 104 108 136 148 l 179 23 b 134 150 179 112 163 135 b 68 130 116 158 85 150 b -10 23 43 101 13 58 z\"\n    },\n    \"accSagittal3TinasDown\": {\n      \"x_min\": -7,\n      \"x_max\": 124,\n      \"y_min\": -106.32667068233003,\n      \"y_max\": -16,\n      \"ha\": 90.32667068233003,\n      \"o\": \"m -10 -23 l 43 -23 b 72 -65 43 -23 65 -55 b 135 -23 104 -108 136 -148 l 179 -23 b 134 -150 179 -112 163 -135 b 68 -130 116 -158 85 -150 b -10 -23 43 -101 13 -58 z\"\n    },\n    \"accSagittal4TinasUp\": {\n      \"x_min\": 0,\n      \"x_max\": 187,\n      \"y_min\": 16,\n      \"y_max\": 106.77773196082337,\n      \"ha\": 90.77773196082337,\n      \"o\": \"m 0 68 l 0 23 b 143 45 105 23 123 26 b 226 23 158 62 228 189 l 269 23 b 225 150 269 112 254 135 b 160 132 207 159 182 153 b 115 81 139 112 123 88 b 0 68 104 71 94 68 z\"\n    },\n    \"accSagittal4TinasDown\": {\n      \"x_min\": 0,\n      \"x_max\": 187,\n      \"y_min\": -106.77773196082337,\n      \"y_max\": -16,\n      \"ha\": 90.77773196082337,\n      \"o\": \"m 0 -68 l 0 -23 b 143 -45 105 -23 123 -26 b 226 -23 158 -62 228 -189 l 269 -23 b 225 -150 269 -112 254 -135 b 160 -132 207 -159 182 -153 b 115 -81 139 -112 123 -88 b 0 -68 104 -71 94 -68 z\"\n    },\n    \"accSagittal5TinasUp\": {\n      \"x_min\": 0,\n      \"x_max\": 218,\n      \"y_min\": 16,\n      \"y_max\": 107,\n      \"ha\": 91,\n      \"o\": \"m 135 23 b 187 45 156 23 168 26 b 271 23 204 61 272 189 l 314 23 b 269 150 314 112 299 135 b 204 132 252 159 226 153 b 160 81 183 112 168 88 b 135 68 148 71 147 68 b 99 92 116 68 103 82 b 89 154 94 105 89 121 l 46 154 b 36 92 45 131 42 106 b 0 68 32 83 23 68 l 0 23 b 53 45 23 23 48 39 b 68 63 60 52 60 52 b 82 43 75 52 77 50 b 135 23 86 37 115 23 z\"\n    },\n    \"accSagittal5TinasDown\": {\n      \"x_min\": 0,\n      \"x_max\": 218,\n      \"y_min\": -107,\n      \"y_max\": -16,\n      \"ha\": 91,\n      \"o\": \"m 135 -23 b 187 -45 156 -23 168 -26 b 271 -23 204 -61 272 -189 l 314 -23 b 269 -150 314 -112 299 -135 b 204 -132 252 -159 226 -153 b 160 -81 183 -112 168 -88 b 135 -68 148 -71 147 -68 b 99 -92 116 -68 103 -82 b 89 -154 94 -105 89 -121 l 46 -154 b 36 -92 45 -131 42 -106 b 0 -68 32 -83 23 -68 l 0 -23 b 53 -45 23 -23 48 -39 b 68 -63 60 -52 60 -52 b 82 -43 75 -52 77 -50 b 135 -23 86 -37 115 -23 z\"\n    },\n    \"accSagittal6TinasUp\": {\n      \"x_min\": -7,\n      \"x_max\": 218,\n      \"y_min\": 16,\n      \"y_max\": 106.32679473178912,\n      \"ha\": 90.32679473178912,\n      \"o\": \"m -10 23 l 43 23 b 72 65 43 23 65 55 b 135 23 104 108 136 148 l 179 23 b 207 65 179 23 200 55 b 271 23 240 108 272 148 l 314 23 b 269 150 314 112 299 135 b 203 130 252 158 220 150 b 173 93 191 115 182 104 b 134 150 167 127 153 140 b 68 130 116 158 85 150 b -10 23 43 101 13 58 z\"\n    },\n    \"accSagittal6TinasDown\": {\n      \"x_min\": -7,\n      \"x_max\": 218,\n      \"y_min\": -106.32679473178912,\n      \"y_max\": -16,\n      \"ha\": 90.32679473178912,\n      \"o\": \"m -10 -23 l 43 -23 b 72 -65 43 -23 65 -55 b 135 -23 104 -108 136 -148 l 179 -23 b 207 -65 179 -23 200 -55 b 271 -23 240 -108 272 -148 l 314 -23 b 269 -150 314 -112 299 -135 b 203 -130 252 -158 220 -150 b 173 -93 191 -115 182 -104 b 134 -150 167 -127 153 -140 b 68 -130 116 -158 85 -150 b -10 -23 43 -101 13 -58 z\"\n    },\n    \"accSagittal7TinasUp\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": 16,\n      \"y_max\": 106.77773196082337,\n      \"ha\": 90.77773196082337,\n      \"o\": \"m 269 23 z m 0 68 l 0 23 b 143 45 105 23 123 26 b 226 23 158 62 228 189 l 269 23 b 298 65 269 23 291 55 b 361 23 330 108 362 148 l 405 23 b 360 150 405 112 389 135 b 294 130 342 158 311 150 b 264 93 281 115 273 104 b 225 150 257 127 244 140 b 160 132 207 159 182 153 b 115 81 139 112 123 88 b 0 68 104 71 94 68 z\"\n    },\n    \"accSagittal7TinasDown\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -106.77773196082337,\n      \"y_max\": -16,\n      \"ha\": 90.77773196082337,\n      \"o\": \"m 0 -68 l 0 -23 b 143 -45 105 -23 123 -26 b 226 -23 158 -62 228 -189 l 269 -23 b 298 -65 269 -23 291 -55 b 361 -23 330 -108 362 -148 l 405 -23 b 360 -150 405 -112 389 -135 b 294 -130 342 -158 311 -150 b 264 -93 281 -115 273 -104 b 225 -150 257 -127 244 -140 b 160 -132 207 -159 182 -153 b 115 -81 139 -112 123 -88 b 0 -68 104 -71 94 -68 z\"\n    },\n    \"accSagittal8TinasUp\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": 16,\n      \"y_max\": 107,\n      \"ha\": 91,\n      \"o\": \"m 314 23 z m 135 23 b 187 45 156 23 168 26 b 271 23 204 61 272 189 l 314 23 b 343 65 314 23 335 55 b 406 23 375 108 407 148 l 449 23 b 405 150 449 112 434 135 b 338 130 387 158 356 150 b 309 93 326 115 317 104 b 269 150 302 127 289 140 b 204 132 252 159 226 153 b 160 81 183 112 168 88 b 135 68 148 71 147 68 b 99 92 116 68 103 82 b 89 154 94 105 89 121 l 46 154 b 36 92 45 131 42 106 b 0 68 32 83 23 68 l 0 23 b 53 45 23 23 48 39 b 68 63 60 52 60 52 b 82 43 75 52 77 50 b 135 23 86 37 115 23 z\"\n    },\n    \"accSagittal8TinasDown\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": -107,\n      \"y_max\": -16,\n      \"ha\": 91,\n      \"o\": \"m 135 -23 b 187 -45 156 -23 168 -26 b 271 -23 204 -61 272 -189 l 314 -23 b 343 -65 314 -23 335 -55 b 406 -23 375 -108 407 -148 l 449 -23 b 405 -150 449 -112 434 -135 b 338 -130 387 -158 356 -150 b 309 -93 326 -115 317 -104 b 269 -150 302 -127 289 -140 b 204 -132 252 -159 226 -153 b 160 -81 183 -112 168 -88 b 135 -68 148 -71 147 -68 b 99 -92 116 -68 103 -82 b 89 -154 94 -105 89 -121 l 46 -154 b 36 -92 45 -131 42 -106 b 0 -68 32 -83 23 -68 l 0 -23 b 53 -45 23 -23 48 -39 b 68 -63 60 -52 60 -52 b 82 -43 75 -52 77 -50 b 135 -23 86 -37 115 -23 z\"\n    },\n    \"accSagittal9TinasUp\": {\n      \"x_min\": -7,\n      \"x_max\": 312,\n      \"y_min\": 16,\n      \"y_max\": 106.32679473178912,\n      \"ha\": 90.32679473178912,\n      \"o\": \"m 314 23 z m -10 23 l 43 23 b 72 65 43 23 65 55 b 135 23 104 108 136 148 l 179 23 b 207 65 179 23 200 55 b 271 23 240 108 272 148 l 314 23 b 343 65 314 23 335 55 b 406 23 375 108 407 148 l 449 23 b 405 150 449 112 434 135 b 338 130 387 158 356 150 b 309 93 326 115 317 104 b 269 150 302 127 289 140 b 203 130 252 158 220 150 b 173 93 191 115 182 104 b 134 150 167 127 153 140 b 68 130 116 158 85 150 b -10 23 43 101 13 58 z\"\n    },\n    \"accSagittal9TinasDown\": {\n      \"x_min\": -7,\n      \"x_max\": 312,\n      \"y_min\": -106.32679473178912,\n      \"y_max\": -16,\n      \"ha\": 90.32679473178912,\n      \"o\": \"m -10 -23 l 43 -23 b 72 -65 43 -23 65 -55 b 135 -23 104 -108 136 -148 l 179 -23 b 207 -65 179 -23 200 -55 b 271 -23 240 -108 272 -148 l 314 -23 b 343 -65 314 -23 335 -55 b 406 -23 375 -108 407 -148 l 449 -23 b 405 -150 449 -112 434 -135 b 338 -130 387 -158 356 -150 b 309 -93 326 -115 317 -104 b 269 -150 302 -127 289 -140 b 203 -130 252 -158 220 -150 b 173 -93 191 -115 182 -104 b 134 -150 167 -127 153 -140 b 68 -130 116 -158 85 -150 b -10 -23 43 -101 13 -58 z\"\n    },\n    \"accSagittalFractionalTinaUp\": {\n      \"x_min\": -3,\n      \"x_max\": 35,\n      \"y_min\": 73,\n      \"y_max\": 111,\n      \"ha\": 38,\n      \"o\": \"m -4 132 b 23 105 -4 118 9 105 b 50 132 37 105 50 118 b 23 160 50 147 37 160 b -4 132 9 160 -4 147 z\"\n    },\n    \"accSagittalFractionalTinaDown\": {\n      \"x_min\": -3,\n      \"x_max\": 35,\n      \"y_min\": -111,\n      \"y_max\": -73,\n      \"ha\": 38,\n      \"o\": \"m -4 -132 b 23 -105 -4 -118 9 -105 b 50 -132 37 -105 50 -118 b 23 -160 50 -147 37 -160 b -4 -132 9 -160 -4 -147 z\"\n    },\n    \"accidentalNarrowReversedFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 164,\n      \"y_min\": -194,\n      \"y_max\": 422,\n      \"ha\": 616,\n      \"o\": \"m 112 -157 l 236 -279 l 236 608 l 192 608 l 192 180 b 85 243 150 222 112 243 b 0 84 23 243 0 135 b 112 -157 0 3 37 -78 z m 82 40 b 138 144 82 73 96 144 b 192 112 153 144 170 132 l 192 -163 l 135 -98 b 82 40 101 -50 82 -3 z\"\n    },\n    \"accidentalNarrowReversedFlatAndFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 414,\n      \"y_min\": -194,\n      \"y_max\": 422,\n      \"ha\": 616,\n      \"o\": \"m 438 -157 b 596 84 547 -82 596 3 b 475 243 596 154 556 243 b 325 180 435 243 383 222 l 325 608 l 281 608 l 281 -268 z m 0 84 b 112 -157 0 3 37 -78 l 235 -279 l 235 608 l 190 608 l 190 180 b 85 243 148 222 112 243 b 12 157 52 243 27 215 b 0 84 3 135 0 108 z m 325 112 b 410 144 360 132 386 144 b 498 36 462 144 498 84 b 413 -107 498 -9 469 -58 l 325 -173 z m 89 94 b 135 144 102 127 118 144 b 192 112 153 144 170 132 l 192 -163 l 135 -98 b 81 40 99 -50 81 -3 b 89 94 81 59 84 76 z\"\n    },\n    \"accidentalWilsonPlus\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -203,\n      \"y_max\": 203,\n      \"ha\": 406,\n      \"o\": \"m 180 -98 l 180 -292 l 225 -292 l 225 -56 l 405 112 l 405 268 l 225 98 l 225 292 l 180 292 l 180 56 l 0 -112 l 0 -268 z\"\n    },\n    \"accidentalWilsonMinus\": {\n      \"x_min\": 0,\n      \"x_max\": 281,\n      \"y_min\": -186,\n      \"y_max\": 186,\n      \"ha\": 372,\n      \"o\": \"m 0 112 l 405 -268 l 405 -112 l 0 268 z\"\n    }\n  },\n  \"fontFamily\": \"Bravura\",\n  \"resolution\": 1000,\n  \"generatedOn\": \"2020-11-16T21:00:32.731Z\"\n};\n","export const BravuraMetrics = {\n  name: 'Bravura',\n  smufl: true,\n\n  stave: {\n    padding: 12,\n  },\n\n  clef: {\n    default: {\n      point: 32,\n      width: 26,\n    },\n    small: {\n      point: 26,\n      width: 20,\n    },\n\n    annotations: {\n      '8va': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 18,\n          treble: {\n            line: -1.4,\n            shiftX: 12,\n          },\n        },\n        small: {\n          point: 16,\n          treble: {\n            line: -0.2,\n            shiftX: 8,\n          },\n        }\n      },\n      '8vb': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 18,\n          treble: {\n            line: 6,\n            shiftX: 10,\n          },\n          bass: {\n            line: 3.5,\n            shiftX: 1,\n          }\n        },\n        small: {\n          point: 16,\n          treble: {\n            line: 5.3,\n            shiftX: 6,\n          },\n          bass: {\n            line: 3.1,\n            shiftX: 0.5,\n          }\n        }\n      }\n    },\n    // These may no longer be necessary\n    lineCount: {\n      '8': { point: 55, shiftY: 14 },\n      '7': { point: 47, shiftY: 8 },\n      '6': { point: 32, shiftY: 1 },\n      '5': { point: 30, shiftY: -6 },\n      '4': { point: 23, shiftY: -12 },\n    }\n  },\n  pedalMarking: {\n    up: {\n      point: 40\n    },\n    down: {\n      point: 34\n    }\n  },\n\n  // These are for numeric digits, such as in time signatures\n  digits: {\n    // used by timesig\n    shiftLine: -1,\n    point: 34,\n\n    // used by tuplets\n    tupletPoint: 22,\n    shiftY: -6,\n  },\n\n  articulation: {\n    articStaccatissimoAbove: {\n      padding: 2,\n    },\n    articStaccatissimoBelow: {\n      padding: 2,\n    }\n  },\n\n  tremolo: {\n    default: {\n      point: 25,\n      spacing: 5,\n      offsetYStemUp: -5,\n      offsetYStemDown: 5,\n      offsetXStemUp: 11,\n      offsetXStemDown: 1,\n    },\n    grace: {\n      point: 18,\n      spacing: 4,\n      offsetYStemUp: -5,\n      offsetYStemDown: 5,\n      offsetXStemUp: 7,\n      offsetXStemDown: 1,\n    }\n  },\n\n  stem: {\n    // These are stem (Y) offsets to the note heads. To shift the\n    // noteheads (x-position) themselves, see glyphs.notehead.custom.\n    noteHead: {\n      noteheadTriangleUpHalf: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpBlack: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpWhole: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXHalf: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXBlack: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXWhole: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadBlack: {\n        offsetYBaseStemDown: 2,\n      },\n      noteheadSquareWhite: {\n        offsetYBaseStemDown: -5,\n        offsetYBaseStemUp: 5,\n      }\n    }\n  },\n\n  // Values under here are used by the Glyph class to reposition and rescale\n  // glyphs based on their category. This should be the first stop for\n  // custom font glyph repositioning.\n  //\n  // The glyph loader first looks up a specific set of settings based on the\n  // glyph code, and if not found, uses the defaults from the category. See\n  // glyphs.textNote for an example of this.\n  //\n  // Details in Glyph.lookupFontMetrics.\n  glyphs: {\n    coda: {\n      point: 20,\n      shiftX: -7,\n      shiftY: 8,\n    },\n    segno: {\n      shiftX: -7,\n    },\n    flag: {\n      shiftX: -0.75,\n      tabStem: {\n        shiftX: -1.75,\n      },\n      staveTempo: {\n        shiftX: -1,\n      }\n    },\n    clef: {\n      gClef: {\n        default: { scale: 1.1, shiftY: 1 },\n        small: { shiftY: 1.5 }\n      },\n      fClef: {\n        default: { shiftY: -0.5 }\n      }\n    },\n    ornament: {\n      ornamentTurn: {\n        scale: 1.2,\n      },\n      ornamentTurnSlash: {\n        scale: 1.2,\n      },\n    },\n    stroke: {\n      arrowheadBlackDown: {\n        straight: {\n          shiftX: -4.5,\n        },\n        wiggly: {\n          shiftX: -1,\n          shiftY: 1,\n        }\n      },\n      arrowheadBlackUp: {\n        straight: {\n          shiftX: -0.85,\n        },\n        wiggly: {\n          shiftX: -1,\n          shiftY: 1,\n        }\n      }\n    },\n    textNote: {\n      point: 34,\n      breathMarkTick: {\n        point: 36,\n        shiftY: 9,\n      },\n      breathMarkComma: {\n        point: 36,\n      },\n      segno: {\n        point: 30,\n        shiftX: -7,\n        shiftY: 8,\n      },\n      coda: {\n        point: 20,\n        shiftX: -7,\n        shiftY: 8,\n      },\n      ornamentTrill: {\n        shiftX: -8,\n        shiftY: 8,\n      },\n      ornamentTurn: {\n        point: 42,\n      },\n      ornamentTurnSlash: {\n        point: 42,\n      },\n      ornamentMordent: {\n        shiftX: -8,\n      },\n      ornamentShortTrill: {\n        shiftX: -8,\n      }\n    },\n    noteHead: {\n      standard: {\n        restQuarterStemUp: {\n          point: 35,\n        },\n        restQuarterStemDown: {\n          point: 35,\n        },\n      },\n      custom: {\n        'noteheadCircleXStemUp': {\n          shiftX: 1.5,\n        },\n        'noteheadCircleXStemDown': {\n          shiftX: 0.25,\n        },\n        'noteheadDiamondHalfStemUp': {\n          shiftX: 1.5,\n        },\n        'noteheadDiamondBlackStemUp': {\n          shiftX: 1.5,\n        },\n        'noteheadDiamondWholeStemUp': {\n          shiftX: 1,\n        },\n        'noteheadXHalfStemUp': {\n          shiftX: -2,\n        },\n        'noteheadXHalfStemDown': {\n          shiftX: 1,\n        },\n        'noteheadXWholeStemUp': {\n          shiftX: -4,\n        },\n        'noteheadXWholeStemDown': {\n          shiftX: 1,\n        },\n        'noteheadSquareWhiteStemDown': {\n          shiftX: 0.25,\n        },\n        'noteheadSquareWhiteStemUp': {\n          shiftX: -0.75,\n        },\n        'noteheadSquareBlackStemUp': {\n          shiftX: -0.75,\n        },\n        'noteheadTriangleUpWholeStemUp': {\n          shiftX: -0.75,\n        }\n      },\n    },\n    chordSymbol: {\n      global: {\n        superscriptOffset: -400,\n        subscriptOffset: 300,\n        kerningOffset: -250,\n        lowerKerningText:  ['D', 'F', 'P', 'T', 'V', 'Y'],\n        upperKerningText:  ['A', 'L'],\n        spacing: 100,\n        superSubRatio: 0.66\n      },\n      csymDiminished: {\n        scale: 0.8,\n        leftSideBearing: -32,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymHalfDiminished: {\n        scale: 0.8,\n        leftSideBearing: -32,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymAugmented: {\n        scale: 1,\n        leftSideBearing: 0,\n        advanceWidth: 530,\n        yOffset: 0\n      },\n      csymParensLeftTall: {\n        scale: 0.8,\n        leftSideBearing: -20,\n        advanceWidth: 184,\n        yOffset: 250\n      },\n      csymParensRightTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 189,\n        yOffset: 250\n      },\n      csymBracketLeftTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 328,\n        yOffset: 0\n      },\n      csymBracketRightTall: {\n        scale: 0.8,\n        leftSideBearing: 1,\n        advanceWidth: 600,\n        yOffset: 0\n      },\n      csymParensLeftVeryTall: {\n        scale: 0.9,\n        leftSideBearing: 50,\n        advanceWidth: 121,\n        yOffset: 350\n      },\n      csymParensRightVeryTall: {\n        scale: 0.9,\n        leftSideBearing: 0,\n        advanceWidth: 111,\n        yOffset: 350\n      },\n      csymDiagonalArrangementSlash: {\n        scale: 0.6,\n        leftSideBearing: -1,\n        advanceWidth: 990,\n        yOffset: 0\n      },\n      csymMinor: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 482,\n        yOffset: 0\n      },\n      csymMajorSeventh: {\n        scale: 0.9,\n        leftSideBearing: 200,\n        yOffset: 0,\n        advanceWidth: 600\n      },\n      accidentalSharp: {\n        scale: 0.75,\n        leftSideBearing: 20,\n        advanceWidth: 250,\n        yOffset: -302\n      },\n      accidentalFlat: {\n        scale: 0.9,\n        leftSideBearing: -20,\n        advanceWidth: 226,\n        yOffset: -184\n      }\n    },\n    jazzOrnaments: {\n      brassScoop: {\n        scale: 1.0,\n        xOffset: -12,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 10\n      },\n      brassDoitMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth:15\n      },\n      brassFallLipShort: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassLiftMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 5,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassFallRoughMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 28,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassBend: {\n        scale: 1.0,\n        xOffset: 2,\n        yOffset: -8,\n        stemUpYOffset: 25,\n        reportedWidth: 5\n      },\n      brassMuteClosed: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -8,\n        stemUpYOffset: 25,\n        reportedWidth: 5\n      },\n      brassMuteOpen: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -7,\n        stemUpYOffset: 25,\n        reportedWidth: 5\n      },\n      brassFlip: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassJazzTurn: {\n        scale: 1.0,\n        xOffset: 6,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassSmear: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n    }\n  }\n};\n","export const GonvilleFont = {\n  'glyphs': {\n    'bracketTop': {\n      'x_min': 0,\n      'x_max': 559.421875,\n      'ha': 571,\n      'o': 'm 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 '\n    },\n    'bracketBottom': {\n      'x_min': 0,\n      'x_max': 559.421875,\n      'ha': 571,\n      'o': 'm 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 '\n    },\n    'barlineTick': {\n      'x_min': -80.3125,\n      'x_max': 78.9375,\n      'ha': 81,\n      'o': 'm 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 '\n    },\n    'breathMarkTick': {\n      'x_min': -80.3125,\n      'x_max': 78.9375,\n      'ha': 81,\n      'o': 'm 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 '\n    },\n    'segno': {\n      'x_min': -330.75,\n      'x_max': 329.390625,\n      'ha': 336,\n      'o': 'm -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 '\n    },\n    'coda': {\n      'x_min': -311.6875,\n      'x_max': 310.328125,\n      'ha': 317,\n      'o': 'm -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 '\n    },\n    'gClef': {\n      'x_min': -1.359375,\n      'x_max': 847.96875,\n      'ha': 865,\n      'o': 'm 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 '\n    },\n    'cClef': {\n      'x_min': 0,\n      'x_max': 873.828125,\n      'ha': 892,\n      'o': 'm 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 '\n    },\n    'fClef': {\n      'x_min': -1.359375,\n      'x_max': 899.703125,\n      'ha': 918,\n      'o': 'm 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 '\n    },\n    'unpitchedPercussionClef1': {\n      'x_min': 0,\n      'x_max': 464.140625,\n      'ha': 474,\n      'o': 'm 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 '\n    },\n    '6stringTabClef': {\n      'x_min': -1.359375,\n      'x_max': 680.5625,\n      'ha': 694,\n      'o': 'm 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 '\n    },\n    'timeSig0': {\n      'x_min': 0,\n      'x_max': 514.5,\n      'ha': 525,\n      'o': 'm 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 '\n    },\n    'timeSig1': {\n      'x_min': -1.359375,\n      'x_max': 344.359375,\n      'ha': 351,\n      'o': 'm 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 '\n    },\n    'timeSig2': {\n      'x_min': -1.359375,\n      'x_max': 458.6875,\n      'ha': 468,\n      'o': 'm 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 '\n    },\n    'timeSig3': {\n      'x_min': -1.359375,\n      'x_max': 409.6875,\n      'ha': 418,\n      'o': 'm 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 '\n    },\n    'timeSig4': {\n      'x_min': 0,\n      'x_max': 468.21875,\n      'ha': 478,\n      'o': 'm 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 '\n    },\n    'timeSig5': {\n      'x_min': 0,\n      'x_max': 409.6875,\n      'ha': 418,\n      'o': 'm 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 '\n    },\n    'timeSig6': {\n      'x_min': 0,\n      'x_max': 475.03125,\n      'ha': 485,\n      'o': 'm 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 '\n    },\n    'timeSig7': {\n      'x_min': 0,\n      'x_max': 442.359375,\n      'ha': 451,\n      'o': 'm 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 '\n    },\n    'timeSig8': {\n      'x_min': 0,\n      'x_max': 488.640625,\n      'ha': 499,\n      'o': 'm 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 '\n    },\n    'timeSig9': {\n      'x_min': 0,\n      'x_max': 475.03125,\n      'ha': 485,\n      'o': 'm 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 '\n    },\n    'timeSigCommon': {\n      'x_min': -1.359375,\n      'x_max': 556.6875,\n      'ha': 568,\n      'o': 'm 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 '\n    },\n    'timeSigCutCommon': {\n      'x_min': 0,\n      'x_max': 556.6875,\n      'ha': 568,\n      'o': 'm 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 '\n    },\n    'noteheadDoubleWhole': {\n      'x_min': 0,\n      'x_max': 902.421875,\n      'ha': 921,\n      'o': 'm 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 '\n    },\n    'noteheadWhole': {\n      'x_min': 0,\n      'x_max': 619.3125,\n      'ha': 632,\n      'o': 'm 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 '\n    },\n    'noteheadHalf': {\n      'x_min': 0,\n      'x_max': 428.75,\n      'ha': 438,\n      'o': 'm 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 '\n    },\n    'noteheadBlack': {\n      'x_min': 0,\n      'x_max': 428.75,\n      'ha': 438,\n      'o': 'm 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 '\n    },\n    'noteheadXWhole': {\n      'x_min': 0,\n      'x_max': 598.890625,\n      'ha': 611,\n      'o': 'm 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 '\n    },\n    'noteheadXHalf': {\n      'x_min': 0,\n      'x_max': 406.96875,\n      'ha': 415,\n      'o': 'm 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 '\n    },\n    'noteheadXBlack': {\n      'x_min': 0,\n      'x_max': 406.96875,\n      'ha': 415,\n      'o': 'm 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 '\n    },\n    'noteheadCircleX': {\n      'x_min': 0,\n      'x_max': 484.5625,\n      'ha': 494,\n      'o': 'm 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 '\n    },\n    'noteheadTriangleUpWhole': {\n      'x_min': 0,\n      'x_max': 630.203125,\n      'ha': 643,\n      'o': 'm 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 '\n    },\n    'noteheadTriangleUpHalf': {\n      'x_min': 0,\n      'x_max': 438.28125,\n      'ha': 447,\n      'o': 'm 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 '\n    },\n    'noteheadTriangleUpBlack': {\n      'x_min': -1.359375,\n      'x_max': 436.921875,\n      'ha': 446,\n      'o': 'm 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 '\n    },\n    'noteheadDiamondWhole': {\n      'x_min': 0,\n      'x_max': 627.46875,\n      'ha': 640,\n      'o': 'm 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 '\n    },\n    'noteheadDiamondHalf': {\n      'x_min': 0,\n      'x_max': 438.28125,\n      'ha': 447,\n      'o': 'm 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 '\n    },\n    'noteheadDiamondBlack': {\n      'x_min': 0,\n      'x_max': 432.828125,\n      'ha': 442,\n      'o': 'm 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 '\n    },\n    'augmentationDot': {\n      'x_min': 0,\n      'x_max': 133.390625,\n      'ha': 136,\n      'o': 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 '\n    },\n    'tremolo1': {\n      'x_min': -206.890625,\n      'x_max': 428.75,\n      'ha': 438,\n      'o': 'm 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 '\n    },\n    'flag8thUp': {\n      'x_min': -24.5,\n      'x_max': 317.140625,\n      'ha': 324,\n      'o': 'm -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 '\n    },\n    'flag8thDown': {\n      'x_min': -21.78125,\n      'x_max': 367.5,\n      'ha': 375,\n      'o': 'm 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 '\n    },\n    'flag16thUp': {\n      'x_min': -24.5,\n      'x_max': 317.140625,\n      'ha': 324,\n      'o': 'm -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 '\n    },\n    'flag16thDown': {\n      'x_min': -21.78125,\n      'x_max': 362.0625,\n      'ha': 369,\n      'o': 'm 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 '\n    },\n    'flag32ndUp': {\n      'x_min': -24.5,\n      'x_max': 315.78125,\n      'ha': 322,\n      'o': 'm -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 '\n    },\n    'flag32ndDown': {\n      'x_min': -21.78125,\n      'x_max': 366.140625,\n      'ha': 374,\n      'o': 'm 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 '\n    },\n    'flag64thUp': {\n      'x_min': -24.5,\n      'x_max': 314.421875,\n      'ha': 321,\n      'o': 'm -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 '\n    },\n    'flag64thDown': {\n      'x_min': -21.78125,\n      'x_max': 367.5,\n      'ha': 375,\n      'o': 'm 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 '\n    },\n    'flag128thUp': {\n      'x_min': -24.5,\n      'x_max': 313.0625,\n      'ha': 319,\n      'o': 'm -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 '\n    },\n    'flag128thDown': {\n      'x_min': -21.78125,\n      'x_max': 367.5,\n      'ha': 375,\n      'o': 'm 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 '\n    },\n    'accidentalFlat': {\n      'x_min': -21.78125,\n      'x_max': 251.8125,\n      'ha': 257,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '\n    },\n    'accidentalNatural': {\n      'x_min': 0,\n      'x_max': 239.5625,\n      'ha': 244,\n      'o': 'm 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 '\n    },\n    'accidentalSharp': {\n      'x_min': 0,\n      'x_max': 323.9375,\n      'ha': 331,\n      'o': 'm 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 '\n    },\n    'accidentalDoubleSharp': {\n      'x_min': 0,\n      'x_max': 367.5,\n      'ha': 375,\n      'o': 'm 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 '\n    },\n    'accidentalDoubleFlat': {\n      'x_min': -21.78125,\n      'x_max': 483.1875,\n      'ha': 493,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 '\n    },\n    'accidentalParensLeft': {\n      'x_min': -166.0625,\n      'x_max': -25.859375,\n      'ha': 0,\n      'o': 'm -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 '\n    },\n    'accidentalParensRight': {\n      'x_min': 25.859375,\n      'x_max': 164.6875,\n      'ha': 168,\n      'o': 'm 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 '\n    },\n    'accidentalQuarterToneFlatStein': {\n      'x_min': 0,\n      'x_max': 272.21875,\n      'ha': 278,\n      'o': 'm 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 '\n    },\n    'accidentalThreeQuarterTonesFlatZimmermann': {\n      'x_min': 0,\n      'x_max': 607.0625,\n      'ha': 619,\n      'o': 'm 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 '\n    },\n    'accidentalQuarterToneSharpStein': {\n      'x_min': 0,\n      'x_max': 193.28125,\n      'ha': 197,\n      'o': 'm 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 '\n    },\n    'accidentalThreeQuarterTonesSharpStein': {\n      'x_min': -1.359375,\n      'x_max': 455.96875,\n      'ha': 465,\n      'o': 'm 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 '\n    },\n    'accidentalBuyukMucennebFlat': {\n      'x_min': -171.5,\n      'x_max': 251.8125,\n      'ha': 257,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '\n    },\n    'accidentalBakiyeFlat': {\n      'x_min': -176.9375,\n      'x_max': 251.8125,\n      'ha': 257,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '\n    },\n    'accidentalKomaSharp': {\n      'x_min': -1.359375,\n      'x_max': 455.96875,\n      'ha': 465,\n      'o': 'm 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 '\n    },\n    'accidentalKucukMucennebSharp': {\n      'x_min': -1.359375,\n      'x_max': 255.890625,\n      'ha': 261,\n      'o': 'm 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 '\n    },\n    'articAccentAbove': {\n      'x_min': -348.4375,\n      'x_max': 24.5,\n      'ha': 25,\n      'o': 'm -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 '\n    },\n    'articAccentBelow': {\n      'x_min': -348.4375,\n      'x_max': 24.5,\n      'ha': 25,\n      'o': 'm -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 '\n    },\n    'articTenutoAbove': {\n      'x_min': 0,\n      'x_max': 318.5,\n      'ha': 325,\n      'o': 'm 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 '\n    },\n    'articTenutoBelow': {\n      'x_min': 0,\n      'x_max': 318.5,\n      'ha': 325,\n      'o': 'm 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 '\n    },\n    'articStaccatoAbove': {\n      'x_min': 0,\n      'x_max': 133.390625,\n      'ha': 136,\n      'o': 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 '\n    },\n    'articStaccatoBelow': {\n      'x_min': 0,\n      'x_max': 133.390625,\n      'ha': 136,\n      'o': 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 '\n    },\n    'articStaccatissimoAbove': {\n      'x_min': -73.5,\n      'x_max': 72.140625,\n      'ha': 74,\n      'o': 'm -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 '\n    },\n    'articStaccatissimoBelow': {\n      'x_min': -73.5,\n      'x_max': 72.140625,\n      'ha': 74,\n      'o': 'm -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 '\n    },\n    'articMarcatoAbove': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 '\n    },\n    'articMarcatoBelow': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 '\n    },\n    'fermataAbove': {\n      'x_min': -442.359375,\n      'x_max': 441,\n      'ha': 450,\n      'o': 'm -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 '\n    },\n    'fermataBelow': {\n      'x_min': -441,\n      'x_max': 439.640625,\n      'ha': 449,\n      'o': 'm -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 '\n    },\n    'breathMarkComma': {\n      'x_min': -1.359375,\n      'x_max': 193.28125,\n      'ha': 197,\n      'o': 'm 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 '\n    },\n    'breathMarkUpbow': {\n      'x_min': -170.140625,\n      'x_max': 168.78125,\n      'ha': 172,\n      'o': 'm -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 '\n    },\n    'caesura': {\n      'x_min': 0,\n      'x_max': 622.03125,\n      'ha': 635,\n      'o': 'm 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 '\n    },\n    'caesuraCurved': {\n      'x_min': 0,\n      'x_max': 503.609375,\n      'ha': 514,\n      'o': 'm 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 '\n    },\n    'restMaxima': {\n      'x_min': 0,\n      'x_max': 464.140625,\n      'ha': 474,\n      'o': 'm 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 '\n    },\n    'restDoubleWhole': {\n      'x_min': 0,\n      'x_max': 386.5625,\n      'ha': 394,\n      'o': 'm 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 '\n    },\n    'restWhole': {\n      'x_min': 0,\n      'x_max': 447.8125,\n      'ha': 457,\n      'o': 'm 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 '\n    },\n    'restHalf': {\n      'x_min': 0,\n      'x_max': 447.8125,\n      'ha': 457,\n      'o': 'm 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 '\n    },\n    'restQuarter': {\n      'x_min': 0,\n      'x_max': 300.8125,\n      'ha': 307,\n      'o': 'm 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 '\n    },\n    'rest8th': {\n      'x_min': 0,\n      'x_max': 349.8125,\n      'ha': 357,\n      'o': 'm 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 '\n    },\n    'rest16th': {\n      'x_min': 0,\n      'x_max': 450.53125,\n      'ha': 460,\n      'o': 'm 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 '\n    },\n    'rest32nd': {\n      'x_min': 0,\n      'x_max': 551.25,\n      'ha': 563,\n      'o': 'm 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 '\n    },\n    'rest64th': {\n      'x_min': -1.359375,\n      'x_max': 651.96875,\n      'ha': 665,\n      'o': 'm 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 '\n    },\n    'rest128th': {\n      'x_min': -1.359375,\n      'x_max': 752.703125,\n      'ha': 768,\n      'o': 'm 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 '\n    },\n    'dynamicPiano': {\n      'x_min': -53.078125,\n      'x_max': 513.140625,\n      'ha': 485,\n      'o': 'm 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 '\n    },\n    'dynamicMezzo': {\n      'x_min': 46.28125,\n      'x_max': 669.671875,\n      'ha': 563,\n      'o': 'm 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 '\n    },\n    'dynamicForte': {\n      'x_min': -118.421875,\n      'x_max': 597.53125,\n      'ha': 381,\n      'o': 'm 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 '\n    },\n    'dynamicRinforzando': {\n      'x_min': 78.9375,\n      'x_max': 485.921875,\n      'ha': 417,\n      'o': 'm 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 '\n    },\n    'dynamicSforzando': {\n      'x_min': 70.78125,\n      'x_max': 378.390625,\n      'ha': 315,\n      'o': 'm 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 '\n    },\n    'dynamicZ': {\n      'x_min': 29.9375,\n      'x_max': 420.578125,\n      'ha': 371,\n      'o': 'm 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 '\n    },\n    'ornamentTrill': {\n      'x_min': -340.28125,\n      'x_max': 338.921875,\n      'ha': 346,\n      'o': 'm -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 '\n    },\n    'ornamentTurn': {\n      'x_min': -423.3125,\n      'x_max': 421.9375,\n      'ha': 431,\n      'o': 'm -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 '\n    },\n    'ornamentTurnSlash': {\n      'x_min': -423.3125,\n      'x_max': 421.9375,\n      'ha': 431,\n      'o': 'm -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 '\n    },\n    'ornamentMordent': {\n      'x_min': -402.890625,\n      'x_max': 401.53125,\n      'ha': 410,\n      'o': 'm -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 '\n    },\n    'ornamentShortTrill': {\n      'x_min': -402.890625,\n      'x_max': 401.53125,\n      'ha': 410,\n      'o': 'm -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 '\n    },\n    'ornamentTremblement': {\n      'x_min': -571.671875,\n      'x_max': 570.3125,\n      'ha': 582,\n      'o': 'm -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 '\n    },\n    'ornamentPrecompAppoggTrill': {\n      'x_min': -571.671875,\n      'x_max': 570.3125,\n      'ha': 582,\n      'o': 'm -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 '\n    },\n    'ornamentPrecompSlideTrillDAnglebert': {\n      'x_min': -590.71875,\n      'x_max': 589.359375,\n      'ha': 601,\n      'o': 'm -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 '\n    },\n    'ornamentPrecompSlideTrillBach': {\n      'x_min': -590.71875,\n      'x_max': 589.359375,\n      'ha': 601,\n      'o': 'm 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 '\n    },\n    'ornamentPrecompTrillSuffixDandrieu': {\n      'x_min': -590.71875,\n      'x_max': 589.359375,\n      'ha': 601,\n      'o': 'm 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 '\n    },\n    'ornamentPrecompDoubleCadenceUpperPrefix': {\n      'x_min': -597.53125,\n      'x_max': 596.171875,\n      'ha': 608,\n      'o': 'm -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 '\n    },\n    'ornamentPrecompDoubleCadenceUpperPrefixTurn': {\n      'x_min': -597.53125,\n      'x_max': 596.171875,\n      'ha': 608,\n      'o': 'm -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 '\n    },\n    'ornamentPrecompTrillLowerSuffix': {\n      'x_min': -597.53125,\n      'x_max': 596.171875,\n      'ha': 608,\n      'o': 'm -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 '\n    },\n    'stringsDownBow': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 '\n    },\n    'stringsUpBow': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 '\n    },\n    'stringsHarmonic': {\n      'x_min': -122.5,\n      'x_max': 121.140625,\n      'ha': 124,\n      'o': 'm -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 '\n    },\n    'pluckedSnapPizzicatoAbove': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 '\n    },\n    'pluckedSnapPizzicatoBelow': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 '\n    },\n    'pluckedLeftHandPizzicato': {\n      'x_min': 0,\n      'x_max': 319.859375,\n      'ha': 326,\n      'o': 'm 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 '\n    },\n    'keyboardPedalPed': {\n      'x_min': -1.359375,\n      'x_max': 1064.390625,\n      'ha': 1086,\n      'o': 'm 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 '\n    },\n    'keyboardPedalUp': {\n      'x_min': -1.359375,\n      'x_max': 592.078125,\n      'ha': 604,\n      'o': 'm 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 '\n    },\n    'pictChokeCymbal': {\n      'x_min': 0,\n      'x_max': 227.3125,\n      'ha': 232,\n      'o': 'm 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 '\n    },\n    'wiggleArpeggiatoUp': {\n      'x_min': 58.53125,\n      'x_max': 228.671875,\n      'ha': 294,\n      'o': 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 '\n    },\n    'arrowheadBlackUp': {\n      'x_min': -10.890625,\n      'x_max': 299.4375,\n      'ha': 294,\n      'o': 'm 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 '\n    },\n    'arrowheadBlackDown': {\n      'x_min': -10.890625,\n      'x_max': 298.078125,\n      'ha': 294,\n      'o': 'm 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 '\n    },\n    'vexAccidentalMicrotonal1': {\n      'x_min': -171.5,\n      'x_max': 483.1875,\n      'ha': 493,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 '\n    },\n    'vexAccidentalMicrotonal2': {\n      'x_min': -1.359375,\n      'x_max': 386.5625,\n      'ha': 394,\n      'o': 'm 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 '\n    },\n    'vexWiggleArpeggioUp': {\n      'x_min': 58.53125,\n      'x_max': 228.671875,\n      'ha': 294,\n      'o': 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 '\n    },\n    'vexNoteHeadMutedBreve': {\n      'x_min': 0,\n      'x_max': 370.21875,\n      'ha': 378,\n      'o': 'm 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 '\n    },\n    \"brassScoop\": {\n      \"x_min\": 1,\n      \"x_max\": 320,\n      \"y_min\": -373,\n      \"y_max\": 13,\n      \"ha\": 386,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 318,\n      \"o\": \"m 1 -482 l 1 -505 b 26 -537 1 -526 3 -537 l 35 -537 b 461 -12 194 -518 461 -289 b 438 19 461 13 451 19 b 410 -9 425 19 413 9 b 35 -425 357 -366 92 -403 b 1 -482 13 -433 1 -438 z\"\n    },\n    \"brassDoitMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 489,\n      \"y_min\": -40,\n      \"y_max\": 346,\n      \"ha\": 386,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 490,\n      \"o\": \"m 0 -3 l 0 -26 b 24 -58 0 -46 1 -58 l 33 -58 b 704 468 255 -58 683 186 b 681 498 704 494 693 498 b 654 471 668 498 658 488 b 33 55 550 118 91 76 b 0 -3 12 46 0 42 z\"\n    },\n    \"brassFallLipShort\": {\n      \"x_min\": 1,\n      \"x_max\": 293,\n      \"y_min\": -345,\n      \"y_max\": 42,\n      \"ha\": 387,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 293,\n      \"o\": \"m 1 35 l 1 6 b 26 -50 3 -40 10 -43 b 32 -52 27 -50 30 -50 b 376 -469 85 -73 327 -111 b 400 -497 379 -487 387 -497 b 422 -467 412 -497 422 -491 b 32 60 422 -187 177 40 l 22 60 b 1 35 4 60 1 52 z\"\n    },\n    \"brassLiftMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 811,\n      \"y_min\": 0,\n      \"y_max\": 852,\n      \"ha\": 852,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 812,\n      \"o\": \"m 33 0 b 49 17 40 0 49 10 b 71 63 52 35 56 49 b 212 115 102 95 154 59 b 239 186 230 134 239 160 b 236 210 239 194 238 202 b 256 249 239 225 243 236 b 397 301 288 281 340 245 b 425 372 416 320 425 346 b 422 396 425 380 423 387 b 442 435 425 410 429 422 b 583 487 474 467 526 431 b 611 557 602 505 611 531 b 608 582 611 566 609 573 b 628 621 611 596 615 608 b 769 672 660 652 711 618 b 796 743 788 691 796 717 b 793 768 796 752 795 759 b 814 806 796 782 801 793 b 955 858 845 838 897 804 b 982 929 973 877 982 903 b 979 953 982 937 981 945 b 999 992 982 968 986 979 b 1140 1045 1031 1024 1083 989 b 1168 1116 1161 1066 1168 1090 b 1138 1220 1168 1162 1145 1207 b 1135 1225 1135 1223 1135 1224 b 1129 1227 1133 1227 1130 1227 b 1117 1207 1122 1227 1117 1212 l 1117 1201 b 1109 1164 1117 1187 1117 1172 b 1100 1156 1107 1161 1104 1158 b 959 1104 1058 1128 995 1140 b 929 1032 936 1081 929 1056 b 932 1007 929 1024 930 1015 b 923 976 932 995 930 985 l 914 971 b 773 919 873 942 809 955 b 743 847 750 896 743 870 b 746 821 743 838 744 829 b 737 791 746 809 744 799 l 729 783 b 588 733 687 756 624 769 b 557 661 564 710 557 684 b 560 635 557 652 559 644 b 552 605 560 624 559 612 l 543 598 b 402 547 501 570 438 583 b 372 475 379 524 372 498 b 374 449 372 467 373 458 b 366 419 374 438 373 426 l 357 412 b 216 361 315 384 252 397 b 186 289 193 338 186 312 b 189 264 186 281 187 272 b 180 233 189 252 187 240 b 171 226 177 232 174 229 b 30 176 130 199 66 212 b 0 104 7 153 0 128 b 33 0 0 88 14 0 z\"\n    },\n    \"brassFallRoughMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 811,\n      \"y_min\": 0,\n      \"y_max\": 852,\n      \"ha\": 852,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 812,\n      \"o\": \"m 0 1116 b 27 1045 0 1090 7 1066 b 168 992 85 989 137 1024 b 189 953 181 979 186 968 b 186 929 187 945 186 937 b 213 858 186 903 194 877 b 354 806 271 804 323 838 b 374 768 367 793 372 782 b 372 743 373 759 372 752 b 399 672 372 717 380 691 b 540 621 456 618 508 652 b 560 582 553 608 557 596 b 557 557 559 573 557 566 b 585 487 557 531 566 505 b 726 435 642 431 694 467 b 746 396 739 422 743 410 b 743 372 744 387 743 380 b 770 301 743 346 752 320 b 912 249 828 245 880 281 b 932 210 924 236 929 225 b 929 186 930 202 929 194 b 956 115 929 160 937 134 b 1097 63 1014 59 1066 95 b 1119 17 1112 49 1116 35 b 1135 0 1119 10 1128 0 b 1168 104 1153 0 1168 91 b 1138 176 1168 128 1161 153 b 996 226 1102 212 1038 199 b 988 233 994 229 991 232 b 979 264 981 240 979 252 b 982 289 981 272 982 281 b 952 361 982 312 975 338 b 811 412 916 397 852 384 l 802 419 b 793 449 795 426 793 438 b 796 475 795 458 796 467 b 766 547 796 498 789 524 b 625 598 730 583 667 570 l 616 605 b 608 635 609 612 608 624 b 611 661 609 644 611 652 b 580 733 611 684 603 710 b 439 783 544 769 481 756 l 431 791 b 422 821 423 799 422 809 b 425 847 423 829 425 838 b 395 919 425 870 418 896 b 253 971 359 955 295 942 l 245 976 b 236 1007 238 985 236 995 b 239 1032 238 1015 239 1024 b 209 1104 239 1056 232 1081 b 68 1156 173 1140 109 1128 b 59 1164 63 1158 60 1161 b 50 1201 50 1172 50 1187 l 50 1207 b 39 1227 50 1212 46 1227 b 33 1225 37 1227 35 1227 b 30 1220 33 1224 33 1223 b 0 1116 23 1207 0 1162 z\"\n    },\n    \"brassBend\": {\n      \"x_min\": 0,\n      \"x_max\": 392,\n      \"y_min\": 0,\n      \"y_max\": 282,\n      \"ha\": 282,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 393,\n      \"o\": \"m 13 72 b 282 0 108 23 196 0 b 552 72 369 0 456 23 b 564 92 560 75 564 84 l 564 383 b 541 406 564 395 554 406 b 518 383 528 406 518 395 l 518 107 b 282 46 435 65 357 46 b 46 107 207 46 130 65 l 46 383 b 23 406 46 395 36 406 b 0 383 10 406 0 395 l 0 92 b 13 72 0 84 4 75 z\"\n    },\n    \"brassMuteClosed\": {\n      \"x_min\": 0,\n      \"x_max\": 272,\n      \"y_min\": 0,\n      \"y_max\": 272,\n      \"ha\": 272,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 272,\n      \"o\": \"m 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 l 392 219 l 219 219 l 219 392 l 173 392 l 173 219 z\"\n    },\n    \"brassMuteOpen\": {\n      \"x_min\": 0,\n      \"x_max\": 304,\n      \"y_min\": 0,\n      \"y_max\": 304,\n      \"ha\": 304,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 305,\n      \"o\": \"m 0 219 b 219 0 0 98 98 0 b 438 219 340 0 438 98 b 219 438 438 340 340 438 b 0 219 98 438 0 340 z m 219 392 b 392 219 314 392 392 314 b 219 46 392 124 314 46 b 46 219 124 46 46 124 b 219 392 46 314 124 392 z\"\n    },\n    \"brassFlip\": {\n      \"x_min\": 0,\n      \"x_max\": 379,\n      \"y_min\": 0,\n      \"y_max\": 282,\n      \"ha\": 282,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 379,\n      \"o\": \"m 23 0 b 46 23 36 0 46 10 l 46 337 l 508 4 b 523 0 513 1 517 0 b 541 9 530 0 536 3 b 546 22 544 13 546 17 b 536 42 546 29 541 36 l 36 402 b 23 406 33 405 27 406 b 0 383 12 406 0 395 l 0 23 b 23 0 0 10 10 0 z\"\n    },\n    \"brassJazzTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 620,\n      \"y_min\": 0,\n      \"y_max\": 245,\n      \"ha\": 245,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 620,\n      \"o\": \"m 0 121 b 16 107 0 114 4 108 b 84 143 26 107 76 137 b 118 160 92 150 108 160 b 141 143 125 160 131 154 b 265 10 147 135 253 24 b 294 0 271 3 282 0 b 321 7 305 0 315 3 b 498 160 321 7 478 158 b 521 143 505 160 513 154 b 647 10 528 135 635 24 b 675 0 652 3 664 0 b 703 7 687 0 697 3 b 874 186 713 16 855 164 b 893 220 881 196 893 212 b 873 245 890 235 883 243 b 796 194 847 245 815 213 l 792 190 b 765 176 780 179 772 176 b 740 190 755 176 747 183 b 629 325 727 202 644 312 b 593 347 616 338 605 347 b 562 334 583 346 575 344 b 528 298 549 323 539 310 l 406 176 b 389 168 406 176 399 168 b 374 176 384 168 379 170 b 245 325 360 192 245 325 b 200 353 232 343 219 351 b 168 340 190 353 181 350 l 17 156 b 0 121 10 147 0 132 z\"\n    },\n    \"brassSmear\": {\n      \"x_min\": 1,\n      \"x_max\": 306,\n      \"y_min\": 0,\n      \"y_max\": 170,\n      \"ha\": 170,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 307,\n      \"o\": \"m 7 107 b 36 122 13 107 22 112 b 92 151 55 137 65 151 b 183 89 125 151 161 112 b 189 84 184 88 187 86 l 193 79 b 308 0 219 50 264 0 b 439 117 396 0 438 102 b 441 128 439 121 441 124 b 433 141 441 135 439 141 b 416 130 429 141 423 137 b 343 94 390 107 370 94 b 269 153 315 94 294 121 l 265 158 b 144 245 239 190 180 245 b 6 134 62 245 10 143 b 1 114 3 125 1 118 b 7 107 1 108 4 107 z\"\n    }\n  },\n  'cssFontWeight': 'normal',\n  'ascender': 1903,\n  'underlinePosition': -125,\n  'cssFontStyle': 'normal',\n  'boundingBox': {\n    'yMin': -2065.375,\n    'xMin': -695.53125,\n    'yMax': 1901.578125,\n    'xMax': 1159.671875\n  },\n  'resolution': 1000,\n  'original_font_information': {\n    'postscript_name': 'Gonville-18',\n    'version_string': 'Version 0.1.8904 ',\n    'vendor_url': '',\n    'full_font_name': 'Gonville-18',\n    'font_family_name': 'Gonville-18',\n    'copyright': 'No copyright is claimed on this font file.',\n    'description': '',\n    'trademark': '',\n    'designer': '',\n    'designer_url': '',\n    'unique_font_identifier': 'FontForge 2.0 : Gonville-18 : 17-3-2010',\n    'license_url': '',\n    'license_description': '',\n    'manufacturer_name': '',\n    'font_sub_family_name': '18'\n  },\n  'descender': -2066,\n  'familyName': 'Gonville-18',\n  'lineHeight': 4093,\n  'underlineThickness': 50\n};\n","export const GonvilleMetrics = {\n  name: 'Gonville',\n  smufl: false,\n  stave: {\n    padding: 12,\n  },\n\n  clef: {\n    'default': {\n      point: 40,\n      width: 26\n    },\n    'small': {\n      point: 32,\n      width: 20,\n    },\n\n    annotations: {\n      '8va': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 20,\n          treble: {\n            line: -1.2,\n            shiftX: 11,\n          },\n        },\n        small: {\n          point: 18,\n          treble: {\n            line: -0.4,\n            shiftX: 8,\n          },\n        }\n      },\n      '8vb': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 20,\n          treble: {\n            line: 6.3,\n            shiftX: 10,\n          },\n          bass: {\n            line: 4,\n            shiftX: 1,\n          }\n        },\n        small: {\n          point: 18,\n          treble: {\n            line: 5.8,\n            shiftX: 6,\n          },\n          bass: {\n            line: 3.5,\n            shiftX: 0.5,\n          }\n        }\n      }\n    },\n\n    // May not need these anymore\n    lineCount: {\n      '8': { point: 55, shiftY: 14 },\n      '7': { point: 47, shiftY: 8 },\n      '6': { point: 40, shiftY: 1 },\n      '5': { point: 30, shiftY: -6 },\n      '4': { point: 23, shiftY: -12 },\n    }\n  },\n\n  pedalMarking: {\n    up: {\n      point: 40\n    },\n    down: {\n      point: 40\n    }\n  },\n\n  tremolo: {\n    default: {\n      point: 40,\n      spacing: 4,\n      offsetYStemUp: -9,\n      offsetYStemDown: -21,\n      offsetXStemUp: 6,\n      offsetXStemDown: -2,\n    },\n    grace: {\n      point: 30,\n      spacing: 4,\n      offsetYStemUp: -9,\n      offsetYStemDown: -21,\n      offsetXStemUp: 6,\n      offsetXStemDown: -2,\n    }\n  },\n\n  // These are for numeric digits, such as in time signatures\n  digits: {\n    point: 40,\n    tupletPoint: 28,\n  },\n\n  stem: {\n    // These are stem (Y) offsets to the note heads. To shift the\n    // noteheads (x-position) themselves, see glyphs.notehead.custom.\n    noteHead: {\n      noteheadTriangleUpHalf: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpBlack: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpWhole: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXHalf: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXBlack: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXWhole: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadBlack: {\n        offsetYBaseStemDown: 2,\n      },\n      noteheadSquareWhite: {\n        offsetYBaseStemDown: -5,\n        offsetYBaseStemUp: 5,\n      }\n    }\n  },\n\n  glyphs: {\n    textNote: {\n      point: 40,\n      default: {\n      },\n      ornamentTrill: {\n        shiftX: -5,\n        shiftY: 4,\n      }\n    },\n    noteHead: {\n      custom: {\n        'noteheadDiamondWholeStemUp': {\n          shiftX: -6,\n        },\n        'noteheadCircleXStemUp': {\n          shiftX: -1.5,\n        },\n        'noteheadXWholeStemUp': {\n          shiftX: -5,\n        },\n        'noteheadTriangleUpWholeStemUp': {\n          shiftX: -6,\n        },\n      },\n    },\n    chordSymbol: {\n      global: {\n        superscriptOffset: -400,\n        subscriptOffset: 300,\n        kerningOffset: -250,\n        lowerKerningText:  ['D', 'F', 'P', 'T', 'V', 'Y'],\n        upperKerningText:  ['A', 'L'],\n        spacing: 100,\n        superSubRatio: 0.66\n      },\n      csymDiminished: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymHalfDiminished: {\n        scale: 0.8,\n        leftSideBearing: -32,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymAugmented: {\n        scale: 1,\n        leftSideBearing: 0,\n        advanceWidth: 530,\n        yOffset: 0\n      },\n      csymParensLeftTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 155,\n        yOffset: 250\n      },\n      csymParensRightTall: {\n        scale: 0.8,\n        leftSideBearing: -40,\n        advanceWidth: 189,\n        yOffset: 250\n      },\n      csymBracketLeftTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 328,\n        yOffset: 0\n      },\n      csymBracketRightTall: {\n        scale: 0.8,\n        leftSideBearing: 1,\n        advanceWidth: 600,\n        yOffset: 0\n      },\n      csymParensLeftVeryTall: {\n        scale: 0.9,\n        leftSideBearing: 0,\n        advanceWidth: 121,\n        yOffset: 350\n      },\n      csymParensRightVeryTall: {\n        scale: 0.9,\n        leftSideBearing: 50,\n        advanceWidth: 111,\n        yOffset: 350\n      },\n      csymDiagonalArrangementSlash: {\n        scale: 0.6,\n        leftSideBearing: -1,\n        advanceWidth: 990,\n        yOffset: 0\n      },\n      csymMinor: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 482,\n        yOffset: 0\n      },\n      csymMajorSeventh: {\n        scale: 0.9,\n        leftSideBearing: 200,\n        yOffset: 0,\n        advanceWidth: 600\n      },\n      accidentalSharp: {\n        scale: 0.75,\n        leftSideBearing: 40,\n        advanceWidth: 250,\n        yOffset: -402\n      },\n      accidentalFlat: {\n        scale: 0.95,\n        leftSideBearing: -50,\n        advanceWidth: 208,\n        yOffset: -184\n      }\n    },\n    jazzOrnaments: {\n      brassScoop: {\n        scale: 1.0,\n        xOffset: -12,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 10\n      },\n      brassDoitMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassFallLipShort: {\n        scale: 1.0,\n        xOffset: 17,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassLiftMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 5,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassFallRoughMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 28,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassBend: {\n        scale: 1.0,\n        xOffset: 2,\n        yOffset: -8,\n        stemUpYOffset: 24,\n        reportedWidth: 5\n      },\n      brassMuteClosed: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -9,\n        stemUpYOffset: 24,\n        reportedWidth: 5\n      },\n      brassMuteOpen: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -7,\n        stemUpYOffset: 25,\n        reportedWidth: 5\n      },\n      brassFlip: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassJazzTurn: {\n        scale: 1.0,\n        xOffset: 6,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassSmear: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n    }\n  }\n};\n","export const PetalumaFont = {\n  \"glyphs\": {\n    \"bracketTop\": {\n      \"x_min\": 0,\n      \"x_max\": 508,\n      \"y_min\": 0,\n      \"y_max\": 370,\n      \"ha\": 370,\n      \"o\": \"m 22 0 b 122 0 55 1 89 0 l 157 0 b 713 376 425 0 622 137 b 732 467 724 406 732 436 b 726 514 732 482 730 498 b 711 533 723 528 719 533 b 693 526 707 533 700 530 b 674 498 683 520 678 508 b 635 406 662 467 652 435 b 310 164 560 281 458 193 b 154 151 258 154 206 151 b 39 154 117 151 78 154 b 1 120 17 154 4 145 b 0 84 0 108 0 96 b 0 20 0 63 1 40 b 22 0 0 4 7 0 z\"\n    },\n    \"bracketBottom\": {\n      \"x_min\": 0,\n      \"x_max\": 496,\n      \"y_min\": -393,\n      \"y_max\": 0,\n      \"ha\": 393,\n      \"o\": \"m 696 -566 b 711 -539 713 -566 708 -549 b 714 -521 713 -533 714 -527 b 713 -508 714 -517 713 -513 b 661 -327 706 -445 688 -384 b 392 -42 603 -203 513 -109 b 206 0 331 -7 266 0 b 160 -1 190 0 174 -1 b 26 -1 107 -1 66 -3 b 0 -19 12 -1 0 -4 l 0 -23 b 3 -50 1 -32 3 -42 b 1 -86 3 -62 1 -73 b 4 -118 1 -96 1 -108 b 45 -151 10 -145 23 -154 b 180 -143 89 -144 135 -145 b 621 -419 392 -135 523 -236 b 662 -539 641 -456 655 -497 b 696 -566 667 -557 680 -566 z\"\n    },\n    \"barlineTick\": {\n      \"x_min\": 0,\n      \"x_max\": 56.036101509664164,\n      \"y_min\": 876.905249806889,\n      \"y_max\": 1121.5430338167064,\n      \"ha\": 244.63778400981744,\n      \"o\": \"m 42 1263 b 66 1287 62 1261 66 1272 b 81 1583 65 1387 72 1485 b 35 1614 82 1610 53 1610 b 14 1591 17 1619 16 1604 b 0 1408 7 1525 0 1459 l 0 1292 b 42 1263 1 1263 23 1266 z\"\n    },\n    \"breathMarkTick\": {\n      \"x_min\": 0,\n      \"x_max\": 568,\n      \"y_min\": 0,\n      \"y_max\": 621,\n      \"ha\": 621,\n      \"o\": \"m 258 0 b 278 39 276 0 274 24 b 279 56 279 45 279 50 l 279 73 b 278 117 279 88 278 102 b 281 148 278 127 279 138 b 536 600 312 330 387 487 b 744 719 600 651 670 690 b 815 779 775 730 808 740 b 818 824 818 793 818 808 b 815 868 818 838 818 852 b 796 894 814 881 808 894 b 779 888 791 894 786 893 b 719 864 760 878 739 871 b 372 602 580 806 459 724 b 229 252 298 498 251 383 b 220 268 225 262 222 264 b 209 302 217 279 213 291 b 75 527 181 387 143 467 b 16 563 58 543 39 573 b 0 539 3 557 0 549 b 12 492 0 524 9 507 b 56 400 19 459 22 425 b 163 269 104 367 138 323 b 238 36 197 194 216 115 b 258 0 242 22 243 0 z\"\n    },\n    \"segno\": {\n      \"x_min\": 0,\n      \"x_max\": 798,\n      \"y_min\": -65,\n      \"y_max\": 806,\n      \"ha\": 871,\n      \"o\": \"m 16 -94 b 66 -69 39 -92 53 -85 b 177 59 102 -26 138 17 b 543 456 298 192 420 324 b 726 300 615 420 680 373 b 753 217 744 271 753 243 b 655 112 753 170 719 131 b 599 104 636 107 618 104 b 461 173 544 104 495 128 b 432 190 454 183 444 190 b 409 179 425 190 418 187 b 359 118 390 160 373 141 b 341 72 347 101 341 86 b 373 24 341 56 351 40 b 409 6 384 17 396 10 b 550 -13 454 -12 501 -14 b 599 -6 566 -12 583 -10 b 864 213 720 27 806 104 b 886 300 878 242 886 271 b 857 395 886 331 877 363 b 799 467 840 420 821 445 b 648 572 755 513 704 546 b 1110 1083 802 743 955 914 b 1140 1129 1123 1097 1136 1110 b 1149 1148 1142 1135 1149 1142 b 1145 1153 1149 1149 1148 1152 b 1123 1161 1139 1158 1130 1161 b 1109 1156 1119 1161 1113 1159 b 1089 1138 1102 1151 1094 1145 b 946 988 1040 1089 989 1041 b 595 602 834 855 711 732 l 590 598 l 549 615 b 432 793 462 647 432 723 b 534 888 432 851 474 888 b 671 834 588 888 631 864 b 710 818 684 824 696 818 b 724 821 714 818 719 819 b 809 883 757 834 788 852 b 816 901 814 890 816 896 b 802 923 816 910 812 916 b 706 984 770 945 742 971 b 593 1011 668 998 631 1011 b 516 991 567 1011 541 1005 b 333 799 433 949 380 876 b 302 693 312 765 302 729 b 330 589 302 658 311 624 b 469 488 360 533 415 511 b 485 482 475 487 480 485 b 266 249 412 405 338 327 b 121 88 217 196 170 141 b 9 -65 78 40 37 -7 b 0 -85 4 -72 0 -79 b 16 -94 0 -91 4 -94 z m 251 350 b 363 436 285 348 353 403 b 354 456 366 448 360 452 b 271 518 327 477 298 497 b 243 528 261 526 252 528 b 210 513 232 528 222 523 b 157 454 190 494 176 472 b 141 428 147 444 141 436 b 158 406 141 420 147 413 b 216 361 180 393 197 376 b 245 350 225 356 235 350 b 251 350 246 350 249 350 z m 861 536 b 927 575 890 539 909 557 b 965 628 952 598 965 613 b 926 680 965 644 952 658 b 865 713 900 701 883 713 b 805 667 845 713 828 698 b 768 611 791 649 770 631 b 812 564 766 589 798 582 b 861 536 824 550 840 537 z\"\n    },\n    \"coda\": {\n      \"x_min\": 0,\n      \"x_max\": 1380,\n      \"y_min\": -196,\n      \"y_max\": 1037,\n      \"ha\": 1233,\n      \"o\": \"m 1028 -282 b 1057 -245 1045 -282 1053 -261 b 1060 -203 1060 -232 1060 -217 b 1063 9 1060 -132 1061 -62 b 1390 194 1192 22 1303 81 b 1531 543 1467 298 1512 415 b 1532 556 1531 547 1532 552 b 1904 559 1656 557 1780 559 b 1950 582 1920 559 1941 569 b 1987 674 1970 609 1987 638 b 1984 698 1987 681 1986 690 b 1950 700 1973 698 1961 700 l 1941 700 l 1545 696 b 1535 776 1545 723 1541 749 b 1103 1113 1477 996 1326 1107 b 1080 1115 1096 1115 1087 1115 b 1081 1322 1080 1184 1080 1253 b 1079 1467 1083 1371 1081 1418 b 1061 1493 1079 1476 1080 1493 l 1060 1493 b 1028 1467 1044 1490 1031 1485 b 1020 1403 1025 1446 1020 1424 b 1017 1110 1020 1305 1018 1208 l 962 1106 b 569 914 808 1087 671 1035 b 451 683 510 844 472 766 l 161 678 b 118 680 148 678 132 680 b 79 670 101 680 86 678 b 0 544 48 636 29 592 l 37 544 l 429 549 b 428 518 428 539 428 528 b 488 285 428 435 458 360 b 681 81 526 192 593 124 b 946 9 763 40 854 19 b 1008 6 966 7 988 6 b 1005 -137 1008 -42 1005 -89 b 1012 -243 1005 -173 1005 -209 b 1028 -282 1015 -258 1011 -282 z m 1008 180 b 660 264 886 181 770 212 b 524 471 570 305 524 374 b 528 524 524 488 526 505 l 533 549 b 792 552 619 550 706 550 b 1009 553 865 553 937 552 b 1008 180 1009 428 1008 288 z m 577 684 b 766 874 618 763 678 828 b 989 932 837 912 913 923 b 1015 933 998 932 1007 933 b 1014 822 1015 896 1014 860 b 1011 688 1012 791 1012 743 z m 1067 184 b 1071 553 1070 307 1068 429 b 1439 556 1194 553 1316 554 b 1437 554 1439 554 1437 554 b 1341 337 1413 478 1387 402 b 1119 192 1286 261 1211 212 b 1067 184 1102 189 1084 186 z m 1074 690 b 1079 935 1077 772 1077 852 b 1326 855 1166 932 1250 909 b 1446 694 1385 814 1426 759 b 1269 693 1387 694 1328 693 b 1074 690 1204 693 1139 691 z\"\n    },\n    \"gClef\": {\n      \"x_min\": 0,\n      \"x_max\": 664,\n      \"y_min\": -559,\n      \"y_max\": 1009,\n      \"ha\": 1568,\n      \"o\": \"m 343 -805 b 366 -801 350 -805 357 -804 b 409 -773 383 -795 397 -786 b 582 -328 528 -648 577 -497 b 583 -294 582 -315 583 -294 b 612 -279 583 -294 603 -282 b 747 -197 660 -256 706 -230 b 949 143 857 -109 920 10 b 956 206 955 164 956 186 b 791 384 956 297 906 363 b 704 393 762 390 733 393 b 498 336 632 393 563 374 b 481 325 490 331 481 325 l 444 465 b 442 485 442 472 442 485 b 609 880 442 485 589 746 b 619 996 616 919 619 958 b 613 1084 619 1027 618 1056 b 534 1387 599 1188 560 1286 b 482 1453 527 1417 517 1453 b 422 1407 456 1453 438 1428 b 305 1063 348 1305 312 1188 b 304 1002 304 1043 304 1022 b 338 654 304 886 323 769 b 343 629 338 645 341 636 b 144 356 278 537 206 451 b 23 144 101 288 53 220 b 0 20 7 107 0 63 b 82 -210 0 -69 30 -160 b 207 -288 112 -239 160 -271 b 410 -328 274 -312 340 -328 b 474 -324 431 -328 452 -327 l 491 -321 b 491 -341 491 -321 492 -334 b 402 -585 475 -428 454 -513 b 294 -668 374 -622 348 -664 b 271 -693 278 -670 271 -680 b 274 -708 271 -698 272 -703 b 302 -775 282 -730 292 -753 b 343 -805 311 -795 325 -805 z m 410 -160 b 311 -147 360 -160 311 -147 b 307 -98 311 -147 307 -127 b 314 -33 307 -79 308 -56 b 429 131 328 36 377 85 b 441 138 433 135 438 138 b 449 122 446 138 448 132 b 490 -131 462 37 484 -46 b 490 -153 491 -140 490 -153 b 410 -160 490 -153 452 -163 z m 252 -135 b 196 -121 232 -134 215 -127 b 117 -69 158 -108 127 -94 b 111 -32 112 -58 111 -45 b 117 19 111 -16 114 1 b 130 56 118 27 127 52 b 324 337 186 156 253 246 l 384 416 l 395 384 b 416 291 406 348 416 291 b 350 213 416 291 376 239 b 243 -42 278 143 243 55 b 251 -117 243 -66 246 -91 b 252 -135 252 -122 252 -127 z m 569 -131 l 563 -91 b 510 168 552 3 530 78 b 513 192 508 179 508 186 b 624 202 550 199 586 202 b 730 192 660 202 694 199 b 850 141 773 183 816 176 b 858 134 852 138 855 135 b 595 -121 801 19 716 -68 z m 400 717 b 382 922 389 786 382 854 b 481 1286 382 1047 408 1169 b 507 1125 498 1233 507 1179 b 500 1040 507 1097 504 1068 b 400 717 481 927 455 818 z\"\n    },\n    \"cClef\": {\n      \"x_min\": 0,\n      \"x_max\": 731,\n      \"y_min\": -543,\n      \"y_max\": 543,\n      \"ha\": 1086,\n      \"o\": \"m 615 -770 b 881 -684 710 -770 801 -739 b 1020 -395 986 -612 1020 -510 b 1017 -334 1020 -374 1018 -354 b 769 -62 1007 -209 896 -75 b 746 -60 762 -60 755 -60 b 639 -73 710 -60 675 -69 b 524 -109 598 -79 560 -92 b 528 -36 526 -85 528 -60 b 527 -4 528 -26 528 -14 b 528 39 527 10 528 24 b 526 99 528 59 527 79 b 592 94 549 95 570 94 b 648 99 611 94 629 95 b 912 157 744 94 844 117 b 1053 377 1009 215 1053 284 b 1050 425 1053 393 1053 409 b 914 665 1037 521 986 602 b 717 753 855 717 791 753 b 626 734 688 753 658 747 l 462 665 b 347 500 374 628 347 580 b 350 449 347 484 348 468 b 392 419 353 428 367 416 b 492 438 425 425 459 428 b 541 498 524 448 541 468 b 540 514 541 503 541 508 b 537 546 537 524 537 536 b 573 639 537 580 550 611 b 606 657 582 649 593 657 l 609 657 b 716 622 647 652 684 647 b 834 372 801 556 834 469 b 831 323 834 356 832 338 b 743 187 825 266 795 217 b 710 176 732 180 720 176 b 694 179 704 176 700 177 b 527 223 638 193 582 206 b 495 229 516 228 505 229 b 454 220 481 229 468 225 b 395 189 432 213 415 200 b 363 180 384 186 374 181 b 348 168 356 179 348 176 b 340 161 343 167 340 164 b 347 150 340 157 343 154 b 356 147 348 148 353 147 b 364 92 361 130 363 111 b 369 -37 367 49 369 6 b 363 -154 369 -76 367 -115 b 357 -236 360 -183 357 -210 b 376 -264 357 -253 361 -259 b 456 -289 402 -284 429 -289 b 521 -282 478 -289 500 -285 b 549 -255 537 -279 546 -271 b 598 -177 556 -225 577 -202 b 622 -164 605 -168 613 -164 b 636 -167 626 -164 631 -166 b 749 -225 678 -177 714 -199 b 848 -405 814 -276 848 -337 b 824 -507 848 -436 840 -471 b 657 -657 792 -582 730 -625 b 608 -668 638 -664 622 -668 b 534 -602 572 -668 547 -645 b 513 -575 530 -589 523 -575 b 507 -576 510 -575 508 -575 b 478 -582 497 -580 488 -582 b 405 -570 454 -582 428 -570 b 389 -572 399 -570 395 -570 l 363 -572 b 321 -575 348 -572 333 -569 l 321 631 b 323 662 323 641 323 652 b 315 716 323 681 321 698 b 304 736 314 723 317 736 l 302 736 b 281 716 294 734 285 729 b 275 665 276 700 275 683 l 275 382 b 276 99 275 288 275 193 b 279 -170 278 10 276 -81 b 284 -399 282 -246 284 -323 b 282 -629 284 -475 282 -553 b 289 -721 282 -660 289 -690 b 300 -736 289 -727 291 -736 b 312 -724 307 -736 310 -730 b 321 -667 323 -706 321 -687 l 321 -632 l 328 -644 l 340 -657 b 510 -757 386 -707 445 -740 b 615 -770 546 -766 580 -770 z m 131 -782 b 141 -755 138 -782 140 -773 b 147 -490 143 -667 145 -577 b 160 207 150 -258 153 -24 b 168 618 164 344 158 481 b 81 768 173 690 132 732 b 45 782 66 778 55 782 b 3 740 26 782 13 768 b 0 724 1 736 0 730 l 1 710 b 4 596 4 672 4 634 l 4 382 b 9 102 4 288 4 196 b 17 -301 13 -32 10 -166 l 17 -672 b 50 -736 17 -701 27 -720 b 109 -772 69 -749 91 -759 b 131 -782 120 -778 127 -782 z\"\n    },\n    \"fClef\": {\n      \"x_min\": 0,\n      \"x_max\": 776,\n      \"y_min\": -496,\n      \"y_max\": 216,\n      \"ha\": 712,\n      \"o\": \"m 402 -706 b 804 -405 592 -678 716 -566 b 876 -53 861 -298 874 -183 b 868 33 876 -32 873 1 b 560 311 845 217 723 311 b 524 310 549 311 536 311 b 131 134 373 297 239 242 b 17 -29 84 86 37 39 b 9 -89 12 -50 9 -71 b 112 -238 9 -154 43 -206 b 124 -243 117 -239 120 -242 b 186 -261 145 -255 166 -261 b 268 -228 215 -261 242 -249 b 351 -59 325 -181 351 -124 b 343 10 351 -36 348 -13 b 340 36 341 19 340 27 b 409 105 340 75 363 102 b 441 107 420 107 431 107 b 624 36 510 107 573 86 b 744 -200 688 -27 724 -109 b 747 -230 747 -210 747 -222 b 717 -323 747 -264 736 -292 b 608 -445 688 -370 654 -410 b 307 -541 518 -513 415 -541 b 213 -541 275 -541 245 -541 b 39 -521 154 -541 96 -539 b 0 -552 17 -514 0 -531 b 1 -564 0 -556 0 -560 b 17 -611 6 -580 10 -596 b 101 -694 35 -648 50 -684 b 288 -714 164 -707 225 -714 b 402 -706 325 -714 363 -711 z m 972 -281 b 1070 -148 1024 -279 1070 -210 b 1025 -105 1070 -105 1045 -112 b 989 -127 1004 -96 998 -114 b 949 -249 963 -164 963 -209 b 969 -281 943 -265 949 -281 b 972 -281 971 -281 971 -281 z m 1018 92 b 1080 118 1041 91 1068 96 b 1117 219 1099 150 1117 180 b 1113 252 1117 229 1116 240 b 1045 288 1102 297 1068 276 b 1017 262 1028 297 1024 274 b 984 124 989 220 996 170 b 1008 91 979 108 986 91 b 1018 92 1011 91 1015 92 z\"\n    },\n    \"unpitchedPercussionClef1\": {\n      \"x_min\": 0,\n      \"x_max\": 379.13761966945304,\n      \"y_min\": -250,\n      \"y_max\": 250,\n      \"ha\": 500,\n      \"o\": \"m 144 -341 b 207 -320 167 -341 189 -331 b 217 -301 215 -315 217 -308 b 210 -262 217 -289 210 -275 b 228 187 212 -112 209 37 b 228 287 228 220 229 253 b 174 353 228 336 222 343 b 120 359 157 357 138 359 b 48 357 96 359 72 356 b 17 323 29 357 19 344 b 7 120 16 255 9 187 b 6 -109 6 43 6 -33 l 6 -204 b 0 -251 6 -220 0 -235 b 3 -269 0 -256 0 -262 b 127 -340 24 -330 79 -328 b 144 -341 132 -341 138 -341 z m 481 -360 b 507 -357 491 -360 500 -360 b 546 -295 541 -346 547 -325 b 536 79 543 -170 540 -46 b 523 311 533 157 534 235 b 475 359 518 340 508 359 b 425 360 459 359 442 360 b 400 359 416 360 409 360 b 337 294 348 353 340 347 l 337 -73 b 336 -264 337 -137 337 -200 b 343 -294 336 -274 338 -284 b 481 -360 359 -330 431 -360 z\"\n    },\n    \"6stringTabClef\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -768,\n      \"y_max\": 767,\n      \"ha\": 1535,\n      \"o\": \"m 114 -320 b 127 -304 120 -320 124 -315 b 171 -174 141 -261 158 -219 b 222 -135 179 -147 196 -137 b 426 -122 289 -131 359 -128 b 498 -164 462 -120 482 -127 b 628 -301 521 -226 575 -264 b 631 -288 631 -295 631 -291 b 628 -269 631 -281 629 -276 b 569 -134 616 -220 589 -179 b 408 225 514 -14 462 107 b 314 357 384 274 351 318 b 278 380 298 372 288 379 b 251 351 268 380 261 372 b 4 -209 156 171 75 -17 b 0 -228 1 -215 0 -222 b 19 -258 0 -240 7 -249 b 102 -314 45 -279 75 -294 b 114 -320 107 -318 111 -320 z m 154 -953 b 130 -933 135 -953 130 -948 l 130 -865 l 128 -865 b 135 -788 130 -838 124 -808 b 203 -769 145 -769 180 -776 b 259 -762 223 -765 242 -762 b 441 -852 330 -762 386 -805 b 449 -867 446 -858 449 -863 b 436 -884 449 -874 444 -878 b 318 -942 402 -914 363 -935 b 154 -953 264 -950 209 -953 z m 245 -1106 b 281 -1104 256 -1106 269 -1106 b 511 -888 400 -1094 511 -1035 b 454 -688 511 -814 504 -744 b 448 -678 449 -685 448 -681 b 454 -667 448 -675 449 -671 b 504 -497 503 -619 507 -559 b 324 -288 500 -383 436 -308 b 295 -287 314 -287 304 -287 b 282 -287 291 -287 287 -287 b 115 -330 223 -287 168 -307 b 94 -366 102 -336 94 -348 l 94 -370 b 96 -435 96 -392 96 -413 b 73 -858 89 -576 71 -717 b 78 -919 73 -878 78 -899 b 72 -950 78 -930 76 -940 b 63 -992 66 -965 63 -978 b 66 -1015 63 -999 65 -1008 b 173 -1104 84 -1106 84 -1106 b 245 -1106 197 -1104 220 -1104 z m 161 -622 b 147 -618 156 -622 151 -621 b 140 -600 141 -612 140 -606 b 144 -564 140 -589 144 -575 b 143 -554 144 -560 144 -557 l 143 -546 b 220 -451 144 -467 143 -465 b 278 -445 239 -446 259 -444 b 418 -497 328 -445 376 -461 b 429 -516 426 -504 429 -510 b 415 -533 429 -521 423 -527 b 219 -608 357 -579 287 -590 b 215 -609 217 -608 216 -609 b 161 -622 197 -609 177 -622 z m 425 6 b 360 20 403 17 382 20 b 274 14 331 20 302 14 l 246 14 l 340 206 b 425 6 369 137 395 75 z m 369 438 b 374 439 370 438 372 438 b 384 462 383 444 384 452 l 384 474 b 390 697 386 547 390 622 b 373 1002 390 799 390 901 l 533 1002 b 560 1001 541 1004 552 1001 b 573 1007 567 1001 572 1002 b 546 1050 579 1025 559 1038 b 536 1056 543 1053 539 1053 b 324 1104 472 1102 397 1104 b 72 1090 238 1104 154 1099 b 55 1093 66 1090 60 1092 b 37 1073 46 1093 37 1089 b 60 1045 37 1061 48 1051 b 203 1001 105 1022 151 1001 b 233 1004 213 1001 223 1002 b 246 1005 238 1004 243 1005 b 272 975 264 1005 272 996 b 272 965 272 972 272 969 b 258 596 264 842 265 719 b 315 474 253 540 272 504 l 343 455 b 369 438 351 448 357 438 z\"\n    },\n    \"timeSig0\": {\n      \"x_min\": 20,\n      \"x_max\": 513,\n      \"y_min\": -358.159536277652,\n      \"y_max\": 359,\n      \"ha\": 717.159536277652,\n      \"o\": \"m 341 -516 b 420 -510 367 -516 395 -514 b 675 -338 533 -494 622 -448 b 737 -92 716 -256 734 -171 b 739 -35 739 -73 739 -53 b 680 305 739 86 720 207 b 400 517 622 449 537 517 b 337 514 380 517 359 517 b 289 507 321 511 305 513 b 91 317 192 477 127 412 b 29 9 50 212 29 108 b 217 -458 29 -157 88 -312 b 341 -516 251 -494 291 -518 z m 412 -452 b 359 -425 393 -452 376 -444 b 187 14 242 -301 179 -158 b 268 334 193 127 212 235 b 387 448 295 383 330 428 b 406 452 395 451 400 452 b 428 444 413 452 420 449 b 517 324 471 413 497 372 b 586 -29 560 222 586 86 b 556 -271 586 -112 585 -193 b 468 -422 536 -327 508 -377 b 412 -452 449 -442 431 -452 z\"\n    },\n    \"timeSig1\": {\n      \"x_min\": 20,\n      \"x_max\": 283,\n      \"y_min\": -364,\n      \"y_max\": 366,\n      \"ha\": 730,\n      \"o\": \"m 264 -524 b 357 -510 297 -524 325 -516 b 374 -490 369 -508 374 -501 b 380 -438 376 -472 380 -455 l 406 246 b 408 301 408 265 408 282 b 400 445 408 348 405 396 b 288 527 395 491 338 527 b 253 520 276 527 264 526 b 240 508 249 517 245 513 b 49 409 192 445 127 413 b 29 396 33 408 29 403 b 32 380 29 392 30 386 b 59 363 36 366 49 364 b 164 348 95 356 130 348 b 222 357 183 348 203 351 b 238 361 228 360 233 360 b 252 334 248 361 252 353 b 243 59 252 242 249 150 b 219 -490 229 -124 233 -307 b 264 -524 217 -516 232 -524 z\"\n    },\n    \"timeSig2\": {\n      \"x_min\": 20,\n      \"x_max\": 660.4636303241031,\n      \"y_min\": -378.7201231608281,\n      \"y_max\": 382,\n      \"ha\": 760.720123160828,\n      \"o\": \"m 99 -543 b 130 -533 111 -550 121 -540 b 255 -448 168 -501 213 -475 b 338 -425 282 -431 310 -425 b 392 -431 356 -425 374 -426 b 485 -462 423 -438 454 -451 b 648 -497 540 -482 595 -497 b 834 -441 711 -497 773 -480 b 950 -242 906 -395 958 -334 b 942 -210 950 -230 950 -215 b 912 -220 932 -204 920 -213 b 861 -264 894 -235 877 -248 b 775 -317 835 -289 808 -305 b 675 -334 742 -328 708 -334 b 510 -295 619 -334 563 -318 b 372 -264 465 -278 420 -264 b 305 -272 350 -264 328 -266 b 331 -242 318 -256 324 -249 b 490 -73 386 -187 438 -131 b 675 340 595 43 664 180 b 677 369 677 350 677 360 b 556 536 677 461 638 508 b 468 550 526 546 497 550 b 297 508 409 550 353 533 b 111 354 220 475 168 412 b 29 197 65 308 29 261 b 32 164 29 187 29 176 b 29 140 33 157 29 147 b 43 125 29 132 32 125 b 73 147 55 125 65 138 b 86 163 79 153 82 158 b 238 320 134 219 183 272 b 425 389 292 367 360 389 b 575 341 480 389 531 373 b 606 298 590 330 606 317 b 600 278 606 292 603 285 b 501 107 576 217 544 158 b 304 -104 439 33 372 -35 b 111 -356 230 -180 167 -265 b 84 -446 92 -386 84 -415 b 86 -481 84 -458 85 -469 b 88 -514 88 -491 88 -503 b 99 -543 89 -526 91 -537 z\"\n    },\n    \"timeSig3\": {\n      \"x_min\": 19.824321427094187,\n      \"x_max\": 540,\n      \"y_min\": -392,\n      \"y_max\": 392,\n      \"ha\": 784,\n      \"o\": \"m 216 -540 b 354 -564 264 -556 310 -564 b 605 -465 445 -564 530 -530 b 729 -161 697 -383 729 -275 b 724 -82 729 -135 727 -108 b 589 95 716 -1 670 62 b 523 114 567 102 546 108 b 750 418 606 213 677 315 b 778 503 769 444 778 472 b 773 540 778 514 776 527 b 750 564 769 557 762 564 b 736 562 746 564 742 563 b 641 552 704 553 672 552 b 402 554 562 552 481 554 l 346 554 b 84 546 258 554 170 554 b 36 501 55 543 40 531 b 29 412 30 472 32 442 b 52 384 27 393 32 384 l 56 384 b 210 392 107 389 158 392 l 602 392 b 354 108 523 285 445 192 b 246 -65 300 58 246 12 b 252 -108 246 -78 248 -92 l 252 -111 b 264 -141 251 -122 251 -135 b 291 -132 274 -145 284 -140 b 425 -72 328 -95 377 -84 b 475 -65 442 -68 459 -65 b 592 -108 517 -65 557 -79 b 645 -179 615 -125 645 -147 b 642 -194 645 -184 644 -189 b 485 -376 616 -278 569 -344 b 361 -399 444 -392 402 -399 b 151 -340 289 -399 219 -376 b 88 -275 122 -323 98 -310 b 71 -249 86 -268 85 -249 b 63 -251 68 -249 66 -249 b 36 -288 48 -255 36 -266 b 55 -423 33 -336 45 -377 b 101 -482 60 -448 78 -468 b 216 -540 138 -504 174 -526 z\"\n    },\n    \"timeSig4\": {\n      \"x_min\": 20,\n      \"x_max\": 633.0785282750762,\n      \"y_min\": -489.5908855671687,\n      \"y_max\": 491.18559127100053,\n      \"ha\": 980.7764768381692,\n      \"o\": \"m 608 -704 b 641 -684 622 -708 634 -696 b 667 -602 660 -660 662 -631 b 685 -190 683 -465 680 -327 l 685 -176 b 831 -127 736 -166 783 -148 b 912 0 901 -94 913 -76 b 886 53 912 36 904 52 b 848 40 877 53 864 49 l 838 36 b 687 -13 789 14 739 -3 b 681 177 687 50 684 114 b 672 338 678 230 677 285 b 654 373 671 350 672 373 b 622 340 636 373 624 361 b 615 262 621 314 613 288 b 619 -22 616 167 619 72 b 569 -22 602 -23 585 -23 b 305 -3 481 -16 395 -1 b 210 -9 274 -3 242 -4 b 301 163 242 52 268 108 b 513 552 377 288 459 412 b 536 652 526 585 536 618 b 533 683 536 662 534 672 b 520 707 531 691 531 707 b 487 693 508 708 494 704 b 474 668 482 684 477 677 b 384 490 454 603 418 547 b 253 281 343 419 295 351 b 73 -13 194 181 145 78 b 29 -108 50 -42 29 -72 b 37 -147 29 -121 32 -134 b 50 -186 43 -160 50 -173 b 68 -216 52 -207 56 -215 b 92 -207 73 -216 82 -213 b 288 -166 156 -180 220 -166 b 556 -186 377 -166 467 -180 b 586 -189 566 -187 576 -187 b 616 -186 596 -189 606 -189 b 606 -432 613 -268 612 -350 b 596 -625 603 -495 596 -559 b 598 -670 596 -641 596 -655 b 608 -704 598 -683 596 -700 z\"\n    },\n    \"timeSig5\": {\n      \"x_min\": 19.6638710854033,\n      \"x_max\": 583,\n      \"y_min\": -389,\n      \"y_max\": 389,\n      \"ha\": 778,\n      \"o\": \"m 132 -536 b 249 -560 168 -553 209 -559 b 507 -462 351 -560 454 -514 b 677 -183 588 -384 642 -289 b 694 -85 688 -150 694 -117 b 540 138 694 12 642 94 b 422 173 501 154 462 167 b 400 187 408 174 400 177 b 405 202 400 190 402 196 b 428 284 416 228 426 255 b 469 312 431 307 442 312 b 757 372 569 312 662 343 b 840 490 821 392 840 432 b 812 560 840 540 834 560 b 763 546 801 560 785 556 b 757 543 762 546 759 544 b 465 484 665 505 570 484 b 396 484 452 484 425 487 b 353 454 377 482 366 474 b 281 300 323 405 304 351 b 245 164 262 255 245 212 b 246 144 245 158 246 151 b 233 63 249 115 243 89 b 225 35 228 50 225 40 b 264 14 225 22 236 19 b 445 -26 325 7 387 0 b 569 -151 501 -52 547 -89 b 575 -180 573 -161 575 -170 b 527 -275 575 -217 547 -245 b 347 -367 484 -334 419 -367 b 261 -351 318 -367 289 -363 b 95 -300 206 -333 154 -307 b 55 -321 73 -297 65 -302 b 29 -468 29 -367 40 -419 b 56 -505 26 -482 36 -500 b 132 -536 82 -514 108 -524 z\"\n    },\n    \"timeSig6\": {\n      \"x_min\": 20,\n      \"x_max\": 565,\n      \"y_min\": -363,\n      \"y_max\": 363,\n      \"ha\": 726,\n      \"o\": \"m 390 -518 b 621 -458 469 -507 549 -494 b 814 -134 753 -390 814 -281 b 652 59 814 -16 750 58 b 580 48 629 59 606 55 b 233 -334 392 -9 276 -138 b 115 -228 181 -314 143 -278 b 98 -160 104 -206 98 -183 b 107 -109 98 -144 101 -127 b 167 37 124 -59 145 -12 b 508 340 236 189 347 292 b 575 353 530 347 553 353 b 648 327 600 353 625 346 b 665 320 654 321 661 320 b 687 336 674 320 681 325 b 703 405 697 359 703 382 b 684 472 703 429 697 451 b 593 523 664 504 631 521 b 576 521 588 523 582 523 b 297 403 472 508 380 465 b 115 177 217 344 164 264 b 29 -121 60 82 29 -17 b 53 -278 29 -173 36 -225 b 226 -497 82 -374 131 -454 b 347 -523 265 -514 305 -523 b 390 -518 361 -523 376 -521 z m 351 -357 b 312 -351 337 -356 320 -363 b 325 -315 304 -340 320 -327 b 543 -120 373 -222 448 -158 b 622 -104 570 -108 596 -102 b 717 -132 655 -104 687 -112 b 740 -167 732 -143 740 -153 b 730 -196 740 -176 737 -184 b 563 -321 690 -258 634 -300 b 359 -357 497 -341 428 -354 z\"\n    },\n    \"timeSig7\": {\n      \"x_min\": 20.3617407597707,\n      \"x_max\": 592,\n      \"y_min\": -345,\n      \"y_max\": 345,\n      \"ha\": 690,\n      \"o\": \"m 253 -497 b 318 -485 276 -497 297 -487 b 366 -441 348 -482 360 -468 b 487 -104 390 -323 433 -210 b 835 403 580 82 701 246 b 852 436 847 416 852 428 b 815 467 852 451 840 461 b 762 474 798 471 779 474 b 674 445 732 474 701 465 b 603 410 652 431 628 420 b 383 360 533 379 459 360 b 200 435 315 360 249 382 b 88 494 168 469 131 485 b 66 497 81 495 73 497 b 33 484 52 497 39 492 b 50 436 22 469 39 451 b 295 310 114 360 199 324 b 406 301 331 304 369 301 b 593 324 468 301 530 308 b 585 307 589 314 588 310 b 265 -249 451 137 338 -46 b 207 -442 242 -312 223 -377 b 204 -462 206 -449 204 -456 b 253 -497 204 -487 220 -497 z\"\n    },\n    \"timeSig8\": {\n      \"x_min\": 20,\n      \"x_max\": 504.15101530718516,\n      \"y_min\": -428,\n      \"y_max\": 428,\n      \"ha\": 856,\n      \"o\": \"m 265 -616 b 289 -615 274 -616 281 -616 b 710 -271 492 -592 657 -485 b 726 -148 721 -229 727 -187 b 585 108 726 -48 687 42 b 572 127 576 114 573 120 b 576 144 572 132 575 138 b 598 301 590 196 598 249 b 586 413 598 338 593 376 b 356 616 559 531 467 616 b 233 582 317 616 275 606 b 29 233 101 505 29 384 b 104 9 29 153 46 72 b 189 -48 127 -16 160 -27 b 92 -158 141 -73 114 -114 b 37 -343 63 -217 50 -279 b 33 -390 35 -359 33 -374 b 265 -616 33 -524 148 -616 z m 328 -438 b 158 -276 233 -436 160 -359 b 166 -239 158 -264 161 -252 b 230 -157 176 -203 202 -179 b 367 -72 274 -125 320 -98 b 448 -49 396 -56 423 -49 b 562 -118 491 -49 528 -72 b 611 -251 590 -157 611 -199 b 569 -341 611 -288 595 -318 b 328 -438 500 -402 416 -432 z m 258 105 b 124 148 215 105 167 117 b 96 196 105 163 96 177 b 99 217 96 202 96 209 b 197 384 120 281 151 337 b 350 451 242 429 297 451 b 516 364 412 451 472 422 b 530 331 523 354 530 343 b 530 327 530 330 530 328 l 530 320 b 468 151 520 261 507 200 b 419 122 455 135 442 125 b 258 105 370 117 320 105 z\"\n    },\n    \"timeSig9\": {\n      \"x_min\": 20,\n      \"x_max\": 494,\n      \"y_min\": -421,\n      \"y_max\": 421,\n      \"ha\": 842,\n      \"o\": \"m 235 -606 b 361 -564 275 -606 318 -593 b 619 -229 487 -482 566 -366 b 706 127 664 -114 694 4 b 711 233 708 163 711 197 b 700 346 711 271 708 308 b 389 606 658 517 530 606 b 351 605 376 606 364 606 b 56 272 171 586 56 441 b 96 98 56 216 69 156 b 334 -53 144 -3 238 -53 b 544 36 408 -53 484 -24 b 652 176 586 78 622 124 b 631 71 645 141 639 105 b 467 -302 599 -63 562 -196 b 271 -442 412 -364 354 -422 b 225 -448 255 -446 239 -448 b 95 -305 148 -448 98 -395 b 89 -255 95 -288 94 -271 b 73 -233 86 -246 85 -233 b 52 -248 65 -233 56 -239 b 29 -317 42 -271 30 -291 b 49 -448 29 -361 40 -405 b 235 -606 69 -541 144 -606 z m 340 104 b 144 209 264 108 194 141 b 127 258 132 225 127 240 b 137 297 127 271 130 284 b 366 449 184 396 269 449 b 517 408 415 449 467 436 b 595 348 546 392 572 372 b 616 305 608 336 616 321 b 609 281 616 298 613 289 b 340 104 557 184 477 104 z\"\n    },\n    \"timeSigCommon\": {\n      \"x_min\": 20,\n      \"x_max\": 585,\n      \"y_min\": -298,\n      \"y_max\": 294.49658092772603,\n      \"ha\": 592.496580927726,\n      \"o\": \"m 444 -405 b 829 -45 626 -346 740 -207 b 842 26 842 -23 842 1 b 821 58 842 39 841 58 b 795 40 811 58 802 48 b 765 3 785 29 773 16 b 469 -223 690 -104 596 -183 b 354 -242 431 -235 392 -242 b 180 -177 292 -242 235 -223 b 135 -99 154 -157 140 -131 b 132 -59 134 -85 132 -72 b 141 7 132 -37 135 -16 b 449 274 189 160 297 243 b 477 278 459 276 468 276 b 546 203 517 278 539 253 b 517 157 550 177 533 166 b 485 143 507 153 497 143 l 482 143 b 467 148 478 143 472 144 b 374 183 438 170 406 181 b 264 118 333 183 292 161 b 238 48 246 92 238 69 b 261 -9 238 29 245 10 b 383 -73 287 -39 337 -73 b 412 -68 392 -73 402 -72 b 631 164 526 -27 586 59 b 649 252 644 193 649 222 b 636 328 649 278 645 304 b 504 423 615 400 579 429 b 242 318 408 415 317 387 b 29 -158 104 190 29 33 b 30 -176 29 -164 29 -170 b 115 -364 42 -246 52 -315 b 307 -429 177 -410 240 -429 b 444 -405 351 -429 397 -420 z\"\n    },\n    \"timeSigCutCommon\": {\n      \"x_min\": 20,\n      \"x_max\": 695,\n      \"y_min\": -687.0379164869065,\n      \"y_max\": 687,\n      \"ha\": 1374.0379164869064,\n      \"o\": \"m 564 -989 b 595 -945 585 -991 589 -963 l 599 -922 b 605 -628 600 -824 603 -726 l 609 -399 b 878 -251 706 -363 798 -320 b 996 -85 932 -204 976 -153 b 1001 -63 998 -78 1001 -71 b 989 -46 1001 -56 998 -49 b 978 -43 985 -45 982 -43 b 950 -59 968 -43 959 -49 b 733 -216 894 -132 815 -177 b 611 -259 694 -235 652 -249 b 616 -20 612 -179 615 -99 b 680 29 642 -7 665 9 b 698 43 685 36 690 40 b 870 251 792 82 840 160 b 877 294 874 265 877 279 b 818 410 877 338 855 382 b 683 458 779 442 730 448 b 625 468 664 462 644 465 l 625 514 b 638 958 626 662 636 811 b 626 989 638 979 635 989 b 603 981 621 989 613 986 b 422 840 534 945 481 888 b 412 805 412 832 413 818 b 426 713 410 773 420 743 b 445 678 429 690 435 678 b 474 691 452 678 461 683 b 563 755 503 710 530 732 b 564 724 564 740 564 733 b 559 469 563 639 560 554 b 462 454 526 469 494 464 b 112 143 302 399 199 281 b 33 -94 66 71 45 -10 b 29 -148 30 -112 29 -131 b 105 -351 29 -223 52 -291 b 359 -455 171 -426 258 -451 b 517 -431 409 -451 464 -446 b 539 -422 524 -428 531 -425 l 539 -477 b 533 -739 536 -563 539 -651 b 530 -824 531 -768 530 -795 b 546 -948 530 -865 533 -907 b 564 -989 552 -962 543 -989 z m 410 -288 b 193 -197 328 -288 253 -264 b 141 -60 160 -161 141 -108 b 157 6 141 -35 147 -12 b 259 158 189 58 217 112 b 438 291 311 215 364 266 b 528 305 468 301 498 305 b 554 304 537 305 546 304 b 553 212 554 274 554 242 b 426 115 498 199 446 164 b 416 68 419 99 416 84 b 425 12 416 49 420 30 b 474 -39 432 -17 448 -32 b 513 -43 487 -42 498 -43 b 547 -40 524 -43 536 -42 l 543 -272 b 461 -285 516 -278 488 -281 b 410 -288 444 -287 426 -288 z m 694 197 b 668 203 685 197 677 199 b 621 216 654 210 638 215 b 622 294 622 242 622 268 b 706 268 651 287 678 278 b 746 235 721 261 734 249 b 752 222 749 230 752 226 b 743 213 752 219 749 215 b 694 197 727 206 711 197 z\"\n    },\n    \"noteheadDoubleWhole\": {\n      \"x_min\": -0.4444444444444444,\n      \"x_max\": 614.1875,\n      \"y_min\": -223.03296670127517,\n      \"y_max\": 223,\n      \"ha\": 446.0329667012752,\n      \"o\": \"m 488 -242 b 693 -79 595 -249 685 -166 l 693 -55 b 690 0 693 -36 691 -17 b 540 187 684 84 621 164 b 449 200 508 196 480 200 b 210 104 363 200 282 163 b 186 56 196 92 186 76 b 207 -82 186 9 192 -37 b 300 -204 225 -132 248 -181 b 488 -242 356 -229 415 -240 z m 35 -321 b 62 -266 58 -318 58 -288 l 62 -194 b 63 50 62 -114 63 -32 b 60 189 63 96 63 143 b 43 300 59 226 60 265 b 29 321 40 308 39 321 l 26 321 b 0 292 13 318 0 310 b 0 248 0 278 -1 262 b 6 147 4 215 6 181 b 4 48 6 114 4 81 b 6 0 4 32 6 16 b 7 -36 7 -12 7 -24 l 7 -52 b 6 -156 7 -86 6 -121 b 19 -275 6 -196 9 -236 b 35 -321 23 -291 16 -323 z m 128 -261 b 144 -251 135 -264 141 -256 b 158 -203 156 -236 157 -220 b 161 -137 161 -181 161 -158 b 157 30 161 -81 157 -26 b 158 76 157 45 157 60 l 158 101 b 156 225 158 141 158 183 b 137 253 156 235 154 253 l 134 253 b 109 222 120 251 109 242 b 104 91 108 179 104 134 b 108 -58 104 42 109 -9 b 107 -105 108 -73 108 -89 b 105 -127 107 -112 107 -120 b 118 -245 105 -167 114 -204 b 128 -261 118 -252 121 -259 z m 490 -88 b 449 -86 477 -88 464 -88 b 287 -56 399 -85 341 -78 b 258 -33 275 -52 258 -48 b 282 -7 258 -20 272 -13 b 458 43 340 23 399 43 b 580 14 497 43 537 35 b 618 -20 606 1 619 -9 b 592 -58 618 -30 609 -42 b 490 -88 562 -82 528 -88 z m 757 -291 b 793 -171 796 -255 792 -212 b 795 -49 795 -131 795 -91 b 786 207 795 36 791 121 b 779 240 786 217 783 229 b 766 258 776 246 776 258 b 762 256 765 258 763 256 b 739 236 752 253 740 252 b 733 177 737 216 732 197 b 737 20 737 125 739 73 l 737 -107 b 740 -202 737 -138 739 -170 b 757 -291 740 -230 743 -261 z m 847 -314 b 871 -288 860 -315 867 -300 b 884 -187 881 -255 886 -222 b 876 115 878 -86 876 14 b 877 255 876 161 876 209 b 868 291 877 268 873 279 b 855 304 867 301 863 304 b 844 301 852 304 848 304 b 822 265 825 292 822 278 b 824 251 822 259 822 255 b 822 170 822 225 822 197 l 822 -20 b 835 -284 827 -86 825 -186 b 847 -314 837 -295 835 -311 z\"\n    },\n    \"noteheadWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 380.1664976250159,\n      \"y_min\": -186.17102907059297,\n      \"y_max\": 165,\n      \"ha\": 351.17102907059297,\n      \"o\": \"m 547 40 b 223 -268 543 -151 367 -259 b 102 -233 180 -271 143 -248 l 62 -216 b 0 -127 22 -197 0 -166 b 6 -91 0 -115 1 -104 b 122 141 33 -9 69 71 b 327 238 170 204 249 238 b 514 158 397 238 467 212 b 547 40 544 125 549 84 z m 248 -107 b 384 -63 295 -102 341 -88 b 426 -23 402 -53 415 -40 b 435 3 432 -14 435 -6 b 413 32 435 14 428 24 b 301 73 376 49 343 73 b 272 69 291 73 282 72 b 121 -35 207 53 157 20 b 111 -58 117 -42 111 -50 b 125 -75 111 -65 115 -71 b 248 -107 164 -89 202 -107 z\"\n    },\n    \"noteheadHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 334,\n      \"y_min\": -174,\n      \"y_max\": 175,\n      \"ha\": 349,\n      \"o\": \"m 480 56 b 167 -251 478 -115 331 -251 b 94 -242 143 -251 118 -248 b 9 -141 43 -229 20 -192 b 0 -68 3 -115 0 -91 b 284 249 0 95 127 200 b 304 252 289 251 297 252 b 481 78 374 252 481 170 b 480 56 481 71 481 63 z m 213 -102 b 399 6 274 -81 341 -48 b 402 17 400 7 402 13 b 399 27 402 22 400 26 b 311 94 373 53 353 88 b 292 95 305 95 300 95 b 130 27 230 95 181 55 b 69 -62 98 9 62 -29 b 161 -98 76 -98 128 -91 b 213 -102 174 -101 186 -101 z\"\n    },\n    \"noteheadBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 334.04644433966797,\n      \"y_min\": -164,\n      \"y_max\": 164,\n      \"ha\": 328,\n      \"o\": \"m 112 -233 b 141 -236 122 -235 131 -236 b 481 104 279 -236 485 -48 b 403 222 477 141 478 192 b 334 236 382 232 359 236 b 1 -59 180 236 13 59 b 0 -85 1 -68 0 -76 b 112 -233 0 -157 32 -215 z\"\n    },\n    \"noteheadXWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 506,\n      \"y_min\": -143.0823320899293,\n      \"y_max\": 144,\n      \"ha\": 287.0823320899293,\n      \"o\": \"m 53 -206 b 219 -163 117 -207 170 -196 b 314 -102 249 -141 282 -122 b 377 -63 334 -89 356 -76 b 514 -161 422 -96 468 -128 b 576 -196 534 -174 552 -196 b 589 -193 580 -196 585 -196 b 688 -174 625 -194 657 -181 b 711 -158 698 -171 711 -173 b 696 -143 711 -151 701 -147 b 503 -9 632 -98 567 -52 b 485 4 497 -4 491 0 b 704 145 559 49 634 95 b 729 164 711 150 729 151 l 729 168 b 696 196 726 183 710 193 b 621 207 671 202 645 207 b 528 177 589 207 557 200 b 373 76 480 140 426 108 b 246 164 330 104 287 132 b 122 206 207 193 167 203 b 66 192 102 207 72 207 b 99 147 58 173 85 158 b 274 14 157 102 215 58 b 16 -164 184 -42 96 -98 b 0 -179 12 -168 0 -170 b 1 -183 0 -180 0 -183 b 26 -204 6 -193 12 -204 b 53 -206 37 -206 49 -206 z m 611 -177 b 376 -9 530 -118 452 -63 b 164 -143 305 -53 235 -98 b 104 -164 147 -154 130 -164 b 82 -161 96 -164 89 -164 b 230 -65 137 -125 183 -95 l 347 12 b 327 26 341 16 334 22 b 196 121 284 58 239 89 b 163 147 184 128 173 137 b 140 173 154 154 140 163 b 143 180 140 176 141 177 b 179 166 154 194 167 174 b 372 27 243 120 307 73 l 566 153 b 613 171 580 161 596 170 b 635 160 624 171 635 174 b 621 147 635 153 626 150 l 429 24 b 400 6 419 19 409 13 b 569 -117 456 -35 513 -75 b 611 -177 588 -130 608 -143 z\"\n    },\n    \"noteheadXHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 421,\n      \"y_min\": -145.51844828189743,\n      \"y_max\": 151,\n      \"ha\": 296.51844828189746,\n      \"o\": \"m 490 -209 b 539 -207 505 -207 521 -207 b 606 -209 560 -207 583 -209 b 598 -196 602 -203 600 -199 b 406 -19 533 -135 469 -78 l 540 130 b 547 144 546 135 547 140 b 536 156 547 148 543 153 b 488 192 518 166 503 176 b 416 217 471 209 444 217 b 323 180 380 217 344 204 l 264 115 b 239 138 256 122 248 131 b 33 197 180 196 108 200 b 3 186 23 197 6 193 b 19 154 -1 174 10 163 b 171 12 69 107 120 59 b 19 -157 120 -45 69 -101 b 0 -177 14 -163 0 -166 b 1 -181 0 -179 0 -180 b 39 -203 9 -197 22 -203 l 186 -203 b 197 -202 190 -202 193 -200 b 213 -202 203 -202 207 -202 b 262 -180 228 -202 246 -199 b 314 -122 279 -161 297 -141 b 490 -209 363 -170 412 -216 z m 435 -148 b 291 -30 379 -112 337 -69 l 213 -118 b 190 -137 207 -125 202 -137 b 145 -111 173 -130 154 -127 b 160 -79 137 -98 151 -88 b 238 16 184 -48 212 -16 b 141 99 204 43 173 72 b 124 117 135 105 130 111 b 115 132 121 121 115 127 b 118 137 115 134 117 137 b 141 132 127 147 135 138 l 253 36 b 347 150 285 75 315 112 b 370 164 354 160 363 163 b 403 145 382 164 393 156 b 416 127 412 140 416 132 b 405 102 416 118 412 111 l 307 -10 b 413 -105 343 -42 379 -73 b 435 -148 425 -115 436 -125 z\"\n    },\n    \"noteheadXBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 289,\n      \"y_min\": -156,\n      \"y_max\": 157,\n      \"ha\": 313,\n      \"o\": \"m 23 -225 b 69 -204 40 -223 56 -219 b 137 -131 92 -180 115 -157 l 209 -50 b 377 -197 264 -101 321 -148 b 403 -210 384 -203 393 -210 b 408 -210 405 -210 406 -210 b 416 -192 416 -207 416 -199 b 416 -186 416 -190 416 -187 b 403 -148 416 -171 413 -158 b 344 -81 384 -125 367 -101 b 252 -1 312 -55 282 -29 b 377 157 297 49 340 101 b 402 202 387 170 402 187 b 395 217 402 207 400 213 b 376 226 389 223 382 226 b 334 192 360 226 346 204 b 206 42 289 143 248 94 b 96 161 167 81 131 120 b 60 193 86 174 76 189 b 33 206 52 196 42 206 b 22 199 29 206 26 204 b 10 173 14 190 10 181 b 22 147 10 166 14 157 b 148 7 62 98 104 52 b 164 -7 154 1 158 -3 b 10 -189 111 -66 55 -122 b 0 -212 6 -197 0 -203 b 1 -217 0 -213 0 -216 b 23 -225 4 -226 14 -222 z\"\n    },\n    \"noteheadCircleX\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -179,\n      \"y_max\": 175.12551922594864,\n      \"ha\": 354.12551922594866,\n      \"o\": \"m 99 -210 b 236 -258 137 -242 186 -258 b 418 -183 305 -258 374 -230 b 495 33 475 -120 495 -48 b 494 66 495 45 494 55 b 302 252 487 183 405 256 b 181 243 262 249 222 248 b 46 171 128 236 79 219 b 0 19 14 127 0 73 b 99 -210 0 -68 35 -156 z m 89 -120 b 48 0 56 -82 48 -42 b 89 112 48 35 59 76 b 109 101 96 111 102 108 l 210 7 l 187 -17 b 89 -120 151 -53 125 -82 z m 176 -183 b 127 -163 158 -179 141 -171 l 252 -32 l 372 -144 b 233 -189 334 -173 285 -189 b 176 -183 215 -189 196 -187 z m 245 42 b 124 156 204 79 164 118 b 200 176 145 166 170 173 b 337 183 245 181 291 184 b 377 176 351 183 364 180 b 245 42 333 131 288 86 z m 405 -112 l 392 -99 l 285 3 l 400 121 b 418 154 409 131 418 140 b 465 50 448 130 465 94 b 405 -112 462 -17 439 -73 z\"\n    },\n    \"noteheadTriangleUpWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 366,\n      \"y_min\": -145,\n      \"y_max\": 138,\n      \"ha\": 283,\n      \"o\": \"m 55 -209 l 504 -209 b 527 -199 520 -209 527 -206 b 520 -180 527 -193 524 -187 b 459 -94 501 -151 480 -122 b 279 170 400 -6 341 82 b 242 199 266 190 253 199 b 206 167 230 199 219 189 b 10 -145 140 63 76 -42 b 0 -171 3 -156 0 -164 b 23 -200 0 -183 9 -192 b 55 -209 33 -206 45 -209 z m 202 -161 b 176 -137 183 -163 176 -156 b 187 -62 176 -111 179 -86 b 253 95 206 -10 228 42 b 337 -132 307 24 334 -49 b 311 -161 338 -153 334 -161 b 256 -160 294 -161 275 -160 b 202 -161 238 -160 220 -161 z\"\n    },\n    \"noteheadTriangleUpHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 341.0833130378007,\n      \"y_min\": -159,\n      \"y_max\": 159,\n      \"ha\": 318,\n      \"o\": \"m 458 -226 b 478 -229 462 -223 469 -229 b 490 -222 482 -229 487 -228 b 477 -184 495 -207 484 -196 b 281 176 410 -65 346 56 b 238 225 269 194 261 213 b 225 229 232 226 228 228 b 209 215 217 229 213 225 b 4 -153 141 92 73 -30 b 0 -170 1 -158 0 -164 b 12 -189 0 -177 4 -183 b 66 -215 27 -202 43 -213 b 458 -226 194 -217 323 -222 z m 278 -170 l 151 -167 b 298 75 204 -89 240 -1 b 301 82 300 76 301 79 b 357 -22 320 48 338 13 b 344 -43 353 -27 350 -37 b 285 -163 317 -79 312 -127 b 278 -170 282 -166 279 -167 z\"\n    },\n    \"noteheadTriangleUpBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 346,\n      \"y_min\": -149,\n      \"y_max\": 149,\n      \"ha\": 298,\n      \"o\": \"m 481 -215 b 498 -209 487 -215 492 -215 b 482 -173 498 -194 488 -184 l 284 173 b 259 202 278 184 269 194 b 229 215 248 210 238 215 b 196 189 216 215 206 206 l 13 -150 b 3 -168 9 -156 6 -163 b 0 -180 1 -173 0 -177 b 12 -197 0 -187 4 -193 b 63 -213 29 -206 45 -213 b 481 -215 203 -213 343 -215 z\"\n    },\n    \"noteheadDiamondWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 271,\n      \"y_min\": -132,\n      \"y_max\": 132,\n      \"ha\": 264,\n      \"o\": \"m 230 -177 b 256 -190 240 -186 249 -190 b 281 -173 265 -190 272 -184 b 382 -29 314 -124 347 -76 b 390 -10 387 -22 390 -14 b 376 12 390 -3 386 4 b 173 177 308 66 240 121 b 144 190 166 183 160 190 b 98 153 127 186 112 170 b 13 40 69 115 42 76 b 0 13 4 29 0 20 b 22 -19 0 3 7 -9 b 230 -177 92 -69 163 -122 z m 279 -128 b 261 -122 274 -134 266 -127 l 66 30 b 56 45 59 35 56 39 b 62 56 56 48 59 52 b 122 122 91 101 105 122 b 194 76 138 122 158 107 l 320 -26 b 336 -50 325 -32 336 -35 b 279 -128 318 -75 300 -102 z\"\n    },\n    \"noteheadDiamondHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 295,\n      \"y_min\": -148,\n      \"y_max\": 148,\n      \"ha\": 296,\n      \"o\": \"m 228 -207 b 245 -213 235 -210 240 -213 b 264 -203 252 -213 258 -210 b 415 -46 314 -150 364 -98 b 425 -27 420 -40 425 -35 b 416 -10 425 -22 422 -16 b 217 200 350 60 284 131 b 194 213 212 207 204 213 b 170 196 181 213 177 203 b 14 33 118 143 68 86 b 0 7 4 23 0 16 b 17 -20 0 -1 6 -10 b 118 -114 52 -50 82 -85 b 228 -207 156 -144 184 -184 z m 209 -157 b 134 -69 177 -138 141 -115 b 130 -26 131 -55 130 -40 b 215 148 130 42 160 99 b 225 156 217 151 220 156 b 230 153 226 156 228 156 b 323 -26 276 104 321 55 b 298 -75 324 -42 315 -59 b 265 -109 287 -86 276 -99 b 209 -157 245 -125 228 -167 z\"\n    },\n    \"noteheadDiamondBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 310,\n      \"y_min\": -146,\n      \"y_max\": 146,\n      \"ha\": 292,\n      \"o\": \"m 266 -210 b 289 -194 278 -209 284 -200 b 406 -76 330 -156 367 -115 b 446 -23 433 -49 446 -36 b 412 29 446 -10 435 3 b 405 36 409 30 408 33 b 252 196 354 89 304 143 b 225 210 243 204 235 210 b 204 202 219 210 212 209 b 10 24 141 141 75 82 b 0 9 4 19 0 14 b 9 -6 0 4 3 0 l 232 -192 b 266 -210 242 -200 256 -204 z\"\n    },\n    \"noteheadSquareWhite\": {\n      \"x_min\": 0,\n      \"x_max\": 350,\n      \"y_min\": -131,\n      \"y_max\": 131,\n      \"ha\": 262,\n      \"o\": \"m 468 -189 b 485 -187 474 -189 480 -189 b 500 -176 495 -187 500 -183 b 498 -168 500 -174 498 -171 b 497 -166 498 -167 497 -167 l 498 -164 b 504 -154 503 -163 504 -158 b 503 -138 504 -150 503 -144 b 503 -135 503 -137 503 -137 l 503 -94 b 492 66 500 -45 494 10 b 488 135 492 89 488 112 b 484 150 488 141 485 145 b 482 154 482 151 482 153 b 429 189 472 177 456 189 b 53 184 304 186 179 186 l 39 184 b 33 181 36 183 35 183 b 12 160 20 181 12 177 b 0 -109 9 71 4 -19 b 19 -137 0 -125 7 -134 b 23 -151 19 -141 20 -145 b 85 -187 37 -173 55 -187 b 468 -189 212 -187 340 -187 z m 246 -127 l 246 -125 l 63 -125 b 66 -111 65 -122 66 -117 b 73 72 69 -50 71 10 l 73 130 b 88 128 78 128 82 128 b 148 130 108 130 128 130 b 271 128 190 130 230 128 l 271 130 l 420 130 b 428 20 425 92 425 56 l 436 -127 z\"\n    },\n    \"noteheadSquareBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 342,\n      \"y_min\": -129.98961937716263,\n      \"y_max\": 132.44444444444446,\n      \"ha\": 262.4340638216071,\n      \"o\": \"m 217 190 b 439 186 304 190 372 190 b 467 180 448 184 458 183 b 492 145 484 176 492 167 b 490 -124 490 56 490 -33 b 488 -141 490 -130 488 -135 b 456 -170 488 -163 478 -168 b 118 -183 344 -176 230 -181 b 29 -184 89 -183 60 -192 b 0 -148 4 -180 0 -168 b 1 29 1 -89 1 -30 b 1 156 1 71 1 114 b 36 190 3 187 4 190 b 217 190 102 192 168 190 z\"\n    },\n    \"augmentationDot\": {\n      \"x_min\": 0,\n      \"x_max\": 96,\n      \"y_min\": -57,\n      \"y_max\": 57,\n      \"ha\": 114,\n      \"o\": \"m 13 -82 b 16 -81 14 -82 14 -82 b 105 -73 46 -76 75 -76 b 131 -48 121 -72 131 -60 b 138 26 134 -24 138 0 b 137 48 138 33 138 40 b 108 82 134 71 125 82 b 95 81 104 82 99 82 b 33 71 75 78 53 75 b 4 46 20 68 6 62 b 0 -66 1 9 0 -29 b 13 -82 0 -73 1 -82 z\"\n    },\n    \"tremolo1\": {\n      \"x_min\": -158,\n      \"x_max\": 156.1938147957849,\n      \"y_min\": -88,\n      \"y_max\": 88,\n      \"ha\": 176,\n      \"o\": \"m -206 -127 b -194 -125 -203 -127 -199 -127 b 173 -36 -72 -94 50 -65 b 220 16 202 -29 215 -12 b 225 50 223 30 225 45 b 216 107 226 76 222 91 b 194 127 210 120 204 127 b 183 124 192 127 189 127 l -192 33 b -226 -9 -213 27 -222 14 b -228 -32 -226 -16 -228 -23 b -222 -108 -228 -58 -222 -82 b -206 -127 -222 -120 -217 -127 z\"\n    },\n    \"flag8thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 261,\n      \"y_min\": -819,\n      \"y_max\": 0,\n      \"ha\": 819,\n      \"o\": \"m 265 -1171 b 351 -1035 301 -1130 336 -1087 b 376 -867 369 -979 376 -923 b 367 -755 376 -829 373 -792 b 233 -422 350 -632 311 -520 b 131 -291 199 -379 166 -334 b 65 -125 91 -239 66 -192 b 62 -75 65 -112 62 -91 b 42 0 62 -49 52 -24 l 35 0 b 0 -63 6 -13 0 -36 l 0 -144 b 96 -445 0 -255 29 -356 b 177 -547 124 -478 150 -514 b 308 -831 246 -629 298 -721 b 317 -890 310 -851 317 -871 b 311 -919 317 -900 315 -910 b 256 -1005 297 -950 282 -984 b 228 -1068 233 -1024 228 -1045 b 230 -1106 228 -1080 229 -1093 b 240 -1162 232 -1125 239 -1143 b 251 -1179 242 -1174 246 -1179 b 265 -1171 255 -1179 259 -1176 z\"\n    },\n    \"flag8thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 261,\n      \"y_min\": 0,\n      \"y_max\": 819,\n      \"ha\": 819,\n      \"o\": \"m 265 1171 b 251 1179 259 1176 255 1179 b 240 1162 246 1179 242 1174 b 230 1106 239 1143 232 1125 b 228 1068 229 1093 228 1080 b 256 1005 228 1045 233 1024 b 311 919 282 984 297 950 b 317 890 315 910 317 900 b 308 831 317 871 310 851 b 177 547 298 721 246 629 b 96 445 150 514 124 478 b 0 144 29 356 0 255 l 0 63 b 35 0 0 36 6 13 l 42 0 b 62 75 52 24 62 49 b 59 117 62 91 59 104 b 131 291 60 183 91 239 b 233 422 166 334 199 379 b 367 755 311 520 350 632 b 376 867 373 792 376 829 b 351 1035 376 923 369 979 b 265 1171 336 1087 301 1130 z\"\n    },\n    \"flag16thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 327.1591498636094,\n      \"y_min\": -819.3972596310256,\n      \"y_max\": 0,\n      \"ha\": 819.3972596310256,\n      \"o\": \"m 415 -1179 b 435 -1168 423 -1182 429 -1174 b 451 -1138 442 -1159 446 -1149 b 465 -1020 464 -1102 467 -1064 b 461 -962 464 -1004 464 -984 b 471 -821 467 -916 472 -870 b 465 -721 472 -791 467 -756 b 415 -520 459 -651 441 -585 b 200 -245 370 -408 284 -327 b 96 -114 160 -206 118 -168 b 75 -24 84 -85 85 -53 b 59 0 72 -16 72 0 b 53 -1 58 0 56 -1 b 27 -32 40 -6 27 -10 b 29 -68 27 -43 29 -55 b 10 -79 20 -69 13 -72 b 1 -109 6 -89 1 -99 b 0 -170 0 -130 0 -148 b 35 -410 0 -252 12 -333 b 258 -793 76 -557 156 -681 b 409 -1158 350 -896 410 -1014 b 415 -1179 409 -1165 405 -1175 z m 413 -816 b 331 -681 392 -769 364 -723 b 145 -420 266 -596 189 -521 b 86 -281 125 -374 102 -330 b 156 -370 105 -312 128 -343 b 318 -539 210 -425 269 -478 b 413 -816 383 -621 420 -713 z\"\n    },\n    \"flag16thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 327.1591498636094,\n      \"y_min\": 0,\n      \"y_max\": 819,\n      \"ha\": 819,\n      \"o\": \"m 59 0 b 75 24 72 0 72 16 b 96 114 85 53 84 85 b 200 245 118 168 160 206 b 415 520 284 327 370 408 b 465 721 441 585 459 651 b 471 821 467 756 472 791 b 461 962 472 870 467 916 b 465 1020 464 984 464 1004 b 451 1138 467 1064 464 1102 b 435 1168 446 1149 442 1159 b 418 1179 431 1172 425 1179 b 415 1179 418 1179 416 1179 b 408 1169 409 1176 408 1174 b 409 1158 408 1165 409 1161 b 258 793 410 1014 350 896 b 35 410 156 681 76 557 b 0 170 12 333 0 252 b 0 88 0 148 0 108 b 29 7 0 71 6 23 b 59 0 33 4 58 0 z m 86 281 b 145 420 102 330 125 374 b 331 681 189 521 266 596 b 413 816 364 723 392 769 b 415 791 413 808 415 799 b 318 539 415 698 377 613 b 156 370 269 478 210 425 b 86 281 128 343 105 312 z\"\n    },\n    \"flag32ndUp\": {\n      \"x_min\": -0.19862981551275186,\n      \"x_max\": 268.0942440943661,\n      \"y_min\": -849.4710740978672,\n      \"y_max\": 149.0769891455102,\n      \"ha\": 998.5480632433774,\n      \"o\": \"m 323 -1223 b 351 -1198 337 -1227 344 -1210 b 359 -1184 354 -1194 356 -1188 b 386 -999 377 -1122 387 -1060 b 341 -783 386 -927 372 -855 b 330 -736 334 -769 330 -753 b 333 -708 330 -727 330 -717 b 344 -621 340 -678 344 -649 b 341 -579 344 -608 343 -593 b 328 -500 338 -553 328 -526 b 331 -475 328 -491 328 -484 b 347 -370 343 -438 348 -402 b 151 27 348 -212 288 -56 b 53 176 98 59 50 102 b 45 197 53 183 48 192 b 33 215 40 203 40 216 l 30 215 b 6 194 22 212 9 209 b 0 120 3 170 -1 145 b 0 -43 4 65 0 13 b 0 -98 0 -60 1 -79 b 4 -276 0 -157 6 -216 b 7 -456 4 -337 7 -397 b 66 -638 7 -523 22 -585 b 158 -724 94 -671 127 -697 b 318 -1011 246 -801 295 -899 b 321 -1044 321 -1021 321 -1032 b 312 -1152 321 -1080 312 -1116 b 317 -1192 312 -1165 314 -1179 b 323 -1223 320 -1202 311 -1220 z m 275 -657 b 111 -492 226 -589 163 -547 b 65 -376 78 -456 66 -418 b 71 -323 65 -360 68 -341 b 275 -657 164 -418 265 -504 z m 285 -376 b 121 -180 249 -289 173 -245 b 91 -105 104 -158 92 -135 b 288 -354 181 -144 288 -269 b 285 -376 288 -363 287 -370 z\"\n    },\n    \"flag32ndDown\": {\n      \"x_min\": -2.800802874905624,\n      \"x_max\": 268.09424409436605,\n      \"y_min\": -169.07698914551014,\n      \"y_max\": 829.4710740978672,\n      \"ha\": 998.5480632433773,\n      \"o\": \"m 323 1194 b 317 1164 311 1191 320 1174 b 312 1123 314 1151 312 1136 b 321 1015 312 1087 321 1051 b 318 982 321 1004 321 992 b 158 696 295 870 246 772 b 66 609 127 668 94 642 b 7 428 22 556 7 494 b 4 248 7 369 4 308 b -1 78 6 187 -10 137 b 0 14 0 59 0 32 b 0 -148 0 -42 0 -94 b 6 -223 0 -174 3 -199 b 30 -243 9 -238 22 -240 l 33 -243 b 45 -226 40 -245 40 -232 b 53 -204 48 -220 53 -212 b 151 -56 50 -131 98 -88 b 347 341 288 27 348 183 b 331 446 348 373 343 409 b 328 471 328 455 328 462 b 341 550 328 497 338 524 b 344 592 343 564 344 579 b 333 680 344 621 340 649 b 330 707 330 688 330 698 b 341 755 330 724 334 740 b 386 971 372 827 386 899 b 359 1155 387 1031 377 1093 b 351 1169 356 1159 354 1165 b 323 1194 344 1181 337 1198 z m 275 628 b 71 294 265 475 164 389 b 65 347 68 312 65 331 b 111 464 66 389 78 428 b 275 628 163 518 226 560 z m 285 347 b 288 325 287 341 288 334 b 91 76 288 240 181 115 b 121 151 92 107 104 130 b 285 347 173 216 249 261 z\"\n    },\n    \"flag64thUp\": {\n      \"x_min\": -4,\n      \"x_max\": 282,\n      \"y_min\": -823.5430338167065,\n      \"y_max\": 347,\n      \"ha\": 1170.5430338167066,\n      \"o\": \"m 350 -1185 b 380 -1162 364 -1189 374 -1175 b 406 -1022 399 -1119 406 -1071 b 359 -798 406 -945 384 -871 b 348 -756 353 -785 348 -772 b 350 -744 348 -753 350 -749 b 363 -621 356 -704 363 -664 b 360 -580 363 -608 363 -593 b 359 -560 359 -573 359 -567 b 373 -490 359 -536 366 -513 b 393 -346 386 -444 393 -395 b 387 -269 393 -320 390 -294 b 348 -127 382 -219 348 -173 b 351 -104 348 -120 348 -111 b 353 -65 351 -91 353 -78 b 341 37 353 -26 348 6 b 226 215 323 108 278 164 b 86 336 181 258 127 288 b 62 395 72 353 62 370 b 42 481 62 423 55 454 b 27 500 37 488 36 500 b 24 498 26 500 26 500 b -1 480 14 497 1 492 b -6 444 -4 467 -6 455 l -6 435 b -1 341 -1 403 -1 372 l -1 266 b 6 156 -1 230 0 193 b 13 35 12 117 13 75 l 13 -35 b 14 -85 13 -52 14 -68 b 29 -276 19 -150 33 -213 b 20 -448 24 -334 20 -392 b 24 -534 20 -477 22 -505 b 114 -708 30 -605 59 -664 b 197 -780 143 -732 171 -755 b 344 -1153 301 -884 341 -1011 b 343 -1172 344 -1159 343 -1166 b 350 -1185 343 -1176 344 -1182 z m 300 -691 b 117 -508 243 -616 168 -575 b 82 -408 94 -480 82 -448 b 84 -379 82 -397 82 -387 b 259 -553 135 -451 206 -492 b 301 -667 287 -583 301 -619 b 300 -691 301 -674 301 -683 z m 298 -410 b 118 -235 238 -351 176 -295 b 76 -88 82 -197 78 -147 b 268 -252 137 -153 203 -202 b 330 -360 304 -279 330 -315 b 323 -402 330 -373 327 -387 b 311 -418 318 -413 315 -418 b 298 -410 307 -418 302 -415 z m 287 -88 b 62 193 186 -17 79 48 b 229 52 121 144 174 98 b 289 -33 256 29 274 -3 b 295 -56 294 -42 295 -49 b 287 -88 295 -66 292 -76 z\"\n    },\n    \"flag64thDown\": {\n      \"x_min\": -5,\n      \"x_max\": 281,\n      \"y_min\": -375,\n      \"y_max\": 795.5430338167065,\n      \"ha\": 1170.5430338167066,\n      \"o\": \"m 348 1145 b 341 1132 343 1142 341 1136 b 343 1113 341 1126 343 1119 b 196 740 340 971 300 844 b 112 668 170 714 141 691 b 23 494 58 624 29 564 b 19 408 20 465 19 436 b 27 236 19 351 23 294 b 13 45 32 173 17 109 b 12 -6 13 27 12 12 l 12 -75 b 4 -196 12 -115 10 -157 b -3 -307 -1 -233 -3 -271 l -3 -382 b -7 -475 -3 -412 -3 -444 l -7 -484 b -3 -520 -7 -495 -6 -507 b 23 -539 0 -533 13 -537 b 26 -540 24 -540 24 -540 b 40 -521 35 -540 36 -528 b 60 -435 53 -494 60 -464 b 85 -376 60 -410 71 -393 b 225 -255 125 -328 180 -298 b 340 -78 276 -204 321 -148 b 351 24 347 -46 351 -14 b 350 63 351 37 350 50 b 347 86 347 71 347 79 b 386 229 347 132 380 179 b 392 305 389 253 392 279 b 372 449 392 354 384 403 b 357 520 364 472 357 495 b 359 540 357 527 357 533 b 361 580 361 553 361 567 b 348 704 361 624 354 664 b 347 716 348 708 347 713 b 357 757 347 732 351 744 b 405 982 383 831 405 904 b 379 1122 405 1031 397 1079 b 348 1145 373 1135 363 1149 z m 298 651 b 300 626 300 642 300 634 b 258 513 300 579 285 543 b 82 338 204 452 134 410 b 81 367 81 347 81 357 b 115 468 81 408 92 439 b 298 651 167 534 242 576 z m 297 370 b 310 377 301 374 305 377 b 321 361 314 377 317 373 b 328 320 325 347 328 333 b 266 212 328 275 302 239 b 75 48 202 161 135 112 b 117 194 76 107 81 157 b 297 370 174 255 236 311 z m 285 48 b 294 16 291 36 294 26 b 288 -7 294 9 292 1 b 228 -92 272 -37 255 -69 b 60 -233 173 -138 120 -184 b 285 48 78 -88 184 -23 z\"\n    },\n    \"flag128thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 252,\n      \"y_min\": -804,\n      \"y_max\": 530,\n      \"ha\": 1334,\n      \"o\": \"m 298 -1158 b 328 -1126 312 -1158 320 -1139 b 330 -1116 330 -1123 330 -1119 b 347 -996 343 -1076 347 -1037 b 328 -837 347 -943 338 -890 b 320 -778 324 -816 320 -798 b 330 -733 320 -763 323 -749 b 340 -665 338 -714 337 -688 b 341 -645 340 -660 341 -652 b 333 -534 341 -609 333 -572 b 343 -471 333 -513 334 -492 b 361 -366 356 -436 361 -402 b 331 -202 361 -311 348 -256 b 328 -187 330 -197 328 -193 b 331 -179 328 -184 328 -181 b 363 -55 353 -137 363 -96 b 337 79 363 -12 351 33 b 327 114 333 92 327 104 b 344 144 327 124 331 132 b 359 174 353 150 357 163 b 361 228 360 193 361 210 b 243 517 361 337 325 435 b 147 596 213 546 179 569 b 75 708 111 626 75 655 b 62 744 75 723 68 733 b 50 763 58 752 58 763 b 46 762 49 763 48 762 b 17 742 36 757 22 757 b 0 697 14 726 0 711 b 1 595 0 662 3 631 b 0 469 0 552 0 511 b 1 429 0 456 0 442 b 22 289 6 382 22 337 b 24 128 22 238 24 184 b 22 66 24 108 23 86 b 19 -19 20 37 19 10 b 20 -132 19 -56 20 -95 b 13 -276 20 -180 19 -229 b 9 -359 10 -304 9 -330 b 12 -487 9 -402 12 -445 b 56 -582 12 -526 29 -554 b 197 -742 107 -632 160 -681 b 288 -1100 265 -851 276 -976 b 288 -1122 288 -1107 287 -1115 b 287 -1145 289 -1129 287 -1138 b 298 -1158 287 -1153 288 -1158 z m 249 -609 b 69 -357 197 -520 88 -471 b 249 -609 131 -441 229 -498 z m 279 -396 b 132 -223 233 -330 180 -279 b 81 -112 104 -192 81 -156 b 82 -91 81 -105 81 -98 b 279 -396 167 -125 269 -281 z m 271 -73 b 127 72 233 -14 179 26 b 81 167 96 98 81 127 b 84 194 81 176 82 184 b 271 -73 148 102 242 39 z m 304 150 b 75 475 229 256 112 334 b 304 150 233 357 305 287 z\"\n    },\n    \"flag128thDown\": {\n      \"x_min\": -0.8888888888888888,\n      \"x_max\": 252,\n      \"y_min\": -580,\n      \"y_max\": 754,\n      \"ha\": 1334,\n      \"o\": \"m 298 1086 b 287 1073 288 1086 287 1081 b 288 1050 287 1066 289 1057 b 288 1028 287 1043 288 1035 b 197 670 276 904 265 779 b 56 510 160 609 107 560 b 12 415 29 482 12 454 b 9 287 12 373 9 330 b 13 204 9 258 10 232 b 20 60 19 157 20 108 b 19 -53 20 23 19 -16 b 22 -138 19 -82 20 -109 b 24 -200 23 -158 24 -180 b 22 -361 24 -256 22 -310 b 1 -501 22 -409 6 -454 b 0 -541 0 -514 0 -528 b 0 -667 0 -583 -3 -624 b 0 -809 0 -675 -3 -791 b 46 -834 4 -825 36 -829 b 50 -835 48 -834 49 -835 b 62 -816 58 -835 58 -824 b 75 -780 68 -805 75 -795 b 147 -668 75 -727 111 -698 b 243 -589 179 -641 213 -618 b 361 -300 325 -507 361 -409 b 359 -246 361 -282 360 -265 b 344 -216 357 -235 353 -222 b 327 -186 331 -204 327 -196 b 337 -151 327 -176 333 -164 b 363 -17 351 -105 363 -60 b 331 107 363 24 353 65 b 328 115 328 109 328 112 b 331 130 328 121 330 125 b 361 294 348 184 361 239 b 343 399 361 330 356 364 b 333 462 334 420 333 441 b 341 573 333 500 341 537 b 340 593 341 580 340 588 b 330 661 337 616 338 642 b 320 706 323 677 320 691 b 328 765 320 726 324 744 b 347 924 338 818 347 871 b 330 1044 347 965 343 1004 b 328 1054 330 1047 330 1051 b 298 1086 320 1067 312 1086 z m 249 537 b 69 285 229 426 131 369 b 249 537 88 399 197 448 z m 279 324 b 82 19 269 209 167 53 b 81 40 81 26 81 33 b 132 151 81 84 104 120 b 279 324 180 207 233 258 z m 271 1 b 84 -266 242 -111 148 -174 b 81 -239 82 -256 81 -248 b 127 -144 81 -199 96 -170 b 271 1 179 -98 233 -58 z m 304 -222 b 75 -547 305 -359 233 -429 b 304 -222 112 -406 229 -328 z\"\n    },\n    \"accidentalFlat\": {\n      \"x_min\": 1,\n      \"x_max\": 209,\n      \"y_min\": -208,\n      \"y_max\": 472,\n      \"ha\": 680,\n      \"o\": \"m 29 -300 b 46 -289 33 -300 39 -297 b 107 -243 65 -274 86 -258 b 301 127 233 -153 301 -30 b 298 186 301 147 301 166 b 190 297 291 256 251 297 b 147 289 177 297 163 294 b 86 265 127 284 107 274 l 85 264 l 85 301 b 91 465 85 356 88 410 b 94 559 91 497 94 527 b 84 651 94 589 91 621 b 66 680 81 661 81 680 l 65 680 b 37 645 49 678 37 665 b 33 523 36 605 32 563 l 33 478 b 26 223 33 393 29 308 b 1 -141 22 101 1 -19 b 17 -287 1 -189 4 -239 b 29 -300 20 -295 23 -300 z m 68 -105 b 76 12 71 -68 72 -29 b 81 107 79 43 81 75 l 86 109 b 171 135 114 121 141 135 b 204 128 181 135 193 132 b 238 92 228 120 239 108 b 230 63 238 84 236 75 b 68 -105 193 -10 132 -59 z\"\n    },\n    \"accidentalNatural\": {\n      \"x_min\": 0,\n      \"x_max\": 213.5,\n      \"y_min\": -456,\n      \"y_max\": 462,\n      \"ha\": 918,\n      \"o\": \"m 255 -657 b 281 -624 271 -657 275 -636 b 285 -599 282 -615 285 -608 b 292 -300 288 -500 289 -400 b 289 -161 292 -253 289 -207 b 300 128 292 -65 297 32 b 304 168 300 128 302 150 l 304 173 l 305 190 l 305 199 l 307 225 b 304 259 307 229 310 246 b 272 298 297 274 302 305 b 63 266 204 279 134 272 b 72 514 68 348 72 432 b 71 595 72 541 72 567 b 56 665 71 619 66 642 b 17 579 9 651 17 608 b 3 144 19 433 7 289 b 0 -7 1 94 0 43 b 3 -134 0 -50 1 -92 b 7 -219 3 -163 7 -192 b 35 -251 7 -243 17 -251 b 49 -249 39 -251 43 -251 l 223 -223 l 230 -222 l 230 -359 b 223 -516 230 -410 223 -464 b 236 -619 223 -550 226 -585 b 255 -657 240 -634 236 -657 z m 58 -81 l 58 -63 b 55 81 56 -14 53 33 l 56 99 b 85 99 65 99 75 98 b 232 108 134 104 183 107 l 240 109 l 236 66 b 232 -48 235 29 232 -10 b 58 -81 174 -63 115 -73 z\"\n    },\n    \"accidentalSharp\": {\n      \"x_min\": -22,\n      \"x_max\": 390,\n      \"y_min\": -384,\n      \"y_max\": 383,\n      \"ha\": 767,\n      \"o\": \"m 202 -553 b 219 -526 213 -552 216 -536 b 226 -471 225 -507 226 -488 b 225 -425 226 -455 225 -441 b 226 -392 225 -415 225 -402 b 233 -305 229 -363 232 -334 l 297 -292 b 331 -469 300 -353 311 -412 b 347 -485 333 -477 338 -485 b 363 -469 356 -487 359 -477 b 374 -418 373 -454 374 -435 b 376 -382 376 -405 376 -393 b 372 -276 376 -347 373 -311 l 455 -259 b 550 -156 534 -243 544 -232 b 550 -109 550 -137 552 -124 b 526 -78 549 -91 541 -78 b 523 -78 524 -78 524 -78 b 507 -79 517 -78 513 -78 b 403 -101 474 -88 438 -95 l 379 -105 b 382 -42 380 -85 380 -63 b 384 96 383 4 384 50 b 503 131 425 107 464 118 b 549 173 524 138 543 150 b 562 249 554 199 562 223 b 554 294 562 264 560 279 b 536 315 549 308 544 315 b 533 315 534 315 534 315 b 517 312 528 315 523 315 b 382 266 472 294 428 279 l 377 344 b 359 531 374 406 372 469 b 348 552 356 539 357 552 b 347 552 348 552 347 552 l 343 552 b 315 528 331 549 317 544 l 315 501 b 320 249 315 416 318 333 l 243 232 b 239 361 243 275 242 318 b 226 425 238 383 238 403 b 199 359 194 409 199 382 b 193 223 196 312 194 268 b 72 202 153 215 112 209 b 4 118 13 192 4 183 b 10 66 0 102 12 84 b 33 29 7 39 14 30 b 48 32 37 29 42 30 b 187 55 95 39 141 46 l 183 -75 b 176 -145 181 -99 179 -122 b 16 -179 122 -156 69 -166 b -32 -232 -14 -186 -32 -197 b -17 -331 -32 -266 -19 -298 b -1 -356 -17 -347 -13 -354 b 12 -353 1 -356 6 -354 b 167 -320 63 -341 115 -331 b 166 -377 166 -338 166 -357 b 189 -526 166 -428 171 -477 b 202 -553 192 -536 189 -553 z m 240 -132 b 243 -37 242 -101 242 -69 b 245 65 245 -3 245 30 b 315 79 269 69 292 73 b 301 -120 308 13 305 -53 z\"\n    },\n    \"accidentalDoubleSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 287,\n      \"y_min\": -159,\n      \"y_max\": 159,\n      \"ha\": 318,\n      \"o\": \"m 84 -229 b 107 -216 91 -229 98 -225 b 200 -125 138 -186 167 -154 b 232 -95 212 -115 222 -105 b 347 -189 271 -125 310 -157 b 370 -200 356 -196 363 -200 b 396 -179 380 -200 389 -192 b 412 -102 410 -154 406 -125 b 377 -27 410 -69 400 -46 l 325 14 b 402 91 350 42 374 68 b 413 127 410 96 413 107 b 382 200 409 148 397 176 b 350 229 370 220 360 229 b 314 210 340 229 328 223 b 274 174 300 199 285 187 b 212 104 252 151 232 128 b 92 187 173 132 132 161 b 78 193 86 192 82 193 b 68 190 75 193 72 193 b 48 179 62 186 53 187 b 40 137 43 168 40 154 b 81 16 40 92 56 32 b 107 -3 89 10 98 4 b 14 -94 76 -32 45 -62 b 0 -124 6 -102 0 -114 b 12 -154 0 -134 3 -144 b 62 -215 26 -176 48 -193 b 84 -229 69 -225 76 -229 z\"\n    },\n    \"accidentalDoubleFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 359,\n      \"y_min\": -220,\n      \"y_max\": 446,\n      \"ha\": 666,\n      \"o\": \"m 43 -317 b 72 -301 55 -317 63 -310 b 160 -186 108 -268 134 -226 b 236 -60 186 -145 212 -102 b 233 -131 235 -85 233 -108 b 239 -220 233 -161 235 -190 b 259 -246 240 -233 239 -240 b 301 -228 284 -252 291 -238 b 465 -7 369 -163 416 -85 b 517 173 500 48 517 108 b 451 307 517 229 505 284 b 409 315 436 312 422 315 b 331 287 382 315 356 305 b 311 274 324 282 320 274 l 310 274 l 310 566 b 305 621 310 585 312 603 b 294 642 301 628 305 642 l 292 642 b 264 622 282 641 266 636 b 253 575 259 606 256 590 b 246 418 248 523 246 471 b 248 243 246 360 248 302 l 248 187 b 164 238 220 225 193 238 b 85 213 140 238 112 226 b 84 229 85 220 84 225 b 86 315 85 258 86 287 b 81 528 86 386 82 458 b 71 582 81 547 78 566 b 56 603 66 590 68 603 l 53 603 b 23 580 40 600 26 598 b 19 537 20 566 19 552 b 20 514 19 530 19 521 b 26 390 24 472 26 432 b 14 66 26 282 16 174 b 0 -168 13 -12 0 -91 b 12 -279 0 -206 3 -242 b 30 -314 16 -294 14 -308 b 43 -317 35 -317 39 -317 z m 75 -147 b 73 30 75 -86 75 -29 b 118 82 73 62 92 76 b 132 84 124 84 128 84 b 190 52 156 84 174 69 b 193 40 192 49 193 45 b 192 33 193 37 193 35 b 75 -147 157 -30 125 -95 z m 301 -72 b 302 7 302 -45 302 -19 l 302 86 b 351 158 304 121 321 145 b 383 166 361 163 373 166 b 435 143 402 166 419 157 b 445 127 441 138 445 132 b 441 114 445 122 444 118 b 301 -72 397 49 354 -14 z\"\n    },\n    \"accidentalParensLeft\": {\n      \"x_min\": 0,\n      \"x_max\": 130.18934911242604,\n      \"y_min\": -270,\n      \"y_max\": 267.6082500723851,\n      \"ha\": 537.6082500723851,\n      \"o\": \"m 107 -389 b 127 -374 114 -389 120 -384 b 141 -347 132 -367 137 -357 b 151 -294 148 -330 151 -311 b 122 -207 151 -265 141 -236 b 63 -65 94 -164 72 -117 b 59 -10 60 -46 59 -27 b 145 223 59 78 94 153 b 187 354 176 262 189 305 b 177 384 187 364 190 380 b 143 373 166 387 153 383 b 124 354 137 367 130 361 b 0 -35 33 240 0 108 l 0 -92 b 85 -372 4 -193 27 -287 b 107 -389 92 -383 99 -389 z\"\n    },\n    \"accidentalParensRight\": {\n      \"x_min\": -0.4444444444444445,\n      \"x_max\": 139,\n      \"y_min\": -275,\n      \"y_max\": 277,\n      \"ha\": 552,\n      \"o\": \"m 58 -396 b 96 -354 75 -396 85 -370 b 200 13 168 -238 200 -111 b 153 268 200 109 184 190 b 49 392 131 320 101 364 b 26 399 40 397 33 399 b 0 366 10 399 0 387 b 0 318 -1 350 0 334 l 0 291 b 27 238 -3 266 7 253 b 143 9 105 180 143 98 b 141 -20 143 -1 143 -10 b 63 -225 135 -92 108 -164 b 36 -307 45 -251 36 -278 b 40 -344 36 -320 37 -331 b 42 -356 42 -347 42 -351 b 58 -396 42 -374 37 -396 z\"\n    },\n    \"accidentalQuarterToneFlatStein\": {\n      \"x_min\": 0,\n      \"x_max\": 208,\n      \"y_min\": -240,\n      \"y_max\": 440,\n      \"ha\": 680,\n      \"o\": \"m 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z\"\n    },\n    \"accidentalThreeQuarterTonesFlatZimmermann\": {\n      \"x_min\": 0,\n      \"x_max\": 422,\n      \"y_min\": -240,\n      \"y_max\": 440,\n      \"ha\": 680,\n      \"o\": \"m 336 -346 b 353 -336 340 -346 346 -343 b 413 -289 372 -320 393 -304 b 608 81 540 -199 608 -76 b 605 140 608 101 608 120 b 497 251 598 210 557 251 b 454 243 484 251 469 248 b 393 219 433 238 413 228 l 392 217 l 392 255 b 397 419 392 310 395 364 b 400 513 397 451 400 481 b 390 605 400 543 397 575 b 373 634 387 615 387 634 l 372 634 b 344 599 356 632 344 619 b 340 477 343 559 338 517 l 340 432 b 333 177 340 347 336 262 b 308 -187 328 55 308 -65 b 324 -333 308 -235 311 -285 b 336 -346 327 -341 330 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z m 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 374 -151 b 383 -35 377 -114 379 -75 b 387 60 386 -3 387 29 l 393 63 b 478 89 420 75 448 89 b 511 82 488 89 500 86 b 544 46 534 73 546 62 b 537 17 544 37 543 29 b 374 -151 500 -56 439 -105 z\"\n    },\n    \"accidentalQuarterToneSharpStein\": {\n      \"x_min\": 0,\n      \"x_max\": 300,\n      \"y_min\": -338,\n      \"y_max\": 351,\n      \"ha\": 689,\n      \"o\": \"m 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 b 35 66 29 66 32 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z\"\n    },\n    \"accidentalThreeQuarterTonesSharpStein\": {\n      \"x_min\": -23,\n      \"x_max\": 388,\n      \"y_min\": -373,\n      \"y_max\": 445,\n      \"ha\": 818,\n      \"o\": \"m 114 -537 b 138 -475 137 -518 138 -495 b 147 -292 138 -413 144 -353 b 212 -278 168 -287 190 -282 b 243 -444 215 -333 225 -389 b 261 -467 248 -454 251 -465 b 281 -446 272 -469 276 -455 b 292 -347 292 -416 288 -384 b 288 -262 289 -320 288 -291 l 374 -245 b 376 -311 374 -266 374 -288 b 390 -456 379 -357 379 -405 b 416 -396 412 -436 415 -418 b 423 -287 420 -360 423 -323 b 422 -235 423 -269 423 -252 b 451 -229 432 -233 441 -232 b 547 -98 524 -215 547 -199 l 547 -89 b 521 -49 546 -59 540 -49 b 497 -52 516 -49 507 -49 b 418 -68 469 -56 444 -63 b 423 52 419 -29 422 12 b 426 140 425 81 425 109 b 495 160 449 145 472 153 b 552 219 526 170 546 189 b 559 279 557 240 553 262 b 530 341 559 324 552 341 b 490 331 520 341 507 338 b 432 311 471 324 452 318 b 449 552 436 392 442 471 b 452 588 451 563 452 575 b 446 622 452 599 451 611 b 436 641 444 629 448 641 b 418 628 428 641 420 636 b 409 602 413 621 410 611 b 386 297 396 501 390 399 b 297 274 356 288 327 281 b 291 403 295 317 294 360 b 274 550 288 452 284 501 b 259 569 271 564 265 569 b 240 559 253 569 248 563 b 230 537 232 554 230 546 l 230 488 b 233 369 230 448 232 409 b 236 261 236 333 238 297 b 156 245 210 255 183 251 b 154 396 154 295 154 346 b 150 416 154 403 153 410 b 140 438 145 423 150 438 l 138 438 b 118 413 128 436 118 428 b 112 354 118 393 114 374 b 109 238 109 315 109 276 b 49 226 89 233 69 230 b 3 163 16 222 3 202 b 7 91 3 138 9 114 b 29 62 7 69 13 62 b 39 63 32 62 35 63 b 104 73 60 66 82 71 b 101 -10 104 46 102 17 l 92 -132 l 10 -150 b -33 -204 -19 -157 -33 -170 b -19 -310 -32 -240 -19 -274 b -6 -324 -19 -321 -13 -324 b 6 -323 -1 -324 1 -324 b 82 -307 32 -317 58 -311 b 81 -376 82 -330 81 -353 b 114 -537 81 -431 94 -484 z m 154 -120 b 157 20 154 -73 156 -26 b 158 82 158 40 158 62 b 230 95 183 86 206 89 b 225 0 229 63 226 32 b 217 -107 223 -35 220 -71 z m 294 -92 b 297 -37 295 -73 295 -56 b 300 49 300 -9 300 20 b 300 108 300 69 300 88 b 379 127 325 114 353 120 b 374 -76 376 59 374 -9 b 294 -92 347 -82 320 -86 z\"\n    },\n    \"accidentalBuyukMucennebFlat\": {\n      \"x_min\": 1.8692317181955784,\n      \"x_max\": 287,\n      \"y_min\": -248,\n      \"y_max\": 432.4720949426819,\n      \"ha\": 680.4720949426819,\n      \"o\": \"m 410 128 b 302 239 403 199 363 239 b 259 232 289 239 275 236 b 199 207 239 226 219 216 l 197 206 l 197 243 b 197 251 197 246 197 248 b 347 317 248 272 298 295 b 376 347 360 324 372 334 b 389 435 387 376 393 405 b 348 454 384 462 377 465 b 202 387 300 432 251 409 b 203 408 203 395 203 402 b 203 431 203 416 203 423 b 347 490 252 451 300 469 b 376 517 360 495 372 505 b 389 599 387 546 393 572 b 348 616 384 625 377 628 b 203 556 300 596 251 576 b 196 593 202 569 199 582 b 179 622 193 603 193 622 l 177 622 b 150 588 161 621 150 608 b 147 533 150 570 148 552 b 29 488 108 517 69 503 b 3 455 12 482 3 472 b 12 353 1 422 9 389 b 145 408 56 372 101 389 b 145 363 145 392 145 377 b 29 315 107 347 68 331 b 3 281 12 310 3 298 b 12 170 1 245 9 209 b 141 226 55 189 98 207 b 138 166 140 206 138 186 b 114 -199 134 43 115 -76 b 130 -344 114 -246 117 -297 b 141 -357 132 -353 135 -357 b 158 -347 145 -357 151 -354 b 219 -301 177 -331 199 -315 b 413 69 346 -210 413 -88 b 410 128 413 89 413 108 z m 350 35 b 343 6 350 26 348 17 b 180 -163 308 -69 245 -117 b 189 -46 183 -125 184 -86 b 193 49 192 -14 193 17 l 199 52 b 284 78 226 63 253 78 b 317 71 294 78 305 75 b 350 35 340 62 351 50 z\"\n    },\n    \"accidentalBakiyeFlat\": {\n      \"x_min\": 1.8692317181955784,\n      \"x_max\": 287,\n      \"y_min\": -236,\n      \"y_max\": 444,\n      \"ha\": 680,\n      \"o\": \"m 141 -340 b 158 -330 145 -340 151 -337 b 219 -284 177 -314 199 -298 b 413 86 346 -193 413 -71 b 410 145 413 107 413 125 b 302 256 403 216 363 256 b 259 249 289 256 275 253 b 199 225 239 243 219 233 l 197 223 l 197 261 b 199 334 197 285 199 310 b 347 406 249 357 298 382 b 376 439 360 413 372 425 b 390 516 384 465 390 490 b 389 537 390 523 390 530 b 372 564 384 556 382 564 b 348 557 367 564 359 562 b 204 487 300 537 253 510 b 206 518 206 497 206 507 b 196 611 206 549 203 580 b 179 639 193 621 193 639 l 177 639 b 150 605 161 638 150 625 b 145 482 148 564 144 523 l 145 458 b 29 405 107 439 68 420 b 3 366 12 397 3 386 b 12 243 1 325 9 287 b 143 307 56 265 99 285 l 138 183 b 114 -181 134 60 114 -59 b 130 -327 114 -229 117 -279 b 141 -340 132 -336 135 -340 z m 180 -145 b 189 -29 183 -108 184 -69 b 193 66 192 3 193 35 l 199 69 b 284 95 226 81 253 95 b 317 88 294 95 305 92 b 350 52 340 79 351 68 b 343 23 350 43 348 35 b 180 -145 305 -50 245 -99 z\"\n    },\n    \"accidentalKomaSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 300,\n      \"y_min\": -338,\n      \"y_max\": 351,\n      \"ha\": 689,\n      \"o\": \"m 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 b 35 66 29 66 32 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z\"\n    },\n    \"accidentalKucukMucennebSharp\": {\n      \"x_min\": -0.15206251809627475,\n      \"x_max\": 359,\n      \"y_min\": -420,\n      \"y_max\": 343,\n      \"ha\": 763,\n      \"o\": \"m 236 -605 b 262 -543 256 -583 261 -564 b 269 -423 268 -503 269 -464 b 266 -340 269 -396 268 -367 l 361 -318 b 405 -276 384 -312 399 -298 b 413 -189 412 -248 416 -219 b 395 -164 412 -171 409 -164 b 382 -166 392 -164 387 -164 b 264 -193 343 -176 304 -184 b 269 -102 265 -163 268 -132 b 454 -62 331 -89 392 -78 b 501 -23 477 -58 494 -45 b 517 62 511 6 517 33 b 487 112 517 95 513 112 b 471 111 482 112 477 112 b 274 66 406 95 340 81 b 276 138 275 91 276 114 b 350 154 301 144 325 148 b 402 203 377 160 396 176 b 412 284 408 230 412 258 b 392 311 412 302 406 311 b 372 308 386 311 379 310 b 287 291 343 301 314 297 l 295 405 b 298 441 297 416 298 428 b 292 475 298 452 297 464 b 282 494 289 482 294 494 b 264 481 274 494 266 490 b 255 455 259 474 256 464 b 239 282 248 397 243 340 b 148 268 209 278 179 274 b 62 164 62 252 62 253 l 62 132 b 79 108 60 117 65 108 l 86 108 l 230 130 b 229 92 230 118 229 105 b 228 56 228 79 228 68 b 66 20 173 43 120 32 b 0 -59 6 7 3 1 l 0 -138 b 14 -160 -1 -156 4 -160 b 27 -158 19 -160 23 -160 b 222 -112 92 -141 157 -127 b 220 -203 220 -143 220 -173 b 147 -217 196 -207 171 -213 b 89 -288 92 -228 89 -229 b 95 -347 85 -305 96 -325 b 112 -374 92 -366 98 -374 b 125 -373 117 -374 121 -374 l 220 -351 b 222 -458 220 -386 220 -422 b 236 -605 223 -504 225 -552 z\"\n    },\n    \"accidentalKoron\": {\n      \"x_min\": 0,\n      \"x_max\": 303,\n      \"y_min\": -462.4598053473055,\n      \"y_max\": 180,\n      \"ha\": 642.4598053473055,\n      \"o\": \"m 59 -665 b 72 -649 69 -662 72 -657 b 69 -626 72 -642 69 -634 b 69 -622 69 -625 69 -624 b 69 -600 69 -615 69 -608 b 55 -156 60 -456 68 -311 b 86 -170 66 -166 76 -170 b 112 -163 95 -170 104 -166 b 390 -35 204 -120 298 -78 b 436 -1 409 -27 436 -27 b 396 46 436 22 413 33 l 382 55 b 46 243 271 121 157 179 b 12 259 29 253 17 259 b 0 219 1 259 0 248 b 3 -372 0 22 3 -176 b 6 -616 3 -454 6 -536 b 59 -665 6 -638 40 -671 z m 55 -118 l 55 199 b 363 24 156 141 258 84 b 55 -118 259 -24 160 -69 z\"\n    },\n    \"accidentalSori\": {\n      \"x_min\": 0,\n      \"x_max\": 434,\n      \"y_min\": -295,\n      \"y_max\": 325,\n      \"ha\": 620,\n      \"o\": \"m 194 -425 b 196 -409 194 -418 196 -413 b 194 -194 196 -337 196 -266 b 364 -127 251 -171 308 -150 b 361 -321 363 -192 364 -256 b 410 -387 360 -357 373 -377 b 413 -373 412 -382 413 -377 b 418 -114 418 -287 418 -200 l 418 -105 b 595 -35 477 -82 536 -59 b 625 0 612 -27 625 -22 b 593 48 624 23 618 39 l 419 117 b 423 370 419 202 423 285 b 426 403 423 382 426 393 b 418 436 426 415 425 426 b 384 468 409 449 399 468 b 369 448 370 468 369 459 b 369 436 369 444 369 441 b 369 428 369 433 369 431 l 369 423 b 367 138 369 328 367 233 l 353 143 l 192 207 l 192 367 b 173 406 192 383 184 396 b 151 422 167 413 160 422 b 144 420 148 422 147 422 b 137 403 138 416 137 410 b 137 392 137 399 137 396 l 137 229 b 33 271 102 243 68 256 b 13 276 26 274 19 276 b 0 262 6 276 0 272 b 35 199 1 239 0 212 l 138 160 b 140 -148 138 58 138 -45 b 56 -181 111 -158 84 -170 b 24 -215 35 -189 24 -199 b 29 -235 24 -220 26 -228 b 49 -253 35 -249 42 -253 b 78 -240 59 -253 69 -243 b 140 -216 98 -233 120 -225 l 140 -356 b 194 -425 140 -406 141 -406 z m 194 -125 b 193 138 194 -37 193 50 b 315 89 233 122 275 107 b 366 71 333 84 350 76 b 364 -58 366 27 366 -16 b 194 -125 308 -81 251 -104 z m 419 -36 l 419 49 l 526 7 l 485 -10 z\"\n    },\n    \"articAccentAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 425,\n      \"y_min\": 0,\n      \"y_max\": 326,\n      \"ha\": 326,\n      \"o\": \"m 27 1 b 78 12 46 0 62 6 b 347 112 168 45 253 91 b 521 184 409 128 459 167 b 608 259 557 194 589 220 b 612 274 611 265 612 271 b 598 292 612 281 608 287 b 477 347 559 312 518 331 b 176 465 374 384 275 425 b 156 469 168 468 161 469 b 125 456 145 469 137 465 b 53 370 96 432 78 399 b 45 353 48 363 45 357 b 68 333 45 344 52 337 b 360 225 166 298 262 261 b 192 154 302 203 249 171 b 13 36 120 132 53 105 b 0 13 9 29 0 22 b 0 9 0 12 0 10 b 16 0 3 1 10 0 l 26 0 b 27 1 27 0 27 0 z\"\n    },\n    \"articAccentBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 425,\n      \"y_min\": -326,\n      \"y_max\": 0,\n      \"ha\": 326,\n      \"o\": \"m 16 -469 l 26 -469 b 27 -469 27 -469 27 -469 b 78 -458 46 -469 62 -464 b 347 -357 168 -426 253 -380 b 521 -285 409 -341 459 -302 b 608 -210 557 -276 589 -249 b 612 -196 611 -204 612 -200 b 598 -179 612 -189 608 -183 b 477 -122 559 -157 518 -138 b 176 -4 374 -85 275 -45 b 156 0 168 -1 161 0 b 125 -13 145 0 137 -4 b 53 -99 96 -37 78 -71 b 45 -117 48 -107 45 -112 b 68 -137 45 -125 52 -132 b 360 -245 166 -171 262 -209 b 192 -315 302 -266 249 -300 b 13 -433 120 -337 53 -366 b 0 -456 9 -442 0 -448 b 0 -461 0 -458 0 -459 b 16 -469 3 -468 10 -469 z\"\n    },\n    \"articTenutoAbove\": {\n      \"x_min\": 0.35192668236256364,\n      \"x_max\": 471.12386605641063,\n      \"y_min\": 0,\n      \"y_max\": 56,\n      \"ha\": 56,\n      \"o\": \"m 137 0 b 197 1 156 0 179 1 b 409 6 268 1 338 6 b 482 4 432 6 459 6 b 556 0 508 3 534 0 b 651 10 588 0 621 3 b 678 27 662 12 678 10 b 654 59 680 45 672 53 b 511 75 606 73 560 73 b 255 81 426 78 341 81 b 160 79 222 81 193 79 l 36 79 b 1 71 24 78 7 85 b 19 32 -3 56 9 43 b 45 16 26 24 36 20 b 137 0 76 3 108 0 z\"\n    },\n    \"articTenutoBelow\": {\n      \"x_min\": 0.35192668236256364,\n      \"x_max\": 471.12386605641063,\n      \"y_min\": -59,\n      \"y_max\": -3,\n      \"ha\": 56,\n      \"o\": \"m 137 -85 b 197 -84 156 -85 179 -84 b 409 -79 268 -84 338 -79 b 482 -81 432 -79 459 -79 b 556 -85 508 -82 534 -85 b 651 -75 588 -85 621 -82 b 678 -58 662 -73 678 -75 b 654 -26 680 -40 672 -32 b 511 -10 606 -12 560 -12 b 255 -4 426 -7 341 -4 b 160 -6 222 -4 193 -6 l 36 -6 b 1 -14 24 -7 7 0 b 19 -53 -3 -29 9 -42 b 45 -69 26 -60 36 -65 b 137 -85 76 -82 108 -85 z\"\n    },\n    \"articStaccatoAbove\": {\n      \"x_min\": 1.4151102965496913,\n      \"x_max\": 112,\n      \"y_min\": 0,\n      \"y_max\": 156,\n      \"ha\": 156,\n      \"o\": \"m 98 0 b 132 23 109 0 122 7 b 161 112 150 50 161 79 b 158 148 161 124 161 137 b 125 186 154 167 131 167 b 63 225 117 215 85 216 b 23 197 45 222 30 219 b 3 91 12 163 12 127 b 19 66 0 79 4 69 b 65 27 40 62 53 46 b 98 0 76 9 88 0 z\"\n    },\n    \"articStaccatoBelow\": {\n      \"x_min\": 1.4151102965496913,\n      \"x_max\": 112.08403222864916,\n      \"y_min\": -156,\n      \"y_max\": 0,\n      \"ha\": 156,\n      \"o\": \"m 132 -202 b 161 -112 151 -174 163 -145 b 158 -76 161 -101 161 -88 b 125 -39 153 -58 131 -58 b 63 0 115 -10 85 -9 b 23 -27 45 -3 30 -6 b 3 -134 12 -62 10 -98 b 19 -158 0 -145 4 -156 b 65 -197 40 -164 53 -179 b 98 -225 75 -216 88 -225 b 132 -202 109 -225 122 -217 z\"\n    },\n    \"articStaccatissimoAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 139,\n      \"y_min\": 0,\n      \"y_max\": 411,\n      \"ha\": 411,\n      \"o\": \"m 96 0 l 104 0 b 144 115 143 29 138 75 b 197 423 158 217 180 320 b 200 454 199 433 200 444 b 181 540 200 482 193 513 b 112 592 167 573 141 592 b 55 567 92 592 72 585 b 0 490 32 546 3 527 l 0 484 b 27 279 14 416 14 347 b 84 20 43 193 52 104 b 96 0 86 13 92 6 z\"\n    },\n    \"articStaccatissimoBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 139,\n      \"y_min\": -411,\n      \"y_max\": 0,\n      \"ha\": 411,\n      \"o\": \"m 88 -592 b 145 -567 108 -592 128 -585 b 200 -490 168 -546 197 -527 l 200 -484 b 173 -279 186 -416 186 -347 b 117 -20 157 -193 148 -104 b 104 0 114 -13 108 -6 l 96 0 b 56 -115 58 -29 62 -75 b 3 -423 42 -217 20 -320 b 0 -454 1 -433 0 -444 b 19 -540 0 -482 7 -513 b 88 -592 33 -573 59 -592 z\"\n    },\n    \"articMarcatoAbove\": {\n      \"x_min\": 0.04121419527862119,\n      \"x_max\": 396,\n      \"y_min\": 0,\n      \"y_max\": 328.0000000000001,\n      \"ha\": 328.0000000000001,\n      \"o\": \"m 477 0 b 510 13 488 0 500 6 b 570 124 546 40 563 81 b 547 183 570 147 560 166 b 356 422 487 265 405 330 b 346 442 354 429 350 436 l 346 444 b 318 465 340 456 330 464 l 312 469 b 274 449 294 480 284 461 b 242 413 262 438 253 425 b 56 196 177 343 112 274 b 1 56 26 154 13 105 b 27 20 -4 35 9 20 b 42 23 32 20 37 20 b 84 53 59 29 72 39 b 255 269 141 125 193 200 b 275 229 262 255 266 242 b 448 14 324 151 390 86 b 477 0 456 4 467 0 z\"\n    },\n    \"articMarcatoBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 395.9587858047214,\n      \"y_min\": -328.0000000000001,\n      \"y_max\": 0,\n      \"ha\": 328.0000000000001,\n      \"o\": \"m 258 -469 b 297 -449 276 -480 287 -461 b 328 -413 308 -438 317 -425 b 514 -196 393 -343 458 -274 b 569 -56 544 -154 557 -105 b 543 -20 575 -35 562 -20 b 528 -23 539 -20 533 -20 b 487 -53 511 -29 498 -39 b 315 -269 429 -125 377 -200 b 295 -229 308 -255 304 -242 b 122 -14 246 -151 180 -86 b 94 0 114 -4 104 0 b 60 -13 82 0 71 -6 b 0 -124 24 -40 7 -81 b 23 -183 0 -147 10 -166 b 215 -422 84 -265 166 -330 b 225 -442 216 -429 220 -436 l 225 -444 b 252 -465 230 -456 240 -464 z\"\n    },\n    \"fermataAbove\": {\n      \"x_min\": -0.04550444040404433,\n      \"x_max\": 472,\n      \"y_min\": 2.015071727506986,\n      \"y_max\": 454,\n      \"ha\": 451.984928272493,\n      \"o\": \"m 39 10 b 78 108 66 37 71 73 b 163 311 92 181 111 252 b 284 423 199 353 239 392 b 373 458 312 444 340 454 b 433 431 395 458 410 446 b 603 153 530 361 596 276 b 595 121 603 144 595 131 l 595 88 b 602 50 596 75 589 55 b 639 73 619 43 631 60 b 651 102 645 82 648 92 b 667 194 660 132 662 163 b 680 278 671 222 672 248 b 560 567 680 386 638 481 b 396 654 508 625 452 649 b 291 632 364 654 325 644 b 161 526 235 613 200 566 b 4 249 85 446 26 357 b 4 174 0 222 -3 196 b 10 19 4 124 4 69 b 29 4 12 6 16 0 b 39 10 35 4 33 4 z m 338 37 b 370 40 350 36 357 36 b 380 75 387 40 380 43 b 389 94 382 79 382 85 b 356 132 389 111 374 122 b 269 154 328 147 300 156 b 225 125 252 154 228 157 b 261 48 222 81 232 56 b 338 37 287 40 312 40 z\"\n    },\n    \"fermataBelow\": {\n      \"x_min\": -0.310835055998654,\n      \"x_max\": 518.570567335755,\n      \"y_min\": -430,\n      \"y_max\": -0.9161449836506543,\n      \"ha\": 429.08385501634933,\n      \"o\": \"m 344 -615 b 500 -543 402 -602 452 -576 b 713 -253 605 -471 661 -364 b 746 -98 737 -204 750 -153 b 727 -59 744 -82 744 -59 b 688 -88 711 -59 694 -68 b 678 -109 687 -96 683 -102 b 562 -314 648 -183 611 -252 b 387 -439 516 -373 458 -416 b 328 -449 367 -446 347 -449 b 180 -386 274 -449 225 -423 b 69 -179 111 -330 69 -262 b 75 -121 69 -160 71 -141 b 84 -58 78 -101 84 -79 b 82 -39 84 -52 84 -45 b 68 -1 79 -26 82 -4 b 26 -32 49 0 33 -12 b 20 -52 24 -39 22 -45 b 0 -223 9 -107 -3 -161 b 141 -553 1 -348 27 -468 b 304 -619 192 -590 243 -619 b 344 -615 317 -619 330 -618 z m 415 -190 b 435 -157 429 -192 435 -184 b 308 -27 435 -86 379 -27 b 271 -46 287 -27 272 -35 b 269 -69 269 -55 269 -62 b 364 -183 269 -128 302 -170 z\"\n    },\n    \"breathMarkComma\": {\n      \"x_min\": 0,\n      \"x_max\": 148,\n      \"y_min\": 0,\n      \"y_max\": 275,\n      \"ha\": 275,\n      \"o\": \"m 120 0 b 187 78 156 20 174 48 b 213 209 206 121 213 164 b 206 294 213 238 210 265 b 140 390 200 337 171 367 b 122 396 134 395 128 396 b 68 382 105 396 85 384 b 46 379 60 382 53 382 b 0 328 12 369 0 357 b 1 311 0 323 1 317 b 30 210 4 275 22 243 b 66 167 39 179 46 167 b 94 171 73 167 82 168 b 143 180 109 174 124 180 b 160 179 148 180 154 180 b 120 66 124 145 120 107 b 120 0 120 45 121 23 z\"\n    },\n    \"breathMarkUpbow\": {\n      \"x_min\": 0,\n      \"x_max\": 254,\n      \"y_min\": 0,\n      \"y_max\": 595,\n      \"ha\": 595,\n      \"o\": \"m 233 0 b 256 48 251 14 253 30 b 272 183 264 92 265 138 b 311 455 289 274 295 364 b 350 716 327 541 341 628 b 366 815 354 749 366 782 b 359 857 366 829 363 842 b 327 815 334 852 330 832 b 302 674 315 769 310 721 b 248 357 288 567 269 462 b 225 226 240 314 242 268 b 210 251 212 232 213 243 b 69 721 163 408 117 564 b 32 835 58 760 53 801 b 20 851 29 841 27 851 b 14 850 19 851 16 851 b 0 828 6 847 0 838 l 0 825 b 12 765 1 804 7 785 b 194 125 73 552 132 338 b 233 0 206 84 213 42 z\"\n    },\n    \"caesura\": {\n      \"x_min\": 0,\n      \"x_max\": 565.5831864753839,\n      \"y_min\": -0.09016994374947417,\n      \"y_max\": 562.4481112129314,\n      \"ha\": 562.5382811566809,\n      \"o\": \"m 226 1 b 248 13 238 -4 243 7 l 353 137 b 759 638 490 302 632 464 b 814 805 795 688 819 740 b 779 786 796 805 788 796 b 628 609 724 732 678 668 b 310 242 523 485 416 363 b 217 69 265 190 217 140 b 222 30 217 58 219 45 b 222 23 222 29 220 26 b 220 12 222 20 220 16 b 226 1 220 7 222 3 z m 0 76 b 49 122 24 92 37 107 b 444 613 180 287 305 455 b 528 770 484 660 518 708 b 531 792 530 778 531 785 b 524 808 531 799 530 805 b 490 792 513 815 498 802 b 390 683 456 756 420 721 b 48 262 275 543 164 400 b 0 76 0 207 7 145 z\"\n    },\n    \"caesuraCurved\": {\n      \"x_min\": 0,\n      \"x_max\": 386,\n      \"y_min\": -10,\n      \"y_max\": 584,\n      \"ha\": 594,\n      \"o\": \"m 180 -14 b 246 14 213 -13 230 0 b 347 144 288 52 315 99 b 526 471 420 246 488 350 b 556 671 546 537 556 603 b 543 798 556 713 553 756 b 504 837 537 822 521 828 b 490 841 500 840 494 841 b 472 832 482 841 477 838 b 406 678 436 785 406 737 b 410 638 406 665 408 652 b 425 511 419 595 425 553 b 315 186 425 395 387 287 b 180 -14 271 122 228 58 z m 14 24 b 49 39 29 24 40 32 b 120 114 76 60 99 85 b 216 276 156 166 184 223 b 317 626 281 384 317 501 b 315 664 317 639 317 651 b 301 773 314 701 311 737 b 262 808 295 795 278 808 b 245 799 256 808 249 805 b 170 641 209 750 170 706 b 171 621 170 634 170 628 b 177 511 176 585 177 549 b 114 229 177 415 160 320 b 0 26 79 161 42 95 b 14 24 6 24 10 24 z\"\n    },\n    \"restMaxima\": {\n      \"x_min\": 0,\n      \"x_max\": 366,\n      \"y_min\": -255,\n      \"y_max\": 255,\n      \"ha\": 510,\n      \"o\": \"m 397 -367 b 504 -343 436 -367 468 -347 b 518 -318 516 -341 518 -330 b 527 -30 518 -217 527 -117 b 526 33 527 -7 527 13 l 526 301 b 501 350 526 323 520 341 b 428 367 477 361 452 367 b 374 359 410 367 393 364 b 357 333 361 354 357 347 b 356 91 357 252 356 171 l 356 30 b 340 -307 357 -82 346 -194 b 397 -367 337 -354 350 -367 z m 46 -357 b 58 -356 49 -357 53 -357 b 154 -333 91 -351 121 -338 b 173 -305 168 -330 173 -320 l 173 302 b 132 356 173 330 157 348 b 68 364 112 363 89 364 b 3 304 19 363 1 348 l 3 4 l 0 4 b 1 -302 0 -98 0 -200 b 46 -357 1 -331 16 -357 z\"\n    },\n    \"restDoubleWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 122,\n      \"y_min\": 0,\n      \"y_max\": 249,\n      \"ha\": 249,\n      \"o\": \"m 43 0 b 58 1 48 0 52 0 b 124 20 81 6 102 17 b 176 96 173 27 176 58 b 173 220 174 138 173 179 b 176 304 173 248 176 276 b 140 353 176 331 163 346 b 95 359 125 356 111 359 b 32 346 73 359 52 354 b 0 315 20 340 0 337 b 1 243 0 291 1 268 l 1 174 l 4 174 l 4 48 b 43 0 4 16 17 0 z\"\n    },\n    \"restWhole\": {\n      \"x_min\": 0.8908513171538642,\n      \"x_max\": 500,\n      \"y_min\": -120,\n      \"y_max\": 14,\n      \"ha\": 134,\n      \"o\": \"m 76 -173 l 356 -173 l 356 -171 l 642 -171 b 719 -115 680 -171 717 -145 b 720 -82 719 -104 720 -92 b 711 -20 720 -60 719 -40 b 672 17 704 0 694 10 b 649 20 664 20 657 20 b 605 17 634 20 621 17 b 92 19 433 17 262 17 b 29 7 69 20 49 12 b 9 -17 12 4 9 -6 b 10 -43 9 -26 10 -35 b 1 -84 10 -58 3 -72 b 76 -173 0 -147 7 -173 z\"\n    },\n    \"restHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 518.3998530468286,\n      \"y_min\": 0,\n      \"y_max\": 162,\n      \"ha\": 162,\n      \"o\": \"m 98 0 l 446 0 l 556 0 b 665 1 592 0 629 0 b 746 82 720 3 743 29 b 736 174 749 114 740 144 b 670 232 729 215 708 232 b 570 229 636 232 603 229 b 356 233 498 229 426 233 l 73 233 b 0 179 19 233 0 220 b 1 154 0 171 0 164 b 6 95 4 135 6 115 b 98 0 3 27 29 0 z\"\n    },\n    \"restQuarter\": {\n      \"x_min\": -0.3784452492533808,\n      \"x_max\": 263,\n      \"y_min\": -415,\n      \"y_max\": 415,\n      \"ha\": 830,\n      \"o\": \"m 151 -596 b 164 -563 163 -589 161 -575 b 160 -546 164 -557 161 -552 b 124 -396 148 -495 135 -446 b 122 -380 122 -390 122 -384 b 199 -255 122 -331 158 -272 b 228 -256 209 -249 217 -253 b 324 -346 274 -271 298 -310 b 353 -369 331 -356 341 -369 b 360 -367 356 -369 357 -369 b 379 -336 373 -361 379 -348 l 377 -325 b 344 -232 372 -292 366 -258 b 249 -58 301 -180 278 -117 b 242 -36 245 -49 242 -42 b 258 -7 242 -26 248 -17 b 328 78 284 20 311 45 b 354 158 344 104 354 131 b 337 216 354 177 350 196 b 213 435 294 288 249 359 b 115 575 189 487 158 536 b 78 598 105 585 92 598 b 59 592 72 598 66 596 b 39 562 45 583 39 572 b 53 527 39 550 45 539 b 168 344 98 469 125 402 b 187 307 181 328 187 317 b 153 269 187 294 176 284 b 62 213 122 252 91 235 b 40 180 48 203 40 192 b 46 158 40 173 43 166 b 99 65 60 125 79 95 b 183 -79 131 20 160 -29 b 156 -86 173 -88 164 -85 b 0 -261 58 -99 -7 -173 b 96 -557 10 -366 49 -464 b 124 -585 102 -569 109 -580 b 145 -598 132 -588 138 -598 b 151 -596 147 -598 150 -598 z\"\n    },\n    \"rest8th\": {\n      \"x_min\": 0,\n      \"x_max\": 289,\n      \"y_min\": -260,\n      \"y_max\": 261,\n      \"ha\": 521,\n      \"o\": \"m 164 -374 b 212 -340 190 -373 203 -357 b 276 -190 238 -292 258 -242 b 410 285 333 -36 359 128 b 416 314 413 294 416 304 l 416 321 b 393 354 415 341 410 354 b 382 353 389 354 386 354 b 292 311 347 347 315 333 b 174 225 256 276 216 251 b 157 219 168 222 163 219 b 140 228 151 219 145 222 b 131 246 134 233 131 240 b 135 262 131 252 132 256 b 147 298 141 272 147 285 b 127 367 147 323 154 354 b 94 376 114 373 102 376 b 48 336 75 376 63 363 b 3 181 20 288 12 235 b 0 150 1 170 0 160 b 109 24 0 84 35 24 b 171 36 127 24 148 27 b 289 101 213 52 248 75 b 164 -374 256 -62 193 -213 z\"\n    },\n    \"rest16th\": {\n      \"x_min\": 0,\n      \"x_max\": 333,\n      \"y_min\": -328.283950617284,\n      \"y_max\": 244,\n      \"ha\": 572.2839506172841,\n      \"o\": \"m 209 -471 b 246 -458 222 -477 236 -468 b 307 -338 279 -425 300 -384 b 324 -226 312 -301 317 -262 b 428 161 350 -94 386 35 b 480 318 445 215 480 259 b 467 347 480 331 477 341 b 445 351 461 350 454 351 b 408 337 432 351 419 347 b 402 333 405 336 403 334 b 223 215 344 294 294 245 b 236 259 229 233 235 246 b 238 276 238 265 238 271 b 212 338 238 302 226 334 b 193 341 206 340 199 341 b 86 289 156 341 104 317 b 59 180 66 255 59 217 b 156 27 59 76 92 27 b 236 46 179 27 204 35 b 338 101 271 59 298 82 b 289 -49 312 49 302 0 b 196 -122 276 -99 235 -107 b 176 -114 187 -127 176 -127 l 176 -111 b 157 -53 177 -88 164 -72 b 69 -9 141 -7 101 -16 b 17 -48 43 -3 29 -27 b 0 -127 4 -73 0 -99 b 6 -186 0 -147 1 -167 b 82 -294 17 -262 37 -294 b 160 -276 102 -294 128 -289 b 219 -242 181 -268 203 -259 b 236 -230 223 -236 229 -230 b 243 -232 239 -230 240 -230 b 235 -275 248 -246 239 -261 b 202 -456 220 -334 202 -395 b 209 -471 202 -462 203 -468 z\"\n    },\n    \"rest32nd\": {\n      \"x_min\": 0,\n      \"x_max\": 347,\n      \"y_min\": -497.5023916875033,\n      \"y_max\": 483,\n      \"ha\": 980.5023916875033,\n      \"o\": \"m 177 -716 b 217 -690 194 -720 209 -704 b 233 -655 225 -680 230 -668 b 292 -390 253 -567 275 -480 b 361 -48 312 -275 336 -161 b 452 400 393 102 422 252 b 497 629 467 477 482 553 b 500 647 498 635 500 641 b 480 691 500 665 492 684 b 464 696 475 694 469 696 b 418 674 448 696 431 685 l 361 626 b 333 611 353 618 343 612 b 308 629 325 611 317 616 b 239 667 292 651 265 661 b 204 670 228 668 216 670 b 86 559 141 670 95 628 b 85 537 86 552 85 544 b 107 416 85 495 95 455 b 161 372 114 389 134 372 b 174 373 166 372 170 372 b 226 383 192 374 209 377 b 387 478 285 402 330 444 b 364 386 379 444 364 415 b 276 271 364 323 320 298 b 265 266 272 268 268 266 b 252 276 261 266 256 269 b 143 333 229 311 186 333 b 107 327 130 333 118 330 b 43 243 62 314 46 291 b 58 145 43 210 52 179 b 150 63 68 92 99 63 b 315 132 213 63 259 98 b 266 -58 297 63 281 4 b 207 -101 259 -91 230 -96 b 186 -66 186 -107 199 -75 b 180 -50 181 -63 183 -55 b 101 -3 160 -23 135 -3 b 9 -66 59 -3 20 -32 b 0 -118 3 -84 0 -101 b 10 -196 0 -144 6 -170 b 104 -287 20 -256 52 -287 b 137 -282 114 -287 125 -287 b 184 -269 151 -281 171 -269 b 196 -275 190 -269 193 -271 b 199 -287 197 -278 199 -282 b 184 -343 199 -304 189 -325 b 181 -348 184 -346 183 -347 b 134 -595 158 -429 131 -508 b 156 -677 134 -624 150 -648 b 177 -716 158 -693 160 -713 z\"\n    },\n    \"rest64th\": {\n      \"x_min\": 0,\n      \"x_max\": 428,\n      \"y_min\": -720,\n      \"y_max\": 473.6797408388932,\n      \"ha\": 1193.6797408388932,\n      \"o\": \"m 200 -1037 b 229 -1012 215 -1037 222 -1025 b 238 -984 233 -1004 236 -994 b 282 -780 248 -914 265 -848 b 386 -369 317 -644 354 -507 b 491 104 422 -212 451 -53 b 600 541 528 249 550 399 b 616 629 611 570 616 599 b 600 680 616 648 615 671 b 550 665 586 687 566 677 b 480 618 527 649 501 635 b 464 611 474 613 468 611 b 448 622 458 611 454 615 b 366 662 425 651 397 662 b 331 658 354 662 343 661 b 242 572 285 647 253 619 b 236 528 239 557 236 543 b 266 400 236 484 251 442 b 325 373 274 377 301 373 b 436 409 366 373 403 383 l 494 452 b 474 360 485 416 474 389 b 383 248 474 297 435 269 b 320 328 377 288 351 310 b 276 341 305 337 291 341 b 186 269 235 341 194 311 b 181 230 183 256 181 243 b 187 153 181 204 186 179 b 279 63 192 86 233 63 b 304 65 288 63 295 63 b 416 115 344 72 379 92 b 387 -14 406 69 397 27 b 320 -95 380 -52 369 -86 b 318 -79 320 -89 320 -84 b 223 0 305 -29 271 0 b 122 -81 171 0 135 -30 b 118 -127 120 -96 118 -112 b 118 -196 118 -150 118 -173 b 137 -242 118 -215 125 -229 b 209 -275 157 -266 181 -275 b 249 -269 222 -275 235 -274 b 318 -248 272 -264 294 -255 b 281 -390 315 -301 292 -344 b 276 -400 279 -393 279 -397 b 259 -420 272 -408 266 -416 b 246 -429 255 -425 251 -429 b 233 -415 242 -429 238 -426 b 176 -359 225 -389 200 -372 b 121 -346 158 -348 140 -346 b 14 -408 73 -346 27 -370 b 0 -498 4 -438 0 -468 b 6 -564 0 -520 3 -543 b 91 -635 12 -611 45 -635 b 131 -629 104 -635 117 -634 b 223 -590 163 -622 190 -603 b 166 -824 203 -671 189 -747 b 148 -912 157 -852 148 -881 b 156 -955 148 -926 150 -940 b 177 -1008 161 -972 170 -991 b 200 -1037 181 -1020 183 -1037 z\"\n    },\n    \"rest128th\": {\n      \"x_min\": 0.6717818579024267,\n      \"x_max\": 491,\n      \"y_min\": -711,\n      \"y_max\": 719,\n      \"ha\": 1430,\n      \"o\": \"m 233 -1015 b 271 -956 256 -1002 266 -981 l 314 -723 b 393 -350 337 -598 366 -474 b 543 312 442 -128 492 91 b 687 841 583 490 635 665 b 707 958 698 880 707 919 b 706 986 707 968 707 976 b 688 1025 704 999 704 1024 b 670 1027 683 1025 677 1027 b 629 1007 655 1027 639 1022 b 559 945 613 981 586 968 b 541 1004 553 968 559 991 b 456 1035 516 1024 488 1035 b 419 1030 444 1035 431 1034 b 344 953 379 1018 353 995 b 340 900 341 936 340 917 b 341 847 340 881 341 864 b 380 779 340 815 354 793 b 464 763 406 765 435 762 b 592 814 510 763 549 786 b 546 660 575 757 556 710 b 480 585 537 619 517 598 b 478 599 480 590 478 595 b 386 678 472 641 428 678 b 294 612 343 678 304 651 b 279 477 282 567 278 521 b 363 395 281 428 317 395 b 380 396 369 395 374 395 b 488 436 416 403 449 419 b 384 233 469 357 468 275 b 359 291 373 252 377 276 b 282 318 337 310 310 318 b 181 264 243 318 203 298 b 154 107 153 216 154 161 b 242 6 154 42 187 6 b 278 10 253 6 265 7 b 408 88 330 22 366 55 b 387 -1 400 56 393 27 b 301 -112 379 -55 354 -94 b 289 -65 297 -95 302 -79 b 219 -32 269 -42 245 -32 b 183 -37 207 -32 196 -35 b 112 -109 144 -46 121 -71 b 105 -219 104 -145 108 -183 b 186 -315 101 -276 134 -315 b 230 -307 199 -315 215 -312 b 324 -256 264 -295 292 -275 b 180 -491 323 -383 266 -471 b 183 -459 180 -480 180 -469 b 184 -442 184 -454 184 -448 b 184 -436 184 -441 184 -438 b 135 -369 184 -403 170 -383 b 102 -363 125 -364 114 -363 b 29 -399 73 -363 45 -376 b 1 -556 -4 -448 6 -503 b 109 -670 -4 -625 43 -670 b 140 -667 118 -670 130 -668 b 253 -616 180 -658 213 -638 b 238 -688 248 -644 242 -665 b 192 -959 220 -779 192 -867 b 193 -992 192 -971 192 -981 b 210 -1024 194 -1014 199 -1024 b 233 -1015 216 -1024 223 -1021 z\"\n    },\n    \"dynamicPiano\": {\n      \"x_min\": -49,\n      \"x_max\": 326.5019318364244,\n      \"y_min\": -142,\n      \"y_max\": 515,\n      \"ha\": 657,\n      \"o\": \"m -56 -204 b -42 -202 -52 -204 -46 -203 b -19 -194 -35 -202 -26 -197 b 147 -138 35 -170 91 -151 b 249 -58 194 -127 223 -95 b 262 -29 255 -50 262 -39 b 258 -17 262 -24 261 -20 b 232 -7 252 -10 242 -7 b 210 -12 225 -7 217 -9 b 125 -40 184 -23 157 -30 b 183 140 153 19 171 79 b 251 167 207 144 230 153 b 469 518 383 262 480 382 b 357 687 472 626 420 687 b 315 678 344 687 330 684 b 204 600 279 664 240 634 b 210 704 206 635 209 670 b 215 721 212 710 215 716 b 206 733 215 727 212 730 b 180 742 197 736 189 742 b 164 734 176 742 170 740 b 1 575 108 684 36 645 b -7 557 -1 569 -7 563 b -6 553 -7 556 -7 554 b 7 547 -3 547 3 547 l 17 547 b 82 575 43 547 59 567 l 82 452 b 56 46 82 317 81 180 b 17 -66 49 7 46 -36 b -62 -173 -13 -99 -37 -135 b -71 -192 -66 -179 -71 -184 b -68 -199 -71 -193 -69 -196 b -56 -204 -65 -203 -60 -204 z m 196 258 b 197 266 197 261 197 264 b 200 510 200 347 199 429 b 233 543 210 521 222 533 b 281 560 249 554 266 560 b 340 503 310 560 333 540 b 344 461 343 488 344 474 b 321 323 344 413 333 369 b 268 272 315 300 295 281 b 196 258 245 265 220 261 z\"\n    },\n    \"dynamicMezzo\": {\n      \"x_min\": -18,\n      \"x_max\": 559,\n      \"y_min\": -50,\n      \"y_max\": 365,\n      \"ha\": 415,\n      \"o\": \"m 43 -71 b 160 19 86 -71 143 -26 b 230 264 189 99 200 184 b 282 363 243 297 259 327 b 287 320 285 347 287 333 b 284 279 287 305 285 292 l 249 -12 b 275 -43 248 -29 245 -43 b 395 45 321 -43 389 3 b 462 271 406 124 436 197 b 523 387 475 310 490 348 l 523 346 b 504 130 521 274 513 202 b 501 81 501 114 501 98 b 510 3 501 55 504 29 b 580 -72 521 -48 543 -72 b 625 -63 593 -72 608 -69 b 789 50 690 -43 744 -3 b 805 72 795 56 805 63 b 798 85 805 76 802 81 b 778 94 792 91 785 94 b 755 85 770 94 763 91 l 693 40 b 675 33 685 36 680 33 b 658 52 668 33 662 39 b 645 144 651 82 645 112 b 658 448 641 246 660 346 b 606 507 658 485 638 507 b 583 504 599 507 592 505 b 495 446 547 497 521 471 b 420 373 471 423 448 399 b 413 458 418 406 418 432 b 361 507 408 490 386 507 b 320 491 347 507 333 501 b 160 307 256 444 207 382 l 160 337 b 174 488 160 387 174 438 b 156 521 174 501 173 513 b 137 526 148 524 143 526 b 109 513 127 526 118 520 b -16 399 66 477 23 439 b -26 383 -20 395 -26 389 b -26 379 -26 382 -26 380 b -14 370 -24 372 -20 370 b -6 372 -12 370 -9 372 b 19 376 4 374 12 376 b 36 359 32 376 36 370 b 30 330 36 350 35 341 l 30 323 b 9 -35 23 203 17 85 b 43 -71 6 -65 19 -71 z\"\n    },\n    \"dynamicForte\": {\n      \"x_min\": -144,\n      \"x_max\": 311.30112136775,\n      \"y_min\": -115.38762959156972,\n      \"y_max\": 504,\n      \"ha\": 619.3876295915697,\n      \"o\": \"m -101 -166 b 173 76 7 -153 150 -30 b 206 344 192 164 202 253 b 268 338 226 343 246 341 b 384 395 317 333 353 361 b 397 419 393 405 397 412 b 367 442 397 429 387 436 b 350 444 361 444 356 444 b 206 455 302 449 255 454 l 206 474 b 202 540 204 495 202 518 b 209 593 202 557 203 576 b 236 624 215 613 225 624 b 265 612 245 624 253 619 b 308 552 287 596 302 577 b 336 533 312 534 323 533 b 448 611 366 533 444 583 b 399 696 452 648 423 671 b 382 706 395 700 387 703 b 308 726 357 720 333 726 b 207 684 272 726 239 711 b 60 455 135 622 60 560 l 10 455 b -23 448 -1 455 -13 454 b -102 372 -55 426 -76 397 b -109 357 -108 367 -109 361 b -95 347 -109 353 -105 348 b -63 346 -84 346 -73 346 b 0 344 -43 344 -22 344 b 63 344 22 344 43 344 b 53 186 63 291 59 239 b 23 0 46 124 42 60 b -35 -60 10 -42 -6 -60 b -73 -52 -45 -60 -58 -58 b -91 -48 -79 -49 -85 -48 b -109 -53 -96 -48 -102 -49 b -199 -124 -143 -72 -168 -99 b -207 -137 -203 -128 -207 -132 b -194 -148 -207 -141 -203 -145 b -101 -166 -164 -160 -132 -168 z\"\n    },\n    \"dynamicRinforzando\": {\n      \"x_min\": -75,\n      \"x_max\": 322.0960720195126,\n      \"y_min\": -90,\n      \"y_max\": 325,\n      \"ha\": 415,\n      \"o\": \"m 23 -130 b 40 -125 27 -130 33 -128 b 128 -9 81 -114 125 -53 b 145 200 132 62 141 130 b 148 238 147 212 148 225 b 308 321 184 291 245 321 b 363 314 325 321 344 318 b 377 310 369 312 373 310 b 384 311 380 310 382 310 b 464 415 410 317 464 389 b 446 433 465 429 455 429 b 390 445 428 441 409 445 b 305 429 361 445 334 438 b 167 346 252 413 202 393 b 153 325 163 338 158 333 b 148 438 154 363 151 399 b 121 468 147 456 134 468 b 101 458 115 468 108 465 b -63 310 46 409 -16 367 b -108 240 -78 289 -98 271 b 32 330 -50 256 -13 297 b 37 304 37 320 37 312 l 37 292 b 10 -101 27 161 20 30 b 23 -130 9 -120 12 -130 z\"\n    },\n    \"dynamicSforzando\": {\n      \"x_min\": 0,\n      \"x_max\": 296,\n      \"y_min\": 0,\n      \"y_max\": 379,\n      \"ha\": 379,\n      \"o\": \"m 151 0 b 174 1 160 0 166 0 b 392 158 272 14 346 71 b 405 207 400 174 405 190 b 359 287 405 236 389 265 b 261 325 328 308 294 315 b 168 413 216 340 181 366 b 166 426 167 418 166 423 b 176 438 166 432 167 436 b 199 441 183 441 190 441 b 310 393 238 441 295 422 b 334 370 317 376 325 370 b 363 386 343 370 353 379 b 422 445 386 402 408 420 b 426 458 425 449 426 454 b 422 469 426 462 425 465 b 274 546 395 518 333 546 b 161 503 232 546 190 531 b 86 405 132 472 108 439 b 71 347 75 387 71 367 b 112 256 71 312 85 279 b 209 215 141 232 176 226 b 284 168 238 206 266 197 b 300 131 291 157 300 144 b 298 120 300 127 298 122 b 278 107 294 109 285 108 b 262 108 271 107 266 108 l 259 108 b 114 157 200 107 156 125 b 96 181 104 163 96 170 l 96 184 b 102 202 96 190 102 196 b 96 209 102 204 101 207 b 63 194 82 215 72 204 b 7 109 42 168 26 138 b 0 86 3 101 0 94 b 13 60 0 78 4 68 b 151 0 53 23 101 0 z\"\n    },\n    \"dynamicZ\": {\n      \"x_min\": -42.73880183193087,\n      \"x_max\": 331,\n      \"y_min\": 0,\n      \"y_max\": 328,\n      \"ha\": 328,\n      \"o\": \"m -45 0 b -6 16 -32 0 -17 10 b 3 20 -3 16 0 19 b 144 60 49 48 96 60 b 284 22 190 60 238 46 b 348 4 305 10 327 4 b 461 75 393 4 435 30 b 468 91 464 81 467 86 b 456 104 468 95 465 99 b 287 173 402 131 348 167 b 239 176 271 174 255 176 b 168 174 217 176 194 174 b 367 340 236 236 298 294 b 459 423 402 363 432 392 b 477 454 467 431 475 442 b 474 462 477 456 475 459 b 454 472 469 469 462 472 b 432 468 446 472 439 469 b 356 448 406 461 380 455 b 210 422 307 433 258 422 b 109 442 177 422 144 428 b 94 445 104 444 99 445 b 69 433 85 445 76 442 b 27 390 56 419 39 406 b -9 343 16 373 -17 357 b 63 311 3 320 36 314 l 78 311 b 132 307 95 308 114 307 b 240 314 168 307 203 311 l 193 271 b -37 50 117 196 19 145 b -59 7 -46 36 -69 20 b -45 0 -55 3 -50 0 z\"\n    },\n    \"ornamentTrill\": {\n      \"x_min\": 1,\n      \"x_max\": 551,\n      \"y_min\": -18,\n      \"y_max\": 539,\n      \"ha\": 557,\n      \"o\": \"m 269 -17 b 343 135 325 19 346 66 b 343 158 343 147 344 147 b 323 192 341 171 337 187 b 291 176 311 194 300 184 b 264 148 282 167 274 158 b 229 131 261 145 238 131 b 212 170 209 131 213 154 b 194 438 203 259 199 348 l 272 442 b 284 452 276 441 279 441 b 305 462 287 461 295 462 b 312 462 307 462 310 462 b 346 477 325 462 340 464 b 366 560 357 503 366 531 b 321 612 366 598 356 618 b 190 602 278 605 235 605 l 190 638 b 187 693 190 652 190 667 b 161 776 184 717 193 776 b 137 747 150 776 137 766 b 130 654 135 716 131 685 l 130 596 l 52 588 b 4 539 23 585 7 570 b 1 477 3 530 1 500 b 3 448 1 461 3 448 b 3 461 3 448 3 452 b 53 432 0 438 19 432 b 134 435 75 432 102 433 b 151 117 138 328 147 223 b 170 13 153 82 157 46 b 209 -26 179 -10 193 -26 b 222 -22 213 -26 217 -24 b 269 -17 233 -16 253 -27 z m 549 66 b 577 99 563 66 572 84 b 580 131 580 109 580 121 l 580 302 b 600 347 580 318 582 337 b 701 392 632 364 665 384 b 793 518 785 409 793 435 b 759 588 793 559 785 576 b 711 560 749 592 733 570 b 588 500 671 541 631 521 b 583 533 586 514 586 524 b 560 576 577 549 577 572 b 517 550 541 582 528 564 b 416 423 482 508 452 462 b 382 353 392 397 384 370 b 387 305 380 341 386 318 b 392 275 389 295 392 285 b 409 243 393 262 393 243 b 431 262 419 243 425 255 b 521 373 459 298 488 333 b 523 354 521 366 523 360 b 520 337 523 346 521 340 b 508 295 513 323 508 310 b 530 102 508 279 524 122 b 549 66 533 88 530 66 z\"\n    },\n    \"ornamentTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 574,\n      \"y_min\": 0,\n      \"y_max\": 312,\n      \"ha\": 312,\n      \"o\": \"m 651 0 b 816 132 727 0 796 46 b 827 223 822 163 827 193 b 808 340 827 262 821 301 b 665 449 785 408 729 449 b 636 446 655 449 647 448 b 589 384 600 441 586 422 l 602 300 b 611 285 603 291 605 285 b 621 288 613 285 616 287 b 655 295 632 294 644 295 b 711 284 674 295 693 289 b 773 209 740 275 773 232 b 697 156 773 184 734 160 b 664 154 685 154 675 154 b 579 168 635 154 608 158 b 455 242 533 186 495 213 b 261 400 387 291 331 354 b 160 432 225 422 190 432 b 20 328 98 432 49 392 b 0 229 6 295 0 262 b 30 71 0 176 14 122 b 144 3 43 29 96 3 b 168 6 153 3 160 4 b 248 122 233 20 248 39 b 246 147 248 124 248 135 b 226 177 243 164 239 177 b 206 170 220 177 215 174 b 144 154 186 158 166 154 b 79 170 122 154 101 160 b 53 202 62 179 53 189 b 60 228 53 209 55 217 b 161 281 81 261 120 281 b 183 279 168 281 176 281 b 325 190 243 269 284 229 b 572 16 402 124 475 53 b 651 0 598 6 625 0 z\"\n    },\n    \"ornamentTurnSlash\": {\n      \"x_min\": 0,\n      \"x_max\": 574,\n      \"y_min\": -106,\n      \"y_max\": 405,\n      \"ha\": 511,\n      \"o\": \"m 441 -153 b 456 -60 455 -118 456 -89 b 455 81 455 -14 455 33 b 572 14 491 55 530 30 b 651 -1 598 4 625 -1 b 816 131 727 -1 796 45 b 827 222 822 161 827 192 b 808 338 827 261 821 300 b 665 448 785 406 729 448 b 636 445 655 448 647 446 b 589 383 600 439 586 420 l 602 298 b 611 284 603 289 605 284 b 621 287 613 284 616 285 b 655 294 632 292 644 294 b 711 282 674 294 693 288 b 773 207 740 274 773 230 b 697 154 773 183 734 158 b 664 153 685 153 675 153 b 579 167 635 153 608 157 b 455 240 533 183 495 212 b 454 242 455 240 455 242 l 454 337 b 452 488 454 386 452 439 b 433 570 452 517 451 546 b 425 583 431 575 431 583 l 422 583 b 403 566 415 582 408 573 b 402 546 400 560 402 553 l 397 287 b 261 399 353 325 310 366 b 160 431 225 420 190 431 b 20 327 98 431 48 390 b 0 228 6 294 0 261 b 30 69 0 174 14 121 b 144 1 43 27 96 1 b 168 4 153 1 160 3 b 248 121 233 19 248 37 b 246 145 248 122 248 134 b 226 176 243 163 239 176 b 206 168 220 176 215 173 b 144 153 186 157 166 153 b 79 168 122 153 101 158 b 53 200 62 177 53 187 b 60 226 53 207 55 216 b 161 279 79 259 120 279 b 183 278 168 279 176 279 b 325 189 243 266 282 226 b 395 130 348 168 372 148 b 393 71 393 109 393 89 b 441 -153 390 -6 402 -78 z\"\n    },\n    \"ornamentMordent\": {\n      \"x_min\": 0,\n      \"x_max\": 700,\n      \"y_min\": 0,\n      \"y_max\": 497,\n      \"ha\": 497,\n      \"o\": \"m 513 0 b 528 39 526 14 527 27 b 531 72 531 50 531 60 b 528 138 531 94 528 117 l 528 347 b 552 359 537 354 544 359 b 579 338 560 359 569 353 b 674 217 609 297 639 255 b 719 190 690 200 704 190 b 759 215 732 190 744 197 b 940 395 815 279 877 337 b 1001 490 968 422 986 455 b 1008 513 1004 495 1008 505 b 1002 524 1008 517 1007 521 b 968 516 994 530 978 524 b 960 508 965 513 963 510 b 798 356 900 464 848 410 b 778 341 791 347 783 341 b 757 354 772 341 765 346 b 661 475 720 392 690 432 b 611 517 644 504 629 517 b 563 498 598 517 583 511 b 527 471 550 490 539 481 l 527 570 b 492 716 526 619 523 671 b 472 677 480 704 472 694 b 465 399 474 585 468 491 b 439 366 456 387 448 376 b 384 320 415 336 399 320 b 330 367 369 320 354 336 b 325 376 328 369 327 373 b 226 490 291 413 265 456 b 189 505 213 500 202 505 b 157 491 177 505 167 500 b 0 229 75 420 0 346 b 1 202 0 220 0 212 b 22 215 12 203 16 209 b 124 327 55 252 89 289 b 147 343 132 337 140 343 b 171 323 156 343 164 336 b 266 197 196 276 232 236 b 337 157 291 170 314 157 b 410 207 361 157 386 174 b 461 274 428 229 444 252 b 462 166 461 238 461 202 b 513 0 465 108 487 55 z\"\n    },\n    \"ornamentShortTrill\": {\n      \"x_min\": 0,\n      \"x_max\": 747,\n      \"y_min\": 0,\n      \"y_max\": 243,\n      \"ha\": 243,\n      \"o\": \"m 379 0 b 428 14 395 0 410 4 b 474 56 445 26 461 39 b 552 157 500 89 526 122 b 566 168 556 163 560 168 b 575 157 569 168 572 166 b 664 36 592 107 628 72 b 733 1 685 13 710 1 b 802 35 757 1 780 13 b 1007 249 871 105 940 177 b 1067 324 1028 272 1054 295 b 1076 340 1068 330 1076 334 b 1073 346 1076 341 1076 343 b 1057 350 1068 348 1063 350 b 1047 347 1053 350 1050 350 b 1001 310 1031 336 1015 324 l 857 157 b 844 143 852 153 848 143 b 835 150 841 143 838 144 b 757 242 815 186 780 209 b 685 298 739 268 713 284 b 641 310 670 305 655 310 b 590 288 625 310 608 304 b 497 179 554 256 527 215 b 480 164 490 170 485 164 b 462 179 474 164 469 168 b 372 295 436 220 405 258 b 278 344 346 324 312 344 b 199 310 252 344 226 334 b 92 196 161 274 128 233 b 0 24 46 148 23 89 b 42 48 22 27 32 37 b 156 168 84 85 114 132 b 196 192 174 184 186 192 b 228 158 206 192 215 181 b 312 36 252 114 282 75 b 379 0 331 12 354 0 z\"\n    },\n    \"ornamentTremblement\": {\n      \"x_min\": 0,\n      \"x_max\": 982.17691453624,\n      \"y_min\": 0,\n      \"y_max\": 224,\n      \"ha\": 224,\n      \"o\": \"m 0 0 b 63 36 30 12 48 23 b 157 124 94 66 125 94 b 177 135 164 131 170 135 b 196 122 183 135 189 131 b 268 40 217 94 245 68 b 323 6 288 16 304 6 b 369 20 336 6 350 10 b 412 53 384 29 399 40 b 501 145 442 84 472 114 b 523 158 508 154 516 158 b 543 145 528 158 536 154 b 641 45 576 112 608 78 b 698 17 658 27 677 17 b 729 23 708 17 719 20 b 804 65 756 32 780 46 b 904 154 837 95 871 124 b 920 163 910 160 916 163 b 936 153 924 163 930 160 b 1024 60 965 121 996 92 b 1112 13 1053 29 1080 13 b 1184 39 1135 13 1158 22 b 1359 194 1248 84 1305 138 b 1413 301 1388 223 1403 261 b 1404 323 1417 315 1413 323 b 1391 320 1400 323 1395 321 b 1344 294 1375 314 1358 307 b 1224 186 1305 258 1269 216 b 1194 173 1212 179 1202 173 b 1165 193 1184 173 1175 179 b 1096 271 1145 222 1122 248 b 1001 318 1061 302 1031 318 b 903 268 969 318 937 301 b 806 186 871 239 841 210 b 782 174 796 179 789 174 b 756 193 773 174 765 180 b 652 291 729 232 693 266 b 596 308 634 302 615 308 b 530 278 573 308 552 298 l 415 168 b 393 157 408 161 400 157 b 373 171 387 157 380 161 b 305 245 353 197 330 222 b 248 276 285 266 266 278 b 189 245 229 276 210 266 b 81 144 156 209 120 174 b 0 0 33 109 26 56 z\"\n    },\n    \"ornamentPrecompAppoggTrill\": {\n      \"x_min\": -0.11067192132025548,\n      \"x_max\": 1066,\n      \"y_min\": -50,\n      \"y_max\": 533.1706452421108,\n      \"ha\": 583.1706452421108,\n      \"o\": \"m 187 -46 b 213 -14 197 -37 204 -26 b 285 151 251 36 266 94 b 304 189 294 177 297 189 b 337 168 311 189 320 181 b 458 33 386 131 415 76 b 495 12 472 19 484 12 b 531 40 508 12 518 22 b 580 168 557 79 569 124 b 622 235 592 213 603 235 b 683 194 636 235 655 222 b 838 26 737 140 791 86 b 919 -33 860 -1 881 -39 b 984 53 960 -27 971 19 b 1022 156 998 86 1008 122 b 1054 190 1032 179 1041 190 b 1089 167 1063 190 1074 183 b 1208 32 1129 122 1171 78 b 1244 10 1221 17 1231 10 b 1273 22 1253 10 1263 14 b 1496 206 1352 78 1427 137 b 1535 310 1526 236 1535 272 b 1531 359 1535 325 1534 343 b 1496 343 1515 360 1506 351 l 1309 192 b 1269 167 1289 176 1279 167 b 1234 199 1260 167 1251 177 b 1122 324 1200 243 1168 289 b 1074 344 1106 337 1089 344 b 1014 301 1051 344 1030 328 b 952 144 985 252 971 197 b 933 121 946 128 940 121 b 910 137 927 121 920 125 b 850 210 888 161 870 186 b 687 369 799 266 750 325 b 631 390 665 383 647 390 b 567 327 602 390 580 369 b 527 199 554 284 543 242 b 508 168 520 179 514 168 b 482 192 503 168 495 177 b 353 328 444 240 405 292 b 312 343 338 338 324 343 b 266 297 292 343 276 327 b 204 125 248 239 232 180 b 143 79 193 102 173 79 b 92 122 117 79 105 102 b 81 154 86 131 84 143 b 48 423 59 242 50 333 b 45 544 46 464 45 504 b 53 730 45 606 48 668 b 40 768 55 744 52 766 b 13 730 19 770 14 747 b 0 514 7 658 -1 586 b 26 122 3 383 6 252 b 75 -36 35 66 40 10 b 134 -72 92 -59 112 -72 b 187 -46 151 -72 170 -63 z\"\n    },\n    \"ornamentPrecompSlideTrillDAnglebert\": {\n      \"x_min\": 0,\n      \"x_max\": 1088,\n      \"y_min\": -380,\n      \"y_max\": 252,\n      \"ha\": 632,\n      \"o\": \"m 560 -539 b 439 -481 527 -497 484 -485 b 354 -461 409 -478 380 -477 b 131 -154 236 -389 161 -285 b 124 -98 127 -135 124 -117 b 196 55 124 -40 148 10 b 308 99 230 86 268 99 b 399 81 337 99 367 92 b 514 22 441 66 477 43 b 619 -30 567 -9 590 -30 b 719 17 642 -30 670 -16 b 861 131 769 52 818 88 b 899 150 874 144 887 150 b 936 117 913 150 926 138 b 965 43 948 94 956 68 b 1007 -1 973 24 978 -1 b 1048 30 1025 -1 1037 16 b 1070 65 1057 40 1064 52 b 1110 148 1084 92 1096 121 b 1145 190 1120 164 1120 190 b 1191 153 1169 192 1179 168 b 1256 29 1218 115 1231 68 b 1292 1 1267 10 1277 1 b 1320 10 1300 1 1309 4 b 1369 48 1339 19 1355 33 b 1515 196 1418 96 1464 148 b 1567 343 1558 238 1567 287 b 1555 363 1565 357 1562 363 b 1539 356 1551 363 1547 360 b 1433 268 1502 330 1466 301 b 1335 171 1401 236 1374 199 b 1310 163 1325 166 1318 163 b 1286 183 1302 163 1293 168 b 1218 311 1264 226 1247 272 b 1164 351 1200 337 1182 351 b 1110 308 1146 351 1128 337 b 1031 176 1084 265 1058 219 b 1015 161 1025 166 1021 161 b 999 179 1009 161 1005 167 b 955 279 985 213 973 248 b 913 307 943 300 930 307 b 887 302 904 307 896 305 b 852 281 874 298 863 291 b 693 167 804 236 747 204 b 612 140 667 150 639 140 b 549 157 592 140 570 145 b 403 220 503 181 452 202 b 271 248 360 236 315 248 b 179 229 239 248 209 242 b 0 -29 65 180 0 85 b 9 -104 0 -53 3 -78 b 397 -526 56 -317 183 -464 b 505 -547 432 -536 468 -547 b 560 -539 524 -547 541 -544 z\"\n    },\n    \"ornamentPrecompSlideTrillBach\": {\n      \"x_min\": 0,\n      \"x_max\": 1185,\n      \"y_min\": -380,\n      \"y_max\": 465,\n      \"ha\": 845,\n      \"o\": \"m 624 -544 b 642 -528 638 -543 642 -537 b 639 -514 642 -524 642 -520 b 590 -444 629 -487 609 -467 b 523 -413 573 -422 553 -410 b 498 -415 514 -415 507 -415 b 399 -389 464 -415 431 -405 b 89 -157 281 -330 176 -255 b 72 -117 78 -144 72 -131 b 73 -101 72 -111 72 -107 b 187 186 91 3 147 91 b 246 230 200 216 222 230 b 300 209 262 230 281 223 b 456 48 359 163 403 101 b 540 -10 494 10 518 -10 b 625 59 566 -10 589 13 b 690 148 648 88 668 118 b 711 167 697 160 704 167 b 733 153 719 167 724 163 b 844 14 769 105 808 60 b 903 -42 873 -23 886 -42 b 973 -1 919 -42 937 -27 b 1008 33 986 7 996 20 b 1048 81 1021 48 1035 65 b 1050 37 1048 66 1050 52 b 1047 -24 1050 17 1048 -3 b 1038 -275 1038 -108 1040 -192 l 1037 -289 b 1045 -302 1037 -295 1038 -301 b 1068 -284 1056 -304 1064 -292 b 1084 -242 1076 -271 1081 -256 b 1099 -109 1096 -199 1099 -154 b 1106 158 1099 -19 1106 71 b 1128 187 1113 167 1120 177 b 1168 223 1143 212 1155 223 b 1210 193 1179 223 1191 213 b 1220 183 1214 190 1215 186 b 1329 36 1261 138 1292 84 b 1374 7 1345 16 1358 7 b 1411 20 1384 7 1395 12 b 1479 84 1437 37 1459 59 b 1610 235 1521 135 1564 186 b 1706 403 1655 282 1695 334 b 1614 346 1663 400 1637 373 b 1464 170 1564 287 1515 228 b 1440 150 1453 156 1447 150 b 1414 173 1433 150 1426 158 b 1283 336 1371 228 1333 288 b 1220 366 1261 356 1240 366 b 1148 318 1194 366 1169 350 b 1103 255 1133 297 1119 275 b 1097 301 1102 271 1100 285 b 1099 334 1099 312 1099 324 b 1092 428 1099 367 1094 397 b 1071 647 1087 501 1079 575 b 1058 670 1071 657 1071 670 b 1035 648 1047 670 1038 661 b 1018 516 1024 605 1015 560 b 1041 203 1025 412 1037 307 b 1043 180 1041 196 1043 187 b 992 127 1027 161 1009 143 b 965 111 981 117 972 111 b 936 132 955 111 946 120 b 829 268 900 179 867 225 b 760 317 801 301 780 317 b 691 258 739 317 719 297 b 605 147 664 219 641 177 b 589 138 599 141 593 138 b 572 148 583 138 579 141 b 415 317 520 206 467 261 b 327 372 390 343 366 366 b 300 373 317 373 308 373 b 154 295 239 373 190 348 b 55 138 120 243 85 192 b 0 -53 22 79 0 13 b 160 -317 0 -156 49 -252 b 209 -354 177 -327 192 -343 b 510 -531 305 -419 397 -495 b 593 -547 537 -540 564 -547 b 624 -544 603 -547 613 -546 z\"\n    },\n    \"ornamentPrecompTrillSuffixDandrieu\": {\n      \"x_min\": 0,\n      \"x_max\": 1003,\n      \"y_min\": -20,\n      \"y_max\": 521,\n      \"ha\": 541,\n      \"o\": \"m 791 -16 b 844 33 812 -3 829 14 b 981 271 900 107 937 190 b 994 288 984 278 985 288 b 1009 269 1004 288 1007 278 b 1077 112 1034 217 1051 163 b 1158 43 1103 62 1129 43 b 1231 69 1179 43 1204 55 b 1348 189 1280 98 1315 143 b 1444 451 1407 271 1444 357 b 1431 547 1444 482 1440 514 b 1188 750 1401 665 1299 750 b 1158 747 1178 750 1168 749 b 1079 684 1119 742 1089 727 b 1063 632 1076 665 1071 648 b 1056 609 1058 622 1056 615 b 1071 599 1056 602 1060 599 b 1086 600 1076 599 1080 600 b 1130 605 1102 603 1116 605 b 1244 569 1171 605 1210 595 b 1349 346 1322 511 1349 433 b 1348 312 1349 334 1349 324 b 1289 197 1345 266 1325 228 b 1238 174 1270 181 1253 174 b 1188 215 1220 174 1202 187 b 1145 308 1172 245 1159 276 b 1096 413 1129 343 1120 382 b 1053 438 1084 431 1068 438 b 1011 413 1038 438 1022 431 b 955 324 989 384 971 354 b 850 127 920 258 886 192 b 838 112 847 121 842 112 b 824 128 828 109 825 121 b 802 193 815 150 809 171 b 730 400 779 264 766 337 b 688 431 719 420 703 431 b 647 403 674 431 660 422 b 606 338 632 383 619 361 b 513 167 575 282 546 223 b 480 122 503 150 498 122 b 452 171 459 122 459 153 b 420 255 442 199 432 228 b 337 408 399 308 380 364 b 276 436 317 428 297 436 b 215 397 253 436 230 423 b 23 72 148 289 81 184 b 0 29 17 59 0 40 b 7 17 0 23 1 20 b 59 58 26 7 46 39 b 190 276 111 127 143 206 b 216 301 202 292 207 301 b 245 279 223 301 232 294 b 311 166 278 248 292 206 b 367 16 331 117 346 65 b 402 -19 377 -7 387 -19 b 438 -4 412 -19 423 -13 b 518 88 474 17 495 55 b 628 284 562 150 592 216 b 657 223 648 266 651 243 b 717 13 677 154 696 84 b 755 -29 726 -16 737 -29 b 791 -16 765 -29 776 -24 z\"\n    },\n    \"ornamentPrecompDoubleCadenceUpperPrefix\": {\n      \"x_min\": 0,\n      \"x_max\": 1246,\n      \"y_min\": -30,\n      \"y_max\": 296.0302860502196,\n      \"ha\": 326.0302860502196,\n      \"o\": \"m 360 -43 b 559 59 445 -43 503 7 b 698 236 615 111 652 179 b 714 248 704 243 710 248 b 727 235 719 248 721 243 l 848 42 b 883 12 860 22 870 12 b 917 32 891 12 903 19 b 946 62 927 42 939 50 b 1037 192 972 108 1009 147 b 1057 210 1044 204 1051 210 b 1076 190 1063 210 1068 203 l 1176 12 b 1215 -19 1188 -9 1201 -19 b 1250 -6 1225 -19 1237 -14 b 1284 27 1264 3 1274 16 b 1380 190 1323 78 1351 135 b 1395 210 1384 197 1385 210 b 1413 190 1405 210 1410 197 b 1508 40 1436 134 1467 85 b 1564 3 1529 14 1547 3 b 1617 32 1580 3 1597 12 b 1767 238 1678 92 1719 167 b 1794 310 1781 259 1791 282 b 1752 294 1776 317 1764 304 b 1656 164 1711 258 1689 206 b 1629 144 1646 151 1637 144 b 1603 161 1620 144 1613 150 b 1502 315 1562 207 1525 258 b 1452 357 1490 344 1470 357 b 1397 320 1431 357 1411 344 b 1316 170 1368 271 1345 219 b 1280 127 1306 154 1303 127 b 1244 171 1256 127 1254 154 b 1145 337 1210 226 1179 282 b 1110 363 1135 354 1122 363 b 1070 338 1097 363 1084 354 b 1050 311 1063 330 1057 320 b 959 181 1017 271 992 223 b 939 167 950 173 945 167 b 920 184 933 167 927 173 b 818 343 887 238 852 291 b 759 395 795 377 778 395 b 701 344 742 395 724 377 b 698 338 700 341 700 340 b 544 154 652 272 605 207 b 412 98 501 117 458 98 b 304 130 377 98 341 108 b 95 373 204 187 144 275 b 58 426 85 393 82 428 b 19 366 26 426 26 389 b 0 307 13 346 0 327 b 4 287 0 300 1 294 b 174 36 49 194 91 102 b 360 -43 230 -9 289 -43 z\"\n    },\n    \"ornamentPrecompDoubleCadenceUpperPrefixTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 1226,\n      \"y_min\": -237,\n      \"y_max\": 436,\n      \"ha\": 673,\n      \"o\": \"m 1279 -341 b 1293 -252 1293 -307 1295 -278 b 1277 36 1287 -156 1282 -59 l 1273 118 b 1318 176 1289 137 1303 157 b 1349 203 1332 193 1342 203 b 1378 168 1359 203 1367 192 b 1456 35 1401 122 1428 78 b 1511 -12 1476 3 1493 -12 b 1568 23 1526 -12 1544 0 b 1597 53 1578 32 1588 42 b 1705 186 1629 101 1669 143 b 1761 284 1728 216 1751 246 b 1765 300 1763 288 1765 295 b 1763 307 1765 302 1765 305 b 1737 302 1754 311 1744 308 b 1718 287 1729 298 1725 292 b 1598 145 1673 245 1637 194 b 1578 130 1590 135 1584 130 b 1557 147 1571 130 1565 135 b 1447 321 1516 202 1488 265 b 1403 351 1433 341 1417 351 b 1358 323 1388 351 1372 341 b 1269 209 1329 285 1299 248 b 1254 521 1264 314 1259 418 b 1228 616 1253 554 1247 588 b 1218 628 1224 621 1223 628 l 1215 628 b 1201 613 1210 626 1202 619 b 1200 600 1200 609 1200 605 l 1200 586 b 1211 348 1204 507 1207 428 b 1217 166 1214 288 1215 226 b 1202 181 1212 168 1208 174 b 1094 334 1168 233 1130 284 b 1048 366 1079 356 1064 366 b 1004 331 1034 366 1018 354 b 904 154 969 275 930 220 b 873 202 887 171 880 187 b 778 356 845 256 819 311 b 737 379 763 372 750 379 b 698 353 724 379 711 370 l 621 232 b 415 114 570 154 495 114 b 302 138 377 114 340 121 b 73 400 187 192 117 284 b 55 420 69 415 62 420 b 42 410 50 420 45 416 b 0 292 23 373 0 334 b 4 262 0 282 1 272 b 168 39 32 168 92 99 b 359 -26 225 -6 292 -26 b 585 76 446 -26 530 10 b 668 202 616 115 641 160 b 693 228 680 219 687 228 b 720 203 700 228 707 219 b 801 63 752 160 775 111 b 844 7 812 42 818 7 b 910 66 877 6 894 39 b 923 94 916 75 919 85 b 995 219 945 137 968 179 b 1025 184 1009 210 1017 197 b 1119 56 1054 141 1087 98 b 1166 20 1138 32 1152 20 b 1215 50 1181 20 1195 30 b 1221 56 1217 52 1218 55 b 1228 -163 1223 -17 1225 -89 b 1279 -341 1231 -223 1251 -278 z\"\n    },\n    \"ornamentPrecompTrillLowerSuffix\": {\n      \"x_min\": 0,\n      \"x_max\": 833,\n      \"y_min\": -309,\n      \"y_max\": 319,\n      \"ha\": 628,\n      \"o\": \"m 778 -444 b 801 -445 785 -444 793 -445 b 1037 -338 894 -445 969 -397 b 1200 37 1149 -240 1200 -109 b 1084 406 1200 171 1172 300 b 1024 444 1064 431 1043 444 b 960 390 999 444 978 426 b 841 163 923 314 886 236 b 812 128 832 150 827 128 b 786 167 796 130 793 153 b 660 418 744 251 716 341 b 599 459 639 445 619 459 b 541 410 577 459 557 444 b 439 197 507 340 474 269 b 422 179 435 190 435 179 b 338 393 392 251 379 328 b 275 439 320 423 298 439 b 212 396 253 439 230 425 b 71 219 170 333 128 268 b 0 45 17 173 16 112 b 68 98 32 62 50 78 b 194 264 112 150 153 209 b 230 292 209 282 219 292 b 264 261 240 292 251 282 b 274 242 268 255 269 248 b 346 46 304 179 325 112 b 376 10 351 32 354 10 b 412 35 392 10 403 22 b 452 107 429 56 441 82 b 541 291 481 168 511 230 b 556 307 547 302 552 307 b 573 295 562 307 567 302 b 624 217 595 272 611 246 b 721 1 657 145 685 72 b 755 -27 732 -19 742 -27 b 786 -16 765 -27 775 -24 b 857 73 819 7 840 39 b 952 256 887 134 920 194 b 978 289 963 279 969 289 b 1009 262 985 289 994 281 b 1030 235 1017 253 1024 245 b 1110 -4 1071 161 1099 81 b 1116 -68 1113 -26 1116 -48 b 1009 -243 1116 -140 1090 -200 b 848 -291 956 -272 901 -291 b 730 -261 809 -291 770 -282 b 696 -248 714 -252 703 -248 b 671 -284 684 -248 678 -258 l 662 -312 b 657 -357 658 -330 657 -344 b 744 -439 657 -403 683 -425 z\"\n    },\n    \"stringsDownBow\": {\n      \"x_min\": 0,\n      \"x_max\": 306,\n      \"y_min\": -0.09607201951262866,\n      \"y_max\": 366,\n      \"ha\": 366.09607201951263,\n      \"o\": \"m 405 0 b 425 17 413 -1 420 9 b 439 66 435 32 439 48 b 441 268 439 137 441 202 b 436 412 441 314 439 361 l 435 413 b 423 469 435 436 431 456 b 344 508 406 501 373 501 b 204 527 298 520 251 527 b 60 498 156 527 108 518 b 7 438 32 485 10 468 l 7 426 b 4 337 7 396 7 367 b 0 140 0 272 0 206 b 1 42 0 107 0 73 b 13 3 1 27 -3 4 b 40 39 29 3 35 24 b 42 53 42 43 40 49 b 49 141 48 84 49 112 b 48 215 49 167 48 192 b 49 252 48 228 48 240 l 49 312 b 130 343 72 331 99 340 b 206 347 156 346 180 347 b 372 314 262 347 318 338 l 390 307 l 390 245 b 390 138 392 212 390 176 b 397 23 390 101 392 62 b 405 0 399 14 393 1 z\"\n    },\n    \"stringsUpBow\": {\n      \"x_min\": 0,\n      \"x_max\": 219.2842808242076,\n      \"y_min\": 0,\n      \"y_max\": 489,\n      \"ha\": 489,\n      \"o\": \"m 150 0 l 151 0 b 184 42 170 12 180 26 b 297 554 223 212 261 382 b 315 690 305 598 318 645 b 304 704 315 697 311 704 b 276 670 288 704 282 697 b 157 131 236 490 196 311 l 157 144 b 73 526 134 276 104 396 b 30 677 60 576 52 638 b 13 694 26 684 22 694 b 0 674 9 694 0 691 l 0 671 b 10 603 3 649 6 626 b 105 174 42 461 72 317 b 150 0 117 117 128 58 z\"\n    },\n    \"stringsHarmonic\": {\n      \"x_min\": 0,\n      \"x_max\": 191,\n      \"y_min\": 0,\n      \"y_max\": 202,\n      \"ha\": 202,\n      \"o\": \"m 143 0 b 275 122 217 0 275 53 b 127 291 275 206 202 291 b 0 154 63 291 0 222 b 143 0 0 76 71 0 z m 122 68 b 43 105 89 66 59 75 b 39 124 40 111 39 117 b 79 199 39 148 56 180 b 145 226 101 216 122 226 b 199 210 163 226 180 220 b 235 150 223 196 235 173 b 203 92 235 128 225 107 b 122 68 181 76 150 68 z\"\n    },\n    \"pluckedSnapPizzicatoAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 201,\n      \"y_min\": 0,\n      \"y_max\": 325,\n      \"ha\": 325,\n      \"o\": \"m 171 0 b 289 99 240 0 289 45 b 258 183 289 130 274 156 b 174 269 236 217 203 240 l 174 408 b 174 429 174 415 176 422 b 131 468 168 451 153 468 b 117 451 120 468 117 461 b 118 429 117 444 118 435 b 115 307 117 389 115 347 b 0 166 59 295 0 223 b 171 0 0 85 89 0 z m 134 55 b 52 131 84 55 52 85 b 115 233 52 179 81 209 b 114 192 114 220 114 206 b 174 120 114 137 114 137 l 174 228 b 233 148 200 207 223 183 b 236 130 235 143 236 135 b 197 72 236 105 223 85 b 134 55 177 60 157 55 z\"\n    },\n    \"pluckedSnapPizzicatoBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 211,\n      \"y_min\": 0,\n      \"y_max\": 307,\n      \"ha\": 307,\n      \"o\": \"m 145 7 b 163 0 153 3 158 0 b 173 23 170 0 173 7 l 173 140 l 170 140 l 170 163 l 171 163 b 206 170 179 164 193 166 b 304 287 264 186 304 233 b 281 354 304 308 297 333 b 118 442 240 412 186 439 b 0 324 69 442 0 370 b 115 176 0 266 55 202 l 115 56 b 145 7 114 33 125 19 z m 115 220 b 62 256 92 223 73 230 b 53 292 56 269 53 281 b 78 344 53 311 60 328 b 168 384 105 372 135 384 b 213 376 183 384 199 382 b 253 321 239 366 253 346 b 246 291 253 311 251 301 b 170 226 230 256 203 236 l 170 258 b 148 305 171 278 163 292 b 128 315 143 310 135 315 l 124 315 b 115 301 117 314 115 308 z\"\n    },\n    \"pluckedLeftHandPizzicato\": {\n      \"x_min\": 0,\n      \"x_max\": 271,\n      \"y_min\": 0,\n      \"y_max\": 284,\n      \"ha\": 284,\n      \"o\": \"m 213 0 b 223 14 222 0 223 7 b 222 35 223 22 222 29 l 222 176 b 373 170 272 174 323 170 b 390 180 382 170 390 171 l 390 184 b 347 232 386 207 382 232 b 219 238 307 233 266 235 l 219 364 b 171 409 219 395 193 409 b 156 393 160 409 156 402 b 158 370 156 384 158 376 l 158 240 b 16 239 115 240 66 239 b 0 226 7 239 0 238 l 0 223 b 50 179 1 203 29 179 b 158 177 86 179 122 179 l 158 63 b 161 29 158 52 158 40 b 213 0 166 -1 194 1 z\"\n    },\n    \"keyboardPedalPed\": {\n      \"x_min\": 0,\n      \"x_max\": 944,\n      \"y_min\": -13,\n      \"y_max\": 550,\n      \"ha\": 563,\n      \"o\": \"m 22 0 b 109 78 53 0 105 46 l 144 333 b 163 376 147 347 140 372 b 364 465 238 390 301 426 b 454 599 416 497 454 540 b 452 618 454 605 454 612 b 320 770 442 694 396 747 b 248 779 295 778 272 779 b 193 778 229 779 212 779 b 160 780 181 778 167 775 b 137 792 153 789 144 791 b 109 789 128 792 118 789 b 7 719 59 789 48 737 b 23 708 16 714 20 708 b 36 710 29 710 33 710 b 53 684 52 710 53 698 l 53 674 b 43 386 53 577 53 482 b 20 164 36 312 30 238 b 1 30 14 120 7 75 b 0 19 0 26 0 22 b 22 0 0 9 4 0 z m 393 -17 b 634 145 494 16 579 52 b 638 160 636 151 638 156 b 625 168 638 166 634 168 b 621 167 624 168 622 168 b 524 118 582 164 544 160 b 495 79 517 104 505 92 b 435 33 471 49 452 33 b 380 96 416 33 397 55 b 369 145 373 114 369 131 b 442 225 369 186 395 213 b 468 232 451 228 459 229 b 654 344 539 255 606 285 b 677 395 667 360 677 376 b 672 415 677 402 675 408 b 612 459 661 442 639 455 b 589 461 602 461 592 461 b 348 328 500 461 409 408 b 269 120 302 268 269 199 b 379 -19 269 45 318 -19 b 393 -17 383 -19 389 -19 z m 395 240 b 494 383 418 300 452 344 l 521 405 b 544 419 528 409 536 418 b 554 415 547 419 550 418 b 570 383 564 406 570 396 l 570 379 b 552 331 570 360 562 344 b 395 240 511 285 462 253 z m 171 425 b 156 442 160 425 156 429 b 157 475 157 452 157 464 b 164 602 161 517 164 560 b 161 698 164 635 163 667 b 184 729 161 720 167 729 l 193 729 b 348 563 278 719 348 641 b 346 539 348 554 347 547 b 171 425 328 459 229 422 z m 827 89 b 792 111 815 89 804 96 b 766 204 775 131 766 158 b 845 360 772 256 799 314 b 871 372 854 369 863 372 b 897 366 880 372 888 369 b 978 279 942 353 963 320 b 976 259 981 272 981 265 b 858 104 942 203 909 147 b 827 89 847 94 837 89 z m 979 6 b 1008 13 986 6 995 9 b 1081 101 1047 29 1079 46 b 1116 449 1087 217 1104 333 b 1143 654 1123 518 1133 586 b 1148 685 1145 664 1148 675 b 1140 704 1148 693 1146 700 b 1107 716 1130 713 1119 716 b 1056 706 1092 716 1073 710 b 1037 671 1035 703 1038 685 b 1004 439 1025 595 1014 517 b 986 419 1001 428 999 419 b 979 419 985 419 982 420 b 935 426 965 423 949 425 b 795 376 884 426 838 405 b 664 153 714 323 664 249 b 665 130 664 145 665 138 b 753 29 671 65 704 29 b 815 40 773 29 792 33 b 975 147 873 65 923 101 b 965 45 971 108 968 76 b 979 6 963 17 966 6 z m 1282 12 b 1336 35 1303 14 1320 23 b 1359 71 1351 45 1359 58 b 1338 102 1359 82 1352 95 b 1254 130 1312 118 1284 130 b 1187 88 1223 130 1202 109 b 1178 65 1182 81 1178 72 b 1195 37 1178 55 1182 45 b 1282 12 1223 23 1253 19 z\"\n    },\n    \"keyboardPedalUp\": {\n      \"x_min\": 0,\n      \"x_max\": 436.6015132318337,\n      \"y_min\": 0,\n      \"y_max\": 461,\n      \"ha\": 461,\n      \"o\": \"m 330 0 b 334 1 331 0 333 0 b 340 12 338 4 340 7 l 338 26 b 340 264 338 105 338 184 b 526 95 400 206 461 148 b 559 71 536 88 547 71 b 564 72 560 71 563 71 b 580 121 580 79 580 102 l 580 127 b 543 203 585 158 573 184 b 472 259 518 219 495 238 l 445 285 b 590 292 494 288 541 291 b 622 318 609 294 618 302 b 628 359 625 331 626 346 b 586 402 632 393 621 405 b 464 395 546 399 504 396 l 559 491 b 567 524 567 500 567 510 b 564 543 567 527 567 536 b 539 596 559 563 560 590 b 494 564 521 600 508 577 b 340 413 442 514 390 464 l 340 560 b 287 664 340 600 321 632 b 271 518 274 612 272 566 b 268 445 269 494 269 469 b 117 569 219 488 168 530 b 96 579 109 575 102 579 b 85 560 89 579 85 573 b 124 446 85 518 82 477 b 209 380 153 426 181 403 b 45 374 154 377 99 376 b 0 324 9 374 0 359 b 63 266 0 265 1 265 b 144 272 89 269 117 272 l 196 272 b 108 193 167 246 138 219 b 60 135 76 164 60 151 b 99 73 60 121 73 105 b 104 68 101 72 102 71 b 114 58 107 60 111 58 b 130 66 120 58 124 62 b 259 186 173 107 217 145 b 256 117 259 163 256 140 b 311 13 256 72 271 37 b 330 0 317 10 323 0 z\"\n    },\n    \"pictChokeCymbal\": {\n      \"x_min\": 1,\n      \"x_max\": 147,\n      \"y_min\": 0,\n      \"y_max\": 242,\n      \"ha\": 242,\n      \"o\": \"m 79 4 b 207 158 153 32 192 88 b 212 200 210 173 212 187 b 143 336 212 253 187 298 b 98 348 131 344 115 348 b 4 295 60 348 16 327 b 1 276 1 289 1 282 b 9 249 1 266 3 258 b 121 183 35 206 72 183 b 156 186 132 183 144 183 b 26 53 134 115 91 73 b 7 39 13 49 7 45 b 19 20 7 33 12 27 b 59 0 30 9 43 0 b 79 4 65 0 72 1 z\"\n    },\n    \"wiggleArpeggiatoUp\": {\n      \"x_min\": -22,\n      \"x_max\": 300,\n      \"y_min\": 0,\n      \"y_max\": 176,\n      \"ha\": 176,\n      \"o\": \"m 173 4 b 196 0 180 1 189 0 b 246 26 215 0 230 9 b 301 117 271 53 285 85 b 312 131 305 125 307 131 b 327 124 315 131 321 128 b 373 86 341 112 353 101 b 412 69 389 75 402 69 b 432 94 425 69 432 79 b 373 181 432 117 413 154 b 235 252 323 216 285 245 b 220 253 229 253 225 253 b 168 215 196 253 181 240 b 111 112 151 180 140 141 b 94 102 105 105 99 102 b 78 111 89 102 84 105 b 0 181 55 135 35 160 b -32 153 -20 194 -32 168 b 0 86 -32 124 -32 109 b 94 36 22 71 73 46 b 173 4 134 16 131 17 z\"\n    },\n    \"arrowheadBlackUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"arrowheadBlackDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"arpeggiatoUp\": {\n      \"x_min\": 0,\n      \"x_max\": 262,\n      \"y_min\": 0,\n      \"y_max\": 1459,\n      \"ha\": 1459,\n      \"o\": \"m 190 0 b 160 63 187 29 170 45 b 145 108 150 81 145 95 b 183 163 145 128 157 145 b 300 246 222 190 262 216 b 347 318 333 272 347 295 b 301 393 347 341 331 364 b 258 413 289 403 272 408 b 145 449 220 425 183 436 b 117 464 135 452 120 452 b 140 491 115 477 128 484 b 294 593 192 526 243 557 b 330 647 318 611 330 626 b 314 693 330 660 324 675 b 262 736 302 714 285 729 b 170 763 230 744 200 753 b 122 783 153 768 125 768 b 160 831 120 804 143 818 b 288 922 202 861 246 890 b 333 999 318 945 333 972 b 266 1083 333 1032 310 1064 b 189 1115 240 1094 215 1103 b 122 1178 145 1133 122 1153 b 168 1250 122 1200 138 1223 l 180 1257 b 269 1333 210 1283 240 1306 b 305 1405 294 1356 305 1381 b 284 1469 305 1426 298 1447 b 228 1525 269 1492 251 1511 b 183 1600 197 1545 183 1571 b 190 1640 183 1613 184 1626 b 197 1670 193 1650 194 1660 b 272 1735 213 1719 230 1735 b 295 1734 279 1735 287 1735 b 323 1732 305 1732 314 1732 b 350 1731 333 1732 341 1732 b 377 1742 369 1729 377 1732 b 370 1761 377 1747 374 1754 l 301 1898 b 217 2066 274 1954 248 2012 b 186 2101 204 2089 196 2101 b 154 2069 177 2101 167 2091 b 12 1824 105 1987 59 1907 b 0 1787 4 1810 0 1797 b 59 1744 0 1761 20 1745 b 160 1738 92 1744 125 1740 b 145 1692 156 1721 151 1706 b 135 1633 138 1672 135 1652 b 184 1518 135 1591 151 1552 b 229 1475 199 1503 213 1488 b 259 1431 249 1456 259 1444 b 229 1388 259 1420 249 1407 b 151 1325 203 1365 177 1345 b 105 1279 134 1310 118 1296 b 73 1202 84 1251 73 1227 b 108 1123 73 1176 85 1152 b 255 1031 148 1077 199 1051 b 282 1014 274 1025 282 1021 b 262 991 282 1008 275 1001 b 151 914 226 963 189 939 b 79 851 125 896 99 877 b 63 809 69 837 63 824 b 79 769 63 796 68 783 b 202 697 111 729 154 710 b 266 670 225 690 266 688 b 210 622 266 648 232 635 b 82 534 167 593 120 570 b 55 491 63 518 55 505 b 79 448 55 478 63 465 b 255 361 127 395 192 380 b 288 343 269 359 288 357 b 266 312 288 331 275 320 b 144 223 229 278 184 253 b 85 134 104 193 85 166 b 118 53 85 111 96 85 b 190 0 135 29 160 14 z\"\n    },\n    \"arpeggiatoDown\": {\n      \"x_min\": 0,\n      \"x_max\": 218,\n      \"y_min\": 0,\n      \"y_max\": 1440,\n      \"ha\": 1440,\n      \"o\": \"m 161 16 b 310 261 210 98 259 180 b 314 275 312 266 314 271 b 302 295 314 282 310 289 b 252 311 287 308 269 311 b 217 310 240 311 229 310 b 190 333 202 310 194 315 b 151 412 186 363 171 389 b 102 501 120 452 102 477 b 150 588 102 524 118 547 b 161 603 154 592 158 598 b 181 661 176 622 181 641 b 173 704 181 675 179 690 b 86 795 156 746 121 770 b 53 829 63 811 53 819 b 78 868 53 840 62 851 b 102 888 85 876 94 883 b 180 956 128 912 156 933 b 216 1028 204 979 216 1002 b 203 1081 216 1044 212 1061 b 115 1171 186 1123 148 1145 b 75 1221 88 1191 75 1207 b 114 1272 75 1237 88 1251 b 173 1308 132 1284 154 1296 b 226 1339 190 1318 209 1328 b 265 1405 253 1359 265 1380 b 258 1447 265 1418 264 1431 b 154 1541 242 1499 199 1521 b 109 1581 124 1555 109 1567 b 141 1627 109 1594 121 1608 b 204 1680 163 1646 184 1662 b 233 1742 223 1699 233 1719 b 226 1777 233 1752 230 1764 b 135 1862 210 1822 173 1840 b 104 1895 114 1875 104 1884 b 118 1930 104 1904 109 1914 b 192 2006 135 1961 161 1986 b 206 2029 203 2013 206 2022 b 192 2064 206 2040 197 2052 b 180 2074 187 2071 184 2074 b 156 2061 171 2074 163 2065 b 84 1983 125 2040 102 2013 b 65 1921 71 1961 65 1941 b 88 1853 65 1899 72 1876 b 171 1784 108 1820 138 1801 b 190 1764 184 1777 190 1770 b 174 1741 190 1757 184 1750 b 107 1683 153 1722 128 1704 b 68 1610 81 1659 68 1636 b 88 1548 68 1591 75 1571 b 177 1470 109 1512 141 1489 b 223 1431 209 1453 223 1443 b 179 1390 223 1420 209 1408 b 128 1361 163 1380 145 1371 b 71 1322 108 1348 88 1338 b 32 1253 45 1300 32 1277 b 48 1198 32 1236 37 1218 b 147 1090 71 1152 108 1120 b 174 1057 166 1076 174 1067 b 153 1022 174 1047 167 1037 b 109 982 140 1008 124 995 b 37 919 85 962 59 942 b 9 860 17 899 9 880 b 26 806 9 844 14 827 b 120 717 50 769 84 740 b 138 691 132 708 138 700 b 130 668 138 684 135 677 b 92 618 118 651 105 635 b 59 531 71 589 59 560 b 84 455 59 507 68 481 b 132 386 98 431 115 408 b 148 341 144 372 148 357 b 144 317 148 333 147 324 b 121 305 140 307 131 305 l 98 305 b 82 304 94 304 88 304 l 32 304 b 0 292 10 304 0 302 b 12 266 0 287 4 279 b 60 164 32 233 46 199 b 127 20 84 117 105 68 b 144 0 132 9 137 0 b 161 16 150 0 154 4 z\"\n    },\n    \"repeat1Bar\": {\n      \"x_min\": 0,\n      \"x_max\": 599.1057280164835,\n      \"y_min\": -250,\n      \"y_max\": 175,\n      \"ha\": 425,\n      \"o\": \"m 76 -334 b 181 -285 111 -315 148 -302 b 831 52 396 -168 613 -58 b 863 114 855 63 864 82 b 828 202 855 140 855 176 b 808 213 821 209 815 213 b 793 209 804 213 799 212 l 422 19 b 26 -179 291 -48 164 -124 b 0 -213 10 -186 0 -196 b 3 -232 0 -219 0 -225 b 52 -325 14 -265 37 -294 b 66 -337 55 -331 59 -337 b 76 -334 69 -337 72 -336 z m 216 98 b 255 75 236 84 246 75 b 291 104 265 75 274 85 b 323 147 304 117 327 125 b 289 215 323 168 314 184 b 238 252 269 239 253 252 b 187 222 222 252 207 242 b 173 206 183 216 177 212 b 157 170 163 194 157 183 b 174 138 157 160 161 150 b 216 98 189 127 200 109 z m 769 -360 b 829 -264 779 -360 829 -284 b 769 -176 822 -232 799 -200 b 742 -163 760 -167 750 -163 b 716 -184 733 -163 723 -168 b 683 -228 708 -202 693 -213 b 672 -253 675 -236 672 -245 b 683 -281 672 -262 675 -271 b 752 -353 703 -308 732 -327 b 769 -360 756 -357 763 -360 z\"\n    },\n    \"repeat2Bars\": {\n      \"x_min\": 0.008571918423331715,\n      \"x_max\": 775,\n      \"y_min\": -246.92374029115243,\n      \"y_max\": 362.82068246705313,\n      \"ha\": 609.7444227582056,\n      \"o\": \"m 909 412 b 873 351 906 384 893 367 b 436 50 729 249 585 147 b 91 -179 321 -26 206 -102 b 62 -174 76 -189 68 -183 b 12 -96 48 -147 24 -125 b 36 -16 -7 -53 -6 -43 b 220 104 96 24 158 65 b 819 507 425 232 624 369 b 881 495 852 530 861 528 b 909 412 899 469 900 439 z m 1116 228 b 1067 158 1115 192 1092 174 b 910 59 1015 125 963 92 b 478 -240 762 -33 622 -140 b 311 -350 423 -279 366 -314 b 285 -344 298 -360 289 -356 b 239 -258 272 -314 251 -288 b 261 -196 228 -228 235 -210 b 517 -29 348 -144 436 -91 b 1030 321 681 98 861 202 b 1093 307 1060 343 1076 340 b 1116 228 1107 281 1109 252 z m 1070 -105 b 1020 -210 1057 -143 1038 -176 b 998 -210 1014 -219 1004 -215 b 924 -153 973 -192 949 -171 b 913 -88 899 -135 897 -112 b 949 -22 926 -66 939 -45 b 998 -7 960 6 976 9 b 1070 -105 1032 -32 1058 -63 z m 333 338 b 302 240 330 307 317 274 b 276 235 297 225 287 228 b 233 269 262 246 248 258 b 203 376 186 307 183 318 b 225 441 212 397 217 419 b 246 454 228 452 232 458 b 333 338 284 441 333 380 z\"\n    },\n    \"repeat4Bars\": {\n      \"x_min\": 0,\n      \"x_max\": 1374,\n      \"y_min\": -304,\n      \"y_max\": 304,\n      \"ha\": 608,\n      \"o\": \"m 815 -367 b 829 -359 819 -367 824 -364 b 851 -343 835 -353 844 -347 b 1375 6 1027 -228 1205 -117 l 1610 170 b 1644 235 1632 184 1643 203 b 1626 300 1639 253 1634 276 b 1590 337 1614 325 1604 337 b 1551 320 1580 337 1567 330 b 873 -135 1329 161 1103 10 b 749 -222 829 -161 785 -184 b 737 -245 742 -230 737 -238 b 742 -261 737 -249 739 -255 b 802 -357 755 -297 782 -325 b 815 -367 805 -363 809 -367 z m 291 148 b 325 223 302 148 308 170 b 333 256 328 235 330 246 b 264 363 330 305 298 336 b 242 373 255 369 248 373 b 220 347 232 373 225 364 b 202 288 216 327 213 305 b 190 252 193 275 190 262 b 222 200 190 232 202 215 b 291 148 264 170 279 148 z m 78 -266 b 92 -258 82 -266 88 -264 b 114 -240 98 -251 107 -246 b 638 107 289 -125 467 -14 b 873 271 716 161 793 216 b 907 337 894 285 906 305 b 887 400 901 354 897 379 b 852 438 877 426 867 438 b 814 420 842 438 829 432 b 135 -33 592 262 366 111 b 12 -121 92 -60 48 -84 b 0 -144 4 -128 0 -135 b 4 -160 0 -148 1 -154 b 63 -255 17 -196 45 -223 b 78 -266 68 -262 72 -266 z m 396 -360 b 408 -356 400 -360 403 -359 b 609 -223 471 -307 543 -269 b 896 -19 706 -156 795 -81 b 1164 154 985 37 1074 96 b 1214 223 1189 170 1211 187 b 1176 321 1204 253 1205 292 b 1159 330 1169 327 1165 330 b 1145 324 1155 330 1151 328 b 1048 258 1113 302 1081 278 b 357 -202 809 117 598 -65 b 333 -238 341 -212 333 -223 b 338 -262 333 -245 334 -253 b 384 -350 350 -294 372 -318 b 396 -360 386 -354 390 -360 z m 1162 -438 b 1174 -433 1166 -438 1169 -436 b 1374 -300 1237 -384 1309 -346 b 1660 -96 1470 -233 1561 -158 b 1930 76 1751 -39 1840 19 b 1979 147 1954 92 1977 109 b 1943 243 1968 177 1971 216 b 1924 253 1935 251 1930 253 b 1911 248 1920 253 1915 252 b 1814 181 1878 225 1848 202 b 1123 -279 1575 40 1364 -141 b 1099 -315 1106 -289 1099 -300 b 1103 -338 1099 -321 1100 -330 b 1149 -426 1115 -370 1138 -396 b 1162 -438 1151 -432 1156 -438 z m 1875 -295 b 1882 -291 1878 -295 1879 -294 b 1934 -189 1904 -258 1921 -223 b 1872 -96 1925 -147 1901 -120 b 1840 -78 1858 -84 1848 -78 b 1812 -109 1830 -78 1823 -88 l 1777 -173 b 1770 -199 1773 -181 1770 -190 b 1786 -230 1770 -210 1774 -220 b 1862 -289 1809 -253 1837 -269 b 1875 -295 1865 -292 1871 -295 z\"\n    },\n    \"repeatBarSlash\": {\n      \"x_min\": 0,\n      \"x_max\": 630,\n      \"y_min\": -225.19160170741765,\n      \"y_max\": 265.1261822123701,\n      \"ha\": 490.31778391978776,\n      \"o\": \"m 78 -324 b 92 -314 82 -325 88 -321 b 114 -298 96 -307 107 -302 b 638 49 289 -183 467 -72 b 873 215 716 104 792 161 b 907 279 894 229 906 248 b 887 344 901 298 897 321 b 852 382 877 369 867 380 b 814 363 842 383 829 376 b 135 -91 603 192 364 55 b 12 -177 92 -118 45 -137 b 0 -202 4 -186 0 -192 b 4 -217 0 -206 1 -212 b 63 -312 17 -253 42 -284 b 78 -324 68 -318 72 -323 z\"\n    },\n    \"csymDiminished\": {\n      \"x_min\": 0,\n      \"x_max\": 506,\n      \"y_min\": -0.011036179317259481,\n      \"y_max\": 500,\n      \"ha\": 500.0110361793173,\n      \"o\": \"m 397 0 b 729 265 576 -1 729 95 b 711 367 729 297 723 331 b 472 670 668 498 586 595 b 315 720 423 701 372 720 b 253 713 295 720 275 719 b 32 514 144 687 75 615 b 0 374 12 468 0 420 b 27 251 0 333 9 292 b 140 117 52 196 92 153 b 397 0 223 52 317 4 z m 340 95 b 132 314 233 84 122 216 b 324 589 145 438 200 539 b 415 611 360 603 389 611 b 544 505 469 611 505 576 b 590 392 564 471 583 432 b 596 343 593 374 596 359 b 340 95 596 210 485 96 z\"\n    },\n    \"csymHalfDiminished\": {\n      \"x_min\": -32,\n      \"x_max\": 496,\n      \"y_min\": -33,\n      \"y_max\": 492,\n      \"ha\": 525,\n      \"o\": \"m -29 -48 b 0 -36 -19 -48 -9 -40 b 17 -20 7 -32 12 -24 b 134 94 56 19 95 56 b 372 0 207 43 282 0 b 455 13 397 0 426 4 b 677 258 556 45 671 141 b 678 289 677 268 678 278 b 593 539 678 380 654 467 b 592 541 593 540 592 540 l 684 632 b 713 678 700 647 711 665 b 714 691 714 684 714 688 b 707 704 714 698 711 701 b 691 708 701 707 696 708 b 660 691 680 708 670 701 l 552 585 b 478 634 530 606 507 624 b 361 684 438 648 397 661 b 301 703 341 697 320 703 b 226 677 275 703 251 693 b 27 449 140 618 72 543 b 0 324 9 410 -4 370 b 88 128 -1 243 30 177 b -30 -7 43 86 0 46 b -46 -33 -35 -16 -46 -24 b -42 -42 -46 -36 -45 -39 b -29 -48 -37 -46 -33 -48 z m 281 105 b 179 137 240 105 206 117 b 210 168 189 147 200 157 l 537 487 b 547 455 541 477 544 467 b 556 370 552 426 556 397 b 429 154 556 274 503 207 b 281 105 384 122 336 105 z m 141 179 b 121 251 128 200 121 225 b 128 297 121 265 124 281 b 351 575 163 420 248 505 b 377 582 359 579 369 580 b 501 536 422 586 468 567 b 141 179 382 416 261 298 z\"\n    },\n    \"csymAugmented\": {\n      \"x_min\": 0,\n      \"x_max\": 530,\n      \"y_min\": 0,\n      \"y_max\": 539,\n      \"ha\": 539,\n      \"o\": \"m 380 0 b 393 14 384 4 390 9 b 397 46 397 24 397 36 l 397 333 b 736 327 511 331 624 330 b 763 343 755 327 763 333 b 755 361 763 348 760 354 b 635 431 726 402 688 431 l 390 431 l 390 485 b 386 606 392 526 386 566 b 392 664 386 625 387 645 b 395 690 393 672 395 681 b 376 753 395 711 389 734 b 357 776 372 762 369 776 b 350 775 354 776 353 776 b 327 740 337 769 327 759 b 327 621 328 700 327 661 b 330 438 328 559 328 498 l 29 438 b 4 431 20 438 7 442 b 0 413 3 425 0 419 b 7 399 0 408 1 403 b 131 338 45 369 85 340 b 331 334 199 336 265 334 b 333 163 333 276 333 220 b 366 13 333 109 348 63 b 380 0 367 7 374 4 z\"\n    },\n    \"csymMajorSeventh\": {\n      \"x_min\": 0,\n      \"x_max\": 593.1050509327923,\n      \"y_min\": 0,\n      \"y_max\": 569,\n      \"ha\": 569,\n      \"o\": \"m 109 0 l 124 1 l 497 27 b 819 50 605 35 711 43 b 854 98 847 52 855 63 b 812 200 845 128 835 166 b 564 585 730 328 648 456 b 435 786 521 652 480 720 b 397 819 419 809 408 819 b 369 792 387 819 379 811 b 7 173 248 585 128 379 b 0 150 3 166 0 158 b 7 128 0 143 3 135 b 89 10 30 86 65 50 b 109 0 95 1 102 0 z m 163 147 b 153 153 158 147 156 148 b 164 179 147 163 158 170 b 426 644 251 334 338 488 b 442 660 432 655 436 660 b 458 645 446 660 452 655 b 727 220 547 503 636 361 b 736 202 732 213 736 206 b 714 190 736 196 730 192 b 179 148 537 177 359 163 b 163 147 174 150 168 147 z\"\n    },\n    \"csymMinor\": {\n      \"x_min\": 0,\n      \"x_max\": 481.6448458467591,\n      \"y_min\": 193,\n      \"y_max\": 265.20435472429375,\n      \"ha\": 72.20435472429375,\n      \"o\": \"m 168 278 b 197 279 177 278 187 278 b 431 292 275 287 353 288 l 431 291 b 661 302 508 295 585 300 b 693 311 672 304 688 300 b 674 346 697 324 685 338 b 564 382 641 366 606 384 l 27 360 b 0 347 17 360 1 366 b 19 314 0 333 3 321 b 168 278 66 291 115 278 z\"\n    },\n    \"csymParensLeftTall\": {\n      \"x_min\": 0,\n      \"x_max\": 185,\n      \"y_min\": 0,\n      \"y_max\": 1034,\n      \"ha\": 1034,\n      \"o\": \"m 212 0 l 215 0 b 226 17 223 1 223 10 b 229 37 229 24 229 32 b 220 81 229 52 225 66 b 167 203 206 124 181 160 b 86 616 124 338 89 474 b 82 765 85 665 82 716 b 91 886 82 805 84 845 b 245 1319 120 1038 171 1184 b 266 1397 259 1346 266 1371 b 259 1443 266 1411 264 1427 b 226 1489 253 1463 248 1489 b 193 1454 212 1489 203 1467 b 114 1292 158 1404 140 1346 b 0 806 40 1138 0 978 b 3 721 0 779 0 750 b 1 677 1 707 1 693 b 36 418 1 593 16 504 b 144 96 62 307 95 199 b 196 12 158 66 179 39 b 212 0 200 7 204 0 z\"\n    },\n    \"csymParensRightTall\": {\n      \"x_min\": -40,\n      \"x_max\": 188.5411603861406,\n      \"y_min\": 0.20204102886728756,\n      \"y_max\": 1058,\n      \"ha\": 1057.7979589711326,\n      \"o\": \"m 30 1 b 63 14 42 -3 55 6 b 122 99 86 40 108 68 b 189 258 145 153 166 204 b 271 667 239 379 268 503 b 246 852 275 708 261 780 b 10 1495 197 1077 128 1295 b -14 1524 4 1505 1 1524 b -16 1522 -14 1524 -16 1524 b -46 1489 -33 1521 -43 1503 b -58 1417 -53 1464 -58 1440 b -36 1335 -58 1390 -52 1364 b 68 1138 0 1270 35 1204 b 163 883 108 1056 137 969 b 206 668 184 814 200 742 b 207 631 207 655 207 642 b 166 426 207 560 192 492 b 46 143 130 330 111 228 b 19 29 19 109 17 69 b 30 1 20 19 24 3 z\"\n    },\n    \"csymBracketLeftTall\": {\n      \"x_min\": 0,\n      \"x_max\": 328,\n      \"y_min\": 2,\n      \"y_max\": 807,\n      \"ha\": 805,\n      \"o\": \"m 68 3 b 76 4 71 3 73 3 b 186 13 112 12 150 13 b 240 13 204 13 222 13 b 287 13 256 13 271 13 b 379 17 317 13 348 13 b 472 121 435 24 472 69 b 467 156 472 132 469 144 b 446 174 462 168 456 174 b 439 174 444 174 442 174 b 327 166 402 167 364 166 b 265 167 307 166 285 167 l 209 167 b 187 475 199 269 189 372 b 166 985 186 645 187 815 l 377 1002 b 415 1001 389 1002 402 1001 b 456 1027 432 1001 448 1005 b 472 1096 467 1048 472 1073 b 464 1146 472 1113 469 1130 b 439 1162 459 1161 452 1162 b 40 1129 305 1151 173 1139 b 1 1093 17 1128 1 1120 b 0 1009 0 1064 0 1037 b 13 975 0 991 3 981 b 30 670 23 873 30 772 b 29 608 30 649 29 628 b 29 563 29 593 29 579 b 56 88 29 405 49 246 b 53 22 55 66 55 43 b 68 3 53 12 56 3 z\"\n    },\n    \"csymBracketRightTall\": {\n      \"x_min\": 0.8519422934604696,\n      \"x_max\": 306,\n      \"y_min\": -0.17180889215212544,\n      \"y_max\": 829.1037519824849,\n      \"ha\": 829.2755608746371,\n      \"o\": \"m 105 0 l 117 0 b 372 29 203 -3 287 20 l 373 29 b 406 32 383 30 395 30 b 436 60 428 33 432 43 b 441 109 439 76 441 92 b 433 200 441 140 436 170 b 409 696 422 366 409 530 b 416 887 409 763 416 831 b 415 920 416 899 415 910 l 415 1106 b 412 1135 415 1116 415 1126 l 412 1145 b 373 1189 413 1171 408 1192 b 321 1189 356 1189 338 1189 b 215 1189 285 1189 251 1189 l 215 1194 l 56 1194 b 6 1153 27 1195 10 1187 b 1 1064 3 1123 4 1093 b 22 1043 0 1050 6 1043 b 84 1044 42 1044 63 1044 b 264 1038 144 1044 203 1040 b 265 958 264 1011 265 985 b 262 845 265 920 264 883 b 259 710 259 801 259 755 b 279 243 259 554 271 399 b 285 170 281 219 284 194 b 95 151 222 161 158 156 b 29 81 27 147 27 147 l 29 73 b 105 0 33 0 33 0 z\"\n    },\n    \"csymParensLeftVeryTall\": {\n      \"x_min\": 0,\n      \"x_max\": 116,\n      \"y_min\": 0,\n      \"y_max\": 934.1531437146923,\n      \"ha\": 934.1531437146923,\n      \"o\": \"m 128 0 b 147 17 137 0 144 9 b 167 102 160 45 167 73 b 158 154 167 120 164 137 b 117 307 141 204 130 256 b 63 698 84 435 71 567 b 62 788 62 729 62 757 b 69 916 62 829 63 873 b 109 1172 81 1001 94 1087 b 132 1320 118 1221 137 1269 b 124 1345 131 1329 134 1342 b 96 1332 114 1346 102 1341 b 71 1269 82 1313 75 1292 b 39 1104 59 1214 48 1159 b 0 742 19 988 0 871 b 10 559 3 688 6 624 b 58 226 16 446 33 336 b 112 20 73 157 94 89 b 128 0 115 13 118 0 z\"\n    },\n    \"csymParensRightVeryTall\": {\n      \"x_min\": -20,\n      \"x_max\": 111.4332498248095,\n      \"y_min\": -0.07657185734616112,\n      \"y_max\": 1009,\n      \"ha\": 1009.0765718573462,\n      \"o\": \"m -3 0 b 20 22 9 -1 14 12 b 36 56 26 33 32 45 b 99 274 58 128 84 199 b 160 788 135 439 163 605 b 122 1181 164 912 145 1047 b 50 1431 108 1267 86 1351 b 36 1453 48 1439 46 1453 b 35 1453 36 1453 35 1453 l 30 1453 b 7 1423 17 1449 7 1440 b 27 1287 9 1377 10 1331 b 96 963 71 1184 85 1074 b 105 818 102 914 105 867 b 91 624 105 753 99 688 b -4 213 72 484 48 344 b -29 101 -19 174 -29 138 b -16 27 -29 76 -24 52 b -3 0 -13 17 -14 3 z\"\n    },\n    \"csymDiagonalArrangementSlash\": {\n      \"x_min\": -0.19862981551275186,\n      \"x_max\": 990,\n      \"y_min\": -26.946823529189132,\n      \"y_max\": 1027.5514326488437,\n      \"ha\": 1054.4982561780328,\n      \"o\": \"m 14 -37 b 58 -9 35 -45 46 -22 b 392 333 170 105 279 217 b 765 711 516 458 639 585 b 1372 1329 968 916 1168 1125 b 1424 1439 1403 1359 1417 1397 b 1426 1457 1424 1444 1426 1450 b 1416 1477 1426 1466 1423 1475 b 1374 1462 1400 1485 1385 1473 b 1181 1269 1309 1397 1246 1331 b 736 831 1031 1122 884 979 b 356 452 609 704 485 576 b 32 132 246 347 143 236 b 0 50 7 109 1 84 b 6 9 -1 37 3 23 b 14 -37 10 -9 0 -32 z\"\n    },\n    \"brassScoop\": {\n      \"x_min\": -0.4444444444444445,\n      \"x_max\": 312,\n      \"y_min\": -390,\n      \"y_max\": 28,\n      \"ha\": 418,\n      \"leftSideBearing\": -1,\n      \"advanceWidth\": 312,\n      \"o\": \"m 0 -562 b 393 -256 171 -504 307 -412 b 449 -39 431 -189 449 -115 b 448 -1 449 -26 449 -14 b 433 40 446 14 448 40 b 408 -3 410 40 412 14 b 396 -66 403 -23 402 -46 b 45 -397 346 -243 209 -337 b 0 -451 13 -409 1 -423 b 0 -562 -1 -485 0 -520 z\"\n    },\n    \"brassDoitMedium\": {\n      \"x_min\": -0.32815253965710617,\n      \"x_max\": 476.2125117760856,\n      \"y_min\": -50,\n      \"y_max\": 333.1535583875376,\n      \"ha\": 383.1535583875376,\n      \"leftSideBearing\": -1,\n      \"advanceWidth\": 476,\n      \"o\": \"m 16 -72 b 27 -71 19 -72 23 -72 b 215 -33 89 -56 153 -48 b 521 114 327 -7 435 35 b 685 432 615 199 691 295 b 670 480 684 449 688 475 b 642 441 654 482 648 456 b 403 183 599 321 513 240 b 79 89 301 130 192 105 b 0 -1 -12 76 0 76 b 0 -50 0 -17 1 -33 b 16 -72 0 -65 3 -72 z\"\n    },\n    \"brassFallLipShort\": {\n      \"x_min\": 0,\n      \"x_max\": 298,\n      \"y_min\": -344,\n      \"y_max\": 65,\n      \"ha\": 409,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 298,\n      \"o\": \"m 396 -495 b 420 -461 412 -487 418 -474 b 429 -382 428 -435 429 -409 b 426 -330 429 -364 428 -347 b 285 -6 410 -209 356 -104 b 98 94 239 59 173 94 b 39 86 79 94 58 92 b 0 49 20 81 0 73 l 0 -52 b 10 -69 0 -62 1 -69 b 20 -68 13 -69 16 -69 b 88 -56 45 -59 66 -56 b 261 -160 156 -56 213 -95 b 396 -495 333 -259 382 -369 z\"\n    },\n    \"brassLiftMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 807,\n      \"y_min\": 0,\n      \"y_max\": 838,\n      \"ha\": 838,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 807,\n      \"o\": \"m 50 0 b 55 1 52 0 53 0 b 58 23 65 7 59 16 b 55 58 56 36 55 48 b 130 117 55 99 75 112 b 220 213 202 121 220 141 b 315 308 220 289 238 308 l 336 308 b 408 380 393 310 406 321 b 461 452 409 438 416 452 b 485 451 468 452 477 451 b 569 510 531 448 556 464 b 573 543 572 520 572 531 b 657 619 580 605 595 618 b 698 621 670 619 684 619 b 788 700 749 625 778 649 b 798 778 792 726 793 752 b 873 857 806 841 809 845 b 985 950 927 867 973 887 b 1084 1047 1002 1035 1004 1034 b 1162 1128 1133 1056 1162 1087 b 1146 1182 1162 1145 1158 1164 b 1125 1207 1140 1191 1136 1207 l 1122 1207 b 1110 1191 1113 1205 1110 1198 b 1112 1174 1110 1185 1112 1178 b 1048 1110 1109 1126 1096 1113 b 1028 1109 1043 1110 1035 1109 b 939 1022 969 1102 948 1081 b 845 922 929 949 917 936 b 746 812 773 909 753 886 b 744 780 744 802 744 791 b 635 681 737 700 717 683 b 524 583 553 680 536 665 b 439 510 514 520 503 510 b 357 431 377 510 360 492 l 357 406 b 314 364 356 379 343 364 b 238 361 288 364 264 364 b 173 300 202 357 180 334 b 167 245 168 281 167 262 b 105 174 166 192 157 180 b 75 171 95 173 85 171 b 6 112 30 166 14 153 b 0 73 1 98 0 85 b 37 10 0 45 13 26 b 50 0 42 7 46 0 z\"\n    },\n    \"brassFallRoughMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 791,\n      \"y_min\": 0,\n      \"y_max\": 819,\n      \"ha\": 819,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 791,\n      \"o\": \"m 1117 0 b 1139 101 1129 26 1139 71 b 1138 121 1139 109 1139 115 b 1084 193 1125 171 1110 193 b 1044 183 1073 193 1060 189 b 1022 177 1035 179 1028 177 b 1007 209 1012 177 1008 186 b 876 324 1004 292 959 330 b 799 317 850 321 825 320 b 759 354 772 314 755 320 b 760 373 760 360 760 366 b 759 392 760 379 760 384 b 681 477 753 451 730 477 b 654 474 672 477 664 475 b 606 467 638 471 622 468 b 586 465 599 465 592 465 b 564 481 570 465 564 469 b 569 505 564 487 566 495 b 575 553 572 521 575 537 b 572 585 575 564 573 575 b 481 665 560 657 539 668 b 412 665 458 664 435 665 b 382 690 392 667 382 672 b 383 700 382 693 383 696 b 386 773 387 724 387 749 b 297 858 382 828 351 857 b 229 861 274 858 251 858 b 190 897 207 863 193 871 b 163 1012 186 936 180 976 b 79 1084 145 1050 124 1084 b 66 1083 75 1084 71 1083 b 43 1096 49 1081 43 1087 b 48 1112 43 1100 45 1106 b 53 1130 52 1119 53 1125 b 39 1169 53 1145 45 1158 b 26 1179 36 1175 30 1179 b 16 1171 22 1179 17 1176 b 0 1103 10 1149 0 1126 b 9 1067 0 1092 1 1079 b 91 1021 26 1031 52 1018 b 145 978 122 1024 141 1011 b 156 913 147 956 151 935 b 291 795 170 831 210 795 b 346 768 337 795 346 796 b 344 743 346 760 344 753 b 343 716 344 733 343 724 b 455 600 343 651 390 602 b 505 605 471 599 490 605 b 528 598 514 605 523 603 b 536 579 534 592 536 586 b 524 523 536 562 526 541 b 523 505 524 517 523 511 b 621 405 523 442 560 405 b 639 406 626 405 634 406 b 677 413 652 408 664 410 b 701 416 687 415 696 416 b 721 392 716 416 721 410 b 720 373 721 386 720 380 b 831 255 714 301 759 252 b 897 261 854 255 876 261 b 926 262 909 261 919 262 b 969 197 963 262 965 252 b 971 184 969 193 971 189 b 1031 115 979 137 998 115 b 1071 122 1043 115 1056 118 b 1096 130 1079 125 1086 127 b 1087 59 1094 107 1087 82 b 1117 0 1087 37 1094 17 z\"\n    },\n    \"brassBend\": {\n      \"x_min\": 0,\n      \"x_max\": 381,\n      \"y_min\": 0,\n      \"y_max\": 367,\n      \"ha\": 367,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 381,\n      \"o\": \"m 298 0 b 472 50 359 0 418 14 b 537 135 501 71 530 92 b 543 216 543 163 543 190 l 543 266 b 544 308 543 281 543 295 b 549 433 546 354 549 395 b 543 507 549 459 547 482 b 533 528 541 516 544 528 b 511 508 524 528 514 520 b 508 478 510 498 508 488 b 504 318 507 425 504 372 b 505 264 504 300 505 282 b 446 181 505 220 484 199 b 294 150 396 160 344 150 b 92 194 226 150 158 167 b 45 269 62 207 45 230 b 46 359 46 300 46 328 b 37 497 46 405 45 451 b 27 523 36 507 37 523 b 4 498 14 524 6 513 b 3 481 3 492 3 487 b 0 409 1 456 0 433 b 4 228 0 348 4 288 b 3 177 4 210 4 194 b 68 53 1 125 20 84 b 200 10 108 27 154 17 b 298 0 233 4 266 0 z\"\n    },\n    \"brassMuteClosed\": {\n      \"x_min\": 0,\n      \"x_max\": 274,\n      \"y_min\": 0,\n      \"y_max\": 260,\n      \"ha\": 260,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 274,\n      \"o\": \"m 203 0 b 209 1 206 0 207 0 b 216 13 215 4 216 9 l 215 27 l 215 153 b 216 161 216 156 216 158 b 372 164 268 163 318 164 b 395 184 383 164 395 166 l 395 189 b 357 229 392 209 386 229 b 219 228 311 229 265 228 l 223 310 b 209 357 225 328 219 344 b 189 374 203 364 197 374 b 184 373 187 374 186 373 b 177 359 179 372 177 366 l 177 348 l 173 222 l 39 222 b 0 206 12 222 0 219 b 10 174 0 199 3 189 b 46 157 19 157 30 157 b 108 160 68 158 88 160 b 171 161 130 161 150 161 l 167 58 b 184 16 167 40 171 26 b 203 0 192 12 196 0 z\"\n    },\n    \"brassMuteOpen\": {\n      \"x_min\": 1,\n      \"x_max\": 313.01193341111656,\n      \"y_min\": 0,\n      \"y_max\": 309,\n      \"ha\": 309,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 312,\n      \"o\": \"m 230 0 l 265 0 b 451 189 363 7 452 88 l 451 215 b 348 383 441 285 405 343 b 209 445 288 426 248 445 b 84 379 168 445 132 420 b 69 364 79 373 73 369 b 1 213 30 323 1 275 b 230 0 1 88 94 0 z m 210 62 b 128 73 181 62 154 66 b 40 171 71 91 42 125 b 52 226 40 187 45 206 b 197 374 79 295 130 344 b 228 382 207 380 217 382 b 300 361 252 382 276 370 b 374 308 328 350 353 331 b 410 223 397 284 410 253 b 393 163 410 202 405 181 b 210 62 354 91 288 63 z\"\n    },\n    \"brassFlip\": {\n      \"x_min\": 0,\n      \"x_max\": 402,\n      \"y_min\": 0,\n      \"y_max\": 361,\n      \"ha\": 361,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 402,\n      \"o\": \"m 579 0 b 511 153 579 68 557 117 b 52 504 359 271 206 387 b 29 520 45 510 39 520 b 20 517 26 520 23 518 b 0 477 3 510 0 494 l 0 125 b 17 20 1 92 1 56 b 40 84 37 40 40 60 b 42 287 40 151 42 219 l 42 363 z\"\n    },\n    \"brassJazzTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 646,\n      \"y_min\": 0,\n      \"y_max\": 212,\n      \"ha\": 212,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 646,\n      \"o\": \"m 310 0 b 367 33 327 0 344 10 b 389 55 374 40 382 49 b 490 145 423 85 456 114 b 507 154 495 151 501 154 b 524 144 513 154 517 151 b 598 72 547 120 575 98 b 700 24 625 42 662 24 b 765 43 721 24 744 30 b 893 147 812 72 855 105 b 930 212 910 166 923 186 b 912 215 923 213 917 215 b 871 199 896 215 883 209 b 812 153 852 183 832 167 b 789 144 805 148 796 144 b 773 156 782 144 776 147 b 691 251 757 199 720 222 b 603 301 658 282 631 301 b 527 258 580 301 556 288 b 420 156 494 222 455 190 b 399 143 412 147 405 143 b 377 157 392 143 386 147 b 259 282 340 200 300 242 b 219 305 245 298 232 305 b 177 279 204 305 192 297 b 55 127 137 228 95 177 b 0 52 36 104 20 79 b 14 50 6 50 10 50 b 53 66 32 50 45 58 b 115 131 75 88 98 108 b 135 148 124 143 130 148 b 157 132 141 148 148 143 b 252 33 186 96 219 65 b 310 0 275 12 292 0 z\"\n    },\n    \"brassSmear\": {\n      \"x_min\": 0,\n      \"x_max\": 334,\n      \"y_min\": 0,\n      \"y_max\": 151,\n      \"ha\": 151,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 334,\n      \"o\": \"m 321 0 b 475 125 390 0 436 43 b 481 143 478 131 481 137 b 475 154 481 147 480 151 b 449 148 468 158 458 154 b 395 132 432 137 413 132 b 343 140 377 132 360 137 b 229 194 301 148 266 173 b 168 217 206 209 186 217 b 109 192 148 217 130 209 b 0 26 59 148 32 89 b 59 63 32 29 45 48 b 98 84 72 78 84 84 b 130 73 108 84 118 81 b 213 26 157 58 183 37 b 321 0 255 9 289 0 z\"\n    },\n    \"accSagittal5v7KleismaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v7KleismaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5CommaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5CommaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal7CommaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal7CommaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal25SmallDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal25SmallDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal35MediumDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal35MediumDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal11MediumDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal11MediumDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal11LargeDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal11LargeDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal35LargeDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal35LargeDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp25SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat25SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp7CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat7CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5v7kDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5v7kUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5v7kUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5v7kDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp7CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat7CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp25SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat25SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp35MUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat35MDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp11MUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat11MDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp11LUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat11LDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp35LUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat35LDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp25SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat25SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp7CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat7CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp5CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat5CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp5v7kDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat5v7kUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal7v11KleismaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal7v11KleismaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal17CommaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal17CommaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal55CommaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal55CommaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal7v11CommaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal7v11CommaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v11SmallDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v11SmallDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5v11SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5v11SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp7v11CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat7v11CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp55CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat55CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp17CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat17CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp7v11kDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat7v11kUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp7v11kUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat7v11kDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp17CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat17CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp55CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat55CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp7v11CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat7v11CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5v11SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5v11SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp5v11SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat5v11SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp7v11CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat7v11CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp55CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat55CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp17CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat17CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp7v11kDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat7v11kUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal23CommaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal23CommaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v19CommaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v19CommaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v23SmallDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v23SmallDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5v23SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5v23SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5v19CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5v19CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp23CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat23CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp23CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat23CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5v19CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5v19CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5v23SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5v23SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp5v23SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat5v23SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp5v19CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat5v19CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp23CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat23CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal19SchismaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal19SchismaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal17KleismaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal17KleismaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal143CommaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal143CommaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal11v49CommaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal11v49CommaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal19CommaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal19CommaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal7v19CommaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal7v19CommaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal49SmallDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal49SmallDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal23SmallDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal23SmallDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v13MediumDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v13MediumDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal11v19MediumDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal11v19MediumDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal49MediumDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal49MediumDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v49MediumDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v49MediumDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal49LargeDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal49LargeDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal11v19LargeDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal11v19LargeDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v13LargeDiesisUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5v13LargeDiesisDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp23SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat23SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp49SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat49SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp7v19CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat7v19CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp19CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat19CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp11v49CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat11v49CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp143CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat143CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp17kDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat17kUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp19sDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat19sUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp19sUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat19sDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp17kUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat17kDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp143CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat143CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp11v49CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat11v49CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp19CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat19CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp7v19CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat7v19CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp49SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat49SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp23SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat23SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5v13MUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5v13MDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp11v19MUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat11v19MDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp49MUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat49MDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5v49MUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5v49MDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp49LUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat49LDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp11v19LUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat11v19LDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalSharp5v13LUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFlat5v13LDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp23SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat23SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp49SDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat49SUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp7v19CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat7v19CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp19CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat19CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp11v49CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat11v49CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp143CDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat143CUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp17kDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat17kUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleSharp19sDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalDoubleFlat19sUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalShaftUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalShaftDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalAcute\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalGrave\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal1MinaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal1MinaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal2MinasUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal2MinasDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal1TinaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal1TinaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal2TinasUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal2TinasDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal3TinasUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal3TinasDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal4TinasUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal4TinasDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5TinasUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal5TinasDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal6TinasUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal6TinasDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal7TinasUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal7TinasDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal8TinasUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal8TinasDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal9TinasUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittal9TinasDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFractionalTinaUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accSagittalFractionalTinaDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"accidentalNarrowReversedFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 208,\n      \"y_min\": -231,\n      \"y_max\": 449,\n      \"ha\": 680,\n      \"o\": \"m 272 -333 b 284 -320 278 -333 281 -328 b 300 -174 297 -272 300 -222 b 275 190 298 -52 279 68 b 268 445 272 275 268 360 l 268 490 b 264 612 269 530 265 572 b 236 647 264 632 252 645 l 235 647 b 217 618 220 647 220 628 b 207 526 210 588 207 556 b 210 432 207 494 210 464 b 216 268 213 377 215 323 l 216 230 l 215 232 b 154 256 194 240 174 251 b 111 264 138 261 124 264 b 3 153 50 264 10 223 b 0 94 0 132 0 114 b 194 -276 0 -63 68 -186 b 255 -323 215 -291 236 -307 b 272 -333 262 -330 268 -333 z m 233 -138 b 71 30 168 -92 105 -45 b 63 59 65 42 63 50 b 96 95 62 75 73 86 b 130 102 108 99 120 102 b 215 76 160 102 187 88 l 220 73 b 225 -22 220 42 222 10 b 233 -138 229 -62 230 -101 z\"\n    },\n    \"accidentalNarrowReversedFlatAndFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 335,\n      \"y_min\": -231,\n      \"y_max\": 449,\n      \"ha\": 680,\n      \"o\": \"m 210 -333 b 228 -323 215 -333 220 -330 b 288 -276 246 -307 268 -291 b 482 94 415 -186 482 -63 b 480 153 482 114 482 132 b 372 264 472 223 432 264 b 328 256 359 264 344 261 b 268 232 308 251 288 240 l 266 230 l 266 268 b 272 432 266 323 269 377 b 275 526 272 464 275 494 b 265 618 275 556 272 588 b 248 647 262 628 262 647 l 246 647 b 219 612 230 645 219 632 b 215 490 217 572 213 530 l 215 445 b 207 190 215 360 210 275 b 183 -174 203 68 183 -52 b 199 -320 183 -222 186 -272 b 210 -333 202 -328 204 -333 z m 131 -138 b 40 30 95 -92 60 -43 b 36 59 36 42 36 50 b 55 95 35 75 42 86 b 73 102 60 99 68 102 b 121 76 89 102 105 88 l 124 73 b 127 -22 124 42 125 10 b 131 -138 128 -62 130 -101 z m 153 -333 b 160 -320 157 -333 158 -328 b 168 -174 167 -272 168 -222 b 154 190 168 -52 157 68 b 151 445 153 275 151 360 l 151 490 b 148 612 151 530 150 572 b 132 647 148 632 141 645 b 122 618 124 647 124 628 b 117 526 118 588 117 556 b 118 432 117 494 118 464 b 121 268 120 377 121 323 l 121 230 l 121 232 b 86 256 109 240 98 251 b 62 264 78 261 69 264 b 1 153 29 264 6 223 b 0 94 0 132 0 114 b 109 -276 0 -63 37 -186 b 144 -323 121 -291 132 -307 b 153 -333 147 -330 151 -333 z m 249 -138 b 258 -22 252 -101 253 -62 b 262 73 261 10 262 42 l 268 76 b 353 102 295 88 323 102 b 386 95 363 102 374 99 b 419 59 409 86 420 75 b 412 30 419 50 418 42 b 249 -138 374 -43 314 -92 z\"\n    },\n    \"accidentalWilsonPlus\": {\n      \"x_min\": 0,\n      \"x_max\": 298,\n      \"y_min\": -218,\n      \"y_max\": 218,\n      \"ha\": 436,\n      \"o\": \"m 232 -314 b 236 -301 236 -310 236 -305 l 236 -295 b 243 -52 239 -213 242 -132 l 369 62 b 429 200 413 101 425 147 b 416 243 429 216 428 236 b 383 225 406 251 393 232 l 377 220 b 246 98 336 177 291 138 b 249 242 248 145 246 193 b 225 304 251 265 242 287 b 209 314 220 308 215 314 b 204 312 207 314 206 312 b 196 292 196 310 196 300 b 193 184 194 256 194 220 b 187 48 192 140 190 94 b 46 -72 141 7 94 -32 b 0 -163 13 -98 0 -127 b 1 -187 0 -170 0 -179 b 10 -235 4 -203 6 -219 b 20 -255 12 -242 14 -251 b 36 -245 26 -259 30 -249 b 181 -109 85 -200 132 -154 b 176 -258 180 -158 176 -209 b 232 -314 176 -298 186 -307 z\"\n    },\n    \"accidentalWilsonMinus\": {\n      \"x_min\": 0,\n      \"x_max\": 284.2093390143919,\n      \"y_min\": -163,\n      \"y_max\": 163,\n      \"ha\": 326,\n      \"o\": \"m 386 -232 b 409 -163 415 -222 408 -180 b 382 -69 410 -120 408 -89 b 32 228 264 30 141 118 b 17 235 26 233 22 235 b 3 219 9 235 3 228 b 0 157 3 199 0 179 b 29 69 0 125 6 95 b 323 -194 115 -29 222 -111 b 374 -235 338 -206 353 -235 b 386 -232 377 -235 382 -233 z\"\n    }\n  },\n  \"fontFamily\": \"Petaluma\",\n  \"resolution\": 1000,\n  \"generatedOn\": \"2020-11-16T21:48:49.454Z\"\n};\n","export const PetalumaMetrics = {\n  name: 'Petaluma',\n  smufl: true,\n\n  stave: {\n    padding: 15,\n  },\n\n  clef: {\n    default: {\n      point: 32,\n      width: 26,\n    },\n    small: {\n      point: 26,\n      width: 20,\n    },\n\n    annotations: {\n      '8va': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 18,\n          treble: {\n            line: -1.4,\n            shiftX: 12,\n          },\n        },\n        small: {\n          point: 16,\n          treble: {\n            line: -0.2,\n            shiftX: 8,\n          },\n        }\n      },\n      '8vb': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 18,\n          treble: {\n            line: 6,\n            shiftX: 10,\n          },\n          bass: {\n            line: 3.5,\n            shiftX: 1,\n          }\n        },\n        small: {\n          point: 16,\n          treble: {\n            line: 5.3,\n            shiftX: 6,\n          },\n          bass: {\n            line: 3.1,\n            shiftX: 0.5,\n          }\n        }\n      }\n    },\n\n    // These may no longer be necessary\n    lineCount: {\n      '8': { point: 55, shiftY: 14 },\n      '7': { point: 47, shiftY: 8 },\n      '6': { point: 32, shiftY: 1 },\n      '5': { point: 30, shiftY: -6 },\n      '4': { point: 23, shiftY: -12 },\n    }\n  },\n\n  pedalMarking: {\n    up: {\n      point: 40\n    },\n    down: {\n      point: 34\n    }\n  },\n\n  // These are for numeric digits, such as in time signatures\n  digits: {\n    // used by timesig\n    shiftLine: -1,\n    point: 22,\n\n    // used by tuplets\n    tupletPoint: 16,\n    shiftY: -2,\n  },\n\n  articulation: {\n    articStaccatissimoAbove: {\n      padding: 2,\n    },\n    articStaccatissimoBelow: {\n      padding: 2,\n    }\n  },\n\n  tremolo: {\n    default: {\n      point: 25,\n      spacing: 5,\n      offsetYStemUp: -5,\n      offsetYStemDown: 5,\n      offsetXStemUp: 11,\n      offsetXStemDown: 1,\n    },\n    grace: {\n      point: 18,\n      spacing: 4,\n      offsetYStemUp: -5,\n      offsetYStemDown: 5,\n      offsetXStemUp: 7,\n      offsetXStemDown: 1,\n    }\n  },\n\n  noteHead: {\n    displaced: {\n      shiftX: -2,\n    },\n  },\n\n  stem: {\n    // These are stem (Y) offsets to the note heads. To shift the\n    // noteheads (x-position) themselves, see glyphs.notehead.custom.\n    noteHead: {\n      noteheadTriangleUpHalf: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpBlack: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpWhole: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXHalf: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXBlack: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXWhole: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadBlack: {\n        offsetYBaseStemDown: 2,\n        offsetYBaseStemUp: -2,\n      },\n      noteheadSquareWhite: {\n        offsetYBaseStemDown: -5,\n        offsetYBaseStemUp: 5,\n      }\n    }\n  },\n\n  // Values under here are used by the Glyph class to reposition and rescale\n  // glyphs based on their category. This should be the first stop for\n  // custom font glyph repositioning.\n  //\n  // The glyph loader first looks up a specific set of settings based on the\n  // glyph code, and if not found, uses the defaults from the category. See\n  // glyphs.textNote for an example of this.\n  //\n  // Details in Glyph.lookupFontMetrics.\n  glyphs: {\n    coda: {\n      point: 20,\n      shiftX: -7,\n      shiftY: 8,\n    },\n    segno: {\n      shiftX: -7,\n    },\n    flag: {\n      shiftX: -0.75,\n      tabStem: {\n        shiftX: -1.75,\n      },\n      staveTempo: {\n        shiftX: -1,\n      }\n    },\n    clef: {\n      gClef: {\n        default: { scale: 1.1, shiftY: 1 },\n        small: { shiftY: 1.5 }\n      },\n      fClef: {\n        default: { shiftY: -0.5 }\n      }\n    },\n    ornament: {\n      ornamentTurn: {\n        scale: 1.2,\n      },\n      ornamentTurnSlash: {\n        scale: 1.2,\n      },\n    },\n    stroke: {\n      arrowheadBlackDown: {\n        straight: {\n          shiftX: -4.5,\n        },\n        wiggly: {\n          shiftX: -1,\n          shiftY: 1,\n        }\n      },\n      arrowheadBlackUp: {\n        straight: {\n          shiftX: -0.85,\n        },\n        wiggly: {\n          shiftX: -1,\n          shiftY: 1,\n        }\n      }\n    },\n    textNote: {\n      point: 34,\n      breathMarkTick: {\n        point: 36,\n        shiftY: 9,\n      },\n      breathMarkComma: {\n        point: 36,\n      },\n      segno: {\n        point: 30,\n        shiftX: -7,\n        shiftY: 8,\n      },\n      coda: {\n        point: 20,\n        shiftX: -7,\n        shiftY: 8,\n      },\n      ornamentTrill: {\n        shiftX: -10,\n        shiftY: 8,\n      },\n      ornamentMordent: {\n        shiftX: -8,\n      },\n      ornamentShortTrill: {\n        shiftX: -8,\n      }\n    },\n    noteHead: {\n      standard: {\n        noteheadBlackStemUp: {\n          shiftX: 1.5,\n          point: 34,\n        },\n        noteheadBlackStemDown: {\n          point: 34,\n        },\n        noteheadHalfStemUp: {\n          shiftX: 1,\n          point: 34,\n        },\n        noteheadHalfStemDown: {\n          point: 34,\n        },\n        noteheadWholeStemUp: {\n          shiftX: 1,\n          point: 34,\n        },\n        noteheadWholeStemDown: {\n          point: 34,\n        },\n        restQuarterStemUp: {\n          point: 35,\n        },\n        restQuarterStemDown: {\n          point: 35,\n        },\n      },\n      custom: {\n        'noteheadCircleXStemUp': {\n          shiftX: -1,\n        },\n        'noteheadCircleXStemDown': {\n          shiftX: 0.25,\n        },\n        'noteheadDiamondHalfStemUp': {\n          shiftX: 1.5,\n        },\n        'noteheadDiamondBlackStemUp': {\n          shiftX: 1.5,\n        },\n        'noteheadDiamondWholeStemUp': {\n          shiftX: 1,\n        },\n        'noteheadXBlackStemUp': {\n          shiftX: 1,\n        },\n        'noteheadXHalfStemUp': {\n          shiftX: -3,\n        },\n        'noteheadXHalfStemDown': {\n          shiftX: 1,\n        },\n        'noteheadXWholeStemUp': {\n          shiftX: -7,\n        },\n        'noteheadXWholeStemDown': {\n          shiftX: 1,\n        },\n        'noteheadSquareWhiteStemDown': {\n          shiftX: 0.25,\n        },\n        'noteheadSquareWhiteStemUp': {\n          shiftX: -0.75,\n        },\n        'noteheadSquareBlackStemUp': {\n          shiftX: -0.75,\n        },\n        'noteheadTriangleUpWholeStemUp': {\n          shiftX: -0.75,\n        }\n      },\n    },\n    chordSymbol: {\n      global: {\n        superscriptOffset: -400,\n        subscriptOffset: 300,\n        kerningOffset: -150,\n        lowerKerningText:  ['D', 'F', 'P', 'T', 'V', 'Y'],\n        upperKerningText:  ['L'],\n        spacing: 20,\n        superSubRatio: 0.73\n      },\n      csymDiminished: {\n        scale: 0.8,\n        leftSideBearing: -95,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymHalfDiminished: {\n        scale: 0.8,\n        leftSideBearing: -32,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymAugmented: {\n        scale: 1,\n        leftSideBearing: -25,\n        advanceWidth: 530,\n        yOffset: 0\n      },\n      csymParensLeftTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 155,\n        yOffset: 150\n      },\n      csymParensRightTall: {\n        scale: 0.8,\n        leftSideBearing: 40,\n        advanceWidth: 189,\n        yOffset: 150\n      },\n      csymBracketLeftTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 328,\n        yOffset: 0\n      },\n      csymBracketRightTall: {\n        scale: 0.8,\n        leftSideBearing: 1,\n        advanceWidth: 600,\n        yOffset: 0\n      },\n      csymParensLeftVeryTall: {\n        scale: 0.95,\n        leftSideBearing: 0,\n        advanceWidth: 210,\n        yOffset: 250\n      },\n      csymParensRightVeryTall: {\n        scale: 0.9,\n        leftSideBearing: -100,\n        advanceWidth: 111,\n        yOffset: 250\n      },\n      csymDiagonalArrangementSlash: {\n        scale: 0.6,\n        leftSideBearing: -1,\n        advanceWidth: 990,\n        yOffset: 0\n      },\n      csymMinor: {\n        scale: 0.7,\n        leftSideBearing: 0,\n        advanceWidth: 482,\n        yOffset: 0\n      },\n      csymMajorSeventh: {\n        scale: 0.8,\n        leftSideBearing: 100,\n        yOffset: 0,\n        advanceWidth: 600\n      },\n      accidentalSharp: {\n        scale: 0.7,\n        leftSideBearing: 0,\n        advanceWidth: 425,\n        yOffset: -422\n      },\n      accidentalFlat: {\n        scale: 0.8,\n        leftSideBearing: -10,\n        advanceWidth: 228,\n        yOffset: -284\n      }\n    },\n    jazzOrnaments: {\n      brassScoop: {\n        scale: 1.0,\n        xOffset: -12,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 10\n      },\n      brassDoitMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassFallLipShort: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassLiftMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 5,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassFallRoughMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 26,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassBend: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -8,\n        stemUpYOffset: 28,\n        reportedWidth: 5\n      },\n      brassMuteClosed: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -8,\n        stemUpYOffset: 26,\n        reportedWidth: 5\n      },\n      brassMuteOpen: {\n        scale: 1.0,\n        xOffset: 4,\n        yOffset: -8,\n        stemUpYOffset: 27,\n        reportedWidth: 5\n      },\n      brassFlip: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassJazzTurn: {\n        scale: 1.0,\n        xOffset: 6,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassSmear: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n    }\n  }\n};\n","export const CustomFont = {\n  'resolution': 1000,\n  'familyName': 'VexflowCustom',\n  'glyphs': {\n    'noteheadSquareWhite': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 386,\n      'o': 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 '\n    },\n    'noteheadSquareBlack': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 386,\n      'o': 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 '\n    },\n    'accidentalBuyukMucennebFlat': {\n      'x_min': -171.5,\n      'x_max': 251.8125,\n      'ha': 257,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '\n    },\n    'accidentalBakiyeFlat': {\n      'x_min': -176.9375,\n      'x_max': 251.8125,\n      'ha': 257,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '\n    },\n    'accidentalKucukMucennebSharp': {\n      'x_min': -1.359375,\n      'x_max': 255.890625,\n      'ha': 261,\n      'o': 'm 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 '\n    },\n    'accidentalKoron': {\n      'x_min': -20,\n      'x_max': 320,\n      'ha': 257,\n      'o': 'm -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 '\n    },\n    'accidentalSori': {\n      'x_min': -10.890625,\n      'x_max': 299.4375,\n      'ha': 294,\n      'o': 'm 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 '\n    },\n    'vexAccidentalMicrotonal2': {\n      'x_min': -1.359375,\n      'x_max': 386.5625,\n      'ha': 394,\n      'o': 'm 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 '\n    },\n    'vexAccidentalMicrotonal3': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 360,\n      'o': 'm -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z '\n    },\n    'vexAccidentalMicrotonal4': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 360,\n      'o': 'm 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z '\n    },\n    'vexNoteHeadRectBlack': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 360,\n      'o': 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 '\n    },\n    'vexNoteHeadRectWhite': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 360,\n      'o': 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100'\n    }\n  }\n};\n","export const CustomMetrics = {\n  name: 'Vexflow-Custom',\n  smufl: false,\n  glyphs: {}\n};\n","// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\n\nexport class BoundingBoxComputation {\n  x1: number;\n  y1: number;\n  private x2: number;\n  private y2: number;\n\n  constructor(x1?: number, y1?: number, x2?: number, y2?: number) { // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width(): number {\n    return this.x2 - this.x1;\n  }\n\n  height(): number {\n    return this.y2 - this.y1;\n  }\n\n  noOp(): void {\n    // do nothing\n  }\n\n  addPoint(x: number, y: number): void {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x: number): void {\n    this.addPoint(x, null);\n  }\n\n  addY(y: number): void {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x: number, p0y: number, p1x: number, p1y: number, p2x: number, p2y: number): void {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x: number, p0y: number, p1x: number, p1y: number, p2x: number, p2y: number, p3x: number, p3y: number): void {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t: number, i: number) => Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n","// Dump warning to console.\nexport const WARN = (...args: unknown[]): void => {\n  const line = args.join(' ');\n  window.console.log('Warning: ', line, StackTrace());\n};\n\nexport const LOG = (block: string, args?: unknown[]): void => {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log(block + ': ' + line);\n};\n\n// Get stack trace.\nconst StackTrace = (): string => {\n  const err = new Error();\n  return err.stack;\n};\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\nimport {ISize} from \"./types/common\";\nimport {WARN} from \"./flow\";\n\n/** @constructor */\nexport class CanvasContext {\n  private canvas: ISize;\n  private background_fillStyle: string;\n  private vexFlowCanvasContext: CanvasRenderingContext2D;\n\n  static get WIDTH(): number {\n    return 600;\n  }\n\n  static get HEIGHT(): number {\n    return 400;\n  }\n\n  static get CANVAS_BROWSER_SIZE_LIMIT(): number {\n    return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size\n  }\n\n  static SanitizeCanvasDims(width: number, height: number): number[] {\n    if (Math.max(width, height) > this.CANVAS_BROWSER_SIZE_LIMIT) {\n      WARN(\n        'Canvas dimensions exceed browser limit. Cropping to ' +\n        this.CANVAS_BROWSER_SIZE_LIMIT\n      );\n      if (width > this.CANVAS_BROWSER_SIZE_LIMIT) {\n        width = this.CANVAS_BROWSER_SIZE_LIMIT;\n        // note: Math.min return 0 for undefined, NaN for null. Would change inputs.\n      }\n      if (height > this.CANVAS_BROWSER_SIZE_LIMIT) {\n        height = this.CANVAS_BROWSER_SIZE_LIMIT;\n      }\n    }\n    return [width, height];\n  }\n\n  constructor(context: CanvasRenderingContext2D) {\n    // Use a name that is unlikely to clash with a canvas context\n    // property\n    this.vexFlowCanvasContext = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  clear(): void {\n    this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Containers not implemented\n  openGroup(): void {\n    // do nothing\n  }\n\n  closeGroup(): void {\n    // do nothing\n  }\n\n  add(): void {\n    // do nothing\n  }\n\n  setFont(family: string, size: number, weight?: string): this {\n    this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n    return this;\n  }\n\n  setRawFont(font: string): this {\n    this.vexFlowCanvasContext.font = font;\n    return this;\n  }\n\n  setFillStyle(style: string): this {\n    this.vexFlowCanvasContext.fillStyle = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style: string): this {\n    this.background_fillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style: string): this {\n    this.vexFlowCanvasContext.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(style: string): this {\n    this.vexFlowCanvasContext.shadowColor = style;\n    return this;\n  }\n\n  setShadowBlur(blur: number): this {\n    this.vexFlowCanvasContext.shadowBlur = blur;\n    return this;\n  }\n\n  setLineWidth(width: number): this {\n    this.vexFlowCanvasContext.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(cap_type: CanvasLineCap): this {\n    this.vexFlowCanvasContext.lineCap = cap_type;\n    return this;\n  }\n\n  // setLineDash: is the one native method in a canvas context\n  // that begins with set, therefore we don't bolster the method\n  // if it already exists (see renderer.bolsterCanvasContext).\n  // If it doesn't exist, we bolster it and assume it's looking for\n  // a ctx.lineDash method, as previous versions of VexFlow\n  // expected.\n  setLineDash(dash: number[]): this {\n    (this.vexFlowCanvasContext as any).lineDash = dash;\n    return this;\n  }\n\n  scale(x: number, y: number): void {\n    return this.vexFlowCanvasContext.scale(parseFloat(x.toString()), parseFloat(y.toString()));\n  }\n\n  resize(width: string, height: string): any {\n    const [w, h] = CanvasContext.SanitizeCanvasDims(parseInt(width, 10), parseInt(height, 10));\n    return (this.vexFlowCanvasContext as any).resize(w, h);\n  }\n\n  rect(x: number, y: number, width: number, height: number): void {\n    return this.vexFlowCanvasContext.rect(x, y, width, height);\n  }\n\n  fillRect(x: number, y: number, width: number, height: number): void {\n    return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n  }\n\n  clearRect(x: number, y: number, width: number, height: number): void {\n    return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n  }\n\n  beginPath(): void {\n    return this.vexFlowCanvasContext.beginPath();\n  }\n\n  moveTo(x: number, y: number): void {\n    return this.vexFlowCanvasContext.moveTo(x, y);\n  }\n\n  lineTo(x: number, y: number): void {\n    return this.vexFlowCanvasContext.lineTo(x, y);\n  }\n\n  bezierCurveTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number): void {\n    return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  quadraticCurveTo(x1: number, y1: number, x: number, y: number): void {\n    return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, antiClockwise: boolean): void {\n    return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow(): any {\n    return (this.vexFlowCanvasContext as any).glow();\n  }\n\n  fill(): void {\n    return this.vexFlowCanvasContext.fill();\n  }\n\n  stroke(): void {\n    return this.vexFlowCanvasContext.stroke();\n  }\n\n  closePath(): void {\n    return this.vexFlowCanvasContext.closePath();\n  }\n\n  measureText(text: string): TextMetrics {\n    return this.vexFlowCanvasContext.measureText(text);\n  }\n\n  fillText(text: string, x: number, y: number): void {\n    return this.vexFlowCanvasContext.fillText(text, x, y);\n  }\n\n  save(): void {\n    return this.vexFlowCanvasContext.save();\n  }\n\n  restore(): void {\n    return this.vexFlowCanvasContext.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A rendering context for the Raphael backend.\n//\n// ## Warning: Deprecated for SVGContext\n// Except in instances where SVG support for IE < 9.0 is\n// needed, SVGContext is recommended.\nimport Raphael from \"raphael\";\nimport {ICoordinates, IRaphaelContextState} from \"./types/common\";\n\nexport class RaphaelContext {\n  private readonly attributes: Record<string, any>;\n  private readonly background_attributes: Record<string, any>;\n  private readonly shadow_attributes: Record<string, any>;\n\n  private element: any;\n  private paper: any;\n  private path: string;\n  private pen: ICoordinates;\n  private lineWidth: number;\n  private state: IRaphaelContextState;\n  private state_stack: any[];\n\n  constructor(element: any) {\n    this.element = element;\n    this.paper = Raphael(element); // eslint-disable-line\n    this.path = '';\n    this.pen = {x: 0, y: 0};\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: {x: 1, y: 1},\n      font_family: 'Arial',\n      font_size: 8,\n      font_weight: '800',\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'font': '10pt Arial',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'font': '10pt Arial',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n  }\n\n  // Containers not implemented\n  openGroup(): void {\n    // do nothing\n  }\n\n  closeGroup(): void {\n    // do nothing\n  }\n\n  add(): void {\n    // do nothing\n  }\n\n  setFont(family: string, size: number, weight: string): this {\n    this.state.font_family = family;\n    this.state.font_size = size;\n    this.state.font_weight = weight;\n    this.attributes.font = (this.state.font_weight || '') + ' ' +\n      (this.state.font_size * this.state.scale.x) + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  setRawFont(font: string): this {\n    this.attributes.font = font;\n    return this;\n  }\n\n  setFillStyle(style: string): this {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style: string): this {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style: string): this {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style: string): this {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur: number): this {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width: number): void {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // Empty because there is no equivalent in SVG\n  setLineDash(): this {\n    return this;\n  }\n\n  setLineCap(): this {\n    return this;\n  }\n\n  scale(x: number, y: number): this {\n    this.state.scale = {x, y};\n    // The scale() method is deprecated as of Raphael.JS 2.0, and\n    // can no longer be used as an option in an Element.attr() call.\n    // It is preserved here for users running earlier versions of\n    // Raphael.JS, though it has no effect on the SVG output in\n    // Raphael 2 and higher.\n    this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.attributes.scale = x + ',' + y + ',0,0';\n    this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.background_attributes.font = this.state.font_size *\n      this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  clear(): void {\n    this.paper.clear();\n  }\n\n  resize(width: string, height: string): this {\n    this.element.style.width = width;\n    this.paper.setSize(width, height);\n    return this;\n  }\n\n  // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n  // is resized.\n  //\n  // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n  setViewBox(viewBox: any): void {\n    this.paper.canvas.setAttribute('viewBox', viewBox);\n  }\n\n  rect(x: number, y: number, width: number, height: number): this {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', this.lineWidth);\n    return this;\n  }\n\n  fillRect(x: number, y: number, width: number, height: number): this {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n    return this;\n  }\n\n  clearRect(x: number, y: number, width: number, height: number): this {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.background_attributes);\n    return this;\n  }\n\n  beginPath(): this {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x: number, y: number): this {\n    this.path += 'M' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x: number, y: number): this {\n    this.path += 'L' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number): this {\n    this.path += 'C' +\n      x1 + ',' +\n      y1 + ',' +\n      x2 + ',' +\n      y2 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1: number, y1: number, x: number, y: number): this {\n    this.path += 'Q' +\n      x1 + ',' +\n      y1 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, antiClockwise: boolean): this {\n    function normalizeAngle(angle: number) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x: number, y: number, radius: number, startAngle: number, endAngle: number, antiClockwise: boolean): void {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ',' + y1 + ',A' +\n      radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' +\n      x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow(): any {\n    const out = this.paper.set();\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      for (let i = 1; i <= num_paths; i++) {\n        out.push(this.paper.path(this.path).attr({\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n          // See note in this.scale(): In Raphael the scale() method\n          // is deprecated and removed as of Raphael 2.0 and replaced\n          // by the transform() method.  It is preserved here for\n          // users with earlier versions of Raphael, but has no effect\n          // on the output SVG in Raphael 2.0+.\n          transform: this.attributes.transform,\n          scale: this.attributes.scale,\n        }));\n      }\n    }\n    return out;\n  }\n\n  fill(): this {\n    this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('stroke-width', 0);\n    this.glow();\n\n    return this;\n  }\n\n  stroke(): this {\n    // The first line of code below is, unfortunately, a bit of a hack:\n    // Raphael's transform() scaling does not scale the stroke-width, so\n    // in order to scale a stroke, we have to manually scale the\n    // stroke-width.\n    //\n    // This works well so long as the X & Y states for this.scale() are\n    // relatively similar.  However, if they are very different, we\n    // would expect horizontal and vertical lines to have different\n    // stroke-widths.\n    //\n    // In the future, if we want to support very divergent values for\n    // horizontal and vertical scaling, we may want to consider\n    // implementing SVG scaling with properties of the SVG viewBox &\n    // viewPort and removing it entirely from the Element.attr() calls.\n    // This would more closely parallel the approach taken in\n    // canvascontext.js as well.\n\n    const strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n    this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', strokeWidth);\n    this.glow();\n\n    return this;\n  }\n\n  closePath(): this {\n    this.path += 'Z';\n    return this;\n  }\n\n  measureText(text: string): DOMRect {\n    const txt = this.paper.text(0, 0, text)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke', 'none');\n    const bounds = txt.getBBox();\n    txt.remove();\n\n    return {\n      width: bounds.width,\n      height: bounds.height,\n    } as DOMRect;\n  }\n\n  fillText(text: string, x: number, y: number): this {\n    this.paper\n      .text(\n        x + (this.measureText(text).width / 2),\n        y - (this.state.font_size / (2.25 * this.state.scale.y)),\n        text\n      )\n      .attr(this.attributes);\n\n    return this;\n  }\n\n  save(): this {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        font_family: this.state.font_family,\n      },\n      attributes: {\n        font: this.attributes.font,\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore(): this {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state.font_family = state.state.font_family;\n    this.attributes.font = state.attributes.font;\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.Raphael=e():t.Raphael=e()}(window,function(){return function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=1)}([function(t,e,r){var i,n;i=[r(2)],void 0===(n=function(t){function e(i){if(e.is(i,\"function\"))return r?i():t.on(\"raphael.DOMload\",i);if(e.is(i,A))return e._engine.create[c](e,i.splice(0,3+e.is(i[0],T))).add(i);var n=Array.prototype.slice.call(arguments,0);if(e.is(n[n.length-1],\"function\")){var a=n.pop();return r?a.call(e._engine.create[c](e,n)):t.on(\"raphael.DOMload\",function(){a.call(e._engine.create[c](e,n))})}return e._engine.create[c](e,arguments)}e.version=\"2.3.0\",e.eve=t;var r,i,n=/[, ]+/,a={circle:1,rect:1,path:1,ellipse:1,text:1,image:1},s=/\\{(\\d+)\\}/g,o=\"hasOwnProperty\",l={doc:document,win:window},h={was:Object.prototype[o].call(l.win,\"Raphael\"),is:l.win.Raphael},u=function(){this.ca=this.customAttributes={}},c=\"apply\",f=\"concat\",p=\"ontouchstart\"in window||window.TouchEvent||window.DocumentTouch&&document instanceof DocumentTouch,d=\"\",g=\" \",x=String,v=\"split\",y=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[v](g),m={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},b=x.prototype.toLowerCase,_=Math,w=_.max,k=_.min,B=_.abs,C=_.pow,S=_.PI,T=\"number\",A=\"array\",M=Object.prototype.toString,E=(e._ISURL=/^url\\(['\"]?(.+?)['\"]?\\)$/i,/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i),N={NaN:1,Infinity:1,\"-Infinity\":1},L=/^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,P=_.round,z=parseFloat,F=parseInt,R=x.prototype.toUpperCase,j=e._availableAttrs={\"arrow-end\":\"none\",\"arrow-start\":\"none\",blur:0,\"clip-rect\":\"0 0 1e9 1e9\",cursor:\"default\",cx:0,cy:0,fill:\"#fff\",\"fill-opacity\":1,font:'10px \"Arial\"',\"font-family\":'\"Arial\"',\"font-size\":\"10\",\"font-style\":\"normal\",\"font-weight\":400,gradient:0,height:0,href:\"http://raphaeljs.com/\",\"letter-spacing\":0,opacity:1,path:\"M0,0\",r:0,rx:0,ry:0,src:\"\",stroke:\"#000\",\"stroke-dasharray\":\"\",\"stroke-linecap\":\"butt\",\"stroke-linejoin\":\"butt\",\"stroke-miterlimit\":0,\"stroke-opacity\":1,\"stroke-width\":1,target:\"_blank\",\"text-anchor\":\"middle\",title:\"Raphael\",transform:\"\",width:0,x:0,y:0,class:\"\"},I=e._availableAnimAttrs={blur:T,\"clip-rect\":\"csv\",cx:T,cy:T,fill:\"colour\",\"fill-opacity\":T,\"font-size\":T,height:T,opacity:T,path:\"path\",r:T,rx:T,ry:T,stroke:\"colour\",\"stroke-opacity\":T,\"stroke-width\":T,transform:\"transform\",width:T,x:T,y:T},D=/[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,q={hs:1,rg:1},O=/,?([achlmqrstvxz]),?/gi,V=/([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,W=/([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,Y=/(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/gi,G=(e._radial_gradient=/^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,{}),H=function(t,e){return z(t)-z(e)},X=function(t){return t},U=e._rectPath=function(t,e,r,i,n){return n?[[\"M\",t+n,e],[\"l\",r-2*n,0],[\"a\",n,n,0,0,1,n,n],[\"l\",0,i-2*n],[\"a\",n,n,0,0,1,-n,n],[\"l\",2*n-r,0],[\"a\",n,n,0,0,1,-n,-n],[\"l\",0,2*n-i],[\"a\",n,n,0,0,1,n,-n],[\"z\"]]:[[\"M\",t,e],[\"l\",r,0],[\"l\",0,i],[\"l\",-r,0],[\"z\"]]},$=function(t,e,r,i){return null==i&&(i=r),[[\"M\",t,e],[\"m\",0,-i],[\"a\",r,i,0,1,1,0,2*i],[\"a\",r,i,0,1,1,0,-2*i],[\"z\"]]},Z=e._getPath={path:function(t){return t.attr(\"path\")},circle:function(t){var e=t.attrs;return $(e.cx,e.cy,e.r)},ellipse:function(t){var e=t.attrs;return $(e.cx,e.cy,e.rx,e.ry)},rect:function(t){var e=t.attrs;return U(e.x,e.y,e.width,e.height,e.r)},image:function(t){var e=t.attrs;return U(e.x,e.y,e.width,e.height)},text:function(t){var e=t._getBBox();return U(e.x,e.y,e.width,e.height)},set:function(t){var e=t._getBBox();return U(e.x,e.y,e.width,e.height)}},Q=e.mapPath=function(t,e){if(!e)return t;var r,i,n,a,s,o,l;for(n=0,s=(t=Tt(t)).length;n<s;n++)for(a=1,o=(l=t[n]).length;a<o;a+=2)r=e.x(l[a],l[a+1]),i=e.y(l[a],l[a+1]),l[a]=r,l[a+1]=i;return t};if(e._g=l,e.type=l.win.SVGAngle||l.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\",\"1.1\")?\"SVG\":\"VML\",\"VML\"==e.type){var J,K=l.doc.createElement(\"div\");if(K.innerHTML='<v:shape adj=\"1\"/>',(J=K.firstChild).style.behavior=\"url(#default#VML)\",!J||\"object\"!=typeof J.adj)return e.type=d;K=null}function tt(t){if(\"function\"==typeof t||Object(t)!==t)return t;var e=new t.constructor;for(var r in t)t[o](r)&&(e[r]=tt(t[r]));return e}e.svg=!(e.vml=\"VML\"==e.type),e._Paper=u,e.fn=i=u.prototype=e.prototype,e._id=0,e.is=function(t,e){return\"finite\"==(e=b.call(e))?!N[o](+t):\"array\"==e?t instanceof Array:\"null\"==e&&null===t||e==typeof t&&null!==t||\"object\"==e&&t===Object(t)||\"array\"==e&&Array.isArray&&Array.isArray(t)||M.call(t).slice(8,-1).toLowerCase()==e},e.angle=function(t,r,i,n,a,s){if(null==a){var o=t-i,l=r-n;return o||l?(180+180*_.atan2(-l,-o)/S+360)%360:0}return e.angle(t,r,a,s)-e.angle(i,n,a,s)},e.rad=function(t){return t%360*S/180},e.deg=function(t){return Math.round(180*t/S%360*1e3)/1e3},e.snapTo=function(t,r,i){if(i=e.is(i,\"finite\")?i:10,e.is(t,A)){for(var n=t.length;n--;)if(B(t[n]-r)<=i)return t[n]}else{var a=r%(t=+t);if(a<i)return r-a;if(a>t-i)return r-a+t}return r};var et,rt;e.createUUID=(et=/[xy]/g,rt=function(t){var e=16*_.random()|0;return(\"x\"==t?e:3&e|8).toString(16)},function(){return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(et,rt).toUpperCase()});e.setWindow=function(r){t(\"raphael.setWindow\",e,l.win,r),l.win=r,l.doc=l.win.document,e._engine.initWin&&e._engine.initWin(l.win)};var it=function(t){if(e.vml){var r,i=/^\\s+|\\s+$/g;try{var n=new ActiveXObject(\"htmlfile\");n.write(\"<body>\"),n.close(),r=n.body}catch(t){r=createPopup().document.body}var a=r.createTextRange();it=ht(function(t){try{r.style.color=x(t).replace(i,d);var e=a.queryCommandValue(\"ForeColor\");return\"#\"+(\"000000\"+(e=(255&e)<<16|65280&e|(16711680&e)>>>16).toString(16)).slice(-6)}catch(t){return\"none\"}})}else{var s=l.doc.createElement(\"i\");s.title=\"Raphaël Colour Picker\",s.style.display=\"none\",l.doc.body.appendChild(s),it=ht(function(t){return s.style.color=t,l.doc.defaultView.getComputedStyle(s,d).getPropertyValue(\"color\")})}return it(t)},nt=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},at=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},st=function(){return this.hex},ot=function(t,r,i){if(null==r&&e.is(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t&&(i=t.b,r=t.g,t=t.r),null==r&&e.is(t,\"string\")){var n=e.getRGB(t);t=n.r,r=n.g,i=n.b}return(t>1||r>1||i>1)&&(t/=255,r/=255,i/=255),[t,r,i]},lt=function(t,r,i,n){var a={r:t*=255,g:r*=255,b:i*=255,hex:e.rgb(t,r,i),toString:st};return e.is(n,\"finite\")&&(a.opacity=n),a};function ht(t,e,r){return function i(){var n=Array.prototype.slice.call(arguments,0),a=n.join(\"␀\"),s=i.cache=i.cache||{},l=i.count=i.count||[];return s[o](a)?(function(t,e){for(var r=0,i=t.length;r<i;r++)if(t[r]===e)return t.push(t.splice(r,1)[0])}(l,a),r?r(s[a]):s[a]):(l.length>=1e3&&delete s[l.shift()],l.push(a),s[a]=t[c](e,n),r?r(s[a]):s[a])}}e.color=function(t){var r;return e.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t?(r=e.hsb2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):e.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t?(r=e.hsl2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):(e.is(t,\"string\")&&(t=e.getRGB(t)),e.is(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t?(r=e.rgb2hsl(t),t.h=r.h,t.s=r.s,t.l=r.l,r=e.rgb2hsb(t),t.v=r.b):(t={hex:\"none\"}).r=t.g=t.b=t.h=t.s=t.v=t.l=-1),t.toString=st,t},e.hsb2rgb=function(t,e,r,i){var n,a,s,o,l;return this.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t&&(r=t.b,e=t.s,i=t.o,t=t.h),o=(l=r*e)*(1-B((t=(t*=360)%360/60)%2-1)),n=a=s=r-l,lt(n+=[l,o,0,0,o,l][t=~~t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],i)},e.hsl2rgb=function(t,e,r,i){var n,a,s,o,l;return this.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t&&(r=t.l,e=t.s,t=t.h),(t>1||e>1||r>1)&&(t/=360,e/=100,r/=100),o=(l=2*e*(r<.5?r:1-r))*(1-B((t=(t*=360)%360/60)%2-1)),n=a=s=r-l/2,lt(n+=[l,o,0,0,o,l][t=~~t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],i)},e.rgb2hsb=function(t,e,r){var i,n;return t=(r=ot(t,e,r))[0],e=r[1],r=r[2],{h:((0==(n=(i=w(t,e,r))-k(t,e,r))?null:i==t?(e-r)/n:i==e?(r-t)/n+2:(t-e)/n+4)+360)%6*60/360,s:0==n?0:n/i,b:i,toString:nt}},e.rgb2hsl=function(t,e,r){var i,n,a,s;return t=(r=ot(t,e,r))[0],e=r[1],r=r[2],i=((n=w(t,e,r))+(a=k(t,e,r)))/2,{h:((0==(s=n-a)?null:n==t?(e-r)/s:n==e?(r-t)/s+2:(t-e)/s+4)+360)%6*60/360,s:0==s?0:i<.5?s/(2*i):s/(2-2*i),l:i,toString:at}},e._path2string=function(){return this.join(\",\").replace(O,\"$1\")};e._preload=function(t,e){var r=l.doc.createElement(\"img\");r.style.cssText=\"position:absolute;left:-9999em;top:-9999em\",r.onload=function(){e.call(this),this.onload=null,l.doc.body.removeChild(this)},r.onerror=function(){l.doc.body.removeChild(this)},l.doc.body.appendChild(r),r.src=t};function ut(){return this.hex}function ct(t,e){for(var r=[],i=0,n=t.length;n-2*!e>i;i+=2){var a=[{x:+t[i-2],y:+t[i-1]},{x:+t[i],y:+t[i+1]},{x:+t[i+2],y:+t[i+3]},{x:+t[i+4],y:+t[i+5]}];e?i?n-4==i?a[3]={x:+t[0],y:+t[1]}:n-2==i&&(a[2]={x:+t[0],y:+t[1]},a[3]={x:+t[2],y:+t[3]}):a[0]={x:+t[n-2],y:+t[n-1]}:n-4==i?a[3]=a[2]:i||(a[0]={x:+t[i],y:+t[i+1]}),r.push([\"C\",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y])}return r}e.getRGB=ht(function(t){if(!t||(t=x(t)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ut};if(\"none\"==t)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ut};!q[o](t.toLowerCase().substring(0,2))&&\"#\"!=t.charAt()&&(t=it(t));var r,i,n,a,s,l,h=t.match(E);return h?(h[2]&&(n=F(h[2].substring(5),16),i=F(h[2].substring(3,5),16),r=F(h[2].substring(1,3),16)),h[3]&&(n=F((s=h[3].charAt(3))+s,16),i=F((s=h[3].charAt(2))+s,16),r=F((s=h[3].charAt(1))+s,16)),h[4]&&(l=h[4][v](D),r=z(l[0]),\"%\"==l[0].slice(-1)&&(r*=2.55),i=z(l[1]),\"%\"==l[1].slice(-1)&&(i*=2.55),n=z(l[2]),\"%\"==l[2].slice(-1)&&(n*=2.55),\"rgba\"==h[1].toLowerCase().slice(0,4)&&(a=z(l[3])),l[3]&&\"%\"==l[3].slice(-1)&&(a/=100)),h[5]?(l=h[5][v](D),r=z(l[0]),\"%\"==l[0].slice(-1)&&(r*=2.55),i=z(l[1]),\"%\"==l[1].slice(-1)&&(i*=2.55),n=z(l[2]),\"%\"==l[2].slice(-1)&&(n*=2.55),(\"deg\"==l[0].slice(-3)||\"°\"==l[0].slice(-1))&&(r/=360),\"hsba\"==h[1].toLowerCase().slice(0,4)&&(a=z(l[3])),l[3]&&\"%\"==l[3].slice(-1)&&(a/=100),e.hsb2rgb(r,i,n,a)):h[6]?(l=h[6][v](D),r=z(l[0]),\"%\"==l[0].slice(-1)&&(r*=2.55),i=z(l[1]),\"%\"==l[1].slice(-1)&&(i*=2.55),n=z(l[2]),\"%\"==l[2].slice(-1)&&(n*=2.55),(\"deg\"==l[0].slice(-3)||\"°\"==l[0].slice(-1))&&(r/=360),\"hsla\"==h[1].toLowerCase().slice(0,4)&&(a=z(l[3])),l[3]&&\"%\"==l[3].slice(-1)&&(a/=100),e.hsl2rgb(r,i,n,a)):((h={r:r,g:i,b:n,toString:ut}).hex=\"#\"+(16777216|n|i<<8|r<<16).toString(16).slice(1),e.is(a,\"finite\")&&(h.opacity=a),h)):{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ut}},e),e.hsb=ht(function(t,r,i){return e.hsb2rgb(t,r,i).hex}),e.hsl=ht(function(t,r,i){return e.hsl2rgb(t,r,i).hex}),e.rgb=ht(function(t,e,r){function i(t){return t+.5|0}return\"#\"+(16777216|i(r)|i(e)<<8|i(t)<<16).toString(16).slice(1)}),e.getColor=function(t){var e=this.getColor.start=this.getColor.start||{h:0,s:1,b:t||.75},r=this.hsb2rgb(e.h,e.s,e.b);return e.h+=.075,e.h>1&&(e.h=0,e.s-=.2,e.s<=0&&(this.getColor.start={h:0,s:1,b:e.b})),r.hex},e.getColor.reset=function(){delete this.start},e.parsePathString=function(t){if(!t)return null;var r=ft(t);if(r.arr)return mt(r.arr);var i={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},n=[];return e.is(t,A)&&e.is(t[0],A)&&(n=mt(t)),n.length||x(t).replace(V,function(t,e,r){var a=[],s=e.toLowerCase();if(r.replace(Y,function(t,e){e&&a.push(+e)}),\"m\"==s&&a.length>2&&(n.push([e][f](a.splice(0,2))),s=\"l\",e=\"m\"==e?\"l\":\"L\"),\"r\"==s)n.push([e][f](a));else for(;a.length>=i[s]&&(n.push([e][f](a.splice(0,i[s]))),i[s]););}),n.toString=e._path2string,r.arr=mt(n),n},e.parseTransformString=ht(function(t){if(!t)return null;var r=[];return e.is(t,A)&&e.is(t[0],A)&&(r=mt(t)),r.length||x(t).replace(W,function(t,e,i){var n=[];b.call(e);i.replace(Y,function(t,e){e&&n.push(+e)}),r.push([e][f](n))}),r.toString=e._path2string,r},this,function(t){if(!t)return t;for(var e=[],r=0;r<t.length;r++){for(var i=[],n=0;n<t[r].length;n++)i.push(t[r][n]);e.push(i)}return e});var ft=function(t){var e=ft.ps=ft.ps||{};return e[t]?e[t].sleep=100:e[t]={sleep:100},setTimeout(function(){for(var r in e)e[o](r)&&r!=t&&(e[r].sleep--,!e[r].sleep&&delete e[r])}),e[t]};function pt(t,e,r,i,n){return t*(t*(-3*e+9*r-9*i+3*n)+6*e-12*r+6*i)-3*e+3*r}function dt(t,e,r,i,n,a,s,o,l){null==l&&(l=1);for(var h=(l=l>1?1:l<0?0:l)/2,u=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],c=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],f=0,p=0;p<12;p++){var d=h*u[p]+h,g=pt(d,t,r,n,s),x=pt(d,e,i,a,o),v=g*g+x*x;f+=c[p]*_.sqrt(v)}return h*f}function gt(t,e,r,i,n,a,s,o){if(!(w(t,r)<k(n,s)||k(t,r)>w(n,s)||w(e,i)<k(a,o)||k(e,i)>w(a,o))){var l=(t-r)*(a-o)-(e-i)*(n-s);if(l){var h=((t*i-e*r)*(n-s)-(t-r)*(n*o-a*s))/l,u=((t*i-e*r)*(a-o)-(e-i)*(n*o-a*s))/l,c=+h.toFixed(2),f=+u.toFixed(2);if(!(c<+k(t,r).toFixed(2)||c>+w(t,r).toFixed(2)||c<+k(n,s).toFixed(2)||c>+w(n,s).toFixed(2)||f<+k(e,i).toFixed(2)||f>+w(e,i).toFixed(2)||f<+k(a,o).toFixed(2)||f>+w(a,o).toFixed(2)))return{x:h,y:u}}}}function xt(t,r,i){var n=e.bezierBBox(t),a=e.bezierBBox(r);if(!e.isBBoxIntersect(n,a))return i?0:[];for(var s=dt.apply(0,t),o=dt.apply(0,r),l=w(~~(s/5),1),h=w(~~(o/5),1),u=[],c=[],f={},p=i?0:[],d=0;d<l+1;d++){var g=e.findDotsAtSegment.apply(e,t.concat(d/l));u.push({x:g.x,y:g.y,t:d/l})}for(d=0;d<h+1;d++)g=e.findDotsAtSegment.apply(e,r.concat(d/h)),c.push({x:g.x,y:g.y,t:d/h});for(d=0;d<l;d++)for(var x=0;x<h;x++){var v=u[d],y=u[d+1],m=c[x],b=c[x+1],_=B(y.x-v.x)<.001?\"y\":\"x\",C=B(b.x-m.x)<.001?\"y\":\"x\",S=gt(v.x,v.y,y.x,y.y,m.x,m.y,b.x,b.y);if(S){if(f[S.x.toFixed(4)]==S.y.toFixed(4))continue;f[S.x.toFixed(4)]=S.y.toFixed(4);var T=v.t+B((S[_]-v[_])/(y[_]-v[_]))*(y.t-v.t),A=m.t+B((S[C]-m[C])/(b[C]-m[C]))*(b.t-m.t);T>=0&&T<=1.001&&A>=0&&A<=1.001&&(i?p++:p.push({x:S.x,y:S.y,t1:k(T,1),t2:k(A,1)}))}}return p}function vt(t,r,i){t=e._path2curve(t),r=e._path2curve(r);for(var n,a,s,o,l,h,u,c,f,p,d=i?0:[],g=0,x=t.length;g<x;g++){var v=t[g];if(\"M\"==v[0])n=l=v[1],a=h=v[2];else{\"C\"==v[0]?(f=[n,a].concat(v.slice(1)),n=f[6],a=f[7]):(f=[n,a,n,a,l,h,l,h],n=l,a=h);for(var y=0,m=r.length;y<m;y++){var b=r[y];if(\"M\"==b[0])s=u=b[1],o=c=b[2];else{\"C\"==b[0]?(p=[s,o].concat(b.slice(1)),s=p[6],o=p[7]):(p=[s,o,s,o,u,c,u,c],s=u,o=c);var _=xt(f,p,i);if(i)d+=_;else{for(var w=0,k=_.length;w<k;w++)_[w].segment1=g,_[w].segment2=y,_[w].bez1=f,_[w].bez2=p;d=d.concat(_)}}}}}return d}e.findDotsAtSegment=function(t,e,r,i,n,a,s,o,l){var h=1-l,u=C(h,3),c=C(h,2),f=l*l,p=f*l,d=u*t+3*c*l*r+3*h*l*l*n+p*s,g=u*e+3*c*l*i+3*h*l*l*a+p*o,x=t+2*l*(r-t)+f*(n-2*r+t),v=e+2*l*(i-e)+f*(a-2*i+e),y=r+2*l*(n-r)+f*(s-2*n+r),m=i+2*l*(a-i)+f*(o-2*a+i),b=h*t+l*r,w=h*e+l*i,k=h*n+l*s,B=h*a+l*o,T=90-180*_.atan2(x-y,v-m)/S;return(x>y||v<m)&&(T+=180),{x:d,y:g,m:{x:x,y:v},n:{x:y,y:m},start:{x:b,y:w},end:{x:k,y:B},alpha:T}},e.bezierBBox=function(t,r,i,n,a,s,o,l){e.is(t,\"array\")||(t=[t,r,i,n,a,s,o,l]);var h=St.apply(null,t);return{x:h.min.x,y:h.min.y,x2:h.max.x,y2:h.max.y,width:h.max.x-h.min.x,height:h.max.y-h.min.y}},e.isPointInsideBBox=function(t,e,r){return e>=t.x&&e<=t.x2&&r>=t.y&&r<=t.y2},e.isBBoxIntersect=function(t,r){var i=e.isPointInsideBBox;return i(r,t.x,t.y)||i(r,t.x2,t.y)||i(r,t.x,t.y2)||i(r,t.x2,t.y2)||i(t,r.x,r.y)||i(t,r.x2,r.y)||i(t,r.x,r.y2)||i(t,r.x2,r.y2)||(t.x<r.x2&&t.x>r.x||r.x<t.x2&&r.x>t.x)&&(t.y<r.y2&&t.y>r.y||r.y<t.y2&&r.y>t.y)},e.pathIntersection=function(t,e){return vt(t,e)},e.pathIntersectionNumber=function(t,e){return vt(t,e,1)},e.isPointInsidePath=function(t,r,i){var n=e.pathBBox(t);return e.isPointInsideBBox(n,r,i)&&vt(t,[[\"M\",r,i],[\"H\",n.x2+10]],1)%2==1},e._removedFactory=function(e){return function(){t(\"raphael.log\",null,\"Raphaël: you are calling to method “\"+e+\"” of removed object\",e)}};var yt=e.pathBBox=function(t){var e=ft(t);if(e.bbox)return tt(e.bbox);if(!t)return{x:0,y:0,width:0,height:0,x2:0,y2:0};for(var r,i=0,n=0,a=[],s=[],o=0,l=(t=Tt(t)).length;o<l;o++)if(\"M\"==(r=t[o])[0])i=r[1],n=r[2],a.push(i),s.push(n);else{var h=St(i,n,r[1],r[2],r[3],r[4],r[5],r[6]);a=a[f](h.min.x,h.max.x),s=s[f](h.min.y,h.max.y),i=r[5],n=r[6]}var u=k[c](0,a),p=k[c](0,s),d=w[c](0,a),g=w[c](0,s),x=d-u,v=g-p,y={x:u,y:p,x2:d,y2:g,width:x,height:v,cx:u+x/2,cy:p+v/2};return e.bbox=tt(y),y},mt=function(t){var r=tt(t);return r.toString=e._path2string,r},bt=e._pathToRelative=function(t){var r=ft(t);if(r.rel)return mt(r.rel);e.is(t,A)&&e.is(t&&t[0],A)||(t=e.parsePathString(t));var i=[],n=0,a=0,s=0,o=0,l=0;\"M\"==t[0][0]&&(s=n=t[0][1],o=a=t[0][2],l++,i.push([\"M\",n,a]));for(var h=l,u=t.length;h<u;h++){var c=i[h]=[],f=t[h];if(f[0]!=b.call(f[0]))switch(c[0]=b.call(f[0]),c[0]){case\"a\":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]-n).toFixed(3),c[7]=+(f[7]-a).toFixed(3);break;case\"v\":c[1]=+(f[1]-a).toFixed(3);break;case\"m\":s=f[1],o=f[2];default:for(var p=1,d=f.length;p<d;p++)c[p]=+(f[p]-(p%2?n:a)).toFixed(3)}else{c=i[h]=[],\"m\"==f[0]&&(s=f[1]+n,o=f[2]+a);for(var g=0,x=f.length;g<x;g++)i[h][g]=f[g]}var v=i[h].length;switch(i[h][0]){case\"z\":n=s,a=o;break;case\"h\":n+=+i[h][v-1];break;case\"v\":a+=+i[h][v-1];break;default:n+=+i[h][v-2],a+=+i[h][v-1]}}return i.toString=e._path2string,r.rel=mt(i),i},_t=e._pathToAbsolute=function(t){var r=ft(t);if(r.abs)return mt(r.abs);if(e.is(t,A)&&e.is(t&&t[0],A)||(t=e.parsePathString(t)),!t||!t.length)return[[\"M\",0,0]];var i=[],n=0,a=0,s=0,o=0,l=0;\"M\"==t[0][0]&&(s=n=+t[0][1],o=a=+t[0][2],l++,i[0]=[\"M\",n,a]);for(var h,u,c=3==t.length&&\"M\"==t[0][0]&&\"R\"==t[1][0].toUpperCase()&&\"Z\"==t[2][0].toUpperCase(),p=l,d=t.length;p<d;p++){if(i.push(h=[]),(u=t[p])[0]!=R.call(u[0]))switch(h[0]=R.call(u[0]),h[0]){case\"A\":h[1]=u[1],h[2]=u[2],h[3]=u[3],h[4]=u[4],h[5]=u[5],h[6]=+(u[6]+n),h[7]=+(u[7]+a);break;case\"V\":h[1]=+u[1]+a;break;case\"H\":h[1]=+u[1]+n;break;case\"R\":for(var g=[n,a][f](u.slice(1)),x=2,v=g.length;x<v;x++)g[x]=+g[x]+n,g[++x]=+g[x]+a;i.pop(),i=i[f](ct(g,c));break;case\"M\":s=+u[1]+n,o=+u[2]+a;default:for(x=1,v=u.length;x<v;x++)h[x]=+u[x]+(x%2?n:a)}else if(\"R\"==u[0])g=[n,a][f](u.slice(1)),i.pop(),i=i[f](ct(g,c)),h=[\"R\"][f](u.slice(-2));else for(var y=0,m=u.length;y<m;y++)h[y]=u[y];switch(h[0]){case\"Z\":n=s,a=o;break;case\"H\":n=h[1];break;case\"V\":a=h[1];break;case\"M\":s=h[h.length-2],o=h[h.length-1];default:n=h[h.length-2],a=h[h.length-1]}}return i.toString=e._path2string,r.abs=mt(i),i},wt=function(t,e,r,i){return[t,e,r,i,r,i]},kt=function(t,e,r,i,n,a){return[1/3*t+2/3*r,1/3*e+2/3*i,1/3*n+2/3*r,1/3*a+2/3*i,n,a]},Bt=function(t,e,r,i,n,a,s,o,l,h){var u,c=120*S/180,p=S/180*(+n||0),d=[],g=ht(function(t,e,r){return{x:t*_.cos(r)-e*_.sin(r),y:t*_.sin(r)+e*_.cos(r)}});if(h)A=h[0],M=h[1],C=h[2],T=h[3];else{t=(u=g(t,e,-p)).x,e=u.y,o=(u=g(o,l,-p)).x,l=u.y;_.cos(S/180*n),_.sin(S/180*n);var x=(t-o)/2,y=(e-l)/2,m=x*x/(r*r)+y*y/(i*i);m>1&&(r*=m=_.sqrt(m),i*=m);var b=r*r,w=i*i,k=(a==s?-1:1)*_.sqrt(B((b*w-b*y*y-w*x*x)/(b*y*y+w*x*x))),C=k*r*y/i+(t+o)/2,T=k*-i*x/r+(e+l)/2,A=_.asin(((e-T)/i).toFixed(9)),M=_.asin(((l-T)/i).toFixed(9));(A=t<C?S-A:A)<0&&(A=2*S+A),(M=o<C?S-M:M)<0&&(M=2*S+M),s&&A>M&&(A-=2*S),!s&&M>A&&(M-=2*S)}var E=M-A;if(B(E)>c){var N=M,L=o,P=l;M=A+c*(s&&M>A?1:-1),o=C+r*_.cos(M),l=T+i*_.sin(M),d=Bt(o,l,r,i,n,0,s,L,P,[M,N,C,T])}E=M-A;var z=_.cos(A),F=_.sin(A),R=_.cos(M),j=_.sin(M),I=_.tan(E/4),D=4/3*r*I,q=4/3*i*I,O=[t,e],V=[t+D*F,e-q*z],W=[o+D*j,l-q*R],Y=[o,l];if(V[0]=2*O[0]-V[0],V[1]=2*O[1]-V[1],h)return[V,W,Y][f](d);for(var G=[],H=0,X=(d=[V,W,Y][f](d).join()[v](\",\")).length;H<X;H++)G[H]=H%2?g(d[H-1],d[H],p).y:g(d[H],d[H+1],p).x;return G},Ct=function(t,e,r,i,n,a,s,o,l){var h=1-l;return{x:C(h,3)*t+3*C(h,2)*l*r+3*h*l*l*n+C(l,3)*s,y:C(h,3)*e+3*C(h,2)*l*i+3*h*l*l*a+C(l,3)*o}},St=ht(function(t,e,r,i,n,a,s,o){var l,h=n-2*r+t-(s-2*n+r),u=2*(r-t)-2*(n-r),f=t-r,p=(-u+_.sqrt(u*u-4*h*f))/2/h,d=(-u-_.sqrt(u*u-4*h*f))/2/h,g=[e,o],x=[t,s];return B(p)>\"1e12\"&&(p=.5),B(d)>\"1e12\"&&(d=.5),p>0&&p<1&&(l=Ct(t,e,r,i,n,a,s,o,p),x.push(l.x),g.push(l.y)),d>0&&d<1&&(l=Ct(t,e,r,i,n,a,s,o,d),x.push(l.x),g.push(l.y)),h=a-2*i+e-(o-2*a+i),f=e-i,p=(-(u=2*(i-e)-2*(a-i))+_.sqrt(u*u-4*h*f))/2/h,d=(-u-_.sqrt(u*u-4*h*f))/2/h,B(p)>\"1e12\"&&(p=.5),B(d)>\"1e12\"&&(d=.5),p>0&&p<1&&(l=Ct(t,e,r,i,n,a,s,o,p),x.push(l.x),g.push(l.y)),d>0&&d<1&&(l=Ct(t,e,r,i,n,a,s,o,d),x.push(l.x),g.push(l.y)),{min:{x:k[c](0,x),y:k[c](0,g)},max:{x:w[c](0,x),y:w[c](0,g)}}}),Tt=e._path2curve=ht(function(t,e){var r=!e&&ft(t);if(!e&&r.curve)return mt(r.curve);for(var i=_t(t),n=e&&_t(e),a={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},s={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},o=function(t,e,r){var i,n;if(!t)return[\"C\",e.x,e.y,e.x,e.y,e.x,e.y];switch(!(t[0]in{T:1,Q:1})&&(e.qx=e.qy=null),t[0]){case\"M\":e.X=t[1],e.Y=t[2];break;case\"A\":t=[\"C\"][f](Bt[c](0,[e.x,e.y][f](t.slice(1))));break;case\"S\":\"C\"==r||\"S\"==r?(i=2*e.x-e.bx,n=2*e.y-e.by):(i=e.x,n=e.y),t=[\"C\",i,n][f](t.slice(1));break;case\"T\":\"Q\"==r||\"T\"==r?(e.qx=2*e.x-e.qx,e.qy=2*e.y-e.qy):(e.qx=e.x,e.qy=e.y),t=[\"C\"][f](kt(e.x,e.y,e.qx,e.qy,t[1],t[2]));break;case\"Q\":e.qx=t[1],e.qy=t[2],t=[\"C\"][f](kt(e.x,e.y,t[1],t[2],t[3],t[4]));break;case\"L\":t=[\"C\"][f](wt(e.x,e.y,t[1],t[2]));break;case\"H\":t=[\"C\"][f](wt(e.x,e.y,t[1],e.y));break;case\"V\":t=[\"C\"][f](wt(e.x,e.y,e.x,t[1]));break;case\"Z\":t=[\"C\"][f](wt(e.x,e.y,e.X,e.Y))}return t},l=function(t,e){if(t[e].length>7){t[e].shift();for(var r=t[e];r.length;)u[e]=\"A\",n&&(p[e]=\"A\"),t.splice(e++,0,[\"C\"][f](r.splice(0,6)));t.splice(e,1),v=w(i.length,n&&n.length||0)}},h=function(t,e,r,a,s){t&&e&&\"M\"==t[s][0]&&\"M\"!=e[s][0]&&(e.splice(s,0,[\"M\",a.x,a.y]),r.bx=0,r.by=0,r.x=t[s][1],r.y=t[s][2],v=w(i.length,n&&n.length||0))},u=[],p=[],d=\"\",g=\"\",x=0,v=w(i.length,n&&n.length||0);x<v;x++){i[x]&&(d=i[x][0]),\"C\"!=d&&(u[x]=d,x&&(g=u[x-1])),i[x]=o(i[x],a,g),\"A\"!=u[x]&&\"C\"==d&&(u[x]=\"C\"),l(i,x),n&&(n[x]&&(d=n[x][0]),\"C\"!=d&&(p[x]=d,x&&(g=p[x-1])),n[x]=o(n[x],s,g),\"A\"!=p[x]&&\"C\"==d&&(p[x]=\"C\"),l(n,x)),h(i,n,a,s,x),h(n,i,s,a,x);var y=i[x],m=n&&n[x],b=y.length,_=n&&m.length;a.x=y[b-2],a.y=y[b-1],a.bx=z(y[b-4])||a.x,a.by=z(y[b-3])||a.y,s.bx=n&&(z(m[_-4])||s.x),s.by=n&&(z(m[_-3])||s.y),s.x=n&&m[_-2],s.y=n&&m[_-1]}return n||(r.curve=mt(i)),n?[i,n]:i},null,mt),At=(e._parseDots=ht(function(t){for(var r=[],i=0,n=t.length;i<n;i++){var a={},s=t[i].match(/^([^:]*):?([\\d\\.]*)/);if(a.color=e.getRGB(s[1]),a.color.error)return null;a.opacity=a.color.opacity,a.color=a.color.hex,s[2]&&(a.offset=s[2]+\"%\"),r.push(a)}for(i=1,n=r.length-1;i<n;i++)if(!r[i].offset){for(var o=z(r[i-1].offset||0),l=0,h=i+1;h<n;h++)if(r[h].offset){l=r[h].offset;break}l||(l=100,h=n);for(var u=((l=z(l))-o)/(h-i+1);i<h;i++)o+=u,r[i].offset=o+\"%\"}return r}),e._tear=function(t,e){t==e.top&&(e.top=t.prev),t==e.bottom&&(e.bottom=t.next),t.next&&(t.next.prev=t.prev),t.prev&&(t.prev.next=t.next)}),Mt=(e._tofront=function(t,e){e.top!==t&&(At(t,e),t.next=null,t.prev=e.top,e.top.next=t,e.top=t)},e._toback=function(t,e){e.bottom!==t&&(At(t,e),t.next=e.bottom,t.prev=null,e.bottom.prev=t,e.bottom=t)},e._insertafter=function(t,e,r){At(t,r),e==r.top&&(r.top=t),e.next&&(e.next.prev=t),t.next=e.next,t.prev=e,e.next=t},e._insertbefore=function(t,e,r){At(t,r),e==r.bottom&&(r.bottom=t),e.prev&&(e.prev.next=t),t.prev=e.prev,e.prev=t,t.next=e},e.toMatrix=function(t,e){var r=yt(t),i={_:{transform:d},getBBox:function(){return r}};return Et(i,e),i.matrix}),Et=(e.transformPath=function(t,e){return Q(t,Mt(t,e))},e._extractTransform=function(t,r){if(null==r)return t._.transform;r=x(r).replace(/\\.{3}|\\u2026/g,t._.transform||d);var i,n,a=e.parseTransformString(r),s=0,o=1,l=1,h=t._,u=new Pt;if(h.transform=a||[],a)for(var c=0,f=a.length;c<f;c++){var p,g,v,y,m,b=a[c],_=b.length,w=x(b[0]).toLowerCase(),k=b[0]!=w,B=k?u.invert():0;\"t\"==w&&3==_?k?(p=B.x(0,0),g=B.y(0,0),v=B.x(b[1],b[2]),y=B.y(b[1],b[2]),u.translate(v-p,y-g)):u.translate(b[1],b[2]):\"r\"==w?2==_?(m=m||t.getBBox(1),u.rotate(b[1],m.x+m.width/2,m.y+m.height/2),s+=b[1]):4==_&&(k?(v=B.x(b[2],b[3]),y=B.y(b[2],b[3]),u.rotate(b[1],v,y)):u.rotate(b[1],b[2],b[3]),s+=b[1]):\"s\"==w?2==_||3==_?(m=m||t.getBBox(1),u.scale(b[1],b[_-1],m.x+m.width/2,m.y+m.height/2),o*=b[1],l*=b[_-1]):5==_&&(k?(v=B.x(b[3],b[4]),y=B.y(b[3],b[4]),u.scale(b[1],b[2],v,y)):u.scale(b[1],b[2],b[3],b[4]),o*=b[1],l*=b[2]):\"m\"==w&&7==_&&u.add(b[1],b[2],b[3],b[4],b[5],b[6]),h.dirtyT=1,t.matrix=u}t.matrix=u,h.sx=o,h.sy=l,h.deg=s,h.dx=i=u.e,h.dy=n=u.f,1==o&&1==l&&!s&&h.bbox?(h.bbox.x+=+i,h.bbox.y+=+n):h.dirtyT=1}),Nt=function(t){var e=t[0];switch(e.toLowerCase()){case\"t\":return[e,0,0];case\"m\":return[e,1,0,0,1,0,0];case\"r\":return 4==t.length?[e,0,t[2],t[3]]:[e,0];case\"s\":return 5==t.length?[e,1,1,t[3],t[4]]:3==t.length?[e,1,1]:[e,1]}},Lt=e._equaliseTransform=function(t,r){r=x(r).replace(/\\.{3}|\\u2026/g,t),t=e.parseTransformString(t)||[],r=e.parseTransformString(r)||[];for(var i,n,a,s,o=w(t.length,r.length),l=[],h=[],u=0;u<o;u++){if(a=t[u]||Nt(r[u]),s=r[u]||Nt(a),a[0]!=s[0]||\"r\"==a[0].toLowerCase()&&(a[2]!=s[2]||a[3]!=s[3])||\"s\"==a[0].toLowerCase()&&(a[3]!=s[3]||a[4]!=s[4]))return;for(l[u]=[],h[u]=[],i=0,n=w(a.length,s.length);i<n;i++)i in a&&(l[u][i]=a[i]),i in s&&(h[u][i]=s[i])}return{from:l,to:h}};function Pt(t,e,r,i,n,a){null!=t?(this.a=+t,this.b=+e,this.c=+r,this.d=+i,this.e=+n,this.f=+a):(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0)}e._getContainer=function(t,r,i,n){var a;if(null!=(a=null!=n||e.is(t,\"object\")?t:l.doc.getElementById(t)))return a.tagName?null==r?{container:a,width:a.style.pixelWidth||a.offsetWidth,height:a.style.pixelHeight||a.offsetHeight}:{container:a,width:r,height:i}:{container:1,x:t,y:r,width:i,height:n}},e.pathToRelative=bt,e._engine={},e.path2curve=Tt,e.matrix=function(t,e,r,i,n,a){return new Pt(t,e,r,i,n,a)},function(t){function r(t){return t[0]*t[0]+t[1]*t[1]}function i(t){var e=_.sqrt(r(t));t[0]&&(t[0]/=e),t[1]&&(t[1]/=e)}t.add=function(t,e,r,i,n,a){var s,o,l,h,u=[[],[],[]],c=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]],f=[[t,r,n],[e,i,a],[0,0,1]];for(t&&t instanceof Pt&&(f=[[t.a,t.c,t.e],[t.b,t.d,t.f],[0,0,1]]),s=0;s<3;s++)for(o=0;o<3;o++){for(h=0,l=0;l<3;l++)h+=c[s][l]*f[l][o];u[s][o]=h}this.a=u[0][0],this.b=u[1][0],this.c=u[0][1],this.d=u[1][1],this.e=u[0][2],this.f=u[1][2]},t.invert=function(){var t=this,e=t.a*t.d-t.b*t.c;return new Pt(t.d/e,-t.b/e,-t.c/e,t.a/e,(t.c*t.f-t.d*t.e)/e,(t.b*t.e-t.a*t.f)/e)},t.clone=function(){return new Pt(this.a,this.b,this.c,this.d,this.e,this.f)},t.translate=function(t,e){this.add(1,0,0,1,t,e)},t.scale=function(t,e,r,i){null==e&&(e=t),(r||i)&&this.add(1,0,0,1,r,i),this.add(t,0,0,e,0,0),(r||i)&&this.add(1,0,0,1,-r,-i)},t.rotate=function(t,r,i){t=e.rad(t),r=r||0,i=i||0;var n=+_.cos(t).toFixed(9),a=+_.sin(t).toFixed(9);this.add(n,a,-a,n,r,i),this.add(1,0,0,1,-r,-i)},t.x=function(t,e){return t*this.a+e*this.c+this.e},t.y=function(t,e){return t*this.b+e*this.d+this.f},t.get=function(t){return+this[x.fromCharCode(97+t)].toFixed(4)},t.toString=function(){return e.svg?\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()},t.toFilter=function(){return\"progid:DXImageTransform.Microsoft.Matrix(M11=\"+this.get(0)+\", M12=\"+this.get(2)+\", M21=\"+this.get(1)+\", M22=\"+this.get(3)+\", Dx=\"+this.get(4)+\", Dy=\"+this.get(5)+\", sizingmethod='auto expand')\"},t.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]},t.split=function(){var t={};t.dx=this.e,t.dy=this.f;var n=[[this.a,this.c],[this.b,this.d]];t.scalex=_.sqrt(r(n[0])),i(n[0]),t.shear=n[0][0]*n[1][0]+n[0][1]*n[1][1],n[1]=[n[1][0]-n[0][0]*t.shear,n[1][1]-n[0][1]*t.shear],t.scaley=_.sqrt(r(n[1])),i(n[1]),t.shear/=t.scaley;var a=-n[0][1],s=n[1][1];return s<0?(t.rotate=e.deg(_.acos(s)),a<0&&(t.rotate=360-t.rotate)):t.rotate=e.deg(_.asin(a)),t.isSimple=!(+t.shear.toFixed(9)||t.scalex.toFixed(9)!=t.scaley.toFixed(9)&&t.rotate),t.isSuperSimple=!+t.shear.toFixed(9)&&t.scalex.toFixed(9)==t.scaley.toFixed(9)&&!t.rotate,t.noRotation=!+t.shear.toFixed(9)&&!t.rotate,t},t.toTransformString=function(t){var e=t||this[v]();return e.isSimple?(e.scalex=+e.scalex.toFixed(4),e.scaley=+e.scaley.toFixed(4),e.rotate=+e.rotate.toFixed(4),(e.dx||e.dy?\"t\"+[e.dx,e.dy]:d)+(1!=e.scalex||1!=e.scaley?\"s\"+[e.scalex,e.scaley,0,0]:d)+(e.rotate?\"r\"+[e.rotate,0,0]:d)):\"m\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}}(Pt.prototype);for(var zt=function(){this.returnValue=!1},Ft=function(){return this.originalEvent.preventDefault()},Rt=function(){this.cancelBubble=!0},jt=function(){return this.originalEvent.stopPropagation()},It=function(t){var e=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,r=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft;return{x:t.clientX+r,y:t.clientY+e}},Dt=l.doc.addEventListener?function(t,e,r,i){var n=function(t){var e=It(t);return r.call(i,t,e.x,e.y)};if(t.addEventListener(e,n,!1),p&&m[e]){var a=function(e){for(var n=It(e),a=e,s=0,o=e.targetTouches&&e.targetTouches.length;s<o;s++)if(e.targetTouches[s].target==t){(e=e.targetTouches[s]).originalEvent=a,e.preventDefault=Ft,e.stopPropagation=jt;break}return r.call(i,e,n.x,n.y)};t.addEventListener(m[e],a,!1)}return function(){return t.removeEventListener(e,n,!1),p&&m[e]&&t.removeEventListener(m[e],a,!1),!0}}:l.doc.attachEvent?function(t,e,r,i){var n=function(t){t=t||l.win.event;var e=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,n=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft,a=t.clientX+n,s=t.clientY+e;return t.preventDefault=t.preventDefault||zt,t.stopPropagation=t.stopPropagation||Rt,r.call(i,t,a,s)};return t.attachEvent(\"on\"+e,n),function(){return t.detachEvent(\"on\"+e,n),!0}}:void 0,qt=[],Ot=function(e){for(var r,i=e.clientX,n=e.clientY,a=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,s=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft,o=qt.length;o--;){if(r=qt[o],p&&e.touches){for(var h,u=e.touches.length;u--;)if((h=e.touches[u]).identifier==r.el._drag.id){i=h.clientX,n=h.clientY,(e.originalEvent?e.originalEvent:e).preventDefault();break}}else e.preventDefault();var c,f=r.el.node,d=f.nextSibling,g=f.parentNode,x=f.style.display;l.win.opera&&g.removeChild(f),f.style.display=\"none\",c=r.el.paper.getElementByPoint(i,n),f.style.display=x,l.win.opera&&(d?g.insertBefore(f,d):g.appendChild(f)),c&&t(\"raphael.drag.over.\"+r.el.id,r.el,c),i+=s,n+=a,t(\"raphael.drag.move.\"+r.el.id,r.move_scope||r.el,i-r.el._drag.x,n-r.el._drag.y,i,n,e)}},Vt=function(r){e.unmousemove(Ot).unmouseup(Vt);for(var i,n=qt.length;n--;)(i=qt[n]).el._drag={},t(\"raphael.drag.end.\"+i.el.id,i.end_scope||i.start_scope||i.move_scope||i.el,r);qt=[]},Wt=e.el={},Yt=y.length;Yt--;)!function(t){e[t]=Wt[t]=function(r,i){return e.is(r,\"function\")&&(this.events=this.events||[],this.events.push({name:t,f:r,unbind:Dt(this.shape||this.node||l.doc,t,r,i||this)})),this},e[\"un\"+t]=Wt[\"un\"+t]=function(r){for(var i=this.events||[],n=i.length;n--;)i[n].name!=t||!e.is(r,\"undefined\")&&i[n].f!=r||(i[n].unbind(),i.splice(n,1),!i.length&&delete this.events);return this}}(y[Yt]);Wt.data=function(r,i){var n=G[this.id]=G[this.id]||{};if(0==arguments.length)return n;if(1==arguments.length){if(e.is(r,\"object\")){for(var a in r)r[o](a)&&this.data(a,r[a]);return this}return t(\"raphael.data.get.\"+this.id,this,n[r],r),n[r]}return n[r]=i,t(\"raphael.data.set.\"+this.id,this,i,r),this},Wt.removeData=function(t){return null==t?delete G[this.id]:G[this.id]&&delete G[this.id][t],this},Wt.getData=function(){return tt(G[this.id]||{})},Wt.hover=function(t,e,r,i){return this.mouseover(t,r).mouseout(e,i||r)},Wt.unhover=function(t,e){return this.unmouseover(t).unmouseout(e)};var Gt=[];Wt.drag=function(r,i,n,a,s,o){function h(h){(h.originalEvent||h).preventDefault();var u=h.clientX,c=h.clientY,f=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,d=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft;if(this._drag.id=h.identifier,p&&h.touches)for(var g,x=h.touches.length;x--;)if(g=h.touches[x],this._drag.id=g.identifier,g.identifier==this._drag.id){u=g.clientX,c=g.clientY;break}this._drag.x=u+d,this._drag.y=c+f,!qt.length&&e.mousemove(Ot).mouseup(Vt),qt.push({el:this,move_scope:a,start_scope:s,end_scope:o}),i&&t.on(\"raphael.drag.start.\"+this.id,i),r&&t.on(\"raphael.drag.move.\"+this.id,r),n&&t.on(\"raphael.drag.end.\"+this.id,n),t(\"raphael.drag.start.\"+this.id,s||a||this,this._drag.x,this._drag.y,h)}return this._drag={},Gt.push({el:this,start:h}),this.mousedown(h),this},Wt.onDragOver=function(e){e?t.on(\"raphael.drag.over.\"+this.id,e):t.unbind(\"raphael.drag.over.\"+this.id)},Wt.undrag=function(){for(var r=Gt.length;r--;)Gt[r].el==this&&(this.unmousedown(Gt[r].start),Gt.splice(r,1),t.unbind(\"raphael.drag.*.\"+this.id));!Gt.length&&e.unmousemove(Ot).unmouseup(Vt),qt=[]},i.circle=function(t,r,i){var n=e._engine.circle(this,t||0,r||0,i||0);return this.__set__&&this.__set__.push(n),n},i.rect=function(t,r,i,n,a){var s=e._engine.rect(this,t||0,r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},i.ellipse=function(t,r,i,n){var a=e._engine.ellipse(this,t||0,r||0,i||0,n||0);return this.__set__&&this.__set__.push(a),a},i.path=function(t){t&&!e.is(t,\"string\")&&!e.is(t[0],A)&&(t+=d);var r=e._engine.path(e.format[c](e,arguments),this);return this.__set__&&this.__set__.push(r),r},i.image=function(t,r,i,n,a){var s=e._engine.image(this,t||\"about:blank\",r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},i.text=function(t,r,i){var n=e._engine.text(this,t||0,r||0,x(i));return this.__set__&&this.__set__.push(n),n},i.set=function(t){!e.is(t,\"array\")&&(t=Array.prototype.splice.call(arguments,0,arguments.length));var r=new ce(t);return this.__set__&&this.__set__.push(r),r.paper=this,r.type=\"set\",r},i.setStart=function(t){this.__set__=t||this.set()},i.setFinish=function(t){var e=this.__set__;return delete this.__set__,e},i.getSize=function(){var t=this.canvas.parentNode;return{width:t.offsetWidth,height:t.offsetHeight}},i.setSize=function(t,r){return e._engine.setSize.call(this,t,r)},i.setViewBox=function(t,r,i,n,a){return e._engine.setViewBox.call(this,t,r,i,n,a)},i.top=i.bottom=null,i.raphael=e;function Ht(){return this.x+g+this.y+g+this.width+\" × \"+this.height}i.getElementByPoint=function(t,e){var r,i,n,a,s,o,h,u=this.canvas,c=l.doc.elementFromPoint(t,e);if(l.win.opera&&\"svg\"==c.tagName){var f=(i=(r=u).getBoundingClientRect(),n=r.ownerDocument,a=n.body,s=n.documentElement,o=s.clientTop||a.clientTop||0,h=s.clientLeft||a.clientLeft||0,{y:i.top+(l.win.pageYOffset||s.scrollTop||a.scrollTop)-o,x:i.left+(l.win.pageXOffset||s.scrollLeft||a.scrollLeft)-h}),p=u.createSVGRect();p.x=t-f.x,p.y=e-f.y,p.width=p.height=1;var d=u.getIntersectionList(p,null);d.length&&(c=d[d.length-1])}if(!c)return null;for(;c.parentNode&&c!=u.parentNode&&!c.raphael;)c=c.parentNode;return c==this.canvas.parentNode&&(c=u),c=c&&c.raphael?this.getById(c.raphaelid):null},i.getElementsByBBox=function(t){var r=this.set();return this.forEach(function(i){e.isBBoxIntersect(i.getBBox(),t)&&r.push(i)}),r},i.getById=function(t){for(var e=this.bottom;e;){if(e.id==t)return e;e=e.next}return null},i.forEach=function(t,e){for(var r=this.bottom;r;){if(!1===t.call(e,r))return this;r=r.next}return this},i.getElementsByPoint=function(t,e){var r=this.set();return this.forEach(function(i){i.isPointInside(t,e)&&r.push(i)}),r},Wt.isPointInside=function(t,r){var i=this.realPath=Z[this.type](this);return this.attr(\"transform\")&&this.attr(\"transform\").length&&(i=e.transformPath(i,this.attr(\"transform\"))),e.isPointInsidePath(i,t,r)},Wt.getBBox=function(t){if(this.removed)return{};var e=this._;return t?(!e.dirty&&e.bboxwt||(this.realPath=Z[this.type](this),e.bboxwt=yt(this.realPath),e.bboxwt.toString=Ht,e.dirty=0),e.bboxwt):((e.dirty||e.dirtyT||!e.bbox)&&(!e.dirty&&this.realPath||(e.bboxwt=0,this.realPath=Z[this.type](this)),e.bbox=yt(Q(this.realPath,this.matrix)),e.bbox.toString=Ht,e.dirty=e.dirtyT=0),e.bbox)},Wt.clone=function(){if(this.removed)return null;var t=this.paper[this.type]().attr(this.attr());return this.__set__&&this.__set__.push(t),t},Wt.glow=function(t){if(\"text\"==this.type)return null;var e={width:((t=t||{}).width||10)+(+this.attr(\"stroke-width\")||1),fill:t.fill||!1,opacity:null==t.opacity?.5:t.opacity,offsetx:t.offsetx||0,offsety:t.offsety||0,color:t.color||\"#000\"},r=e.width/2,i=this.paper,n=i.set(),a=this.realPath||Z[this.type](this);a=this.matrix?Q(a,this.matrix):a;for(var s=1;s<r+1;s++)n.push(i.path(a).attr({stroke:e.color,fill:e.fill?e.color:\"none\",\"stroke-linejoin\":\"round\",\"stroke-linecap\":\"round\",\"stroke-width\":+(e.width/r*s).toFixed(3),opacity:+(e.opacity/r).toFixed(3)}));return n.insertBefore(this).translate(e.offsetx,e.offsety)};var Xt=function(t,r,i,n,a,s,o,l,h){return null==h?dt(t,r,i,n,a,s,o,l):e.findDotsAtSegment(t,r,i,n,a,s,o,l,function(t,e,r,i,n,a,s,o,l){if(!(l<0||dt(t,e,r,i,n,a,s,o)<l)){var h,u=.5,c=1-u;for(h=dt(t,e,r,i,n,a,s,o,c);B(h-l)>.01;)h=dt(t,e,r,i,n,a,s,o,c+=(h<l?1:-1)*(u/=2));return c}}(t,r,i,n,a,s,o,l,h))},Ut=function(t,r){return function(i,n,a){for(var s,o,l,h,u,c=\"\",f={},p=0,d=0,g=(i=Tt(i)).length;d<g;d++){if(\"M\"==(l=i[d])[0])s=+l[1],o=+l[2];else{if(p+(h=Xt(s,o,l[1],l[2],l[3],l[4],l[5],l[6]))>n){if(r&&!f.start){if(c+=[\"C\"+(u=Xt(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p)).start.x,u.start.y,u.m.x,u.m.y,u.x,u.y],a)return c;f.start=c,c=[\"M\"+u.x,u.y+\"C\"+u.n.x,u.n.y,u.end.x,u.end.y,l[5],l[6]].join(),p+=h,s=+l[5],o=+l[6];continue}if(!t&&!r)return{x:(u=Xt(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p)).x,y:u.y,alpha:u.alpha}}p+=h,s=+l[5],o=+l[6]}c+=l.shift()+l}return f.end=c,(u=t?p:r?f:e.findDotsAtSegment(s,o,l[0],l[1],l[2],l[3],l[4],l[5],1)).alpha&&(u={x:u.x,y:u.y,alpha:u.alpha}),u}},$t=Ut(1),Zt=Ut(),Qt=Ut(0,1);e.getTotalLength=$t,e.getPointAtLength=Zt,e.getSubpath=function(t,e,r){if(this.getTotalLength(t)-r<1e-6)return Qt(t,e).end;var i=Qt(t,r,1);return e?Qt(i,e).end:i},Wt.getTotalLength=function(){var t=this.getPath();if(t)return this.node.getTotalLength?this.node.getTotalLength():$t(t)},Wt.getPointAtLength=function(t){var e=this.getPath();if(e)return Zt(e,t)},Wt.getPath=function(){var t,r=e._getPath[this.type];if(\"text\"!=this.type&&\"set\"!=this.type)return r&&(t=r(this)),t},Wt.getSubpath=function(t,r){var i=this.getPath();if(i)return e.getSubpath(i,t,r)};var Jt=e.easing_formulas={linear:function(t){return t},\"<\":function(t){return C(t,1.7)},\">\":function(t){return C(t,.48)},\"<>\":function(t){var e=.48-t/1.04,r=_.sqrt(.1734+e*e),i=r-e,n=-r-e,a=C(B(i),1/3)*(i<0?-1:1)+C(B(n),1/3)*(n<0?-1:1)+.5;return 3*(1-a)*a*a+a*a*a},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){var e=1.70158;return(t-=1)*t*((e+1)*t+e)+1},elastic:function(t){return t==!!t?t:C(2,-10*t)*_.sin(2*S*(t-.075)/.3)+1},bounce:function(t){var e=7.5625,r=2.75;return t<1/r?e*t*t:t<2/r?e*(t-=1.5/r)*t+.75:t<2.5/r?e*(t-=2.25/r)*t+.9375:e*(t-=2.625/r)*t+.984375}};Jt.easeIn=Jt[\"ease-in\"]=Jt[\"<\"],Jt.easeOut=Jt[\"ease-out\"]=Jt[\">\"],Jt.easeInOut=Jt[\"ease-in-out\"]=Jt[\"<>\"],Jt[\"back-in\"]=Jt.backIn,Jt[\"back-out\"]=Jt.backOut;var Kt=[],te=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){setTimeout(t,16)},ee=function(){for(var r=+new Date,i=0;i<Kt.length;i++){var n=Kt[i];if(!n.el.removed&&!n.paused){var a,s,l=r-n.start,h=n.ms,u=n.easing,c=n.from,p=n.diff,d=n.to,x=(n.t,n.el),v={},y={};if(n.initstatus?(l=(n.initstatus*n.anim.top-n.prev)/(n.percent-n.prev)*h,n.status=n.initstatus,delete n.initstatus,n.stop&&Kt.splice(i--,1)):n.status=(n.prev+(n.percent-n.prev)*(l/h))/n.anim.top,!(l<0))if(l<h){var m=u(l/h);for(var b in c)if(c[o](b)){switch(I[b]){case T:a=+c[b]+m*h*p[b];break;case\"colour\":a=\"rgb(\"+[re(P(c[b].r+m*h*p[b].r)),re(P(c[b].g+m*h*p[b].g)),re(P(c[b].b+m*h*p[b].b))].join(\",\")+\")\";break;case\"path\":a=[];for(var _=0,w=c[b].length;_<w;_++){a[_]=[c[b][_][0]];for(var k=1,B=c[b][_].length;k<B;k++)a[_][k]=+c[b][_][k]+m*h*p[b][_][k];a[_]=a[_].join(g)}a=a.join(g);break;case\"transform\":if(p[b].real)for(a=[],_=0,w=c[b].length;_<w;_++)for(a[_]=[c[b][_][0]],k=1,B=c[b][_].length;k<B;k++)a[_][k]=c[b][_][k]+m*h*p[b][_][k];else{var C=function(t){return+c[b][t]+m*h*p[b][t]};a=[[\"m\",C(0),C(1),C(2),C(3),C(4),C(5)]]}break;case\"csv\":if(\"clip-rect\"==b)for(a=[],_=4;_--;)a[_]=+c[b][_]+m*h*p[b][_];break;default:var S=[][f](c[b]);for(a=[],_=x.paper.customAttributes[b].length;_--;)a[_]=+S[_]+m*h*p[b][_]}v[b]=a}x.attr(v),function(e,r,i){setTimeout(function(){t(\"raphael.anim.frame.\"+e,r,i)})}(x.id,x,n.anim)}else{if(function(r,i,n){setTimeout(function(){t(\"raphael.anim.frame.\"+i.id,i,n),t(\"raphael.anim.finish.\"+i.id,i,n),e.is(r,\"function\")&&r.call(i)})}(n.callback,x,n.anim),x.attr(d),Kt.splice(i--,1),n.repeat>1&&!n.next){for(s in d)d[o](s)&&(y[s]=n.totalOrigin[s]);n.el.attr(y),ae(n.anim,n.el,n.anim.percents[0],null,n.totalOrigin,n.repeat-1)}n.next&&!n.stop&&ae(n.anim,n.el,n.next,null,n.totalOrigin,n.repeat)}}}Kt.length&&te(ee)},re=function(t){return t>255?255:t<0?0:t};function ie(t,e,r,i,n,a){var s=3*e,o=3*(i-e)-s,l=1-s-o,h=3*r,u=3*(n-r)-h,c=1-h-u;function f(t){return((l*t+o)*t+s)*t}return function(t,e){var r=function(t,e){var r,i,n,a,h,u;for(n=t,u=0;u<8;u++){if(a=f(n)-t,B(a)<e)return n;if(B(h=(3*l*n+2*o)*n+s)<1e-6)break;n-=a/h}if(i=1,(n=t)<(r=0))return r;if(n>i)return i;for(;r<i;){if(a=f(n),B(a-t)<e)return n;t>a?r=n:i=n,n=(i-r)/2+r}return n}(t,e);return((c*r+u)*r+h)*r}(t,1/(200*a))}function ne(t,e){var r=[],i={};if(this.ms=e,this.times=1,t){for(var n in t)t[o](n)&&(i[z(n)]=t[n],r.push(z(n)));r.sort(H)}this.anim=i,this.top=r[r.length-1],this.percents=r}function ae(r,i,a,s,l,h){a=z(a);var u,c,p,d,g,y,m=r.ms,b={},_={},w={};if(s)for(B=0,C=Kt.length;B<C;B++){var k=Kt[B];if(k.el.id==i.id&&k.anim==r){k.percent!=a?(Kt.splice(B,1),p=1):c=k,i.attr(k.totalOrigin);break}}else s=+_;for(var B=0,C=r.percents.length;B<C;B++){if(r.percents[B]==a||r.percents[B]>s*r.top){a=r.percents[B],g=r.percents[B-1]||0,m=m/r.top*(a-g),d=r.percents[B+1],u=r.anim[a];break}s&&i.attr(r.anim[r.percents[B]])}if(u){if(c)c.initstatus=s,c.start=new Date-c.ms*s;else{for(var S in u)if(u[o](S)&&(I[o](S)||i.paper.customAttributes[o](S)))switch(b[S]=i.attr(S),null==b[S]&&(b[S]=j[S]),_[S]=u[S],I[S]){case T:w[S]=(_[S]-b[S])/m;break;case\"colour\":b[S]=e.getRGB(b[S]);var A=e.getRGB(_[S]);w[S]={r:(A.r-b[S].r)/m,g:(A.g-b[S].g)/m,b:(A.b-b[S].b)/m};break;case\"path\":var M=Tt(b[S],_[S]),E=M[1];for(b[S]=M[0],w[S]=[],B=0,C=b[S].length;B<C;B++){w[S][B]=[0];for(var N=1,P=b[S][B].length;N<P;N++)w[S][B][N]=(E[B][N]-b[S][B][N])/m}break;case\"transform\":var F=i._,R=Lt(F[S],_[S]);if(R)for(b[S]=R.from,_[S]=R.to,w[S]=[],w[S].real=!0,B=0,C=b[S].length;B<C;B++)for(w[S][B]=[b[S][B][0]],N=1,P=b[S][B].length;N<P;N++)w[S][B][N]=(_[S][B][N]-b[S][B][N])/m;else{var D=i.matrix||new Pt,q={_:{transform:F.transform},getBBox:function(){return i.getBBox(1)}};b[S]=[D.a,D.b,D.c,D.d,D.e,D.f],Et(q,_[S]),_[S]=q._.transform,w[S]=[(q.matrix.a-D.a)/m,(q.matrix.b-D.b)/m,(q.matrix.c-D.c)/m,(q.matrix.d-D.d)/m,(q.matrix.e-D.e)/m,(q.matrix.f-D.f)/m]}break;case\"csv\":var O=x(u[S])[v](n),V=x(b[S])[v](n);if(\"clip-rect\"==S)for(b[S]=V,w[S]=[],B=V.length;B--;)w[S][B]=(O[B]-b[S][B])/m;_[S]=O;break;default:for(O=[][f](u[S]),V=[][f](b[S]),w[S]=[],B=i.paper.customAttributes[S].length;B--;)w[S][B]=((O[B]||0)-(V[B]||0))/m}var W=u.easing,Y=e.easing_formulas[W];if(!Y)if((Y=x(W).match(L))&&5==Y.length){var G=Y;Y=function(t){return ie(t,+G[1],+G[2],+G[3],+G[4],m)}}else Y=X;if(k={anim:r,percent:a,timestamp:y=u.start||r.start||+new Date,start:y+(r.del||0),status:0,initstatus:s||0,stop:!1,ms:m,easing:Y,from:b,diff:w,to:_,el:i,callback:u.callback,prev:g,next:d,repeat:h||r.times,origin:i.attr(),totalOrigin:l},Kt.push(k),s&&!c&&!p&&(k.stop=!0,k.start=new Date-m*s,1==Kt.length))return ee();p&&(k.start=new Date-k.ms*s),1==Kt.length&&te(ee)}t(\"raphael.anim.start.\"+i.id,i,r)}}function se(t){for(var e=0;e<Kt.length;e++)Kt[e].el.paper==t&&Kt.splice(e--,1)}Wt.animateWith=function(t,r,i,n,a,s){if(this.removed)return s&&s.call(this),this;var o=i instanceof ne?i:e.animation(i,n,a,s);ae(o,this,o.percents[0],null,this.attr());for(var l=0,h=Kt.length;l<h;l++)if(Kt[l].anim==r&&Kt[l].el==t){Kt[h-1].start=Kt[l].start;break}return this},Wt.onAnimation=function(e){return e?t.on(\"raphael.anim.frame.\"+this.id,e):t.unbind(\"raphael.anim.frame.\"+this.id),this},ne.prototype.delay=function(t){var e=new ne(this.anim,this.ms);return e.times=this.times,e.del=+t||0,e},ne.prototype.repeat=function(t){var e=new ne(this.anim,this.ms);return e.del=this.del,e.times=_.floor(w(t,0))||1,e},e.animation=function(t,r,i,n){if(t instanceof ne)return t;!e.is(i,\"function\")&&i||(n=n||i||null,i=null),t=Object(t),r=+r||0;var a,s,l={};for(s in t)t[o](s)&&z(s)!=s&&z(s)+\"%\"!=s&&(a=!0,l[s]=t[s]);if(a)return i&&(l.easing=i),n&&(l.callback=n),new ne({100:l},r);if(n){var h=0;for(var u in t){var c=F(u);t[o](u)&&c>h&&(h=c)}!t[h+=\"%\"].callback&&(t[h].callback=n)}return new ne(t,r)},Wt.animate=function(t,r,i,n){if(this.removed)return n&&n.call(this),this;var a=t instanceof ne?t:e.animation(t,r,i,n);return ae(a,this,a.percents[0],null,this.attr()),this},Wt.setTime=function(t,e){return t&&null!=e&&this.status(t,k(e,t.ms)/t.ms),this},Wt.status=function(t,e){var r,i,n=[],a=0;if(null!=e)return ae(t,this,-1,k(e,1)),this;for(r=Kt.length;a<r;a++)if((i=Kt[a]).el.id==this.id&&(!t||i.anim==t)){if(t)return i.status;n.push({anim:i.anim,status:i.status})}return t?0:n},Wt.pause=function(e){for(var r=0;r<Kt.length;r++)Kt[r].el.id!=this.id||e&&Kt[r].anim!=e||!1!==t(\"raphael.anim.pause.\"+this.id,this,Kt[r].anim)&&(Kt[r].paused=!0);return this},Wt.resume=function(e){for(var r=0;r<Kt.length;r++)if(Kt[r].el.id==this.id&&(!e||Kt[r].anim==e)){var i=Kt[r];!1!==t(\"raphael.anim.resume.\"+this.id,this,i.anim)&&(delete i.paused,this.status(i.anim,i.status))}return this},Wt.stop=function(e){for(var r=0;r<Kt.length;r++)Kt[r].el.id!=this.id||e&&Kt[r].anim!=e||!1!==t(\"raphael.anim.stop.\"+this.id,this,Kt[r].anim)&&Kt.splice(r--,1);return this},t.on(\"raphael.remove\",se),t.on(\"raphael.clear\",se),Wt.toString=function(){return\"Raphaël’s object\"};var oe,le,he,ue,ce=function(t){if(this.items=[],this.length=0,this.type=\"set\",t)for(var e=0,r=t.length;e<r;e++)!t[e]||t[e].constructor!=Wt.constructor&&t[e].constructor!=ce||(this[this.items.length]=this.items[this.items.length]=t[e],this.length++)},fe=ce.prototype;for(var pe in fe.push=function(){for(var t,e,r=0,i=arguments.length;r<i;r++)!(t=arguments[r])||t.constructor!=Wt.constructor&&t.constructor!=ce||(this[e=this.items.length]=this.items[e]=t,this.length++);return this},fe.pop=function(){return this.length&&delete this[this.length--],this.items.pop()},fe.forEach=function(t,e){for(var r=0,i=this.items.length;r<i;r++)if(!1===t.call(e,this.items[r],r))return this;return this},Wt)Wt[o](pe)&&(fe[pe]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t][c](r,e)})}}(pe));return fe.attr=function(t,r){if(t&&e.is(t,A)&&e.is(t[0],\"object\"))for(var i=0,n=t.length;i<n;i++)this.items[i].attr(t[i]);else for(var a=0,s=this.items.length;a<s;a++)this.items[a].attr(t,r);return this},fe.clear=function(){for(;this.length;)this.pop()},fe.splice=function(t,e,r){t=t<0?w(this.length+t,0):t,e=w(0,k(this.length-t,e));var i,n=[],a=[],s=[];for(i=2;i<arguments.length;i++)s.push(arguments[i]);for(i=0;i<e;i++)a.push(this[t+i]);for(;i<this.length-t;i++)n.push(this[t+i]);var o=s.length;for(i=0;i<o+n.length;i++)this.items[t+i]=this[t+i]=i<o?s[i]:n[i-o];for(i=this.items.length=this.length-=e-o;this[i];)delete this[i++];return new ce(a)},fe.exclude=function(t){for(var e=0,r=this.length;e<r;e++)if(this[e]==t)return this.splice(e,1),!0},fe.animate=function(t,r,i,n){(e.is(i,\"function\")||!i)&&(n=i||null);var a,s,o=this.items.length,l=o,h=this;if(!o)return this;n&&(s=function(){!--o&&n.call(h)}),i=e.is(i,\"string\")?i:s;var u=e.animation(t,r,i,s);for(a=this.items[--l].animate(u);l--;)this.items[l]&&!this.items[l].removed&&this.items[l].animateWith(a,u,u),this.items[l]&&!this.items[l].removed||o--;return this},fe.insertAfter=function(t){for(var e=this.items.length;e--;)this.items[e].insertAfter(t);return this},fe.getBBox=function(){for(var t=[],e=[],r=[],i=[],n=this.items.length;n--;)if(!this.items[n].removed){var a=this.items[n].getBBox();t.push(a.x),e.push(a.y),r.push(a.x+a.width),i.push(a.y+a.height)}return{x:t=k[c](0,t),y:e=k[c](0,e),x2:r=w[c](0,r),y2:i=w[c](0,i),width:r-t,height:i-e}},fe.clone=function(t){t=this.paper.set();for(var e=0,r=this.items.length;e<r;e++)t.push(this.items[e].clone());return t},fe.toString=function(){return\"Raphaël‘s set\"},fe.glow=function(t){var e=this.paper.set();return this.forEach(function(r,i){var n=r.glow(t);null!=n&&n.forEach(function(t,r){e.push(t)})}),e},fe.isPointInside=function(t,e){var r=!1;return this.forEach(function(i){if(i.isPointInside(t,e))return r=!0,!1}),r},e.registerFont=function(t){if(!t.face)return t;this.fonts=this.fonts||{};var e={w:t.w,face:{},glyphs:{}},r=t.face[\"font-family\"];for(var i in t.face)t.face[o](i)&&(e.face[i]=t.face[i]);if(this.fonts[r]?this.fonts[r].push(e):this.fonts[r]=[e],!t.svg)for(var n in e.face[\"units-per-em\"]=F(t.face[\"units-per-em\"],10),t.glyphs)if(t.glyphs[o](n)){var a=t.glyphs[n];if(e.glyphs[n]={w:a.w,k:{},d:a.d&&\"M\"+a.d.replace(/[mlcxtrv]/g,function(t){return{l:\"L\",c:\"C\",x:\"z\",t:\"m\",r:\"l\",v:\"c\"}[t]||\"M\"})+\"z\"},a.k)for(var s in a.k)a[o](s)&&(e.glyphs[n].k[s]=a.k[s])}return t},i.getFont=function(t,r,i,n){if(n=n||\"normal\",i=i||\"normal\",r=+r||{normal:400,bold:700,lighter:300,bolder:800}[r]||400,e.fonts){var a,s=e.fonts[t];if(!s){var l=new RegExp(\"(^|\\\\s)\"+t.replace(/[^\\w\\d\\s+!~.:_-]/g,d)+\"(\\\\s|$)\",\"i\");for(var h in e.fonts)if(e.fonts[o](h)&&l.test(h)){s=e.fonts[h];break}}if(s)for(var u=0,c=s.length;u<c&&((a=s[u]).face[\"font-weight\"]!=r||a.face[\"font-style\"]!=i&&a.face[\"font-style\"]||a.face[\"font-stretch\"]!=n);u++);return a}},i.print=function(t,r,i,a,s,o,l,h){o=o||\"middle\",l=w(k(l||0,1),-1),h=w(k(h||1,3),1);var u,c=x(i)[v](d),f=0,p=0,g=d;if(e.is(a,\"string\")&&(a=this.getFont(a)),a){u=(s||16)/a.face[\"units-per-em\"];for(var y=a.face.bbox[v](n),m=+y[0],b=y[3]-y[1],_=0,B=+y[1]+(\"baseline\"==o?b+ +a.face.descent:b/2),C=0,S=c.length;C<S;C++){if(\"\\n\"==c[C])f=0,A=0,p=0,_+=b*h;else{var T=p&&a.glyphs[c[C-1]]||{},A=a.glyphs[c[C]];f+=p?(T.w||a.w)+(T.k&&T.k[c[C]]||0)+a.w*l:0,p=1}A&&A.d&&(g+=e.transformPath(A.d,[\"t\",f*u,_*u,\"s\",u,u,m,B,\"t\",(t-m)/u,(r-B)/u]))}}return this.path(g).attr({fill:\"#000\",stroke:\"none\"})},i.add=function(t){if(e.is(t,\"array\"))for(var r,i=this.set(),n=0,s=t.length;n<s;n++)r=t[n]||{},a[o](r.type)&&i.push(this[r.type]().attr(r));return i},e.format=function(t,r){var i=e.is(r,A)?[0][f](r):arguments;return t&&e.is(t,\"string\")&&i.length-1&&(t=t.replace(s,function(t,e){return null==i[++e]?d:i[e]})),t||d},e.fullfill=(oe=/\\{([^\\}]+)\\}/g,le=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,function(t,e){return String(t).replace(oe,function(t,r){return function(t,e,r){var i=r;return e.replace(le,function(t,e,r,n,a){e=e||n,i&&(e in i&&(i=i[e]),\"function\"==typeof i&&a&&(i=i()))}),i=(null==i||i==r?t:i)+\"\"}(t,r,e)})}),e.ninja=function(){if(h.was)l.win.Raphael=h.is;else{window.Raphael=void 0;try{delete window.Raphael}catch(t){}}return e},e.st=fe,t.on(\"raphael.DOMload\",function(){r=!0}),null==(he=document).readyState&&he.addEventListener&&(he.addEventListener(\"DOMContentLoaded\",ue=function(){he.removeEventListener(\"DOMContentLoaded\",ue,!1),he.readyState=\"complete\"},!1),he.readyState=\"loading\"),function t(){/in/.test(he.readyState)?setTimeout(t,9):e.eve(\"raphael.DOMload\")}(),e}.apply(e,i))||(t.exports=n)},function(t,e,r){var i,n;i=[r(0),r(3),r(4)],void 0===(n=function(t){return t}.apply(e,i))||(t.exports=n)},function(t,e,r){var i,n,a,s,o,l,h,u,c,f,p,d,g,x;s=\"hasOwnProperty\",o=/[\\.\\/]/,l=/\\s*,\\s*/,h=function(t,e){return t-e},u={n:{}},c=function(){for(var t=0,e=this.length;t<e;t++)if(void 0!==this[t])return this[t]},f=function(){for(var t=this.length;--t;)if(void 0!==this[t])return this[t]},p=Object.prototype.toString,d=String,g=Array.isArray||function(t){return t instanceof Array||\"[object Array]\"==p.call(t)},(x=function(t,e){var r,i=a,s=Array.prototype.slice.call(arguments,2),o=x.listeners(t),l=0,u=[],p={},d=[],g=n;d.firstDefined=c,d.lastDefined=f,n=t,a=0;for(var v=0,y=o.length;v<y;v++)\"zIndex\"in o[v]&&(u.push(o[v].zIndex),o[v].zIndex<0&&(p[o[v].zIndex]=o[v]));for(u.sort(h);u[l]<0;)if(r=p[u[l++]],d.push(r.apply(e,s)),a)return a=i,d;for(v=0;v<y;v++)if(\"zIndex\"in(r=o[v]))if(r.zIndex==u[l]){if(d.push(r.apply(e,s)),a)break;do{if((r=p[u[++l]])&&d.push(r.apply(e,s)),a)break}while(r)}else p[r.zIndex]=r;else if(d.push(r.apply(e,s)),a)break;return a=i,n=g,d})._events=u,x.listeners=function(t){var e,r,i,n,a,s,l,h,c=g(t)?t:t.split(o),f=u,p=[f],d=[];for(n=0,a=c.length;n<a;n++){for(h=[],s=0,l=p.length;s<l;s++)for(r=[(f=p[s].n)[c[n]],f[\"*\"]],i=2;i--;)(e=r[i])&&(h.push(e),d=d.concat(e.f||[]));p=h}return d},x.separator=function(t){t?(t=\"[\"+(t=d(t).replace(/(?=[\\.\\^\\]\\[\\-])/g,\"\\\\\"))+\"]\",o=new RegExp(t)):o=/[\\.\\/]/},x.on=function(t,e){if(\"function\"!=typeof e)return function(){};for(var r=g(t)?g(t[0])?t:[t]:d(t).split(l),i=0,n=r.length;i<n;i++)!function(t){for(var r,i=g(t)?t:d(t).split(o),n=u,a=0,s=i.length;a<s;a++)n=(n=n.n).hasOwnProperty(i[a])&&n[i[a]]||(n[i[a]]={n:{}});for(n.f=n.f||[],a=0,s=n.f.length;a<s;a++)if(n.f[a]==e){r=!0;break}!r&&n.f.push(e)}(r[i]);return function(t){+t==+t&&(e.zIndex=+t)}},x.f=function(t){var e=[].slice.call(arguments,1);return function(){x.apply(null,[t,null].concat(e).concat([].slice.call(arguments,0)))}},x.stop=function(){a=1},x.nt=function(t){var e=g(n)?n.join(\".\"):n;return t?new RegExp(\"(?:\\\\.|\\\\/|^)\"+t+\"(?:\\\\.|\\\\/|$)\").test(e):e},x.nts=function(){return g(n)?n:n.split(o)},x.off=x.unbind=function(t,e){if(t){var r=g(t)?g(t[0])?t:[t]:d(t).split(l);if(r.length>1)for(var i=0,n=r.length;i<n;i++)x.off(r[i],e);else{r=g(t)?t:d(t).split(o);var a,h,c,f,p,v=[u];for(i=0,n=r.length;i<n;i++)for(f=0;f<v.length;f+=c.length-2){if(c=[f,1],a=v[f].n,\"*\"!=r[i])a[r[i]]&&c.push(a[r[i]]);else for(h in a)a[s](h)&&c.push(a[h]);v.splice.apply(v,c)}for(i=0,n=v.length;i<n;i++)for(a=v[i];a.n;){if(e){if(a.f){for(f=0,p=a.f.length;f<p;f++)if(a.f[f]==e){a.f.splice(f,1);break}!a.f.length&&delete a.f}for(h in a.n)if(a.n[s](h)&&a.n[h].f){var y=a.n[h].f;for(f=0,p=y.length;f<p;f++)if(y[f]==e){y.splice(f,1);break}!y.length&&delete a.n[h].f}}else for(h in delete a.f,a.n)a.n[s](h)&&a.n[h].f&&delete a.n[h].f;a=a.n}}}else x._events=u={n:{}}},x.once=function(t,e){var r=function(){return x.off(t,r),e.apply(this,arguments)};return x.on(t,r)},x.version=\"0.5.0\",x.toString=function(){return\"You are running Eve 0.5.0\"},t.exports?t.exports=x:void 0===(i=function(){return x}.apply(e,[]))||(t.exports=i)},function(t,e,r){var i,n;i=[r(0)],void 0===(n=function(t){if(!t||t.svg){var e=\"hasOwnProperty\",r=String,i=parseFloat,n=parseInt,a=Math,s=a.max,o=a.abs,l=a.pow,h=/[, ]+/,u=t.eve,c=\"\",f=\" \",p=\"http://www.w3.org/1999/xlink\",d={block:\"M5,0 0,2.5 5,5z\",classic:\"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",diamond:\"M2.5,0 5,2.5 2.5,5 0,2.5z\",open:\"M6,1 1,3.5 6,6\",oval:\"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"},g={};t.toString=function(){return\"Your browser supports SVG.\\nYou are running Raphaël \"+this.version};var x=function(i,n){if(n)for(var a in\"string\"==typeof i&&(i=x(i)),n)n[e](a)&&(\"xlink:\"==a.substring(0,6)?i.setAttributeNS(p,a.substring(6),r(n[a])):i.setAttribute(a,r(n[a])));else(i=t._g.doc.createElementNS(\"http://www.w3.org/2000/svg\",i)).style&&(i.style.webkitTapHighlightColor=\"rgba(0,0,0,0)\");return i},v=function(e,n){var h=\"linear\",u=e.id+n,f=.5,p=.5,d=e.node,g=e.paper,v=d.style,m=t._g.doc.getElementById(u);if(!m){if(n=(n=r(n).replace(t._radial_gradient,function(t,e,r){if(h=\"radial\",e&&r){f=i(e);var n=2*((p=i(r))>.5)-1;l(f-.5,2)+l(p-.5,2)>.25&&(p=a.sqrt(.25-l(f-.5,2))*n+.5)&&.5!=p&&(p=p.toFixed(5)-1e-5*n)}return c})).split(/\\s*\\-\\s*/),\"linear\"==h){var b=n.shift();if(b=-i(b),isNaN(b))return null;var _=[0,0,a.cos(t.rad(b)),a.sin(t.rad(b))],w=1/(s(o(_[2]),o(_[3]))||1);_[2]*=w,_[3]*=w,_[2]<0&&(_[0]=-_[2],_[2]=0),_[3]<0&&(_[1]=-_[3],_[3]=0)}var k=t._parseDots(n);if(!k)return null;if(u=u.replace(/[\\(\\)\\s,\\xb0#]/g,\"_\"),e.gradient&&u!=e.gradient.id&&(g.defs.removeChild(e.gradient),delete e.gradient),!e.gradient){m=x(h+\"Gradient\",{id:u}),e.gradient=m,x(m,\"radial\"==h?{fx:f,fy:p}:{x1:_[0],y1:_[1],x2:_[2],y2:_[3],gradientTransform:e.matrix.invert()}),g.defs.appendChild(m);for(var B=0,C=k.length;B<C;B++)m.appendChild(x(\"stop\",{offset:k[B].offset?k[B].offset:B?\"100%\":\"0%\",\"stop-color\":k[B].color||\"#fff\",\"stop-opacity\":isFinite(k[B].opacity)?k[B].opacity:1}))}}return x(d,{fill:y(u),opacity:1,\"fill-opacity\":1}),v.fill=c,v.opacity=1,v.fillOpacity=1,1},y=function(t){if((e=document.documentMode)&&(9===e||10===e))return\"url('#\"+t+\"')\";var e,r=document.location;return\"url('\"+(r.protocol+\"//\"+r.host+r.pathname+r.search)+\"#\"+t+\"')\"},m=function(t){var e=t.getBBox(1);x(t.pattern,{patternTransform:t.matrix.invert()+\" translate(\"+e.x+\",\"+e.y+\")\"})},b=function(i,n,a){if(\"path\"==i.type){for(var s,o,l,h,u,f=r(n).toLowerCase().split(\"-\"),p=i.paper,v=a?\"end\":\"start\",y=i.node,m=i.attrs,b=m[\"stroke-width\"],_=f.length,w=\"classic\",k=3,B=3,C=5;_--;)switch(f[_]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":w=f[_];break;case\"wide\":B=5;break;case\"narrow\":B=2;break;case\"long\":k=5;break;case\"short\":k=2}if(\"open\"==w?(k+=2,B+=2,C+=2,l=1,h=a?4:1,u={fill:\"none\",stroke:m.stroke}):(h=l=k/2,u={fill:m.stroke,stroke:\"none\"}),i._.arrows?a?(i._.arrows.endPath&&g[i._.arrows.endPath]--,i._.arrows.endMarker&&g[i._.arrows.endMarker]--):(i._.arrows.startPath&&g[i._.arrows.startPath]--,i._.arrows.startMarker&&g[i._.arrows.startMarker]--):i._.arrows={},\"none\"!=w){var S=\"raphael-marker-\"+w,T=\"raphael-marker-\"+v+w+k+B+\"-obj\"+i.id;t._g.doc.getElementById(S)?g[S]++:(p.defs.appendChild(x(x(\"path\"),{\"stroke-linecap\":\"round\",d:d[w],id:S})),g[S]=1);var A,M=t._g.doc.getElementById(T);M?(g[T]++,A=M.getElementsByTagName(\"use\")[0]):(M=x(x(\"marker\"),{id:T,markerHeight:B,markerWidth:k,orient:\"auto\",refX:h,refY:B/2}),A=x(x(\"use\"),{\"xlink:href\":\"#\"+S,transform:(a?\"rotate(180 \"+k/2+\" \"+B/2+\") \":c)+\"scale(\"+k/C+\",\"+B/C+\")\",\"stroke-width\":(1/((k/C+B/C)/2)).toFixed(4)}),M.appendChild(A),p.defs.appendChild(M),g[T]=1),x(A,u);var E=l*(\"diamond\"!=w&&\"oval\"!=w);a?(s=i._.arrows.startdx*b||0,o=t.getTotalLength(m.path)-E*b):(s=E*b,o=t.getTotalLength(m.path)-(i._.arrows.enddx*b||0)),(u={})[\"marker-\"+v]=\"url(#\"+T+\")\",(o||s)&&(u.d=t.getSubpath(m.path,s,o)),x(y,u),i._.arrows[v+\"Path\"]=S,i._.arrows[v+\"Marker\"]=T,i._.arrows[v+\"dx\"]=E,i._.arrows[v+\"Type\"]=w,i._.arrows[v+\"String\"]=n}else a?(s=i._.arrows.startdx*b||0,o=t.getTotalLength(m.path)-s):(s=0,o=t.getTotalLength(m.path)-(i._.arrows.enddx*b||0)),i._.arrows[v+\"Path\"]&&x(y,{d:t.getSubpath(m.path,s,o)}),delete i._.arrows[v+\"Path\"],delete i._.arrows[v+\"Marker\"],delete i._.arrows[v+\"dx\"],delete i._.arrows[v+\"Type\"],delete i._.arrows[v+\"String\"];for(u in g)if(g[e](u)&&!g[u]){var N=t._g.doc.getElementById(u);N&&N.parentNode.removeChild(N)}}},_={\"-\":[3,1],\".\":[1,1],\"-.\":[3,1,1,1],\"-..\":[3,1,1,1,1,1],\". \":[1,3],\"- \":[4,3],\"--\":[8,3],\"- .\":[4,3,1,3],\"--.\":[8,3,1,3],\"--..\":[8,3,1,3,1,3]},w=function(t,e,i){if(e=_[r(e).toLowerCase()]){for(var n=t.attrs[\"stroke-width\"]||\"1\",a={round:n,square:n,butt:0}[t.attrs[\"stroke-linecap\"]||i[\"stroke-linecap\"]]||0,s=[],o=e.length;o--;)s[o]=e[o]*n+(o%2?1:-1)*a;x(t.node,{\"stroke-dasharray\":s.join(\",\")})}else x(t.node,{\"stroke-dasharray\":\"none\"})},k=function(i,a){var l=i.node,u=i.attrs,f=l.style.visibility;for(var d in l.style.visibility=\"hidden\",a)if(a[e](d)){if(!t._availableAttrs[e](d))continue;var g=a[d];switch(u[d]=g,d){case\"blur\":i.blur(g);break;case\"title\":var y=l.getElementsByTagName(\"title\");if(y.length&&(y=y[0]))y.firstChild.nodeValue=g;else{y=x(\"title\");var _=t._g.doc.createTextNode(g);y.appendChild(_),l.appendChild(y)}break;case\"href\":case\"target\":var k=l.parentNode;if(\"a\"!=k.tagName.toLowerCase()){var C=x(\"a\");k.insertBefore(C,l),C.appendChild(l),k=C}\"target\"==d?k.setAttributeNS(p,\"show\",\"blank\"==g?\"new\":g):k.setAttributeNS(p,d,g);break;case\"cursor\":l.style.cursor=g;break;case\"transform\":i.transform(g);break;case\"arrow-start\":b(i,g);break;case\"arrow-end\":b(i,g,1);break;case\"clip-rect\":var S=r(g).split(h);if(4==S.length){i.clip&&i.clip.parentNode.parentNode.removeChild(i.clip.parentNode);var T=x(\"clipPath\"),A=x(\"rect\");T.id=t.createUUID(),x(A,{x:S[0],y:S[1],width:S[2],height:S[3]}),T.appendChild(A),i.paper.defs.appendChild(T),x(l,{\"clip-path\":\"url(#\"+T.id+\")\"}),i.clip=A}if(!g){var M=l.getAttribute(\"clip-path\");if(M){var E=t._g.doc.getElementById(M.replace(/(^url\\(#|\\)$)/g,c));E&&E.parentNode.removeChild(E),x(l,{\"clip-path\":c}),delete i.clip}}break;case\"path\":\"path\"==i.type&&(x(l,{d:g?u.path=t._pathToAbsolute(g):\"M0,0\"}),i._.dirty=1,i._.arrows&&(\"startString\"in i._.arrows&&b(i,i._.arrows.startString),\"endString\"in i._.arrows&&b(i,i._.arrows.endString,1)));break;case\"width\":if(l.setAttribute(d,g),i._.dirty=1,!u.fx)break;d=\"x\",g=u.x;case\"x\":u.fx&&(g=-u.x-(u.width||0));case\"rx\":if(\"rx\"==d&&\"rect\"==i.type)break;case\"cx\":l.setAttribute(d,g),i.pattern&&m(i),i._.dirty=1;break;case\"height\":if(l.setAttribute(d,g),i._.dirty=1,!u.fy)break;d=\"y\",g=u.y;case\"y\":u.fy&&(g=-u.y-(u.height||0));case\"ry\":if(\"ry\"==d&&\"rect\"==i.type)break;case\"cy\":l.setAttribute(d,g),i.pattern&&m(i),i._.dirty=1;break;case\"r\":\"rect\"==i.type?x(l,{rx:g,ry:g}):l.setAttribute(d,g),i._.dirty=1;break;case\"src\":\"image\"==i.type&&l.setAttributeNS(p,\"href\",g);break;case\"stroke-width\":1==i._.sx&&1==i._.sy||(g/=s(o(i._.sx),o(i._.sy))||1),l.setAttribute(d,g),u[\"stroke-dasharray\"]&&w(i,u[\"stroke-dasharray\"],a),i._.arrows&&(\"startString\"in i._.arrows&&b(i,i._.arrows.startString),\"endString\"in i._.arrows&&b(i,i._.arrows.endString,1));break;case\"stroke-dasharray\":w(i,g,a);break;case\"fill\":var N=r(g).match(t._ISURL);if(N){T=x(\"pattern\");var L=x(\"image\");T.id=t.createUUID(),x(T,{x:0,y:0,patternUnits:\"userSpaceOnUse\",height:1,width:1}),x(L,{x:0,y:0,\"xlink:href\":N[1]}),T.appendChild(L),function(e){t._preload(N[1],function(){var t=this.offsetWidth,r=this.offsetHeight;x(e,{width:t,height:r}),x(L,{width:t,height:r})})}(T),i.paper.defs.appendChild(T),x(l,{fill:\"url(#\"+T.id+\")\"}),i.pattern=T,i.pattern&&m(i);break}var P=t.getRGB(g);if(P.error){if((\"circle\"==i.type||\"ellipse\"==i.type||\"r\"!=r(g).charAt())&&v(i,g)){if(\"opacity\"in u||\"fill-opacity\"in u){var z=t._g.doc.getElementById(l.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,c));if(z){var F=z.getElementsByTagName(\"stop\");x(F[F.length-1],{\"stop-opacity\":(\"opacity\"in u?u.opacity:1)*(\"fill-opacity\"in u?u[\"fill-opacity\"]:1)})}}u.gradient=g,u.fill=\"none\";break}}else delete a.gradient,delete u.gradient,!t.is(u.opacity,\"undefined\")&&t.is(a.opacity,\"undefined\")&&x(l,{opacity:u.opacity}),!t.is(u[\"fill-opacity\"],\"undefined\")&&t.is(a[\"fill-opacity\"],\"undefined\")&&x(l,{\"fill-opacity\":u[\"fill-opacity\"]});P[e](\"opacity\")&&x(l,{\"fill-opacity\":P.opacity>1?P.opacity/100:P.opacity});case\"stroke\":P=t.getRGB(g),l.setAttribute(d,P.hex),\"stroke\"==d&&P[e](\"opacity\")&&x(l,{\"stroke-opacity\":P.opacity>1?P.opacity/100:P.opacity}),\"stroke\"==d&&i._.arrows&&(\"startString\"in i._.arrows&&b(i,i._.arrows.startString),\"endString\"in i._.arrows&&b(i,i._.arrows.endString,1));break;case\"gradient\":(\"circle\"==i.type||\"ellipse\"==i.type||\"r\"!=r(g).charAt())&&v(i,g);break;case\"opacity\":u.gradient&&!u[e](\"stroke-opacity\")&&x(l,{\"stroke-opacity\":g>1?g/100:g});case\"fill-opacity\":if(u.gradient){(z=t._g.doc.getElementById(l.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,c)))&&(F=z.getElementsByTagName(\"stop\"),x(F[F.length-1],{\"stop-opacity\":g}));break}default:\"font-size\"==d&&(g=n(g,10)+\"px\");var R=d.replace(/(\\-.)/g,function(t){return t.substring(1).toUpperCase()});l.style[R]=g,i._.dirty=1,l.setAttribute(d,g)}}B(i,a),l.style.visibility=f},B=function(i,a){if(\"text\"==i.type&&(a[e](\"text\")||a[e](\"font\")||a[e](\"font-size\")||a[e](\"x\")||a[e](\"y\"))){var s=i.attrs,o=i.node,l=o.firstChild?n(t._g.doc.defaultView.getComputedStyle(o.firstChild,c).getPropertyValue(\"font-size\"),10):10;if(a[e](\"text\")){for(s.text=a.text;o.firstChild;)o.removeChild(o.firstChild);for(var h,u=r(a.text).split(\"\\n\"),f=[],p=0,d=u.length;p<d;p++)h=x(\"tspan\"),p&&x(h,{dy:1.2*l,x:s.x}),h.appendChild(t._g.doc.createTextNode(u[p])),o.appendChild(h),f[p]=h}else for(p=0,d=(f=o.getElementsByTagName(\"tspan\")).length;p<d;p++)p?x(f[p],{dy:1.2*l,x:s.x}):x(f[0],{dy:0});x(o,{x:s.x,y:s.y}),i._.dirty=1;var g=i._getBBox(),v=s.y-(g.y+g.height/2);v&&t.is(v,\"finite\")&&x(f[0],{dy:v})}},C=function(t){return t.parentNode&&\"a\"===t.parentNode.tagName.toLowerCase()?t.parentNode:t},S=function(e,r){this[0]=this.node=e,e.raphael=!0,this.id=(\"0000\"+(Math.random()*Math.pow(36,5)<<0).toString(36)).slice(-5),e.raphaelid=this.id,this.matrix=t.matrix(),this.realPath=null,this.paper=r,this.attrs=this.attrs||{},this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},T=t.el;S.prototype=T,T.constructor=S,t._engine.path=function(t,e){var r=x(\"path\");e.canvas&&e.canvas.appendChild(r);var i=new S(r,e);return i.type=\"path\",k(i,{fill:\"none\",stroke:\"#000\",path:t}),i},T.rotate=function(t,e,n){if(this.removed)return this;if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this.transform(this._.transform.concat([[\"r\",t,e,n]])),this},T.scale=function(t,e,n,a){if(this.removed)return this;if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3])),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([[\"s\",t,e,n,a]])),this},T.translate=function(t,e){return this.removed?this:((t=r(t).split(h)).length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this.transform(this._.transform.concat([[\"t\",t,e]])),this)},T.transform=function(r){var i=this._;if(null==r)return i.transform;if(t._extractTransform(this,r),this.clip&&x(this.clip,{transform:this.matrix.invert()}),this.pattern&&m(this),this.node&&x(this.node,{transform:this.matrix}),1!=i.sx||1!=i.sy){var n=this.attrs[e](\"stroke-width\")?this.attrs[\"stroke-width\"]:1;this.attr({\"stroke-width\":n})}return this},T.hide=function(){return this.removed||(this.node.style.display=\"none\"),this},T.show=function(){return this.removed||(this.node.style.display=\"\"),this},T.remove=function(){var e=C(this.node);if(!this.removed&&e.parentNode){var r=this.paper;for(var i in r.__set__&&r.__set__.exclude(this),u.unbind(\"raphael.*.*.\"+this.id),this.gradient&&r.defs.removeChild(this.gradient),t._tear(this,r),e.parentNode.removeChild(e),this.removeData(),this)this[i]=\"function\"==typeof this[i]?t._removedFactory(i):null;this.removed=!0}},T._getBBox=function(){if(\"none\"==this.node.style.display){this.show();var t=!0}var e,r=!1;this.paper.canvas.parentElement?e=this.paper.canvas.parentElement.style:this.paper.canvas.parentNode&&(e=this.paper.canvas.parentNode.style),e&&\"none\"==e.display&&(r=!0,e.display=\"\");var i={};try{i=this.node.getBBox()}catch(t){i={x:this.node.clientLeft,y:this.node.clientTop,width:this.node.clientWidth,height:this.node.clientHeight}}finally{i=i||{},r&&(e.display=\"none\")}return t&&this.hide(),i},T.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&\"none\"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,\"string\")){if(\"fill\"==r&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if(\"transform\"==r)return this._.transform;for(var s=r.split(h),o={},l=0,c=s.length;l<c;l++)(r=s[l])in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],\"function\")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return c-1?o:o[s[0]]}if(null==i&&t.is(r,\"array\")){for(o={},l=0,c=r.length;l<c;l++)o[r[l]]=this.attr(r[l]);return o}if(null!=i){var f={};f[r]=i}else null!=r&&t.is(r,\"object\")&&(f=r);for(var p in f)u(\"raphael.attr.\"+p+\".\"+this.id,this,f[p]);for(p in this.paper.customAttributes)if(this.paper.customAttributes[e](p)&&f[e](p)&&t.is(this.paper.customAttributes[p],\"function\")){var d=this.paper.customAttributes[p].apply(this,[].concat(f[p]));for(var g in this.attrs[p]=f[p],d)d[e](g)&&(f[g]=d[g])}return k(this,f),this},T.toFront=function(){if(this.removed)return this;var e=C(this.node);e.parentNode.appendChild(e);var r=this.paper;return r.top!=this&&t._tofront(this,r),this},T.toBack=function(){if(this.removed)return this;var e=C(this.node),r=e.parentNode;r.insertBefore(e,r.firstChild),t._toback(this,this.paper);this.paper;return this},T.insertAfter=function(e){if(this.removed||!e)return this;var r=C(this.node),i=C(e.node||e[e.length-1].node);return i.nextSibling?i.parentNode.insertBefore(r,i.nextSibling):i.parentNode.appendChild(r),t._insertafter(this,e,this.paper),this},T.insertBefore=function(e){if(this.removed||!e)return this;var r=C(this.node),i=C(e.node||e[0].node);return i.parentNode.insertBefore(r,i),t._insertbefore(this,e,this.paper),this},T.blur=function(e){var r=this;if(0!=+e){var i=x(\"filter\"),n=x(\"feGaussianBlur\");r.attrs.blur=e,i.id=t.createUUID(),x(n,{stdDeviation:+e||1.5}),i.appendChild(n),r.paper.defs.appendChild(i),r._blur=i,x(r.node,{filter:\"url(#\"+i.id+\")\"})}else r._blur&&(r._blur.parentNode.removeChild(r._blur),delete r._blur,delete r.attrs.blur),r.node.removeAttribute(\"filter\");return r},t._engine.circle=function(t,e,r,i){var n=x(\"circle\");t.canvas&&t.canvas.appendChild(n);var a=new S(n,t);return a.attrs={cx:e,cy:r,r:i,fill:\"none\",stroke:\"#000\"},a.type=\"circle\",x(n,a.attrs),a},t._engine.rect=function(t,e,r,i,n,a){var s=x(\"rect\");t.canvas&&t.canvas.appendChild(s);var o=new S(s,t);return o.attrs={x:e,y:r,width:i,height:n,rx:a||0,ry:a||0,fill:\"none\",stroke:\"#000\"},o.type=\"rect\",x(s,o.attrs),o},t._engine.ellipse=function(t,e,r,i,n){var a=x(\"ellipse\");t.canvas&&t.canvas.appendChild(a);var s=new S(a,t);return s.attrs={cx:e,cy:r,rx:i,ry:n,fill:\"none\",stroke:\"#000\"},s.type=\"ellipse\",x(a,s.attrs),s},t._engine.image=function(t,e,r,i,n,a){var s=x(\"image\");x(s,{x:r,y:i,width:n,height:a,preserveAspectRatio:\"none\"}),s.setAttributeNS(p,\"href\",e),t.canvas&&t.canvas.appendChild(s);var o=new S(s,t);return o.attrs={x:r,y:i,width:n,height:a,src:e},o.type=\"image\",o},t._engine.text=function(e,r,i,n){var a=x(\"text\");e.canvas&&e.canvas.appendChild(a);var s=new S(a,e);return s.attrs={x:r,y:i,\"text-anchor\":\"middle\",text:n,\"font-family\":t._availableAttrs[\"font-family\"],\"font-size\":t._availableAttrs[\"font-size\"],stroke:\"none\",fill:\"#000\"},s.type=\"text\",k(s,s.attrs),s},t._engine.setSize=function(t,e){return this.width=t||this.width,this.height=e||this.height,this.canvas.setAttribute(\"width\",this.width),this.canvas.setAttribute(\"height\",this.height),this._viewBox&&this.setViewBox.apply(this,this._viewBox),this},t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e&&e.container;if(!r)throw new Error(\"SVG container not found.\");var i,n=e.x,a=e.y,s=e.width,o=e.height,l=x(\"svg\"),h=\"overflow:hidden;\";return n=n||0,a=a||0,x(l,{height:o=o||342,version:1.1,width:s=s||512,xmlns:\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\"}),1==r?(l.style.cssText=h+\"position:absolute;left:\"+n+\"px;top:\"+a+\"px\",t._g.doc.body.appendChild(l),i=1):(l.style.cssText=h+\"position:relative\",r.firstChild?r.insertBefore(l,r.firstChild):r.appendChild(l)),(r=new t._Paper).width=s,r.height=o,r.canvas=l,r.clear(),r._left=r._top=0,i&&(r.renderfix=function(){}),r.renderfix(),r},t._engine.setViewBox=function(t,e,r,i,n){u(\"raphael.setViewBox\",this,this._viewBox,[t,e,r,i,n]);var a,o,l=this.getSize(),h=s(r/l.width,i/l.height),c=this.top,p=n?\"xMidYMid meet\":\"xMinYMin\";for(null==t?(this._vbSize&&(h=1),delete this._vbSize,a=\"0 0 \"+this.width+f+this.height):(this._vbSize=h,a=t+f+e+f+r+f+i),x(this.canvas,{viewBox:a,preserveAspectRatio:p});h&&c;)o=\"stroke-width\"in c.attrs?c.attrs[\"stroke-width\"]:1,c.attr({\"stroke-width\":o}),c._.dirty=1,c._.dirtyT=1,c=c.prev;return this._viewBox=[t,e,r,i,!!n],this},t.prototype.renderfix=function(){var t,e=this.canvas,r=e.style;try{t=e.getScreenCTM()||e.createSVGMatrix()}catch(r){t=e.createSVGMatrix()}var i=-t.e%1,n=-t.f%1;(i||n)&&(i&&(this._left=(this._left+i)%1,r.left=this._left+\"px\"),n&&(this._top=(this._top+n)%1,r.top=this._top+\"px\"))},t.prototype.clear=function(){t.eve(\"raphael.clear\",this);for(var e=this.canvas;e.firstChild;)e.removeChild(e.firstChild);this.bottom=this.top=null,(this.desc=x(\"desc\")).appendChild(t._g.doc.createTextNode(\"Created with Raphaël \"+t.version)),e.appendChild(this.desc),e.appendChild(this.defs=x(\"defs\"))},t.prototype.remove=function(){for(var e in u(\"raphael.remove\",this),this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas),this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null};var A=t.st;for(var M in T)T[e](M)&&!A[e](M)&&(A[M]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(M))}}.apply(e,i))||(t.exports=n)},function(t,e,r){var i,n;i=[r(0)],void 0===(n=function(t){if(!t||t.vml){var e=\"hasOwnProperty\",r=String,i=parseFloat,n=Math,a=n.round,s=n.max,o=n.min,l=n.abs,h=/[, ]+/,u=t.eve,c=\" \",f=\"\",p={M:\"m\",L:\"l\",C:\"c\",Z:\"x\",m:\"t\",l:\"r\",c:\"v\",z:\"x\"},d=/([clmz]),?([^clmz]*)/gi,g=/ progid:\\S+Blur\\([^\\)]+\\)/g,x=/-?[^,\\s-]+/g,v=\"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",y=21600,m={path:1,rect:1,image:1},b={circle:1,ellipse:1},_=function(e,r,i){var n=t.matrix();return n.rotate(-e,.5,.5),{dx:n.x(r,i),dy:n.y(r,i)}},w=function(t,e,r,i,n,a){var s=t._,o=t.matrix,h=s.fillpos,u=t.node,f=u.style,p=1,d=\"\",g=y/e,x=y/r;if(f.visibility=\"hidden\",e&&r){if(u.coordsize=l(g)+c+l(x),f.rotation=a*(e*r<0?-1:1),a){var v=_(a,i,n);i=v.dx,n=v.dy}if(e<0&&(d+=\"x\"),r<0&&(d+=\" y\")&&(p=-1),f.flip=d,u.coordorigin=i*-g+c+n*-x,h||s.fillsize){var m=u.getElementsByTagName(\"fill\");m=m&&m[0],u.removeChild(m),h&&(v=_(a,o.x(h[0],h[1]),o.y(h[0],h[1])),m.position=v.dx*p+c+v.dy*p),s.fillsize&&(m.size=s.fillsize[0]*l(e)+c+s.fillsize[1]*l(r)),u.appendChild(m)}f.visibility=\"visible\"}};t.toString=function(){return\"Your browser doesn’t support SVG. Falling down to VML.\\nYou are running Raphaël \"+this.version};var k,B=function(t,e,i){for(var n=r(e).toLowerCase().split(\"-\"),a=i?\"end\":\"start\",s=n.length,o=\"classic\",l=\"medium\",h=\"medium\";s--;)switch(n[s]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":o=n[s];break;case\"wide\":case\"narrow\":h=n[s];break;case\"long\":case\"short\":l=n[s]}var u=t.node.getElementsByTagName(\"stroke\")[0];u[a+\"arrow\"]=o,u[a+\"arrowlength\"]=l,u[a+\"arrowwidth\"]=h},C=function(n,l){n.attrs=n.attrs||{};var u=n.node,g=n.attrs,v=u.style,_=m[n.type]&&(l.x!=g.x||l.y!=g.y||l.width!=g.width||l.height!=g.height||l.cx!=g.cx||l.cy!=g.cy||l.rx!=g.rx||l.ry!=g.ry||l.r!=g.r),C=b[n.type]&&(g.cx!=l.cx||g.cy!=l.cy||g.r!=l.r||g.rx!=l.rx||g.ry!=l.ry),T=n;for(var A in l)l[e](A)&&(g[A]=l[A]);if(_&&(g.path=t._getPath[n.type](n),n._.dirty=1),l.href&&(u.href=l.href),l.title&&(u.title=l.title),l.target&&(u.target=l.target),l.cursor&&(v.cursor=l.cursor),\"blur\"in l&&n.blur(l.blur),(l.path&&\"path\"==n.type||_)&&(u.path=function(e){var i=/[ahqstv]/gi,n=t._pathToAbsolute;if(r(e).match(i)&&(n=t._path2curve),i=/[clmz]/g,n==t._pathToAbsolute&&!r(e).match(i)){var s=r(e).replace(d,function(t,e,r){var i=[],n=\"m\"==e.toLowerCase(),s=p[e];return r.replace(x,function(t){n&&2==i.length&&(s+=i+p[\"m\"==e?\"l\":\"L\"],i=[]),i.push(a(t*y))}),s+i});return s}var o,l,h=n(e);s=[];for(var u=0,g=h.length;u<g;u++){o=h[u],\"z\"==(l=h[u][0].toLowerCase())&&(l=\"x\");for(var v=1,m=o.length;v<m;v++)l+=a(o[v]*y)+(v!=m-1?\",\":f);s.push(l)}return s.join(c)}(~r(g.path).toLowerCase().indexOf(\"r\")?t._pathToAbsolute(g.path):g.path),n._.dirty=1,\"image\"==n.type&&(n._.fillpos=[g.x,g.y],n._.fillsize=[g.width,g.height],w(n,1,1,0,0,0))),\"transform\"in l&&n.transform(l.transform),C){var M=+g.cx,E=+g.cy,N=+g.rx||+g.r||0,L=+g.ry||+g.r||0;u.path=t.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\",a((M-N)*y),a((E-L)*y),a((M+N)*y),a((E+L)*y),a(M*y)),n._.dirty=1}if(\"clip-rect\"in l){var P=r(l[\"clip-rect\"]).split(h);if(4==P.length){P[2]=+P[2]+ +P[0],P[3]=+P[3]+ +P[1];var z=u.clipRect||t._g.doc.createElement(\"div\"),F=z.style;F.clip=t.format(\"rect({1}px {2}px {3}px {0}px)\",P),u.clipRect||(F.position=\"absolute\",F.top=0,F.left=0,F.width=n.paper.width+\"px\",F.height=n.paper.height+\"px\",u.parentNode.insertBefore(z,u),z.appendChild(u),u.clipRect=z)}l[\"clip-rect\"]||u.clipRect&&(u.clipRect.style.clip=\"auto\")}if(n.textpath){var R=n.textpath.style;l.font&&(R.font=l.font),l[\"font-family\"]&&(R.fontFamily='\"'+l[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g,f)+'\"'),l[\"font-size\"]&&(R.fontSize=l[\"font-size\"]),l[\"font-weight\"]&&(R.fontWeight=l[\"font-weight\"]),l[\"font-style\"]&&(R.fontStyle=l[\"font-style\"])}if(\"arrow-start\"in l&&B(T,l[\"arrow-start\"]),\"arrow-end\"in l&&B(T,l[\"arrow-end\"],1),null!=l.opacity||null!=l.fill||null!=l.src||null!=l.stroke||null!=l[\"stroke-width\"]||null!=l[\"stroke-opacity\"]||null!=l[\"fill-opacity\"]||null!=l[\"stroke-dasharray\"]||null!=l[\"stroke-miterlimit\"]||null!=l[\"stroke-linejoin\"]||null!=l[\"stroke-linecap\"]){var j=u.getElementsByTagName(\"fill\");if(!(j=j&&j[0])&&(j=k(\"fill\")),\"image\"==n.type&&l.src&&(j.src=l.src),l.fill&&(j.on=!0),null!=j.on&&\"none\"!=l.fill&&null!==l.fill||(j.on=!1),j.on&&l.fill){var I=r(l.fill).match(t._ISURL);if(I){j.parentNode==u&&u.removeChild(j),j.rotate=!0,j.src=I[1],j.type=\"tile\";var D=n.getBBox(1);j.position=D.x+c+D.y,n._.fillpos=[D.x,D.y],t._preload(I[1],function(){n._.fillsize=[this.offsetWidth,this.offsetHeight]})}else j.color=t.getRGB(l.fill).hex,j.src=f,j.type=\"solid\",t.getRGB(l.fill).error&&(T.type in{circle:1,ellipse:1}||\"r\"!=r(l.fill).charAt())&&S(T,l.fill,j)&&(g.fill=\"none\",g.gradient=l.fill,j.rotate=!1)}if(\"fill-opacity\"in l||\"opacity\"in l){var q=((+g[\"fill-opacity\"]+1||2)-1)*((+g.opacity+1||2)-1)*((+t.getRGB(l.fill).o+1||2)-1);q=o(s(q,0),1),j.opacity=q,j.src&&(j.color=\"none\")}u.appendChild(j);var O=u.getElementsByTagName(\"stroke\")&&u.getElementsByTagName(\"stroke\")[0],V=!1;!O&&(V=O=k(\"stroke\")),(l.stroke&&\"none\"!=l.stroke||l[\"stroke-width\"]||null!=l[\"stroke-opacity\"]||l[\"stroke-dasharray\"]||l[\"stroke-miterlimit\"]||l[\"stroke-linejoin\"]||l[\"stroke-linecap\"])&&(O.on=!0),(\"none\"==l.stroke||null===l.stroke||null==O.on||0==l.stroke||0==l[\"stroke-width\"])&&(O.on=!1);var W=t.getRGB(l.stroke);O.on&&l.stroke&&(O.color=W.hex),q=((+g[\"stroke-opacity\"]+1||2)-1)*((+g.opacity+1||2)-1)*((+W.o+1||2)-1);var Y=.75*(i(l[\"stroke-width\"])||1);if(q=o(s(q,0),1),null==l[\"stroke-width\"]&&(Y=g[\"stroke-width\"]),l[\"stroke-width\"]&&(O.weight=Y),Y&&Y<1&&(q*=Y)&&(O.weight=1),O.opacity=q,l[\"stroke-linejoin\"]&&(O.joinstyle=l[\"stroke-linejoin\"]||\"miter\"),O.miterlimit=l[\"stroke-miterlimit\"]||8,l[\"stroke-linecap\"]&&(O.endcap=\"butt\"==l[\"stroke-linecap\"]?\"flat\":\"square\"==l[\"stroke-linecap\"]?\"square\":\"round\"),\"stroke-dasharray\"in l){var G={\"-\":\"shortdash\",\".\":\"shortdot\",\"-.\":\"shortdashdot\",\"-..\":\"shortdashdotdot\",\". \":\"dot\",\"- \":\"dash\",\"--\":\"longdash\",\"- .\":\"dashdot\",\"--.\":\"longdashdot\",\"--..\":\"longdashdotdot\"};O.dashstyle=G[e](l[\"stroke-dasharray\"])?G[l[\"stroke-dasharray\"]]:f}V&&u.appendChild(O)}if(\"text\"==T.type){T.paper.canvas.style.display=f;var H=T.paper.span,X=g.font&&g.font.match(/\\d+(?:\\.\\d*)?(?=px)/);v=H.style,g.font&&(v.font=g.font),g[\"font-family\"]&&(v.fontFamily=g[\"font-family\"]),g[\"font-weight\"]&&(v.fontWeight=g[\"font-weight\"]),g[\"font-style\"]&&(v.fontStyle=g[\"font-style\"]),X=i(g[\"font-size\"]||X&&X[0])||10,v.fontSize=100*X+\"px\",T.textpath.string&&(H.innerHTML=r(T.textpath.string).replace(/</g,\"&#60;\").replace(/&/g,\"&#38;\").replace(/\\n/g,\"<br>\"));var U=H.getBoundingClientRect();T.W=g.w=(U.right-U.left)/100,T.H=g.h=(U.bottom-U.top)/100,T.X=g.x,T.Y=g.y+T.H/2,(\"x\"in l||\"y\"in l)&&(T.path.v=t.format(\"m{0},{1}l{2},{1}\",a(g.x*y),a(g.y*y),a(g.x*y)+1));for(var $=[\"x\",\"y\",\"text\",\"font\",\"font-family\",\"font-weight\",\"font-style\",\"font-size\"],Z=0,Q=$.length;Z<Q;Z++)if($[Z]in l){T._.dirty=1;break}switch(g[\"text-anchor\"]){case\"start\":T.textpath.style[\"v-text-align\"]=\"left\",T.bbx=T.W/2;break;case\"end\":T.textpath.style[\"v-text-align\"]=\"right\",T.bbx=-T.W/2;break;default:T.textpath.style[\"v-text-align\"]=\"center\",T.bbx=0}T.textpath.style[\"v-text-kern\"]=!0}},S=function(e,a,s){e.attrs=e.attrs||{};e.attrs;var o=Math.pow,l=\"linear\",h=\".5 .5\";if(e.attrs.gradient=a,a=(a=r(a).replace(t._radial_gradient,function(t,e,r){return l=\"radial\",e&&r&&(e=i(e),r=i(r),o(e-.5,2)+o(r-.5,2)>.25&&(r=n.sqrt(.25-o(e-.5,2))*(2*(r>.5)-1)+.5),h=e+c+r),f})).split(/\\s*\\-\\s*/),\"linear\"==l){var u=a.shift();if(u=-i(u),isNaN(u))return null}var p=t._parseDots(a);if(!p)return null;if(e=e.shape||e.node,p.length){e.removeChild(s),s.on=!0,s.method=\"none\",s.color=p[0].color,s.color2=p[p.length-1].color;for(var d=[],g=0,x=p.length;g<x;g++)p[g].offset&&d.push(p[g].offset+c+p[g].color);s.colors=d.length?d.join():\"0% \"+s.color,\"radial\"==l?(s.type=\"gradientTitle\",s.focus=\"100%\",s.focussize=\"0 0\",s.focusposition=h,s.angle=0):(s.type=\"gradient\",s.angle=(270-u)%360),e.appendChild(s)}return 1},T=function(e,r){this[0]=this.node=e,e.raphael=!0,this.id=t._oid++,e.raphaelid=this.id,this.X=0,this.Y=0,this.attrs={},this.paper=r,this.matrix=t.matrix(),this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},A=t.el;T.prototype=A,A.constructor=T,A.transform=function(e){if(null==e)return this._.transform;var i,n=this.paper._viewBoxShift,a=n?\"s\"+[n.scale,n.scale]+\"-1-1t\"+[n.dx,n.dy]:f;n&&(i=e=r(e).replace(/\\.{3}|\\u2026/g,this._.transform||f)),t._extractTransform(this,a+e);var s,o=this.matrix.clone(),l=this.skew,h=this.node,u=~r(this.attrs.fill).indexOf(\"-\"),p=!r(this.attrs.fill).indexOf(\"url(\");if(o.translate(1,1),p||u||\"image\"==this.type)if(l.matrix=\"1 0 0 1\",l.offset=\"0 0\",s=o.split(),u&&s.noRotation||!s.isSimple){h.style.filter=o.toFilter();var d=this.getBBox(),g=this.getBBox(1),x=d.x-g.x,v=d.y-g.y;h.coordorigin=x*-y+c+v*-y,w(this,1,1,x,v,0)}else h.style.filter=f,w(this,s.scalex,s.scaley,s.dx,s.dy,s.rotate);else h.style.filter=f,l.matrix=r(o),l.offset=o.offset();return null!==i&&(this._.transform=i,t._extractTransform(this,i)),this},A.rotate=function(t,e,n){if(this.removed)return this;if(null!=t){if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this._.dirtyT=1,this.transform(this._.transform.concat([[\"r\",t,e,n]])),this}},A.translate=function(t,e){return this.removed?this:((t=r(t).split(h)).length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this._.bbox&&(this._.bbox.x+=t,this._.bbox.y+=e),this.transform(this._.transform.concat([[\"t\",t,e]])),this)},A.scale=function(t,e,n,a){if(this.removed)return this;if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3]),isNaN(n)&&(n=null),isNaN(a)&&(a=null)),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([[\"s\",t,e,n,a]])),this._.dirtyT=1,this},A.hide=function(){return!this.removed&&(this.node.style.display=\"none\"),this},A.show=function(){return!this.removed&&(this.node.style.display=f),this},A.auxGetBBox=t.el.getBBox,A.getBBox=function(){var t=this.auxGetBBox();if(this.paper&&this.paper._viewBoxShift){var e={},r=1/this.paper._viewBoxShift.scale;return e.x=t.x-this.paper._viewBoxShift.dx,e.x*=r,e.y=t.y-this.paper._viewBoxShift.dy,e.y*=r,e.width=t.width*r,e.height=t.height*r,e.x2=e.x+e.width,e.y2=e.y+e.height,e}return t},A._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y-this.H,width:this.W,height:this.H}},A.remove=function(){if(!this.removed&&this.node.parentNode){for(var e in this.paper.__set__&&this.paper.__set__.exclude(this),t.eve.unbind(\"raphael.*.*.\"+this.id),t._tear(this,this.paper),this.node.parentNode.removeChild(this.node),this.shape&&this.shape.parentNode.removeChild(this.shape),this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null;this.removed=!0}},A.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&\"none\"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,\"string\")){if(\"fill\"==r&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;for(var s=r.split(h),o={},l=0,c=s.length;l<c;l++)(r=s[l])in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],\"function\")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return c-1?o:o[s[0]]}if(this.attrs&&null==i&&t.is(r,\"array\")){for(o={},l=0,c=r.length;l<c;l++)o[r[l]]=this.attr(r[l]);return o}var f;for(var p in null!=i&&((f={})[r]=i),null==i&&t.is(r,\"object\")&&(f=r),f)u(\"raphael.attr.\"+p+\".\"+this.id,this,f[p]);if(f){for(p in this.paper.customAttributes)if(this.paper.customAttributes[e](p)&&f[e](p)&&t.is(this.paper.customAttributes[p],\"function\")){var d=this.paper.customAttributes[p].apply(this,[].concat(f[p]));for(var g in this.attrs[p]=f[p],d)d[e](g)&&(f[g]=d[g])}f.text&&\"text\"==this.type&&(this.textpath.string=f.text),C(this,f)}return this},A.toFront=function(){return!this.removed&&this.node.parentNode.appendChild(this.node),this.paper&&this.paper.top!=this&&t._tofront(this,this.paper),this},A.toBack=function(){return this.removed?this:(this.node.parentNode.firstChild!=this.node&&(this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild),t._toback(this,this.paper)),this)},A.insertAfter=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[e.length-1]),e.node.nextSibling?e.node.parentNode.insertBefore(this.node,e.node.nextSibling):e.node.parentNode.appendChild(this.node),t._insertafter(this,e,this.paper),this)},A.insertBefore=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[0]),e.node.parentNode.insertBefore(this.node,e.node),t._insertbefore(this,e,this.paper),this)},A.blur=function(e){var r=this.node.runtimeStyle,i=r.filter;return i=i.replace(g,f),0!=+e?(this.attrs.blur=e,r.filter=i+c+\" progid:DXImageTransform.Microsoft.Blur(pixelradius=\"+(+e||1.5)+\")\",r.margin=t.format(\"-{0}px 0 0 -{0}px\",a(+e||1.5))):(r.filter=i,r.margin=0,delete this.attrs.blur),this},t._engine.path=function(t,e){var r=k(\"shape\");r.style.cssText=v,r.coordsize=y+c+y,r.coordorigin=e.coordorigin;var i=new T(r,e),n={fill:\"none\",stroke:\"#000\"};t&&(n.path=t),i.type=\"path\",i.path=[],i.Path=f,C(i,n),e.canvas&&e.canvas.appendChild(r);var a=k(\"skew\");return a.on=!0,r.appendChild(a),i.skew=a,i.transform(f),i},t._engine.rect=function(e,r,i,n,a,s){var o=t._rectPath(r,i,n,a,s),l=e.path(o),h=l.attrs;return l.X=h.x=r,l.Y=h.y=i,l.W=h.width=n,l.H=h.height=a,h.r=s,h.path=o,l.type=\"rect\",l},t._engine.ellipse=function(t,e,r,i,n){var a=t.path();a.attrs;return a.X=e-i,a.Y=r-n,a.W=2*i,a.H=2*n,a.type=\"ellipse\",C(a,{cx:e,cy:r,rx:i,ry:n}),a},t._engine.circle=function(t,e,r,i){var n=t.path();n.attrs;return n.X=e-i,n.Y=r-i,n.W=n.H=2*i,n.type=\"circle\",C(n,{cx:e,cy:r,r:i}),n},t._engine.image=function(e,r,i,n,a,s){var o=t._rectPath(i,n,a,s),l=e.path(o).attr({stroke:\"none\"}),h=l.attrs,u=l.node,c=u.getElementsByTagName(\"fill\")[0];return h.src=r,l.X=h.x=i,l.Y=h.y=n,l.W=h.width=a,l.H=h.height=s,h.path=o,l.type=\"image\",c.parentNode==u&&u.removeChild(c),c.rotate=!0,c.src=r,c.type=\"tile\",l._.fillpos=[i,n],l._.fillsize=[a,s],u.appendChild(c),w(l,1,1,0,0,0),l},t._engine.text=function(e,i,n,s){var o=k(\"shape\"),l=k(\"path\"),h=k(\"textpath\");i=i||0,n=n||0,s=s||\"\",l.v=t.format(\"m{0},{1}l{2},{1}\",a(i*y),a(n*y),a(i*y)+1),l.textpathok=!0,h.string=r(s),h.on=!0,o.style.cssText=v,o.coordsize=y+c+y,o.coordorigin=\"0 0\";var u=new T(o,e),p={fill:\"#000\",stroke:\"none\",font:t._availableAttrs.font,text:s};u.shape=o,u.path=l,u.textpath=h,u.type=\"text\",u.attrs.text=r(s),u.attrs.x=i,u.attrs.y=n,u.attrs.w=1,u.attrs.h=1,C(u,p),o.appendChild(h),o.appendChild(l),e.canvas.appendChild(o);var d=k(\"skew\");return d.on=!0,o.appendChild(d),u.skew=d,u.transform(f),u},t._engine.setSize=function(e,r){var i=this.canvas.style;return this.width=e,this.height=r,e==+e&&(e+=\"px\"),r==+r&&(r+=\"px\"),i.width=e,i.height=r,i.clip=\"rect(0 \"+e+\" \"+r+\" 0)\",this._viewBox&&t._engine.setViewBox.apply(this,this._viewBox),this},t._engine.setViewBox=function(e,r,i,n,a){t.eve(\"raphael.setViewBox\",this,this._viewBox,[e,r,i,n,a]);var s,o,l=this.getSize(),h=l.width,u=l.height;return a&&(i*(s=u/n)<h&&(e-=(h-i*s)/2/s),n*(o=h/i)<u&&(r-=(u-n*o)/2/o)),this._viewBox=[e,r,i,n,!!a],this._viewBoxShift={dx:-e,dy:-r,scale:l},this.forEach(function(t){t.transform(\"...\")}),this},t._engine.initWin=function(t){var e=t.document;e.styleSheets.length<31?e.createStyleSheet().addRule(\".rvml\",\"behavior:url(#default#VML)\"):e.styleSheets[0].addRule(\".rvml\",\"behavior:url(#default#VML)\");try{!e.namespaces.rvml&&e.namespaces.add(\"rvml\",\"urn:schemas-microsoft-com:vml\"),k=function(t){return e.createElement(\"<rvml:\"+t+' class=\"rvml\">')}}catch(t){k=function(t){return e.createElement(\"<\"+t+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">')}}},t._engine.initWin(t._g.win),t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e.container,i=e.height,n=e.width,a=e.x,s=e.y;if(!r)throw new Error(\"VML container not found.\");var o=new t._Paper,l=o.canvas=t._g.doc.createElement(\"div\"),h=l.style;return a=a||0,s=s||0,n=n||512,i=i||342,o.width=n,o.height=i,n==+n&&(n+=\"px\"),i==+i&&(i+=\"px\"),o.coordsize=216e5+c+216e5,o.coordorigin=\"0 0\",o.span=t._g.doc.createElement(\"span\"),o.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\",l.appendChild(o.span),h.cssText=t.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\",n,i),1==r?(t._g.doc.body.appendChild(l),h.left=a+\"px\",h.top=s+\"px\",h.position=\"absolute\"):r.firstChild?r.insertBefore(l,r.firstChild):r.appendChild(l),o.renderfix=function(){},o},t.prototype.clear=function(){t.eve(\"raphael.clear\",this),this.canvas.innerHTML=f,this.span=t._g.doc.createElement(\"span\"),this.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\",this.canvas.appendChild(this.span),this.bottom=this.top=null},t.prototype.remove=function(){for(var e in t.eve(\"raphael.remove\",this),this.canvas.parentNode.removeChild(this.canvas),this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null;return!0};var M=t.st;for(var E in A)A[e](E)&&!M[e](E)&&(M[E]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(E))}}.apply(e,i))||(t.exports=n)}])});","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Gregory Ristow (2015)\nimport {ICoordinates} from \"./types/common\";\nimport {ISVGAttributesStackItem, ISVGContextAttributes, ISVGIgnoreAttributes} from \"./types/svgcontext\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {Merge, Prefix} from \"./flow\";\n\nconst attrNamesToIgnoreMap = {\n  path: {\n    x: true,\n    y: true,\n    width: true,\n    height: true,\n  } as ISVGIgnoreAttributes,\n  rect: {} as ISVGIgnoreAttributes,\n  text: {\n    width: true,\n    height: true,\n  } as ISVGIgnoreAttributes,\n} as Record<string, ISVGIgnoreAttributes>;\n\n{\n  const fontAttrNamesToIgnore: ISVGIgnoreAttributes = {\n    'font-family': true,\n    'font-weight': true,\n    'font-style': true,\n    'font-size': true,\n  } as ISVGIgnoreAttributes;\n\n  Merge(attrNamesToIgnoreMap.rect, fontAttrNamesToIgnore);\n  Merge(attrNamesToIgnoreMap.path, fontAttrNamesToIgnore);\n}\n\nexport class SVGContext {\n  lineWidth: number;\n  svg: SVGElement;\n\n  private readonly svgNS: string;\n  private readonly groups: Element[];\n  private readonly state: ISVGContextAttributes;\n  private readonly attributes: ISVGContextAttributes;\n  private readonly background_attributes: ISVGContextAttributes;\n  private readonly shadow_attributes: ISVGContextAttributes;\n\n  private element: HTMLElement;\n  private parent: Element;\n  private path: string;\n  private pen: ICoordinates;\n  private fontSize: number;\n  private state_stack: ISVGAttributesStackItem[];\n  private ie: boolean;\n  private width: number;\n  private height: number;\n\n  constructor(element: HTMLElement) {\n    // element is the parent DOM object\n    this.element = element;\n    // Create the SVG in the SVG namespace:\n    this.svgNS = 'http://www.w3.org/2000/svg';\n    const svg = this.create('svg');\n    // Add it to the canvas:\n    this.element.appendChild(svg);\n\n    // Point to it:\n    this.svg = svg;\n    this.groups = [this.svg]; // Create the group stack\n    this.parent = this.svg;\n\n    this.path = '';\n    this.pen = {x: NaN, y: NaN};\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: {x: 1, y: 1},\n      'font-family': 'Arial',\n      'font-size': '8pt',\n      'font-weight': 'normal',\n    } as ISVGContextAttributes;\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    } as ISVGContextAttributes;\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    } as ISVGContextAttributes;\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    } as ISVGContextAttributes;\n\n    this.state_stack = [];\n\n    // Test for Internet Explorer\n    this.iePolyfill();\n  }\n\n  create(svgElementType: string): SVGElement|SVGTextElement {\n    return document.createElementNS(this.svgNS, svgElementType) as SVGElement | SVGTextElement;\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls: string, id?: string, attrs?: Record<string, boolean>): SVGElement|SVGTextElement {\n    const group = this.create('g');\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', Prefix(cls));\n    if (id) group.setAttribute('id', Prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    return group;\n  }\n\n  closeGroup(): void {\n    this.groups.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem: SVGElement | SVGTextElement): void {\n    this.parent.appendChild(elem);\n  }\n\n  // Tests if the browser is Internet Explorer; if it is,\n  // we do some tricks to improve text layout.  See the\n  // note at ieMeasureTextFix() for details.\n  iePolyfill(): void {\n    if (typeof (navigator) !== 'undefined') {\n      this.ie = (\n        /MSIE 9/i.test(navigator.userAgent) ||\n        /MSIE 10/i.test(navigator.userAgent) ||\n        /rv:11\\.0/i.test(navigator.userAgent) ||\n        /Trident/i.test(navigator.userAgent)\n      );\n    }\n  }\n\n  // ### Styling & State Methods:\n\n  setFont(family: string, size: number, weight: string): this {\n    // Unlike canvas, in SVG italic is handled by font-style,\n    // not weight. So: we search the weight argument and\n    // apply bold and italic to weight and style respectively.\n    let bold = false;\n    let italic = false;\n    let style = 'normal';\n    // Weight might also be a number (200, 400, etc...) so we\n    // test its type to be sure we have access to String methods.\n    if (typeof weight === 'string') {\n      // look for \"italic\" in the weight:\n      if (weight.indexOf('italic') !== -1) {\n        weight = weight.replace(/italic/g, '');\n        italic = true;\n      }\n      // look for \"bold\" in weight\n      if (weight.indexOf('bold') !== -1) {\n        weight = weight.replace(/bold/g, '');\n        bold = true;\n      }\n      // remove any remaining spaces\n      weight = weight.replace(/ /g, '');\n    }\n    weight = bold ? 'bold' : weight;\n    weight = (typeof weight === 'undefined' || weight === '') ? 'normal' : weight;\n\n    style = italic ? 'italic' : style;\n\n    const fontAttributes = {\n      'font-family': family,\n      'font-size': size + 'pt',\n      'font-weight': weight,\n      'font-style': style,\n    };\n\n    // Store the font size so that if the browser is Internet\n    // Explorer we can fix its calculations of text width.\n    this.fontSize = Number(size);\n\n    Merge(this.attributes, fontAttributes);\n    Merge(this.state, fontAttributes);\n\n    return this;\n  }\n\n  setRawFont(font: string): this {\n    font = font.trim();\n    // Assumes size first, splits on space -- which is presently\n    // how all existing modules are calling this.\n    const fontArray = font.split(' ');\n\n    this.attributes['font-family'] = fontArray[1];\n    this.state['font-family'] = fontArray[1];\n\n    this.attributes['font-size'] = fontArray[0];\n    this.state['font-size'] = fontArray[0];\n\n    // Saves fontSize for IE polyfill\n    this.fontSize = Number(fontArray[0].match(/\\d+/));\n    return this;\n  }\n\n  setFillStyle(style: string): this {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style: string): this {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style: string): this {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style: string): this {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur: number): this {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width: number): void {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n  setLineDash(lineDash: number[]|string): this {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      lineDash = (lineDash as number[]).join(', ');\n      this.attributes['stroke-dasharray'] = lineDash;\n      return this;\n    } else {\n      throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  setLineCap(lineCap: string): this {\n    this.attributes['stroke-linecap'] = lineCap;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- seperate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width: string, height: string): this {\n    this.width = +width;\n    this.height = +height;\n    this.element.style.width = width;\n\n    this.svg.style.width = width;\n    this.svg.style.height = height;\n\n    const attributes = {\n      width: +width,\n      height: +height,\n    } as ISVGContextAttributes;\n\n    this.applyAttributes(this.svg, attributes);\n    this.scale(this.state.scale.x, this.state.scale.y);\n    return this;\n  }\n\n  scale(x: number, y: number): this {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas or Raphael contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scale = {x, y};\n    const visibleWidth = this.width / x;\n    const visibleHeight = this.height / y;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  setViewBox(...args: number[]): void {\n    // Override for \"x y w h\" style:\n    if (args.length === 1) {\n      const [viewBox] = args;\n      this.svg.setAttribute('viewBox', viewBox.toString());\n    } else {\n      const [xMin, yMin, width, height] = args;\n      const viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n  applyAttributes(element: SVGElement, attributes: ISVGContextAttributes): SVGElement {\n    const attrNamesToIgnore = attrNamesToIgnoreMap[element.nodeName];\n    Object\n      .keys(attributes)\n      .forEach(propertyName => {\n        if (attrNamesToIgnore && attrNamesToIgnore[propertyName]) {\n          return;\n        }\n        element.setAttributeNS(null, propertyName, attributes[propertyName]);\n      });\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear(): void {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed:\n    this.scale(this.state.scale.x, this.state.scale.y);\n  }\n\n  // ## Rectangles:\n\n  rect(x: number, y: number, width: number, height: number, attributes?: ISVGContextAttributes): this {\n    // Avoid invalid negative height attribs by\n    // flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    // Create the rect & style it:\n    const rectangle = this.create('rect');\n    if (typeof attributes === 'undefined') {\n      attributes = {\n        fill: 'none',\n        'stroke-width': this.lineWidth,\n        stroke: 'black',\n      } as ISVGContextAttributes;\n    }\n\n    Merge(attributes, {\n      x,\n      y,\n      width,\n      height,\n    } as ISVGContextAttributes);\n\n    this.applyAttributes(rectangle, attributes);\n\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x: number, y: number, width: number, height: number): this {\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    this.rect(x, y, width, height, this.attributes);\n    return this;\n  }\n\n  clearRect(x: number, y: number, width: number, height: number): this {\n    // TODO(GCR): Improve implementation of this...\n    // Currently it draws a box of the background color, rather\n    // than creating alpha through lower z-levels.\n    //\n    // See the implementation of this in SVGKit:\n    // http://sourceforge.net/projects/svgkit/\n    // as a starting point.\n    //\n    // Adding a large number of transform paths (as we would\n    // have to do) could be a real performance hit.  Since\n    // tabNote seems to be the only module that makes use of this\n    // it may be worth creating a seperate tabStave that would\n    // draw lines around locations of tablature fingering.\n    //\n\n    this.rect(x, y, width, height, this.background_attributes);\n    return this;\n  }\n\n  // ## Paths:\n\n  beginPath(): this {\n    this.path = '';\n    this.pen.x = NaN;\n    this.pen.y = NaN;\n    return this;\n  }\n\n  moveTo(x: number, y: number): this {\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x: number, y: number): this {\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number): this {\n    this.path += 'C' +\n      x1 + ' ' +\n      y1 + ',' +\n      x2 + ' ' +\n      y2 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1: number, y1: number, x: number, y: number): this {\n    this.path += 'Q' +\n      x1 + ' ' +\n      y1 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, antiClockwise: boolean): this {\n    function normalizeAngle(angle: number) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x: number, y: number, radius: number, startAngle: number, endAngle: number, antiClockwise: boolean): void {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ' ' + y1 + ' A' +\n      radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' +\n      x2 + ' ' + y2;\n    if (!isNaN(this.pen.x) && !isNaN(this.pen.y)) {\n      this.path += 'M' + this.pen.x + ' ' + this.pen.y;\n    }\n  }\n\n  closePath(): this {\n    this.path += 'Z';\n\n    return this;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow(): this {\n    // Calculate the width & paths of the glow:\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      // Stroke at varying widths to create effect of gaussian blur:\n      for (let i = 1; i <= num_paths; i++) {\n        const attributes = {\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +((sa.width * 0.4) / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n        } as ISVGContextAttributes;\n\n        const path = this.create('path');\n        attributes.d = this.path;\n        this.applyAttributes(path, attributes);\n        this.add(path);\n      }\n    }\n    return this;\n  }\n\n  fill(attributes?: ISVGContextAttributes): this {\n    // If our current path is set to glow, make it glow\n    this.glow();\n\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = {} as ISVGContextAttributes;\n      Merge(attributes, this.attributes);\n      attributes.stroke = 'none';\n    }\n\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke(): this {\n    // If our current path is set to glow, make it glow.\n    this.glow();\n\n    const path = this.create('path');\n    const attributes = {} as ISVGContextAttributes;\n    Merge(attributes, this.attributes);\n    attributes.fill = 'none';\n    attributes['stroke-width'] = this.lineWidth;\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text: string): DOMRect {\n    const txt = this.create('text') as SVGTextElement;\n    if (typeof (txt.getBBox) !== 'function') {\n      return {x: 0, y: 0, width: 0, height: 0} as DOMRect;\n    }\n\n    txt.textContent = text;\n    this.applyAttributes(txt, this.attributes);\n\n    // Temporarily add it to the document for measurement.\n    this.svg.appendChild(txt);\n\n    let bbox = txt.getBBox();\n    if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n      bbox = this.ieMeasureTextFix(bbox);\n    }\n\n    this.svg.removeChild(txt);\n    return bbox;\n  }\n\n  ieMeasureTextFix(bbox?: DOMRect): DOMRect {\n    // Internet Explorer over-pads text in italics,\n    // resulting in giant width estimates for measureText.\n    // To fix this, we use this formula, tested against\n    // ie 11:\n    // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n    // And then subtract the overestimate from calculated width.\n\n    const fontSize = Number(this.fontSize);\n    const m = 1.196;\n    const b = 1.9598;\n    const widthCorrection = (m * fontSize) + b;\n    const width = bbox.width - widthCorrection;\n    const height = bbox.height - 1.5;\n\n    // Get non-protected copy:\n    return {\n      x: bbox.x,\n      y: bbox.y,\n      width,\n      height,\n    } as DOMRect;\n  }\n\n  fillText(text: string, x: number, y: number): void {\n    if (!text || text.length <= 0) {\n      return;\n    }\n    const attributes = {} as ISVGContextAttributes;\n    Merge(attributes, this.attributes);\n    attributes.stroke = 'none';\n    attributes.x = x;\n    attributes.y = y;\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n  }\n\n  save(): this {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n        scale: this.state.scale,\n      } as ISVGContextAttributes,\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      } as ISVGContextAttributes,\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      } as ISVGContextAttributes,\n      lineWidth: this.lineWidth,\n    });\n    return this;\n  }\n\n  restore(): this {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state['font-family'] = state.state['font-family'];\n    this.state['font-weight'] = state.state['font-weight'];\n    this.state['font-style'] = state.state['font-style'];\n    this.state['font-size'] = state.state['font-size'];\n    this.state.scale = state.state.scale;\n\n    this.attributes['font-family'] = state.attributes['font-family'];\n    this.attributes['font-weight'] = state.attributes['font-weight'];\n    this.attributes['font-style'] = state.attributes['font-style'];\n    this.attributes['font-size'] = state.attributes['font-size'];\n\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n\n    this.lineWidth = state.lineWidth;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport {StaveModifier} from './stavemodifier';\nimport {Stave} from \"./stave\";\nimport {IFont} from \"./types/font\";\n\nexport class StaveSection extends StaveModifier {\n  private section: string;\n  private shift_x: number;\n  private shift_y: number;\n  private font: IFont;\n\n  static get CATEGORY(): string {\n    return 'stavesection';\n  }\n\n  constructor(section: string, x: number, shift_y: number) {\n    super();\n    this.setAttribute('type', 'StaveSection');\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'sans-serif',\n      size: 12,\n      weight: 'bold',\n    } as IFont;\n  }\n\n  getCategory(): string {\n    return StaveSection.CATEGORY;\n  }\n\n  setStaveSection(section: string): this {\n    this.section = section;\n    return this;\n  }\n\n  setShiftX(x: number): this {\n    this.shift_x = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.shift_y = y;\n    return this;\n  }\n\n  draw(stave?: Stave, shift_x?: number): this {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setLineWidth(2); //ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.section).width;\n    let width = text_width + 6;  // add left & right padding\n    if (width < 18) width = 18;\n    const height = 20;\n    //  Seems to be a good default y\n    const y = stave.getYForTopText(3) + this.shift_y;\n    let x = this.x + shift_x;\n    ctx.beginPath();\n    ctx.setLineWidth(2); //ctx.lineWidth = 2;\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n    x += (width - text_width) / 2;\n    ctx.fillText('' + this.section, x, y + 16);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file handles a registry of text font metric information, so all\n// VEX modules can take advantage of font metrics in a uniform way.\n//\nimport {PetalumaScriptTextMetrics} from './fonts/petalumascript_textmetrics';\nimport {RobotoSlabTextMetrics} from './fonts/robotoslab_textmetrics';\nimport {IFont} from \"./types/font\";\nimport {ITextFontAttributes, ITextFontMetrics, ITextFontRegistry} from \"./types/textfont\";\nimport {RuntimeError} from \"./runtimeerror\";\nimport {LOG, Merge} from \"./flow\";\n\n// To enable logging for this class. Set `Vex.Flow.TextFont.DEBUG` to `true`.\nfunction L(...args: unknown[]) {\n  if (TextFont.DEBUG) LOG('Vex.Flow.TextFont', args);\n}\n\nexport class TextFont {\n  static debug: boolean;\n\n  [name: string]: unknown;\n\n  resolution: never;\n  name: string;\n  glyphs: never;\n  family: string;\n  serifs: boolean;\n  monospaced: boolean;\n  italic: boolean;\n  bold: boolean;\n  superscriptOffset: number;\n  subscriptOffset: number;\n  description: string;\n  maxSizeGlyph: string;\n\n  private static registryInstance: ITextFontRegistry[];\n\n\n  private size: number;\n  private attrs: ITextFontAttributes;\n\n  static get CATEGORY(): string {\n    return 'textFont';\n  }\n\n  static get DEBUG(): boolean {\n    return TextFont.debug;\n  }\n\n  static set DEBUG(val: boolean) {\n    TextFont.debug = val;\n  }\n\n  // ### fontRegistry\n  // Getter of an array of available fonts.  Applications may register their\n  // own fonts and the metrics for those fonts will be available to the\n  // application.\n  static get fontRegistry(): ITextFontRegistry[] {\n    if (!TextFont.registryInstance) {\n      TextFont.registryInstance = [];\n      TextFont.registryInstance.push({\n        name: 'RobotoSlab',\n        resolution: RobotoSlabTextMetrics.resolution,\n        glyphs: RobotoSlabTextMetrics.glyphs,\n        family: RobotoSlabTextMetrics.fontFamily,\n        serifs: true,\n        monospaced: false,\n        italic: false,\n        bold: false,\n        maxSizeGlyph: 'H',\n        superscriptOffset: 0.66,\n        subscriptOffset: 0.66,\n        description: 'Default serif text font to pair with Bravura/Gonville engraving font',\n      } as ITextFontRegistry);\n      TextFont.registryInstance.push({\n        name: 'PetalumaScript',\n        resolution: PetalumaScriptTextMetrics.resolution,\n        glyphs: PetalumaScriptTextMetrics.glyphs,\n        family: PetalumaScriptTextMetrics.fontFamily,\n        serifs: false,\n        monospaced: false,\n        italic: false,\n        bold: false,\n        maxSizeGlyph: 'H',\n        superscriptOffset: 0.66,\n        subscriptOffset: 0.66,\n        description: 'Default sans-serif text font to pair with Petaluma engraving font',\n      });\n    }\n    return TextFont.registryInstance;\n  }\n\n  // ### getFontFamilies\n  // Web font files are generally distributed per weight and style (bold, italic).\n  // return the family with the attributes that are available for that font.\n  // We assume descriptions are the same for different weights/styles.\n  static getFontFamilies(): ITextFontRegistry[] {\n    const hash: Record<string, ITextFontRegistry> = {};\n    const rv: ITextFontRegistry[] = [];\n    TextFont.fontRegistry.forEach((font) => {\n      if (!hash[font.family]) {\n        hash[font.family] = {\n          family: font.family,\n          description: font.description,\n          bold: font.bold,\n          serifs: font.serifs,\n          italic: font.italic\n        } as ITextFontRegistry;\n      } else {\n        ['bold', 'italic', 'monospaced', 'serifs'].forEach((attr) => {\n          if (font[attr]) {\n            hash[font.family][attr] = true;\n          }\n        });\n      }\n    });\n    const keys = Object.keys(hash);\n    keys.forEach((key) => {\n      rv.push(hash[key]);\n    });\n    return rv;\n  }\n\n  // ### fontWeightToBold\n  // return true if the font weight indicates we desire a 'bold'\n  // used in getTextFontFromVexFontData\n  static fontWeightToBold(fw: string): boolean {\n    if (!fw) {\n      return false;\n    }\n    if (isNaN(parseInt(fw, 10))) {\n      return fw.toLowerCase() === 'bold';\n    }\n    // very subjective...\n    return parseInt(fw, 10) >= 600;\n  }\n\n  // ### fontStyleToItalic\n  // return true if the font style indicates we desire 'italic' style\n  // used in getTextFontFromVexFontData\n  static fontStyleToItalic(fs: string): boolean {\n    return (fs && typeof (fs) === 'string' && fs.toLowerCase() === 'italic');\n  }\n\n  // ### getTextFontFromVexFontData\n  // Find the font that most closely matches the parameters from the given font data.\n  // Primarily we look for font family, also bold and italic attributes.  This\n  // method will always return a fallback font if there are no matches.\n  static getTextFontFromVexFontData(fd: IFont): TextFont {\n    const fallback = TextFont.fontRegistry[0];\n    let candidates: ITextFontRegistry[] = [];\n    const families = fd.family.split(',');\n    for (let i = 0; i < families.length; ++i) {\n      const family = families[i];\n      candidates = TextFont.fontRegistry.filter((font) => font.family === family);\n      if (candidates.length) {\n        break;\n      }\n    }\n    if (candidates.length === 0) {\n      return new TextFont(fallback);\n    }\n    if (candidates.length === 1) {\n      return new TextFont(candidates[0]);\n    }\n    const bold = TextFont.fontWeightToBold(fd.weight);\n    const italic = TextFont.fontStyleToItalic(fd.style);\n\n    const perfect = candidates.find((font) => font.bold === bold && font.italic === italic);\n    if (perfect) {\n      return new TextFont(perfect);\n    }\n    const ok = candidates.find((font) => font.italic === italic || font.bold === bold);\n    if (ok) {\n      return new TextFont(ok);\n    }\n    return new TextFont(candidates[0]);\n  }\n\n  static getFontDataByName(fontName: string): ITextFontRegistry {\n    return TextFont.fontRegistry.find((fd) => fd.name === fontName);\n  }\n\n  // ### registerFont\n  // Applications may register their own fonts and the metrics, and those metrics\n  // will be available to the application for formatting.  See fontRegistry\n  // for format of font metrics.  Metrics can be generated from any font file\n  // using font_fontgen.js in the tools/smufl directory.\n  static registerFont(fontData: ITextFontRegistry, overwrite?: boolean): void {\n    // Get via external reference to make sure initial object is created\n    const reg = TextFont.fontRegistry;\n    const exists = reg.find((td) => fontData.name === td.name);\n    if (exists && overwrite) {\n      TextFont.registryInstance = TextFont.fontRegistry.filter((fd) => fd.name !== exists.name);\n    }\n    if (!exists) {\n      L('registering font ' + fontData.name);\n      TextFont.registryInstance.push(fontData);\n    }\n  }\n\n  // ## Prototype Methods\n  //\n  // create a font instance.\n  // The preferred method for returning an instance of this class is via\n  // getTextFontFromVexFontData\n  constructor(params: ITextFontRegistry) {\n    this.attrs = {'type': 'TextFont'};\n    if (!params.name) {\n      throw new RuntimeError('BadArgument', 'Font constructor must specify a name');\n    }\n    const fontData = params.glyphs ? params : TextFont.getFontDataByName(params.name);\n    if (!fontData) {\n      if (params.glyphs && params.resolution) {\n        TextFont.registerFont(params);\n      } else {\n        throw new RuntimeError('BadArgument', 'Unknown font, must have glyph metrics and resolution');\n      }\n    } else {\n      Merge<ITextFontRegistry>(this, fontData);\n    }\n    Merge<ITextFontRegistry>(this, params);\n\n    if (!this.size) {\n      this.size = 14;\n    }\n    if (!this.maxSizeGlyph) {\n      this.maxSizeGlyph = 'H';\n    }\n  }\n\n  getMetricForCharacter(c: string): ITextFontMetrics {\n    if (this.glyphs[c]) {\n      return this.glyphs[c];\n    }\n    return this.glyphs[this.maxSizeGlyph];\n  }\n\n  get maxHeight(): number {\n    const glyph = this.getMetricForCharacter(this.maxSizeGlyph);\n    return (glyph.ha / this.resolution) * this.pointsToPixels;\n  }\n\n  getWidthForCharacter(c: string): number {\n    const metric = this.getMetricForCharacter(c);\n    if (!metric) {\n      return 0.65 * this.pointsToPixels;\n    }\n    return (metric.advanceWidth / this.resolution) * this.pointsToPixels;\n  }\n\n  // ### pointsToPixels\n  // The font size is specified in points, convert to 'pixels' in the svg space\n  get pointsToPixels(): number {\n    return (this.size / 72) / (1 / 96);\n  }\n\n  setFontSize(size: number): this {\n    this.size = size;\n    return this;\n  }\n}\n"],"sourceRoot":""}